androidx.wear.tiles.renderer.internal.ResourceResolvers
<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>
<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>
<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>
    void <init>(androidx.wear.tiles.proto.ResourceProto$Resources, androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver, androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        androidx.wear.tiles.proto.ResourceProto$Resources r1;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver r2;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver r3;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: androidx.wear.tiles.proto.ResourceProto$Resources;

        r2 := @parameter1: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver;

        r3 := @parameter2: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources> = r1;

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver> = r2;

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver> = r3;

        return;
    }

    public static androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder builder(androidx.wear.tiles.proto.ResourceProto$Resources)
    {
        androidx.wear.tiles.proto.ResourceProto$Resources r0;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder $r1;

        r0 := @parameter0: androidx.wear.tiles.proto.ResourceProto$Resources;

        $r1 = new androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder;

        specialinvoke $r1.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: void <init>(androidx.wear.tiles.proto.ResourceProto$Resources)>(r0);

        return $r1;
    }

    public boolean hasPlaceholderDrawable(java.lang.String)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: java.lang.String getPlaceholderResourceId(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.graphics.drawable.Drawable getPlaceholderDrawableOrThrow(java.lang.String) throws androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        java.lang.String r1, r2, $r19, $r25;
        androidx.wear.tiles.proto.ResourceProto$ImageResource r3;
        androidx.wear.tiles.proto.ResourceProto$Resources $r4;
        java.util.Map $r5;
        java.lang.Object $r6;
        boolean $z0, $z1;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver $r8, r27;
        androidx.wear.tiles.proto.ResourceProto$InlineImageResource $r9;
        android.graphics.drawable.Drawable $r10, $r13;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver $r11, r26;
        androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId $r12;
        java.lang.StringBuilder $r16, $r17, $r18, $r22, $r23, $r24, r28, r30;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException r29, r32;
        java.lang.IllegalArgumentException r31;
        java.lang.Throwable r33, r34;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: java.lang.String getPlaceholderResourceId(java.lang.String)>(r1);

        if r2 != null goto label1;

        r29 = new androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a placeholder resource.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r29.<androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String)>($r25);

        r33 = (java.lang.Throwable) r29;

        throw r33;

     label1:
        $r4 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>;

        $r5 = virtualinvoke $r4.<androidx.wear.tiles.proto.ResourceProto$Resources: java.util.Map getIdToImageMap()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (androidx.wear.tiles.proto.ResourceProto$ImageResource) $r6;

        if r3 != null goto label2;

        r31 = new java.lang.IllegalArgumentException;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined in resources bundle");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw r31;

     label2:
        $z0 = virtualinvoke r3.<androidx.wear.tiles.proto.ResourceProto$ImageResource: boolean hasAndroidResourceByResId()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>;

        if $r11 == null goto label3;

        r26 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>;

        $r12 = virtualinvoke r3.<androidx.wear.tiles.proto.ResourceProto$ImageResource: androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId getAndroidResourceByResId()>();

        $r13 = interfaceinvoke r26.<androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver: android.graphics.drawable.Drawable getDrawableOrThrow(androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId)>($r12);

        return $r13;

     label3:
        $z1 = virtualinvoke r3.<androidx.wear.tiles.proto.ResourceProto$ImageResource: boolean hasInlineResource()>();

        if $z1 == 0 goto label4;

        $r8 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>;

        if $r8 == null goto label4;

        r27 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>;

        $r9 = virtualinvoke r3.<androidx.wear.tiles.proto.ResourceProto$ImageResource: androidx.wear.tiles.proto.ResourceProto$InlineImageResource getInlineResource()>();

        $r10 = interfaceinvoke r27.<androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver: android.graphics.drawable.Drawable getDrawableOrThrow(androidx.wear.tiles.proto.ResourceProto$InlineImageResource)>($r9);

        return $r10;

     label4:
        r32 = new androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException;

        specialinvoke r32.<androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String)>("Can\'t find resolver for image resource.");

        r34 = (java.lang.Throwable) r32;

        throw r34;
    }

    public com.google.common.util.concurrent.ListenableFuture getDrawable(java.lang.String)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        java.lang.String r1, $r10, $r23;
        androidx.wear.tiles.proto.ResourceProto$ImageResource r2;
        androidx.wear.tiles.proto.ResourceProto$Resources $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r20, $r21, $r22, r27, r29;
        com.google.common.util.concurrent.ListenableFuture $r11, $r14, $r17, $r24;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver $r12, r26;
        androidx.wear.tiles.proto.ResourceProto$InlineImageResource $r13;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver $r15, r25;
        androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId $r16;
        java.lang.IllegalArgumentException r28;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException r30;
        java.lang.Throwable r31;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>;

        $r4 = virtualinvoke $r3.<androidx.wear.tiles.proto.ResourceProto$Resources: java.util.Map getIdToImageMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.wear.tiles.proto.ResourceProto$ImageResource) $r5;

        if r2 != null goto label1;

        r28 = new java.lang.IllegalArgumentException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined in resources bundle");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        $r24 = staticinvoke <androidx.wear.tiles.renderer.internal.ResourceResolvers: com.google.common.util.concurrent.ListenableFuture createFailedFuture(java.lang.Throwable)>(r28);

        return $r24;

     label1:
        $z0 = virtualinvoke r2.<androidx.wear.tiles.proto.ResourceProto$ImageResource: boolean hasAndroidResourceByResId()>();

        if $z0 == 0 goto label2;

        $r15 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>;

        if $r15 == null goto label2;

        r25 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>;

        $r16 = virtualinvoke r2.<androidx.wear.tiles.proto.ResourceProto$ImageResource: androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId getAndroidResourceByResId()>();

        $r17 = interfaceinvoke r25.<androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver: com.google.common.util.concurrent.ListenableFuture getDrawable(androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId)>($r16);

        return $r17;

     label2:
        $z1 = virtualinvoke r2.<androidx.wear.tiles.proto.ResourceProto$ImageResource: boolean hasInlineResource()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>;

        if $r12 == null goto label3;

        r26 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>;

        $r13 = virtualinvoke r2.<androidx.wear.tiles.proto.ResourceProto$ImageResource: androidx.wear.tiles.proto.ResourceProto$InlineImageResource getInlineResource()>();

        $r14 = interfaceinvoke r26.<androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver: com.google.common.util.concurrent.ListenableFuture getDrawable(androidx.wear.tiles.proto.ResourceProto$InlineImageResource)>($r13);

        return $r14;

     label3:
        r30 = new androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find resolver for image resource ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String)>($r10);

        r31 = (java.lang.Throwable) r30;

        $r11 = staticinvoke <androidx.wear.tiles.renderer.internal.ResourceResolvers: com.google.common.util.concurrent.ListenableFuture createFailedFuture(java.lang.Throwable)>(r31);

        return $r11;
    }

    public boolean canImageBeTinted(java.lang.String)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        java.lang.String r1, $r11;
        androidx.wear.tiles.proto.ResourceProto$ImageResource r2;
        androidx.wear.tiles.proto.ResourceProto$Resources $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>;

        $r4 = virtualinvoke $r3.<androidx.wear.tiles.proto.ResourceProto$Resources: java.util.Map getIdToImageMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.wear.tiles.proto.ResourceProto$ImageResource) $r5;

        if r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined in resources bundle");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $z0 = virtualinvoke r2.<androidx.wear.tiles.proto.ResourceProto$ImageResource: boolean hasAndroidResourceByResId()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private java.lang.String getPlaceholderResourceId(java.lang.String)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers r0;
        java.lang.String r1, $r11;
        androidx.wear.tiles.proto.ResourceProto$ImageResource r2;
        androidx.wear.tiles.proto.ResourceProto$Resources $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>;

        $r4 = virtualinvoke $r3.<androidx.wear.tiles.proto.ResourceProto$Resources: java.util.Map getIdToImageMap()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.wear.tiles.proto.ResourceProto$ImageResource) $r5;

        if r2 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not defined in resources bundle");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        return null;
    }

    static com.google.common.util.concurrent.ListenableFuture createImmediateFuture(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.concurrent.futures.ResolvableFuture r1;

        r0 := @parameter0: java.lang.Object;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(r0);

        return r1;
    }

    static com.google.common.util.concurrent.ListenableFuture createFailedFuture(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        androidx.concurrent.futures.ResolvableFuture r1;

        r0 := @parameter0: java.lang.Throwable;

        r1 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        virtualinvoke r1.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r0);

        return r1;
    }

androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver
<androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver: android.graphics.drawable.Drawable getDrawableOrThrow(androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId)>
<androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver: com.google.common.util.concurrent.ListenableFuture getDrawable(androidx.wear.tiles.proto.ResourceProto$AndroidImageResourceByResId)>
androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder
<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>
<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>
<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>
    void <init>(androidx.wear.tiles.proto.ResourceProto$Resources)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder r0;
        androidx.wear.tiles.proto.ResourceProto$Resources r1;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder;

        r1 := @parameter0: androidx.wear.tiles.proto.ResourceProto$Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources> = r1;

        return;
    }

    public androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder setAndroidImageResourceByResIdResolver(androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder r0;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver r1;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder;

        r1 := @parameter0: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver;

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver> = r1;

        return r0;
    }

    public androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder setInlineImageResourceResolver(androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder r0;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver r1;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder;

        r1 := @parameter0: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver;

        r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver> = r1;

        return r0;
    }

    public androidx.wear.tiles.renderer.internal.ResourceResolvers build()
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder r0;
        androidx.wear.tiles.renderer.internal.ResourceResolvers $r1;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver $r2;
        androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver $r3;
        androidx.wear.tiles.proto.ResourceProto$Resources $r4;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder;

        $r1 = new androidx.wear.tiles.renderer.internal.ResourceResolvers;

        $r4 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.proto.ResourceProto$Resources mProtoResources>;

        $r3 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver mAndroidImageResourceByResIdResolver>;

        $r2 = r0.<androidx.wear.tiles.renderer.internal.ResourceResolvers$Builder: androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver mInlineImageResourceResolver>;

        specialinvoke $r1.<androidx.wear.tiles.renderer.internal.ResourceResolvers: void <init>(androidx.wear.tiles.proto.ResourceProto$Resources,androidx.wear.tiles.renderer.internal.ResourceResolvers$AndroidImageResourceByResIdResolver,androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver)>($r4, $r3, $r2);

        return $r1;
    }

androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver
<androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver: android.graphics.drawable.Drawable getDrawableOrThrow(androidx.wear.tiles.proto.ResourceProto$InlineImageResource)>
<androidx.wear.tiles.renderer.internal.ResourceResolvers$InlineImageResourceResolver: com.google.common.util.concurrent.ListenableFuture getDrawable(androidx.wear.tiles.proto.ResourceProto$InlineImageResource)>
androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException
    public void <init>(java.lang.String)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException r0;
        java.lang.String r1;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException r0;
        java.lang.String r1;
        java.lang.Exception r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.wear.tiles.renderer.internal.ResourceResolvers$ResourceAccessException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        r3 = (java.lang.Throwable) r2;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r3);

        return;
    }

