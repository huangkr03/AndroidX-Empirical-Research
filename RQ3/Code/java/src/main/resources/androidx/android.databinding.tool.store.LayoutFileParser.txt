android.databinding.tool.store.LayoutFileParser
<android.databinding.tool.store.LayoutFileParser: java.lang.String XPATH_BINDING_LAYOUT>
<android.databinding.tool.store.LayoutFileParser: java.lang.String LAYOUT_PREFIX>
    public void <init>()
    {
        android.databinding.tool.store.LayoutFileParser r0;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.databinding.tool.store.ResourceBundle$LayoutFileBundle parseXml(java.io.File, java.io.File, java.lang.String, android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup) throws javax.xml.parsers.ParserConfigurationException, java.io.IOException, org.xml.sax.SAXException, javax.xml.xpath.XPathExpressionException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1, r2, r11;
        java.lang.String r3, r5, r6;
        android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup r4;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r7;
        java.lang.Throwable r8, $r10;
        android.databinding.tool.store.LayoutFileParser$1 $r9;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup;

        r11 = interfaceinvoke r4.<android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup: java.io.File getOriginalFileFor(java.io.File)>(r1);

        if r11 != null goto label1;

        r11 = r1;

     label1:
        r5 = virtualinvoke r11.<java.io.File: java.lang.String getAbsolutePath()>();

     label2:
        $r9 = new android.databinding.tool.store.LayoutFileParser$1;

        specialinvoke $r9.<android.databinding.tool.store.LayoutFileParser$1: void <init>(android.databinding.tool.store.LayoutFileParser,java.lang.String)>(r0, r5);

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>($r9);

        r6 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String findEncoding(java.io.File)>(r1);

        specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: void stripFile(java.io.File,java.io.File,java.lang.String,android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup)>(r1, r2, r6, r4);

        r7 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: android.databinding.tool.store.ResourceBundle$LayoutFileBundle parseOriginalXml(java.io.File,java.lang.String,java.lang.String)>(r11, r3, r6);

     label3:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        return r7;

     label4:
        $r10 := @caughtexception;

        r8 = $r10;

     label5:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static boolean stripSingleLayoutFile(java.io.File, java.io.File) throws javax.xml.parsers.ParserConfigurationException, org.xml.sax.SAXException, javax.xml.xpath.XPathExpressionException, java.io.IOException
    {
        java.io.File r0, r1, $r8;
        java.lang.String r2, r3, r4, r5, $r6, $r9;
        java.lang.StringBuilder $r7, $r10, $r11, $r12;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String findEncoding(java.io.File)>(r0);

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        r3 = staticinvoke <android.databinding.tool.util.ParserHelper: java.lang.String stripExtension(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = staticinvoke <android.databinding.tool.util.XmlEditor: java.lang.String strip(java.io.File,java.lang.String,java.lang.String)>(r0, r4, r2);

        if r5 == null goto label1;

        staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>(r1, r5, r2);

        return 1;

     label1:
        return 0;
    }

    private android.databinding.tool.store.ResourceBundle$LayoutFileBundle parseOriginalXml(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1, $r33, $r36;
        java.lang.String r2, r3, r4, r15, $r19, $r27, $r28, $r30, $r31, $r34, $r37;
        java.io.FileInputStream r5, r45;
        java.io.InputStreamReader r6, r46;
        org.antlr.v4.runtime.ANTLRInputStream r7, r47;
        android.databinding.parser.XMLLexer r8, r48;
        org.antlr.v4.runtime.CommonTokenStream r9, r49;
        android.databinding.parser.XMLParser r10, r50;
        android.databinding.parser.XMLParser$DocumentContext r11;
        android.databinding.parser.XMLParser$ElementContext r12, r13, r43;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r14, r16, r51;
        java.lang.Throwable r17, $r42;
        org.antlr.v4.runtime.Token $r26, $r29;
        boolean $z0, $z1, z2;
        java.lang.StringBuilder $r38, $r39, $r40, r52;
        java.lang.Object[] $r41;
        android.databinding.tool.store.LayoutFileParser$2 r44;
        org.antlr.v4.runtime.TokenSource r53;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

     label1:
        r44 = new android.databinding.tool.store.LayoutFileParser$2;

        specialinvoke r44.<android.databinding.tool.store.LayoutFileParser$2: void <init>(android.databinding.tool.store.LayoutFileParser,java.io.File)>(r0, r1);

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r44);

        $r19 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        r4 = staticinvoke <android.databinding.tool.util.ParserHelper: java.lang.String stripExtension(java.lang.String)>($r19);

        r45 = new java.io.FileInputStream;

        specialinvoke r45.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r5 = r45;

        r46 = new java.io.InputStreamReader;

        specialinvoke r46.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r5, r3);

        r6 = r46;

        r47 = new org.antlr.v4.runtime.ANTLRInputStream;

        specialinvoke r47.<org.antlr.v4.runtime.ANTLRInputStream: void <init>(java.io.Reader)>(r6);

        r7 = r47;

        r48 = new android.databinding.parser.XMLLexer;

        specialinvoke r48.<android.databinding.parser.XMLLexer: void <init>(org.antlr.v4.runtime.CharStream)>(r7);

        r8 = r48;

        r49 = new org.antlr.v4.runtime.CommonTokenStream;

        r53 = (org.antlr.v4.runtime.TokenSource) r8;

        specialinvoke r49.<org.antlr.v4.runtime.CommonTokenStream: void <init>(org.antlr.v4.runtime.TokenSource)>(r53);

        r9 = r49;

        r50 = new android.databinding.parser.XMLParser;

        specialinvoke r50.<android.databinding.parser.XMLParser: void <init>(org.antlr.v4.runtime.TokenStream)>(r9);

        r10 = r50;

        r11 = virtualinvoke r10.<android.databinding.parser.XMLParser: android.databinding.parser.XMLParser$DocumentContext document()>();

        r12 = virtualinvoke r11.<android.databinding.parser.XMLParser$DocumentContext: android.databinding.parser.XMLParser$ElementContext element()>();

        $r27 = "layout";

        $r26 = r12.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r28 = interfaceinvoke $r26.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        return null;

     label3:
        r43 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: android.databinding.parser.XMLParser$ElementContext getDataNode(android.databinding.parser.XMLParser$ElementContext)>(r12);

        r13 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: android.databinding.parser.XMLParser$ElementContext getViewNode(java.io.File,android.databinding.parser.XMLParser$ElementContext)>(r1, r12);

        $z1 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: boolean hasMergeInclude(android.databinding.parser.XMLParser$ElementContext)>(r13);

        if $z1 == 0 goto label5;

        $r41 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Data binding does not support include elements as direct children of a merge element.", $r41);

     label4:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        return null;

     label5:
        $r30 = "merge";

        $r29 = r13.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r31 = interfaceinvoke $r29.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        z2 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        r51 = new android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r33 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $r34 = virtualinvoke $r33.<java.io.File: java.lang.String getName()>();

        specialinvoke r51.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r4, $r34, r2, z2);

        r14 = r51;

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        $r37 = virtualinvoke $r36.<java.io.File: java.lang.String getName()>();

        $r38 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r15 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: void parseData(java.io.File,android.databinding.parser.XMLParser$ElementContext,android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r1, r43, r14);

        specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: void parseExpressions(java.lang.String,android.databinding.parser.XMLParser$ElementContext,boolean,android.databinding.tool.store.ResourceBundle$LayoutFileBundle)>(r15, r13, z2, r14);

        r16 = r14;

     label6:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        return r16;

     label7:
        $r42 := @caughtexception;

        r17 = $r42;

     label8:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r17;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static boolean isProcessedElement(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = "view";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r2 = "include";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if $i0 < 0 goto label3;

     label2:
        return 1;

     label3:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    private void parseExpressions(java.lang.String, android.databinding.parser.XMLParser$ElementContext, boolean, android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.lang.String r1, r7, r8, r9, r10, $r29, $r30, $r38, $r44, $r46, $r47, $r50, $r58, $r61, $r64, r71, r72, r73, r74, r77, r85, r86;
        android.databinding.parser.XMLParser$ElementContext r2, r69, r84;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r3;
        java.util.ArrayList r4, r5, $r13, $r14;
        java.util.HashMap r6, $r17;
        byte b0, $b17;
        int i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.databinding.tool.store.Location r11, r12, $r23, $r39, $r40, $r78;
        android.databinding.tool.store.LayoutFileParser$3 $r15;
        java.lang.Object[] $r18, $r48, $r56, $r59, $r62, $r66, $r67;
        java.lang.Integer $r19;
        java.lang.Object $r20, $r22, $r25, $r27, $r28, $r36, $r57, $r65;
        java.util.Map $r21, r70;
        org.antlr.v4.runtime.Token $r26, $r37, $r41, $r42, $r43, $r45, $r49;
        java.lang.StringBuilder $r31, $r32, $r33, $r34, $r51, $r52, $r53;
        char $c5;
        org.antlr.v4.runtime.ParserRuleContext $r54, $r55, r75, r76;
        java.lang.Class $r60, $r63;
        java.util.Iterator r68, r81, r83;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r79;
        java.util.List $r80;
        android.databinding.parser.XMLParser$AttributeContext r82;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.databinding.parser.XMLParser$ElementContext;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r4 = $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r5 = $r14;

        $r15 = new android.databinding.tool.store.LayoutFileParser$3;

        specialinvoke $r15.<android.databinding.tool.store.LayoutFileParser$3: void <init>(android.databinding.tool.store.LayoutFileParser,java.util.List,java.util.List,boolean,android.databinding.parser.XMLParser$ElementContext)>(r0, r4, r5, z0, r2);

        virtualinvoke r2.<android.databinding.parser.XMLParser$ElementContext: java.lang.Object accept(org.antlr.v4.runtime.tree.ParseTreeVisitor)>($r15);

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r6 = $r17;

        $r18 = newarray (java.lang.Object)[1];

        $i2 = interfaceinvoke r4.<java.util.List: int size()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r18[0] = $r19;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("number of binding nodes %d", $r18);

        i16 = 0;

        r68 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z11 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label17;

        $r25 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        r69 = (android.databinding.parser.XMLParser$ElementContext) $r25;

        r70 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r69);

        $r26 = r69.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        r71 = interfaceinvoke $r26.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        r72 = null;

        r73 = null;

        $r27 = interfaceinvoke r70.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:id");

        r7 = (java.lang.String) $r27;

        $r28 = interfaceinvoke r70.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:tag");

        r8 = (java.lang.String) $r28;

        $r29 = "include";

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r71);

        if $z4 == 0 goto label04;

        $r57 = interfaceinvoke r70.<java.util.Map: java.lang.Object get(java.lang.Object)>("layout");

        r74 = (java.lang.String) $r57;

        $z7 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r74);

        if $z7 == 0 goto label02;

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = r69;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("%s must include a layout", $r67);

     label02:
        $z8 = virtualinvoke r74.<java.lang.String: boolean startsWith(java.lang.String)>("@layout/");

        if $z8 != 0 goto label03;

        $r66 = newarray (java.lang.Object)[2];

        $r66[0] = r74;

        $r66[1] = "@layout/";

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("included value (%s) must start with %s.", $r66);

     label03:
        $r58 = "@layout/";

        $i15 = virtualinvoke $r58.<java.lang.String: int length()>();

        r73 = virtualinvoke r74.<java.lang.String: java.lang.String substring(int)>($i15);

        r75 = virtualinvoke r69.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        $z9 = r75 instanceof android.databinding.parser.XMLParser$ContentContext;

        $r59 = newarray (java.lang.Object)[1];

        $r60 = virtualinvoke r75.<java.lang.Object: java.lang.Class getClass()>();

        $r61 = virtualinvoke $r60.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r59[0] = $r61;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z9, "parent of an include tag must be a content context but it is %s", $r59);

        r76 = virtualinvoke r75.<org.antlr.v4.runtime.ParserRuleContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        $z10 = r76 instanceof android.databinding.parser.XMLParser$ElementContext;

        $r62 = newarray (java.lang.Object)[1];

        $r63 = virtualinvoke r76.<java.lang.Object: java.lang.Class getClass()>();

        $r64 = virtualinvoke $r63.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r62[0] = $r64;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z10, "grandparent of an include tag must be an element context but it is %s", $r62);

        $r65 = virtualinvoke r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r76);

        r77 = (java.lang.String) $r65;

        goto label09;

     label04:
        $r30 = "fragment";

        $z5 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r71);

        if $z5 == 0 goto label05;

        $z6 = staticinvoke <android.databinding.tool.util.XmlEditor: boolean hasExpressionAttributes(android.databinding.parser.XMLParser$ElementContext)>(r69);

        if $z6 == 0 goto label01;

        $r56 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("fragments do not support data binding expressions.", $r56);

        goto label01;

     label05:
        r72 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.lang.String getViewName(android.databinding.parser.XMLParser$ElementContext)>(r69);

        if r2 == r69 goto label06;

        if z0 == 0 goto label07;

        $r54 = virtualinvoke r69.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        $r55 = virtualinvoke $r54.<org.antlr.v4.runtime.ParserRuleContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        if $r55 != r2 goto label07;

     label06:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        r77 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("binding_");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        r77 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        i16 = i16 + 1;

     label09:
        $r78 = new android.databinding.tool.store.Location;

        specialinvoke $r78.<android.databinding.tool.store.Location: void <init>(org.antlr.v4.runtime.ParserRuleContext)>(r69);

        r79 = virtualinvoke r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$BindingTargetBundle createBindingTarget(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r7, r72, 1, r77, r8, $r78);

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r69, r77);

        virtualinvoke r79.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void setIncludedLayout(java.lang.String)>(r73);

        $r80 = staticinvoke <android.databinding.tool.util.XmlEditor: java.util.List expressionAttributes(android.databinding.parser.XMLParser$ElementContext)>(r69);

        r81 = interfaceinvoke $r80.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z12 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label16;

        $r36 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r82 = (android.databinding.parser.XMLParser$AttributeContext) $r36;

        $r37 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $r38 = interfaceinvoke $r37.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        r9 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r38, 1);

        z1 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("@{");

        z2 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("@={");

        if z1 != 0 goto label11;

        if z2 == 0 goto label15;

     label11:
        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $c5 = virtualinvoke r9.<java.lang.String: char charAt(int)>($i4);

        if $c5 == 125 goto label12;

        $r48 = newarray (java.lang.Object)[1];

        $r49 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $r50 = interfaceinvoke $r49.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r48[0] = $r50;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("Expecting \'}\' in expression \'%s\'", $r48);

     label12:
        if z2 == 0 goto label13;

        $b17 = 3;

        goto label14;

     label13:
        $b17 = 2;

     label14:
        b0 = $b17;

        $i6 = virtualinvoke r9.<java.lang.String: int length()>();

        i1 = $i6 - 1;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(b0, i1);

        $r39 = new android.databinding.tool.store.Location;

        specialinvoke $r39.<android.databinding.tool.store.Location: void <init>(org.antlr.v4.runtime.ParserRuleContext)>(r82);

        r11 = $r39;

        $r40 = new android.databinding.tool.store.Location;

        specialinvoke $r40.<android.databinding.tool.store.Location: void <init>()>();

        r12 = $r40;

        $r41 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i7 = interfaceinvoke $r41.<org.antlr.v4.runtime.Token: int getLine()>();

        $i8 = $i7 - 1;

        r12.<android.databinding.tool.store.Location: int startLine> = $i8;

        $r42 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i9 = interfaceinvoke $r42.<org.antlr.v4.runtime.Token: int getCharPositionInLine()>();

        $r43 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $r44 = interfaceinvoke $r43.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $i10 = virtualinvoke $r44.<java.lang.String: int indexOf(java.lang.String)>(r10);

        $i11 = $i9 + $i10;

        r12.<android.databinding.tool.store.Location: int startOffset> = $i11;

        $i12 = r11.<android.databinding.tool.store.Location: int endLine>;

        r12.<android.databinding.tool.store.Location: int endLine> = $i12;

        $i13 = r11.<android.databinding.tool.store.Location: int endOffset>;

        $i14 = $i13 - 2;

        r12.<android.databinding.tool.store.Location: int endOffset> = $i14;

        $r45 = r82.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrName>;

        $r46 = interfaceinvoke $r45.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r47 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r46, 0);

        virtualinvoke r79.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: void addBinding(java.lang.String,java.lang.String,boolean,android.databinding.tool.store.Location,android.databinding.tool.store.Location)>($r47, r10, z2, r11, r12);

     label15:
        goto label10;

     label16:
        goto label01;

     label17:
        r83 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z3 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r20 = interfaceinvoke r83.<java.util.Iterator: java.lang.Object next()>();

        r84 = (android.databinding.parser.XMLParser$ElementContext) $r20;

        $r21 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r84);

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:id");

        r85 = (java.lang.String) $r22;

        r86 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.lang.String getViewName(android.databinding.parser.XMLParser$ElementContext)>(r84);

        $r23 = new android.databinding.tool.store.Location;

        specialinvoke $r23.<android.databinding.tool.store.Location: void <init>(org.antlr.v4.runtime.ParserRuleContext)>(r84);

        virtualinvoke r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$BindingTargetBundle createBindingTarget(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r85, r86, 1, null, null, $r23);

        goto label18;

     label19:
        return;
    }

    private java.lang.String getViewName(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        android.databinding.parser.XMLParser$ElementContext r1;
        java.lang.String r2, $r4, $r5, r9;
        org.antlr.v4.runtime.Token $r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r6;
        java.lang.Object $r7;
        java.lang.Object[] $r8;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r3 = r1.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        r9 = interfaceinvoke $r3.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r4 = "view";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r1);

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        r2 = (java.lang.String) $r7;

        $z3 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r2);

        if $z3 == 0 goto label1;

        $r8 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>("No class attribute for \'view\' node", $r8);

     label1:
        r9 = r2;

        goto label3;

     label2:
        $r5 = "include";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label3;

        $z2 = staticinvoke <android.databinding.tool.util.XmlEditor: boolean hasExpressionAttributes(android.databinding.parser.XMLParser$ElementContext)>(r1);

        if $z2 != 0 goto label3;

        r9 = "android.view.View";

     label3:
        return r9;
    }

    private void parseData(java.io.File, android.databinding.parser.XMLParser$ElementContext, android.databinding.tool.store.ResourceBundle$LayoutFileBundle)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1;
        android.databinding.parser.XMLParser$ElementContext r2, r28, r33;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r3;
        java.util.List $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.antlr.v4.runtime.Token $r6, $r9, $r10, $r11, $r12;
        java.lang.String $r7, $r17, $r19, $r25, r30, r31, r35, r36, r38;
        android.databinding.tool.store.Location $r8, $r20, $r26, r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object $r13, $r14, $r15, $r21, $r22, $r23;
        java.lang.Object[] $r16, $r18, $r24;
        java.util.Iterator r27, r32;
        java.util.Map r29, r34;
        android.databinding.parser.XMLParser$AttributeContext r37;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.databinding.parser.XMLParser$ElementContext;

        r3 := @parameter2: android.databinding.tool.store.ResourceBundle$LayoutFileBundle;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List filter(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r2, "import");

        r27 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r21 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (android.databinding.parser.XMLParser$ElementContext) $r21;

        r29 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r28);

        $r22 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("type");

        r30 = (java.lang.String) $r22;

        $r23 = interfaceinvoke r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("alias");

        r31 = (java.lang.String) $r23;

        $z3 = staticinvoke <android.databinding.tool.util.StringUtils: boolean isNotBlank(java.lang.CharSequence)>(r30);

        $r24 = newarray (java.lang.Object)[2];

        $r25 = virtualinvoke r28.<android.databinding.parser.XMLParser$ElementContext: java.lang.String toStringTree()>();

        $r24[0] = $r25;

        $r24[1] = r1;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z3, "Type of an import cannot be empty. %s in %s", $r24);

        $z4 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r31);

        if $z4 == 0 goto label3;

        $i9 = virtualinvoke r30.<java.lang.String: int lastIndexOf(int)>(46);

        $i10 = $i9 + 1;

        r31 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int)>($i10);

     label3:
        $r26 = new android.databinding.tool.store.Location;

        specialinvoke $r26.<android.databinding.tool.store.Location: void <init>(org.antlr.v4.runtime.ParserRuleContext)>(r28);

        virtualinvoke r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: void addImport(java.lang.String,java.lang.String,android.databinding.tool.store.Location)>(r31, r30, $r26);

        goto label2;

     label4:
        $r5 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List filter(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r2, "variable");

        r32 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r13 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (android.databinding.parser.XMLParser$ElementContext) $r13;

        r34 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r33);

        $r14 = interfaceinvoke r34.<java.util.Map: java.lang.Object get(java.lang.Object)>("type");

        r35 = (java.lang.String) $r14;

        $r15 = interfaceinvoke r34.<java.util.Map: java.lang.Object get(java.lang.Object)>("name");

        r36 = (java.lang.String) $r15;

        $r16 = newarray (java.lang.Object)[2];

        $r17 = virtualinvoke r33.<android.databinding.parser.XMLParser$ElementContext: java.lang.String toStringTree()>();

        $r16[0] = $r17;

        $r16[1] = r1;

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r35, "variable must have a type definition %s in %s", $r16);

        $r18 = newarray (java.lang.Object)[2];

        $r19 = virtualinvoke r33.<android.databinding.parser.XMLParser$ElementContext: java.lang.String toStringTree()>();

        $r18[0] = $r19;

        $r18[1] = r1;

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r36, "variable must have a name %s in %s", $r18);

        $r20 = new android.databinding.tool.store.Location;

        specialinvoke $r20.<android.databinding.tool.store.Location: void <init>(org.antlr.v4.runtime.ParserRuleContext)>(r33);

        virtualinvoke r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: void addVariable(java.lang.String,java.lang.String,android.databinding.tool.store.Location,boolean)>(r36, r35, $r20, 1);

        goto label5;

     label6:
        r37 = staticinvoke <android.databinding.tool.store.LayoutFileParser: android.databinding.parser.XMLParser$AttributeContext findAttribute(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r2, "class");

        if r37 == null goto label7;

        $r6 = r37.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $r7 = interfaceinvoke $r6.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        r38 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r7, 1);

        $z2 = staticinvoke <android.databinding.tool.util.StringUtils: boolean isNotBlank(java.lang.CharSequence)>(r38);

        if $z2 == 0 goto label7;

        $r8 = new android.databinding.tool.store.Location;

        $r9 = r37.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i0 = interfaceinvoke $r9.<org.antlr.v4.runtime.Token: int getLine()>();

        $i1 = $i0 - 1;

        $r10 = r37.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i2 = interfaceinvoke $r10.<org.antlr.v4.runtime.Token: int getCharPositionInLine()>();

        $i3 = $i2 + 1;

        $r11 = r37.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i4 = interfaceinvoke $r11.<org.antlr.v4.runtime.Token: int getLine()>();

        $i5 = $i4 - 1;

        $r12 = r37.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $i6 = interfaceinvoke $r12.<org.antlr.v4.runtime.Token: int getCharPositionInLine()>();

        $i7 = virtualinvoke r38.<java.lang.String: int length()>();

        $i8 = $i6 + $i7;

        specialinvoke $r8.<android.databinding.tool.store.Location: void <init>(int,int,int,int)>($i1, $i3, $i5, $i8);

        r39 = $r8;

        virtualinvoke r3.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: void setBindingClass(java.lang.String,android.databinding.tool.store.Location)>(r38, r39);

     label7:
        return;
    }

    private android.databinding.parser.XMLParser$ElementContext getDataNode(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        android.databinding.parser.XMLParser$ElementContext r1, $r5;
        java.util.List r2;
        int $i0, $i1;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        r2 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List filter(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r1, "data");

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "XML layout can have only 1 data tag", $r3);

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (android.databinding.parser.XMLParser$ElementContext) $r4;

        return $r5;
    }

    private android.databinding.parser.XMLParser$ElementContext getViewNode(java.io.File, android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1;
        android.databinding.parser.XMLParser$ElementContext r2, $r8;
        java.util.List r3;
        int $i0, $i1, $i2;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.databinding.parser.XMLParser$ElementContext;

        r3 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List filterNot(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r2, "data");

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r1;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r5;

        $i2 = virtualinvoke r2.<android.databinding.parser.XMLParser$ElementContext: int getChildCount()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[2] = $r6;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z0, "XML layout %s must have 1 view but has %s. root children count %s", $r4);

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (android.databinding.parser.XMLParser$ElementContext) $r7;

        return $r8;
    }

    private java.util.List filter(android.databinding.parser.XMLParser$ElementContext, java.lang.String)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        android.databinding.parser.XMLParser$ElementContext r1, r6;
        java.lang.String r2, $r11;
        java.util.ArrayList r3, $r7;
        android.databinding.parser.XMLParser$ContentContext r4;
        java.util.Iterator r5;
        java.util.List $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        org.antlr.v4.runtime.Token $r10;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        r2 := @parameter1: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        if r1 != null goto label1;

        return r3;

     label1:
        r4 = virtualinvoke r1.<android.databinding.parser.XMLParser$ElementContext: android.databinding.parser.XMLParser$ContentContext content()>();

        if r4 != null goto label2;

        return r3;

     label2:
        $r8 = staticinvoke <android.databinding.tool.util.XmlEditor: java.util.List elements(android.databinding.parser.XMLParser$ElementContext)>(r1);

        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.databinding.parser.XMLParser$ElementContext) $r9;

        $r10 = r6.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r11 = interfaceinvoke $r10.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        goto label3;

     label5:
        return r3;
    }

    private java.util.List filterNot(android.databinding.parser.XMLParser$ElementContext, java.lang.String)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        android.databinding.parser.XMLParser$ElementContext r1, r6;
        java.lang.String r2, $r11;
        java.util.ArrayList r3, $r7;
        android.databinding.parser.XMLParser$ContentContext r4;
        java.util.Iterator r5;
        java.util.List $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        org.antlr.v4.runtime.Token $r10;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        r2 := @parameter1: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        if r1 != null goto label1;

        return r3;

     label1:
        r4 = virtualinvoke r1.<android.databinding.parser.XMLParser$ElementContext: android.databinding.parser.XMLParser$ContentContext content()>();

        if r4 != null goto label2;

        return r3;

     label2:
        $r8 = staticinvoke <android.databinding.tool.util.XmlEditor: java.util.List elements(android.databinding.parser.XMLParser$ElementContext)>(r1);

        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.databinding.parser.XMLParser$ElementContext) $r9;

        $r10 = r6.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r11 = interfaceinvoke $r10.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        goto label3;

     label5:
        return r3;
    }

    private boolean hasMergeInclude(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        android.databinding.parser.XMLParser$ElementContext r1;
        org.antlr.v4.runtime.Token $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;
        java.util.List $r5;
        int $i0;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r3 = "merge";

        $r2 = r1.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r4 = interfaceinvoke $r2.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List filter(android.databinding.parser.XMLParser$ElementContext,java.lang.String)>(r1, "include");

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void stripFile(java.io.File, java.io.File, java.lang.String, android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup) throws javax.xml.parsers.ParserConfigurationException, java.io.IOException, org.xml.sax.SAXException, javax.xml.xpath.XPathExpressionException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1, r2, $r14, $r19, r20;
        java.lang.String r3, r10, r11, $r12, $r15;
        android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup r4;
        javax.xml.parsers.DocumentBuilderFactory r5;
        javax.xml.parsers.DocumentBuilder r6;
        org.w3c.dom.Document r7;
        javax.xml.xpath.XPathFactory r8;
        javax.xml.xpath.XPath r9;
        boolean z0, $z1;
        java.lang.StringBuilder $r13, $r16, $r17, $r18;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup;

        r5 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        r6 = virtualinvoke r5.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r7 = virtualinvoke r6.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>(r1);

        r8 = staticinvoke <javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>();

        r9 = virtualinvoke r8.<javax.xml.xpath.XPathFactory: javax.xml.xpath.XPath newXPath()>();

        if r4 != null goto label1;

        $r19 = null;

        goto label2;

     label1:
        $r19 = interfaceinvoke r4.<android.databinding.tool.LayoutXmlProcessor$OriginalFileLookup: java.io.File getOriginalFileFor(java.io.File)>(r1);

     label2:
        r20 = $r19;

        if r20 != null goto label3;

        r20 = r1;

     label3:
        $r12 = virtualinvoke r20.<java.io.File: java.lang.String getName()>();

        r10 = staticinvoke <android.databinding.tool.util.ParserHelper: java.lang.String stripExtension(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r20.<java.io.File: java.io.File getParentFile()>();

        $r15 = virtualinvoke $r14.<java.io.File: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: boolean isBindingLayout(org.w3c.dom.Document,javax.xml.xpath.XPath)>(r7, r9);

        if z0 == 0 goto label4;

        specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: void stripBindingTags(java.io.File,java.io.File,java.lang.String,java.lang.String)>(r1, r2, r11, r3);

        goto label5;

     label4:
        $z1 = virtualinvoke r1.<java.io.File: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label5;

        staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r1, r2);

     label5:
        return;
    }

    private boolean isBindingLayout(org.w3c.dom.Document, javax.xml.xpath.XPath) throws javax.xml.xpath.XPathExpressionException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        org.w3c.dom.Document r1;
        javax.xml.xpath.XPath r2;
        java.util.List $r3;
        boolean $z0, $z1;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: javax.xml.xpath.XPath;

        $r3 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List get(org.w3c.dom.Document,javax.xml.xpath.XPath,java.lang.String)>(r1, r2, "/layout");

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private java.util.List get(org.w3c.dom.Document, javax.xml.xpath.XPath, java.lang.String) throws javax.xml.xpath.XPathExpressionException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        org.w3c.dom.Document r1;
        javax.xml.xpath.XPath r2;
        java.lang.String r3;
        javax.xml.xpath.XPathExpression r4;
        javax.xml.namespace.QName $r5;
        java.lang.Object $r6;
        org.w3c.dom.NodeList $r7;
        java.util.List $r8;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: org.w3c.dom.Document;

        r2 := @parameter1: javax.xml.xpath.XPath;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r2.<javax.xml.xpath.XPath: javax.xml.xpath.XPathExpression compile(java.lang.String)>(r3);

        $r5 = <javax.xml.xpath.XPathConstants: javax.xml.namespace.QName NODESET>;

        $r6 = interfaceinvoke r4.<javax.xml.xpath.XPathExpression: java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)>(r1, $r5);

        $r7 = (org.w3c.dom.NodeList) $r6;

        $r8 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser: java.util.List toList(org.w3c.dom.NodeList)>($r7);

        return $r8;
    }

    private java.util.List toList(org.w3c.dom.NodeList)
    {
        android.databinding.tool.store.LayoutFileParser r0;
        org.w3c.dom.NodeList r1;
        java.util.ArrayList r2, $r3;
        int $i0, i1;
        org.w3c.dom.Node $r4;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: org.w3c.dom.NodeList;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label2;

        $r4 = interfaceinvoke r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private void stripBindingTags(java.io.File, java.io.File, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.databinding.tool.store.LayoutFileParser r0;
        java.io.File r1, r2;
        java.lang.String r3, r4, r5, $r7, $r9, $r10;
        java.lang.Object[] $r6, $r8;

        r0 := @this: android.databinding.tool.store.LayoutFileParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 = staticinvoke <android.databinding.tool.util.XmlEditor: java.lang.String strip(java.io.File,java.lang.String,java.lang.String)>(r1, r3, r4);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6[0] = $r7;

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r5, "layout file should\'ve changed %s", $r6);

        if r5 == null goto label1;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8[1] = $r10;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("file %s has changed, overwriting %s", $r8);

        staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>(r2, r5, r4);

     label1:
        return;
    }

    private static java.lang.String findEncoding(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.io.FileInputStream r1, $r6;
        org.mozilla.universalchardet.UniversalDetector r2, $r7;
        byte[] r3;
        int i0, $i1;
        java.lang.String r4, r9;
        java.lang.Throwable r5, $r8;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r1 = $r6;

     label1:
        $r7 = new org.mozilla.universalchardet.UniversalDetector;

        specialinvoke $r7.<org.mozilla.universalchardet.UniversalDetector: void <init>(org.mozilla.universalchardet.CharsetListener)>(null);

        r2 = $r7;

        r3 = newarray (byte)[4096];

     label2:
        $i1 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[])>(r3);

        i0 = $i1;

        if $i1 <= 0 goto label3;

        $z0 = virtualinvoke r2.<org.mozilla.universalchardet.UniversalDetector: boolean isDone()>();

        if $z0 != 0 goto label3;

        virtualinvoke r2.<org.mozilla.universalchardet.UniversalDetector: void handleData(byte[],int,int)>(r3, 0, i0);

        goto label2;

     label3:
        virtualinvoke r2.<org.mozilla.universalchardet.UniversalDetector: void dataEnd()>();

        r9 = virtualinvoke r2.<org.mozilla.universalchardet.UniversalDetector: java.lang.String getDetectedCharset()>();

        if r9 != null goto label4;

        r9 = "utf-8";

     label4:
        r4 = r9;

     label5:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

        return r4;

     label6:
        $r8 := @caughtexception;

        r5 = $r8;

     label7:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

        throw r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.parser.XMLParser$ElementContext r0;
        java.util.HashMap r1, $r4;
        java.util.Iterator r2;
        android.databinding.parser.XMLParser$AttributeContext r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.antlr.v4.runtime.Token $r7, $r10;
        java.lang.String $r8, $r9, $r11, $r12;

        r0 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <android.databinding.tool.util.XmlEditor: java.util.List attributes(android.databinding.parser.XMLParser$ElementContext)>(r0);

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.parser.XMLParser$AttributeContext) $r6;

        $r7 = r3.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrName>;

        $r8 = interfaceinvoke $r7.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r9 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r8, 0);

        $r10 = r3.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrValue>;

        $r11 = interfaceinvoke $r10.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r12 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r11, 1);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r12);

        goto label1;

     label2:
        return r1;
    }

    private static android.databinding.parser.XMLParser$AttributeContext findAttribute(android.databinding.parser.XMLParser$ElementContext, java.lang.String)
    {
        android.databinding.parser.XMLParser$ElementContext r0;
        java.lang.String r1, $r7, $r8;
        java.util.Iterator r2;
        android.databinding.parser.XMLParser$AttributeContext r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        org.antlr.v4.runtime.Token $r6;

        r0 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        r1 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<android.databinding.parser.XMLParser$ElementContext: java.util.List attribute()>();

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.parser.XMLParser$AttributeContext) $r5;

        $r6 = r3.<android.databinding.parser.XMLParser$AttributeContext: org.antlr.v4.runtime.Token attrName>;

        $r7 = interfaceinvoke $r6.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $r8 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.lang.String escapeQuotes(java.lang.String,boolean)>($r7, 0);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private static java.lang.String escapeQuotes(java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r2;
        boolean z0;
        char c0, c1;
        byte b2;
        int i3, $i4, $i5;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        b2 = 0;

        i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if c0 == 34 goto label1;

        if c0 != 39 goto label2;

     label1:
        b2 = 1;

     label2:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if c1 == 34 goto label3;

        if c1 != 39 goto label4;

     label3:
        i3 = i3 + -1;

     label4:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(b2, i3);

        if z0 == 0 goto label5;

        $r2 = staticinvoke <android.databinding.tool.util.StringUtils: java.lang.String unescapeXml(java.lang.String)>(r1);

        return $r2;

     label5:
        return r1;
    }

    static boolean access$000(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.databinding.tool.store.LayoutFileParser: boolean isProcessedElement(java.lang.String)>(r0);

        return $z0;
    }

    static java.util.Map access$100(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.parser.XMLParser$ElementContext r0;
        java.util.Map $r1;

        r0 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r1 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map attributeMap(android.databinding.parser.XMLParser$ElementContext)>(r0);

        return $r1;
    }

android.databinding.tool.store.LayoutFileParser$1
<android.databinding.tool.store.LayoutFileParser$1: java.lang.String val$originalFilePath>
<android.databinding.tool.store.LayoutFileParser$1: android.databinding.tool.store.LayoutFileParser this$0>
    void <init>(android.databinding.tool.store.LayoutFileParser, java.lang.String)
    {
        android.databinding.tool.store.LayoutFileParser$1 r0;
        android.databinding.tool.store.LayoutFileParser r1;
        java.lang.String r2;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$1;

        r1 := @parameter0: android.databinding.tool.store.LayoutFileParser;

        r2 := @parameter1: java.lang.String;

        r0.<android.databinding.tool.store.LayoutFileParser$1: android.databinding.tool.store.LayoutFileParser this$0> = r1;

        r0.<android.databinding.tool.store.LayoutFileParser$1: java.lang.String val$originalFilePath> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String provideScopeFilePath()
    {
        android.databinding.tool.store.LayoutFileParser$1 r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$1;

        $r1 = r0.<android.databinding.tool.store.LayoutFileParser$1: java.lang.String val$originalFilePath>;

        return $r1;
    }

android.databinding.tool.store.LayoutFileParser$2
<android.databinding.tool.store.LayoutFileParser$2: java.io.File val$original>
<android.databinding.tool.store.LayoutFileParser$2: android.databinding.tool.store.LayoutFileParser this$0>
    void <init>(android.databinding.tool.store.LayoutFileParser, java.io.File)
    {
        android.databinding.tool.store.LayoutFileParser$2 r0;
        android.databinding.tool.store.LayoutFileParser r1;
        java.io.File r2;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$2;

        r1 := @parameter0: android.databinding.tool.store.LayoutFileParser;

        r2 := @parameter1: java.io.File;

        r0.<android.databinding.tool.store.LayoutFileParser$2: android.databinding.tool.store.LayoutFileParser this$0> = r1;

        r0.<android.databinding.tool.store.LayoutFileParser$2: java.io.File val$original> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String provideScopeFilePath()
    {
        android.databinding.tool.store.LayoutFileParser$2 r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$2;

        $r1 = r0.<android.databinding.tool.store.LayoutFileParser$2: java.io.File val$original>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

android.databinding.tool.store.LayoutFileParser$3
<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$bindingElements>
<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$otherElementsWithIds>
<android.databinding.tool.store.LayoutFileParser$3: boolean val$isMerge>
<android.databinding.tool.store.LayoutFileParser$3: android.databinding.parser.XMLParser$ElementContext val$rootView>
<android.databinding.tool.store.LayoutFileParser$3: android.databinding.tool.store.LayoutFileParser this$0>
    void <init>(android.databinding.tool.store.LayoutFileParser, java.util.List, java.util.List, boolean, android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser$3 r0;
        android.databinding.tool.store.LayoutFileParser r1;
        java.util.List r2, r3;
        boolean z0;
        android.databinding.parser.XMLParser$ElementContext r4;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$3;

        r1 := @parameter0: android.databinding.tool.store.LayoutFileParser;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        r4 := @parameter4: android.databinding.parser.XMLParser$ElementContext;

        r0.<android.databinding.tool.store.LayoutFileParser$3: android.databinding.tool.store.LayoutFileParser this$0> = r1;

        r0.<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$bindingElements> = r2;

        r0.<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$otherElementsWithIds> = r3;

        r0.<android.databinding.tool.store.LayoutFileParser$3: boolean val$isMerge> = z0;

        r0.<android.databinding.tool.store.LayoutFileParser$3: android.databinding.parser.XMLParser$ElementContext val$rootView> = r4;

        specialinvoke r0.<android.databinding.parser.XMLParserBaseVisitor: void <init>()>();

        return;
    }

    public java.lang.Void visitElement(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser$3 r0;
        android.databinding.parser.XMLParser$ElementContext r1;
        java.lang.String r2;
        boolean $z0, $z1, $z2;
        org.antlr.v4.runtime.Token $r3;
        java.util.Map $r5;
        java.util.List $r6, $r7;
        org.antlr.v4.runtime.tree.RuleNode r8;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$3;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $z0 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser$3: boolean filter(android.databinding.parser.XMLParser$ElementContext)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$bindingElements>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r3 = r1.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        r2 = interfaceinvoke $r3.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z1 = staticinvoke <android.databinding.tool.store.LayoutFileParser: boolean access$000(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r5 = staticinvoke <android.databinding.tool.store.LayoutFileParser: java.util.Map access$100(android.databinding.parser.XMLParser$ElementContext)>(r1);

        $z2 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("android:id");

        if $z2 == 0 goto label2;

        $r6 = r0.<android.databinding.tool.store.LayoutFileParser$3: java.util.List val$otherElementsWithIds>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        r8 = (org.antlr.v4.runtime.tree.RuleNode) r1;

        virtualinvoke r0.<android.databinding.tool.store.LayoutFileParser$3: java.lang.Object visitChildren(org.antlr.v4.runtime.tree.RuleNode)>(r8);

        return null;
    }

    private boolean filter(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser$3 r0;
        android.databinding.parser.XMLParser$ElementContext r1, $r2, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.antlr.v4.runtime.Token $r3;
        java.lang.String $r4, $r5;
        org.antlr.v4.runtime.ParserRuleContext $r6, $r7;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$3;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $z0 = r0.<android.databinding.tool.store.LayoutFileParser$3: boolean val$isMerge>;

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        $r7 = virtualinvoke $r6.<org.antlr.v4.runtime.ParserRuleContext: org.antlr.v4.runtime.ParserRuleContext getParent()>();

        $r8 = r0.<android.databinding.tool.store.LayoutFileParser$3: android.databinding.parser.XMLParser$ElementContext val$rootView>;

        if $r7 != $r8 goto label2;

        return 1;

     label1:
        $r2 = r0.<android.databinding.tool.store.LayoutFileParser$3: android.databinding.parser.XMLParser$ElementContext val$rootView>;

        if r1 != $r2 goto label2;

        return 1;

     label2:
        $z1 = specialinvoke r0.<android.databinding.tool.store.LayoutFileParser$3: boolean hasIncludeChild(android.databinding.parser.XMLParser$ElementContext)>(r1);

        if $z1 != 0 goto label3;

        $z2 = staticinvoke <android.databinding.tool.util.XmlEditor: boolean hasExpressionAttributes(android.databinding.parser.XMLParser$ElementContext)>(r1);

        if $z2 != 0 goto label3;

        $r4 = "include";

        $r3 = r1.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r5 = interfaceinvoke $r3.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    private boolean hasIncludeChild(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser$3 r0;
        android.databinding.parser.XMLParser$ElementContext r1, r3;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        org.antlr.v4.runtime.Token $r6;
        java.lang.String $r7, $r8;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$3;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r4 = staticinvoke <android.databinding.tool.util.XmlEditor: java.util.List elements(android.databinding.parser.XMLParser$ElementContext)>(r1);

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.parser.XMLParser$ElementContext) $r5;

        $r7 = "include";

        $r6 = r3.<android.databinding.parser.XMLParser$ElementContext: org.antlr.v4.runtime.Token elmName>;

        $r8 = interfaceinvoke $r6.<org.antlr.v4.runtime.Token: java.lang.String getText()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public volatile java.lang.Object visitElement(android.databinding.parser.XMLParser$ElementContext)
    {
        android.databinding.tool.store.LayoutFileParser$3 r0;
        android.databinding.parser.XMLParser$ElementContext r1;
        java.lang.Void $r2;

        r0 := @this: android.databinding.tool.store.LayoutFileParser$3;

        r1 := @parameter0: android.databinding.parser.XMLParser$ElementContext;

        $r2 = virtualinvoke r0.<android.databinding.tool.store.LayoutFileParser$3: java.lang.Void visitElement(android.databinding.parser.XMLParser$ElementContext)>(r1);

        return $r2;
    }

