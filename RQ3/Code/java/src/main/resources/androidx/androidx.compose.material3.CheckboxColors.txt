androidx.compose.material3.CheckboxColors
<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor>
<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor>
<androidx.compose.material3.CheckboxColors: long checkedBoxColor>
<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor>
<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor>
<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor>
<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor>
<androidx.compose.material3.CheckboxColors: long checkedBorderColor>
<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor>
<androidx.compose.material3.CheckboxColors: long disabledBorderColor>
<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor>
    private void <init>(long, long, long, long, long, long, long, long, long, long, long)
    {
        androidx.compose.material3.CheckboxColors r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor> = l0;

        r0.<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor> = l1;

        r0.<androidx.compose.material3.CheckboxColors: long checkedBoxColor> = l2;

        r0.<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor> = l3;

        r0.<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor> = l4;

        r0.<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor> = l5;

        r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor> = l6;

        r0.<androidx.compose.material3.CheckboxColors: long checkedBorderColor> = l7;

        r0.<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor> = l8;

        r0.<androidx.compose.material3.CheckboxColors: long disabledBorderColor> = l9;

        r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor> = l10;

        return;
    }

    public final androidx.compose.runtime.State checkmarkColor$material3_release(androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material3.CheckboxColors r0;
        androidx.compose.ui.state.ToggleableState r1, $r4, $r5;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        long l1, $l3;
        byte b2, $b4;
        androidx.compose.runtime.State r3;
        boolean $z0, $z1;
        androidx.compose.animation.core.TweenSpec $r6;
        androidx.compose.animation.core.AnimationSpec $r7;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        r1 := @parameter0: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-507585681);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(checkmarkColor)404@16011L61:Checkbox.kt#uh7d8r");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-507585681, $i0, -1, "androidx.compose.material3.CheckboxColors.checkmarkColor (Checkbox.kt:396)");

     label1:
        $r4 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r4 goto label2;

        $l3 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor>;

        goto label3;

     label2:
        $l3 = r0.<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor>;

     label3:
        l1 = $l3;

        $r5 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r5 goto label4;

        $b4 = 100;

        goto label5;

     label4:
        $b4 = 50;

     label5:
        b2 = $b4;

        $r6 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r7 = (androidx.compose.animation.core.AnimationSpec) $r6;

        r3 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r7, null, $r2, 0, 4);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label6;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label6:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public final androidx.compose.runtime.State boxColor$material3_release(boolean, androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material3.CheckboxColors r0;
        boolean z0, $z1, $z2;
        androidx.compose.ui.state.ToggleableState r1, $r6;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i3, $i4, $i5, $i6;
        long l1, $l7;
        androidx.compose.runtime.State r3, r12, $r13, r14;
        byte b2, $b8;
        int[] $r4, $r10;
        androidx.compose.ui.graphics.Color $r5;
        androidx.compose.animation.core.TweenSpec $r7;
        androidx.compose.animation.core.AnimationSpec $r8;
        kotlin.NoWhenBranchMatchedException $r9, $r11;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(360729865);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(boxColor):Checkbox.kt#uh7d8r");

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(360729865, $i0, -1, "androidx.compose.material3.CheckboxColors.boxColor (Checkbox.kt:415)");

     label01:
        if z0 == 0 goto label05;

        $r10 = <androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i5 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i6 = $r10[$i5];

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label04;
        };

     label02:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long checkedBoxColor>;

        goto label10;

     label03:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor>;

        goto label10;

     label04:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label05:
        $r4 = <androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i3 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i4 = $r4[$i3];

        tableswitch($i4)
        {
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            default: goto label09;
        };

     label06:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor>;

        goto label10;

     label07:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor>;

        goto label10;

     label08:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor>;

        goto label10;

     label09:
        $r9 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r9.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r9;

     label10:
        l1 = $l7;

        if z0 == 0 goto label13;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1143718194);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "433@17199L61");

        $r6 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r6 goto label11;

        $b8 = 100;

        goto label12;

     label11:
        $b8 = 50;

     label12:
        b2 = $b8;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r8 = (androidx.compose.animation.core.AnimationSpec) $r7;

        r12 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r8, null, $r2, 0, 4);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r12;

        goto label14;

     label13:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1143718380);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "435@17290L28");

        $r5 = staticinvoke <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color box-impl(long)>(l1);

        r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State rememberUpdatedState(java.lang.Object,androidx.compose.runtime.Composer,int)>($r5, $r2, 0);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r14;

     label14:
        r3 = $r13;

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label15;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label15:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public final androidx.compose.runtime.State borderColor$material3_release(boolean, androidx.compose.ui.state.ToggleableState, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.material3.CheckboxColors r0;
        boolean z0, $z1, $z2;
        androidx.compose.ui.state.ToggleableState r1, $r6;
        androidx.compose.runtime.Composer $r2;
        int $i0, $i3, $i4, $i5, $i6;
        long l1, $l7;
        androidx.compose.runtime.State r3, r12, $r13, r14;
        byte b2, $b8;
        int[] $r4, $r10;
        androidx.compose.ui.graphics.Color $r5;
        androidx.compose.animation.core.TweenSpec $r7;
        androidx.compose.animation.core.AnimationSpec $r8;
        kotlin.NoWhenBranchMatchedException $r9, $r11;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.ui.state.ToggleableState;

        $r2 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1009643462);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(borderColor):Checkbox.kt#uh7d8r");

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1009643462, $i0, -1, "androidx.compose.material3.CheckboxColors.borderColor (Checkbox.kt:446)");

     label01:
        if z0 == 0 goto label05;

        $r10 = <androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i5 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i6 = $r10[$i5];

        tableswitch($i6)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label03;
            default: goto label04;
        };

     label02:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long checkedBorderColor>;

        goto label09;

     label03:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor>;

        goto label09;

     label04:
        $r11 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r11.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r11;

     label05:
        $r4 = <androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i3 = virtualinvoke r1.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        $i4 = $r4[$i3];

        tableswitch($i4)
        {
            case 1: goto label07;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label08;
        };

     label06:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor>;

        goto label09;

     label07:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long disabledBorderColor>;

        goto label09;

     label08:
        $r9 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r9.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r9;

     label09:
        l1 = $l7;

        if z0 == 0 goto label12;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1209369334);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "463@18402L61");

        $r6 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        if r1 != $r6 goto label10;

        $b8 = 100;

        goto label11;

     label10:
        $b8 = 50;

     label11:
        b2 = $b8;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(b2, 0, null, 6, null);

        $r8 = (androidx.compose.animation.core.AnimationSpec) $r7;

        r12 = staticinvoke <androidx.compose.animation.SingleValueAnimationKt: androidx.compose.runtime.State animateColorAsState-KTwxG1Y(long,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int,int)>(l1, $r8, null, $r2, 0, 4);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r12;

        goto label13;

     label12:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1209369520);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "465@18493L28");

        $r5 = staticinvoke <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color box-impl(long)>(l1);

        r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State rememberUpdatedState(java.lang.Object,androidx.compose.runtime.Composer,int)>($r5, $r2, 0);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r13 = r14;

     label13:
        r3 = $r13;

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label14;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label14:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.material3.CheckboxColors r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $z0 = r1 instanceof androidx.compose.material3.CheckboxColors;

        if $z0 != 0 goto label03;

     label02:
        return 0;

     label03:
        $l1 = r0.<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor>;

        $r2 = (androidx.compose.material3.CheckboxColors) r1;

        $l0 = $r2.<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor>;

        $z1 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l1, $l0);

        if $z1 != 0 goto label04;

        return 0;

     label04:
        $l3 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor>;

        $r3 = (androidx.compose.material3.CheckboxColors) r1;

        $l2 = $r3.<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor>;

        $z2 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l3, $l2);

        if $z2 != 0 goto label05;

        return 0;

     label05:
        $l5 = r0.<androidx.compose.material3.CheckboxColors: long checkedBoxColor>;

        $r4 = (androidx.compose.material3.CheckboxColors) r1;

        $l4 = $r4.<androidx.compose.material3.CheckboxColors: long checkedBoxColor>;

        $z3 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l5, $l4);

        if $z3 != 0 goto label06;

        return 0;

     label06:
        $l7 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor>;

        $r5 = (androidx.compose.material3.CheckboxColors) r1;

        $l6 = $r5.<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor>;

        $z4 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l7, $l6);

        if $z4 != 0 goto label07;

        return 0;

     label07:
        $l9 = r0.<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor>;

        $r6 = (androidx.compose.material3.CheckboxColors) r1;

        $l8 = $r6.<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor>;

        $z5 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l9, $l8);

        if $z5 != 0 goto label08;

        return 0;

     label08:
        $l11 = r0.<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor>;

        $r7 = (androidx.compose.material3.CheckboxColors) r1;

        $l10 = $r7.<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor>;

        $z6 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l11, $l10);

        if $z6 != 0 goto label09;

        return 0;

     label09:
        $l13 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor>;

        $r8 = (androidx.compose.material3.CheckboxColors) r1;

        $l12 = $r8.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor>;

        $z7 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l13, $l12);

        if $z7 != 0 goto label10;

        return 0;

     label10:
        $l15 = r0.<androidx.compose.material3.CheckboxColors: long checkedBorderColor>;

        $r9 = (androidx.compose.material3.CheckboxColors) r1;

        $l14 = $r9.<androidx.compose.material3.CheckboxColors: long checkedBorderColor>;

        $z8 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l15, $l14);

        if $z8 != 0 goto label11;

        return 0;

     label11:
        $l17 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor>;

        $r10 = (androidx.compose.material3.CheckboxColors) r1;

        $l16 = $r10.<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor>;

        $z9 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l17, $l16);

        if $z9 != 0 goto label12;

        return 0;

     label12:
        $l19 = r0.<androidx.compose.material3.CheckboxColors: long disabledBorderColor>;

        $r11 = (androidx.compose.material3.CheckboxColors) r1;

        $l18 = $r11.<androidx.compose.material3.CheckboxColors: long disabledBorderColor>;

        $z10 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l19, $l18);

        if $z10 != 0 goto label13;

        return 0;

     label13:
        $l21 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor>;

        $r12 = (androidx.compose.material3.CheckboxColors) r1;

        $l20 = $r12.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor>;

        $z11 = staticinvoke <androidx.compose.ui.graphics.Color: boolean equals-impl0(long,long)>($l21, $l20);

        if $z11 != 0 goto label14;

        return 0;

     label14:
        return 1;
    }

    public int hashCode()
    {
        androidx.compose.material3.CheckboxColors r0;
        long $l0, $l1, $l4, $l7, $l10, $l13, $l16, $l19, $l22, $l25, $l28;
        int $i2, $i3, $i5, $i6, $i8, $i9, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21, $i23, $i24, $i26, $i27, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        $l0 = r0.<androidx.compose.material3.CheckboxColors: long checkedCheckmarkColor>;

        i31 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l0);

        $i2 = 31 * i31;

        $l1 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedCheckmarkColor>;

        $i3 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l1);

        i32 = $i2 + $i3;

        $i5 = 31 * i32;

        $l4 = r0.<androidx.compose.material3.CheckboxColors: long checkedBoxColor>;

        $i6 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l4);

        i33 = $i5 + $i6;

        $i8 = 31 * i33;

        $l7 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBoxColor>;

        $i9 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l7);

        i34 = $i8 + $i9;

        $i11 = 31 * i34;

        $l10 = r0.<androidx.compose.material3.CheckboxColors: long disabledCheckedBoxColor>;

        $i12 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l10);

        i35 = $i11 + $i12;

        $i14 = 31 * i35;

        $l13 = r0.<androidx.compose.material3.CheckboxColors: long disabledUncheckedBoxColor>;

        $i15 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l13);

        i36 = $i14 + $i15;

        $i17 = 31 * i36;

        $l16 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBoxColor>;

        $i18 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l16);

        i37 = $i17 + $i18;

        $i20 = 31 * i37;

        $l19 = r0.<androidx.compose.material3.CheckboxColors: long checkedBorderColor>;

        $i21 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l19);

        i38 = $i20 + $i21;

        $i23 = 31 * i38;

        $l22 = r0.<androidx.compose.material3.CheckboxColors: long uncheckedBorderColor>;

        $i24 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l22);

        i39 = $i23 + $i24;

        $i26 = 31 * i39;

        $l25 = r0.<androidx.compose.material3.CheckboxColors: long disabledBorderColor>;

        $i27 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l25);

        i40 = $i26 + $i27;

        $i29 = 31 * i40;

        $l28 = r0.<androidx.compose.material3.CheckboxColors: long disabledIndeterminateBorderColor>;

        $i30 = staticinvoke <androidx.compose.ui.graphics.Color: int hashCode-impl(long)>($l28);

        i41 = $i29 + $i30;

        return i41;
    }

    public void <init>(long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material3.CheckboxColors r0;
        long l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.material3.CheckboxColors;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        l8 := @parameter8: long;

        l9 := @parameter9: long;

        l10 := @parameter10: long;

        $r1 := @parameter11: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material3.CheckboxColors: void <init>(long,long,long,long,long,long,long,long,long,long,long)>(l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10);

        return;
    }

androidx.compose.material3.CheckboxColors$WhenMappings
<androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.state.ToggleableState[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.ui.state.ToggleableState $r2, $r3, $r4;

        $r1 = staticinvoke <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState On>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Indeterminate>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState Off>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.state.ToggleableState: int ordinal()>();

        r0[$i3] = 3;

        <androidx.compose.material3.CheckboxColors$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

