androidx.core.location.LocationManagerCompat
<androidx.core.location.LocationManagerCompat: long GET_CURRENT_LOCATION_TIMEOUT_MS>
<androidx.core.location.LocationManagerCompat: long MAX_CURRENT_LOCATION_AGE_MS>
<androidx.core.location.LocationManagerCompat: long PRE_N_LOOPER_TIMEOUT_S>
<androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField>
<androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass>
<androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod>
<androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod>
<androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>
    public static boolean isLocationEnabled(android.location.LocationManager)
    {
        android.location.LocationManager r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.reflect.Field $r1, $r2, $r8, $r9;
        java.lang.Object $r3;
        android.content.ContentResolver $r4, $r6;
        java.lang.String $r5;
        java.lang.Class $r7;
        java.lang.Throwable $r10, r12;
        android.content.Context r11;

        r0 := @parameter0: android.location.LocationManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label01;

        $z2 = staticinvoke <androidx.core.location.LocationManagerCompat$Api28Impl: boolean isLocationEnabled(android.location.LocationManager)>(r0);

        return $z2;

     label01:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 > 19 goto label11;

     label02:
        $r1 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField>;

        if $r1 != null goto label03;

        $r7 = class "Landroid/location/LocationManager;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mContext");

        <androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField> = $r8;

        $r9 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField>;

        virtualinvoke $r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label03:
        $r2 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r11 = (android.content.Context) $r3;

        if r11 == null goto label09;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 != 19 goto label06;

        $r6 = virtualinvoke r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r6, "location_mode", 0);

        if $i3 == 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        return $z3;

     label06:
        $r4 = virtualinvoke r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "location_providers_allowed");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        return $z4;

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        r12 = $r10;

     label11:
        $z5 = virtualinvoke r0.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("network");

        if $z5 != 0 goto label12;

        $z0 = virtualinvoke r0.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>("gps");

        if $z0 == 0 goto label13;

     label12:
        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        return $z6;

        catch java.lang.ClassCastException from label02 to label05 with label10;
        catch java.lang.SecurityException from label02 to label05 with label10;
        catch java.lang.NoSuchFieldException from label02 to label05 with label10;
        catch java.lang.IllegalAccessException from label02 to label05 with label10;
        catch java.lang.ClassCastException from label06 to label08 with label10;
        catch java.lang.SecurityException from label06 to label08 with label10;
        catch java.lang.NoSuchFieldException from label06 to label08 with label10;
        catch java.lang.IllegalAccessException from label06 to label08 with label10;
    }

    public static boolean hasProvider(android.location.LocationManager, java.lang.String)
    {
        android.location.LocationManager r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r5;
        int $i0;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        android.location.LocationProvider $r4;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label1;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api31Impl: boolean hasProvider(android.location.LocationManager,java.lang.String)>(r0, r1);

        return $z1;

     label1:
        $r3 = virtualinvoke r0.<android.location.LocationManager: java.util.List getAllProviders()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>(r1);

        if $r4 == null goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        return 0;

        catch java.lang.SecurityException from label2 to label4 with label5;
    }

    public static void getCurrentLocation(android.location.LocationManager, java.lang.String, androidx.core.os.CancellationSignal, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        android.location.LocationManager r0;
        java.lang.String r1;
        androidx.core.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        androidx.core.util.Consumer r4;
        android.location.Location r5;
        int $i0;
        androidx.core.location.LocationManagerCompat$CancellableLocationListener $r6, r11;
        android.os.Looper $r7;
        androidx.core.os.CancellationSignal$OnCancelListener $r9;
        long $l1, $l2, l4;
        byte $b3;
        java.lang.Runnable $r10;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.core.os.CancellationSignal;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: androidx.core.util.Consumer;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        staticinvoke <androidx.core.location.LocationManagerCompat$Api30Impl: void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r0, r1, r2, r3, r4);

        return;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<androidx.core.os.CancellationSignal: void throwIfCanceled()>();

     label2:
        r5 = virtualinvoke r0.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>(r1);

        if r5 == null goto label3;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = staticinvoke <androidx.core.location.LocationCompat: long getElapsedRealtimeMillis(android.location.Location)>(r5);

        l4 = $l1 - $l2;

        $b3 = l4 cmp 10000L;

        if $b3 >= 0 goto label3;

        $r10 = dynamicinvoke "run" <java.lang.Runnable (androidx.core.util.Consumer,android.location.Location)>(r4, r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.core.location.LocationManagerCompat: void lambda$getCurrentLocation$0(androidx.core.util.Consumer,android.location.Location)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r10);

        return;

     label3:
        $r6 = new androidx.core.location.LocationManagerCompat$CancellableLocationListener;

        specialinvoke $r6.<androidx.core.location.LocationManagerCompat$CancellableLocationListener: void <init>(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r0, r3, r4);

        r11 = $r6;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        virtualinvoke r0.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>(r1, 0L, 0.0F, r11, $r7);

        if r2 == null goto label4;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r11);

        $r9 = dynamicinvoke "onCancel" <androidx.core.os.CancellationSignal$OnCancelListener (androidx.core.location.LocationManagerCompat$CancellableLocationListener)>(r11) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void cancel()>, methodtype: void __METHODTYPE__());

        virtualinvoke r2.<androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)>($r9);

     label4:
        virtualinvoke r11.<androidx.core.location.LocationManagerCompat$CancellableLocationListener: void startTimeout(long)>(30000L);

        return;
    }

    public static void requestLocationUpdates(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, java.util.concurrent.Executor, androidx.core.location.LocationListenerCompat)
    {
        android.location.LocationManager r0;
        java.lang.String r1;
        androidx.core.location.LocationRequestCompat r2;
        java.util.concurrent.Executor r3;
        androidx.core.location.LocationListenerCompat r4;
        androidx.core.location.LocationManagerCompat$LocationListenerTransport r5, $r8;
        java.util.WeakHashMap r6, $r10;
        java.lang.Throwable r7, $r13;
        int $i0, $i1, $i2;
        androidx.core.location.LocationManagerCompat$LocationListenerKey $r9;
        long $l3;
        float $f0;
        android.os.Looper $r11;
        boolean $z0, $z1;
        android.location.LocationRequest $r12;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.core.location.LocationRequestCompat;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: androidx.core.location.LocationListenerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label1;

        $r12 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: android.location.LocationRequest toLocationRequest()>();

        staticinvoke <androidx.core.location.LocationManagerCompat$Api31Impl: void requestLocationUpdates(android.location.LocationManager,java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener)>(r0, r1, $r12, r3, r4);

        return;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 30 goto label2;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api30Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,java.util.concurrent.Executor,androidx.core.location.LocationListenerCompat)>(r0, r1, r2, r3, r4);

        if $z1 == 0 goto label2;

        return;

     label2:
        $r8 = new androidx.core.location.LocationManagerCompat$LocationListenerTransport;

        $r9 = new androidx.core.location.LocationManagerCompat$LocationListenerKey;

        specialinvoke $r9.<androidx.core.location.LocationManagerCompat$LocationListenerKey: void <init>(java.lang.String,androidx.core.location.LocationListenerCompat)>(r1, r4);

        specialinvoke $r8.<androidx.core.location.LocationManagerCompat$LocationListenerTransport: void <init>(androidx.core.location.LocationManagerCompat$LocationListenerKey,java.util.concurrent.Executor)>($r9, r3);

        r5 = $r8;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 19 goto label3;

        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationManagerCompat$LocationListenerTransport)>(r0, r1, r2, r5);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r10 = <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>;

        r6 = $r10;

        entermonitor $r10;

     label4:
        $l3 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: long getIntervalMillis()>();

        $f0 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: float getMinUpdateDistanceMeters()>();

        $r11 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        virtualinvoke r0.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>(r1, $l3, $f0, r5, $r11);

        staticinvoke <androidx.core.location.LocationManagerCompat: void registerLocationListenerTransport(android.location.LocationManager,androidx.core.location.LocationManagerCompat$LocationListenerTransport)>(r0, r5);

        exitmonitor r6;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r7 = $r13;

        exitmonitor r6;

     label7:
        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void registerLocationListenerTransport(android.location.LocationManager, androidx.core.location.LocationManagerCompat$LocationListenerTransport)
    {
        android.location.LocationManager r0;
        androidx.core.location.LocationManagerCompat$LocationListenerTransport r1, r3, $r9;
        java.lang.ref.WeakReference r2, $r6;
        java.util.WeakHashMap $r4;
        androidx.core.location.LocationManagerCompat$LocationListenerKey $r5;
        java.lang.Object $r7, $r8;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: androidx.core.location.LocationManagerCompat$LocationListenerTransport;

        $r4 = <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>;

        $r5 = virtualinvoke r1.<androidx.core.location.LocationManagerCompat$LocationListenerTransport: androidx.core.location.LocationManagerCompat$LocationListenerKey getKey()>();

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        r2 = (java.lang.ref.WeakReference) $r7;

        if r2 == null goto label1;

        $r8 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r9 = (androidx.core.location.LocationManagerCompat$LocationListenerTransport) $r8;

        goto label2;

     label1:
        $r9 = null;

     label2:
        r3 = $r9;

        if r3 == null goto label3;

        virtualinvoke r3.<androidx.core.location.LocationManagerCompat$LocationListenerTransport: void unregister()>();

        virtualinvoke r0.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r3);

     label3:
        return;
    }

    public static void requestLocationUpdates(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, androidx.core.location.LocationListenerCompat, android.os.Looper)
    {
        android.location.LocationManager r0;
        java.lang.String r1;
        androidx.core.location.LocationRequestCompat r2;
        androidx.core.location.LocationListenerCompat r3;
        android.os.Looper r4;
        int $i0, $i1;
        long $l2;
        float $f0;
        boolean $z0;
        android.location.LocationRequest $r5;
        android.os.Handler $r6;
        java.util.concurrent.Executor $r7;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.core.location.LocationRequestCompat;

        r3 := @parameter3: androidx.core.location.LocationListenerCompat;

        r4 := @parameter4: android.os.Looper;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label1;

        $r5 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: android.location.LocationRequest toLocationRequest()>();

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>(r4);

        $r7 = staticinvoke <androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)>($r6);

        staticinvoke <androidx.core.location.LocationManagerCompat$Api31Impl: void requestLocationUpdates(android.location.LocationManager,java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener)>(r0, r1, $r5, $r7, r3);

        return;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 19 goto label2;

        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationListenerCompat,android.os.Looper)>(r0, r1, r2, r3, r4);

        if $z0 == 0 goto label2;

        return;

     label2:
        $l2 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: long getIntervalMillis()>();

        $f0 = virtualinvoke r2.<androidx.core.location.LocationRequestCompat: float getMinUpdateDistanceMeters()>();

        virtualinvoke r0.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>(r1, $l2, $f0, r3, r4);

        return;
    }

    public static void removeUpdates(android.location.LocationManager, androidx.core.location.LocationListenerCompat)
    {
        android.location.LocationManager r0;
        androidx.core.location.LocationListenerCompat r1, $r14;
        java.util.WeakHashMap r2, $r6, $r7, $r10;
        androidx.core.location.LocationManagerCompat$LocationListenerTransport r3;
        androidx.core.location.LocationManagerCompat$LocationListenerKey r4, r21;
        java.lang.Throwable r5, $r16;
        java.util.Collection $r8;
        boolean $z0, $z2;
        java.lang.Object $r9, $r12, $r13;
        java.util.ArrayList $r15, r17;
        java.util.Iterator r18, r20;
        java.lang.ref.WeakReference r19;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: androidx.core.location.LocationListenerCompat;

        $r6 = <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r17 = null;

        $r7 = <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>;

        $r8 = virtualinvoke $r7.<java.util.WeakHashMap: java.util.Collection values()>();

        r18 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r12 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.ref.WeakReference) $r12;

        $r13 = virtualinvoke r19.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.core.location.LocationManagerCompat$LocationListenerTransport) $r13;

        if r3 != null goto label03;

        goto label02;

     label03:
        r4 = virtualinvoke r3.<androidx.core.location.LocationManagerCompat$LocationListenerTransport: androidx.core.location.LocationManagerCompat$LocationListenerKey getKey()>();

        $r14 = r4.<androidx.core.location.LocationManagerCompat$LocationListenerKey: androidx.core.location.LocationListenerCompat mListener>;

        if $r14 != r1 goto label05;

        if r17 != null goto label04;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r17 = $r15;

     label04:
        virtualinvoke r17.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        virtualinvoke r3.<androidx.core.location.LocationManagerCompat$LocationListenerTransport: void unregister()>();

        virtualinvoke r0.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r3);

     label05:
        goto label02;

     label06:
        if r17 == null goto label08;

        r20 = virtualinvoke r17.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (androidx.core.location.LocationManagerCompat$LocationListenerKey) $r9;

        $r10 = <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners>;

        virtualinvoke $r10.<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>(r21);

        goto label07;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r2;

     label11:
        throw r5;

     label12:
        virtualinvoke r0.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>(r1);

        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static java.lang.String getGnssHardwareModelName(android.location.LocationManager)
    {
        android.location.LocationManager r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: android.location.LocationManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api28Impl: java.lang.String getGnssHardwareModelName(android.location.LocationManager)>(r0);

        return $r1;

     label1:
        return null;
    }

    public static int getGnssYearOfHardware(android.location.LocationManager)
    {
        android.location.LocationManager r0;
        int $i0, $i1;

        r0 := @parameter0: android.location.LocationManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $i1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api28Impl: int getGnssYearOfHardware(android.location.LocationManager)>(r0);

        return $i1;

     label1:
        return 0;
    }

    public static boolean registerGnssMeasurementsCallback(android.location.LocationManager, android.location.GnssMeasurementsEvent$Callback, android.os.Handler)
    {
        android.location.LocationManager r0;
        android.location.GnssMeasurementsEvent$Callback r1;
        android.os.Handler r2;
        int $i0;
        java.util.concurrent.Executor $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: android.location.GnssMeasurementsEvent$Callback;

        r2 := @parameter2: android.os.Handler;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 30 goto label1;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api24Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback,android.os.Handler)>(r0, r1, r2);

        return $z1;

     label1:
        $r3 = staticinvoke <androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)>(r2);

        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssMeasurementsCallbackOnR(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)>(r0, $r3, r1);

        return $z0;
    }

    public static boolean registerGnssMeasurementsCallback(android.location.LocationManager, java.util.concurrent.Executor, android.location.GnssMeasurementsEvent$Callback)
    {
        android.location.LocationManager r0;
        java.util.concurrent.Executor r1;
        android.location.GnssMeasurementsEvent$Callback r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.location.GnssMeasurementsEvent$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 30 goto label1;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api31Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)>(r0, r1, r2);

        return $z1;

     label1:
        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssMeasurementsCallbackOnR(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)>(r0, r1, r2);

        return $z0;
    }

    public static void unregisterGnssMeasurementsCallback(android.location.LocationManager, android.location.GnssMeasurementsEvent$Callback)
    {
        android.location.LocationManager r0;
        android.location.GnssMeasurementsEvent$Callback r1;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: android.location.GnssMeasurementsEvent$Callback;

        staticinvoke <androidx.core.location.LocationManagerCompat$Api24Impl: void unregisterGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback)>(r0, r1);

        return;
    }

    private static boolean registerGnssMeasurementsCallbackOnR(android.location.LocationManager, java.util.concurrent.Executor, android.location.GnssMeasurementsEvent$Callback)
    {
        android.location.LocationManager r0;
        java.util.concurrent.Executor r1;
        android.location.GnssMeasurementsEvent$Callback r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        java.lang.Class $r4, $r9, $r19, $r20, $r24, $r27;
        java.lang.reflect.Method $r5, $r6, $r10, $r11, $r21, $r22, $r25, $r26;
        java.lang.Object[] $r7, $r13, $r15;
        java.lang.Class[] $r8, $r18, $r23;
        java.lang.reflect.Constructor $r12;
        java.lang.Object $r14, $r16, r29;
        java.lang.Boolean $r17;
        boolean $z0, $z1;
        java.lang.Throwable $r28, r30;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: android.location.GnssMeasurementsEvent$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 30 goto label8;

     label1:
        $r4 = <androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass>;

        if $r4 != null goto label2;

        $r27 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.location.GnssRequest$Builder");

        <androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass> = $r27;

     label2:
        $r5 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod>;

        if $r5 != null goto label3;

        $r24 = <androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass>;

        $r23 = newarray (java.lang.Class)[0];

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("build", $r23);

        <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod> = $r25;

        $r26 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod>;

        virtualinvoke $r26.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label3:
        $r6 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod>;

        if $r6 != null goto label4;

        $r19 = class "Landroid/location/LocationManager;";

        $r18 = newarray (java.lang.Class)[3];

        $r20 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.location.GnssRequest");

        $r18[0] = $r20;

        $r18[1] = class "Ljava/util/concurrent/Executor;";

        $r18[2] = class "Landroid/location/GnssMeasurementsEvent$Callback;";

        $r21 = virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("registerGnssMeasurementsCallback", $r18);

        <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod> = $r21;

        $r22 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod>;

        virtualinvoke $r22.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        $r10 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod>;

        $r7 = newarray (java.lang.Object)[3];

        $r11 = <androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod>;

        $r9 = <androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass>;

        $r8 = newarray (java.lang.Class)[0];

        $r12 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r8);

        $r13 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke $r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

        $r15 = newarray (java.lang.Object)[0];

        $r16 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r14, $r15);

        $r7[0] = $r16;

        $r7[1] = r1;

        $r7[2] = r2;

        r29 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

        if r29 == null goto label5;

        $r17 = (java.lang.Boolean) r29;

        $z0 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        $r28 := @caughtexception;

        r30 = $r28;

        return 0;

     label8:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label6 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label6 with label7;
        catch java.lang.NoSuchMethodException from label1 to label6 with label7;
        catch java.lang.IllegalAccessException from label1 to label6 with label7;
        catch java.lang.InstantiationException from label1 to label6 with label7;
    }

    public static boolean registerGnssStatusCallback(android.location.LocationManager, androidx.core.location.GnssStatusCompat$Callback, android.os.Handler)
    {
        android.location.LocationManager r0;
        androidx.core.location.GnssStatusCompat$Callback r1;
        android.os.Handler r2;
        int $i0;
        androidx.core.location.LocationManagerCompat$InlineHandlerExecutor $r3;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r4;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: androidx.core.location.GnssStatusCompat$Callback;

        r2 := @parameter2: android.os.Handler;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        $r4 = staticinvoke <androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)>(r2);

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, $r4, r1);

        return $z1;

     label1:
        $r3 = new androidx.core.location.LocationManagerCompat$InlineHandlerExecutor;

        specialinvoke $r3.<androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void <init>(android.os.Handler)>(r2);

        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, $r3, r1);

        return $z0;
    }

    public static boolean registerGnssStatusCallback(android.location.LocationManager, java.util.concurrent.Executor, androidx.core.location.GnssStatusCompat$Callback)
    {
        android.location.LocationManager r0;
        java.util.concurrent.Executor r1;
        androidx.core.location.GnssStatusCompat$Callback r2;
        int $i0;
        android.os.Handler $r3;
        boolean $z0, $z1;
        android.os.Looper r4;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.core.location.GnssStatusCompat$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, null, r1, r2);

        return $z1;

     label1:
        r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r4 != null goto label2;

        r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

     label2:
        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>(r4);

        $z0 = staticinvoke <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, $r3, r1, r2);

        return $z0;
    }

    private static boolean registerGnssStatusCallback(android.location.LocationManager, android.os.Handler, java.util.concurrent.Executor, androidx.core.location.GnssStatusCompat$Callback)
    {
        android.location.LocationManager r0;
        android.os.Handler r1;
        java.util.concurrent.Executor r2;
        androidx.core.location.GnssStatusCompat$Callback r3;
        androidx.collection.SimpleArrayMap r4, $r9, $r10, $r18;
        androidx.core.location.LocationManagerCompat$GpsStatusTransport r5, r45, r52;
        java.util.concurrent.FutureTask r6, r53;
        long l0, $l3, $l4, l5;
        java.lang.Throwable r7, r8, $r27, $r33, $r34, $r35, $r36, $r38, $r40, $r42, $r43, r49, r50, r51, r60;
        int $i1, $i2;
        java.lang.Object $r11, $r47;
        java.util.concurrent.Callable $r13;
        android.os.Looper $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, z8, z9;
        java.util.concurrent.TimeUnit $r16, $r46;
        java.lang.Thread $r17, $r20, $r44;
        java.lang.StringBuilder $r23, $r24, $r30, $r31, r54, r57;
        java.lang.String $r25, $r32;
        java.lang.Error $r39;
        java.lang.RuntimeException $r41;
        java.lang.Boolean $r48;
        java.lang.IllegalStateException r55, r56, r58;
        java.lang.Runnable r59;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: androidx.core.location.GnssStatusCompat$Callback;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 30 goto label01;

        $z2 = staticinvoke <androidx.core.location.LocationManagerCompat$Api30Impl: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, r1, r2, r3);

        return $z2;

     label01:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 24 goto label02;

        $z1 = staticinvoke <androidx.core.location.LocationManagerCompat$Api24Impl: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>(r0, r1, r2, r3);

        return $z1;

     label02:
        if r1 == null goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z5);

        $r9 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        r4 = $r9;

        entermonitor $r9;

     label05:
        $r10 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        $r11 = virtualinvoke $r10.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r45 = (androidx.core.location.LocationManagerCompat$GpsStatusTransport) $r11;

        if r45 != null goto label06;

        r52 = new androidx.core.location.LocationManagerCompat$GpsStatusTransport;

        specialinvoke r52.<androidx.core.location.LocationManagerCompat$GpsStatusTransport: void <init>(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>(r0, r3);

        r45 = r52;

        goto label07;

     label06:
        virtualinvoke r45.<androidx.core.location.LocationManagerCompat$GpsStatusTransport: void unregister()>();

     label07:
        virtualinvoke r45.<androidx.core.location.LocationManagerCompat$GpsStatusTransport: void register(java.util.concurrent.Executor)>(r2);

        r5 = r45;

        r53 = new java.util.concurrent.FutureTask;

        $r13 = dynamicinvoke "call" <java.util.concurrent.Callable (android.location.LocationManager,androidx.core.location.LocationManagerCompat$GpsStatusTransport)>(r0, r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.core.location.LocationManagerCompat: java.lang.Boolean lambda$registerGnssStatusCallback$1(android.location.LocationManager,androidx.core.location.LocationManagerCompat$GpsStatusTransport)>, methodtype: java.lang.Boolean __METHODTYPE__());

        specialinvoke r53.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r13);

        r6 = r53;

        $r14 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r15 = virtualinvoke r1.<android.os.Handler: android.os.Looper getLooper()>();

        if $r14 != $r15 goto label08;

        virtualinvoke r6.<java.util.concurrent.FutureTask: void run()>();

        goto label09;

     label08:
        r59 = (java.lang.Runnable) r6;

        $z0 = virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r59);

        if $z0 != 0 goto label09;

        r55 = new java.lang.IllegalStateException;

        r54 = new java.lang.StringBuilder;

        specialinvoke r54.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is shutting down");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r55.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw r55;

     label09:
        z6 = 0;

     label10:
        $r16 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        l5 = virtualinvoke $r16.<java.util.concurrent.TimeUnit: long toNanos(long)>(5L);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        l0 = $l3 + l5;

     label11:
        $r46 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r47 = virtualinvoke r6.<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l5, $r46);

        $r48 = (java.lang.Boolean) $r47;

        $z7 = virtualinvoke $r48.<java.lang.Boolean: boolean booleanValue()>();

        if $z7 == 0 goto label15;

        $r18 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        virtualinvoke $r18.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

        z8 = 1;

     label12:
        if z6 == 0 goto label13;

        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r20.<java.lang.Thread: void interrupt()>();

     label13:
        exitmonitor r4;

     label14:
        return z8;

     label15:
        z9 = 0;

     label16:
        if z6 == 0 goto label17;

        $r17 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r17.<java.lang.Thread: void interrupt()>();

     label17:
        exitmonitor r4;

     label18:
        return z9;

     label19:
        $r42 := @caughtexception;

        r49 = $r42;

        z6 = 1;

        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        l5 = l0 - $l4;

        goto label11;

     label20:
        $r34 := @caughtexception;

        r50 = $r34;

        $r35 = virtualinvoke r50.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z3 = $r35 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label21;

        $r40 = virtualinvoke r50.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r41 = (java.lang.RuntimeException) $r40;

        r60 = (java.lang.Throwable) $r41;

        throw r60;

     label21:
        $r36 = virtualinvoke r50.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z4 = $r36 instanceof java.lang.Error;

        if $z4 == 0 goto label22;

        $r38 = virtualinvoke r50.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r39 = (java.lang.Error) $r38;

        throw $r39;

     label22:
        r56 = new java.lang.IllegalStateException;

        specialinvoke r56.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r50);

        throw r56;

     label23:
        $r27 := @caughtexception;

        r51 = $r27;

        r58 = new java.lang.IllegalStateException;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appears to be blocked, please run registerGnssStatusCallback() directly on a Looper thread or ensure the main Looper is not blocked by this thread");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r58.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r51);

        throw r58;

     label24:
        $r43 := @caughtexception;

        r7 = $r43;

     label25:
        if z6 == 0 goto label26;

        $r44 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r44.<java.lang.Thread: void interrupt()>();

     label26:
        throw r7;

     label27:
        $r33 := @caughtexception;

        r8 = $r33;

        exitmonitor r4;

     label28:
        throw r8;

        catch java.lang.InterruptedException from label11 to label12 with label19;
        catch java.lang.InterruptedException from label15 to label16 with label19;
        catch java.util.concurrent.ExecutionException from label10 to label12 with label20;
        catch java.util.concurrent.ExecutionException from label15 to label16 with label20;
        catch java.util.concurrent.ExecutionException from label19 to label20 with label20;
        catch java.util.concurrent.TimeoutException from label10 to label12 with label23;
        catch java.util.concurrent.TimeoutException from label15 to label16 with label23;
        catch java.util.concurrent.TimeoutException from label19 to label20 with label23;
        catch java.lang.Throwable from label10 to label12 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label19 to label25 with label24;
        catch java.lang.Throwable from label05 to label14 with label27;
        catch java.lang.Throwable from label15 to label18 with label27;
        catch java.lang.Throwable from label19 to label28 with label27;
    }

    public static void unregisterGnssStatusCallback(android.location.LocationManager, androidx.core.location.GnssStatusCompat$Callback)
    {
        android.location.LocationManager r0;
        androidx.core.location.GnssStatusCompat$Callback r1;
        java.lang.Throwable r2, r3, $r9, $r10;
        int $i0;
        androidx.collection.SimpleArrayMap $r4, $r5, $r7, $r8, r11, r13;
        java.lang.Object $r6, r12;
        androidx.core.location.LocationManagerCompat$GpsStatusTransport r14;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: androidx.core.location.GnssStatusCompat$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label07;

        $r7 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        r11 = $r7;

        entermonitor $r7;

     label01:
        $r8 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        r12 = virtualinvoke $r8.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        if r12 == null goto label02;

        staticinvoke <androidx.core.location.LocationManagerCompat$Api24Impl: void unregisterGnssStatusCallback(android.location.LocationManager,java.lang.Object)>(r0, r12);

     label02:
        exitmonitor r11;

     label03:
        goto label06;

     label04:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r11;

     label05:
        throw r2;

     label06:
        goto label13;

     label07:
        $r4 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        r13 = $r4;

        entermonitor $r4;

     label08:
        $r5 = <androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners>;

        $r6 = virtualinvoke $r5.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        r14 = (androidx.core.location.LocationManagerCompat$GpsStatusTransport) $r6;

        if r14 == null goto label09;

        virtualinvoke r14.<androidx.core.location.LocationManagerCompat$GpsStatusTransport: void unregister()>();

        virtualinvoke r0.<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>(r14);

     label09:
        exitmonitor r13;

     label10:
        goto label13;

     label11:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r13;

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void <init>()
    {
        androidx.core.location.LocationManagerCompat r0;

        r0 := @this: androidx.core.location.LocationManagerCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Boolean lambda$registerGnssStatusCallback$1(android.location.LocationManager, androidx.core.location.LocationManagerCompat$GpsStatusTransport) throws java.lang.Exception
    {
        android.location.LocationManager r0;
        androidx.core.location.LocationManagerCompat$GpsStatusTransport r1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @parameter0: android.location.LocationManager;

        r1 := @parameter1: androidx.core.location.LocationManagerCompat$GpsStatusTransport;

        $z0 = virtualinvoke r0.<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>(r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    private static void lambda$getCurrentLocation$0(androidx.core.util.Consumer, android.location.Location)
    {
        androidx.core.util.Consumer r0;
        android.location.Location r1;

        r0 := @parameter0: androidx.core.util.Consumer;

        r1 := @parameter1: android.location.Location;

        interfaceinvoke r0.<androidx.core.util.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners> = $r0;

        return;
    }

