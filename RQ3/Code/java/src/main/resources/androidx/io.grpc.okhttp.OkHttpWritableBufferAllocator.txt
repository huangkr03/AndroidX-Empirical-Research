io.grpc.okhttp.OkHttpWritableBufferAllocator
    void <init>()
    {
        io.grpc.okhttp.OkHttpWritableBufferAllocator $r0;

        $r0 := @this: io.grpc.okhttp.OkHttpWritableBufferAllocator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public io.grpc.internal.WritableBuffer allocate(int)
    {
        io.grpc.okhttp.OkHttpWritableBufferAllocator $r0;
        okio.Buffer $r1;
        int $i0;
        io.grpc.okhttp.OkHttpWritableBuffer $r2;

        $r0 := @this: io.grpc.okhttp.OkHttpWritableBufferAllocator;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(4096, $i0);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(1048576, $i0);

        $r2 = new io.grpc.okhttp.OkHttpWritableBuffer;

        $r1 = new okio.Buffer;

        specialinvoke $r1.<okio.Buffer: void <init>()>();

        specialinvoke $r2.<io.grpc.okhttp.OkHttpWritableBuffer: void <init>(okio.Buffer,int)>($r1, $i0);

        return $r2;
    }

