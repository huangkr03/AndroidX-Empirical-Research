androidx.appcompat.view.ActionMode
<androidx.appcompat.view.ActionMode: java.lang.Object mTag>
<androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint>
    public void <init>()
    {
        androidx.appcompat.view.ActionMode r0;

        r0 := @this: androidx.appcompat.view.ActionMode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setTag(java.lang.Object)
    {
        androidx.appcompat.view.ActionMode r0;
        java.lang.Object r1;

        r0 := @this: androidx.appcompat.view.ActionMode;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.appcompat.view.ActionMode: java.lang.Object mTag> = r1;

        return;
    }

    public java.lang.Object getTag()
    {
        androidx.appcompat.view.ActionMode r0;
        java.lang.Object $r1;

        r0 := @this: androidx.appcompat.view.ActionMode;

        $r1 = r0.<androidx.appcompat.view.ActionMode: java.lang.Object mTag>;

        return $r1;
    }

<androidx.appcompat.view.ActionMode: void setTitle(java.lang.CharSequence)>
<androidx.appcompat.view.ActionMode: void setTitle(int)>
<androidx.appcompat.view.ActionMode: void setSubtitle(java.lang.CharSequence)>
<androidx.appcompat.view.ActionMode: void setSubtitle(int)>
    public void setTitleOptionalHint(boolean)
    {
        androidx.appcompat.view.ActionMode r0;
        boolean z0;

        r0 := @this: androidx.appcompat.view.ActionMode;

        z0 := @parameter0: boolean;

        r0.<androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint> = z0;

        return;
    }

    public boolean getTitleOptionalHint()
    {
        androidx.appcompat.view.ActionMode r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.view.ActionMode;

        $z0 = r0.<androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint>;

        return $z0;
    }

    public boolean isTitleOptional()
    {
        androidx.appcompat.view.ActionMode r0;

        r0 := @this: androidx.appcompat.view.ActionMode;

        return 0;
    }

<androidx.appcompat.view.ActionMode: void setCustomView(android.view.View)>
<androidx.appcompat.view.ActionMode: void invalidate()>
<androidx.appcompat.view.ActionMode: void finish()>
<androidx.appcompat.view.ActionMode: android.view.Menu getMenu()>
<androidx.appcompat.view.ActionMode: java.lang.CharSequence getTitle()>
<androidx.appcompat.view.ActionMode: java.lang.CharSequence getSubtitle()>
<androidx.appcompat.view.ActionMode: android.view.View getCustomView()>
<androidx.appcompat.view.ActionMode: android.view.MenuInflater getMenuInflater()>
    public boolean isUiFocusable()
    {
        androidx.appcompat.view.ActionMode r0;

        r0 := @this: androidx.appcompat.view.ActionMode;

        return 1;
    }

androidx.appcompat.view.ActionMode$Callback
<androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<androidx.appcompat.view.ActionMode$Callback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>
<androidx.appcompat.view.ActionMode$Callback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)>
<androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>
