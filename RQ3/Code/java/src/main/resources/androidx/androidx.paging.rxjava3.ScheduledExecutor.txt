androidx.paging.rxjava3.ScheduledExecutor
<androidx.paging.rxjava3.ScheduledExecutor: java.util.concurrent.Executor executor>
<androidx.paging.rxjava3.ScheduledExecutor: io.reactivex.rxjava3.core.Scheduler scheduler>
    public void <init>(io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.rxjava3.ScheduledExecutor r0;
        io.reactivex.rxjava3.core.Scheduler r1;
        io.reactivex.rxjava3.core.Scheduler$Worker r2;
        androidx.paging.rxjava3.ScheduledExecutor$1 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor;

        r1 := @parameter0: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scheduler");

        specialinvoke r0.<io.reactivex.rxjava3.core.Scheduler: void <init>()>();

        r2 = virtualinvoke r1.<io.reactivex.rxjava3.core.Scheduler: io.reactivex.rxjava3.core.Scheduler$Worker createWorker()>();

        $r3 = new androidx.paging.rxjava3.ScheduledExecutor$1;

        specialinvoke $r3.<androidx.paging.rxjava3.ScheduledExecutor$1: void <init>(io.reactivex.rxjava3.core.Scheduler$Worker)>(r2);

        $r4 = (java.util.concurrent.Executor) $r3;

        r0.<androidx.paging.rxjava3.ScheduledExecutor: java.util.concurrent.Executor executor> = $r4;

        r0.<androidx.paging.rxjava3.ScheduledExecutor: io.reactivex.rxjava3.core.Scheduler scheduler> = r1;

        return;
    }

    public void <init>(java.util.concurrent.Executor)
    {
        androidx.paging.rxjava3.ScheduledExecutor r0;
        java.util.concurrent.Executor r1;
        io.reactivex.rxjava3.core.Scheduler r2;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor;

        r1 := @parameter0: java.util.concurrent.Executor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "executor");

        specialinvoke r0.<io.reactivex.rxjava3.core.Scheduler: void <init>()>();

        r0.<androidx.paging.rxjava3.ScheduledExecutor: java.util.concurrent.Executor executor> = r1;

        r2 = staticinvoke <io.reactivex.rxjava3.schedulers.Schedulers: io.reactivex.rxjava3.core.Scheduler 'from'(java.util.concurrent.Executor)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "from(executor)");

        r0.<androidx.paging.rxjava3.ScheduledExecutor: io.reactivex.rxjava3.core.Scheduler scheduler> = r2;

        return;
    }

    public io.reactivex.rxjava3.core.Scheduler$Worker createWorker()
    {
        androidx.paging.rxjava3.ScheduledExecutor r0;
        io.reactivex.rxjava3.core.Scheduler $r1;
        io.reactivex.rxjava3.core.Scheduler$Worker $r2;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor;

        $r1 = r0.<androidx.paging.rxjava3.ScheduledExecutor: io.reactivex.rxjava3.core.Scheduler scheduler>;

        $r2 = virtualinvoke $r1.<io.reactivex.rxjava3.core.Scheduler: io.reactivex.rxjava3.core.Scheduler$Worker createWorker()>();

        return $r2;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.paging.rxjava3.ScheduledExecutor r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor;

        r1 := @parameter0: java.lang.Runnable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "command");

        $r2 = r0.<androidx.paging.rxjava3.ScheduledExecutor: java.util.concurrent.Executor executor>;

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(r1);

        return;
    }

androidx.paging.rxjava3.ScheduledExecutor$1
<androidx.paging.rxjava3.ScheduledExecutor$1: io.reactivex.rxjava3.core.Scheduler$Worker $worker>
    void <init>(io.reactivex.rxjava3.core.Scheduler$Worker)
    {
        androidx.paging.rxjava3.ScheduledExecutor$1 r0;
        io.reactivex.rxjava3.core.Scheduler$Worker $r1;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor$1;

        $r1 := @parameter0: io.reactivex.rxjava3.core.Scheduler$Worker;

        r0.<androidx.paging.rxjava3.ScheduledExecutor$1: io.reactivex.rxjava3.core.Scheduler$Worker $worker> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void execute(java.lang.Runnable)
    {
        androidx.paging.rxjava3.ScheduledExecutor$1 r0;
        java.lang.Runnable r1;
        io.reactivex.rxjava3.core.Scheduler$Worker $r2;

        r0 := @this: androidx.paging.rxjava3.ScheduledExecutor$1;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.paging.rxjava3.ScheduledExecutor$1: io.reactivex.rxjava3.core.Scheduler$Worker $worker>;

        virtualinvoke $r2.<io.reactivex.rxjava3.core.Scheduler$Worker: io.reactivex.rxjava3.disposables.Disposable schedule(java.lang.Runnable)>(r1);

        return;
    }

