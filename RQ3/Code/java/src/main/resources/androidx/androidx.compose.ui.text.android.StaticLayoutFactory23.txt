androidx.compose.ui.text.android.StaticLayoutFactory23
    public void <init>()
    {
        androidx.compose.ui.text.android.StaticLayoutFactory23 r0;

        r0 := @this: androidx.compose.ui.text.android.StaticLayoutFactory23;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
    {
        androidx.compose.ui.text.android.StaticLayoutFactory23 r0;
        androidx.compose.ui.text.android.StaticLayoutParams r1;
        android.text.StaticLayout$Builder r2;
        java.lang.CharSequence $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.text.TextPaint $r5;
        android.text.TextDirectionHeuristic $r6;
        android.text.Layout$Alignment $r8;
        android.text.TextUtils$TruncateAt $r11;
        float $f0, $f1;
        boolean $z1, $z2;
        int[] $r18, $r19;
        android.text.StaticLayout $r21;

        r0 := @this: androidx.compose.ui.text.android.StaticLayoutFactory23;

        r1 := @parameter0: androidx.compose.ui.text.android.StaticLayoutParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        $r4 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: java.lang.CharSequence getText()>();

        $i0 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getStart()>();

        $i1 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getEnd()>();

        $r5 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: android.text.TextPaint getPaint()>();

        $i2 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getWidth()>();

        r2 = staticinvoke <android.text.StaticLayout$Builder: android.text.StaticLayout$Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>($r4, $i0, $i1, $r5, $i2);

        $r6 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: android.text.TextDirectionHeuristic getTextDir()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setTextDirection(android.text.TextDirectionHeuristic)>($r6);

        $r8 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: android.text.Layout$Alignment getAlignment()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setAlignment(android.text.Layout$Alignment)>($r8);

        $i3 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getMaxLines()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setMaxLines(int)>($i3);

        $r11 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: android.text.TextUtils$TruncateAt getEllipsize()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsize(android.text.TextUtils$TruncateAt)>($r11);

        $i4 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getEllipsizedWidth()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setEllipsizedWidth(int)>($i4);

        $f0 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: float getLineSpacingExtra()>();

        $f1 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: float getLineSpacingMultiplier()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setLineSpacing(float,float)>($f0, $f1);

        $z1 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: boolean getIncludePadding()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIncludePad(boolean)>($z1);

        $i5 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getBreakStrategy()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setBreakStrategy(int)>($i5);

        $i6 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getHyphenationFrequency()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setHyphenationFrequency(int)>($i6);

        $r18 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int[] getLeftIndents()>();

        $r19 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int[] getRightIndents()>();

        virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout$Builder setIndents(int[],int[])>($r18, $r19);

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 26 goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "this");

        $i12 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getJustificationMode()>();

        staticinvoke <androidx.compose.ui.text.android.StaticLayoutFactory26: void setJustificationMode(android.text.StaticLayout$Builder,int)>(r2, $i12);

     label1:
        $i8 = <android.os.Build$VERSION: int SDK_INT>;

        if $i8 < 28 goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "this");

        $z2 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: boolean getUseFallbackLineSpacing()>();

        staticinvoke <androidx.compose.ui.text.android.StaticLayoutFactory28: void setUseLineSpacingFromFallbacks(android.text.StaticLayout$Builder,boolean)>(r2, $z2);

     label2:
        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 < 33 goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "this");

        $i10 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getLineBreakStyle()>();

        $i11 = virtualinvoke r1.<androidx.compose.ui.text.android.StaticLayoutParams: int getLineBreakWordStyle()>();

        staticinvoke <androidx.compose.ui.text.android.StaticLayoutFactory33: void setLineBreakConfig(android.text.StaticLayout$Builder,int,int)>(r2, $i10, $i11);

     label3:
        $r21 = virtualinvoke r2.<android.text.StaticLayout$Builder: android.text.StaticLayout build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "obtain(params.text, para\u2026  }\n            }.build()");

        return $r21;
    }

    public boolean isFallbackLineSpacingEnabled(android.text.StaticLayout, boolean)
    {
        androidx.compose.ui.text.android.StaticLayoutFactory23 r0;
        android.text.StaticLayout r1;
        boolean z0, $z1, $z2;
        int $i0;

        r0 := @this: androidx.compose.ui.text.android.StaticLayoutFactory23;

        r1 := @parameter0: android.text.StaticLayout;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layout");

        $z1 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <androidx.compose.ui.text.android.StaticLayoutFactory33: boolean isFallbackLineSpacingEnabled(android.text.StaticLayout)>(r1);

        goto label3;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label2;

        $z2 = z0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

