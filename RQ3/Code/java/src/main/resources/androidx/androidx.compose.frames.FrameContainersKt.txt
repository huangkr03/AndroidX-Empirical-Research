androidx.compose.frames.FrameContainersKt
    public static final androidx.compose.frames.ModelList modelListOf()
    {
        androidx.compose.frames.ModelList $r0;

        $r0 = new androidx.compose.frames.ModelList;

        specialinvoke $r0.<androidx.compose.frames.ModelList: void <init>()>();

        return $r0;
    }

    public static final androidx.compose.frames.ModelList modelListOf(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.compose.frames.ModelList r1, $r2;
        boolean z0, z1;

        r0 := @parameter0: java.lang.Object;

        $r2 = new androidx.compose.frames.ModelList;

        specialinvoke $r2.<androidx.compose.frames.ModelList: void <init>()>();

        r1 = $r2;

        z0 = 0;

        z1 = 0;

        virtualinvoke r1.<androidx.compose.frames.ModelList: boolean add(java.lang.Object)>(r0);

        return r1;
    }

    public static final transient androidx.compose.frames.ModelList modelListOf(java.lang.Object[])
    {
        java.lang.Object[] r0;
        androidx.compose.frames.ModelList r1, $r2;
        boolean z0, z1;
        java.util.Collection $r3;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "elements");

        $r2 = new androidx.compose.frames.ModelList;

        specialinvoke $r2.<androidx.compose.frames.ModelList: void <init>()>();

        r1 = $r2;

        z0 = 0;

        z1 = 0;

        $r3 = (java.util.Collection) r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r3, r0);

        return r1;
    }

    public static final androidx.compose.frames.ModelMap modelMapOf()
    {
        androidx.compose.frames.ModelMap $r0;

        $r0 = new androidx.compose.frames.ModelMap;

        specialinvoke $r0.<androidx.compose.frames.ModelMap: void <init>()>();

        return $r0;
    }

    public static final transient androidx.compose.frames.ModelMap modelMapOf(kotlin.Pair[])
    {
        kotlin.Pair[] r0;
        androidx.compose.frames.ModelMap r1, $r2;
        boolean z0, z1;
        java.util.Map $r3;

        r0 := @parameter0: kotlin.Pair[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "pairs");

        $r2 = new androidx.compose.frames.ModelMap;

        specialinvoke $r2.<androidx.compose.frames.ModelMap: void <init>()>();

        r1 = $r2;

        z0 = 0;

        z1 = 0;

        $r3 = (java.util.Map) r1;

        staticinvoke <kotlin.collections.MapsKt: void putAll(java.util.Map,kotlin.Pair[])>($r3, r0);

        return r1;
    }

    private static final java.lang.Void error()
    {
        java.lang.String r0, $r2;
        boolean z0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r3;

        r0 = "Model sub-collection, iterators, lists and sets are immutable, use asMutable() first";

        z0 = 0;

        $r1 = new java.lang.IllegalStateException;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;
    }

    private static final java.util.Set immutableSet(java.util.Set)
    {
        java.util.Set r0, $r2;
        androidx.compose.frames.ImmutableSetImpl $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = new androidx.compose.frames.ImmutableSetImpl;

        specialinvoke $r1.<androidx.compose.frames.ImmutableSetImpl: void <init>(java.util.Set)>(r0);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    private static final java.util.Iterator immutableIterator(java.util.Iterator)
    {
        java.util.Iterator r0, $r2;
        androidx.compose.frames.ImmutableIteratorImpl $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = new androidx.compose.frames.ImmutableIteratorImpl;

        specialinvoke $r1.<androidx.compose.frames.ImmutableIteratorImpl: void <init>(java.util.Iterator)>(r0);

        $r2 = (java.util.Iterator) $r1;

        return $r2;
    }

    private static final java.util.ListIterator immutableListIterator(java.util.ListIterator)
    {
        java.util.ListIterator r0, $r2;
        androidx.compose.frames.ImmutableListIteratorImpl $r1;

        r0 := @parameter0: java.util.ListIterator;

        $r1 = new androidx.compose.frames.ImmutableListIteratorImpl;

        specialinvoke $r1.<androidx.compose.frames.ImmutableListIteratorImpl: void <init>(java.util.ListIterator)>(r0);

        $r2 = (java.util.ListIterator) $r1;

        return $r2;
    }

    private static final java.util.Collection immutableCollection(java.util.Collection)
    {
        java.util.Collection r0, $r2;
        androidx.compose.frames.ImmutableCollectionImpl $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new androidx.compose.frames.ImmutableCollectionImpl;

        specialinvoke $r1.<androidx.compose.frames.ImmutableCollectionImpl: void <init>(java.util.Collection)>(r0);

        $r2 = (java.util.Collection) $r1;

        return $r2;
    }

    public static final java.util.Set access$immutableSet(java.util.Set)
    {
        java.util.Set r0, $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Set immutableSet(java.util.Set)>(r0);

        return $r1;
    }

    public static final java.util.Collection access$immutableCollection(java.util.Collection)
    {
        java.util.Collection r0, $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Collection immutableCollection(java.util.Collection)>(r0);

        return $r1;
    }

    public static final java.lang.Void access$error()
    {
        staticinvoke <androidx.compose.frames.FrameContainersKt: java.lang.Void error()>();

        throw null;
    }

    public static final java.util.Iterator access$immutableIterator(java.util.Iterator)
    {
        java.util.Iterator r0, $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <androidx.compose.frames.FrameContainersKt: java.util.Iterator immutableIterator(java.util.Iterator)>(r0);

        return $r1;
    }

