androidx.camera.camera2.impl.Camera2ImplConfig
<androidx.camera.camera2.impl.Camera2ImplConfig: java.lang.String CAPTURE_REQUEST_ID_STEM>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option TEMPLATE_TYPE_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option STREAM_USE_CASE_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option DEVICE_STATE_CALLBACK_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_STATE_CALLBACK_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_CAPTURE_CALLBACK_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAMERA_EVENT_CALLBACK_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAPTURE_REQUEST_TAG_OPTION>
<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_PHYSICAL_CAMERA_ID_OPTION>
    public void <init>(androidx.camera.core.impl.Config)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        androidx.camera.core.impl.Config r1;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: androidx.camera.core.impl.Config;

        specialinvoke r0.<androidx.camera.camera2.interop.CaptureRequestOptions: void <init>(androidx.camera.core.impl.Config)>(r1);

        return;
    }

    public static androidx.camera.core.impl.Config$Option createCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key)
    {
        android.hardware.camera2.CaptureRequest$Key r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        androidx.camera.core.impl.Config$Option $r6;

        r0 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("camera2.captureRequest.option.");

        $r3 = virtualinvoke r0.<android.hardware.camera2.CaptureRequest$Key: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class,java.lang.Object)>($r5, class "Ljava/lang/Object;", r0);

        return $r6;
    }

    public androidx.camera.camera2.interop.CaptureRequestOptions getCaptureRequestOptions()
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        androidx.camera.core.impl.Config $r1;
        androidx.camera.camera2.interop.CaptureRequestOptions$Builder $r2;
        androidx.camera.camera2.interop.CaptureRequestOptions $r3;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        $r1 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r2 = staticinvoke <androidx.camera.camera2.interop.CaptureRequestOptions$Builder: androidx.camera.camera2.interop.CaptureRequestOptions$Builder 'from'(androidx.camera.core.impl.Config)>($r1);

        $r3 = virtualinvoke $r2.<androidx.camera.camera2.interop.CaptureRequestOptions$Builder: androidx.camera.camera2.interop.CaptureRequestOptions build()>();

        return $r3;
    }

    public long getStreamUseCase(long)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        long l0, $l1;
        androidx.camera.core.impl.Config $r1;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Long $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r2 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option STREAM_USE_CASE_OPTION>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4 = interfaceinvoke $r1.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Long) $r4;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public int getCaptureRequestTemplate(int)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config $r1;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r2 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option TEMPLATE_TYPE_OPTION>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r1.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public android.hardware.camera2.CameraDevice$StateCallback getDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        android.hardware.camera2.CameraDevice$StateCallback r1, $r5;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: android.hardware.camera2.CameraDevice$StateCallback;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option DEVICE_STATE_CALLBACK_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        $r5 = (android.hardware.camera2.CameraDevice$StateCallback) $r4;

        return $r5;
    }

    public android.hardware.camera2.CameraCaptureSession$StateCallback getSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        android.hardware.camera2.CameraCaptureSession$StateCallback r1, $r5;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$StateCallback;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_STATE_CALLBACK_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        $r5 = (android.hardware.camera2.CameraCaptureSession$StateCallback) $r4;

        return $r5;
    }

    public android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r1, $r5;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_CAPTURE_CALLBACK_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        $r5 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r4;

        return $r5;
    }

    public androidx.camera.camera2.impl.CameraEventCallbacks getCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        androidx.camera.camera2.impl.CameraEventCallbacks r1, $r5;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: androidx.camera.camera2.impl.CameraEventCallbacks;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAMERA_EVENT_CALLBACK_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        $r5 = (androidx.camera.camera2.impl.CameraEventCallbacks) $r4;

        return $r5;
    }

    public java.lang.Object getCaptureRequestTag(java.lang.Object)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        java.lang.Object r1, $r4;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAPTURE_REQUEST_TAG_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        return $r4;
    }

    public java.lang.String getPhysicalCameraId(java.lang.String)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig r0;
        java.lang.String r1, $r5;
        androidx.camera.core.impl.Config $r2;
        androidx.camera.core.impl.Config$Option $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config getConfig()>();

        $r3 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_PHYSICAL_CAMERA_ID_OPTION>;

        $r4 = interfaceinvoke $r2.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r3, r1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        androidx.camera.core.impl.Config$Option $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.captureRequest.templateType", $r0);

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option TEMPLATE_TYPE_OPTION> = $r1;

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $r3 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraCaptureSession.streamUseCase", $r2);

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option STREAM_USE_CASE_OPTION> = $r3;

        $r4 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraDevice.stateCallback", class "Landroid/hardware/camera2/CameraDevice$StateCallback;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option DEVICE_STATE_CALLBACK_OPTION> = $r4;

        $r5 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraCaptureSession.stateCallback", class "Landroid/hardware/camera2/CameraCaptureSession$StateCallback;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_STATE_CALLBACK_OPTION> = $r5;

        $r6 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraCaptureSession.captureCallback", class "Landroid/hardware/camera2/CameraCaptureSession$CaptureCallback;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_CAPTURE_CALLBACK_OPTION> = $r6;

        $r7 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraEvent.callback", class "Landroidx/camera/camera2/impl/CameraEventCallbacks;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAMERA_EVENT_CALLBACK_OPTION> = $r7;

        $r8 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.captureRequest.tag", class "Ljava/lang/Object;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAPTURE_REQUEST_TAG_OPTION> = $r8;

        $r9 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camera2.cameraCaptureSession.physicalCameraId", class "Ljava/lang/String;");

        <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option SESSION_PHYSICAL_CAMERA_ID_OPTION> = $r9;

        return;
    }

androidx.camera.camera2.impl.Camera2ImplConfig$Builder
<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>
    public void <init>()
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        androidx.camera.core.impl.MutableOptionsBundle $r1;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.camera.core.impl.MutableOptionsBundle: androidx.camera.core.impl.MutableOptionsBundle create()>();

        r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle> = $r1;

        return;
    }

    public androidx.camera.core.impl.MutableConfig getMutableConfig()
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        androidx.camera.core.impl.MutableOptionsBundle $r1;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        $r1 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>;

        return $r1;
    }

    public androidx.camera.camera2.impl.Camera2ImplConfig$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key, java.lang.Object)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2;
        androidx.camera.core.impl.Config$Option r3;
        androidx.camera.core.impl.MutableOptionsBundle $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        r3 = staticinvoke <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option createCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key)>(r1);

        $r4 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>;

        virtualinvoke $r4.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>(r3, r2);

        return r0;
    }

    public androidx.camera.camera2.impl.Camera2ImplConfig$Builder setCaptureRequestOptionWithPriority(android.hardware.camera2.CaptureRequest$Key, java.lang.Object, androidx.camera.core.impl.Config$OptionPriority)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2;
        androidx.camera.core.impl.Config$OptionPriority r3;
        androidx.camera.core.impl.Config$Option r4;
        androidx.camera.core.impl.MutableOptionsBundle $r5;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.camera.core.impl.Config$OptionPriority;

        r4 = staticinvoke <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option createCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key)>(r1);

        $r5 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>;

        virtualinvoke $r5.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,androidx.camera.core.impl.Config$OptionPriority,java.lang.Object)>(r4, r3, r2);

        return r0;
    }

    public androidx.camera.camera2.impl.Camera2ImplConfig$Builder insertAllOptions(androidx.camera.core.impl.Config)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        androidx.camera.core.impl.Config r1;
        java.util.Iterator r2;
        androidx.camera.core.impl.Config$Option r3, r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r8;
        androidx.camera.core.impl.MutableOptionsBundle $r7;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        r1 := @parameter0: androidx.camera.core.impl.Config;

        $r5 = interfaceinvoke r1.<androidx.camera.core.impl.Config: java.util.Set listOptions()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.impl.Config$Option) $r6;

        r4 = r3;

        $r7 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>;

        $r8 = interfaceinvoke r1.<androidx.camera.core.impl.Config: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>(r4);

        virtualinvoke $r7.<androidx.camera.core.impl.MutableOptionsBundle: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>(r4, $r8);

        goto label1;

     label2:
        return r0;
    }

    public androidx.camera.camera2.impl.Camera2ImplConfig build()
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        androidx.camera.camera2.impl.Camera2ImplConfig $r1;
        androidx.camera.core.impl.MutableOptionsBundle $r2;
        androidx.camera.core.impl.OptionsBundle $r3;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        $r1 = new androidx.camera.camera2.impl.Camera2ImplConfig;

        $r2 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.core.impl.MutableOptionsBundle mMutableOptionsBundle>;

        $r3 = staticinvoke <androidx.camera.core.impl.OptionsBundle: androidx.camera.core.impl.OptionsBundle 'from'(androidx.camera.core.impl.Config)>($r2);

        specialinvoke $r1.<androidx.camera.camera2.impl.Camera2ImplConfig: void <init>(androidx.camera.core.impl.Config)>($r3);

        return $r1;
    }

    public volatile java.lang.Object build()
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Builder r0;
        androidx.camera.camera2.impl.Camera2ImplConfig $r1;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Builder;

        $r1 = virtualinvoke r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Builder: androidx.camera.camera2.impl.Camera2ImplConfig build()>();

        return $r1;
    }

androidx.camera.camera2.impl.Camera2ImplConfig$Extender
<androidx.camera.camera2.impl.Camera2ImplConfig$Extender: androidx.camera.core.ExtendableBuilder mBaseBuilder>
    public void <init>(androidx.camera.core.ExtendableBuilder)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Extender r0;
        androidx.camera.core.ExtendableBuilder r1;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Extender;

        r1 := @parameter0: androidx.camera.core.ExtendableBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Extender: androidx.camera.core.ExtendableBuilder mBaseBuilder> = r1;

        return;
    }

    public androidx.camera.camera2.impl.Camera2ImplConfig$Extender setCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks)
    {
        androidx.camera.camera2.impl.Camera2ImplConfig$Extender r0;
        androidx.camera.camera2.impl.CameraEventCallbacks r1;
        androidx.camera.core.ExtendableBuilder $r2;
        androidx.camera.core.impl.MutableConfig $r3;
        androidx.camera.core.impl.Config$Option $r4;

        r0 := @this: androidx.camera.camera2.impl.Camera2ImplConfig$Extender;

        r1 := @parameter0: androidx.camera.camera2.impl.CameraEventCallbacks;

        $r2 = r0.<androidx.camera.camera2.impl.Camera2ImplConfig$Extender: androidx.camera.core.ExtendableBuilder mBaseBuilder>;

        $r3 = interfaceinvoke $r2.<androidx.camera.core.ExtendableBuilder: androidx.camera.core.impl.MutableConfig getMutableConfig()>();

        $r4 = <androidx.camera.camera2.impl.Camera2ImplConfig: androidx.camera.core.impl.Config$Option CAMERA_EVENT_CALLBACK_OPTION>;

        interfaceinvoke $r3.<androidx.camera.core.impl.MutableConfig: void insertOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r4, r1);

        return r0;
    }

