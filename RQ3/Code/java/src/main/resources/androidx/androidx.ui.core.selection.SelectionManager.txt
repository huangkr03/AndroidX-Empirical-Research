androidx.ui.core.selection.SelectionManager
<androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.SelectionRegistrarImpl selectionRegistrar>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection selection>
<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 onSelectionChange>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.clipboard.ClipboardManager clipboardManager>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates containerLayoutCoordinates>
<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragBeginPosition>
<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragTotalDistance>
<androidx.ui.core.selection.SelectionManager: boolean draggingHandle>
<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState startHandlePosition$delegate>
<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState endHandlePosition$delegate>
<androidx.ui.core.selection.SelectionManager: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver>
    public void <init>(androidx.ui.core.selection.SelectionRegistrarImpl)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.selection.SelectionRegistrarImpl r1, $r13;
        androidx.ui.core.selection.SelectionManager$onSelectionChange$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.ui.unit.PxPosition$Companion $r4, $r6;
        androidx.ui.unit.PxPosition $r5, $r7;
        kotlin.jvm.functions.Function2 $r8, $r10;
        androidx.compose.MutableState $r9, $r11;
        androidx.ui.core.selection.SelectionManager$1 $r12;
        kotlin.jvm.functions.Function0 $r14;
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 $r15;
        androidx.ui.core.gesture.LongPressDragObserver $r16;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.core.selection.SelectionRegistrarImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selectionRegistrar");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.SelectionRegistrarImpl selectionRegistrar> = r1;

        $r2 = new androidx.ui.core.selection.SelectionManager$onSelectionChange$1;

        specialinvoke $r2.<androidx.ui.core.selection.SelectionManager$onSelectionChange$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        r0.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 onSelectionChange> = $r3;

        $r4 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragBeginPosition> = $r5;

        $r6 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragTotalDistance> = $r7;

        $r8 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r9 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>(null, $r8);

        r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState startHandlePosition$delegate> = $r9;

        $r10 = staticinvoke <androidx.compose.MutableStateKt: kotlin.jvm.functions.Function2 getStructurallyEqual()>();

        $r11 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf(java.lang.Object,kotlin.jvm.functions.Function2)>(null, $r10);

        r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState endHandlePosition$delegate> = $r11;

        $r13 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.SelectionRegistrarImpl selectionRegistrar>;

        $r12 = new androidx.ui.core.selection.SelectionManager$1;

        specialinvoke $r12.<androidx.ui.core.selection.SelectionManager$1: void <init>(androidx.ui.core.selection.SelectionManager)>(r0);

        $r14 = (kotlin.jvm.functions.Function0) $r12;

        virtualinvoke $r13.<androidx.ui.core.selection.SelectionRegistrarImpl: void setOnPositionChangeCallback$ui_framework_release(kotlin.jvm.functions.Function0)>($r14);

        $r15 = new androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        specialinvoke $r15.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: void <init>(androidx.ui.core.selection.SelectionManager)>(r0);

        $r16 = (androidx.ui.core.gesture.LongPressDragObserver) $r15;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver> = $r16;

        return;
    }

    public final androidx.ui.core.selection.Selection getSelection()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.selection.Selection $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection selection>;

        return $r1;
    }

    public final void setSelection(androidx.ui.core.selection.Selection)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.selection.Selection r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.core.selection.Selection;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection selection> = r1;

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void updateHandleOffsets()>();

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnSelectionChange()
    {
        androidx.ui.core.selection.SelectionManager r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 onSelectionChange>;

        return $r1;
    }

    public final void setOnSelectionChange(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.selection.SelectionManager r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 onSelectionChange> = r1;

        return;
    }

    public final androidx.ui.core.hapticfeedback.HapticFeedback getHapticFeedBack()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.hapticfeedback.HapticFeedback $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack>;

        return $r1;
    }

    public final void setHapticFeedBack(androidx.ui.core.hapticfeedback.HapticFeedback)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.hapticfeedback.HapticFeedback r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.core.hapticfeedback.HapticFeedback;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.hapticfeedback.HapticFeedback hapticFeedBack> = r1;

        return;
    }

    public final androidx.ui.core.clipboard.ClipboardManager getClipboardManager()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.clipboard.ClipboardManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.clipboard.ClipboardManager clipboardManager>;

        return $r1;
    }

    public final void setClipboardManager(androidx.ui.core.clipboard.ClipboardManager)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.clipboard.ClipboardManager r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.core.clipboard.ClipboardManager;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.clipboard.ClipboardManager clipboardManager> = r1;

        return;
    }

    public final androidx.ui.core.LayoutCoordinates getContainerLayoutCoordinates()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.LayoutCoordinates $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates containerLayoutCoordinates>;

        return $r1;
    }

    public final void setContainerLayoutCoordinates(androidx.ui.core.LayoutCoordinates)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.LayoutCoordinates r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.core.LayoutCoordinates;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates containerLayoutCoordinates> = r1;

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void updateHandleOffsets()>();

        return;
    }

    public final androidx.ui.unit.PxPosition getStartHandlePosition()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.unit.PxPosition $r6;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r3 = r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState startHandlePosition$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.unit.PxPosition) $r5;

        return $r6;
    }

    private final void setStartHandlePosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1;
        androidx.compose.MutableState $r2;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        $r2 = r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState startHandlePosition$delegate>;

        $r4 = <androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[0];

        interfaceinvoke $r2.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.ui.unit.PxPosition getEndHandlePosition()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        androidx.ui.unit.PxPosition $r6;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r3 = r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState endHandlePosition$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[1];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (androidx.ui.unit.PxPosition) $r5;

        return $r6;
    }

    private final void setEndHandlePosition(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1;
        androidx.compose.MutableState $r2;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        $r2 = r0.<androidx.ui.core.selection.SelectionManager: androidx.compose.MutableState endHandlePosition$delegate>;

        $r4 = <androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[1];

        interfaceinvoke $r2.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    private final void updateHandleOffsets()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.selection.Selection r1;
        androidx.ui.core.LayoutCoordinates r2, r3, r4;
        boolean $z0;
        androidx.ui.core.selection.Selection$AnchorInfo $r5, $r7, $r9, $r13;
        androidx.ui.core.selection.Selectable $r6, $r8, $r10, $r14;
        androidx.ui.unit.PxPosition $r11, $r12, $r15, $r16, $r17, $r18;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        r2 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates getContainerLayoutCoordinates()>();

        if r1 == null goto label1;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<androidx.ui.core.LayoutCoordinates: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r6 = virtualinvoke $r5.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        r3 = interfaceinvoke $r6.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        $r7 = virtualinvoke r1.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r8 = virtualinvoke $r7.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        r4 = interfaceinvoke $r8.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        if r3 == null goto label1;

        if r4 == null goto label1;

        $r9 = virtualinvoke r1.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r10 = virtualinvoke $r9.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r11 = interfaceinvoke $r10.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r1, 1);

        $r12 = interfaceinvoke r2.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates,androidx.ui.unit.PxPosition)>(r3, $r11);

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void setStartHandlePosition(androidx.ui.unit.PxPosition)>($r12);

        $r13 = virtualinvoke r1.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r14 = virtualinvoke $r13.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r15 = interfaceinvoke $r14.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r1, 0);

        $r16 = interfaceinvoke r2.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates,androidx.ui.unit.PxPosition)>(r4, $r15);

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void setEndHandlePosition(androidx.ui.unit.PxPosition)>($r16);

        return;

     label1:
        $r17 = (androidx.ui.unit.PxPosition) null;

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void setStartHandlePosition(androidx.ui.unit.PxPosition)>($r17);

        $r18 = (androidx.ui.unit.PxPosition) null;

        specialinvoke r0.<androidx.ui.core.selection.SelectionManager: void setEndHandlePosition(androidx.ui.unit.PxPosition)>($r18);

        return;
    }

    public final androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.LayoutCoordinates r1;
        java.lang.IllegalArgumentException $r2, $r5;
        java.lang.String $r3, $r6, r8, r9;
        java.lang.Throwable $r4, $r7;
        boolean $z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates getContainerLayoutCoordinates()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        z1 = $z0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        if z1 != 0 goto label3;

        z6 = 0;

        r8 = "Failed requirement.";

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label3:
        z7 = interfaceinvoke r1.<androidx.ui.core.LayoutCoordinates: boolean isAttached()>();

        z8 = 0;

        z9 = 0;

        z10 = 0;

        z11 = 0;

        if z7 != 0 goto label4;

        z12 = 0;

        r9 = "Failed requirement.";

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label4:
        return r1;
    }

    public final androidx.ui.core.selection.Selection mergeSelections$ui_framework_release(androidx.ui.unit.PxPosition, androidx.ui.unit.PxPosition, boolean, androidx.ui.core.selection.Selection, boolean)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1, r2;
        boolean z0, z1, $z2, $z3;
        androidx.ui.core.selection.Selection r3, r4, r8, $r14, r16;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.ui.core.selection.Selectable r7;
        androidx.ui.core.selection.SelectionRegistrarImpl $r9;
        androidx.ui.core.LayoutCoordinates $r10, $r13;
        java.util.List $r11;
        androidx.ui.core.hapticfeedback.HapticFeedbackType $r12;
        java.lang.Iterable $r15;
        androidx.ui.core.hapticfeedback.HapticFeedback $r17;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        r2 := @parameter1: androidx.ui.unit.PxPosition;

        z0 := @parameter2: boolean;

        r3 := @parameter3: androidx.ui.core.selection.Selection;

        z1 := @parameter4: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startPosition");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "endPosition");

        $r9 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.SelectionRegistrarImpl selectionRegistrar>;

        $r10 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        $r11 = virtualinvoke $r9.<androidx.ui.core.selection.SelectionRegistrarImpl: java.util.List sort(androidx.ui.core.LayoutCoordinates)>($r10);

        $r15 = (java.lang.Iterable) $r11;

        r16 = null;

        r5 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.ui.core.selection.Selectable) r6;

        r8 = r16;

        $r13 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        $r14 = interfaceinvoke r7.<androidx.ui.core.selection.Selectable: androidx.ui.core.selection.Selection getSelection(androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,androidx.ui.core.LayoutCoordinates,boolean,androidx.ui.core.selection.Selection,boolean)>(r1, r2, $r13, z0, r3, z1);

        r16 = staticinvoke <androidx.ui.core.selection.SelectionManagerKt: androidx.ui.core.selection.Selection access$merge(androidx.ui.core.selection.Selection,androidx.ui.core.selection.Selection)>(r8, $r14);

        goto label1;

     label2:
        r4 = r16;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r4);

        if $z3 != 0 goto label4;

        $r17 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.hapticfeedback.HapticFeedback getHapticFeedBack()>();

        if $r17 != null goto label3;

        goto label4;

     label3:
        $r12 = <androidx.ui.core.hapticfeedback.HapticFeedbackType: androidx.ui.core.hapticfeedback.HapticFeedbackType TextHandleMove>;

        interfaceinvoke $r17.<androidx.ui.core.hapticfeedback.HapticFeedback: void performHapticFeedback(androidx.ui.core.hapticfeedback.HapticFeedbackType)>($r12);

     label4:
        return r4;
    }

    public static androidx.ui.core.selection.Selection mergeSelections$default(androidx.ui.core.selection.SelectionManager, androidx.ui.unit.PxPosition, androidx.ui.unit.PxPosition, boolean, androidx.ui.core.selection.Selection, boolean, int, java.lang.Object)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1, r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        androidx.ui.core.selection.Selection $r4, r5;
        boolean z0, z1;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter1: androidx.ui.unit.PxPosition;

        r2 := @parameter2: androidx.ui.unit.PxPosition;

        z0 := @parameter3: boolean;

        r5 := @parameter4: androidx.ui.core.selection.Selection;

        z1 := @parameter5: boolean;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        r5 = (androidx.ui.core.selection.Selection) null;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        z1 = 1;

     label3:
        $r4 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection mergeSelections$ui_framework_release(androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,boolean,androidx.ui.core.selection.Selection,boolean)>(r1, r2, z0, r5, z1);

        return $r4;
    }

    public final androidx.ui.text.AnnotatedString getSelectedText$ui_framework_release()
    {
        androidx.ui.core.selection.SelectionManager r0;
        java.util.List r1;
        kotlin.jvm.internal.Ref$ObjectRef r2, $r13;
        androidx.ui.core.selection.Selection r3, r4, r5;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Iterator r6;
        androidx.ui.core.selection.Selectable r7, $r16, $r18, $r20, $r23;
        androidx.ui.text.AnnotatedString r8, r9, r10, $r25, $r27, $r28, $r30;
        androidx.ui.core.selection.SelectionRegistrarImpl $r11;
        androidx.ui.core.LayoutCoordinates $r12;
        java.lang.Object $r14, $r24, $r26, $r29;
        androidx.ui.core.selection.Selection$AnchorInfo $r15, $r17, $r19, $r22;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r11 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.SelectionRegistrarImpl selectionRegistrar>;

        $r12 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        r1 = virtualinvoke $r11.<androidx.ui.core.selection.SelectionRegistrarImpl: java.util.List sort(androidx.ui.core.LayoutCoordinates)>($r12);

        $r13 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r13.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r2 = $r13;

        r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = null;

        r3 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        if r3 != null goto label01;

        goto label10;

     label01:
        r4 = r3;

        z0 = 0;

        z1 = 0;

        r5 = r4;

        r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.ui.core.selection.Selectable) $r14;

        $r15 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r16 = virtualinvoke $r15.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r16);

        if $z3 != 0 goto label03;

        $r22 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r23 = virtualinvoke $r22.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r23);

        if $z8 != 0 goto label03;

        $r24 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r25 = (androidx.ui.text.AnnotatedString) $r24;

        if $r25 != null goto label03;

        goto label02;

     label03:
        r8 = staticinvoke <androidx.ui.core.selection.SelectionManagerKt: androidx.ui.text.AnnotatedString access$getCurrentSelectedText(androidx.ui.core.selection.Selectable,androidx.ui.core.selection.Selection)>(r7, r5);

        $r26 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r9 = (androidx.ui.text.AnnotatedString) $r26;

        if r9 != null goto label04;

        $r27 = (androidx.ui.text.AnnotatedString) null;

        goto label05;

     label04:
        $r27 = virtualinvoke r9.<androidx.ui.text.AnnotatedString: androidx.ui.text.AnnotatedString plus(androidx.ui.text.AnnotatedString)>(r8);

     label05:
        r10 = $r27;

        if r10 != null goto label06;

        $r28 = r8;

        goto label07;

     label06:
        $r28 = r10;

     label07:
        r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r28;

        $r17 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r18 = virtualinvoke $r17.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r18);

        if $z4 == 0 goto label08;

        $z7 = virtualinvoke r5.<androidx.ui.core.selection.Selection: boolean getHandlesCrossed()>();

        if $z7 == 0 goto label09;

     label08:
        $r19 = virtualinvoke r5.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r20 = virtualinvoke $r19.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r20);

        if $z5 == 0 goto label02;

        $z6 = virtualinvoke r5.<androidx.ui.core.selection.Selection: boolean getHandlesCrossed()>();

        if $z6 == 0 goto label02;

     label09:
        goto label10;

     label10:
        $r29 = r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r30 = (androidx.ui.text.AnnotatedString) $r29;

        return $r30;
    }

    public final void copy$ui_framework_release()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.text.AnnotatedString r1, r2, r3, r4;
        boolean z0, z1;
        androidx.ui.core.clipboard.ClipboardManager r5;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.text.AnnotatedString getSelectedText$ui_framework_release()>();

        r2 = r1;

        if r2 != null goto label1;

        goto label3;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        r5 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.clipboard.ClipboardManager getClipboardManager()>();

        if r5 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke r5.<androidx.ui.core.clipboard.ClipboardManager: void setText(androidx.ui.text.AnnotatedString)>(r4);

     label3:
        return;
    }

    public final void onRelease()
    {
        androidx.ui.core.selection.SelectionManager r0, r8, r9, r10, r13, r15, r17;
        float $f0, $f1, $f2, $f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15;
        int $i0, $i1, $i4, $i5;
        long $l2, $l3, $l6, $l7, l8, l9, l10, l11, l12, l13, l14, l15;
        androidx.ui.unit.PxPosition $r1, $r2, r11, r12, r14, r16, r18;
        androidx.ui.core.selection.Selection $r3, $r5;
        kotlin.jvm.functions.Function1 $r6;
        boolean z4, z5, z10, z11;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r8 = r0;

        $f0 = (float) -1;

        f4 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f0);

        r9 = r8;

        $f1 = (float) -1;

        f5 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        r10 = r9;

        f6 = f4;

        f7 = f5;

        f8 = f6;

        z4 = 0;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f8);

        l8 = (long) $i0;

        f9 = f7;

        z5 = 0;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f9);

        l9 = (long) $i1;

        $l3 = l8 << 32;

        $l2 = l9 & 4294967295L;

        l10 = $l3 | $l2;

        l11 = l10;

        $r1 = new androidx.ui.unit.PxPosition;

        specialinvoke $r1.<androidx.ui.unit.PxPosition: void <init>(long)>(l11);

        r11 = $r1;

        r12 = r11;

        r13 = r10;

        $f2 = (float) -1;

        f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        r14 = r12;

        r15 = r13;

        $f3 = (float) -1;

        f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        r16 = r14;

        r17 = r15;

        f12 = f10;

        f13 = f11;

        f14 = f12;

        z10 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f14);

        l12 = (long) $i4;

        f15 = f13;

        z11 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f15);

        l13 = (long) $i5;

        $l7 = l12 << 32;

        $l6 = l13 & 4294967295L;

        l14 = $l7 | $l6;

        l15 = l14;

        $r2 = new androidx.ui.unit.PxPosition;

        specialinvoke $r2.<androidx.ui.unit.PxPosition: void <init>(long)>(l15);

        r18 = $r2;

        $r3 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection mergeSelections$default(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,boolean,androidx.ui.core.selection.Selection,boolean,int,java.lang.Object)>(r17, r16, r18, 0, $r3, 0, 20, null);

        $r5 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke r0.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 getOnSelectionChange()>();

        interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(null);

     label1:
        return;
    }

    public final androidx.ui.core.gesture.LongPressDragObserver getLongPressDragObserver()
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.core.gesture.LongPressDragObserver $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.gesture.LongPressDragObserver longPressDragObserver>;

        return $r1;
    }

    private final androidx.ui.unit.PxPosition getAdjustedCoordinates(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1, $r2, r3;
        boolean z0, z3, z5, z9, z10, z11, z12, z14;
        long l0, l1, l2, $l3, $l4, $l7, $l8, l9, l11, $l13;
        float $f0, $f1, $f2, f3, $f4, $f5, f6, f7, $f8, f9;
        int $i5, $i6, i10, i12;
        kotlin.jvm.internal.FloatCompanionObject $r4, r5;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        r3 = r1;

        l9 = virtualinvoke r3.<androidx.ui.unit.PxPosition: long getValue()>();

        $r4 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l3 = l9 >> 32;

        i10 = (int) $l3;

        z3 = 0;

        $f2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i10);

        f3 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        z5 = 0;

        l11 = virtualinvoke r1.<androidx.ui.unit.PxPosition: long getValue()>();

        r5 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l4 = l11 & 4294967295L;

        i12 = (int) $l4;

        $f4 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(i12);

        $f5 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        z9 = 1;

        z10 = 0;

        $f0 = (float) z9;

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f0);

        z11 = 0;

        $f1 = $f5 - f6;

        z12 = 0;

        f7 = f3;

        $f8 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        f9 = f7;

        z14 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f9);

        $l13 = (long) $i5;

        z0 = 0;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f8);

        l0 = (long) $i6;

        $l8 = $l13 << 32;

        $l7 = l0 & 4294967295L;

        l1 = $l8 | $l7;

        l2 = l1;

        $r2 = new androidx.ui.unit.PxPosition;

        specialinvoke $r2.<androidx.ui.unit.PxPosition: void <init>(long)>(l2);

        return $r2;
    }

    public final androidx.ui.core.gesture.DragObserver handleDragObserver(boolean)
    {
        androidx.ui.core.selection.SelectionManager r0;
        boolean z0;
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 $r1;
        androidx.ui.core.gesture.DragObserver $r2;

        r0 := @this: androidx.ui.core.selection.SelectionManager;

        z0 := @parameter0: boolean;

        $r1 = new androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        specialinvoke $r1.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: void <init>(androidx.ui.core.selection.SelectionManager,boolean)>(r0, z0);

        $r2 = (androidx.ui.core.gesture.DragObserver) $r1;

        return $r2;
    }

    public static final void access$updateHandleOffsets(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager $r0;

        $r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        specialinvoke $r0.<androidx.ui.core.selection.SelectionManager: void updateHandleOffsets()>();

        return;
    }

    public static final androidx.ui.unit.PxPosition access$getAdjustedCoordinates(androidx.ui.core.selection.SelectionManager, androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager $r0;
        androidx.ui.unit.PxPosition r1, $r2;

        $r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter1: androidx.ui.unit.PxPosition;

        $r2 = specialinvoke $r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition getAdjustedCoordinates(androidx.ui.unit.PxPosition)>(r1);

        return $r2;
    }

    public static final void access$setDragBeginPosition$p(androidx.ui.core.selection.SelectionManager, androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter1: androidx.ui.unit.PxPosition;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragBeginPosition> = r1;

        return;
    }

    public static final void access$setDragTotalDistance$p(androidx.ui.core.selection.SelectionManager, androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition r1;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r1 := @parameter1: androidx.ui.unit.PxPosition;

        r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragTotalDistance> = r1;

        return;
    }

    public static final void access$setDraggingHandle$p(androidx.ui.core.selection.SelectionManager, boolean)
    {
        androidx.ui.core.selection.SelectionManager r0;
        boolean z0;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        z0 := @parameter1: boolean;

        r0.<androidx.ui.core.selection.SelectionManager: boolean draggingHandle> = z0;

        return;
    }

    public static final androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition $r1;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragTotalDistance>;

        return $r1;
    }

    public static final androidx.ui.unit.PxPosition access$getDragBeginPosition$p(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager r0;
        androidx.ui.unit.PxPosition $r1;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition dragBeginPosition>;

        return $r1;
    }

    public static final boolean access$getDraggingHandle$p(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager r0;
        boolean $z0;

        r0 := @parameter0: androidx.ui.core.selection.SelectionManager;

        $z0 = r0.<androidx.ui.core.selection.SelectionManager: boolean draggingHandle>;

        return $z0;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1, $r7;
        kotlin.reflect.KClass $r2, $r8;
        kotlin.reflect.KDeclarationContainer $r3, $r9;
        kotlin.jvm.internal.MutablePropertyReference1 $r4, $r10;
        kotlin.reflect.KMutableProperty1 $r5, $r11;
        kotlin.reflect.KProperty $r6, $r12;

        r0 = newarray (kotlin.reflect.KProperty)[2];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/core/selection/SelectionManager;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "startHandlePosition", "getStartHandlePosition()Landroidx/ui/unit/PxPosition;");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        $r7 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r8 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/core/selection/SelectionManager;");

        $r9 = (kotlin.reflect.KDeclarationContainer) $r8;

        specialinvoke $r7.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r9, "endHandlePosition", "getEndHandlePosition()Landroidx/ui/unit/PxPosition;");

        $r10 = (kotlin.jvm.internal.MutablePropertyReference1) $r7;

        $r11 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r10);

        $r12 = (kotlin.reflect.KProperty) $r11;

        r0[1] = $r12;

        <androidx.ui.core.selection.SelectionManager: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

androidx.ui.core.selection.SelectionManager$1
<androidx.ui.core.selection.SelectionManager$1: androidx.ui.core.selection.SelectionManager $this>
    void <init>(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$1;

        $r1 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r0.<androidx.ui.core.selection.SelectionManager$1: androidx.ui.core.selection.SelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.selection.SelectionManager$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$1;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager$1: androidx.ui.core.selection.SelectionManager $this>;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$updateHandleOffsets(androidx.ui.core.selection.SelectionManager)>($r1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.selection.SelectionManager$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$1;

        virtualinvoke r0.<androidx.ui.core.selection.SelectionManager$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.selection.SelectionManager$handleDragObserver$1
<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>
<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>
    void <init>(androidx.ui.core.selection.SelectionManager, boolean)
    {
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;
        boolean $z0;

        r0 := @this: androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        $r1 := @parameter0: androidx.ui.core.selection.SelectionManager;

        $z0 := @parameter1: boolean;

        r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this> = $r1;

        r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle> = $z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStart(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1, $r12, $r15, $r26, r27;
        androidx.ui.core.selection.Selection r2, r21;
        androidx.ui.core.selection.SelectionManager $r3, $r6, $r9, $r10, $r14, $r16;
        boolean $z0, $z1;
        androidx.ui.core.selection.Selection$AnchorInfo $r4, $r7, $r17, $r19;
        androidx.ui.core.selection.Selectable $r5, $r8, $r18, $r20;
        androidx.ui.core.LayoutCoordinates $r11, r22, $r23, r24, r25;
        androidx.ui.unit.PxPosition$Companion $r13;

        r0 := @this: androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "downPosition");

        $r3 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r21 = virtualinvoke $r3.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r21);

        r2 = r21;

        $z0 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        if $z0 == 0 goto label1;

        $r19 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r20 = virtualinvoke $r19.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        r22 = interfaceinvoke $r20.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r22);

        $r23 = r22;

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r5 = virtualinvoke $r4.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        r24 = interfaceinvoke $r5.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r24);

        $r23 = r24;

     label2:
        r25 = $r23;

        $r6 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $z1 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        if $z1 == 0 goto label3;

        $r17 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r18 = virtualinvoke $r17.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r26 = interfaceinvoke $r18.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r2, 1);

        goto label4;

     label3:
        $r7 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r8 = virtualinvoke $r7.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r26 = interfaceinvoke $r8.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r2, 0);

     label4:
        r27 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getAdjustedCoordinates(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r6, $r26);

        $r10 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r9 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r11 = virtualinvoke $r9.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        $r12 = interfaceinvoke $r11.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates,androidx.ui.unit.PxPosition)>(r25, r27);

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragBeginPosition$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r10, $r12);

        $r14 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r13 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r15 = virtualinvoke $r13.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragTotalDistance$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r14, $r15);

        $r16 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDraggingHandle$p(androidx.ui.core.selection.SelectionManager,boolean)>($r16, 1);

        return;
    }

    public androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1, r4, $r6, $r14, $r15, $r29, $r30, r35, r36, r41, $r42, r44, r46, r48, $r50, r52, $r54, $r55, r56, r57, r59, r61, r63, r65;
        androidx.ui.core.selection.Selection r2, r33, $r66;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l9, $l10, $l11, $l12, $l13, $l14, $l17, $l18, $l19, $l20, $l21, $l22, $l25, $l26, l27, l29, l31, l33, l35, l36, l37, l38, l39, l41, l43, l45, l47, l48, $l49, $l51, $l53, $l55, l57, l58, l59;
        androidx.ui.core.selection.SelectionManager r3, $r5, $r7, $r11, $r16, $r17, $r18, $r19, $r22, $r26, $r31, $r32, r34;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, $f8, $f9, f10, $f11, $f12, $f13, $f14, $f15, f16, $f17, $f18, $f19, f20, $f21, $f22, f23, $f24, f25, f26, f27, f28, $f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40;
        int $i7, $i8, $i15, $i16, $i23, $i24, $i28, $i30, $i32, $i34, $i40, $i42, $i44, $i46, $i50, $i52, $i54, $i56;
        boolean $z0, $z1, $z2, z25, z26, z27, z31, z35, z36, z40, z43, z44, z45, z48, z50, z53, z54, z57, z58, z59, z62, z63, z65, z66, z67, z68, z70, z71;
        androidx.ui.core.LayoutCoordinates $r8, $r23, r51, $r53;
        androidx.ui.core.selection.Selection$AnchorInfo $r9, $r12, $r24, $r27;
        androidx.ui.core.selection.Selectable $r10, $r13, $r25, $r28;
        kotlin.jvm.functions.Function1 $r20;
        kotlin.jvm.internal.FloatCompanionObject $r37, $r38, $r39, $r40, $r43, $r45, $r47, $r49, $r58, $r60, $r62, $r64;

        r0 := @this: androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dragDistance");

        $r5 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r33 = virtualinvoke $r5.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r33);

        r2 = r33;

        r34 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r35 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)>(r34);

        r3 = r34;

        r36 = r35;

        l27 = virtualinvoke r36.<androidx.ui.unit.PxPosition: long getValue()>();

        $r37 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l3 = l27 >> 32;

        $i28 = (int) $l3;

        $f6 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i28);

        f7 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f6);

        l29 = virtualinvoke r1.<androidx.ui.unit.PxPosition: long getValue()>();

        $r38 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l4 = l29 >> 32;

        $i30 = (int) $l4;

        $f8 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i30);

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f8);

        $f0 = f7 + $f9;

        f10 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f0);

        l31 = virtualinvoke r35.<androidx.ui.unit.PxPosition: long getValue()>();

        $r39 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l5 = l31 & 4294967295L;

        $i32 = (int) $l5;

        $f11 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i32);

        $f12 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f11);

        l33 = virtualinvoke r1.<androidx.ui.unit.PxPosition: long getValue()>();

        $r40 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l6 = l33 & 4294967295L;

        $i34 = (int) $l6;

        $f13 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i34);

        $f14 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f13);

        $f1 = $f12 + $f14;

        $f15 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        $i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f10);

        l35 = (long) $i7;

        f16 = $f15;

        z25 = 0;

        $i8 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f16);

        l36 = (long) $i8;

        $l10 = l35 << 32;

        $l9 = l36 & 4294967295L;

        l37 = $l10 | $l9;

        l38 = l37;

        $r6 = new androidx.ui.unit.PxPosition;

        specialinvoke $r6.<androidx.ui.unit.PxPosition: void <init>(long)>(l38);

        r4 = $r6;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragTotalDistance$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>(r3, r4);

        $z0 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        if $z0 == 0 goto label1;

        $r31 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r41 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragBeginPosition$p(androidx.ui.core.selection.SelectionManager)>($r31);

        $r32 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r42 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)>($r32);

        z26 = 0;

        z27 = 0;

        l39 = virtualinvoke r41.<androidx.ui.unit.PxPosition: long getValue()>();

        $r43 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l19 = l39 >> 32;

        $i40 = (int) $l19;

        $f17 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i40);

        $f18 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f17);

        r44 = $r42;

        z31 = 0;

        l41 = virtualinvoke r44.<androidx.ui.unit.PxPosition: long getValue()>();

        $r45 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l20 = l41 >> 32;

        $i42 = (int) $l20;

        $f19 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i42);

        f20 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f19);

        z35 = 0;

        $f4 = $f18 + f20;

        $f21 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        r46 = r41;

        z36 = 0;

        l43 = virtualinvoke r46.<androidx.ui.unit.PxPosition: long getValue()>();

        $r47 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l21 = l43 & 4294967295L;

        $i44 = (int) $l21;

        $f22 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i44);

        f23 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f22);

        r48 = $r42;

        z40 = 0;

        l45 = virtualinvoke r48.<androidx.ui.unit.PxPosition: long getValue()>();

        $r49 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l22 = l45 & 4294967295L;

        $i46 = (int) $l22;

        $f24 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i46);

        z43 = 0;

        f25 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f24);

        z44 = 0;

        $f5 = f23 + f25;

        f26 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        z45 = 0;

        f27 = $f21;

        $i23 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f27);

        l47 = (long) $i23;

        f28 = f26;

        z48 = 0;

        $i24 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f28);

        l48 = (long) $i24;

        $l26 = l47 << 32;

        $l25 = l48 & 4294967295L;

        l0 = $l26 | $l25;

        l1 = l0;

        $r50 = new androidx.ui.unit.PxPosition;

        specialinvoke $r50.<androidx.ui.unit.PxPosition: void <init>(long)>(l1);

        goto label2;

     label1:
        $r7 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r8 = virtualinvoke $r7.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        $r9 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r10 = virtualinvoke $r9.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        r51 = interfaceinvoke $r10.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r51);

        $r11 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r12 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getStart()>();

        $r13 = virtualinvoke $r12.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r14 = interfaceinvoke $r13.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r2, 1);

        $r15 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getAdjustedCoordinates(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r11, $r14);

        $r50 = interfaceinvoke $r8.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates,androidx.ui.unit.PxPosition)>(r51, $r15);

     label2:
        r52 = $r50;

        $z1 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        if $z1 == 0 goto label3;

        $r22 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r23 = virtualinvoke $r22.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates requireContainerCoordinates$ui_framework_release()>();

        $r24 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r25 = virtualinvoke $r24.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r53 = interfaceinvoke $r25.<androidx.ui.core.selection.Selectable: androidx.ui.core.LayoutCoordinates getLayoutCoordinates()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r53);

        $r26 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r27 = virtualinvoke r2.<androidx.ui.core.selection.Selection: androidx.ui.core.selection.Selection$AnchorInfo getEnd()>();

        $r28 = virtualinvoke $r27.<androidx.ui.core.selection.Selection$AnchorInfo: androidx.ui.core.selection.Selectable getSelectable()>();

        $r29 = interfaceinvoke $r28.<androidx.ui.core.selection.Selectable: androidx.ui.unit.PxPosition getHandlePosition(androidx.ui.core.selection.Selection,boolean)>(r2, 0);

        $r30 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getAdjustedCoordinates(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r26, $r29);

        $r54 = interfaceinvoke $r23.<androidx.ui.core.LayoutCoordinates: androidx.ui.unit.PxPosition childToLocal(androidx.ui.core.LayoutCoordinates,androidx.ui.unit.PxPosition)>($r53, $r30);

        goto label4;

     label3:
        $r16 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r55 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragBeginPosition$p(androidx.ui.core.selection.SelectionManager)>($r16);

        $r17 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r56 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)>($r17);

        r57 = $r55;

        z50 = 0;

        $l49 = virtualinvoke r57.<androidx.ui.unit.PxPosition: long getValue()>();

        $r58 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l11 = $l49 >> 32;

        $i50 = (int) $l11;

        $f29 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i50);

        z53 = 0;

        f30 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f29);

        r59 = r56;

        z54 = 0;

        $l51 = virtualinvoke r59.<androidx.ui.unit.PxPosition: long getValue()>();

        $r60 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l12 = $l51 >> 32;

        $i52 = (int) $l12;

        f31 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i52);

        z57 = 0;

        f32 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f31);

        z58 = 0;

        $f2 = f30 + f32;

        f33 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        r61 = $r55;

        z59 = 0;

        $l53 = virtualinvoke r61.<androidx.ui.unit.PxPosition: long getValue()>();

        $r62 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l13 = $l53 & 4294967295L;

        $i54 = (int) $l13;

        f34 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i54);

        z62 = 0;

        f35 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f34);

        r63 = r56;

        z63 = 0;

        $l55 = virtualinvoke r63.<androidx.ui.unit.PxPosition: long getValue()>();

        $r64 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l14 = $l55 & 4294967295L;

        $i56 = (int) $l14;

        z65 = 0;

        f36 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i56);

        z66 = 0;

        f37 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>(f36);

        z67 = 0;

        $f3 = f35 + f37;

        f38 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        z68 = 0;

        f39 = f33;

        z70 = 0;

        $i15 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f39);

        l57 = (long) $i15;

        f40 = f38;

        z71 = 0;

        $i16 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f40);

        l58 = (long) $i16;

        $l18 = l57 << 32;

        $l17 = l58 & 4294967295L;

        l59 = $l18 | $l17;

        l2 = l59;

        $r54 = new androidx.ui.unit.PxPosition;

        specialinvoke $r54.<androidx.ui.unit.PxPosition: void <init>(long)>(l2);

     label4:
        r65 = $r54;

        $r18 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $z2 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: boolean $isStartHandle>;

        $r66 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection mergeSelections$default(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,boolean,androidx.ui.core.selection.Selection,boolean,int,java.lang.Object)>($r18, r52, r65, 0, r2, $z2, 4, null);

        $r19 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r20 = virtualinvoke $r19.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 getOnSelectionChange()>();

        interfaceinvoke $r20.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r66);

        return r1;
    }

    public void onStop(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.DragObserver $r2;
        androidx.ui.core.selection.SelectionManager $r3;

        r0 := @this: androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "velocity");

        $r2 = (androidx.ui.core.gesture.DragObserver) r0;

        staticinvoke <androidx.ui.core.gesture.DragObserver$DefaultImpls: void onStop(androidx.ui.core.gesture.DragObserver,androidx.ui.unit.PxPosition)>($r2, r1);

        $r3 = r0.<androidx.ui.core.selection.SelectionManager$handleDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDraggingHandle$p(androidx.ui.core.selection.SelectionManager,boolean)>($r3, 0);

        return;
    }

    public void onCancel()
    {
        androidx.ui.core.selection.SelectionManager$handleDragObserver$1 r0;

        r0 := @this: androidx.ui.core.selection.SelectionManager$handleDragObserver$1;

        staticinvoke <androidx.ui.core.gesture.DragObserver$DefaultImpls: void onCancel(androidx.ui.core.gesture.DragObserver)>(r0);

        return;
    }

androidx.ui.core.selection.SelectionManager$longPressDragObserver$1
<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>
    void <init>(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        $r1 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLongPress(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.LayoutCoordinates r2;
        androidx.ui.core.selection.Selection r3, $r8, $r10;
        androidx.ui.core.selection.SelectionManager $r4, $r5, $r6, $r7, $r9, $r11, $r12;
        boolean $z0, $z1, $z2;
        kotlin.jvm.functions.Function1 $r13;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pxPosition");

        $r4 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $z0 = staticinvoke <androidx.ui.core.selection.SelectionManager: boolean access$getDraggingHandle$p(androidx.ui.core.selection.SelectionManager)>($r4);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r2 = virtualinvoke $r5.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.LayoutCoordinates getContainerLayoutCoordinates()>();

        if r2 == null goto label2;

        $z1 = interfaceinvoke r2.<androidx.ui.core.LayoutCoordinates: boolean isAttached()>();

        if $z1 != 0 goto label3;

     label2:
        return;

     label3:
        $r7 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r6 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r8 = virtualinvoke $r6.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        r3 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection mergeSelections$default(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,boolean,androidx.ui.core.selection.Selection,boolean,int,java.lang.Object)>($r7, r1, r1, 1, $r8, 0, 16, null);

        $r9 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r10 = virtualinvoke $r9.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r10);

        if $z2 != 0 goto label4;

        $r12 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r13 = virtualinvoke $r12.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 getOnSelectionChange()>();

        interfaceinvoke $r13.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

     label4:
        $r11 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragBeginPosition$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r11, r1);

        return;
    }

    public void onDragStart()
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;
        androidx.ui.core.gesture.LongPressDragObserver $r1;
        androidx.ui.core.selection.SelectionManager $r2, $r5;
        androidx.ui.core.selection.Selection $r3;
        androidx.ui.unit.PxPosition$Companion $r4;
        androidx.ui.unit.PxPosition $r6;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        $r1 = (androidx.ui.core.gesture.LongPressDragObserver) r0;

        staticinvoke <androidx.ui.core.gesture.LongPressDragObserver$DefaultImpls: void onDragStart(androidx.ui.core.gesture.LongPressDragObserver)>($r1);

        $r2 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        if $r3 != null goto label1;

        return;

     label1:
        $r5 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r4 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r6 = virtualinvoke $r4.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragTotalDistance$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>($r5, $r6);

        return;
    }

    public androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1, r2, $r5, $r8, $r11, $r20, r22, r24, r29, r30, $r31, r32, r35, r37, r39;
        long l0, l1, l2, l3, l4, l5, l6, l7, $l8, $l9, $l10, $l11, $l14, $l15, $l16, $l17, $l18, $l19, $l22, $l23, l24, l26, l28, l30, l32, l33, l35, l37;
        float f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, $f19, $f20, f21, $f22, f23, f24, f25, f26;
        androidx.ui.core.selection.SelectionManager $r3, $r6, $r7, $r9, $r10, $r12, $r14, $r16, r21, r23, r33;
        androidx.ui.core.selection.Selection $r4, $r13, $r15, r41;
        int $i12, $i13, $i20, $i21, $i25, $i27, $i29, $i31, $i34, $i36, $i38, $i39;
        boolean $z1, z23, z24, z25, z29, z33, z34, z38, z41, z42, z43, z46;
        kotlin.jvm.functions.Function1 $r17;
        androidx.ui.unit.PxPosition$Companion $r19;
        kotlin.jvm.internal.FloatCompanionObject $r25, $r26, $r27, $r28, $r34, $r36, $r38, $r40;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dragDistance");

        $r3 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        if $r4 != null goto label1;

        $r19 = <androidx.ui.unit.PxPosition: androidx.ui.unit.PxPosition$Companion Companion>;

        $r20 = virtualinvoke $r19.<androidx.ui.unit.PxPosition$Companion: androidx.ui.unit.PxPosition getOrigin()>();

        return $r20;

     label1:
        r21 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r22 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)>(r21);

        r23 = r21;

        r24 = r22;

        l24 = virtualinvoke r24.<androidx.ui.unit.PxPosition: long getValue()>();

        $r25 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l8 = l24 >> 32;

        $i25 = (int) $l8;

        $f5 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i25);

        f6 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f5);

        l26 = virtualinvoke r1.<androidx.ui.unit.PxPosition: long getValue()>();

        $r26 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l9 = l26 >> 32;

        $i27 = (int) $l9;

        $f7 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i27);

        $f8 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f7);

        $f1 = f6 + $f8;

        f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f1);

        l28 = virtualinvoke r22.<androidx.ui.unit.PxPosition: long getValue()>();

        $r27 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l10 = l28 & 4294967295L;

        $i29 = (int) $l10;

        $f10 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i29);

        $f11 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f10);

        l30 = virtualinvoke r1.<androidx.ui.unit.PxPosition: long getValue()>();

        $r28 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l11 = l30 & 4294967295L;

        $i31 = (int) $l11;

        $f12 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i31);

        $f13 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f12);

        $f2 = $f11 + $f13;

        $f14 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        $i12 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f9);

        l32 = (long) $i12;

        f0 = $f14;

        z23 = 0;

        $i13 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l33 = (long) $i13;

        $l15 = l32 << 32;

        $l14 = l33 & 4294967295L;

        l4 = $l15 | $l14;

        l6 = l4;

        $r5 = new androidx.ui.unit.PxPosition;

        specialinvoke $r5.<androidx.ui.unit.PxPosition: void <init>(long)>(l6);

        r29 = $r5;

        staticinvoke <androidx.ui.core.selection.SelectionManager: void access$setDragTotalDistance$p(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition)>(r23, r29);

        $r7 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r6 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r8 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragBeginPosition$p(androidx.ui.core.selection.SelectionManager)>($r6);

        $r9 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        r30 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragBeginPosition$p(androidx.ui.core.selection.SelectionManager)>($r9);

        $r10 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r31 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.unit.PxPosition access$getDragTotalDistance$p(androidx.ui.core.selection.SelectionManager)>($r10);

        r32 = $r8;

        r33 = $r7;

        z24 = 0;

        z25 = 0;

        l0 = virtualinvoke r30.<androidx.ui.unit.PxPosition: long getValue()>();

        $r34 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l16 = l0 >> 32;

        $i34 = (int) $l16;

        $f15 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i34);

        $f16 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f15);

        r35 = $r31;

        z29 = 0;

        l35 = virtualinvoke r35.<androidx.ui.unit.PxPosition: long getValue()>();

        $r36 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l17 = l35 >> 32;

        $i36 = (int) $l17;

        $f17 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i36);

        f18 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f17);

        z33 = 0;

        $f3 = $f16 + f18;

        $f19 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        r37 = r30;

        z34 = 0;

        l37 = virtualinvoke r37.<androidx.ui.unit.PxPosition: long getValue()>();

        $r38 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l18 = l37 & 4294967295L;

        $i38 = (int) $l18;

        $f20 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i38);

        f21 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f20);

        r39 = $r31;

        z38 = 0;

        l1 = virtualinvoke r39.<androidx.ui.unit.PxPosition: long getValue()>();

        $r40 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $l19 = l1 & 4294967295L;

        $i39 = (int) $l19;

        $f22 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i39);

        z41 = 0;

        f23 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f22);

        z42 = 0;

        $f4 = f21 + f23;

        f24 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        z43 = 0;

        f25 = $f19;

        $i20 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f25);

        l2 = (long) $i20;

        f26 = f24;

        z46 = 0;

        $i21 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f26);

        l3 = (long) $i21;

        $l23 = l2 << 32;

        $l22 = l3 & 4294967295L;

        l5 = $l23 | $l22;

        l7 = l5;

        $r11 = new androidx.ui.unit.PxPosition;

        specialinvoke $r11.<androidx.ui.unit.PxPosition: void <init>(long)>(l7);

        r2 = $r11;

        $r12 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r13 = virtualinvoke $r12.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        r41 = staticinvoke <androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection mergeSelections$default(androidx.ui.core.selection.SelectionManager,androidx.ui.unit.PxPosition,androidx.ui.unit.PxPosition,boolean,androidx.ui.core.selection.Selection,boolean,int,java.lang.Object)>(r33, r32, r2, 1, $r13, 0, 16, null);

        $r14 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r15 = virtualinvoke $r14.<androidx.ui.core.selection.SelectionManager: androidx.ui.core.selection.Selection getSelection()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r41, $r15);

        if $z1 != 0 goto label2;

        $r16 = r0.<androidx.ui.core.selection.SelectionManager$longPressDragObserver$1: androidx.ui.core.selection.SelectionManager $this>;

        $r17 = virtualinvoke $r16.<androidx.ui.core.selection.SelectionManager: kotlin.jvm.functions.Function1 getOnSelectionChange()>();

        interfaceinvoke $r17.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r41);

     label2:
        return r1;
    }

    public void onCancel()
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        staticinvoke <androidx.ui.core.gesture.LongPressDragObserver$DefaultImpls: void onCancel(androidx.ui.core.gesture.LongPressDragObserver)>(r0);

        return;
    }

    public void onStop(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.selection.SelectionManager$longPressDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$longPressDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <androidx.ui.core.gesture.LongPressDragObserver$DefaultImpls: void onStop(androidx.ui.core.gesture.LongPressDragObserver,androidx.ui.unit.PxPosition)>(r0, r1);

        return;
    }

androidx.ui.core.selection.SelectionManager$onSelectionChange$1
    void <init>()
    {
        androidx.ui.core.selection.SelectionManager$onSelectionChange$1 r0;

        r0 := @this: androidx.ui.core.selection.SelectionManager$onSelectionChange$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.selection.Selection)
    {
        androidx.ui.core.selection.SelectionManager$onSelectionChange$1 r0;
        androidx.ui.core.selection.Selection r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$onSelectionChange$1;

        r1 := @parameter0: androidx.ui.core.selection.Selection;

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.selection.SelectionManager$onSelectionChange$1 r0;
        java.lang.Object r1;
        androidx.ui.core.selection.Selection $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.selection.SelectionManager$onSelectionChange$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.selection.Selection) r1;

        virtualinvoke r0.<androidx.ui.core.selection.SelectionManager$onSelectionChange$1: void invoke(androidx.ui.core.selection.Selection)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1
<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1: androidx.ui.core.selection.SelectionManager $this>
    void <init>(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1;

        $r1 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1: androidx.ui.core.selection.SelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1: androidx.ui.core.selection.SelectionManager $this>;

        virtualinvoke $r1.<androidx.ui.core.selection.SelectionManager: void copy$ui_core_release()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1;

        virtualinvoke r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2
<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2: androidx.ui.core.selection.SelectionManager $this>
    void <init>(androidx.ui.core.selection.SelectionManager)
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2;

        $r1 := @parameter0: androidx.ui.core.selection.SelectionManager;

        r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2: androidx.ui.core.selection.SelectionManager $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2 r0;
        androidx.ui.core.selection.SelectionManager $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2;

        $r1 = r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2: androidx.ui.core.selection.SelectionManager $this>;

        virtualinvoke $r1.<androidx.ui.core.selection.SelectionManager: void onRelease()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2;

        virtualinvoke r0.<androidx.ui.core.selection.SelectionManager$showSelectionToolbar$1$2: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

