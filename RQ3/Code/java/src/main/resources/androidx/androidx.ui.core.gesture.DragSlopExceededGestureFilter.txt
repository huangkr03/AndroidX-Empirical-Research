androidx.ui.core.gesture.DragSlopExceededGestureFilter
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float touchSlop>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxForPass>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyForPass>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: boolean passedSlop>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag>
<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onDragSlopExceeded>
    public void <init>(float)
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;
        float f0;
        androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1 $r1;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float touchSlop> = f0;

        $r1 = new androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1;

        specialinvoke $r1.<androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1: void <init>()>();

        $r2 = (kotlin.jvm.functions.Function0) $r1;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onDragSlopExceeded> = $r2;

        return;
    }

    public final kotlin.jvm.functions.Function1 getCanDrag()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag>;

        return $r1;
    }

    public final void setCanDrag(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function1 canDrag> = r1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnDragSlopExceeded()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onDragSlopExceeded>;

        return $r1;
    }

    public final void setOnDragSlopExceeded(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function0 onDragSlopExceeded> = r1;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntSize)
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0, r19, r20, r21, r22;
        java.util.List r1;
        androidx.ui.core.PointerEventPass r2, $r5, $r6, $r17, $r31;
        androidx.ui.unit.IntSize r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16, $z17, z18, $z19, z20, $z21, z22, $z23, z24, $z25, $z26, z27;
        java.util.Collection $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23;
        kotlin.jvm.functions.Function0 $r7;
        androidx.ui.core.Direction $r9, $r10, $r11, $r12, r23, r24;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        java.lang.Object $r13, $r15, r34;
        java.lang.Boolean $r14, $r16, $r26, r27, $r29, r30;
        androidx.ui.geometry.Offset r18;
        kotlin.jvm.functions.Function1 r25, r28;
        java.lang.Iterable r32;
        java.util.Iterator r33;
        androidx.ui.core.PointerInputChange r35;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        $z0 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: boolean passedSlop>;

        if $z0 != 0 goto label27;

        $r5 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z4 != 0 goto label01;

        $r17 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r17);

        if $z12 == 0 goto label27;

     label01:
        r18 = staticinvoke <androidx.ui.core.gesture.DragSlopExceededGestureFilterKt: androidx.ui.geometry.Offset access$getAveragePositionChange(java.util.List)>(r1);

        f22 = virtualinvoke r18.<androidx.ui.geometry.Offset: float getX()>();

        f23 = virtualinvoke r18.<androidx.ui.geometry.Offset: float getY()>();

        $r6 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z5 == 0 goto label02;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxForPass> = f22;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyForPass> = f23;

        r19 = r0;

        $f18 = r19.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>;

        $f19 = $f18 + f22;

        r19.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop> = $f19;

        r20 = r0;

        $f20 = r20.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>;

        $f21 = $f20 + f23;

        r20.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop> = $f21;

        goto label03;

     label02:
        r21 = r0;

        $f2 = r21.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>;

        $f0 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxForPass>;

        $f1 = f22 - $f0;

        $f3 = $f2 + $f1;

        r21.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop> = $f3;

        r22 = r0;

        $f6 = r22.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>;

        $f4 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyForPass>;

        $f5 = f23 - $f4;

        $f7 = $f6 + $f5;

        r22.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop> = $f7;

     label03:
        r23 = staticinvoke <androidx.ui.core.gesture.DragSlopExceededGestureFilterKt: androidx.ui.core.Direction access$horizontalDirection(androidx.ui.geometry.Offset)>(r18);

        r24 = staticinvoke <androidx.ui.core.gesture.DragSlopExceededGestureFilterKt: androidx.ui.core.Direction access$verticalDirection(androidx.ui.geometry.Offset)>(r18);

        if r23 == null goto label08;

        r25 = virtualinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function1 getCanDrag()>();

        if r25 != null goto label04;

        $r26 = (java.lang.Boolean) null;

        goto label05;

     label04:
        $r15 = interfaceinvoke r25.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r23);

        $r16 = (java.lang.Boolean) $r15;

        $z11 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        $r26 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

     label05:
        r27 = $r26;

        if r27 != null goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = virtualinvoke r27.<java.lang.Boolean: boolean booleanValue()>();

     label07:
        if $z13 == 0 goto label08;

        $z14 = 1;

        goto label09;

     label08:
        $z14 = 0;

     label09:
        z15 = $z14;

        if r24 == null goto label14;

        r28 = virtualinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function1 getCanDrag()>();

        if r28 != null goto label10;

        $r29 = (java.lang.Boolean) null;

        goto label11;

     label10:
        $r13 = interfaceinvoke r28.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r24);

        $r14 = (java.lang.Boolean) $r13;

        $z10 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

     label11:
        r30 = $r29;

        if r30 != null goto label12;

        $z16 = 1;

        goto label13;

     label12:
        $z16 = virtualinvoke r30.<java.lang.Boolean: boolean booleanValue()>();

     label13:
        if $z16 == 0 goto label14;

        $z17 = 1;

        goto label15;

     label14:
        $z17 = 0;

     label15:
        z18 = $z17;

        if z15 == 0 goto label16;

        $f15 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        $f17 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float touchSlop>;

        $b5 = $f16 cmpl $f17;

        if $b5 <= 0 goto label16;

        $z19 = 1;

        goto label17;

     label16:
        $z19 = 0;

     label17:
        z20 = $z19;

        if z18 == 0 goto label18;

        $f12 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>;

        $f13 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        $f14 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float touchSlop>;

        $b4 = $f13 cmpl $f14;

        if $b4 <= 0 goto label18;

        $z21 = 1;

        goto label19;

     label18:
        $z21 = 0;

     label19:
        z22 = $z21;

        if z20 != 0 goto label20;

        if z22 == 0 goto label21;

     label20:
        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: boolean passedSlop> = 1;

        $r7 = virtualinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: kotlin.jvm.functions.Function0 getOnDragSlopExceeded()>();

        interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label27;

     label21:
        if z15 != 0 goto label24;

        $r11 = <androidx.ui.core.Direction: androidx.ui.core.Direction LEFT>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r23, $r11);

        if $z8 == 0 goto label22;

        $f11 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>;

        $b3 = $f11 cmpg 0.0F;

        if $b3 < 0 goto label23;

     label22:
        $r12 = <androidx.ui.core.Direction: androidx.ui.core.Direction RIGHT>;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r23, $r12);

        if $z9 == 0 goto label24;

        $f10 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop>;

        $b2 = $f10 cmpl 0.0F;

        if $b2 <= 0 goto label24;

     label23:
        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop> = 0.0F;

     label24:
        if z18 != 0 goto label27;

        $r9 = <androidx.ui.core.Direction: androidx.ui.core.Direction UP>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r24, $r9);

        if $z6 == 0 goto label25;

        $f9 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>;

        $b1 = $f9 cmpg 0.0F;

        if $b1 < 0 goto label26;

     label25:
        $r10 = <androidx.ui.core.Direction: androidx.ui.core.Direction DOWN>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r24, $r10);

        if $z7 == 0 goto label27;

        $f8 = r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop>;

        $b0 = $f8 cmpl 0.0F;

        if $b0 <= 0 goto label27;

     label26:
        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop> = 0.0F;

     label27:
        $r31 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z23 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r31);

        if $z23 == 0 goto label32;

        r32 = (java.lang.Iterable) r1;

        z24 = 0;

        $z1 = r32 instanceof java.util.Collection;

        if $z1 == 0 goto label28;

        $r4 = (java.util.Collection) r32;

        $z3 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label28;

        $z25 = 1;

        goto label31;

     label28:
        r33 = interfaceinvoke r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label29:
        $z26 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label30;

        r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r35 = (androidx.ui.core.PointerInputChange) r34;

        z27 = 0;

        $z2 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r35);

        if $z2 != 0 goto label29;

        $z25 = 0;

        goto label31;

     label30:
        $z25 = 1;

     label31:
        if $z25 == 0 goto label32;

        specialinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: void reset()>();

     label32:
        return r1;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        specialinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: void reset()>();

        return;
    }

    private final void reset()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: boolean passedSlop> = 0;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxForPass> = 0.0F;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyForPass> = 0.0F;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dxUnderSlop> = 0.0F;

        r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter: float dyUnderSlop> = 0.0F;

        return;
    }

androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1
    void <init>()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1 r0;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1 r0;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1;

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1;

        virtualinvoke r0.<androidx.ui.core.gesture.DragSlopExceededGestureFilter$onDragSlopExceeded$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

