androidx.lifecycle.MediatorLiveData
<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources>
    public void <init>()
    {
        androidx.lifecycle.MediatorLiveData r0;
        androidx.arch.core.internal.SafeIterableMap $r1;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void <init>()>();

        $r1 = new androidx.arch.core.internal.SafeIterableMap;

        specialinvoke $r1.<androidx.arch.core.internal.SafeIterableMap: void <init>()>();

        r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources> = $r1;

        return;
    }

    public void <init>(java.lang.Object)
    {
        androidx.lifecycle.MediatorLiveData r0;
        java.lang.Object r1;
        androidx.arch.core.internal.SafeIterableMap $r2;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.lifecycle.MutableLiveData: void <init>(java.lang.Object)>(r1);

        $r2 = new androidx.arch.core.internal.SafeIterableMap;

        specialinvoke $r2.<androidx.arch.core.internal.SafeIterableMap: void <init>()>();

        r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources> = $r2;

        return;
    }

    public void addSource(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.MediatorLiveData r0;
        androidx.lifecycle.LiveData r1;
        androidx.lifecycle.Observer r2, $r8;
        androidx.lifecycle.MediatorLiveData$Source r3, r4, $r5;
        androidx.arch.core.internal.SafeIterableMap $r6;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        r2 := @parameter1: androidx.lifecycle.Observer;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("source cannot be null");

        throw $r10;

     label1:
        $r5 = new androidx.lifecycle.MediatorLiveData$Source;

        specialinvoke $r5.<androidx.lifecycle.MediatorLiveData$Source: void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)>(r1, r2);

        r3 = $r5;

        $r6 = r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources>;

        $r7 = virtualinvoke $r6.<androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r3);

        r4 = (androidx.lifecycle.MediatorLiveData$Source) $r7;

        if r4 == null goto label2;

        $r8 = r4.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver>;

        if $r8 == r2 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("This source was already added with the different observer");

        throw $r9;

     label2:
        if r4 == null goto label3;

        return;

     label3:
        $z0 = virtualinvoke r0.<androidx.lifecycle.MediatorLiveData: boolean hasActiveObservers()>();

        if $z0 == 0 goto label4;

        virtualinvoke r3.<androidx.lifecycle.MediatorLiveData$Source: void plug()>();

     label4:
        return;
    }

    public void removeSource(androidx.lifecycle.LiveData)
    {
        androidx.lifecycle.MediatorLiveData r0;
        androidx.lifecycle.LiveData r1;
        androidx.lifecycle.MediatorLiveData$Source r2;
        androidx.arch.core.internal.SafeIterableMap $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        $r3 = r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources>;

        $r4 = virtualinvoke $r3.<androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.lifecycle.MediatorLiveData$Source) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.lifecycle.MediatorLiveData$Source: void unplug()>();

     label1:
        return;
    }

    protected void onActive()
    {
        androidx.lifecycle.MediatorLiveData r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        androidx.arch.core.internal.SafeIterableMap $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        androidx.lifecycle.MediatorLiveData$Source $r6;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        $r3 = r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources>;

        r1 = virtualinvoke $r3.<androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (androidx.lifecycle.MediatorLiveData$Source) $r5;

        virtualinvoke $r6.<androidx.lifecycle.MediatorLiveData$Source: void plug()>();

        goto label1;

     label2:
        return;
    }

    protected void onInactive()
    {
        androidx.lifecycle.MediatorLiveData r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        androidx.arch.core.internal.SafeIterableMap $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        androidx.lifecycle.MediatorLiveData$Source $r6;

        r0 := @this: androidx.lifecycle.MediatorLiveData;

        $r3 = r0.<androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources>;

        r1 = virtualinvoke $r3.<androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (androidx.lifecycle.MediatorLiveData$Source) $r5;

        virtualinvoke $r6.<androidx.lifecycle.MediatorLiveData$Source: void unplug()>();

        goto label1;

     label2:
        return;
    }

androidx.lifecycle.MediatorLiveData$Source
<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData>
<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver>
<androidx.lifecycle.MediatorLiveData$Source: int mVersion>
    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.MediatorLiveData$Source r0;
        androidx.lifecycle.LiveData r1;
        androidx.lifecycle.Observer r2;

        r0 := @this: androidx.lifecycle.MediatorLiveData$Source;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        r2 := @parameter1: androidx.lifecycle.Observer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.MediatorLiveData$Source: int mVersion> = -1;

        r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData> = r1;

        r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver> = r2;

        return;
    }

    void plug()
    {
        androidx.lifecycle.MediatorLiveData$Source r0;
        androidx.lifecycle.LiveData $r1;

        r0 := @this: androidx.lifecycle.MediatorLiveData$Source;

        $r1 = r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData>;

        virtualinvoke $r1.<androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)>(r0);

        return;
    }

    void unplug()
    {
        androidx.lifecycle.MediatorLiveData$Source r0;
        androidx.lifecycle.LiveData $r1;

        r0 := @this: androidx.lifecycle.MediatorLiveData$Source;

        $r1 = r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData>;

        virtualinvoke $r1.<androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)>(r0);

        return;
    }

    public void onChanged(java.lang.Object)
    {
        androidx.lifecycle.MediatorLiveData$Source r0;
        java.lang.Object r1;
        androidx.lifecycle.LiveData $r2, $r3;
        int $i0, $i1, $i2;
        androidx.lifecycle.Observer $r4;

        r0 := @this: androidx.lifecycle.MediatorLiveData$Source;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<androidx.lifecycle.MediatorLiveData$Source: int mVersion>;

        $r2 = r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData>;

        $i1 = virtualinvoke $r2.<androidx.lifecycle.LiveData: int getVersion()>();

        if $i0 == $i1 goto label1;

        $r3 = r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData>;

        $i2 = virtualinvoke $r3.<androidx.lifecycle.LiveData: int getVersion()>();

        r0.<androidx.lifecycle.MediatorLiveData$Source: int mVersion> = $i2;

        $r4 = r0.<androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver>;

        interfaceinvoke $r4.<androidx.lifecycle.Observer: void onChanged(java.lang.Object)>(r1);

     label1:
        return;
    }

