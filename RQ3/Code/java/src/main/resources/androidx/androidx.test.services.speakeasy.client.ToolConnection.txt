androidx.test.services.speakeasy.client.ToolConnection
<androidx.test.services.speakeasy.client.ToolConnection: java.lang.String contentProvider>
<androidx.test.services.speakeasy.client.ToolConnection: java.lang.String packageName>
<androidx.test.services.speakeasy.client.ToolConnection: java.util.Random random>
    private void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.services.speakeasy.client.ToolConnection $r0;
        java.lang.String $r1, $r3;
        java.security.SecureRandom $r2;
        java.lang.Object $r4;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection;

        $r3 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        $r0.<androidx.test.services.speakeasy.client.ToolConnection: java.util.Random random> = $r2;

        $r4 = staticinvoke <androidx.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r3 = (java.lang.String) $r4;

        $r0.<androidx.test.services.speakeasy.client.ToolConnection: java.lang.String packageName> = $r3;

        $r4 = staticinvoke <androidx.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (java.lang.String) $r4;

        $r0.<androidx.test.services.speakeasy.client.ToolConnection: java.lang.String contentProvider> = $r3;

        return;
    }

    void <init>(java.lang.String, java.lang.String, androidx.test.services.speakeasy.client.ToolConnection-IA)
    {
        androidx.test.services.speakeasy.client.ToolConnection $r0;
        java.lang.String $r1, $r2;
        androidx.test.services.speakeasy.client.ToolConnection-IA $r3;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.test.services.speakeasy.client.ToolConnection-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    private static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;
    }

    public static androidx.test.services.speakeasy.client.Connection makeConnection()
    {
        androidx.test.services.speakeasy.client.Connection $r0;

        $r0 = staticinvoke <androidx.test.services.speakeasy.client.ToolConnection: androidx.test.services.speakeasy.client.Connection makeConnection(java.lang.String,java.lang.String)>("androidx.test.services", "androidx_test_services.speak_easy");

        return $r0;
    }

    static androidx.test.services.speakeasy.client.Connection makeConnection(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0;
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r2;
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r3;
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label1;

        $r2 = new androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        specialinvoke $r2.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 25 goto label2;

        $r3 = new androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        specialinvoke $r3.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r3;

     label2:
        $r4 = new androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

        specialinvoke $r4.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r4;
    }

<androidx.test.services.speakeasy.client.ToolConnection: void doCall(android.os.Bundle)>
    public void publish(android.os.IBinder, androidx.test.services.speakeasy.client.PublishResultReceiver)
    {
        androidx.test.services.speakeasy.client.ToolConnection $r0;
        android.os.IBinder $r1;
        androidx.test.services.speakeasy.client.PublishResultReceiver $r2;
        java.util.Random $r3;
        long $l0;
        java.lang.String $r4;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection;

        $r1 := @parameter0: android.os.IBinder;

        $r2 := @parameter1: androidx.test.services.speakeasy.client.PublishResultReceiver;

        $r3 = $r0.<androidx.test.services.speakeasy.client.ToolConnection: java.util.Random random>;

        $l0 = virtualinvoke $r3.<java.util.Random: long nextLong()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection: void publish(java.lang.String,android.os.IBinder,androidx.test.services.speakeasy.client.PublishResultReceiver)>($r4, $r1, $r2);

        return;
    }

    void publish(java.lang.String, android.os.IBinder, androidx.test.services.speakeasy.client.PublishResultReceiver)
    {
        androidx.test.services.speakeasy.client.ToolConnection $r0;
        androidx.test.services.speakeasy.client.PublishResultReceiver $r1;
        android.os.Bundle $r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException r6;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: android.os.IBinder;

        $r1 := @parameter2: androidx.test.services.speakeasy.client.PublishResultReceiver;

        staticinvoke <androidx.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        staticinvoke <androidx.test.services.speakeasy.client.ToolConnection: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.Bundle asBundle(java.lang.String,android.os.IBinder,android.os.ResultReceiver)>($r3, $r4, $r1);

     label1:
        virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection: void doCall(android.os.Bundle)>($r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r6 = new java.lang.RuntimeException;

        specialinvoke r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        $r5 = (java.lang.Throwable) r6;

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String,androidx.test.services.speakeasy.client.ToolConnection-IA)>($r1, $r2, null);

        return;
    }

    protected final void doCall(android.os.Bundle) throws android.os.RemoteException
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat $r0;
        android.app.IActivityManager $r1;
        android.os.Bundle $r2;
        android.content.Intent $r3;
        java.lang.String $r4;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat;

        $r2 := @parameter0: android.os.Bundle;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        $r4 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionCompat: java.lang.String packageName>;

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r4, "androidx.test.services.speakeasy.server.SpeakEasyService");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>($r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking ActivityManagerNative.getDefault().startService(...)");

        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        interfaceinvoke $r1.<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>(null, $r3, null);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Intent sent!");

        return;
    }

androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected java.lang.Object getActivityManager()
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN $r0;
        android.app.IActivityManager $r1;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionJBToN;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking ActivityManagerNative.getDefault");

        $r1 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        return $r1;
    }

androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected java.lang.Object getActivityManager()
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO $r0;
        java.lang.Class[] $r1;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6, r8;
        java.lang.RuntimeException r7;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionO;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking getService");

        $r2 = class "Landroid/app/ActivityManager;";

        $r1 = newarray (java.lang.Class)[0];

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getService", $r1);

     label2:
        $r4 = newarray (java.lang.Object)[0];

     label3:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        goto label8;

     label6:
        $r6 := @caughtexception;

        goto label8;

     label7:
        $r6 := @caughtexception;

     label8:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolConnection", "Could not find / invoke get service", $r6);

        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
        catch java.lang.NoSuchMethodException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
    }

androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection: void <init>(java.lang.String,java.lang.String,androidx.test.services.speakeasy.client.ToolConnection-IA)>($r1, $r2, null);

        return;
    }

    private static int getCurrentUserOrUserZero()
    {
        java.lang.Class $r0;
        java.lang.Class[] $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        int $i0;
        java.lang.Throwable $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ToolConnection", "looking up getCurrentUser");

        $r0 = class "Landroid/app/ActivityManager;";

        $r1 = newarray (java.lang.Class)[0];

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getCurrentUser", $r1);

     label02:
        $r3 = newarray (java.lang.Object)[0];

     label03:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label04:
        $r5 = (java.lang.Integer) $r4;

     label05:
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label06:
        return $i0;

     label07:
        $r6 := @caughtexception;

        goto label10;

     label08:
        $r6 := @caughtexception;

        goto label10;

     label09:
        $r6 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolConnection", "looking up getCurrentUser error ", $r6);

        return 0;

        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.IllegalAccessException from label01 to label02 with label08;
        catch java.lang.IllegalAccessException from label03 to label04 with label08;
        catch java.lang.IllegalAccessException from label05 to label06 with label08;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label07;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label07;
    }

    protected final void doCall(android.os.Bundle) throws android.os.RemoteException
    {
        androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs $r0;
        android.os.Bundle $r1;
        java.lang.reflect.Method $r2, $r7, $r17;
        java.lang.String $r3, $r10, $r18;
        java.lang.Class $r4, $r6;
        java.lang.Class[] $r5;
        boolean $z0;
        java.lang.Throwable $r8, $r21, $r22;
        android.os.Binder $r9, r23;
        java.lang.StringBuilder $r11, r24;
        int $i0, $i1;
        java.lang.Object $r12, $r20;
        java.lang.Object[] $r13;
        java.lang.Integer $r14;
        java.lang.reflect.Field $r15;
        java.lang.reflect.Method[] $r16;
        java.lang.reflect.Constructor $r19;
        java.lang.RuntimeException r25;
        java.lang.IllegalStateException r26;

        $r0 := @this: androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = "android.content.AttributionSource";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up IActivityManager");

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.app.IActivityManager");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up getContentProviderExternal");

        $r5 = newarray (java.lang.Class)[3];

        $r5[0] = class "Ljava/lang/String;";

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[1] = $r6;

        $r5[2] = class "Landroid/os/IBinder;";

     label01:
        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContentProviderExternal", $r5);

     label02:
        $r2 = $r7;

        $z0 = 0;

        goto label06;

     label03:
        $r8 := @caughtexception;

        $r5 = newarray (java.lang.Class)[4];

        $r5[0] = class "Ljava/lang/String;";

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[1] = $r6;

        $r5[2] = class "Landroid/os/IBinder;";

        $r5[3] = class "Ljava/lang/String;";

     label04:
        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getContentProviderExternal", $r5);

     label05:
        $r2 = $r7;

        $z0 = 1;

     label06:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "looking up removeContentProviderExternal");

        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Ljava/lang/String;";

        $r5[1] = class "Landroid/os/IBinder;";

     label07:
        $r7 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("removeContentProviderExternal", $r5);

     label08:
        r23 = new android.os.Binder;

        $r9 = r23;

     label09:
        specialinvoke r23.<android.os.Binder: void <init>()>();

     label10:
        $r10 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        r24 = new java.lang.StringBuilder;

        $r11 = r24;

     label11:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting a content provider holder for: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", $r10);

        $i0 = staticinvoke <androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: int getCurrentUserOrUserZero()>();

        r24 = new java.lang.StringBuilder;

        $r11 = r24;

     label13:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting contentProvider as user: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ToolConnection", $r10);

        if $z0 == 0 goto label19;

     label15:
        $r12 = virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label16:
        $r13 = newarray (java.lang.Object)[4];

        $r10 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r10;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[1] = $r14;

        $r13[2] = $r9;

        $r13[3] = null;

     label17:
        $r12 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label18:
        goto label22;

     label19:
        $r12 = virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label20:
        $r13 = newarray (java.lang.Object)[3];

        $r10 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r10;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[1] = $r14;

        $r13[2] = $r9;

     label21:
        $r12 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label22:
        if $r12 == null goto label72;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Getting the provider field");

     label23:
        $r4 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("provider");

        virtualinvoke $r15.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r12 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r12);

     label24:
        if $r12 == null goto label69;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Finding the call method");

     label25:
        $r4 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

     label26:
        $i0 = lengthof $r16;

        $r17 = null;

        $i1 = 0;

     label27:
        if $i1 >= $i0 goto label31;

        $r2 = $r16[$i1];

        $r10 = "call";

     label28:
        $r18 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r18);

     label29:
        if $z0 == 0 goto label30;

        $r17 = $r2;

     label30:
        $i1 = $i1 + 1;

        goto label27;

     label31:
        if $r17 == null goto label65;

     label32:
        $r5 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label33:
        $i0 = lengthof $r5;

        if $i0 != 4 goto label36;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking modern call method");

        $r13 = newarray (java.lang.Object)[4];

        $r13[0] = null;

        $r13[1] = null;

        $r13[2] = null;

        $r13[3] = $r1;

     label34:
        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label35:
        goto label60;

     label36:
        $r5 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label37:
        $i0 = lengthof $r5;

        if $i0 != 5 goto label50;

     label38:
        $r5 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label39:
        $r4 = $r5[0];

     label40:
        $r10 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label41:
        if $z0 == 0 goto label50;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking Android S call method");

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.content.AttributionSource");

        $r5 = newarray (java.lang.Class)[3];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r5[1] = class "Ljava/lang/String;";

        $r5[2] = class "Ljava/lang/String;";

     label42:
        $r19 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r5);

     label43:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r24 = new java.lang.StringBuilder;

        $r11 = r24;

     label44:
        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using uid ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label45:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", $r3);

        $r13 = newarray (java.lang.Object)[3];

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r13[0] = $r14;

        $r13[1] = null;

        $r13[2] = null;

     label46:
        $r20 = virtualinvoke $r19.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

     label47:
        $r13 = newarray (java.lang.Object)[5];

        $r13[0] = $r20;

        $r13[1] = "androidx_test_services.speak_easy";

        $r13[2] = null;

        $r13[3] = null;

        $r13[4] = $r1;

     label48:
        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label49:
        goto label60;

     label50:
        $r5 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label51:
        $i0 = lengthof $r5;

        if $i0 != 5 goto label54;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking Android Q call method");

        $r13 = newarray (java.lang.Object)[5];

        $r13[0] = null;

        $r13[1] = "androidx_test_services.speak_easy";

        $r13[2] = null;

        $r13[3] = null;

        $r13[4] = $r1;

     label52:
        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label53:
        goto label60;

     label54:
        $r5 = virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

     label55:
        $i0 = lengthof $r5;

        if $i0 != 6 goto label58;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking Android R call method");

        $r13 = newarray (java.lang.Object)[6];

        $r13[0] = null;

        $r13[1] = null;

        $r13[2] = "androidx_test_services.speak_easy";

        $r13[3] = null;

        $r13[4] = null;

        $r13[5] = $r1;

     label56:
        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label57:
        goto label60;

     label58:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Invoking legacy call method");

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = null;

        $r13[1] = null;

        $r13[2] = $r1;

     label59:
        virtualinvoke $r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label60:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Intent sent!");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Releasing content provider");

     label61:
        $r12 = virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label62:
        $r13 = newarray (java.lang.Object)[2];

        $r3 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r3;

        $r13[1] = $r9;

     label63:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label64:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Released content provider");

        return;

     label65:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ToolConnection", "No call method!");

        r25 = new java.lang.RuntimeException;

     label66:
        specialinvoke r25.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not find call method on content provider!");

     label67:
        $r8 = (java.lang.Throwable) r25;

     label68:
        throw $r8;

     label69:
        r26 = new java.lang.IllegalStateException;

        $r13 = newarray (java.lang.Object)[1];

        $r3 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Call to getContentProviderExternal for: %s returns null provider!", $r13);

     label70:
        specialinvoke r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

     label71:
        throw r26;

     label72:
        r26 = new java.lang.IllegalStateException;

        $r13 = newarray (java.lang.Object)[1];

        $r3 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Call to getContentProviderExternal for: %s returns null!", $r13);

     label73:
        specialinvoke r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

     label74:
        throw r26;

     label75:
        $r21 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Releasing content provider");

     label76:
        $r12 = virtualinvoke $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>();

     label77:
        $r13 = newarray (java.lang.Object)[2];

        $r3 = $r0.<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.String contentProvider>;

        $r13[0] = $r3;

        $r13[1] = $r9;

     label78:
        virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r12, $r13);

     label79:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ToolConnection", "Released content provider");

     label80:
        throw $r21;

     label81:
        $r22 := @caughtexception;

        goto label87;

     label82:
        $r22 := @caughtexception;

        goto label87;

     label83:
        $r22 := @caughtexception;

        goto label87;

     label84:
        $r22 := @caughtexception;

        goto label87;

     label85:
        $r22 := @caughtexception;

        goto label87;

     label86:
        $r22 := @caughtexception;

     label87:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolConnection", "Connecting to content providers has failed!", $r22);

        r25 = new java.lang.RuntimeException;

        specialinvoke r25.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r22);

        goto label88;

     label88:
        $r8 = (java.lang.Throwable) r25;

        throw $r8;

        catch java.lang.NoSuchMethodException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label02 with label86;
        catch java.lang.ClassNotFoundException from label01 to label02 with label85;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label83;
        catch java.lang.NoSuchFieldException from label01 to label02 with label82;
        catch java.lang.InstantiationException from label01 to label02 with label81;
        catch java.lang.IllegalAccessException from label04 to label05 with label86;
        catch java.lang.IllegalAccessException from label07 to label08 with label86;
        catch java.lang.IllegalAccessException from label09 to label10 with label86;
        catch java.lang.ClassNotFoundException from label04 to label05 with label85;
        catch java.lang.ClassNotFoundException from label07 to label08 with label85;
        catch java.lang.ClassNotFoundException from label09 to label10 with label85;
        catch java.lang.NoSuchMethodException from label04 to label05 with label84;
        catch java.lang.NoSuchMethodException from label07 to label08 with label84;
        catch java.lang.NoSuchMethodException from label09 to label10 with label84;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label83;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label83;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label83;
        catch java.lang.NoSuchFieldException from label04 to label05 with label82;
        catch java.lang.NoSuchFieldException from label07 to label08 with label82;
        catch java.lang.NoSuchFieldException from label09 to label10 with label82;
        catch java.lang.InstantiationException from label04 to label05 with label81;
        catch java.lang.InstantiationException from label07 to label08 with label81;
        catch java.lang.InstantiationException from label09 to label10 with label81;
        catch java.lang.Throwable from label11 to label12 with label75;
        catch java.lang.Throwable from label13 to label14 with label75;
        catch java.lang.Throwable from label15 to label16 with label75;
        catch java.lang.Throwable from label17 to label18 with label75;
        catch java.lang.Throwable from label19 to label20 with label75;
        catch java.lang.Throwable from label21 to label22 with label75;
        catch java.lang.Throwable from label23 to label24 with label75;
        catch java.lang.Throwable from label25 to label26 with label75;
        catch java.lang.Throwable from label28 to label29 with label75;
        catch java.lang.Throwable from label32 to label33 with label75;
        catch java.lang.Throwable from label34 to label35 with label75;
        catch java.lang.Throwable from label36 to label37 with label75;
        catch java.lang.Throwable from label38 to label39 with label75;
        catch java.lang.Throwable from label40 to label41 with label75;
        catch java.lang.Throwable from label42 to label43 with label75;
        catch java.lang.Throwable from label44 to label45 with label75;
        catch java.lang.Throwable from label46 to label47 with label75;
        catch java.lang.Throwable from label48 to label49 with label75;
        catch java.lang.Throwable from label50 to label51 with label75;
        catch java.lang.Throwable from label52 to label53 with label75;
        catch java.lang.Throwable from label54 to label55 with label75;
        catch java.lang.Throwable from label56 to label57 with label75;
        catch java.lang.Throwable from label59 to label60 with label75;
        catch java.lang.IllegalAccessException from label61 to label62 with label86;
        catch java.lang.IllegalAccessException from label63 to label64 with label86;
        catch java.lang.ClassNotFoundException from label61 to label62 with label85;
        catch java.lang.ClassNotFoundException from label63 to label64 with label85;
        catch java.lang.NoSuchMethodException from label61 to label62 with label84;
        catch java.lang.NoSuchMethodException from label63 to label64 with label84;
        catch java.lang.reflect.InvocationTargetException from label61 to label62 with label83;
        catch java.lang.reflect.InvocationTargetException from label63 to label64 with label83;
        catch java.lang.NoSuchFieldException from label61 to label62 with label82;
        catch java.lang.NoSuchFieldException from label63 to label64 with label82;
        catch java.lang.InstantiationException from label61 to label62 with label81;
        catch java.lang.InstantiationException from label63 to label64 with label81;
        catch java.lang.Throwable from label66 to label67 with label75;
        catch java.lang.Throwable from label68 to label69 with label75;
        catch java.lang.Throwable from label70 to label71 with label75;
        catch java.lang.Throwable from label73 to label74 with label75;
        catch java.lang.IllegalAccessException from label76 to label77 with label86;
        catch java.lang.IllegalAccessException from label78 to label79 with label86;
        catch java.lang.IllegalAccessException from label80 to label81 with label86;
        catch java.lang.ClassNotFoundException from label76 to label77 with label85;
        catch java.lang.ClassNotFoundException from label78 to label79 with label85;
        catch java.lang.ClassNotFoundException from label80 to label81 with label85;
        catch java.lang.NoSuchMethodException from label76 to label77 with label84;
        catch java.lang.NoSuchMethodException from label78 to label79 with label84;
        catch java.lang.NoSuchMethodException from label80 to label81 with label84;
        catch java.lang.reflect.InvocationTargetException from label76 to label77 with label83;
        catch java.lang.reflect.InvocationTargetException from label78 to label79 with label83;
        catch java.lang.reflect.InvocationTargetException from label80 to label81 with label83;
        catch java.lang.NoSuchFieldException from label76 to label77 with label82;
        catch java.lang.NoSuchFieldException from label78 to label79 with label82;
        catch java.lang.NoSuchFieldException from label80 to label81 with label82;
        catch java.lang.InstantiationException from label76 to label77 with label81;
        catch java.lang.InstantiationException from label78 to label79 with label81;
        catch java.lang.InstantiationException from label80 to label81 with label81;
    }

<androidx.test.services.speakeasy.client.ToolConnection$ToolConnectionPostIcs: java.lang.Object getActivityManager()>
