androidx.test.services.speakeasy.SpeakEasyProtocol
<androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method GET_IBINDER>
<androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method PUT_IBINDER>
<androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG>
<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find>
<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult>
<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish>
<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult>
<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove>
<androidx.test.services.speakeasy.SpeakEasyProtocol: int type>
    static volatile java.lang.String '-$$Nest$sfgetTAG'()
    {
        java.lang.String r0;

        r0 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG>;

        return r0;
    }

    static volatile java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)
    {
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        return $r0;
    }

    static volatile android.os.IBinder '-$$Nest$smgetBinder'(android.os.Bundle, java.lang.String)
    {
        java.lang.String $r0;
        android.os.IBinder $r1;
        android.os.Bundle $r2;

        $r2 := @parameter0: android.os.Bundle;

        $r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)>($r2, $r0);

        return $r1;
    }

    static volatile android.os.ResultReceiver '-$$Nest$smmarshableReceiver'(android.os.ResultReceiver)
    {
        android.os.ResultReceiver $r0;

        $r0 := @parameter0: android.os.ResultReceiver;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: android.os.ResultReceiver marshableReceiver(android.os.ResultReceiver)>($r0);

        return $r0;
    }

    static volatile void '-$$Nest$smputBinder'(android.os.Bundle, java.lang.String, android.os.IBinder)
    {
        android.os.Bundle $r0;
        java.lang.String $r1;
        android.os.IBinder $r2;

        $r0 := @parameter0: android.os.Bundle;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.IBinder;

        staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)>($r0, $r1, $r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3, $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException r6;

        $r0 = class "Landroidx/test/services/speakeasy/SpeakEasyProtocol;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG> = $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 18 goto label6;

        $r0 = class "Landroid/os/Bundle;";

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/lang/String;";

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getIBinder", $r2);

     label2:
        $r0 = class "Landroid/os/Bundle;";

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Ljava/lang/String;";

        $r2[1] = class "Landroid/os/IBinder;";

     label3:
        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("putIBinder", $r2);

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        $r1 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "Cannot find methods for IBinders on bundle object", $r5);

        r6 = new java.lang.RuntimeException;

        specialinvoke r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        $r5 = (java.lang.Throwable) r6;

        throw $r5;

     label6:
        $r3 = null;

        $r4 = null;

     label7:
        <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method GET_IBINDER> = $r3;

        <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method PUT_IBINDER> = $r4;

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    private void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Find)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type> = 3;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult> = null;

        return;
    }

    void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Find, androidx.test.services.speakeasy.SpeakEasyProtocol-IA)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r1;
        androidx.test.services.speakeasy.SpeakEasyProtocol-IA $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        $r2 := @parameter1: androidx.test.services.speakeasy.SpeakEasyProtocol-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Find)>($r1);

        return;
    }

    private void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type> = 4;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult> = $r1;

        return;
    }

    void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult, androidx.test.services.speakeasy.SpeakEasyProtocol-IA)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r1;
        androidx.test.services.speakeasy.SpeakEasyProtocol-IA $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult;

        $r2 := @parameter1: androidx.test.services.speakeasy.SpeakEasyProtocol-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult)>($r1);

        return;
    }

    private void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type> = 0;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult> = null;

        return;
    }

    void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish, androidx.test.services.speakeasy.SpeakEasyProtocol-IA)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r1;
        androidx.test.services.speakeasy.SpeakEasyProtocol-IA $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r2 := @parameter1: androidx.test.services.speakeasy.SpeakEasyProtocol-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish)>($r1);

        return;
    }

    private void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type> = 1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult> = null;

        return;
    }

    void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult, androidx.test.services.speakeasy.SpeakEasyProtocol-IA)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r1;
        androidx.test.services.speakeasy.SpeakEasyProtocol-IA $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult;

        $r2 := @parameter1: androidx.test.services.speakeasy.SpeakEasyProtocol-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult)>($r1);

        return;
    }

    private void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type> = 2;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find> = null;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult> = null;

        return;
    }

    void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove, androidx.test.services.speakeasy.SpeakEasyProtocol-IA)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r1;
        androidx.test.services.speakeasy.SpeakEasyProtocol-IA $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 := @parameter0: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        $r2 := @parameter1: androidx.test.services.speakeasy.SpeakEasyProtocol-IA;

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove)>($r1);

        return;
    }

    private static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.NullPointerException $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;
    }

    public static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.lang.String $r1, $r3;
        int $i0;
        java.lang.StringBuilder $r2;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r4;

        $r0 := @parameter0: android.os.Bundle;

        if $r0 != null goto label1;

        $r1 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, "Null bundle");

        return null;

     label1:
        $i0 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String,int)>("sep_type", -1);

        lookupswitch($i0)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label2;
        };

     label2:
        $r1 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String TAG>;

        $i0 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String,int)>("sep_type", -1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid/missing sep_type: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r1, $r3);

        return null;

     label3:
        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)>($r0);

        return $r4;

     label4:
        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Find: androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)>($r0);

        return $r4;

     label5:
        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)>($r0);

        return $r4;

     label6:
        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)>($r0);

        return $r4;

     label7:
        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)>($r0);

        return $r4;
    }

    private static android.os.IBinder getBinder(android.os.Bundle, java.lang.String)
    {
        java.lang.reflect.Method $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        android.os.IBinder $r5;
        java.lang.Throwable $r6, r8;
        java.lang.RuntimeException r7;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $r0 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method GET_IBINDER>;

        if $r0 == null goto label6;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

     label2:
        $r5 = (android.os.IBinder) $r4;

        return $r5;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        r7 = new java.lang.RuntimeException;

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        r8 = (java.lang.Throwable) r7;

        throw r8;

     label6:
        $r5 = virtualinvoke $r1.<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>($r2);

        return $r5;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    private static android.os.ResultReceiver marshableReceiver(android.os.ResultReceiver)
    {
        android.os.ResultReceiver $r0;
        java.lang.Class $r1;
        boolean $z0;
        android.os.Parcel $r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: android.os.ResultReceiver;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Landroid/os/ResultReceiver;");

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label2:
        virtualinvoke $r0.<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>($r2, 0);

        virtualinvoke $r2.<android.os.Parcel: void setDataPosition(int)>(0);

     label3:
        $r3 = <android.os.ResultReceiver: android.os.Parcelable$Creator CREATOR>;

     label4:
        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);

     label5:
        $r0 = (android.os.ResultReceiver) $r4;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        return $r0;

     label6:
        $r5 := @caughtexception;

        virtualinvoke $r2.<android.os.Parcel: void recycle()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static void putBinder(android.os.Bundle, java.lang.String, android.os.IBinder)
    {
        android.os.IBinder $r0;
        java.lang.reflect.Method $r1;
        android.os.Bundle $r2;
        java.lang.String $r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5, r7;
        java.lang.RuntimeException r6;

        $r2 := @parameter0: android.os.Bundle;

        $r3 := @parameter1: java.lang.String;

        $r0 := @parameter2: android.os.IBinder;

        $r1 = <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.reflect.Method PUT_IBINDER>;

        if $r1 == null goto label6;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r3;

        $r4[1] = $r0;

     label1:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        r6 = new java.lang.RuntimeException;

        specialinvoke r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        r7 = (java.lang.Throwable) r6;

        throw r7;

     label6:
        virtualinvoke $r2.<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>($r3, $r0);

        return;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r3;
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r4;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r5;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r6;
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r7;
        java.lang.String $r8;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol;

        $r1 = newarray (java.lang.Object)[6];

        $i0 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: int type>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish publish>;

        $r1[1] = $r3;

        $r4 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult publishResult>;

        $r1[2] = $r4;

        $r5 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove remove>;

        $r1[3] = $r5;

        $r6 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$Find find>;

        $r1[4] = $r6;

        $r7 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult findResult>;

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SpeakEasyProtocol{ type: %d, publish: %s, publishResult: %s, remove: %s, find: %s,findResult: %s }", $r1);

        return $r8;
    }

androidx.test.services.speakeasy.SpeakEasyProtocol$Find
<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key>
<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver>
    static volatile androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        android.os.Bundle $r1;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Find: androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)>($r1);

        return $r0;
    }

    private void <init>(java.lang.String, android.os.ResultReceiver)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r0;
        java.lang.String $r1;
        android.os.ResultReceiver $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.ResultReceiver;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver> = $r2;

        return;
    }

    private static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r1;
        java.lang.String $r2, $r6;
        android.os.Parcelable $r3;
        android.os.ResultReceiver $r4;
        java.lang.Object[] $r5;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r7;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_find_key");

        $r3 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sep_find_rr");

        $r4 = (android.os.ResultReceiver) $r3;

        specialinvoke $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: void <init>(java.lang.String,android.os.ResultReceiver)>($r2, $r4);

        $r2 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "sep_find_key";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r5);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r6);

        return null;

     label1:
        $r4 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver>;

        if $r4 != null goto label2;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "sep_find_rr";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r5);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r6);

        return null;

     label2:
        $r7 = new androidx.test.services.speakeasy.SpeakEasyProtocol;

        specialinvoke $r7.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Find,androidx.test.services.speakeasy.SpeakEasyProtocol-IA)>($r1, null);

        return $r7;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Find $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        android.os.ResultReceiver $r3;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Find;

        $r2 = newarray (java.lang.Object)[2];

        $r1 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: java.lang.String key>;

        $r2[0] = $r1;

        $r3 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Find: android.os.ResultReceiver resultReceiver>;

        $r2[1] = $r3;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Find: {key: %s, resultReceiver: %s}", $r2);

        return $r1;
    }

androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult
<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: android.os.IBinder binder>
<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.String error>
<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.Boolean found>
    static volatile androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        android.os.Bundle $r1;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)>($r1);

        return $r0;
    }

    private void <init>(boolean, android.os.IBinder, java.lang.String)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r0;
        android.os.IBinder $r1;
        java.lang.String $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.os.IBinder;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.Boolean found> = $r3;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: android.os.IBinder binder> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.String error> = $r2;

        return;
    }

    public static android.os.Bundle asBundle(boolean, android.os.IBinder, java.lang.String)
    {
        java.lang.String $r0;
        android.os.Bundle $r1;
        boolean $z0;
        android.os.IBinder $r2;
        java.lang.Object $r3;

        $z0 := @parameter0: boolean;

        $r2 := @parameter1: android.os.IBinder;

        $r0 := @parameter2: java.lang.String;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("sep_type", 4);

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("sep_fr_found", $z0);

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r3;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sep_fr_error", $r0);

        return $r1;

     label1:
        $r3 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r2);

        $r2 = (android.os.IBinder) $r3;

        staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: void '-$$Nest$smputBinder'(android.os.Bundle,java.lang.String,android.os.IBinder)>($r1, "sep_fr_binder", $r2);

        return $r1;
    }

    private static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r0;
        android.os.Bundle $r1;
        boolean $z0;
        android.os.IBinder $r2;
        java.lang.String $r3;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r4;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = new androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("sep_fr_found", 0);

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: android.os.IBinder '-$$Nest$smgetBinder'(android.os.Bundle,java.lang.String)>($r1, "sep_fr_binder");

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_fr_error");

        specialinvoke $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: void <init>(boolean,android.os.IBinder,java.lang.String)>($z0, $r2, $r3);

        $r4 = new androidx.test.services.speakeasy.SpeakEasyProtocol;

        specialinvoke $r4.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult,androidx.test.services.speakeasy.SpeakEasyProtocol-IA)>($r0, null);

        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        java.lang.Boolean $r3;
        android.os.IBinder $r4;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult;

        $r2 = newarray (java.lang.Object)[3];

        $r3 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.Boolean found>;

        $r2[0] = $r3;

        $r4 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: android.os.IBinder binder>;

        $r2[1] = $r4;

        $r1 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$FindResult: java.lang.String error>;

        $r2[2] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FindResult: {found: %s, binder: %s, error: %s}", $r2);

        return $r1;
    }

androidx.test.services.speakeasy.SpeakEasyProtocol$Publish
<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>
<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>
<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>
    static volatile androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        android.os.Bundle $r1;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)>($r1);

        return $r0;
    }

    private void <init>(java.lang.String, android.os.IBinder, android.os.ResultReceiver)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r0;
        java.lang.String $r1;
        android.os.IBinder $r2;
        android.os.ResultReceiver $r3;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.IBinder;

        $r3 := @parameter2: android.os.ResultReceiver;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value> = $r2;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver> = $r3;

        return;
    }

    public static android.os.Bundle asBundle(java.lang.String, android.os.IBinder, android.os.ResultReceiver)
    {
        android.os.ResultReceiver $r0;
        android.os.Bundle $r1, r5;
        java.lang.String $r2;
        android.os.IBinder $r3;
        java.lang.Object $r4;
        android.os.Parcelable r6;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: android.os.IBinder;

        $r0 := @parameter2: android.os.ResultReceiver;

        r5 = new android.os.Bundle;

        $r1 = r5;

        specialinvoke r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("sep_type", 0);

        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r4;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sep_pub_key", $r2);

        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r3);

        $r3 = (android.os.IBinder) $r4;

        staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: void '-$$Nest$smputBinder'(android.os.Bundle,java.lang.String,android.os.IBinder)>($r1, "sep_pub_ib", $r3);

        $r4 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r0);

        $r0 = (android.os.ResultReceiver) $r4;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: android.os.ResultReceiver '-$$Nest$smmarshableReceiver'(android.os.ResultReceiver)>($r0);

        r6 = (android.os.Parcelable) $r0;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("sep_pub_rr", r6);

        return $r1;
    }

    private static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r1;
        java.lang.String $r2, $r7;
        android.os.IBinder $r3;
        android.os.Parcelable $r4;
        android.os.ResultReceiver $r5;
        java.lang.Object[] $r6;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r8;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_pub_key");

        $r3 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: android.os.IBinder '-$$Nest$smgetBinder'(android.os.Bundle,java.lang.String)>($r0, "sep_pub_ib");

        $r4 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("sep_pub_rr");

        $r5 = (android.os.ResultReceiver) $r4;

        specialinvoke $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: void <init>(java.lang.String,android.os.IBinder,android.os.ResultReceiver)>($r2, $r3, $r5);

        $r2 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "sep_pub_key";

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r7);

        return null;

     label1:
        $r3 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

        if $r3 != null goto label2;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "sep_pub_ib";

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r7);

        return null;

     label2:
        $r5 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>;

        if $r5 != null goto label3;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "sep_pub_rr";

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r7);

        return null;

     label3:
        $r8 = new androidx.test.services.speakeasy.SpeakEasyProtocol;

        specialinvoke $r8.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Publish,androidx.test.services.speakeasy.SpeakEasyProtocol-IA)>($r1, null);

        return $r8;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Publish $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        android.os.IBinder $r3;
        android.os.ResultReceiver $r4;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Publish;

        $r2 = newarray (java.lang.Object)[3];

        $r1 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: java.lang.String key>;

        $r2[0] = $r1;

        $r3 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.IBinder value>;

        $r2[1] = $r3;

        $r4 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Publish: android.os.ResultReceiver resultReceiver>;

        $r2[2] = $r4;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Publish: {key: %s, value: %s, resultReceiver: %s}", $r2);

        return $r1;
    }

androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult
<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String error>
<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String key>
<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: boolean published>
    static volatile androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        android.os.Bundle $r1;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)>($r1);

        return $r0;
    }

    private void <init>(java.lang.String, boolean, java.lang.String)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String key> = $r1;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: boolean published> = $z0;

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String error> = $r2;

        return;
    }

    public static android.os.Bundle asBundle(java.lang.String, boolean, java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0, $r2;
        android.os.Bundle $r1;

        $r2 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r0 := @parameter2: java.lang.String;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("sep_type", 1);

        staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r2);

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sep_pr_key", $r2);

        if $z0 != 0 goto label1;

        staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r0);

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sep_pr_err", $r0);

     label1:
        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("sep_pr_published", $z0);

        return $r1;
    }

    private static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.Object[] $r4;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r5;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_pr_key");

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean getBoolean(java.lang.String)>("sep_pr_published");

        $r3 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_pr_err");

        specialinvoke $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: void <init>(java.lang.String,boolean,java.lang.String)>($r2, $z0, $r3);

        $r2 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String key>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "sep_pr_key";

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r4);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r3);

        return null;

     label1:
        $r5 = new androidx.test.services.speakeasy.SpeakEasyProtocol;

        specialinvoke $r5.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult,androidx.test.services.speakeasy.SpeakEasyProtocol-IA)>($r1, null);

        return $r5;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Boolean $r3;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String key>;

        $r1[0] = $r2;

        $z0 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: boolean published>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[1] = $r3;

        $r2 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$PublishResult: java.lang.String error>;

        $r1[2] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("PublishResult: {key: %s, published: %s, error: %s}", $r1);

        return $r2;
    }

androidx.test.services.speakeasy.SpeakEasyProtocol$Remove
<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: java.lang.String key>
    static volatile androidx.test.services.speakeasy.SpeakEasyProtocol '-$$Nest$smfromBundle'(android.os.Bundle)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol $r0;
        android.os.Bundle $r1;

        $r1 := @parameter0: android.os.Bundle;

        $r0 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)>($r1);

        return $r0;
    }

    public void <init>(java.lang.String)
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r0;
        java.lang.String $r1;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: java.lang.String key> = $r1;

        return;
    }

    public static android.os.Bundle asBundle(java.lang.String)
    {
        android.os.Bundle $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r0 = new android.os.Bundle;

        specialinvoke $r0.<android.os.Bundle: void <init>()>();

        virtualinvoke $r0.<android.os.Bundle: void putInt(java.lang.String,int)>("sep_type", 2);

        $r1 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.Object '-$$Nest$smcheckNotNull'(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r1;

        virtualinvoke $r0.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("sep_rm_key", $r2);

        return $r0;
    }

    private static androidx.test.services.speakeasy.SpeakEasyProtocol fromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r1;
        java.lang.String $r2, $r4;
        java.lang.Object[] $r3;
        androidx.test.services.speakeasy.SpeakEasyProtocol $r5;

        $r0 := @parameter0: android.os.Bundle;

        $r1 = new androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sep_rm_key");

        specialinvoke $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: void <init>(java.lang.String)>($r2);

        $r2 = $r1.<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: java.lang.String key>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <androidx.test.services.speakeasy.SpeakEasyProtocol: java.lang.String '-$$Nest$sfgetTAG'()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "sep_rm_key";

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\'%s\': not set", $r3);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r4);

        return null;

     label1:
        $r5 = new androidx.test.services.speakeasy.SpeakEasyProtocol;

        specialinvoke $r5.<androidx.test.services.speakeasy.SpeakEasyProtocol: void <init>(androidx.test.services.speakeasy.SpeakEasyProtocol$Remove,androidx.test.services.speakeasy.SpeakEasyProtocol-IA)>($r1, null);

        return $r5;
    }

    public java.lang.String toString()
    {
        androidx.test.services.speakeasy.SpeakEasyProtocol$Remove $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        $r0 := @this: androidx.test.services.speakeasy.SpeakEasyProtocol$Remove;

        $r2 = newarray (java.lang.Object)[1];

        $r1 = $r0.<androidx.test.services.speakeasy.SpeakEasyProtocol$Remove: java.lang.String key>;

        $r2[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Remove: {key: %s}", $r2);

        return $r1;
    }

