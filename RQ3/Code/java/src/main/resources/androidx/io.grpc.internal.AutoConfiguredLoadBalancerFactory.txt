io.grpc.internal.AutoConfiguredLoadBalancerFactory
<io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String defaultPolicy>
<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry>
    void <init>(io.grpc.LoadBalancerRegistry, java.lang.String)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        java.lang.String $r1;
        io.grpc.LoadBalancerRegistry $r2;
        java.lang.Object $r3;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r2 := @parameter0: io.grpc.LoadBalancerRegistry;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, "registry");

        $r2 = (io.grpc.LoadBalancerRegistry) $r3;

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry> = $r2;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "defaultPolicy");

        $r1 = (java.lang.String) $r3;

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String defaultPolicy> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        java.lang.String $r1;
        io.grpc.LoadBalancerRegistry $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerRegistry getDefaultRegistry()>();

        specialinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: void <init>(io.grpc.LoadBalancerRegistry,java.lang.String)>($r2, $r1);

        return;
    }

    static java.lang.String access$000(io.grpc.internal.AutoConfiguredLoadBalancerFactory)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        java.lang.String r1;

        $r0 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        r1 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String defaultPolicy>;

        return r1;
    }

    static io.grpc.LoadBalancerRegistry access$100(io.grpc.internal.AutoConfiguredLoadBalancerFactory)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        io.grpc.LoadBalancerRegistry r1;

        $r0 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        r1 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry>;

        return r1;
    }

    static io.grpc.LoadBalancerProvider access$200(io.grpc.internal.AutoConfiguredLoadBalancerFactory, java.lang.String, java.lang.String) throws io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException
    {
        java.lang.String $r0, $r1;
        io.grpc.LoadBalancerProvider $r2;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r3;

        $r3 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 = specialinvoke $r3.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerProvider getProviderOrThrow(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    private io.grpc.LoadBalancerProvider getProviderOrThrow(java.lang.String, java.lang.String) throws io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        java.lang.String $r1, $r2;
        io.grpc.LoadBalancerRegistry $r3;
        io.grpc.LoadBalancerProvider $r4;
        java.lang.StringBuilder $r5, r6;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException r7;
        java.lang.Throwable r8;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry>;

        $r4 = virtualinvoke $r3.<io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerProvider getProvider(java.lang.String)>($r1);

        if $r4 == null goto label1;

        return $r4;

     label1:
        r7 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException;

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to load \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' because ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but it\'s unavailable");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: void <init>(java.lang.String,io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)>($r1, null);

        r8 = (java.lang.Throwable) r7;

        throw r8;
    }

    public io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        io.grpc.LoadBalancer$Helper $r1;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r1 := @parameter0: io.grpc.LoadBalancer$Helper;

        $r2 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        specialinvoke $r2.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory,io.grpc.LoadBalancer$Helper)>($r0, $r1);

        return $r2;
    }

    io.grpc.NameResolver$ConfigOrError parseLoadBalancerPolicy(java.util.Map)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r0;
        java.util.Map $r1;
        java.util.List $r2;
        java.lang.Throwable $r3;
        boolean $z0;
        io.grpc.LoadBalancerRegistry $r4;
        io.grpc.NameResolver$ConfigOrError $r5;
        io.grpc.Status $r6;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r1 := @parameter0: java.util.Map;

        if $r1 == null goto label2;

        $r2 = staticinvoke <io.grpc.internal.ServiceConfigUtil: java.util.List getLoadBalancingConfigsFromServiceConfig(java.util.Map)>($r1);

        $r2 = staticinvoke <io.grpc.internal.ServiceConfigUtil: java.util.List unwrapLoadBalancingConfigList(java.util.List)>($r2);

        goto label3;

     label1:
        $r3 := @caughtexception;

        goto label6;

     label2:
        $r2 = null;

     label3:
        if $r2 == null goto label7;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

     label5:
        if $z0 != 0 goto label7;

        $r4 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry registry>;

        $r5 = staticinvoke <io.grpc.internal.ServiceConfigUtil: io.grpc.NameResolver$ConfigOrError selectLbPolicyFromList(java.util.List,io.grpc.LoadBalancerRegistry)>($r2, $r4);

        return $r5;

     label6:
        $r6 = <io.grpc.Status: io.grpc.Status UNKNOWN>;

        $r6 = virtualinvoke $r6.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>("can\'t parse load balancer configuration");

        $r6 = virtualinvoke $r6.<io.grpc.Status: io.grpc.Status withCause(java.lang.Throwable)>($r3);

        $r5 = staticinvoke <io.grpc.NameResolver$ConfigOrError: io.grpc.NameResolver$ConfigOrError fromError(io.grpc.Status)>($r6);

        return $r5;

     label7:
        return null;

        catch java.lang.RuntimeException from label4 to label5 with label1;
    }

io.grpc.internal.AutoConfiguredLoadBalancerFactory$1
io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider>
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.internal.AutoConfiguredLoadBalancerFactory this$0>
    void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory, io.grpc.LoadBalancer$Helper)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r0;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r1;
        io.grpc.LoadBalancer$Helper $r2;
        io.grpc.LoadBalancerRegistry $r3;
        java.lang.String $r4;
        io.grpc.LoadBalancerProvider $r5;
        io.grpc.LoadBalancer $r6;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        $r1 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory;

        $r2 := @parameter1: io.grpc.LoadBalancer$Helper;

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.internal.AutoConfiguredLoadBalancerFactory this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper> = $r2;

        $r3 = staticinvoke <io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerRegistry access$100(io.grpc.internal.AutoConfiguredLoadBalancerFactory)>($r1);

        $r4 = staticinvoke <io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String access$000(io.grpc.internal.AutoConfiguredLoadBalancerFactory)>($r1);

        $r5 = virtualinvoke $r3.<io.grpc.LoadBalancerRegistry: io.grpc.LoadBalancerProvider getProvider(java.lang.String)>($r4);

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider> = $r5;

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<io.grpc.LoadBalancerProvider: io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)>($r2);

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate> = $r6;

        return;

     label1:
        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find policy \'");

        $r4 = staticinvoke <io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String access$000(io.grpc.internal.AutoConfiguredLoadBalancerFactory)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'. Make sure its implementation is either registered to LoadBalancerRegistry or included in META-INF/services/io.grpc.LoadBalancerProvider from your jar files.");

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r7;
    }

    public io.grpc.LoadBalancer getDelegate()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r0;
        io.grpc.LoadBalancer r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        r1 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        return r1;
    }

    void handleNameResolutionError(io.grpc.Status)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r0;
        io.grpc.Status $r1;
        io.grpc.LoadBalancer $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = virtualinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer getDelegate()>();

        virtualinvoke $r2.<io.grpc.LoadBalancer: void handleNameResolutionError(io.grpc.Status)>($r1);

        return;
    }

    void shutdown()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r0;
        io.grpc.LoadBalancer $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        $r1 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        virtualinvoke $r1.<io.grpc.LoadBalancer: void shutdown()>();

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate> = null;

        return;
    }

    boolean tryAcceptResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer $r0;
        io.grpc.LoadBalancer$ResolvedAddresses $r1;
        java.lang.Object $r2, $r21;
        io.grpc.internal.ServiceConfigUtil$PolicySelection $r3;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory $r4;
        java.lang.String $r5, $r14;
        io.grpc.LoadBalancerProvider $r6;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException $r7;
        io.grpc.Status $r8;
        io.grpc.LoadBalancer$Helper $r9;
        io.grpc.ConnectivityState $r10;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker $r11;
        io.grpc.LoadBalancer $r12, $r16;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r13;
        boolean $z0;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker $r15;
        io.grpc.ChannelLogger $r17;
        io.grpc.ChannelLogger$ChannelLogLevel $r18;
        java.lang.Object[] $r19;
        java.lang.Class $r20;
        io.grpc.LoadBalancer$ResolvedAddresses$Builder $r22;
        java.util.List $r23;
        io.grpc.Attributes $r24;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer;

        $r1 := @parameter0: io.grpc.LoadBalancer$ResolvedAddresses;

        $r2 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: java.lang.Object getLoadBalancingPolicyConfig()>();

        $r3 = (io.grpc.internal.ServiceConfigUtil$PolicySelection) $r2;

        if $r3 != null goto label4;

        $r4 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.internal.AutoConfiguredLoadBalancerFactory this$0>;

     label1:
        $r5 = staticinvoke <io.grpc.internal.AutoConfiguredLoadBalancerFactory: java.lang.String access$000(io.grpc.internal.AutoConfiguredLoadBalancerFactory)>($r4);

        $r6 = staticinvoke <io.grpc.internal.AutoConfiguredLoadBalancerFactory: io.grpc.LoadBalancerProvider access$200(io.grpc.internal.AutoConfiguredLoadBalancerFactory,java.lang.String,java.lang.String)>($r4, $r5, "using default policy");

     label2:
        $r3 = new io.grpc.internal.ServiceConfigUtil$PolicySelection;

        specialinvoke $r3.<io.grpc.internal.ServiceConfigUtil$PolicySelection: void <init>(io.grpc.LoadBalancerProvider,java.lang.Object)>($r6, null);

        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <io.grpc.Status: io.grpc.Status INTERNAL>;

        $r5 = virtualinvoke $r7.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<io.grpc.Status: io.grpc.Status withDescription(java.lang.String)>($r5);

        $r9 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r10 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState TRANSIENT_FAILURE>;

        $r11 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker;

        specialinvoke $r11.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: void <init>(io.grpc.Status)>($r8);

        virtualinvoke $r9.<io.grpc.LoadBalancer$Helper: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)>($r10, $r11);

        $r12 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        virtualinvoke $r12.<io.grpc.LoadBalancer: void shutdown()>();

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider> = null;

        $r13 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        specialinvoke $r13.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)>(null);

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate> = $r13;

        return 1;

     label4:
        $r6 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider>;

        if $r6 == null goto label5;

        $r6 = $r3.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $r5 = virtualinvoke $r6.<io.grpc.LoadBalancerProvider: java.lang.String getPolicyName()>();

        $r6 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider>;

        $r14 = virtualinvoke $r6.<io.grpc.LoadBalancerProvider: java.lang.String getPolicyName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 != 0 goto label6;

     label5:
        $r9 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r10 = <io.grpc.ConnectivityState: io.grpc.ConnectivityState CONNECTING>;

        $r15 = new io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker;

        specialinvoke $r15.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)>(null);

        virtualinvoke $r9.<io.grpc.LoadBalancer$Helper: void updateBalancingState(io.grpc.ConnectivityState,io.grpc.LoadBalancer$SubchannelPicker)>($r10, $r15);

        $r12 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        virtualinvoke $r12.<io.grpc.LoadBalancer: void shutdown()>();

        $r6 = $r3.<io.grpc.internal.ServiceConfigUtil$PolicySelection: io.grpc.LoadBalancerProvider provider>;

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancerProvider delegateProvider> = $r6;

        $r12 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        $r9 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r16 = virtualinvoke $r6.<io.grpc.LoadBalancerProvider: io.grpc.LoadBalancer newLoadBalancer(io.grpc.LoadBalancer$Helper)>($r9);

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate> = $r16;

        $r9 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r17 = virtualinvoke $r9.<io.grpc.LoadBalancer$Helper: io.grpc.ChannelLogger getChannelLogger()>();

        $r18 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel INFO>;

        $r19 = newarray (java.lang.Object)[2];

        $r20 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19[0] = $r5;

        $r12 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer delegate>;

        $r20 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $r19[1] = $r5;

        virtualinvoke $r17.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r18, "Load balancer changed from {0} to {1}", $r19);

     label6:
        $r2 = $r3.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        if $r2 == null goto label7;

        $r9 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer$Helper helper>;

        $r17 = virtualinvoke $r9.<io.grpc.LoadBalancer$Helper: io.grpc.ChannelLogger getChannelLogger()>();

        $r18 = <io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel DEBUG>;

        $r19 = newarray (java.lang.Object)[1];

        $r21 = $r3.<io.grpc.internal.ServiceConfigUtil$PolicySelection: java.lang.Object config>;

        $r19[0] = $r21;

        virtualinvoke $r17.<io.grpc.ChannelLogger: void log(io.grpc.ChannelLogger$ChannelLogLevel,java.lang.String,java.lang.Object[])>($r18, "Load-balancing config: {0}", $r19);

     label7:
        $r12 = virtualinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$AutoConfiguredLoadBalancer: io.grpc.LoadBalancer getDelegate()>();

        $r22 = staticinvoke <io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.LoadBalancer$ResolvedAddresses$Builder newBuilder()>();

        $r23 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: java.util.List getAddresses()>();

        $r22 = virtualinvoke $r22.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAddresses(java.util.List)>($r23);

        $r24 = virtualinvoke $r1.<io.grpc.LoadBalancer$ResolvedAddresses: io.grpc.Attributes getAttributes()>();

        $r22 = virtualinvoke $r22.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setAttributes(io.grpc.Attributes)>($r24);

        $r22 = virtualinvoke $r22.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses$Builder setLoadBalancingPolicyConfig(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r22.<io.grpc.LoadBalancer$ResolvedAddresses$Builder: io.grpc.LoadBalancer$ResolvedAddresses build()>();

        $z0 = virtualinvoke $r12.<io.grpc.LoadBalancer: boolean acceptResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)>($r1);

        return $z0;

        catch io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException from label1 to label2 with label3;
    }

io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker
    private void <init>()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker $r0;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker;

        specialinvoke $r0.<io.grpc.LoadBalancer$SubchannelPicker: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker $r0;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$1 $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker;

        $r1 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory$1;

        specialinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: void <init>()>();

        return;
    }

    public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker $r0;
        io.grpc.LoadBalancer$PickResult $r1;
        io.grpc.LoadBalancer$PickSubchannelArgs $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker;

        $r2 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r1 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withNoResult()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker $r0;
        com.google.common.base.MoreObjects$ToStringHelper $r1;
        java.lang.String $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker;

        $r1 = staticinvoke <com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class)>(class "Lio/grpc/internal/AutoConfiguredLoadBalancerFactory$EmptyPicker;");

        $r2 = virtualinvoke $r1.<com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()>();

        return $r2;
    }

io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: io.grpc.Status failure>
    void <init>(io.grpc.Status)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker $r0;
        io.grpc.Status $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker;

        $r1 := @parameter0: io.grpc.Status;

        specialinvoke $r0.<io.grpc.LoadBalancer$SubchannelPicker: void <init>()>();

        $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: io.grpc.Status failure> = $r1;

        return;
    }

    public io.grpc.LoadBalancer$PickResult pickSubchannel(io.grpc.LoadBalancer$PickSubchannelArgs)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker $r0;
        io.grpc.LoadBalancer$PickResult $r1;
        io.grpc.LoadBalancer$PickSubchannelArgs $r2;
        io.grpc.Status $r3;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker;

        $r2 := @parameter0: io.grpc.LoadBalancer$PickSubchannelArgs;

        $r3 = $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$FailingPicker: io.grpc.Status failure>;

        $r1 = staticinvoke <io.grpc.LoadBalancer$PickResult: io.grpc.LoadBalancer$PickResult withError(io.grpc.Status)>($r3);

        return $r1;
    }

io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer
    private void <init>()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        specialinvoke $r0.<io.grpc.LoadBalancer: void <init>()>();

        return;
    }

    void <init>(io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$1 $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        $r1 := @parameter0: io.grpc.internal.AutoConfiguredLoadBalancerFactory$1;

        specialinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer: void <init>()>();

        return;
    }

    public boolean acceptResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;
        io.grpc.LoadBalancer$ResolvedAddresses $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        $r1 := @parameter0: io.grpc.LoadBalancer$ResolvedAddresses;

        return 1;
    }

    public void handleNameResolutionError(io.grpc.Status)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;
        io.grpc.Status $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        $r1 := @parameter0: io.grpc.Status;

        return;
    }

    public void handleResolvedAddresses(io.grpc.LoadBalancer$ResolvedAddresses)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;
        io.grpc.LoadBalancer$ResolvedAddresses $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        $r1 := @parameter0: io.grpc.LoadBalancer$ResolvedAddresses;

        return;
    }

    public void shutdown()
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer $r0;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$NoopLoadBalancer;

        return;
    }

io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException
<io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: long serialVersionUID>
    private void <init>(java.lang.String)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException $r0;
        java.lang.String $r1;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        return;
    }

    void <init>(java.lang.String, io.grpc.internal.AutoConfiguredLoadBalancerFactory$1)
    {
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException $r0;
        java.lang.String $r1;
        io.grpc.internal.AutoConfiguredLoadBalancerFactory$1 $r2;

        $r0 := @this: io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: io.grpc.internal.AutoConfiguredLoadBalancerFactory$1;

        specialinvoke $r0.<io.grpc.internal.AutoConfiguredLoadBalancerFactory$PolicyException: void <init>(java.lang.String)>($r1);

        return;
    }

