androidx.media3.test.utils.robolectric.TestDownloadManagerListener
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int TIMEOUT_MS>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int STATE_REMOVED>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.exoplayer.offline.DownloadManager downloadManager>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.HashMap downloadStates>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable initializedCondition>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition>
<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int failureReason>
    public void <init>(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        java.util.HashMap $r2;
        androidx.media3.common.util.ConditionVariable $r3, $r4;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.exoplayer.offline.DownloadManager downloadManager> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.HashMap downloadStates> = $r2;

        $r3 = staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: androidx.media3.common.util.ConditionVariable createRobolectricConditionVariable()>();

        r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable initializedCondition> = $r3;

        $r4 = staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: androidx.media3.common.util.ConditionVariable createRobolectricConditionVariable()>();

        r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition> = $r4;

        virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager: void addListener(androidx.media3.exoplayer.offline.DownloadManager$Listener)>(r0);

        return;
    }

    public void blockUntilInitialized() throws java.lang.InterruptedException
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.common.util.ConditionVariable $r1;
        boolean $z0;
        java.lang.Boolean $r2;
        com.google.common.truth.BooleanSubject $r3;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        $r1 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable initializedCondition>;

        $z0 = virtualinvoke $r1.<androidx.media3.common.util.ConditionVariable: boolean block(long)>(10000L);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r2);

        virtualinvoke $r3.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void blockUntilIdle() throws java.lang.InterruptedException
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.common.util.ConditionVariable r1, $r2, $r9;
        android.os.Handler $r3;
        androidx.media3.exoplayer.offline.DownloadManager $r4;
        android.os.Looper $r5;
        java.lang.Runnable $r6;
        boolean $z2, $z3;
        java.lang.Boolean $r7, $r10;
        com.google.common.truth.BooleanSubject $r8, $r11;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        $r2 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        r1 = staticinvoke <androidx.media3.test.utils.robolectric.RobolectricUtil: androidx.media3.common.util.ConditionVariable createRobolectricConditionVariable()>();

        $r3 = new android.os.Handler;

        $r4 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        $r5 = virtualinvoke $r4.<androidx.media3.exoplayer.offline.DownloadManager: android.os.Looper getApplicationLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.robolectric.TestDownloadManagerListener,androidx.media3.common.util.ConditionVariable)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.robolectric.TestDownloadManagerListener: void lambda$blockUntilIdle$0(androidx.media3.common.util.ConditionVariable)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        $z2 = virtualinvoke r1.<androidx.media3.common.util.ConditionVariable: boolean block(long)>(10000L);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r8 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r7);

        virtualinvoke $r8.<com.google.common.truth.BooleanSubject: void isTrue()>();

        $r9 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition>;

        $z3 = virtualinvoke $r9.<androidx.media3.common.util.ConditionVariable: boolean block(long)>(10000L);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r11 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r10);

        virtualinvoke $r11.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void blockUntilIdleAndThrowAnyFailure() throws java.lang.Exception
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        int $i0, $i1;
        java.lang.Exception $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        virtualinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: void blockUntilIdle()>();

        $i0 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int failureReason>;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.Exception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reason: ");

        $i1 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int failureReason>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    public void assertState(java.lang.String, int)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: void assertStateInternal(java.lang.String,int)>(r1, i0);

        return;
    }

    public void assertRemoved(java.lang.String)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: void assertStateInternal(java.lang.String,int)>(r1, -1);

        return;
    }

    public void onInitialized(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.common.util.ConditionVariable $r2;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        $r2 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable initializedCondition>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    public void onDownloadChanged(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download, java.lang.Exception)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;
        java.lang.Exception r3;
        int $i0, $i1, $i2;
        androidx.media3.exoplayer.offline.DownloadRequest $r4;
        java.lang.String $r5;
        java.util.concurrent.LinkedBlockingQueue $r6;
        java.lang.Integer $r7;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        r3 := @parameter2: java.lang.Exception;

        $i0 = r2.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i0 != 4 goto label1;

        $i2 = r2.<androidx.media3.exoplayer.offline.Download: int failureReason>;

        r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: int failureReason> = $i2;

     label1:
        $r4 = r2.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r5 = $r4.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r6 = specialinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.concurrent.LinkedBlockingQueue getStateQueue(java.lang.String)>($r5);

        $i1 = r2.<androidx.media3.exoplayer.offline.Download: int state>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r7);

        return;
    }

    public void onDownloadRemoved(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;
        androidx.media3.exoplayer.offline.DownloadRequest $r3;
        java.lang.String $r4;
        java.util.concurrent.LinkedBlockingQueue $r5;
        java.lang.Integer $r6;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        $r3 = r2.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r4 = $r3.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r5 = specialinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.concurrent.LinkedBlockingQueue getStateQueue(java.lang.String)>($r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r5.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void onIdle(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.common.util.ConditionVariable $r2;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        $r2 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    private void assertStateInternal(java.lang.String, int)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        java.lang.String r1, $r9, $r13, $r15;
        int i0, $i1;
        java.lang.Throwable r2, $r10;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r14;
        java.lang.Integer r16;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        r16 = null;

     label2:
        $r3 = specialinvoke r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.concurrent.LinkedBlockingQueue getStateQueue(java.lang.String)>(r1);

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r5 = virtualinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(10000L, $r4);

        r16 = (java.lang.Integer) $r5;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted: ");

        $r13 = virtualinvoke r2.<java.lang.InterruptedException: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r15);

     label5:
        if r16 == null goto label6;

        $i1 = virtualinvoke r16.<java.lang.Integer: int intValue()>();

        if i0 != $i1 goto label7;

        return;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Didn\'t receive expected state: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r9);

     label7:
        goto label1;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    private java.util.concurrent.LinkedBlockingQueue getStateQueue(java.lang.String)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4, $r5, $r8;
        java.lang.Throwable r3, $r11;
        java.lang.Object $r6;
        java.util.concurrent.LinkedBlockingQueue $r7, r12;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.HashMap downloadStates>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.HashMap downloadStates>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (java.util.concurrent.LinkedBlockingQueue) $r6;

        if r12 != null goto label2;

        $r7 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r12 = $r7;

        $r8 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: java.util.HashMap downloadStates>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

     label2:
        exitmonitor r2;

     label3:
        return r12;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void lambda$blockUntilIdle$0(androidx.media3.common.util.ConditionVariable)
    {
        androidx.media3.test.utils.robolectric.TestDownloadManagerListener r0;
        androidx.media3.common.util.ConditionVariable r1, $r3;
        androidx.media3.exoplayer.offline.DownloadManager $r2;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.robolectric.TestDownloadManagerListener;

        r1 := @parameter0: androidx.media3.common.util.ConditionVariable;

        $r2 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.exoplayer.offline.DownloadManager downloadManager>;

        $z0 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadManager: boolean isIdle()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.test.utils.robolectric.TestDownloadManagerListener: androidx.media3.common.util.ConditionVariable idleCondition>;

        virtualinvoke $r3.<androidx.media3.common.util.ConditionVariable: boolean open()>();

     label1:
        virtualinvoke r1.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

