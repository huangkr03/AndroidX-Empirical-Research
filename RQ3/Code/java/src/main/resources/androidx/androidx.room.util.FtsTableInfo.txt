androidx.room.util.FtsTableInfo
<androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion>
<androidx.room.util.FtsTableInfo: java.lang.String name>
<androidx.room.util.FtsTableInfo: java.util.Set columns>
<androidx.room.util.FtsTableInfo: java.util.Set options>
<androidx.room.util.FtsTableInfo: java.lang.String[] FTS_OPTIONS>
    public void <init>(java.lang.String, java.util.Set, java.util.Set)
    {
        androidx.room.util.FtsTableInfo r0;
        java.lang.String r1;
        java.util.Set r2, r3;

        r0 := @this: androidx.room.util.FtsTableInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "columns");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "options");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.util.FtsTableInfo: java.lang.String name> = r1;

        r0.<androidx.room.util.FtsTableInfo: java.util.Set columns> = r2;

        r0.<androidx.room.util.FtsTableInfo: java.util.Set options> = r3;

        return;
    }

    public void <init>(java.lang.String, java.util.Set, java.lang.String)
    {
        androidx.room.util.FtsTableInfo r0;
        java.lang.String r1, r3;
        java.util.Set r2, $r5;
        androidx.room.util.FtsTableInfo$Companion $r4;

        r0 := @this: androidx.room.util.FtsTableInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        r3 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "columns");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "createSql");

        $r4 = <androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.util.FtsTableInfo$Companion: java.util.Set parseOptions(java.lang.String)>(r3);

        specialinvoke r0.<androidx.room.util.FtsTableInfo: void <init>(java.lang.String,java.util.Set,java.util.Set)>(r1, r2, $r5);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.room.util.FtsTableInfo r0, $r3, $r6, $r9;
        java.lang.Object r1, r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r4, $r5;
        java.util.Set $r7, $r8, $r10, $r11;

        r0 := @this: androidx.room.util.FtsTableInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.room.util.FtsTableInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = r1;

        $r5 = r0.<androidx.room.util.FtsTableInfo: java.lang.String name>;

        $r3 = (androidx.room.util.FtsTableInfo) r2;

        $r4 = $r3.<androidx.room.util.FtsTableInfo: java.lang.String name>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r8 = r0.<androidx.room.util.FtsTableInfo: java.util.Set columns>;

        $r6 = (androidx.room.util.FtsTableInfo) r2;

        $r7 = $r6.<androidx.room.util.FtsTableInfo: java.util.Set columns>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r11 = r0.<androidx.room.util.FtsTableInfo: java.util.Set options>;

        $r9 = (androidx.room.util.FtsTableInfo) r2;

        $r10 = $r9.<androidx.room.util.FtsTableInfo: java.util.Set options>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r10);

        return $z3;
    }

    public int hashCode()
    {
        androidx.room.util.FtsTableInfo r0;
        java.lang.String $r1;
        java.util.Set $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5, i6;

        r0 := @this: androidx.room.util.FtsTableInfo;

        $r1 = r0.<androidx.room.util.FtsTableInfo: java.lang.String name>;

        i4 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i0 = 31 * i4;

        $r2 = r0.<androidx.room.util.FtsTableInfo: java.util.Set columns>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r3 = r0.<androidx.room.util.FtsTableInfo: java.util.Set options>;

        $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

    public java.lang.String toString()
    {
        androidx.room.util.FtsTableInfo r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r12;
        java.util.Set $r6, $r9;

        r0 := @this: androidx.room.util.FtsTableInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FtsTableInfo{name=\'");

        $r3 = r0.<androidx.room.util.FtsTableInfo: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', columns=");

        $r6 = r0.<androidx.room.util.FtsTableInfo: java.util.Set columns>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", options=");

        $r9 = r0.<androidx.room.util.FtsTableInfo: java.util.Set options>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'}");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static final androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.sqlite.db.SupportSQLiteDatabase r0;
        java.lang.String r1;
        androidx.room.util.FtsTableInfo$Companion $r2;
        androidx.room.util.FtsTableInfo $r3;

        r0 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.room.util.FtsTableInfo$Companion: androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static final java.util.Set parseOptions(java.lang.String)
    {
        java.lang.String r0;
        androidx.room.util.FtsTableInfo$Companion $r1;
        java.util.Set $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.room.util.FtsTableInfo$Companion: java.util.Set parseOptions(java.lang.String)>(r0);

        return $r2;
    }

    public static final java.lang.String[] access$getFTS_OPTIONS$cp()
    {
        java.lang.String[] $r0;

        $r0 = <androidx.room.util.FtsTableInfo: java.lang.String[] FTS_OPTIONS>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] r0;
        androidx.room.util.FtsTableInfo$Companion $r1;

        $r1 = new androidx.room.util.FtsTableInfo$Companion;

        specialinvoke $r1.<androidx.room.util.FtsTableInfo$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion> = $r1;

        r0 = newarray (java.lang.String)[9];

        r0[0] = "tokenize=";

        r0[1] = "compress=";

        r0[2] = "content=";

        r0[3] = "languageid=";

        r0[4] = "matchinfo=";

        r0[5] = "notindexed=";

        r0[6] = "order=";

        r0[7] = "prefix=";

        r0[8] = "uncompress=";

        <androidx.room.util.FtsTableInfo: java.lang.String[] FTS_OPTIONS> = r0;

        return;
    }

androidx.room.util.FtsTableInfo$Companion
    private void <init>()
    {
        androidx.room.util.FtsTableInfo$Companion r0;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.room.util.FtsTableInfo$Companion r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        java.lang.String r2;
        java.util.Set r3, r4;
        androidx.room.util.FtsTableInfo $r5;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "database");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tableName");

        r3 = specialinvoke r0.<androidx.room.util.FtsTableInfo$Companion: java.util.Set readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, r2);

        r4 = specialinvoke r0.<androidx.room.util.FtsTableInfo$Companion: java.util.Set readOptions(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)>(r1, r2);

        $r5 = new androidx.room.util.FtsTableInfo;

        specialinvoke $r5.<androidx.room.util.FtsTableInfo: void <init>(java.lang.String,java.util.Set,java.util.Set)>(r2, r3, r4);

        return $r5;
    }

    private final java.util.Set readColumns(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.room.util.FtsTableInfo$Companion r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        java.lang.String r2, $r10, $r12, $r13;
        java.util.Set r3, $r11;
        android.database.Cursor $r5, r18;
        int i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        boolean $z0, $z1;
        java.lang.Throwable $r14, $r15, $r16, r20, r21, r22, r25;
        java.io.Closeable r17;
        kotlin.Unit r19, r24;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <kotlin.collections.SetsKt: java.util.Set createSetBuilder()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRAGMA table_info(`");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`)");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r10);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 <= 15 goto label09;

        r17 = (java.io.Closeable) $r5;

     label01:
        r18 = (android.database.Cursor) r17;

        $i3 = interfaceinvoke r18.<android.database.Cursor: int getColumnCount()>();

        if $i3 <= 0 goto label03;

        i4 = interfaceinvoke r18.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

     label02:
        $z1 = interfaceinvoke r18.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label03;

        $r13 = interfaceinvoke r18.<android.database.Cursor: java.lang.String getString(int)>(i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "cursor.getString(nameIndex)");

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r13);

        goto label02;

     label03:
        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label04:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r17, null);

        goto label08;

     label05:
        $r14 := @caughtexception;

        r20 = $r14;

        r21 = r20;

        throw r20;

     label06:
        $r15 := @caughtexception;

        r22 = $r15;

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r17, r21);

        throw r22;

     label08:
        goto label15;

     label09:
        $i2 = interfaceinvoke $r5.<android.database.Cursor: int getColumnCount()>();

        if $i2 <= 0 goto label11;

        i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

     label10:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label11;

        $r12 = interfaceinvoke $r5.<android.database.Cursor: java.lang.String getString(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "cursor.getString(nameIndex)");

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r12);

        goto label10;

     label11:
        r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label12:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        goto label15;

     label13:
        $r16 := @caughtexception;

        r25 = $r16;

     label14:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw r25;

     label15:
        $r11 = staticinvoke <kotlin.collections.SetsKt: java.util.Set build(java.util.Set)>(r3);

        return $r11;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private final java.util.Set readOptions(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.room.util.FtsTableInfo$Companion r0;
        androidx.sqlite.db.SupportSQLiteDatabase r1;
        java.lang.String r2, r3, $r9, $r16, r17, $r18, $r23, r24;
        android.database.Cursor $r4, r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.Set $r10;
        java.lang.Throwable $r11, $r12, $r13, r19, r20, r21, r25;
        java.io.Closeable r14;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM sqlite_master WHERE `name` = \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteDatabase: android.database.Cursor query(java.lang.String)>($r9);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 15 goto label09;

        r14 = (java.io.Closeable) $r4;

     label01:
        r15 = (android.database.Cursor) r14;

        $z1 = interfaceinvoke r15.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label02;

        $i2 = interfaceinvoke r15.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("sql");

        $r16 = interfaceinvoke r15.<android.database.Cursor: java.lang.String getString(int)>($i2);

        goto label03;

     label02:
        $r16 = "";

     label03:
        r17 = $r16;

     label04:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r14, null);

        $r18 = r17;

        goto label08;

     label05:
        $r11 := @caughtexception;

        r19 = $r11;

        r20 = r19;

        throw r19;

     label06:
        $r13 := @caughtexception;

        r21 = $r13;

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r14, r20);

        throw r21;

     label08:
        goto label15;

     label09:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label10;

        $i1 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("sql");

        $r23 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i1);

        goto label11;

     label10:
        $r23 = "";

     label11:
        r24 = $r23;

     label12:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        $r18 = r24;

        goto label15;

     label13:
        $r12 := @caughtexception;

        r25 = $r12;

     label14:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        throw r25;

     label15:
        r3 = $r18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "sql");

        $r10 = virtualinvoke r0.<androidx.room.util.FtsTableInfo$Companion: java.util.Set parseOptions(java.lang.String)>(r3);

        return $r10;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public final java.util.Set parseOptions(java.lang.String)
    {
        androidx.room.util.FtsTableInfo$Companion r0;
        java.lang.String r1, r2, $r8, $r11, $r14, $r18, $r20, r37, r39, r40;
        java.util.List r3, $r16;
        java.util.ArrayDeque r4, $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i14, i15, $i16, i19, i21, i22, $i23, $i25, $i26;
        java.lang.CharSequence $r5, $r6, $r7, $r12, $r13, $r19, $r30, $r32;
        java.util.ArrayList $r9, $r15;
        java.lang.Iterable $r17, $r33;
        boolean $z3, $z4, $z6, $z7, $z8, $z9, z10, $z13, $z14, z17, $z18, z19, z20, z21, $z22, z25, $z26;
        java.lang.Object $r21, $r25, $r36;
        java.lang.Character $r22, $r24, $r26, $r28;
        char $c12, $c13, c17, c18, c20, c24;
        java.util.Set $r29, $r41;
        java.util.Collection r34;
        java.util.Iterator r35;
        java.lang.String[] $r38;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "createStatement");

        $r5 = (java.lang.CharSequence) r1;

        $i1 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i1 != 0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        if $z9 == 0 goto label03;

        $r29 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r29;

     label03:
        $r6 = (java.lang.CharSequence) r1;

        $i2 = staticinvoke <kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r6, 40, 0, 0, 6, null);

        $i3 = $i2 + 1;

        $r7 = (java.lang.CharSequence) r1;

        $i4 = staticinvoke <kotlin.text.StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)>($r7, 41, 0, 0, 6, null);

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        r2 = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        $r10 = new java.util.ArrayDeque;

        specialinvoke $r10.<java.util.ArrayDeque: void <init>()>();

        r4 = $r10;

        z10 = 0;

        i14 = -1;

        $r30 = (java.lang.CharSequence) r2;

        i15 = 0;

        $i16 = 0;

     label04:
        $i5 = interfaceinvoke $r30.<java.lang.CharSequence: int length()>();

        if $i16 >= $i5 goto label27;

        c17 = interfaceinvoke $r30.<java.lang.CharSequence: char charAt(int)>($i16);

        $i7 = i15;

        i15 = i15 + 1;

        c18 = c17;

        i19 = $i7;

        c20 = c18;

        if c20 != 39 goto label05;

        $z13 = 1;

        goto label07;

     label05:
        if c20 != 34 goto label06;

        $z13 = 1;

        goto label07;

     label06:
        $z13 = 0;

     label07:
        if $z13 == 0 goto label08;

        $z14 = 1;

        goto label10;

     label08:
        if c20 != 96 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        if $z14 == 0 goto label13;

        $z8 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z8 == 0 goto label11;

        $r28 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c18);

        virtualinvoke r4.<java.util.ArrayDeque: void push(java.lang.Object)>($r28);

        goto label26;

     label11:
        $r25 = virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object peek()>();

        $r26 = (java.lang.Character) $r25;

        if $r26 != null goto label12;

        goto label26;

     label12:
        $c13 = virtualinvoke $r26.<java.lang.Character: char charValue()>();

        if $c13 != c18 goto label26;

        virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object pop()>();

        goto label26;

     label13:
        if c20 != 91 goto label14;

        $z7 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z7 == 0 goto label26;

        $r24 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c18);

        virtualinvoke r4.<java.util.ArrayDeque: void push(java.lang.Object)>($r24);

        goto label26;

     label14:
        if c20 != 93 goto label16;

        $z6 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z6 != 0 goto label26;

        $r21 = virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object peek()>();

        $r22 = (java.lang.Character) $r21;

        if $r22 != null goto label15;

        goto label26;

     label15:
        $c12 = virtualinvoke $r22.<java.lang.Character: char charValue()>();

        if $c12 != 91 goto label26;

        virtualinvoke r4.<java.util.ArrayDeque: java.lang.Object pop()>();

        goto label26;

     label16:
        if c20 != 44 goto label26;

        $z4 = virtualinvoke r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z4 == 0 goto label26;

        $i8 = i14 + 1;

        $r18 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i8, i19);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r32 = (java.lang.CharSequence) $r18;

        i21 = 0;

        $i9 = interfaceinvoke $r32.<java.lang.CharSequence: int length()>();

        i22 = $i9 - 1;

        z17 = 0;

     label17:
        if i21 > i22 goto label25;

        if z17 != 0 goto label18;

        $i23 = i21;

        goto label19;

     label18:
        $i23 = i22;

     label19:
        i0 = $i23;

        c24 = interfaceinvoke $r32.<java.lang.CharSequence: char charAt(int)>(i0);

        $i11 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>(c24, 32);

        if $i11 > 0 goto label20;

        $z18 = 1;

        goto label21;

     label20:
        $z18 = 0;

     label21:
        z19 = $z18;

        if z17 != 0 goto label23;

        if z19 != 0 goto label22;

        z17 = 1;

        goto label17;

     label22:
        i21 = i21 + 1;

        goto label17;

     label23:
        if z19 != 0 goto label24;

        goto label25;

     label24:
        i22 = i22 + -1;

        goto label17;

     label25:
        $i10 = i22 + 1;

        $r19 = interfaceinvoke $r32.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i21, $i10);

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r20);

        i14 = i19;

     label26:
        $i16 = $i16 + 1;

        goto label04;

     label27:
        $i6 = i14 + 1;

        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "this as java.lang.String).substring(startIndex)");

        $r12 = (java.lang.CharSequence) $r11;

        $r13 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14);

        z20 = 0;

        $r33 = (java.lang.Iterable) r3;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r34 = (java.util.Collection) $r15;

        z21 = 0;

        r35 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label28:
        $z22 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label33;

        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.lang.String) $r36;

        $r38 = staticinvoke <androidx.room.util.FtsTableInfo: java.lang.String[] access$getFTS_OPTIONS$cp()>();

        $i25 = 0;

        $i26 = lengthof $r38;

     label29:
        if $i25 >= $i26 goto label31;

        r39 = $r38[$i25];

        r40 = r39;

        z25 = 0;

        $z3 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r37, r40, 0, 2, null);

        if $z3 == 0 goto label30;

        $z26 = 1;

        goto label32;

     label30:
        $i25 = $i25 + 1;

        goto label29;

     label31:
        $z26 = 0;

     label32:
        if $z26 == 0 goto label28;

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>($r36);

        goto label28;

     label33:
        $r16 = (java.util.List) r34;

        $r17 = (java.lang.Iterable) $r16;

        $r41 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r17);

        return $r41;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.util.FtsTableInfo$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.util.FtsTableInfo$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.util.FtsTableInfo$Companion: void <init>()>();

        return;
    }

