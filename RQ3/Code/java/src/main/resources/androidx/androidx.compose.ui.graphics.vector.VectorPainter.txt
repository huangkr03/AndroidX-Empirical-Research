androidx.compose.ui.graphics.vector.VectorPainter
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState size$delegate>
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState autoMirror$delegate>
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.Composition composition>
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState isDirty$delegate>
<androidx.compose.ui.graphics.vector.VectorPainter: float currentAlpha>
<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.ColorFilter currentColorFilter>
<androidx.compose.ui.graphics.vector.VectorPainter: int $stable>
    public void <init>()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0, r2;
        androidx.compose.ui.graphics.vector.VectorComponent r1, $r8;
        androidx.compose.ui.geometry.Size$Companion $r3;
        long $l0;
        androidx.compose.ui.geometry.Size $r4;
        androidx.compose.runtime.MutableState $r5, $r7, $r12;
        java.lang.Boolean $r6, $r11;
        androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1 $r9;
        kotlin.jvm.functions.Function0 $r10;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        specialinvoke r0.<androidx.compose.ui.graphics.painter.Painter: void <init>()>();

        $r3 = <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size$Companion Companion>;

        $l0 = virtualinvoke $r3.<androidx.compose.ui.geometry.Size$Companion: long getZero-NH-jbRc()>();

        $r4 = staticinvoke <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size box-impl(long)>($l0);

        $r5 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r4, null, 2, null);

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState size$delegate> = $r5;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r6, null, 2, null);

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState autoMirror$delegate> = $r7;

        $r8 = new androidx.compose.ui.graphics.vector.VectorComponent;

        specialinvoke $r8.<androidx.compose.ui.graphics.vector.VectorComponent: void <init>()>();

        r1 = $r8;

        r2 = r0;

        $r9 = new androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1;

        specialinvoke $r9.<androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1: void <init>(androidx.compose.ui.graphics.vector.VectorPainter)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        virtualinvoke r1.<androidx.compose.ui.graphics.vector.VectorComponent: void setInvalidateCallback$ui_release(kotlin.jvm.functions.Function0)>($r10);

        r2.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector> = r1;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r12 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r11, null, 2, null);

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState isDirty$delegate> = $r12;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: float currentAlpha> = 1.0F;

        return;
    }

    public final long getSize-NH-jbRc$ui_release()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.ui.geometry.Size $r4;
        long $l0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState size$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.geometry.Size) $r3;

        $l0 = virtualinvoke $r4.<androidx.compose.ui.geometry.Size: long unbox-impl()>();

        return $l0;
    }

    public final void setSize-uvyYCjk$ui_release(long)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        long l0;
        androidx.compose.runtime.MutableState $r1;
        androidx.compose.ui.geometry.Size r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState size$delegate>;

        r2 = staticinvoke <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final boolean getAutoMirror$ui_release()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState autoMirror$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final void setAutoMirror$ui_release(boolean)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState autoMirror$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final androidx.compose.ui.graphics.ColorFilter getIntrinsicColorFilter$ui_release()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.ui.graphics.vector.VectorComponent $r1;
        androidx.compose.ui.graphics.ColorFilter $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.ColorFilter getIntrinsicColorFilter$ui_release()>();

        return $r2;
    }

    public final void setIntrinsicColorFilter$ui_release(androidx.compose.ui.graphics.ColorFilter)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.ui.graphics.ColorFilter r1;
        androidx.compose.ui.graphics.vector.VectorComponent $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.compose.ui.graphics.ColorFilter;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.vector.VectorComponent: void setIntrinsicColorFilter$ui_release(androidx.compose.ui.graphics.ColorFilter)>(r1);

        return;
    }

    private final androidx.compose.runtime.Composition composeVector(androidx.compose.runtime.CompositionContext, kotlin.jvm.functions.Function4)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.runtime.CompositionContext r1;
        kotlin.jvm.functions.Function4 r2;
        androidx.compose.runtime.Composition r3, r4, $r13;
        androidx.compose.ui.graphics.vector.VectorApplier $r5;
        androidx.compose.ui.graphics.vector.VectorComponent $r6;
        androidx.compose.ui.graphics.vector.GroupComponent $r7;
        androidx.compose.ui.graphics.vector.VNode $r8;
        androidx.compose.runtime.Applier $r9;
        androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1 $r10;
        androidx.compose.runtime.internal.ComposableLambda $r11;
        kotlin.jvm.functions.Function2 $r12;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        r2 := @parameter1: kotlin.jvm.functions.Function4;

        r3 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.Composition composition>;

        if r3 == null goto label1;

        $z0 = interfaceinvoke r3.<androidx.compose.runtime.Composition: boolean isDisposed()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = new androidx.compose.ui.graphics.vector.VectorApplier;

        $r6 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent getRoot()>();

        $r8 = (androidx.compose.ui.graphics.vector.VNode) $r7;

        specialinvoke $r5.<androidx.compose.ui.graphics.vector.VectorApplier: void <init>(androidx.compose.ui.graphics.vector.VNode)>($r8);

        $r9 = (androidx.compose.runtime.Applier) $r5;

        $r13 = staticinvoke <androidx.compose.runtime.CompositionKt: androidx.compose.runtime.Composition Composition(androidx.compose.runtime.Applier,androidx.compose.runtime.CompositionContext)>($r9, r1);

        goto label3;

     label2:
        $r13 = r3;

     label3:
        r4 = $r13;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.Composition composition> = r4;

        $r10 = new androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1;

        specialinvoke $r10.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: void <init>(kotlin.jvm.functions.Function4,androidx.compose.ui.graphics.vector.VectorPainter)>(r2, r0);

        $r11 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: androidx.compose.runtime.internal.ComposableLambda composableLambdaInstance(int,boolean,java.lang.Object)>(-1916507005, 1, $r10);

        $r12 = (kotlin.jvm.functions.Function2) $r11;

        interfaceinvoke r4.<androidx.compose.runtime.Composition: void setContent(kotlin.jvm.functions.Function2)>($r12);

        return r4;
    }

    private final boolean isDirty()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState isDirty$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setDirty(boolean)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.MutableState isDirty$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final void RenderVector$ui_release(java.lang.String, float, float, kotlin.jvm.functions.Function4, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        java.lang.String r1;
        float f0, f1;
        kotlin.jvm.functions.Function4 r2;
        int $i0;
        boolean $z1, $z2;
        androidx.compose.runtime.CompositionContext $r4;
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2 $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.compose.runtime.ScopeUpdateScope $r7;
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3 $r8;
        kotlin.jvm.functions.Function2 $r9;
        androidx.compose.runtime.Composer $r10, $r11;
        androidx.compose.ui.graphics.vector.VectorComponent r12;
        androidx.compose.runtime.Composition r13;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: kotlin.jvm.functions.Function4;

        $r10 := @parameter4: androidx.compose.runtime.Composer;

        $i0 := @parameter5: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r11 = interfaceinvoke $r10.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(1264894527);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r11, "C(RenderVector)P(1,3,2)232@8731L28,236@8800L117:VectorPainter.kt#huu6hf");

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(1264894527, $i0, -1, "androidx.compose.ui.graphics.vector.VectorPainter.RenderVector (VectorPainter.kt:220)");

     label1:
        r12 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        virtualinvoke r12.<androidx.compose.ui.graphics.vector.VectorComponent: void setName(java.lang.String)>(r1);

        virtualinvoke r12.<androidx.compose.ui.graphics.vector.VectorComponent: void setViewportWidth(float)>(f0);

        virtualinvoke r12.<androidx.compose.ui.graphics.vector.VectorComponent: void setViewportHeight(float)>(f1);

        $r4 = staticinvoke <androidx.compose.runtime.ComposablesKt: androidx.compose.runtime.CompositionContext rememberCompositionContext(androidx.compose.runtime.Composer,int)>($r11, 0);

        r13 = specialinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.runtime.Composition composeVector(androidx.compose.runtime.CompositionContext,kotlin.jvm.functions.Function4)>($r4, r2);

        $r5 = new androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2;

        specialinvoke $r5.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2: void <init>(androidx.compose.runtime.Composition)>(r13);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        staticinvoke <androidx.compose.runtime.EffectsKt: void DisposableEffect(java.lang.Object,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)>(r13, $r6, $r11, 8);

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label2:
        $r7 = interfaceinvoke $r11.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r7 != null goto label3;

        goto label4;

     label3:
        $r8 = new androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3;

        specialinvoke $r8.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: void <init>(androidx.compose.ui.graphics.vector.VectorPainter,java.lang.String,float,float,kotlin.jvm.functions.Function4,int)>(r0, r1, f0, f1, r2, $i0);

        $r9 = (kotlin.jvm.functions.Function2) $r8;

        interfaceinvoke $r7.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r9);

     label4:
        return;
    }

    public long getIntrinsicSize-NH-jbRc()
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        long $l0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $l0 = virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter: long getSize-NH-jbRc$ui_release()>();

        return $l0;
    }

    protected void onDraw(androidx.compose.ui.graphics.drawscope.DrawScope)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        androidx.compose.ui.graphics.vector.VectorComponent $r2;
        androidx.compose.ui.graphics.ColorFilter r3, $r12;
        float f0, f1, $f2, $f3;
        long l0, l1;
        androidx.compose.ui.graphics.drawscope.DrawContext $r6;
        androidx.compose.ui.graphics.drawscope.DrawTransform $r7;
        boolean $z7, $z8;
        androidx.compose.ui.unit.LayoutDirection $r8, $r9;
        androidx.compose.ui.graphics.Canvas $r10, $r11;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        $r12 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.ColorFilter currentColorFilter>;

        if $r12 != null goto label1;

        $r12 = virtualinvoke $r2.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.ColorFilter getIntrinsicColorFilter$ui_release()>();

     label1:
        r3 = $r12;

        $z7 = virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter: boolean getAutoMirror$ui_release()>();

        if $z7 == 0 goto label2;

        $r8 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        $r9 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Rtl>;

        if $r8 != $r9 goto label2;

        f0 = -1.0F;

        f1 = 1.0F;

        l0 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getCenter-F1C5BW0()>();

        $r6 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.graphics.drawscope.DrawContext getDrawContext()>();

        l1 = interfaceinvoke $r6.<androidx.compose.ui.graphics.drawscope.DrawContext: long getSize-NH-jbRc()>();

        $r10 = interfaceinvoke $r6.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r10.<androidx.compose.ui.graphics.Canvas: void save()>();

        $r7 = interfaceinvoke $r6.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r7.<androidx.compose.ui.graphics.drawscope.DrawTransform: void scale-0AR0LA0(float,float,long)>(f0, f1, l0);

        $f3 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: float currentAlpha>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.vector.VectorComponent: void draw(androidx.compose.ui.graphics.drawscope.DrawScope,float,androidx.compose.ui.graphics.ColorFilter)>($r1, $f3, r3);

        $r11 = interfaceinvoke $r6.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r11.<androidx.compose.ui.graphics.Canvas: void restore()>();

        interfaceinvoke $r6.<androidx.compose.ui.graphics.drawscope.DrawContext: void setSize-uvyYCjk(long)>(l1);

        goto label3;

     label2:
        $f2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter: float currentAlpha>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.vector.VectorComponent: void draw(androidx.compose.ui.graphics.drawscope.DrawScope,float,androidx.compose.ui.graphics.ColorFilter)>($r1, $f2, r3);

     label3:
        $z8 = specialinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter: boolean isDirty()>();

        if $z8 == 0 goto label4;

        specialinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter: void setDirty(boolean)>(0);

     label4:
        return;
    }

    protected boolean applyAlpha(float)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        float f0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        f0 := @parameter0: float;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: float currentAlpha> = f0;

        return 1;
    }

    protected boolean applyColorFilter(androidx.compose.ui.graphics.ColorFilter)
    {
        androidx.compose.ui.graphics.vector.VectorPainter r0;
        androidx.compose.ui.graphics.ColorFilter r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.compose.ui.graphics.ColorFilter;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.ColorFilter currentColorFilter> = r1;

        return 1;
    }

    public static final androidx.compose.ui.graphics.vector.VectorComponent access$getVector$p(androidx.compose.ui.graphics.vector.VectorPainter)
    {
        androidx.compose.ui.graphics.vector.VectorPainter $r0;
        androidx.compose.ui.graphics.vector.VectorComponent $r1;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.VectorPainter;

        $r1 = $r0.<androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent vector>;

        return $r1;
    }

    public static final void access$setDirty(androidx.compose.ui.graphics.vector.VectorPainter, boolean)
    {
        androidx.compose.ui.graphics.vector.VectorPainter $r0;
        boolean z0;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.VectorPainter;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.compose.ui.graphics.vector.VectorPainter: void setDirty(boolean)>(z0);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.graphics.vector.VectorPainter: int $stable> = 8;

        return;
    }

androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1
<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: kotlin.jvm.functions.Function4 $composable>
<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: androidx.compose.ui.graphics.vector.VectorPainter this$0>
    void <init>(kotlin.jvm.functions.Function4, androidx.compose.ui.graphics.vector.VectorPainter)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1 r0;
        kotlin.jvm.functions.Function4 $r1;
        androidx.compose.ui.graphics.vector.VectorPainter $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1;

        $r1 := @parameter0: kotlin.jvm.functions.Function4;

        $r2 := @parameter1: androidx.compose.ui.graphics.vector.VectorPainter;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: kotlin.jvm.functions.Function4 $composable> = $r1;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: androidx.compose.ui.graphics.vector.VectorPainter this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.graphics.vector.VectorPainter $r2, $r6;
        kotlin.jvm.functions.Function4 $r3;
        androidx.compose.ui.graphics.vector.VectorComponent $r4, $r7;
        float $f0, $f1;
        java.lang.Float $r5, $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C212@8157L55:VectorPainter.kt#huu6hf");

        $i1 = $i0 & 11;

        if $i1 != 2 goto label1;

        $z2 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z2 != 0 goto label3;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1916507005, $i0, -1, "androidx.compose.ui.graphics.vector.VectorPainter.composeVector.<anonymous> (VectorPainter.kt:211)");

     label2:
        $r3 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: kotlin.jvm.functions.Function4 $composable>;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: androidx.compose.ui.graphics.vector.VectorPainter this$0>;

        $r4 = staticinvoke <androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent access$getVector$p(androidx.compose.ui.graphics.vector.VectorPainter)>($r2);

        $f0 = virtualinvoke $r4.<androidx.compose.ui.graphics.vector.VectorComponent: float getViewportWidth()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: androidx.compose.ui.graphics.vector.VectorPainter this$0>;

        $r7 = staticinvoke <androidx.compose.ui.graphics.vector.VectorPainter: androidx.compose.ui.graphics.vector.VectorComponent access$getVector$p(androidx.compose.ui.graphics.vector.VectorPainter)>($r6);

        $f1 = virtualinvoke $r7.<androidx.compose.ui.graphics.vector.VectorComponent: float getViewportHeight()>();

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r3.<kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r8, $r1, $r9);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label4;

     label3:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label4:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter$composeVector$1: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1: androidx.compose.runtime.Composition $composition$inlined>
    public void <init>(androidx.compose.runtime.Composition)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1 r0;
        androidx.compose.runtime.Composition r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1;

        r1 := @parameter0: androidx.compose.runtime.Composition;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1: androidx.compose.runtime.Composition $composition$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dispose()
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1 r0;
        androidx.compose.runtime.Composition $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1: androidx.compose.runtime.Composition $composition$inlined>;

        interfaceinvoke $r1.<androidx.compose.runtime.Composition: void dispose()>();

        return;
    }

androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2: androidx.compose.runtime.Composition $composition>
    void <init>(androidx.compose.runtime.Composition)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2 r0;
        androidx.compose.runtime.Composition $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2;

        $r1 := @parameter0: androidx.compose.runtime.Composition;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2: androidx.compose.runtime.Composition $composition> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2 r0;
        androidx.compose.runtime.DisposableEffectScope $r1, r2;
        androidx.compose.runtime.Composition r3;
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1 $r4;
        androidx.compose.runtime.DisposableEffectResult $r5;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2;

        $r1 := @parameter0: androidx.compose.runtime.DisposableEffectScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$DisposableEffect");

        r2 = $r1;

        r3 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2: androidx.compose.runtime.Composition $composition>;

        $r4 = new androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1;

        specialinvoke $r4.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2$invoke$$inlined$onDispose$1: void <init>(androidx.compose.runtime.Composition)>(r3);

        $r5 = (androidx.compose.runtime.DisposableEffectResult) $r4;

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2 r0;
        java.lang.Object r1;
        androidx.compose.runtime.DisposableEffectScope $r2;
        androidx.compose.runtime.DisposableEffectResult $r3;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.runtime.DisposableEffectScope) r1;

        $r3 = virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$2: androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)>($r2);

        return $r3;
    }

androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: androidx.compose.ui.graphics.vector.VectorPainter $tmp0_rcvr>
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: java.lang.String $name>
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportWidth>
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportHeight>
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: kotlin.jvm.functions.Function4 $content>
<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: int $$changed>
    void <init>(androidx.compose.ui.graphics.vector.VectorPainter, java.lang.String, float, float, kotlin.jvm.functions.Function4, int)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3 r0;
        androidx.compose.ui.graphics.vector.VectorPainter $r1;
        java.lang.String $r2;
        float $f0, $f1;
        kotlin.jvm.functions.Function4 $r3;
        int $i0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3;

        $r1 := @parameter0: androidx.compose.ui.graphics.vector.VectorPainter;

        $r2 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r3 := @parameter4: kotlin.jvm.functions.Function4;

        $i0 := @parameter5: int;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: androidx.compose.ui.graphics.vector.VectorPainter $tmp0_rcvr> = $r1;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: java.lang.String $name> = $r2;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportWidth> = $f0;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportHeight> = $f1;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: kotlin.jvm.functions.Function4 $content> = $r3;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function4 $r2;
        float $f0, $f1;
        java.lang.String $r3;
        androidx.compose.ui.graphics.vector.VectorPainter $r4;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r4 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: androidx.compose.ui.graphics.vector.VectorPainter $tmp0_rcvr>;

        $r3 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: java.lang.String $name>;

        $f1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportWidth>;

        $f0 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: float $viewportHeight>;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: kotlin.jvm.functions.Function4 $content>;

        $i1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r4.<androidx.compose.ui.graphics.vector.VectorPainter: void RenderVector$ui_release(java.lang.String,float,float,kotlin.jvm.functions.Function4,androidx.compose.runtime.Composer,int)>($r3, $f1, $f0, $r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter$RenderVector$3: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1
<androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1: androidx.compose.ui.graphics.vector.VectorPainter this$0>
    void <init>(androidx.compose.ui.graphics.vector.VectorPainter)
    {
        androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1 r0;
        androidx.compose.ui.graphics.vector.VectorPainter $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1;

        $r1 := @parameter0: androidx.compose.ui.graphics.vector.VectorPainter;

        r0.<androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1: androidx.compose.ui.graphics.vector.VectorPainter this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1 r0;
        androidx.compose.ui.graphics.vector.VectorPainter $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1: androidx.compose.ui.graphics.vector.VectorPainter this$0>;

        staticinvoke <androidx.compose.ui.graphics.vector.VectorPainter: void access$setDirty(androidx.compose.ui.graphics.vector.VectorPainter,boolean)>($r1, 1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1;

        virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorPainter$vector$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

