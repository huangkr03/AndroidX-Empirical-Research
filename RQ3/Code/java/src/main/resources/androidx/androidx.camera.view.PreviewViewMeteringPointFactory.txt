androidx.camera.view.PreviewViewMeteringPointFactory
<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.PointF INVALID_POINT>
<androidx.camera.view.PreviewViewMeteringPointFactory: androidx.camera.view.PreviewTransformation mPreviewTransformation>
<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.Matrix mMatrix>
    void <init>(androidx.camera.view.PreviewTransformation)
    {
        androidx.camera.view.PreviewViewMeteringPointFactory r0;
        androidx.camera.view.PreviewTransformation r1;

        r0 := @this: androidx.camera.view.PreviewViewMeteringPointFactory;

        r1 := @parameter0: androidx.camera.view.PreviewTransformation;

        specialinvoke r0.<androidx.camera.core.MeteringPointFactory: void <init>()>();

        r0.<androidx.camera.view.PreviewViewMeteringPointFactory: androidx.camera.view.PreviewTransformation mPreviewTransformation> = r1;

        return;
    }

    protected android.graphics.PointF convertPoint(float, float)
    {
        androidx.camera.view.PreviewViewMeteringPointFactory r0, r2;
        float f0, f1, $f2, $f3;
        float[] r1, $r4;
        java.lang.Throwable r3, $r10;
        android.graphics.Matrix $r6, $r7;
        android.graphics.PointF $r8, $r9;

        r0 := @this: androidx.camera.view.PreviewViewMeteringPointFactory;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r4 = newarray (float)[2];

        $r4[0] = f0;

        $r4[1] = f1;

        r1 = $r4;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.Matrix mMatrix>;

        if $r6 != null goto label3;

        $r9 = <androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.PointF INVALID_POINT>;

        exitmonitor r2;

     label2:
        return $r9;

     label3:
        $r7 = r0.<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.Matrix mMatrix>;

        virtualinvoke $r7.<android.graphics.Matrix: void mapPoints(float[])>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r8 = new android.graphics.PointF;

        $f3 = r1[0];

        $f2 = r1[1];

        specialinvoke $r8.<android.graphics.PointF: void <init>(float,float)>($f3, $f2);

        return $r8;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void recalculate(android.util.Size, int)
    {
        androidx.camera.view.PreviewViewMeteringPointFactory r0, r2;
        android.util.Size r1;
        int i0, $i1, $i2;
        java.lang.Throwable r3, $r7;
        androidx.camera.view.PreviewTransformation $r5;
        android.graphics.Matrix $r6;

        r0 := @this: androidx.camera.view.PreviewViewMeteringPointFactory;

        r1 := @parameter0: android.util.Size;

        i0 := @parameter1: int;

        staticinvoke <androidx.camera.core.impl.utils.Threads: void checkMainThread()>();

        r2 = r0;

        entermonitor r0;

     label1:
        $i1 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        if $i1 == 0 goto label2;

        $i2 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        if $i2 != 0 goto label4;

     label2:
        r0.<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.Matrix mMatrix> = null;

        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 = r0.<androidx.camera.view.PreviewViewMeteringPointFactory: androidx.camera.view.PreviewTransformation mPreviewTransformation>;

        $r6 = virtualinvoke $r5.<androidx.camera.view.PreviewTransformation: android.graphics.Matrix getPreviewViewToNormalizedSurfaceMatrix(android.util.Size,int)>(r1, i0);

        r0.<androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.Matrix mMatrix> = $r6;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        android.graphics.PointF $r0;

        $r0 = new android.graphics.PointF;

        specialinvoke $r0.<android.graphics.PointF: void <init>(float,float)>(2.0F, 2.0F);

        <androidx.camera.view.PreviewViewMeteringPointFactory: android.graphics.PointF INVALID_POINT> = $r0;

        return;
    }

