androidx.media3.session.PlayerWrapper
<androidx.media3.session.PlayerWrapper: int STATUS_CODE_SUCCESS_COMPAT>
<androidx.media3.session.PlayerWrapper: int legacyStatusCode>
<androidx.media3.session.PlayerWrapper: java.lang.String legacyErrorMessage>
<androidx.media3.session.PlayerWrapper: android.os.Bundle legacyErrorExtras>
<androidx.media3.session.PlayerWrapper: com.google.common.collect.ImmutableList customLayout>
    public void <init>(androidx.media3.common.Player)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Player r1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.Player;

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void <init>(androidx.media3.common.Player)>(r1);

        r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode> = -1;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r0.<androidx.media3.session.PlayerWrapper: com.google.common.collect.ImmutableList customLayout> = $r2;

        return;
    }

    public void setLegacyErrorStatus(int, java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        if i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode> = i0;

        r0.<androidx.media3.session.PlayerWrapper: java.lang.String legacyErrorMessage> = r1;

        r0.<androidx.media3.session.PlayerWrapper: android.os.Bundle legacyErrorExtras> = r2;

        return;
    }

    public int getLegacyStatusCode()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $i0 = r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode>;

        return $i0;
    }

    public void setCustomLayout(com.google.common.collect.ImmutableList)
    {
        androidx.media3.session.PlayerWrapper r0;
        com.google.common.collect.ImmutableList r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: com.google.common.collect.ImmutableList;

        r0.<androidx.media3.session.PlayerWrapper: com.google.common.collect.ImmutableList customLayout> = r1;

        return;
    }

    public void clearLegacyErrorStatus()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode> = -1;

        r0.<androidx.media3.session.PlayerWrapper: java.lang.String legacyErrorMessage> = null;

        r0.<androidx.media3.session.PlayerWrapper: android.os.Bundle legacyErrorExtras> = null;

        return;
    }

    public void addListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void addListener(androidx.media3.common.Player$Listener)>(r1);

        return;
    }

    public void removeListener(androidx.media3.common.Player$Listener)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Player$Listener r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.Player$Listener;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void removeListener(androidx.media3.common.Player$Listener)>(r1);

        return;
    }

    public androidx.media3.common.PlaybackException getPlayerError()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.PlaybackException $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.PlaybackException getPlayerError()>();

        return $r1;
    }

    public void play()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void play()>();

        return;
    }

    public void playIfCommandAvailable()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void play()>();

     label1:
        return;
    }

    public void pause()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void pause()>();

        return;
    }

    public void prepare()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void prepare()>();

        return;
    }

    public void prepareIfCommandAvailable()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(2);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void prepare()>();

     label1:
        return;
    }

    public void stop()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void stop()>();

        return;
    }

    public void release()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void release()>();

        return;
    }

    public void seekToDefaultPosition(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToDefaultPosition(int)>(i0);

        return;
    }

    public void seekToDefaultPosition()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToDefaultPosition()>();

        return;
    }

    public void seekToDefaultPositionIfCommandAvailable()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void seekToDefaultPosition()>();

     label1:
        return;
    }

    public void seekTo(long)
    {
        androidx.media3.session.PlayerWrapper r0;
        long l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekTo(long)>(l0);

        return;
    }

    public void seekTo(int, long)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekTo(int,long)>(i0, l1);

        return;
    }

    public long getSeekBackIncrement()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getSeekBackIncrement()>();

        return $l0;
    }

    public void seekBack()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekBack()>();

        return;
    }

    public long getSeekForwardIncrement()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getSeekForwardIncrement()>();

        return $l0;
    }

    public void seekForward()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekForward()>();

        return;
    }

    public void setPlaybackParameters(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.PlaybackParameters r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        return;
    }

    public void setPlaybackSpeed(float)
    {
        androidx.media3.session.PlayerWrapper r0;
        float f0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setPlaybackSpeed(float)>(f0);

        return;
    }

    public long getCurrentPosition()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getCurrentPosition()>();

        return $l0;
    }

    public long getDuration()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getDuration()>();

        return $l0;
    }

    public long getDurationWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getDuration()>();

        goto label2;

     label1:
        $l0 = -9223372036854775807L;

     label2:
        return $l0;
    }

    public long getBufferedPosition()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getBufferedPosition()>();

        return $l0;
    }

    public int getBufferedPercentage()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getBufferedPercentage()>();

        return $i0;
    }

    public long getTotalBufferedDuration()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getTotalBufferedDuration()>();

        return $l0;
    }

    public long getCurrentLiveOffset()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getCurrentLiveOffset()>();

        return $l0;
    }

    public long getContentDuration()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getContentDuration()>();

        return $l0;
    }

    public long getContentPosition()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getContentPosition()>();

        return $l0;
    }

    public long getContentBufferedPosition()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getContentBufferedPosition()>();

        return $l0;
    }

    public boolean isPlayingAd()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isPlayingAd()>();

        return $z0;
    }

    public int getCurrentAdGroupIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getCurrentAdGroupIndex()>();

        return $i0;
    }

    public int getCurrentAdIndexInAdGroup()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getCurrentAdIndexInAdGroup()>();

        return $i0;
    }

    public androidx.media3.common.PlaybackParameters getPlaybackParameters()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.PlaybackParameters $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        return $r1;
    }

    public androidx.media3.common.VideoSize getVideoSize()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.VideoSize $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.VideoSize getVideoSize()>();

        return $r1;
    }

    public void clearVideoSurface()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearVideoSurface()>();

        return;
    }

    public void clearVideoSurface(android.view.Surface)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.Surface r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearVideoSurface(android.view.Surface)>(r1);

        return;
    }

    public void setVideoSurface(android.view.Surface)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.Surface r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setVideoSurface(android.view.Surface)>(r1);

        return;
    }

    public void setVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.SurfaceHolder r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setVideoSurfaceHolder(android.view.SurfaceHolder)>(r1);

        return;
    }

    public void clearVideoSurfaceHolder(android.view.SurfaceHolder)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.SurfaceHolder r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearVideoSurfaceHolder(android.view.SurfaceHolder)>(r1);

        return;
    }

    public void setVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.SurfaceView r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setVideoSurfaceView(android.view.SurfaceView)>(r1);

        return;
    }

    public void clearVideoSurfaceView(android.view.SurfaceView)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.SurfaceView r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.SurfaceView;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearVideoSurfaceView(android.view.SurfaceView)>(r1);

        return;
    }

    public void setVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.TextureView r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.TextureView;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setVideoTextureView(android.view.TextureView)>(r1);

        return;
    }

    public void clearVideoTextureView(android.view.TextureView)
    {
        androidx.media3.session.PlayerWrapper r0;
        android.view.TextureView r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: android.view.TextureView;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearVideoTextureView(android.view.TextureView)>(r1);

        return;
    }

    public androidx.media3.common.AudioAttributes getAudioAttributes()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.AudioAttributes $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.AudioAttributes getAudioAttributes()>();

        return $r1;
    }

    public androidx.media3.common.AudioAttributes getAudioAttributesWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.AudioAttributes $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(21);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.AudioAttributes getAudioAttributes()>();

        goto label2;

     label1:
        $r1 = <androidx.media3.common.AudioAttributes: androidx.media3.common.AudioAttributes DEFAULT>;

     label2:
        return $r1;
    }

    public void setMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItem(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, long)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaItem r1;
        long l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItem(androidx.media3.common.MediaItem,long)>(r1, l0);

        return;
    }

    public void setMediaItem(androidx.media3.common.MediaItem, boolean)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaItem r1;
        boolean z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItem(androidx.media3.common.MediaItem,boolean)>(r1, z0);

        return;
    }

    public void setMediaItems(java.util.List)
    {
        androidx.media3.session.PlayerWrapper r0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItems(java.util.List)>(r1);

        return;
    }

    public void setMediaItems(java.util.List, boolean)
    {
        androidx.media3.session.PlayerWrapper r0;
        java.util.List r1;
        boolean z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItems(java.util.List,boolean)>(r1, z0);

        return;
    }

    public void setMediaItems(java.util.List, int, long)
    {
        androidx.media3.session.PlayerWrapper r0;
        java.util.List r1;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setMediaItems(java.util.List,int,long)>(r1, i0, l1);

        return;
    }

    public void addMediaItem(androidx.media3.common.MediaItem)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void addMediaItem(androidx.media3.common.MediaItem)>(r1);

        return;
    }

    public void addMediaItem(int, androidx.media3.common.MediaItem)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void addMediaItem(int,androidx.media3.common.MediaItem)>(i0, r1);

        return;
    }

    public void addMediaItems(java.util.List)
    {
        androidx.media3.session.PlayerWrapper r0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void addMediaItems(java.util.List)>(r1);

        return;
    }

    public void addMediaItems(int, java.util.List)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void addMediaItems(int,java.util.List)>(i0, r1);

        return;
    }

    public void clearMediaItems()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void clearMediaItems()>();

        return;
    }

    public void removeMediaItem(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void removeMediaItem(int)>(i0);

        return;
    }

    public void removeMediaItems(int, int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0, i1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void removeMediaItems(int,int)>(i0, i1);

        return;
    }

    public void moveMediaItem(int, int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0, i1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void moveMediaItem(int,int)>(i0, i1);

        return;
    }

    public void moveMediaItems(int, int, int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0, i1, i2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void moveMediaItems(int,int,int)>(i0, i1, i2);

        return;
    }

    public boolean hasPrevious()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasPrevious()>();

        return $z0;
    }

    public boolean hasNext()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasNext()>();

        return $z0;
    }

    public boolean hasPreviousWindow()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasPreviousWindow()>();

        return $z0;
    }

    public boolean hasNextWindow()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasNextWindow()>();

        return $z0;
    }

    public boolean hasPreviousMediaItem()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasPreviousMediaItem()>();

        return $z0;
    }

    public boolean hasNextMediaItem()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean hasNextMediaItem()>();

        return $z0;
    }

    public void previous()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void previous()>();

        return;
    }

    public void next()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void next()>();

        return;
    }

    public void seekToPreviousWindow()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToPreviousWindow()>();

        return;
    }

    public void seekToNextWindow()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToNextWindow()>();

        return;
    }

    public void seekToPreviousMediaItem()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToPreviousMediaItem()>();

        return;
    }

    public void seekToNextMediaItem()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToNextMediaItem()>();

        return;
    }

    public void setPlaylistMetadata(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaMetadata r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setPlaylistMetadata(androidx.media3.common.MediaMetadata)>(r1);

        return;
    }

    public void setRepeatMode(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setRepeatMode(int)>(i0);

        return;
    }

    public void setShuffleModeEnabled(boolean)
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setShuffleModeEnabled(boolean)>(z0);

        return;
    }

    public androidx.media3.common.Timeline getCurrentTimeline()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Timeline $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.Timeline getCurrentTimeline()>();

        return $r1;
    }

    public androidx.media3.common.Timeline getCurrentTimelineWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0, $z1;
        androidx.media3.common.Timeline $r1, $r3;
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(17);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimeline()>();

        return $r3;

     label1:
        $z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        if $z1 == 0 goto label2;

        $r2 = new androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        specialinvoke $r2.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: void <init>(androidx.media3.session.PlayerWrapper)>(r0);

        return $r2;

     label2:
        $r1 = <androidx.media3.common.Timeline: androidx.media3.common.Timeline EMPTY>;

        return $r1;
    }

    public androidx.media3.common.MediaMetadata getPlaylistMetadata()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaMetadata $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.MediaMetadata getPlaylistMetadata()>();

        return $r1;
    }

    public androidx.media3.common.MediaMetadata getPlaylistMetadataWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.MediaMetadata $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(18);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getPlaylistMetadata()>();

        goto label2;

     label1:
        $r1 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

     label2:
        return $r1;
    }

    public int getRepeatMode()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getRepeatMode()>();

        return $i0;
    }

    public boolean getShuffleModeEnabled()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean getShuffleModeEnabled()>();

        return $z0;
    }

    public androidx.media3.common.MediaItem getCurrentMediaItem()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        return $r1;
    }

    public androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public int getMediaItemCount()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getMediaItemCount()>();

        return $i0;
    }

    public androidx.media3.common.MediaItem getMediaItemAt(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.MediaItem getMediaItemAt(int)>(i0);

        return $r1;
    }

    public int getCurrentWindowIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getCurrentWindowIndex()>();

        return $i0;
    }

    public int getCurrentMediaItemIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getCurrentMediaItemIndex()>();

        return $i0;
    }

    public int getPreviousWindowIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getPreviousWindowIndex()>();

        return $i0;
    }

    public int getPreviousMediaItemIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getPreviousMediaItemIndex()>();

        return $i0;
    }

    public int getNextWindowIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getNextWindowIndex()>();

        return $i0;
    }

    public int getNextMediaItemIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getNextMediaItemIndex()>();

        return $i0;
    }

    public float getVolume()
    {
        androidx.media3.session.PlayerWrapper r0;
        float $f0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $f0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: float getVolume()>();

        return $f0;
    }

    public float getVolumeWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        float $f0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(22);

        if $z0 == 0 goto label1;

        $f0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: float getVolume()>();

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        return $f0;
    }

    public void setVolume(float)
    {
        androidx.media3.session.PlayerWrapper r0;
        float f0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setVolume(float)>(f0);

        return;
    }

    public androidx.media3.common.text.CueGroup getCurrentCues()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.text.CueGroup $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.text.CueGroup getCurrentCues()>();

        return $r1;
    }

    public androidx.media3.common.text.CueGroup getCurrentCuesWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.text.CueGroup $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(28);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.text.CueGroup getCurrentCues()>();

        goto label2;

     label1:
        $r1 = <androidx.media3.common.text.CueGroup: androidx.media3.common.text.CueGroup EMPTY_TIME_ZERO>;

     label2:
        return $r1;
    }

    public androidx.media3.common.DeviceInfo getDeviceInfo()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.DeviceInfo $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        return $r1;
    }

    public int getDeviceVolume()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getDeviceVolume()>();

        return $i0;
    }

    public int getDeviceVolumeWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(23);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getDeviceVolume()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean isDeviceMuted()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isDeviceMuted()>();

        return $z0;
    }

    public boolean isDeviceMutedWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(23);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isDeviceMuted()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setDeviceVolume(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setDeviceVolume(int)>(i0);

        return;
    }

    public void setDeviceVolumeIfCommandAvailable(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(25);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setDeviceVolume(int)>(i0);

     label1:
        return;
    }

    public void increaseDeviceVolume()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void increaseDeviceVolume()>();

        return;
    }

    public void decreaseDeviceVolume()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void decreaseDeviceVolume()>();

        return;
    }

    public void setDeviceMuted(boolean)
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setDeviceMuted(boolean)>(z0);

        return;
    }

    public void setPlayWhenReady(boolean)
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setPlayWhenReady(boolean)>(z0);

        return;
    }

    public boolean getPlayWhenReady()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean getPlayWhenReady()>();

        return $z0;
    }

    public int getPlaybackSuppressionReason()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getPlaybackSuppressionReason()>();

        return $i0;
    }

    public int getPlaybackState()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getPlaybackState()>();

        return $i0;
    }

    public boolean isPlaying()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isPlaying()>();

        return $z0;
    }

    public boolean isLoading()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isLoading()>();

        return $z0;
    }

    public androidx.media3.common.MediaMetadata getMediaMetadata()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.MediaMetadata $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.MediaMetadata getMediaMetadata()>();

        return $r1;
    }

    public androidx.media3.common.MediaMetadata getMediaMetadataWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.MediaMetadata $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(18);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getMediaMetadata()>();

        goto label2;

     label1:
        $r1 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

     label2:
        return $r1;
    }

    public boolean isCommandAvailable(int)
    {
        androidx.media3.session.PlayerWrapper r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isCommandAvailable(int)>(i0);

        return $z0;
    }

    public androidx.media3.common.Player$Commands getAvailableCommands()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Player$Commands $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.Player$Commands getAvailableCommands()>();

        return $r1;
    }

    public androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.TrackSelectionParameters $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()>();

        return $r1;
    }

    public void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>(r1);

        return;
    }

    public void seekToPrevious()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToPrevious()>();

        return;
    }

    public long getMaxSeekToPreviousPosition()
    {
        androidx.media3.session.PlayerWrapper r0;
        long $l0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $l0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: long getMaxSeekToPreviousPosition()>();

        return $l0;
    }

    public void seekToNext()
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        specialinvoke r0.<androidx.media3.common.ForwardingPlayer: void seekToNext()>();

        return;
    }

    public androidx.media3.common.Tracks getCurrentTracks()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Tracks $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.Tracks getCurrentTracks()>();

        return $r1;
    }

    public androidx.media3.common.Tracks getCurrentTracksWithCommandCheck()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;
        androidx.media3.common.Tracks $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(30);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Tracks getCurrentTracks()>();

        goto label2;

     label1:
        $r1 = <androidx.media3.common.Tracks: androidx.media3.common.Tracks EMPTY>;

     label2:
        return $r1;
    }

    public java.lang.Object getCurrentManifest()
    {
        androidx.media3.session.PlayerWrapper r0;
        java.lang.Object $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: java.lang.Object getCurrentManifest()>();

        return $r1;
    }

    public int getCurrentPeriodIndex()
    {
        androidx.media3.session.PlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $i0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: int getCurrentPeriodIndex()>();

        return $i0;
    }

    public boolean isCurrentMediaItemDynamic()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isCurrentMediaItemDynamic()>();

        return $z0;
    }

    public boolean isCurrentMediaItemLive()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isCurrentMediaItemLive()>();

        return $z0;
    }

    public boolean isCurrentMediaItemSeekable()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $z0 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: boolean isCurrentMediaItemSeekable()>();

        return $z0;
    }

    public androidx.media3.common.util.Size getSurfaceSize()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.util.Size $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.PlayerWrapper: void verifyApplicationThread()>();

        $r1 = specialinvoke r0.<androidx.media3.common.ForwardingPlayer: androidx.media3.common.util.Size getSurfaceSize()>();

        return $r1;
    }

    public android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.PlaybackException r1;
        int i0, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i13, i15, i20, $i21;
        androidx.media3.common.Player$Commands r2;
        float f0, f1, $f2;
        android.os.Bundle r3, $r9, $r26, $r41, $r43;
        androidx.media3.common.MediaItem r4;
        boolean z0, $z1, $z2, $z3, $z4;
        long l1, l2, $l6, $l11, $l12, l14, $l16, l17, $l18, $l19;
        android.support.v4.media.session.PlaybackStateCompat$Builder r5, $r10, $r11, $r12, $r13, $r14, $r33, $r34, $r35, $r36, $r40, $r44;
        androidx.media3.session.CommandButton r6;
        androidx.media3.session.SessionCommand r7, $r22;
        androidx.media3.common.PlaybackParameters $r8;
        android.support.v4.media.session.PlaybackStateCompat $r15, $r45;
        java.lang.String $r16, $r25, $r30, $r31, $r32, $r37;
        java.lang.Object $r17, $r21, $r38, $r42;
        java.lang.CharSequence $r18, $r24, $r39;
        com.google.common.collect.ImmutableList $r20, $r46;
        android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder $r23, $r27;
        android.support.v4.media.session.PlaybackStateCompat$CustomAction $r28;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $i3 = r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode>;

        if $i3 == -1 goto label01;

        $r33 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r33.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>()>();

        $l12 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r34 = virtualinvoke $r33.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>(7, -1L, 0.0F, $l12);

        $r35 = virtualinvoke $r34.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long)>(0L);

        $r36 = virtualinvoke $r35.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long)>(0L);

        $i13 = r0.<androidx.media3.session.PlayerWrapper: int legacyStatusCode>;

        $r37 = r0.<androidx.media3.session.PlayerWrapper: java.lang.String legacyErrorMessage>;

        $r38 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r37);

        $r39 = (java.lang.CharSequence) $r38;

        $r40 = virtualinvoke $r36.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence)>($i13, $r39);

        $r41 = r0.<androidx.media3.session.PlayerWrapper: android.os.Bundle legacyErrorExtras>;

        $r42 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r41);

        $r43 = (android.os.Bundle) $r42;

        $r44 = virtualinvoke $r40.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle)>($r43);

        $r45 = virtualinvoke $r44.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

        return $r45;

     label01:
        r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackException getPlayerError()>();

        $i4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getPlaybackState()>();

        $z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean getPlayWhenReady()>();

        i0 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackStateCompatState(androidx.media3.common.PlaybackException,int,boolean)>(r1, $i4, $z1);

        l14 = 128L;

        r2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$Commands getAvailableCommands()>();

        i15 = 0;

     label02:
        $i5 = virtualinvoke r2.<androidx.media3.common.Player$Commands: int size()>();

        if i15 >= $i5 goto label03;

        $i10 = virtualinvoke r2.<androidx.media3.common.Player$Commands: int get(int)>(i15);

        $l11 = staticinvoke <androidx.media3.session.PlayerWrapper: long convertCommandToPlaybackStateActions(int)>($i10);

        l14 = l14 | $l11;

        i15 = i15 + 1;

        goto label02;

     label03:
        $z2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(17);

        if $z2 == 0 goto label04;

        $i9 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

        $l16 = staticinvoke <androidx.media3.session.MediaUtils: long convertToQueueItemId(int)>($i9);

        goto label05;

     label04:
        $l16 = -1L;

     label05:
        l17 = $l16;

        $r8 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        f0 = $r8.<androidx.media3.common.PlaybackParameters: float speed>;

        $z3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isPlaying()>();

        if $z3 == 0 goto label06;

        $f2 = f0;

        goto label07;

     label06:
        $f2 = 0.0F;

     label07:
        f1 = $f2;

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        r3 = $r9;

        virtualinvoke r3.<android.os.Bundle: void putFloat(java.lang.String,float)>("EXO_SPEED", f0);

        r4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()>();

        if r4 == null goto label08;

        $r31 = "";

        $r30 = r4.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $z4 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z4 != 0 goto label08;

        $r32 = r4.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.media.PlaybackStateCompat.Extras.KEY_MEDIA_ID", $r32);

     label08:
        z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        if z0 == 0 goto label09;

        $l18 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getCurrentPosition()>();

        goto label10;

     label09:
        $l18 = -1L;

     label10:
        l1 = $l18;

        if z0 == 0 goto label11;

        $l19 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getBufferedPosition()>();

        goto label12;

     label11:
        $l19 = 0L;

     label12:
        l2 = $l19;

        $r10 = new android.support.v4.media.session.PlaybackStateCompat$Builder;

        specialinvoke $r10.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>()>();

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r11 = virtualinvoke $r10.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>(i0, l1, f1, $l6);

        $r12 = virtualinvoke $r11.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long)>(l14);

        $r13 = virtualinvoke $r12.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long)>(l17);

        $r14 = virtualinvoke $r13.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long)>(l2);

        r5 = virtualinvoke $r14.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle)>(r3);

        i20 = 0;

     label13:
        $r46 = r0.<androidx.media3.session.PlayerWrapper: com.google.common.collect.ImmutableList customLayout>;

        $i21 = virtualinvoke $r46.<com.google.common.collect.ImmutableList: int size()>();

        if i20 >= $i21 goto label15;

        $r20 = r0.<androidx.media3.session.PlayerWrapper: com.google.common.collect.ImmutableList customLayout>;

        $r21 = virtualinvoke $r20.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i20);

        r6 = (androidx.media3.session.CommandButton) $r21;

        $r22 = r6.<androidx.media3.session.CommandButton: androidx.media3.session.SessionCommand sessionCommand>;

        if $r22 == null goto label14;

        r7 = r6.<androidx.media3.session.CommandButton: androidx.media3.session.SessionCommand sessionCommand>;

        $i7 = r7.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i7 != 0 goto label14;

        $r23 = new android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder;

        $r25 = r7.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

        $r24 = r6.<androidx.media3.session.CommandButton: java.lang.CharSequence displayName>;

        $i8 = r6.<androidx.media3.session.CommandButton: int iconResId>;

        specialinvoke $r23.<android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>($r25, $r24, $i8);

        $r26 = r7.<androidx.media3.session.SessionCommand: android.os.Bundle customExtras>;

        $r27 = virtualinvoke $r23.<android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle)>($r26);

        $r28 = virtualinvoke $r27.<android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction build()>();

        virtualinvoke r5.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction)>($r28);

     label14:
        i20 = i20 + 1;

        goto label13;

     label15:
        if r1 == null goto label16;

        $r16 = virtualinvoke r1.<androidx.media3.common.PlaybackException: java.lang.String getMessage()>();

        $r17 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r16);

        $r18 = (java.lang.CharSequence) $r17;

        virtualinvoke r5.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence)>(0, $r18);

     label16:
        $r15 = virtualinvoke r5.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

        return $r15;
    }

    public androidx.media.VolumeProviderCompat createVolumeProviderCompat()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.common.Player$Commands r1;
        android.os.Handler r2, $r4;
        int i0, $i1, $i3;
        androidx.media3.common.DeviceInfo $r3, $r7;
        boolean $z0, $z1;
        byte b2;
        android.os.Looper $r5;
        androidx.media3.session.PlayerWrapper$1 $r6;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $r3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        $i1 = $r3.<androidx.media3.common.DeviceInfo: int playbackType>;

        if $i1 != 0 goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$Commands getAvailableCommands()>();

        b2 = 0;

        $z0 = virtualinvoke r1.<androidx.media3.common.Player$Commands: boolean contains(int)>(26);

        if $z0 == 0 goto label2;

        b2 = 1;

        $z1 = virtualinvoke r1.<androidx.media3.common.Player$Commands: boolean contains(int)>(25);

        if $z1 == 0 goto label2;

        b2 = 2;

     label2:
        $r4 = new android.os.Handler;

        $r5 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: android.os.Looper getApplicationLooper()>();

        specialinvoke $r4.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r2 = $r4;

        i0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getDeviceVolumeWithCommandCheck()>();

        $r6 = new androidx.media3.session.PlayerWrapper$1;

        $r7 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        $i3 = $r7.<androidx.media3.common.DeviceInfo: int maxVolume>;

        specialinvoke $r6.<androidx.media3.session.PlayerWrapper$1: void <init>(androidx.media3.session.PlayerWrapper,int,int,int,android.os.Handler)>(r0, b2, $i3, i0, r2);

        return $r6;
    }

    public androidx.media3.common.Player$PositionInfo createPositionInfoForBundling()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean z0, z1;
        int $i0, $i3, $i4, $i5, $i6, $i9, $i10;
        long $l1, $l2, $l7, $l8;
        androidx.media3.common.MediaItem $r1, $r3;
        androidx.media3.common.Player$PositionInfo $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(17);

        $r2 = new androidx.media3.common.Player$PositionInfo;

        if z1 == 0 goto label01;

        $i4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

        $i5 = $i4;

        goto label02;

     label01:
        $i5 = 0;

     label02:
        if z0 == 0 goto label03;

        $r1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        $r3 = $r1;

        goto label04;

     label03:
        $r3 = null;

     label04:
        if z1 == 0 goto label05;

        $i3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getCurrentPeriodIndex()>();

        $i6 = $i3;

        goto label06;

     label05:
        $i6 = 0;

     label06:
        if z0 == 0 goto label07;

        $l2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getCurrentPosition()>();

        $l7 = $l2;

        goto label08;

     label07:
        $l7 = 0L;

     label08:
        if z0 == 0 goto label09;

        $l1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getContentPosition()>();

        $l8 = $l1;

        goto label10;

     label09:
        $l8 = 0L;

     label10:
        if z0 == 0 goto label11;

        $i0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getCurrentAdGroupIndex()>();

        $i9 = $i0;

        goto label12;

     label11:
        $i9 = -1;

     label12:
        if z0 == 0 goto label13;

        $i10 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getCurrentAdIndexInAdGroup()>();

        goto label14;

     label13:
        $i10 = -1;

     label14:
        specialinvoke $r2.<androidx.media3.common.Player$PositionInfo: void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int)>(null, $i5, $r3, null, $i6, $l7, $l8, $i9, $i10);

        return $r2;
    }

    public androidx.media3.session.SessionPositionInfo createSessionPositionInfoForBundling()
    {
        androidx.media3.session.PlayerWrapper r0;
        boolean z0, $z1, $z130;
        long $l0, $l1, $l2, $l4, $l5, $l6, $l134, $l262, $l518, $l646, $l774, $l775;
        int $i3, $i390;
        androidx.media3.session.SessionPositionInfo $r1;
        androidx.media3.common.Player$PositionInfo $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(16);

        $r1 = new androidx.media3.session.SessionPositionInfo;

        $r2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$PositionInfo createPositionInfoForBundling()>();

        if z0 == 0 goto label01;

        $z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isPlayingAd()>();

        if $z1 == 0 goto label01;

        $z130 = 1;

        goto label02;

     label01:
        $z130 = 0;

     label02:
        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if z0 == 0 goto label03;

        $l5 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getDuration()>();

        $l134 = $l5;

        goto label04;

     label03:
        $l134 = -9223372036854775807L;

     label04:
        if z0 == 0 goto label05;

        $l4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getBufferedPosition()>();

        $l262 = $l4;

        goto label06;

     label05:
        $l262 = 0L;

     label06:
        if z0 == 0 goto label07;

        $i3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getBufferedPercentage()>();

        $i390 = $i3;

        goto label08;

     label07:
        $i390 = 0;

     label08:
        if z0 == 0 goto label09;

        $l2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getTotalBufferedDuration()>();

        $l518 = $l2;

        goto label10;

     label09:
        $l518 = 0L;

     label10:
        if z0 == 0 goto label11;

        $l1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getCurrentLiveOffset()>();

        $l646 = $l1;

        goto label12;

     label11:
        $l646 = -9223372036854775807L;

     label12:
        if z0 == 0 goto label13;

        $l0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getContentDuration()>();

        $l774 = $l0;

        goto label14;

     label13:
        $l774 = -9223372036854775807L;

     label14:
        if z0 == 0 goto label15;

        $l775 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getContentBufferedPosition()>();

        goto label16;

     label15:
        $l775 = 0L;

     label16:
        specialinvoke $r1.<androidx.media3.session.SessionPositionInfo: void <init>(androidx.media3.common.Player$PositionInfo,boolean,long,long,long,int,long,long,long,long)>($r2, $z130, $l6, $l134, $l262, $i390, $l518, $l646, $l774, $l775);

        return $r1;
    }

    public androidx.media3.session.PlayerInfo createPlayerInfoForBundling()
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.session.PlayerInfo $r1;
        androidx.media3.common.PlaybackException $r2;
        androidx.media3.session.SessionPositionInfo $r3;
        androidx.media3.common.Player$PositionInfo $r4, $r5;
        androidx.media3.common.PlaybackParameters $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.media3.common.VideoSize $r7;
        androidx.media3.common.Timeline $r8;
        androidx.media3.common.MediaMetadata $r9, $r13;
        float $f0;
        androidx.media3.common.AudioAttributes $r10;
        androidx.media3.common.text.CueGroup $r11;
        androidx.media3.common.DeviceInfo $r12;
        long $l4, $l5, $l6;
        androidx.media3.common.Tracks $r14;
        androidx.media3.common.TrackSelectionParameters $r15;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $r1 = new androidx.media3.session.PlayerInfo;

        $r2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackException getPlayerError()>();

        $r3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.session.SessionPositionInfo createSessionPositionInfoForBundling()>();

        $r4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$PositionInfo createPositionInfoForBundling()>();

        $r5 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$PositionInfo createPositionInfoForBundling()>();

        $r6 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        $i0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getRepeatMode()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean getShuffleModeEnabled()>();

        $r7 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.VideoSize getVideoSize()>();

        $r8 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimelineWithCommandCheck()>();

        $r9 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getPlaylistMetadataWithCommandCheck()>();

        $f0 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: float getVolumeWithCommandCheck()>();

        $r10 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.AudioAttributes getAudioAttributesWithCommandCheck()>();

        $r11 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.text.CueGroup getCurrentCuesWithCommandCheck()>();

        $r12 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        $i1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getDeviceVolumeWithCommandCheck()>();

        $z1 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isDeviceMutedWithCommandCheck()>();

        $z2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean getPlayWhenReady()>();

        $i2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getPlaybackSuppressionReason()>();

        $i3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: int getPlaybackState()>();

        $z3 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isPlaying()>();

        $z4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: boolean isLoading()>();

        $r13 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getMediaMetadataWithCommandCheck()>();

        $l4 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getSeekBackIncrement()>();

        $l5 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getSeekForwardIncrement()>();

        $l6 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: long getMaxSeekToPreviousPosition()>();

        $r14 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Tracks getCurrentTracksWithCommandCheck()>();

        $r15 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.TrackSelectionParameters getTrackSelectionParameters()>();

        specialinvoke $r1.<androidx.media3.session.PlayerInfo: void <init>(androidx.media3.common.PlaybackException,int,androidx.media3.session.SessionPositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int,androidx.media3.common.PlaybackParameters,int,boolean,androidx.media3.common.VideoSize,androidx.media3.common.Timeline,androidx.media3.common.MediaMetadata,float,androidx.media3.common.AudioAttributes,androidx.media3.common.text.CueGroup,androidx.media3.common.DeviceInfo,int,boolean,boolean,int,int,int,boolean,boolean,androidx.media3.common.MediaMetadata,long,long,long,androidx.media3.common.Tracks,androidx.media3.common.TrackSelectionParameters)>($r2, 0, $r3, $r4, $r5, 0, $r6, $i0, $z0, $r7, $r8, $r9, $f0, $r10, $r11, $r12, $i1, $z1, $z2, 1, $i2, $i3, $z3, $z4, $r13, $l4, $l5, $l6, $r14, $r15);

        return $r1;
    }

    private void verifyApplicationThread()
    {
        androidx.media3.session.PlayerWrapper r0;
        android.os.Looper $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.PlayerWrapper;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: android.os.Looper getApplicationLooper()>();

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        return;
    }

    private static long convertCommandToPlaybackStateActions(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label14;
            case 0: goto label14;
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label05;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label07;
            case 10: goto label06;
            case 11: goto label03;
            case 12: goto label04;
            case 13: goto label11;
            case 14: goto label12;
            case 15: goto label10;
            case 16: goto label14;
            case 17: goto label14;
            case 18: goto label14;
            case 19: goto label14;
            case 20: goto label14;
            case 21: goto label14;
            case 22: goto label14;
            case 23: goto label14;
            case 24: goto label14;
            case 25: goto label14;
            case 26: goto label14;
            case 27: goto label14;
            case 28: goto label14;
            case 29: goto label14;
            case 30: goto label14;
            case 31: goto label09;
            default: goto label14;
        };

     label01:
        return 518L;

     label02:
        return 16384L;

     label03:
        return 8L;

     label04:
        return 64L;

     label05:
        return 256L;

     label06:
        return 4096L;

     label07:
        return 32L;

     label08:
        return 16L;

     label09:
        return 240640L;

     label10:
        return 262144L;

     label11:
        return 4194304L;

     label12:
        return 2621440L;

     label13:
        return 1L;

     label14:
        return 0L;
    }

androidx.media3.session.PlayerWrapper$1
<androidx.media3.session.PlayerWrapper$1: android.os.Handler val$handler>
<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>
    void <init>(androidx.media3.session.PlayerWrapper, int, int, int, android.os.Handler)
    {
        androidx.media3.session.PlayerWrapper$1 r0;
        androidx.media3.session.PlayerWrapper r1;
        int i0, i1, i2;
        android.os.Handler r2;

        r0 := @this: androidx.media3.session.PlayerWrapper$1;

        r1 := @parameter0: androidx.media3.session.PlayerWrapper;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Handler;

        r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0> = r1;

        r0.<androidx.media3.session.PlayerWrapper$1: android.os.Handler val$handler> = r2;

        specialinvoke r0.<androidx.media.VolumeProviderCompat: void <init>(int,int,int)>(i0, i1, i2);

        return;
    }

    public void onSetVolumeTo(int)
    {
        androidx.media3.session.PlayerWrapper$1 r0;
        int i0;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.PlayerWrapper$1: android.os.Handler val$handler>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.PlayerWrapper$1,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.PlayerWrapper$1: void lambda$onSetVolumeTo$0(int)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r1, $r2);

        return;
    }

    public void onAdjustVolume(int)
    {
        androidx.media3.session.PlayerWrapper$1 r0;
        int i0;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.session.PlayerWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.PlayerWrapper$1: android.os.Handler val$handler>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.PlayerWrapper$1,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.PlayerWrapper$1: void lambda$onAdjustVolume$1(int)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r1, $r2);

        return;
    }

    private void lambda$onAdjustVolume$1(int)
    {
        androidx.media3.session.PlayerWrapper$1 r0;
        int i0;
        androidx.media3.session.PlayerWrapper $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: androidx.media3.session.PlayerWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        $z0 = virtualinvoke $r1.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(26);

        if $z0 != 0 goto label01;

        return;

     label01:
        lookupswitch(i0)
        {
            case -100: goto label04;
            case -1: goto label03;
            case 1: goto label02;
            case 100: goto label05;
            case 101: goto label06;
            default: goto label09;
        };

     label02:
        $r5 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        virtualinvoke $r5.<androidx.media3.session.PlayerWrapper: void increaseDeviceVolume()>();

        goto label10;

     label03:
        $r6 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        virtualinvoke $r6.<androidx.media3.session.PlayerWrapper: void decreaseDeviceVolume()>();

        goto label10;

     label04:
        $r7 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: void setDeviceMuted(boolean)>(1);

        goto label10;

     label05:
        $r4 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: void setDeviceMuted(boolean)>(0);

        goto label10;

     label06:
        $r3 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        $r2 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        $z1 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: boolean isDeviceMutedWithCommandCheck()>();

        if $z1 != 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void setDeviceMuted(boolean)>($z2);

        goto label10;

     label09:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAdjustVolume: Ignoring unknown direction: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("VolumeProviderCompat", $r11);

     label10:
        return;
    }

    private void lambda$onSetVolumeTo$0(int)
    {
        androidx.media3.session.PlayerWrapper$1 r0;
        int i0;
        androidx.media3.session.PlayerWrapper $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.PlayerWrapper$1: androidx.media3.session.PlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media3.session.PlayerWrapper: void setDeviceVolumeIfCommandAvailable(int)>(i0);

        return;
    }

androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isSeekable>
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isDynamic>
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>
<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: long durationUs>
    public void <init>(androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.common.MediaItem $r2;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        androidx.media3.common.MediaItem$LiveConfiguration $r4;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        r1 := @parameter0: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.common.Timeline: void <init>()>();

        $r2 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItem()>();

        r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem mediaItem> = $r2;

        $z0 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: boolean isCurrentMediaItemSeekable()>();

        r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isSeekable> = $z0;

        $z1 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: boolean isCurrentMediaItemDynamic()>();

        r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isDynamic> = $z1;

        $z2 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: boolean isCurrentMediaItemLive()>();

        if $z2 == 0 goto label1;

        $r4 = <androidx.media3.common.MediaItem$LiveConfiguration: androidx.media3.common.MediaItem$LiveConfiguration UNSET>;

        goto label2;

     label1:
        $r4 = null;

     label2:
        r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration> = $r4;

        $l0 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: long getContentDuration()>();

        $l1 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l0);

        r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: long durationUs> = $l1;

        return;
    }

    public int getWindowCount()
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        return 1;
    }

    public androidx.media3.common.Timeline$Window getWindow(int, androidx.media3.common.Timeline$Window, long)
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Window r1;
        long l1, $l2;
        androidx.media3.common.MediaItem$LiveConfiguration $r2;
        boolean $z0, $z1;
        androidx.media3.common.MediaItem $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Window;

        l1 := @parameter2: long;

        $r4 = <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>;

        $r3 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem mediaItem>;

        $z1 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isSeekable>;

        $z0 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: boolean isDynamic>;

        $r2 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l2 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: long durationUs>;

        virtualinvoke r1.<androidx.media3.common.Timeline$Window: androidx.media3.common.Timeline$Window set(java.lang.Object,androidx.media3.common.MediaItem,java.lang.Object,long,long,long,boolean,boolean,androidx.media3.common.MediaItem$LiveConfiguration,long,long,int,int,long)>($r4, $r3, null, -9223372036854775807L, -9223372036854775807L, -9223372036854775807L, $z1, $z0, $r2, 0L, $l2, 0, 0, 0L);

        return r1;
    }

    public int getPeriodCount()
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        return 1;
    }

    public androidx.media3.common.Timeline$Period getPeriod(int, androidx.media3.common.Timeline$Period, boolean)
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;
        int i0;
        androidx.media3.common.Timeline$Period r1;
        boolean z0;
        long $l1;
        java.lang.Object $r2, $r3;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline$Period;

        z0 := @parameter2: boolean;

        $r3 = <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>;

        $r2 = <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>;

        $l1 = r0.<androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: long durationUs>;

        virtualinvoke r1.<androidx.media3.common.Timeline$Period: androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long)>($r3, $r2, 0, $l1, 0L);

        return r1;
    }

    public int getIndexOfPeriod(java.lang.Object)
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;
        java.lang.Object r1, $r2;
        boolean $z0;
        byte $b0;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        r1 := @parameter0: java.lang.Object;

        $r2 = <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = -1;

     label2:
        return $b0;
    }

    public java.lang.Object getUidOfPeriod(int)
    {
        androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline;

        i0 := @parameter0: int;

        $r1 = <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.media3.session.PlayerWrapper$CurrentMediaItemOnlyTimeline: java.lang.Object UID> = $r0;

        return;
    }

