androidx.compose.ui.test.OutputKt
    public static final java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteraction, int)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        int i0;
        androidx.compose.ui.semantics.SemanticsNode r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        boolean $z0;
        java.lang.String $r6, $r8;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = staticinvoke <androidx.compose.ui.test.SemanticsNodeInteraction: androidx.compose.ui.semantics.SemanticsNode fetchSemanticsNode$default(androidx.compose.ui.test.SemanticsNodeInteraction,java.lang.String,int,java.lang.Object)>($r0, null, 1, null);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Printing with useUnmergedTree = \'");

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteraction: boolean getUseUnmergedTree$ui_test_release()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");

        $r6 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.semantics.SemanticsNode,int)>(r1, i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String printToString$default(androidx.compose.ui.test.SemanticsNodeInteraction, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 2147483647;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteraction,int)>(r0, i2);

        return $r2;
    }

    public static final void printToLog(androidx.compose.ui.test.SemanticsNodeInteraction, java.lang.String, int)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction $r0;
        java.lang.String r1, r2, $r5;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r6;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tag");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("printToLog:\n");

        $r5 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteraction,int)>($r0, i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.compose.ui.test.AndroidOutput_androidKt: void printToLog(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public static void printToLog$default(androidx.compose.ui.test.SemanticsNodeInteraction, java.lang.String, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsNodeInteraction r0;
        java.lang.String r1;
        int i0, $i1, i2;
        java.lang.Object r2;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteraction;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i2 = 2147483647;

     label1:
        staticinvoke <androidx.compose.ui.test.OutputKt: void printToLog(androidx.compose.ui.test.SemanticsNodeInteraction,java.lang.String,int)>(r0, r1, i2);

        return;
    }

    public static final java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteractionCollection, int)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0;
        int i0;
        java.util.List r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        boolean $z0, $z1;
        java.util.Collection $r6;
        java.lang.String $r8, $r9;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = staticinvoke <androidx.compose.ui.test.SemanticsNodeInteractionCollection: java.util.List fetchSemanticsNodes$default(androidx.compose.ui.test.SemanticsNodeInteractionCollection,boolean,java.lang.String,int,java.lang.Object)>($r0, 0, null, 3, null);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Printing with useUnmergedTree = \'");

        $z0 = virtualinvoke $r0.<androidx.compose.ui.test.SemanticsNodeInteractionCollection: boolean getUseUnmergedTree$ui_test_release()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r9 = "There were 0 nodes found!";

        goto label2;

     label1:
        $r6 = (java.util.Collection) r1;

        $r9 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(java.util.Collection,int)>($r6, i0);

     label2:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String printToString$default(androidx.compose.ui.test.SemanticsNodeInteractionCollection, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteractionCollection,int)>(r0, i2);

        return $r2;
    }

    public static final void printToLog(androidx.compose.ui.test.SemanticsNodeInteractionCollection, java.lang.String, int)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection $r0;
        java.lang.String r1, r2, $r5;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r6;

        $r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tag");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("printToLog:\n");

        $r5 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.test.SemanticsNodeInteractionCollection,int)>($r0, i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.compose.ui.test.AndroidOutput_androidKt: void printToLog(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public static void printToLog$default(androidx.compose.ui.test.SemanticsNodeInteractionCollection, java.lang.String, int, int, java.lang.Object)
    {
        androidx.compose.ui.test.SemanticsNodeInteractionCollection r0;
        java.lang.String r1;
        int i0, $i1, i2;
        java.lang.Object r2;

        r0 := @parameter0: androidx.compose.ui.test.SemanticsNodeInteractionCollection;

        r1 := @parameter1: java.lang.String;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        staticinvoke <androidx.compose.ui.test.OutputKt: void printToLog(androidx.compose.ui.test.SemanticsNodeInteractionCollection,java.lang.String,int)>(r0, r1, i2);

        return;
    }

    public static final java.lang.String printToString(java.util.Collection, int)
    {
        java.util.Collection $r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder r1, $r6, $r10;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.compose.ui.semantics.SemanticsNode r5;
        boolean $z2, z3;
        java.lang.String $r7, $r8;

        $r0 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r1 = $r6;

        z3 = 0;

        i3 = 1;

        $r2 = (java.lang.Iterable) $r0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.compose.ui.semantics.SemanticsNode) r4;

        $i1 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        if $i1 <= 1 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

     label2:
        $r8 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.semantics.SemanticsNode,int)>(r5, i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $i2 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        if i3 >= $i2 goto label3;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "append(\'\\n\')");

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "sb.toString()");

        return $r7;
    }

    public static java.lang.String printToString$default(java.util.Collection, int, int, java.lang.Object)
    {
        java.util.Collection r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Collection;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(java.util.Collection,int)>(r0, i2);

        return $r2;
    }

    public static final java.lang.String printToString(androidx.compose.ui.semantics.SemanticsNode, int)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        int i0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        staticinvoke <androidx.compose.ui.test.OutputKt: void printToStringInner(androidx.compose.ui.semantics.SemanticsNode,java.lang.StringBuilder,int,int,java.lang.String,boolean)>($r0, r1, i0, 0, "", 0);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "sb.toString()");

        return $r3;
    }

    public static java.lang.String printToString$default(androidx.compose.ui.semantics.SemanticsNode, int, int, java.lang.Object)
    {
        androidx.compose.ui.semantics.SemanticsNode r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String printToString(androidx.compose.ui.semantics.SemanticsNode,int)>(r0, i2);

        return $r2;
    }

    private static final void printToStringInner(androidx.compose.ui.semantics.SemanticsNode, java.lang.StringBuilder, int, int, java.lang.String, boolean)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0, r7, $r28;
        java.lang.StringBuilder r1, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r26, $r29, $r32, $r33, $r34, $r37, $r38, $r39, $r43, $r44, $r45, $r48, $r49, $r50, $r62, $r63, $r64, $r67, $r68, $r69;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11, i12;
        java.lang.String r2, r3, $r15, $r18, $r35, $r40, $r46, $r51, $r59, $r65, $r70;
        boolean z0, z1, z4, $z5, $z6, $z7, $z8;
        java.lang.Iterable $r4, $r25;
        java.util.Iterator r5;
        java.lang.Object r6, $r58;
        androidx.compose.ui.geometry.Rect $r17;
        androidx.compose.ui.semantics.SemanticsConfiguration $r20, $r23, $r55;
        androidx.compose.ui.semantics.SemanticsProperties $r21, $r56;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r22, $r57;
        java.util.List $r24, $r27, $r53, r71;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        r1 := @parameter1: java.lang.StringBuilder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        if i1 != 0 goto label01;

        $r70 = "";

        goto label03;

     label01:
        if z0 == 0 goto label02;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r70 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        r3 = $r70;

        if i1 <= 0 goto label04;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |-");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

     label04:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node #");

        $i4 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = staticinvoke <androidx.compose.ui.test.OutputKt: androidx.compose.ui.geometry.Rect getUnclippedGlobalBounds(androidx.compose.ui.semantics.SemanticsNode)>($r0);

        $r18 = staticinvoke <androidx.compose.ui.test.OutputKt: java.lang.String rectToShortString(androidx.compose.ui.geometry.Rect)>($r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r21 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r22 = virtualinvoke $r21.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $z5 = virtualinvoke $r20.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean contains(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r22);

        if $z5 == 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Tag: \'");

        $r55 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        $r56 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r57 = virtualinvoke $r56.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $r58 = virtualinvoke $r55.<androidx.compose.ui.semantics.SemanticsConfiguration: java.lang.Object get(androidx.compose.ui.semantics.SemanticsPropertyKey)>($r57);

        $r59 = (java.lang.String) $r58;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

     label05:
        if i1 != i0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z1 = $z7;

        $r23 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getConfig()>();

        staticinvoke <androidx.compose.ui.test.OutputKt: void appendConfigInfo(java.lang.StringBuilder,androidx.compose.ui.semantics.SemanticsConfiguration,java.lang.String)>(r1, $r23, r3);

        if z1 == 0 goto label16;

        $r27 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren()>();

        i8 = interfaceinvoke $r27.<java.util.List: int size()>();

        $r28 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsNode getParent()>();

        if $r28 == null goto label08;

        $r53 = virtualinvoke $r28.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren()>();

        if $r53 == null goto label08;

        $i9 = interfaceinvoke $r53.<java.util.List: int size()>();

        goto label09;

     label08:
        $i9 = 1;

     label09:
        i10 = $i9 - 1;

        if i8 > 0 goto label10;

        if i10 <= 0 goto label15;

        if i1 != 0 goto label15;

     label10:
        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "append(\'\\n\')");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Has ");

        if i8 <= 1 goto label11;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" children");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        goto label12;

     label11:
        if i8 != 1 goto label12;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" child");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

     label12:
        if i10 <= 0 goto label15;

        if i1 != 0 goto label15;

        if i8 <= 0 goto label13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label13:
        if i10 <= 1 goto label14;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" siblings");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        goto label15;

     label14:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sibling");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

     label15:
        return;

     label16:
        i11 = i1 + 1;

        $r24 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: java.util.List getChildren()>();

        $r25 = (java.lang.Iterable) $r24;

        r71 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r25);

        $r4 = (java.lang.Iterable) r71;

        i12 = 0;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label21;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $i5 = i12;

        i12 = i12 + 1;

        i2 = $i5;

        if i2 >= 0 goto label18;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label18:
        r7 = (androidx.compose.ui.semantics.SemanticsNode) r6;

        i3 = i2;

        $i6 = interfaceinvoke r71.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        if i3 >= $i7 goto label19;

        $z8 = 1;

        goto label20;

     label19:
        $z8 = 0;

     label20:
        z4 = $z8;

        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "append(\'\\n\')");

        staticinvoke <androidx.compose.ui.test.OutputKt: void printToStringInner(androidx.compose.ui.semantics.SemanticsNode,java.lang.StringBuilder,int,int,java.lang.String,boolean)>(r7, r1, i0, i11, r3, z4);

        goto label17;

     label21:
        return;
    }

    private static final androidx.compose.ui.geometry.Rect getUnclippedGlobalBounds(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        long $l0, $l1, $l2;
        androidx.compose.ui.geometry.Rect $r1;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $l0 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: long getPositionInWindow-F1C5BW0()>();

        $l1 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: long getSize-YbymL2g()>();

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long toSize-ozmzZPI(long)>($l1);

        $r1 = staticinvoke <androidx.compose.ui.geometry.RectKt: androidx.compose.ui.geometry.Rect Rect-tz77jQw(long,long)>($l0, $l2);

        return $r1;
    }

    private static final java.lang.String rectToShortString(androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.geometry.Rect r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r11;

        r0 := @parameter0: androidx.compose.ui.geometry.Rect;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(l=");

        $f0 = virtualinvoke r0.<androidx.compose.ui.geometry.Rect: float getLeft()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", t=");

        $f1 = virtualinvoke r0.<androidx.compose.ui.geometry.Rect: float getTop()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", r=");

        $f2 = virtualinvoke r0.<androidx.compose.ui.geometry.Rect: float getRight()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", b=");

        $f3 = virtualinvoke r0.<androidx.compose.ui.geometry.Rect: float getBottom()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")px");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static final void appendConfigInfo(java.lang.StringBuilder, androidx.compose.ui.semantics.SemanticsConfiguration, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r13, $r16, $r19, $r27, $r40;
        androidx.compose.ui.semantics.SemanticsConfiguration r1;
        java.lang.String r2, $r24, $r32, $r39, $r42, $r54, $r57, $r59;
        java.util.List r3, r4, $r48, $r51, $r55;
        java.util.Iterator r5;
        java.util.Map$Entry r6;
        androidx.compose.ui.semantics.SemanticsPropertyKey r7, $r38;
        java.lang.Object r8, $r35, $r36;
        java.util.ArrayList $r9, $r10;
        java.util.Collection $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16;
        java.lang.CharSequence $r22, $r30, $r60;
        java.lang.Iterable $r23, $r31;
        androidx.compose.ui.semantics.SemanticsProperties $r37;
        androidx.compose.ui.text.AnnotatedString $r47, $r50, $r52, $r53, $r56;
        int $i0;

        $r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: androidx.compose.ui.semantics.SemanticsConfiguration;

        r2 := @parameter2: java.lang.String;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r10;

        r5 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsConfiguration: java.util.Iterator iterator()>();

     label01:
        $z14 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label09;

        $r35 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r35;

        $r36 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (androidx.compose.ui.semantics.SemanticsPropertyKey) $r36;

        r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r37 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r38 = virtualinvoke $r37.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getTestTag()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r7, $r38);

        if $z4 == 0 goto label02;

        goto label01;

     label02:
        $z5 = r8 instanceof androidx.compose.ui.semantics.AccessibilityAction;

        if $z5 != 0 goto label03;

        $z7 = r8 instanceof kotlin.Function;

        if $z7 == 0 goto label04;

     label03:
        $r39 = virtualinvoke r7.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r39);

        goto label01;

     label04:
        $z8 = r8 instanceof kotlin.Unit;

        if $z8 == 0 goto label05;

        $r59 = virtualinvoke r7.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r59);

        goto label01;

     label05:
        $r40 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r40, "append(\'\\n\')");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r42 = virtualinvoke r7.<androidx.compose.ui.semantics.SemanticsPropertyKey: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'");

        $z9 = r8 instanceof androidx.compose.ui.text.AnnotatedString;

        if $z9 == 0 goto label07;

        $r47 = (androidx.compose.ui.text.AnnotatedString) r8;

        $r48 = virtualinvoke $r47.<androidx.compose.ui.text.AnnotatedString: java.util.List getParagraphStyles()>();

        $z10 = interfaceinvoke $r48.<java.util.List: boolean isEmpty()>();

        if $z10 == 0 goto label06;

        $r50 = (androidx.compose.ui.text.AnnotatedString) r8;

        $r51 = virtualinvoke $r50.<androidx.compose.ui.text.AnnotatedString: java.util.List getSpanStyles()>();

        $z11 = interfaceinvoke $r51.<java.util.List: boolean isEmpty()>();

        if $z11 == 0 goto label06;

        $r53 = (androidx.compose.ui.text.AnnotatedString) r8;

        $r52 = (androidx.compose.ui.text.AnnotatedString) r8;

        $r54 = virtualinvoke $r52.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        $i0 = virtualinvoke $r54.<java.lang.String: int length()>();

        $r55 = virtualinvoke $r53.<androidx.compose.ui.text.AnnotatedString: java.util.List getStringAnnotations(int,int)>(0, $i0);

        $z12 = interfaceinvoke $r55.<java.util.List: boolean isEmpty()>();

        if $z12 == 0 goto label06;

        $r56 = (androidx.compose.ui.text.AnnotatedString) r8;

        $r57 = virtualinvoke $r56.<androidx.compose.ui.text.AnnotatedString: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        goto label08;

     label06:
        $r60 = (java.lang.CharSequence) r8;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r60);

        goto label08;

     label07:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        goto label01;

     label09:
        $r11 = (java.util.Collection) r4;

        $z0 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $z15 = 1;

        goto label11;

     label10:
        $z15 = 0;

     label11:
        if $z15 == 0 goto label12;

        $r27 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "append(\'\\n\')");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r31 = (java.lang.Iterable) r4;

        $r30 = (java.lang.CharSequence) ", ";

        $r32 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r31, $r30, null, null, 0, null, null, 62, null);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label12:
        $r12 = (java.util.Collection) r3;

        $z1 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label13;

        $z16 = 1;

        goto label14;

     label13:
        $z16 = 0;

     label14:
        if $z16 == 0 goto label15;

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "append(\'\\n\')");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actions = [");

        $r23 = (java.lang.Iterable) r3;

        $r22 = (java.lang.CharSequence) ", ";

        $r24 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r23, $r22, null, null, 0, null, null, 62, null);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label15:
        $z2 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z2 == 0 goto label16;

        $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "append(\'\\n\')");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MergeDescendants = \'true\'");

     label16:
        $z3 = virtualinvoke r1.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isClearingSemantics()>();

        if $z3 == 0 goto label17;

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "append(\'\\n\')");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClearAndSetSemantics = \'true\'");

     label17:
        return;
    }

    static void appendConfigInfo$default(java.lang.StringBuilder, androidx.compose.ui.semantics.SemanticsConfiguration, java.lang.String, int, java.lang.Object)
    {
        java.lang.StringBuilder r0;
        androidx.compose.ui.semantics.SemanticsConfiguration r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.String r3;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: androidx.compose.ui.semantics.SemanticsConfiguration;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = "";

     label1:
        staticinvoke <androidx.compose.ui.test.OutputKt: void appendConfigInfo(java.lang.StringBuilder,androidx.compose.ui.semantics.SemanticsConfiguration,java.lang.String)>(r0, r1, r3);

        return;
    }

