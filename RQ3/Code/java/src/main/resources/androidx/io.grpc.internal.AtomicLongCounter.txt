io.grpc.internal.AtomicLongCounter
<io.grpc.internal.AtomicLongCounter: java.util.concurrent.atomic.AtomicLong counter>
    void <init>()
    {
        io.grpc.internal.AtomicLongCounter $r0;
        java.util.concurrent.atomic.AtomicLong $r1;

        $r0 := @this: io.grpc.internal.AtomicLongCounter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        $r0.<io.grpc.internal.AtomicLongCounter: java.util.concurrent.atomic.AtomicLong counter> = $r1;

        return;
    }

    public void add(long)
    {
        io.grpc.internal.AtomicLongCounter $r0;
        long $l0;
        java.util.concurrent.atomic.AtomicLong $r1;

        $r0 := @this: io.grpc.internal.AtomicLongCounter;

        $l0 := @parameter0: long;

        $r1 = $r0.<io.grpc.internal.AtomicLongCounter: java.util.concurrent.atomic.AtomicLong counter>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)>($l0);

        return;
    }

