androidx.camera.lifecycle.LifecycleCameraRepository
<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>
<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>
<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>
<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>
    void <init>()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        java.lang.Object $r1;
        java.util.HashMap $r2, $r3;
        java.util.ArrayDeque $r4;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap> = $r3;

        $r4 = new java.util.ArrayDeque;

        specialinvoke $r4.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners> = $r4;

        return;
    }

    androidx.camera.lifecycle.LifecycleCamera createLifecycleCamera(androidx.lifecycle.LifecycleOwner, androidx.camera.core.internal.CameraUseCaseAdapter)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.core.internal.CameraUseCaseAdapter r2;
        androidx.camera.lifecycle.LifecycleCamera r3, $r14;
        java.lang.Object r4, $r7, $r10;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r5;
        java.lang.Throwable r6, $r17;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r8;
        java.util.Map $r9;
        androidx.lifecycle.Lifecycle $r11;
        androidx.lifecycle.Lifecycle$State $r12, $r13;
        java.util.List $r15;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.camera.core.internal.CameraUseCaseAdapter;

        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = virtualinvoke r2.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId getCameraId()>();

        r5 = staticinvoke <androidx.camera.lifecycle.LifecycleCameraRepository$Key: androidx.camera.lifecycle.LifecycleCameraRepository$Key create(androidx.lifecycle.LifecycleOwner,androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)>(r1, $r8);

        $r9 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        if $r10 != null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "LifecycleCamera already exists for the given LifecycleOwner and set of cameras");

        $r11 = interfaceinvoke r1.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r12 = virtualinvoke $r11.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r13 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r12 != $r13 goto label4;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Trying to create LifecycleCamera with destroyed lifecycle.");

        throw $r16;

     label4:
        $r14 = new androidx.camera.lifecycle.LifecycleCamera;

        specialinvoke $r14.<androidx.camera.lifecycle.LifecycleCamera: void <init>(androidx.lifecycle.LifecycleOwner,androidx.camera.core.internal.CameraUseCaseAdapter)>(r1, r2);

        r3 = $r14;

        $r15 = virtualinvoke r2.<androidx.camera.core.internal.CameraUseCaseAdapter: java.util.List getUseCases()>();

        $z0 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        virtualinvoke r3.<androidx.camera.lifecycle.LifecycleCamera: void suspend()>();

     label5:
        specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void registerCamera(androidx.camera.lifecycle.LifecycleCamera)>(r3);

        exitmonitor r4;

     label6:
        goto label9;

     label7:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r4;

     label8:
        throw r6;

     label9:
        return r3;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    androidx.camera.lifecycle.LifecycleCamera getLifecycleCamera(androidx.lifecycle.LifecycleOwner, androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId r2;
        java.lang.Object r3, $r5, $r8;
        java.lang.Throwable r4, $r10;
        java.util.Map $r6;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key $r7;
        androidx.camera.lifecycle.LifecycleCamera $r9;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        $r5 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r7 = staticinvoke <androidx.camera.lifecycle.LifecycleCameraRepository$Key: androidx.camera.lifecycle.LifecycleCameraRepository$Key create(androidx.lifecycle.LifecycleOwner,androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)>(r1, r2);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (androidx.camera.lifecycle.LifecycleCamera) $r8;

        exitmonitor r3;

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    java.util.Collection getLifecycleCameras()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        java.util.Map $r4;
        java.util.Collection $r5, $r6;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        $r3 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r5);

        exitmonitor r1;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void clear()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        java.lang.Object r1, $r6, $r10;
        java.util.HashSet r2, $r7;
        java.util.Iterator r3;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r4;
        java.lang.Throwable r5, $r12;
        java.util.Map $r8;
        java.util.Set $r9;
        boolean $z0;
        androidx.lifecycle.LifecycleOwner $r11;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.util.HashSet;

        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        r2 = $r7;

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver) $r10;

        $r11 = virtualinvoke r4.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        virtualinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void unregisterLifecycle(androidx.lifecycle.LifecycleOwner)>($r11);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r1;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void registerCamera(androidx.camera.lifecycle.LifecycleCamera)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.camera.lifecycle.LifecycleCamera r1;
        java.lang.Object r2, $r6, $r17, r20;
        androidx.lifecycle.LifecycleOwner r3;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r4;
        java.lang.Throwable r5, $r18;
        androidx.camera.core.internal.CameraUseCaseAdapter $r7;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId $r8;
        java.util.Map $r10, $r13, $r16;
        androidx.lifecycle.Lifecycle $r15;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r19, r21, r23;
        java.util.HashSet r22;
        java.util.Set r24;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.camera.lifecycle.LifecycleCamera;

        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        r3 = virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        $r7 = virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: androidx.camera.core.internal.CameraUseCaseAdapter getCameraUseCaseAdapter()>();

        $r8 = virtualinvoke $r7.<androidx.camera.core.internal.CameraUseCaseAdapter: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId getCameraId()>();

        r4 = staticinvoke <androidx.camera.lifecycle.LifecycleCameraRepository$Key: androidx.camera.lifecycle.LifecycleCameraRepository$Key create(androidx.lifecycle.LifecycleOwner,androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)>(r3, $r8);

        r19 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r3);

        if r19 == null goto label2;

        $r16 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19);

        r20 = (java.util.Set) $r17;

        goto label3;

     label2:
        r22 = new java.util.HashSet;

        specialinvoke r22.<java.util.HashSet: void <init>()>();

        r20 = r22;

     label3:
        r24 = (java.util.Set) r20;

        interfaceinvoke r24.<java.util.Set: boolean add(java.lang.Object)>(r4);

        $r10 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r1);

        if r19 != null goto label4;

        r23 = new androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        specialinvoke r23.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: void <init>(androidx.lifecycle.LifecycleOwner,androidx.camera.lifecycle.LifecycleCameraRepository)>(r3, r0);

        r21 = r23;

        $r13 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, r20);

        $r15 = interfaceinvoke r3.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        virtualinvoke $r15.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r21);

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void unregisterLifecycle(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1, $r13;
        java.lang.Object r2, $r7, $r9, $r15;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r3;
        java.util.Iterator r4;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r5;
        java.lang.Throwable r6, $r18;
        java.util.Map $r8, $r11, $r16;
        java.util.Set $r10;
        boolean $z0;
        androidx.lifecycle.Lifecycle $r14;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        r3 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        virtualinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void setInactive(androidx.lifecycle.LifecycleOwner)>(r1);

        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r10 = (java.util.Set) $r9;

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r15;

        $r16 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r5);

        goto label4;

     label5:
        $r11 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        $r13 = virtualinvoke r3.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        $r14 = interfaceinvoke $r13.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        virtualinvoke $r14.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r3);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r2;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1, $r10;
        java.lang.Object r2, $r6, $r9;
        java.util.Iterator r3;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r4;
        java.lang.Throwable r5, $r11;
        java.util.Map $r7;
        java.util.Set $r8;
        boolean $z0, $z1;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver) $r9;

        $r10 = virtualinvoke r4.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return r4;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        return null;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void bindToLifecycleCamera(androidx.camera.lifecycle.LifecycleCamera, androidx.camera.core.ViewPort, java.util.List, java.util.Collection)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.camera.lifecycle.LifecycleCamera r1, r10, $r23;
        androidx.camera.core.ViewPort r2;
        java.util.List r3, $r25;
        java.util.Collection r4;
        java.lang.Object r5, $r12, $r14, $r20, $r22, $r24;
        androidx.lifecycle.LifecycleOwner r6;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r7;
        java.util.Set r8;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r9;
        java.lang.Throwable r11, $r27, $r30, r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Map $r13, $r21;
        androidx.camera.core.internal.CameraUseCaseAdapter $r15, $r16;
        androidx.lifecycle.Lifecycle $r17;
        androidx.lifecycle.Lifecycle$State $r18, $r19;
        java.lang.IllegalArgumentException $r26, $r28;
        java.lang.String $r29;
        java.util.Iterator r31;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.camera.lifecycle.LifecycleCamera;

        r2 := @parameter1: androidx.camera.core.ViewPort;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.Collection;

        $r12 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r5 = $r12;

        entermonitor $r12;

     label01:
        $z0 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z4);

        r6 = virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        r7 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r6);

        $r13 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (java.util.Set) $r14;

        r31 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r20 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r20;

        $r21 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        $r23 = (androidx.camera.lifecycle.LifecycleCamera) $r22;

        $r24 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r23);

        r10 = (androidx.camera.lifecycle.LifecycleCamera) $r24;

        $z2 = virtualinvoke r10.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label05;

        $r25 = virtualinvoke r10.<androidx.camera.lifecycle.LifecycleCamera: java.util.List getUseCases()>();

        $z3 = interfaceinvoke $r25.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label05;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Multiple LifecycleCameras with use cases are registered to the same LifecycleOwner.");

        throw $r26;

     label05:
        goto label04;

     label06:
        $r15 = virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: androidx.camera.core.internal.CameraUseCaseAdapter getCameraUseCaseAdapter()>();

        virtualinvoke $r15.<androidx.camera.core.internal.CameraUseCaseAdapter: void setViewPort(androidx.camera.core.ViewPort)>(r2);

        $r16 = virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: androidx.camera.core.internal.CameraUseCaseAdapter getCameraUseCaseAdapter()>();

        virtualinvoke $r16.<androidx.camera.core.internal.CameraUseCaseAdapter: void setEffects(java.util.List)>(r3);

        virtualinvoke r1.<androidx.camera.lifecycle.LifecycleCamera: void bind(java.util.Collection)>(r4);

     label07:
        goto label09;

     label08:
        $r27 := @caughtexception;

        r32 = $r27;

        $r28 = new java.lang.IllegalArgumentException;

        $r29 = virtualinvoke r32.<androidx.camera.core.internal.CameraUseCaseAdapter$CameraException: java.lang.String getMessage()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label09:
        $r17 = interfaceinvoke r6.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r18 = virtualinvoke $r17.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r19 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        $z1 = virtualinvoke $r18.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r19);

        if $z1 == 0 goto label10;

        virtualinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void setActive(androidx.lifecycle.LifecycleOwner)>(r6);

     label10:
        exitmonitor r5;

     label11:
        goto label14;

     label12:
        $r30 := @caughtexception;

        r11 = $r30;

        exitmonitor r5;

     label13:
        throw r11;

     label14:
        return;

        catch androidx.camera.core.internal.CameraUseCaseAdapter$CameraException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void unbind(java.util.Collection)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        java.util.Collection r1;
        java.lang.Object r2, $r7, $r10, $r12;
        java.util.Iterator r3;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r4;
        androidx.camera.lifecycle.LifecycleCamera r5;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable r6, $r16;
        java.util.Map $r8, $r11;
        java.util.Set $r9;
        java.util.List $r13, $r14;
        androidx.lifecycle.LifecycleOwner $r15;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: java.util.Collection;

        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r10;

        $r11 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (androidx.camera.lifecycle.LifecycleCamera) $r12;

        $r13 = virtualinvoke r5.<androidx.camera.lifecycle.LifecycleCamera: java.util.List getUseCases()>();

        $z2 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z0 = $z4;

        virtualinvoke r5.<androidx.camera.lifecycle.LifecycleCamera: void unbind(java.util.Collection)>(r1);

        if z0 == 0 goto label05;

        $r14 = virtualinvoke r5.<androidx.camera.lifecycle.LifecycleCamera: java.util.List getUseCases()>();

        $z3 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label05;

        $r15 = virtualinvoke r5.<androidx.camera.lifecycle.LifecycleCamera: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        virtualinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void setInactive(androidx.lifecycle.LifecycleOwner)>($r15);

     label05:
        goto label02;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r2;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void unbindAll()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        java.lang.Object r1, $r6, $r9, $r11;
        java.util.Iterator r2;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r3;
        androidx.camera.lifecycle.LifecycleCamera r4;
        java.lang.Throwable r5, $r13;
        java.util.Map $r7, $r10;
        java.util.Set $r8;
        boolean $z0;
        androidx.lifecycle.LifecycleOwner $r12;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r9;

        $r10 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (androidx.camera.lifecycle.LifecycleCamera) $r11;

        virtualinvoke r4.<androidx.camera.lifecycle.LifecycleCamera: void unbindAll()>();

        $r12 = virtualinvoke r4.<androidx.camera.lifecycle.LifecycleCamera: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>();

        virtualinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void setInactive(androidx.lifecycle.LifecycleOwner)>($r12);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r1;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void setActive(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1, r3;
        java.lang.Object r2, $r5, $r8;
        java.lang.Throwable r4, $r12;
        boolean $z0, $z1, $z2;
        java.util.ArrayDeque $r6, $r7, $r9, $r10, $r11;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r5 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $z0 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: boolean hasUseCaseBound(androidx.lifecycle.LifecycleOwner)>(r1);

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        $z1 = virtualinvoke $r6.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r11 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        virtualinvoke $r11.<java.util.ArrayDeque: void push(java.lang.Object)>(r1);

        goto label5;

     label4:
        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        $r8 = virtualinvoke $r7.<java.util.ArrayDeque: java.lang.Object peek()>();

        r3 = (androidx.lifecycle.LifecycleOwner) $r8;

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label5;

        specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void suspendUseCases(androidx.lifecycle.LifecycleOwner)>(r3);

        $r9 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        virtualinvoke $r9.<java.util.ArrayDeque: boolean remove(java.lang.Object)>(r1);

        $r10 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        virtualinvoke $r10.<java.util.ArrayDeque: void push(java.lang.Object)>(r1);

     label5:
        specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void unsuspendUseCases(androidx.lifecycle.LifecycleOwner)>(r1);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void setInactive(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1, r3;
        java.lang.Object r2, $r5, $r9;
        java.lang.Throwable r4, $r10;
        java.util.ArrayDeque $r6, $r7, $r8;
        boolean $z1;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r5 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        virtualinvoke $r6.<java.util.ArrayDeque: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void suspendUseCases(androidx.lifecycle.LifecycleOwner)>(r1);

        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        $z1 = virtualinvoke $r7.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.ArrayDeque mActiveLifecycleOwners>;

        $r9 = virtualinvoke $r8.<java.util.ArrayDeque: java.lang.Object peek()>();

        r3 = (androidx.lifecycle.LifecycleOwner) $r9;

        specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: void unsuspendUseCases(androidx.lifecycle.LifecycleOwner)>(r3);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private boolean hasUseCaseBound(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1;
        java.lang.Object r2, $r8, $r10, $r11, $r13, $r15;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r3;
        java.util.Set r4;
        java.util.Iterator r5;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r6;
        java.lang.Throwable r7, $r18;
        java.util.Map $r9, $r12;
        boolean $z0, $z1;
        androidx.camera.lifecycle.LifecycleCamera $r14, $r16;
        java.util.List $r17;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r8;

        entermonitor $r8;

     label01:
        r3 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r1);

        if r3 != null goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        $r9 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.Set) $r10;

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r11;

        $r12 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r14 = (androidx.camera.lifecycle.LifecycleCamera) $r13;

        $r15 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        $r16 = (androidx.camera.lifecycle.LifecycleCamera) $r15;

        $r17 = virtualinvoke $r16.<androidx.camera.lifecycle.LifecycleCamera: java.util.List getUseCases()>();

        $z1 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label06;

        exitmonitor r2;

     label05:
        return 1;

     label06:
        goto label04;

     label07:
        exitmonitor r2;

     label08:
        return 0;

     label09:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r2;

     label10:
        throw r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void suspendUseCases(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1;
        java.lang.Object r2, $r7, $r9, $r11, $r13, $r15;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r3;
        java.util.Iterator r4;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r5;
        java.lang.Throwable r6, $r17;
        java.util.Map $r8, $r12;
        java.util.Set $r10;
        boolean $z0;
        androidx.camera.lifecycle.LifecycleCamera $r14, $r16;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r7 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        r3 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r1);

        if r3 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r10 = (java.util.Set) $r9;

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r11;

        $r12 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (androidx.camera.lifecycle.LifecycleCamera) $r13;

        $r15 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        $r16 = (androidx.camera.lifecycle.LifecycleCamera) $r15;

        virtualinvoke $r16.<androidx.camera.lifecycle.LifecycleCamera: void suspend()>();

        goto label4;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r2;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void unsuspendUseCases(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository r0;
        androidx.lifecycle.LifecycleOwner r1;
        java.lang.Object r2, $r8, $r10, $r12, $r14, $r15;
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r3;
        java.util.Iterator r4;
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r5;
        androidx.camera.lifecycle.LifecycleCamera r6, $r16;
        java.lang.Throwable r7, $r18;
        java.util.Map $r9, $r13;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.util.List $r17;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r8 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.lang.Object mLock>;

        r2 = $r8;

        entermonitor $r8;

     label1:
        r3 = specialinvoke r0.<androidx.camera.lifecycle.LifecycleCameraRepository: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver getLifecycleCameraRepositoryObserver(androidx.lifecycle.LifecycleOwner)>(r1);

        $r9 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mLifecycleObserverMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r11 = (java.util.Set) $r10;

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.camera.lifecycle.LifecycleCameraRepository$Key) $r12;

        $r13 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository: java.util.Map mCameraMap>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (androidx.camera.lifecycle.LifecycleCamera) $r14;

        $r15 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r6);

        $r16 = (androidx.camera.lifecycle.LifecycleCamera) $r15;

        $r17 = virtualinvoke $r16.<androidx.camera.lifecycle.LifecycleCamera: java.util.List getUseCases()>();

        $z1 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        virtualinvoke r6.<androidx.camera.lifecycle.LifecycleCamera: void unsuspend()>();

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r7 = $r18;

        exitmonitor r2;

     label7:
        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

androidx.camera.lifecycle.LifecycleCameraRepository$Key
    void <init>()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$Key r0;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$Key;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.camera.lifecycle.LifecycleCameraRepository$Key create(androidx.lifecycle.LifecycleOwner, androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)
    {
        androidx.lifecycle.LifecycleOwner r0;
        androidx.camera.core.internal.CameraUseCaseAdapter$CameraId r1;
        androidx.camera.lifecycle.AutoValue_LifecycleCameraRepository_Key $r2;

        r0 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r1 := @parameter1: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId;

        $r2 = new androidx.camera.lifecycle.AutoValue_LifecycleCameraRepository_Key;

        specialinvoke $r2.<androidx.camera.lifecycle.AutoValue_LifecycleCameraRepository_Key: void <init>(androidx.lifecycle.LifecycleOwner,androidx.camera.core.internal.CameraUseCaseAdapter$CameraId)>(r0, r1);

        return $r2;
    }

<androidx.camera.lifecycle.LifecycleCameraRepository$Key: androidx.lifecycle.LifecycleOwner getLifecycleOwner()>
<androidx.camera.lifecycle.LifecycleCameraRepository$Key: androidx.camera.core.internal.CameraUseCaseAdapter$CameraId getCameraId()>
androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver
<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.camera.lifecycle.LifecycleCameraRepository mLifecycleCameraRepository>
<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner mLifecycleOwner>
    void <init>(androidx.lifecycle.LifecycleOwner, androidx.camera.lifecycle.LifecycleCameraRepository)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.lifecycle.LifecycleCameraRepository r2;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.camera.lifecycle.LifecycleCameraRepository;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = r1;

        r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.camera.lifecycle.LifecycleCameraRepository mLifecycleCameraRepository> = r2;

        return;
    }

    androidx.lifecycle.LifecycleOwner getLifecycleOwner()
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r0;
        androidx.lifecycle.LifecycleOwner $r1;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        $r1 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        return $r1;
    }

    public void onStart(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.lifecycle.LifecycleCameraRepository $r2;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.camera.lifecycle.LifecycleCameraRepository mLifecycleCameraRepository>;

        virtualinvoke $r2.<androidx.camera.lifecycle.LifecycleCameraRepository: void setActive(androidx.lifecycle.LifecycleOwner)>(r1);

        return;
    }

    public void onStop(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.lifecycle.LifecycleCameraRepository $r2;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.camera.lifecycle.LifecycleCameraRepository mLifecycleCameraRepository>;

        virtualinvoke $r2.<androidx.camera.lifecycle.LifecycleCameraRepository: void setInactive(androidx.lifecycle.LifecycleOwner)>(r1);

        return;
    }

    public void onDestroy(androidx.lifecycle.LifecycleOwner)
    {
        androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.camera.lifecycle.LifecycleCameraRepository $r2;

        r0 := @this: androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = r0.<androidx.camera.lifecycle.LifecycleCameraRepository$LifecycleCameraRepositoryObserver: androidx.camera.lifecycle.LifecycleCameraRepository mLifecycleCameraRepository>;

        virtualinvoke $r2.<androidx.camera.lifecycle.LifecycleCameraRepository: void unregisterLifecycle(androidx.lifecycle.LifecycleOwner)>(r1);

        return;
    }

