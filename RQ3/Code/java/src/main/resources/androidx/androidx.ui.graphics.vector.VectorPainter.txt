androidx.ui.graphics.vector.VectorPainter
<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.vector.VectorComponent vector>
<androidx.ui.graphics.vector.VectorPainter: float currentAlpha>
<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.ColorFilter currentColorFilter>
<androidx.ui.graphics.vector.VectorPainter: androidx.ui.unit.PxSize intrinsicSize>
    public void <init>(androidx.ui.graphics.vector.VectorComponent)
    {
        androidx.ui.graphics.vector.VectorPainter r0, r5, r6, r7;
        androidx.ui.graphics.vector.VectorComponent r1, $r2, $r3;
        float f0, f1, f2, $f3, $f4, f5, f6, f7, f8, $f9;
        boolean z1, z2, z3;
        long l0, l1, l2, l3, $l8, $l9;
        double $d0, $d1, $d2, $d3;
        int $i4, $i5, $i6, $i7, i10, i11;
        androidx.ui.unit.PxSize $r4, r8;

        r0 := @this: androidx.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.ui.graphics.vector.VectorComponent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "vector");

        specialinvoke r0.<androidx.ui.graphics.painter.Painter: void <init>()>();

        r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.vector.VectorComponent vector> = r1;

        r0.<androidx.ui.graphics.vector.VectorPainter: float currentAlpha> = 1.0F;

        $r2 = r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.vector.VectorComponent vector>;

        f5 = virtualinvoke $r2.<androidx.ui.graphics.vector.VectorComponent: float getDefaultWidth()>();

        r5 = r0;

        z3 = 0;

        $d0 = (double) f5;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        f6 = (float) $d1;

        $i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f6);

        i10 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i4);

        $r3 = r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.vector.VectorComponent vector>;

        f7 = virtualinvoke $r3.<androidx.ui.graphics.vector.VectorComponent: float getDefaultHeight()>();

        r6 = r5;

        $d2 = (double) f7;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        f8 = (float) $d3;

        $i5 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f8);

        i11 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i5);

        r7 = r6;

        $f3 = (float) i10;

        $f9 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        $f4 = (float) i11;

        f0 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f4);

        f1 = $f9;

        z1 = 0;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l0 = (long) $i6;

        f2 = f0;

        z2 = 0;

        $i7 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l1 = (long) $i7;

        $l9 = l0 << 32;

        $l8 = l1 & 4294967295L;

        l2 = $l9 | $l8;

        l3 = l2;

        $r4 = new androidx.ui.unit.PxSize;

        specialinvoke $r4.<androidx.ui.unit.PxSize: void <init>(long)>(l3);

        r8 = $r4;

        r7.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.unit.PxSize intrinsicSize> = r8;

        return;
    }

    public androidx.ui.unit.PxSize getIntrinsicSize()
    {
        androidx.ui.graphics.vector.VectorPainter r0;
        androidx.ui.unit.PxSize $r1;

        r0 := @this: androidx.ui.graphics.vector.VectorPainter;

        $r1 = r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.unit.PxSize intrinsicSize>;

        return $r1;
    }

    protected void onDraw(androidx.ui.graphics.Canvas, androidx.ui.unit.PxSize)
    {
        androidx.ui.graphics.vector.VectorPainter r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.unit.PxSize r2;
        androidx.ui.graphics.ColorFilter $r3;
        float $f0;
        androidx.ui.graphics.vector.VectorComponent $r4;

        r0 := @this: androidx.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        r2 := @parameter1: androidx.ui.unit.PxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "bounds");

        $r4 = r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.vector.VectorComponent vector>;

        $f0 = r0.<androidx.ui.graphics.vector.VectorPainter: float currentAlpha>;

        $r3 = r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.ColorFilter currentColorFilter>;

        virtualinvoke $r4.<androidx.ui.graphics.vector.VectorComponent: void draw(androidx.ui.graphics.Canvas,float,androidx.ui.graphics.ColorFilter)>(r1, $f0, $r3);

        return;
    }

    protected boolean applyAlpha(float)
    {
        androidx.ui.graphics.vector.VectorPainter r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.VectorPainter;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.VectorPainter: float currentAlpha> = f0;

        return 1;
    }

    protected boolean applyColorFilter(androidx.ui.graphics.ColorFilter)
    {
        androidx.ui.graphics.vector.VectorPainter r0;
        androidx.ui.graphics.ColorFilter r1;

        r0 := @this: androidx.ui.graphics.vector.VectorPainter;

        r1 := @parameter0: androidx.ui.graphics.ColorFilter;

        r0.<androidx.ui.graphics.vector.VectorPainter: androidx.ui.graphics.ColorFilter currentColorFilter> = r1;

        return 1;
    }

