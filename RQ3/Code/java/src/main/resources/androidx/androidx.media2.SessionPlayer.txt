androidx.media2.SessionPlayer
<androidx.media2.SessionPlayer: java.lang.String TAG>
<androidx.media2.SessionPlayer: int PLAYER_STATE_IDLE>
<androidx.media2.SessionPlayer: int PLAYER_STATE_PAUSED>
<androidx.media2.SessionPlayer: int PLAYER_STATE_PLAYING>
<androidx.media2.SessionPlayer: int PLAYER_STATE_ERROR>
<androidx.media2.SessionPlayer: int BUFFERING_STATE_UNKNOWN>
<androidx.media2.SessionPlayer: int BUFFERING_STATE_BUFFERING_AND_PLAYABLE>
<androidx.media2.SessionPlayer: int BUFFERING_STATE_BUFFERING_AND_STARVED>
<androidx.media2.SessionPlayer: int BUFFERING_STATE_COMPLETE>
<androidx.media2.SessionPlayer: int REPEAT_MODE_NONE>
<androidx.media2.SessionPlayer: int REPEAT_MODE_ONE>
<androidx.media2.SessionPlayer: int REPEAT_MODE_ALL>
<androidx.media2.SessionPlayer: int REPEAT_MODE_GROUP>
<androidx.media2.SessionPlayer: int SHUFFLE_MODE_NONE>
<androidx.media2.SessionPlayer: int SHUFFLE_MODE_ALL>
<androidx.media2.SessionPlayer: int SHUFFLE_MODE_GROUP>
<androidx.media2.SessionPlayer: long UNKNOWN_TIME>
<androidx.media2.SessionPlayer: java.lang.Object mLock>
<androidx.media2.SessionPlayer: java.util.List mCallbacks>
    public void <init>()
    {
        androidx.media2.SessionPlayer r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media2.SessionPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.SessionPlayer: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks> = $r2;

        return;
    }

<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture play()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture pause()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture prepare()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture seekTo(long)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setPlaybackSpeed(float)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setAudioAttributes(androidx.media.AudioAttributesCompat)>
<androidx.media2.SessionPlayer: int getPlayerState()>
<androidx.media2.SessionPlayer: long getCurrentPosition()>
<androidx.media2.SessionPlayer: long getDuration()>
<androidx.media2.SessionPlayer: long getBufferedPosition()>
<androidx.media2.SessionPlayer: int getBufferingState()>
<androidx.media2.SessionPlayer: float getPlaybackSpeed()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setPlaylist(java.util.List,androidx.media2.MediaMetadata)>
<androidx.media2.SessionPlayer: androidx.media.AudioAttributesCompat getAudioAttributes()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setMediaItem(androidx.media2.MediaItem)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture addPlaylistItem(int,androidx.media2.MediaItem)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture removePlaylistItem(int)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture replacePlaylistItem(int,androidx.media2.MediaItem)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToPreviousPlaylistItem()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToNextPlaylistItem()>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToPlaylistItem(int)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture updatePlaylistMetadata(androidx.media2.MediaMetadata)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setRepeatMode(int)>
<androidx.media2.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setShuffleMode(int)>
<androidx.media2.SessionPlayer: java.util.List getPlaylist()>
<androidx.media2.SessionPlayer: androidx.media2.MediaMetadata getPlaylistMetadata()>
<androidx.media2.SessionPlayer: int getRepeatMode()>
<androidx.media2.SessionPlayer: int getShuffleMode()>
<androidx.media2.SessionPlayer: androidx.media2.MediaItem getCurrentMediaItem()>
<androidx.media2.SessionPlayer: int getCurrentMediaItemIndex()>
<androidx.media2.SessionPlayer: int getPreviousMediaItemIndex()>
<androidx.media2.SessionPlayer: int getNextMediaItemIndex()>
    public final void registerPlayerCallback(java.util.concurrent.Executor, androidx.media2.SessionPlayer$PlayerCallback)
    {
        androidx.media2.SessionPlayer r0;
        java.util.concurrent.Executor r1;
        androidx.media2.SessionPlayer$PlayerCallback r2;
        java.lang.Object r3, $r7, $r11, $r12, $r13;
        java.util.Iterator r4;
        androidx.core.util.Pair r5, $r9;
        java.lang.Throwable r6, $r16;
        java.util.List $r8, $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r14, $r15;

        r0 := @this: androidx.media2.SessionPlayer;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.media2.SessionPlayer$PlayerCallback;

        if r1 != null goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r15;

     label01:
        if r2 != null goto label02;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r14;

     label02:
        $r7 = r0.<androidx.media2.SessionPlayer: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.core.util.Pair) $r11;

        $r12 = r5.<androidx.core.util.Pair: java.lang.Object first>;

        if $r12 != r2 goto label06;

        $r13 = r5.<androidx.core.util.Pair: java.lang.Object second>;

        if $r13 == null goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SessionPlayer", "callback is already added. Ignoring.");

        exitmonitor r3;

     label05:
        return;

     label06:
        goto label04;

     label07:
        $r10 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        $r9 = new androidx.core.util.Pair;

        specialinvoke $r9.<androidx.core.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final void unregisterPlayerCallback(androidx.media2.SessionPlayer$PlayerCallback)
    {
        androidx.media2.SessionPlayer r0;
        androidx.media2.SessionPlayer$PlayerCallback r1;
        java.lang.Object r2, $r4, $r7, $r9;
        java.lang.Throwable r3, $r13;
        java.util.List $r5, $r6, $r10;
        int $i0, i1;
        androidx.core.util.Pair $r8;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: androidx.media2.SessionPlayer;

        r1 := @parameter0: androidx.media2.SessionPlayer$PlayerCallback;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r12;

     label1:
        $r4 = r0.<androidx.media2.SessionPlayer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label5;

        $r6 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (androidx.core.util.Pair) $r7;

        $r9 = $r8.<androidx.core.util.Pair: java.lang.Object first>;

        if $r9 != r1 goto label4;

        $r10 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i1);

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected final java.util.List getCallbacks()
    {
        androidx.media2.SessionPlayer r0;
        java.util.ArrayList r1, $r4;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r7;
        java.util.List $r6;

        r0 := @this: androidx.media2.SessionPlayer;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.media2.SessionPlayer: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media2.SessionPlayer: java.util.List mCallbacks>;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.media2.SessionPlayer$BuffState
androidx.media2.SessionPlayer$PlayerCallback
    public void <init>()
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPlayerStateChanged(androidx.media2.SessionPlayer, int)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onBufferingStateChanged(androidx.media2.SessionPlayer, androidx.media2.MediaItem, int)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        androidx.media2.MediaItem r2;
        int i0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        r2 := @parameter1: androidx.media2.MediaItem;

        i0 := @parameter2: int;

        return;
    }

    public void onPlaybackSpeedChanged(androidx.media2.SessionPlayer, float)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        float f0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        f0 := @parameter1: float;

        return;
    }

    public void onSeekCompleted(androidx.media2.SessionPlayer, long)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        long l0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        l0 := @parameter1: long;

        return;
    }

    public void onPlaylistChanged(androidx.media2.SessionPlayer, java.util.List, androidx.media2.MediaMetadata)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        java.util.List r2;
        androidx.media2.MediaMetadata r3;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.media2.MediaMetadata;

        return;
    }

    public void onPlaylistMetadataChanged(androidx.media2.SessionPlayer, androidx.media2.MediaMetadata)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        androidx.media2.MediaMetadata r2;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        r2 := @parameter1: androidx.media2.MediaMetadata;

        return;
    }

    public void onShuffleModeChanged(androidx.media2.SessionPlayer, int)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onRepeatModeChanged(androidx.media2.SessionPlayer, int)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onCurrentMediaItemChanged(androidx.media2.SessionPlayer, androidx.media2.MediaItem)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        androidx.media2.MediaItem r2;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        r2 := @parameter1: androidx.media2.MediaItem;

        return;
    }

    public void onPlaybackCompleted(androidx.media2.SessionPlayer)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        return;
    }

    public void onAudioAttributesChanged(androidx.media2.SessionPlayer, androidx.media.AudioAttributesCompat)
    {
        androidx.media2.SessionPlayer$PlayerCallback r0;
        androidx.media2.SessionPlayer r1;
        androidx.media.AudioAttributesCompat r2;

        r0 := @this: androidx.media2.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.SessionPlayer;

        r2 := @parameter1: androidx.media.AudioAttributesCompat;

        return;
    }

androidx.media2.SessionPlayer$PlayerResult$ResultCode
androidx.media2.SessionPlayer$PlayerResult
<androidx.media2.SessionPlayer$PlayerResult: int mResultCode>
<androidx.media2.SessionPlayer$PlayerResult: long mCompletionTime>
<androidx.media2.SessionPlayer$PlayerResult: androidx.media2.MediaItem mItem>
    public void <init>(int, androidx.media2.MediaItem)
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        int i0;
        androidx.media2.MediaItem r1;
        long $l1;

        r0 := @this: androidx.media2.SessionPlayer$PlayerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.MediaItem;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media2.SessionPlayer$PlayerResult: void <init>(int,androidx.media2.MediaItem,long)>(i0, r1, $l1);

        return;
    }

    private void <init>(int, androidx.media2.MediaItem, long)
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        int i0;
        androidx.media2.MediaItem r1;
        long l1;

        r0 := @this: androidx.media2.SessionPlayer$PlayerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.MediaItem;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.SessionPlayer$PlayerResult: int mResultCode> = i0;

        r0.<androidx.media2.SessionPlayer$PlayerResult: androidx.media2.MediaItem mItem> = r1;

        r0.<androidx.media2.SessionPlayer$PlayerResult: long mCompletionTime> = l1;

        return;
    }

    static com.google.common.util.concurrent.ListenableFuture createFuture(int)
    {
        int i0;
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.media2.SessionPlayer$PlayerResult $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r1 = new androidx.media2.SessionPlayer$PlayerResult;

        specialinvoke $r1.<androidx.media2.SessionPlayer$PlayerResult: void <init>(int,androidx.media2.MediaItem)>(i0, null);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r1);

        return r0;
    }

    public int getResultCode()
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        int $i0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerResult;

        $i0 = r0.<androidx.media2.SessionPlayer$PlayerResult: int mResultCode>;

        return $i0;
    }

    public long getCompletionTime()
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        long $l0;

        r0 := @this: androidx.media2.SessionPlayer$PlayerResult;

        $l0 = r0.<androidx.media2.SessionPlayer$PlayerResult: long mCompletionTime>;

        return $l0;
    }

    public androidx.media2.MediaItem getMediaItem()
    {
        androidx.media2.SessionPlayer$PlayerResult r0;
        androidx.media2.MediaItem $r1;

        r0 := @this: androidx.media2.SessionPlayer$PlayerResult;

        $r1 = r0.<androidx.media2.SessionPlayer$PlayerResult: androidx.media2.MediaItem mItem>;

        return $r1;
    }

androidx.media2.SessionPlayer$PlayerState
androidx.media2.SessionPlayer$RepeatMode
androidx.media2.SessionPlayer$ShuffleMode
