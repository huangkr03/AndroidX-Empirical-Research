org.junit.runner.manipulation.Sorter
<org.junit.runner.manipulation.Sorter: org.junit.runner.manipulation.Sorter NULL>
<org.junit.runner.manipulation.Sorter: java.util.Comparator comparator>
    static void <clinit>()
    {
        org.junit.runner.manipulation.Sorter $r0;
        org.junit.runner.manipulation.Sorter$1 $r1;

        $r0 = new org.junit.runner.manipulation.Sorter;

        $r1 = new org.junit.runner.manipulation.Sorter$1;

        specialinvoke $r1.<org.junit.runner.manipulation.Sorter$1: void <init>()>();

        specialinvoke $r0.<org.junit.runner.manipulation.Sorter: void <init>(java.util.Comparator)>($r1);

        <org.junit.runner.manipulation.Sorter: org.junit.runner.manipulation.Sorter NULL> = $r0;

        return;
    }

    public void <init>(java.util.Comparator)
    {
        org.junit.runner.manipulation.Sorter $r0;
        java.util.Comparator $r1;

        $r0 := @this: org.junit.runner.manipulation.Sorter;

        $r1 := @parameter0: java.util.Comparator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.junit.runner.manipulation.Sorter: java.util.Comparator comparator> = $r1;

        return;
    }

    public void apply(java.lang.Object)
    {
        org.junit.runner.manipulation.Sorter $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.junit.runner.manipulation.Sortable $r2;

        $r0 := @this: org.junit.runner.manipulation.Sorter;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof org.junit.runner.manipulation.Sortable;

        if $z0 == 0 goto label1;

        $r2 = (org.junit.runner.manipulation.Sortable) $r1;

        interfaceinvoke $r2.<org.junit.runner.manipulation.Sortable: void sort(org.junit.runner.manipulation.Sorter)>($r0);

     label1:
        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.junit.runner.manipulation.Sorter $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.junit.runner.Description $r3, $r4;

        $r0 := @this: org.junit.runner.manipulation.Sorter;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.junit.runner.Description) $r1;

        $r4 = (org.junit.runner.Description) $r2;

        $i0 = virtualinvoke $r0.<org.junit.runner.manipulation.Sorter: int compare(org.junit.runner.Description,org.junit.runner.Description)>($r3, $r4);

        return $i0;
    }

    public int compare(org.junit.runner.Description, org.junit.runner.Description)
    {
        org.junit.runner.manipulation.Sorter $r0;
        org.junit.runner.Description $r1, $r2;
        int $i0;
        java.util.Comparator $r3;

        $r0 := @this: org.junit.runner.manipulation.Sorter;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 := @parameter1: org.junit.runner.Description;

        $r3 = $r0.<org.junit.runner.manipulation.Sorter: java.util.Comparator comparator>;

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $i0;
    }

org.junit.runner.manipulation.Sorter$1
    void <init>()
    {
        org.junit.runner.manipulation.Sorter$1 $r0;

        $r0 := @this: org.junit.runner.manipulation.Sorter$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.junit.runner.manipulation.Sorter$1 $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        org.junit.runner.Description $r3, $r4;

        $r0 := @this: org.junit.runner.manipulation.Sorter$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (org.junit.runner.Description) $r1;

        $r4 = (org.junit.runner.Description) $r2;

        $i0 = virtualinvoke $r0.<org.junit.runner.manipulation.Sorter$1: int compare(org.junit.runner.Description,org.junit.runner.Description)>($r3, $r4);

        return $i0;
    }

    public int compare(org.junit.runner.Description, org.junit.runner.Description)
    {
        org.junit.runner.manipulation.Sorter$1 $r0;
        org.junit.runner.Description $r1, $r2;

        $r0 := @this: org.junit.runner.manipulation.Sorter$1;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 := @parameter1: org.junit.runner.Description;

        return 0;
    }

