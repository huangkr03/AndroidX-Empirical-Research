androidx.benchmark.InstrumentationResults
<androidx.benchmark.InstrumentationResults: androidx.benchmark.InstrumentationResults INSTANCE>
<androidx.benchmark.InstrumentationResults: java.lang.String STUDIO_OUTPUT_KEY_ID>
<androidx.benchmark.InstrumentationResults: android.os.Bundle runEndResultBundle>
    private void <init>()
    {
        androidx.benchmark.InstrumentationResults r0;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.os.Bundle getRunEndResultBundle()
    {
        androidx.benchmark.InstrumentationResults r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        $r1 = <androidx.benchmark.InstrumentationResults: android.os.Bundle runEndResultBundle>;

        return $r1;
    }

    public final void instrumentationReport(kotlin.jvm.functions.Function1)
    {
        androidx.benchmark.InstrumentationResults r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.benchmark.InstrumentationResultScope r2, $r3;
        android.os.Bundle $r5;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r3 = new androidx.benchmark.InstrumentationResultScope;

        specialinvoke $r3.<androidx.benchmark.InstrumentationResultScope: void <init>(android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r2 = $r3;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r5 = virtualinvoke r2.<androidx.benchmark.InstrumentationResultScope: android.os.Bundle getBundle()>();

        virtualinvoke r0.<androidx.benchmark.InstrumentationResults: void reportBundle$benchmark_common_release(android.os.Bundle)>($r5);

        return;
    }

    public final java.lang.String ideSummaryLine$benchmark_common_release(java.lang.String, double, java.lang.Double, java.lang.String, androidx.benchmark.Profiler$ResultFile)
    {
        androidx.benchmark.InstrumentationResults r0;
        java.lang.String r1, r3, r7, $r19, $r22, $r28, $r36, $r37, $r39, $r41, r43, $r45, r48, $r50, r53;
        double d0, $d1;
        java.lang.Double r2, $r8;
        androidx.benchmark.Profiler$ResultFile r4;
        java.lang.String[] r5, $r40, r42, $r44, r47, $r49, r52;
        java.lang.Object[] r6, $r9, $r12, $r32, r35, r38;
        byte $b0, $b7, b8, $b9, b10, $b11, b12;
        int $i2, $i3, $i4, $i6;
        java.lang.Number $r10;
        java.lang.Integer $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r23, $r24;
        java.util.List $r25;
        java.lang.CharSequence $r26;
        java.lang.Iterable $r27;
        long $l5;
        java.lang.Long $r31;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.Double;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: androidx.benchmark.Profiler$ResultFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        r5 = newarray (java.lang.String)[5];

        $b0 = d0 cmpl 100.0;

        if $b0 < 0 goto label1;

        r35 = newarray (java.lang.Object)[1];

        $l5 = (long) d0;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        r35[0] = $r31;

        $i6 = lengthof r35;

        $r32 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r35, $i6);

        $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,13d   ns", $r32);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r36, "format(this, *args)");

        $r37 = $r36;

        goto label2;

     label1:
        r38 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r38[0] = $r8;

        $i2 = lengthof r38;

        $r9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r38, $i2);

        $r39 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,15.1f ns", $r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r39, "format(this, *args)");

        $r37 = $r39;

     label2:
        r5[0] = $r37;

        $r40 = r5;

        $b7 = 1;

        if r2 != null goto label3;

        $r41 = null;

        goto label4;

     label3:
        $r10 = (java.lang.Number) r2;

        virtualinvoke $r10.<java.lang.Number: double doubleValue()>();

        b8 = 1;

        r42 = r5;

        r6 = newarray (java.lang.Object)[1];

        $d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $i3 = (int) $d1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r6[0] = $r11;

        $i4 = lengthof r6;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r6, $i4);

        r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%8d allocs", $r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "format(this, *args)");

        r43 = r7;

        $r40 = r42;

        $b7 = b8;

        $r41 = r43;

     label4:
        $r40[$b7] = $r41;

        $r44 = r5;

        $b9 = 2;

        if r3 != null goto label5;

        $r45 = null;

        goto label6;

     label5:
        b10 = 2;

        r47 = r5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[trace](file://");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        r48 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = r47;

        $b9 = b10;

        $r45 = r48;

     label6:
        $r44[$b9] = $r45;

        $r49 = r5;

        $b11 = 3;

        if r4 != null goto label7;

        $r50 = null;

        goto label8;

     label7:
        b12 = 3;

        r52 = r5;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r19 = virtualinvoke r4.<androidx.benchmark.Profiler$ResultFile: java.lang.String getLabel()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("](file://");

        $r22 = virtualinvoke r4.<androidx.benchmark.Profiler$ResultFile: java.lang.String getOutputRelativePath()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        r53 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = r52;

        $b11 = b12;

        $r50 = r53;

     label8:
        $r49[$b11] = $r50;

        r5[4] = r1;

        $r25 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])>(r5);

        $r27 = (java.lang.Iterable) $r25;

        $r26 = (java.lang.CharSequence) "    ";

        $r28 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r27, $r26, null, null, 0, null, null, 62, null);

        return $r28;
    }

    public final void reportAdditionalFileToCopy(java.lang.String, java.lang.String, boolean)
    {
        androidx.benchmark.InstrumentationResults r0;
        java.lang.String r1, r2;
        boolean z0;
        androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        androidx.benchmark.InstrumentationResultScope $r5;
        android.os.Bundle $r6;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "absoluteFilePath");

        if z0 == 0 goto label1;

        $r5 = new androidx.benchmark.InstrumentationResultScope;

        $r6 = <androidx.benchmark.InstrumentationResults: android.os.Bundle runEndResultBundle>;

        specialinvoke $r5.<androidx.benchmark.InstrumentationResultScope: void <init>(android.os.Bundle)>($r6);

        virtualinvoke $r5.<androidx.benchmark.InstrumentationResultScope: void fileRecord(java.lang.String,java.lang.String)>(r1, r2);

        goto label2;

     label1:
        $r3 = new androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1;

        specialinvoke $r3.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        virtualinvoke r0.<androidx.benchmark.InstrumentationResults: void instrumentationReport(kotlin.jvm.functions.Function1)>($r4);

     label2:
        return;
    }

    public static void reportAdditionalFileToCopy$default(androidx.benchmark.InstrumentationResults, java.lang.String, java.lang.String, boolean, int, java.lang.Object)
    {
        androidx.benchmark.InstrumentationResults r0;
        java.lang.String r1, r2;
        int i0, $i1;
        java.lang.Object r3;
        boolean z0;

        r0 := @parameter0: androidx.benchmark.InstrumentationResults;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        virtualinvoke r0.<androidx.benchmark.InstrumentationResults: void reportAdditionalFileToCopy(java.lang.String,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    public final java.lang.String ideSummaryLineWrapped$benchmark_common_release(java.lang.String, double, java.lang.Double, java.lang.String, androidx.benchmark.Profiler$ResultFile)
    {
        androidx.benchmark.InstrumentationResults r0;
        java.lang.String r1, r3, r10, $r12, $r15, $r21;
        double d0;
        java.lang.Double r2;
        androidx.benchmark.Profiler$ResultFile r4;
        java.util.List r5, $r16, $r18, $r24, $r27;
        java.util.Collection r6, $r14;
        java.util.Iterator r7;
        java.lang.Object r8, r9;
        int i0, i1, i2, i3, i4;
        androidx.benchmark.Errors $r11;
        java.lang.CharSequence $r13, $r19, $r22;
        java.util.ArrayList $r17;
        java.lang.Iterable $r20, $r23;
        boolean $z6, $z7, $z8, $z9;
        java.lang.String[] $r25;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.Double;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: androidx.benchmark.Profiler$ResultFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r11 = <androidx.benchmark.Errors: androidx.benchmark.Errors INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.benchmark.Errors: java.lang.String acquireWarningStringForLogging()>();

        if $r12 != null goto label01;

        $r24 = null;

        goto label02;

     label01:
        $r13 = (java.lang.CharSequence) $r12;

        $r25 = newarray (java.lang.String)[1];

        $r25[0] = "\n";

        $r24 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r13, $r25, 0, 0, 6, null);

     label02:
        if $r24 != null goto label03;

        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label04;

     label03:
        $r27 = $r24;

     label04:
        r5 = $r27;

        $r14 = (java.util.Collection) r5;

        $r15 = virtualinvoke r0.<androidx.benchmark.InstrumentationResults: java.lang.String ideSummaryLine$benchmark_common_release(java.lang.String,double,java.lang.Double,java.lang.String,androidx.benchmark.Profiler$ResultFile)>(r1, d0, r2, r3, r4);

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r14, $r15);

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.Collection) $r17;

        i2 = 0;

        $r23 = (java.lang.Iterable) $r16;

        r7 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        i3 = i2;

        i2 = i3 + 1;

        i4 = i3;

        if i4 >= 0 goto label06;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label06:
        r9 = r8;

        i0 = i4;

        r10 = (java.lang.String) r9;

        i1 = i0;

        if i1 != 0 goto label09;

        $r22 = (java.lang.CharSequence) r10;

        $z6 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r22);

        if $z6 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        if $z8 == 0 goto label10;

     label09:
        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        if $z9 == 0 goto label12;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r9);

     label12:
        goto label05;

     label13:
        $r18 = (java.util.List) r6;

        $r20 = (java.lang.Iterable) $r18;

        $r19 = (java.lang.CharSequence) "\nbenchmark: ";

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r20, $r19, null, null, 0, null, null, 62, null);

        return $r21;
    }

    public final void reportBundle$benchmark_common_release(android.os.Bundle)
    {
        androidx.benchmark.InstrumentationResults r0;
        android.os.Bundle r1;
        android.app.Instrumentation $r2;

        r0 := @this: androidx.benchmark.InstrumentationResults;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bundle");

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r2.<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>(2, r1);

        return;
    }

    static void <clinit>()
    {
        androidx.benchmark.InstrumentationResults $r0;
        android.os.Bundle $r1;

        $r0 = new androidx.benchmark.InstrumentationResults;

        specialinvoke $r0.<androidx.benchmark.InstrumentationResults: void <init>()>();

        <androidx.benchmark.InstrumentationResults: androidx.benchmark.InstrumentationResults INSTANCE> = $r0;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        <androidx.benchmark.InstrumentationResults: android.os.Bundle runEndResultBundle> = $r1;

        return;
    }

androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1
<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $key>
<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $absoluteFilePath>
    void <init>(java.lang.String, java.lang.String)
    {
        androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1 r0;
        java.lang.String $r1, $r2;

        r0 := @this: androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r0.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $key> = $r1;

        r0.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $absoluteFilePath> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.benchmark.InstrumentationResultScope)
    {
        androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1 r0;
        androidx.benchmark.InstrumentationResultScope $r1;
        java.lang.String $r2, $r3;

        r0 := @this: androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1;

        $r1 := @parameter0: androidx.benchmark.InstrumentationResultScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$instrumentationReport");

        $r3 = r0.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $key>;

        $r2 = r0.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: java.lang.String $absoluteFilePath>;

        virtualinvoke $r1.<androidx.benchmark.InstrumentationResultScope: void fileRecord(java.lang.String,java.lang.String)>($r3, $r2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1 r0;
        java.lang.Object r1;
        androidx.benchmark.InstrumentationResultScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.benchmark.InstrumentationResultScope) r1;

        virtualinvoke r0.<androidx.benchmark.InstrumentationResults$reportAdditionalFileToCopy$1: void invoke(androidx.benchmark.InstrumentationResultScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

