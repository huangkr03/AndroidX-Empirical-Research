androidx.compose.runtime.snapshots.SnapshotContextElementImpl
<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: androidx.compose.runtime.snapshots.Snapshot snapshot>
    public void <init>(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        androidx.compose.runtime.snapshots.Snapshot r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "snapshot");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: androidx.compose.runtime.snapshots.Snapshot snapshot> = r1;

        return;
    }

    public kotlin.coroutines.CoroutineContext$Key getKey()
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        androidx.compose.runtime.snapshots.SnapshotContextElement$Key $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        $r1 = <androidx.compose.runtime.snapshots.SnapshotContextElement: androidx.compose.runtime.snapshots.SnapshotContextElement$Key Key>;

        $r2 = (kotlin.coroutines.CoroutineContext$Key) $r1;

        return $r2;
    }

    public androidx.compose.runtime.snapshots.Snapshot updateThreadContext(kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext r1;
        androidx.compose.runtime.snapshots.Snapshot $r2, $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = r0.<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: androidx.compose.runtime.snapshots.Snapshot snapshot>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot unsafeEnter()>();

        return $r3;
    }

    public void restoreThreadContext(kotlin.coroutines.CoroutineContext, androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext r1;
        androidx.compose.runtime.snapshots.Snapshot r2, $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        r2 := @parameter1: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = r0.<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: androidx.compose.runtime.snapshots.Snapshot snapshot>;

        virtualinvoke $r3.<androidx.compose.runtime.snapshots.Snapshot: void unsafeLeave(androidx.compose.runtime.snapshots.Snapshot)>(r2);

        return;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotContextElement$DefaultImpls: java.lang.Object fold(androidx.compose.runtime.snapshots.SnapshotContextElement,java.lang.Object,kotlin.jvm.functions.Function2)>(r0, r1, r2);

        return $r3;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext$Element $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(androidx.compose.runtime.snapshots.SnapshotContextElement,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext$Key r1;
        kotlin.coroutines.CoroutineContext $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(androidx.compose.runtime.snapshots.SnapshotContextElement,kotlin.coroutines.CoroutineContext$Key)>(r0, r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext r1, $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(androidx.compose.runtime.snapshots.SnapshotContextElement,kotlin.coroutines.CoroutineContext)>(r0, r1);

        return $r2;
    }

    public volatile java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext r1;
        androidx.compose.runtime.snapshots.Snapshot $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: androidx.compose.runtime.snapshots.Snapshot updateThreadContext(kotlin.coroutines.CoroutineContext)>(r1);

        return $r2;
    }

    public volatile void restoreThreadContext(kotlin.coroutines.CoroutineContext, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotContextElementImpl r0;
        kotlin.coroutines.CoroutineContext r1;
        java.lang.Object r2;
        androidx.compose.runtime.snapshots.Snapshot $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotContextElementImpl;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.compose.runtime.snapshots.Snapshot) r2;

        virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotContextElementImpl: void restoreThreadContext(kotlin.coroutines.CoroutineContext,androidx.compose.runtime.snapshots.Snapshot)>(r1, $r3);

        return;
    }

