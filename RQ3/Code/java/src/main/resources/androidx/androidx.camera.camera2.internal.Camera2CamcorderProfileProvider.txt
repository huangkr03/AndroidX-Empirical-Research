androidx.camera.camera2.internal.Camera2CamcorderProfileProvider
<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: java.lang.String TAG>
<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: boolean mHasValidCameraId>
<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: int mCameraId>
<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator mCamcorderProfileResolutionValidator>
    public void <init>(java.lang.String, androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)
    {
        androidx.camera.camera2.internal.Camera2CamcorderProfileProvider r0;
        java.lang.String r1, $r11;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat r2;
        androidx.camera.core.impl.Quirks $r3;
        androidx.camera.core.impl.Quirk $r4;
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator $r5;
        java.lang.Throwable $r6, r12;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        boolean z0;
        int i0;
        androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk r13;

        r0 := @this: androidx.camera.camera2.internal.Camera2CamcorderProfileProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        z0 = 0;

        i0 = -1;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        z0 = 1;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r12 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera id is not an integer: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", unable to create CamcorderProfileProvider");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("Camera2CamcorderProfileProvider", $r11);

     label4:
        r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: boolean mHasValidCameraId> = z0;

        r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: int mCameraId> = i0;

        $r3 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.CameraQuirks: androidx.camera.core.impl.Quirks get(java.lang.String,androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r1, r2);

        $r4 = virtualinvoke $r3.<androidx.camera.core.impl.Quirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/CamcorderProfileResolutionQuirk;");

        r13 = (androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk) $r4;

        $r5 = new androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator;

        specialinvoke $r5.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: void <init>(androidx.camera.camera2.internal.compat.quirk.CamcorderProfileResolutionQuirk)>(r13);

        r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator mCamcorderProfileResolutionValidator> = $r5;

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public boolean hasProfile(int)
    {
        androidx.camera.camera2.internal.Camera2CamcorderProfileProvider r0;
        int i0, $i1;
        androidx.camera.core.impl.CamcorderProfileProxy r1;
        boolean $z0, $z1, $z2, $z3;
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator $r2, $r3;

        r0 := @this: androidx.camera.camera2.internal.Camera2CamcorderProfileProvider;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: boolean mHasValidCameraId>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: int mCameraId>;

        $z1 = staticinvoke <android.media.CamcorderProfile: boolean hasProfile(int,int)>($i1, i0);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator mCamcorderProfileResolutionValidator>;

        $z2 = virtualinvoke $r2.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: boolean hasQuirk()>();

        if $z2 == 0 goto label3;

        r1 = specialinvoke r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.core.impl.CamcorderProfileProxy getProfileInternal(int)>(i0);

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator mCamcorderProfileResolutionValidator>;

        $z3 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: boolean hasValidVideoResolution(androidx.camera.core.impl.CamcorderProfileProxy)>(r1);

        return $z3;

     label3:
        return 1;
    }

    public androidx.camera.core.impl.CamcorderProfileProxy get(int)
    {
        androidx.camera.camera2.internal.Camera2CamcorderProfileProvider r0;
        int i0, $i1;
        androidx.camera.core.impl.CamcorderProfileProxy r1;
        boolean $z0, $z1, $z2;
        androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator $r2;

        r0 := @this: androidx.camera.camera2.internal.Camera2CamcorderProfileProvider;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: boolean mHasValidCameraId>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $i1 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: int mCameraId>;

        $z1 = staticinvoke <android.media.CamcorderProfile: boolean hasProfile(int,int)>($i1, i0);

        if $z1 != 0 goto label2;

        return null;

     label2:
        r1 = specialinvoke r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.core.impl.CamcorderProfileProxy getProfileInternal(int)>(i0);

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator mCamcorderProfileResolutionValidator>;

        $z2 = virtualinvoke $r2.<androidx.camera.camera2.internal.compat.workaround.CamcorderProfileResolutionValidator: boolean hasValidVideoResolution(androidx.camera.core.impl.CamcorderProfileProxy)>(r1);

        if $z2 != 0 goto label3;

        return null;

     label3:
        return r1;
    }

    private androidx.camera.core.impl.CamcorderProfileProxy getProfileInternal(int)
    {
        androidx.camera.camera2.internal.Camera2CamcorderProfileProvider r0;
        int i0, $i1;
        java.lang.Throwable r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        android.media.CamcorderProfile r7;
        androidx.camera.core.impl.CamcorderProfileProxy $r8;

        r0 := @this: androidx.camera.camera2.internal.Camera2CamcorderProfileProvider;

        i0 := @parameter0: int;

        r7 = null;

     label1:
        $i1 = r0.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: int mCameraId>;

        r7 = staticinvoke <android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>($i1, i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get CamcorderProfile by quality: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("Camera2CamcorderProfileProvider", $r6, r1);

     label4:
        if r7 == null goto label5;

        $r8 = staticinvoke <androidx.camera.core.impl.CamcorderProfileProxy: androidx.camera.core.impl.CamcorderProfileProxy fromCamcorderProfile(android.media.CamcorderProfile)>(r7);

        goto label6;

     label5:
        $r8 = null;

     label6:
        return $r8;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

