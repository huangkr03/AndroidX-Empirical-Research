androidx.compose.foundation.TempListUtilsKt
    public static final java.util.List fastFilter(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r7;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList r2, $r6;
        int i0, $i1, i2;
        java.lang.Object r4, r5, $r8;
        java.lang.Boolean $r9;
        boolean $z3;
        java.util.Collection $r10;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r6;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = r4;

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r9 = (java.lang.Boolean) $r8;

        $z3 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label2;

        $r10 = (java.util.Collection) r2;

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r7 = (java.util.List) r2;

        return $r7;
    }

    public static final java.lang.Object fastFold(java.util.List, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.util.List $r0;
        java.lang.Object r1, r4, r5, r6;
        kotlin.jvm.functions.Function2 r2;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r6 = r1;

        i1 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = r4;

        r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r6, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r6;
    }

    public static final java.util.List fastMapIndexedNotNull(java.util.List, kotlin.jvm.functions.Function2)
    {
        java.util.List $r0, $r8;
        kotlin.jvm.functions.Function2 r1;
        java.util.ArrayList r2, $r7;
        int i0, i1, $i2, i3;
        java.lang.Object r4, r5, r6, $r10;
        java.lang.Integer $r9;
        java.util.Collection $r11;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        $r7 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i2);

        r2 = $r7;

        i3 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i3 >= i0 goto label3;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = r4;

        i1 = i3;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r9, r5);

        if $r10 == null goto label2;

        r6 = $r10;

        $r11 = (java.util.Collection) r2;

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r8 = (java.util.List) r2;

        return $r8;
    }

    public static final java.lang.Comparable fastMaxOfOrNull(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, i2;
        java.lang.Comparable r2, r7;
        boolean $z1;
        java.lang.Object $r3, $r4, $r5, $r6;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r7 = (java.lang.Comparable) $r4;

        i2 = 1;

        i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        if i2 > i0 goto label4;

     label2:
        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        r2 = (java.lang.Comparable) $r6;

        $i1 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r7);

        if $i1 <= 0 goto label3;

        r7 = r2;

     label3:
        if i2 == i0 goto label4;

        i2 = i2 + 1;

        goto label2;

     label4:
        return r7;
    }

