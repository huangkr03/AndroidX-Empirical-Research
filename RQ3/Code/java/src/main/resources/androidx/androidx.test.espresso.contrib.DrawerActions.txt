androidx.test.espresso.contrib.DrawerActions
<androidx.test.espresso.contrib.DrawerActions: java.util.concurrent.atomic.AtomicInteger nextId>
<androidx.test.espresso.contrib.DrawerActions: int TAG>
    static volatile int '-$$Nest$sfgetTAG'()
    {
        int $i0;

        $i0 = <androidx.test.espresso.contrib.DrawerActions: int TAG>;

        return $i0;
    }

    private static int getTag()
    {
        int $i0;

        $i0 = <androidx.test.espresso.contrib.R$id: int androidx_test_espresso_contrib_drawer_layout_tag>;

        return $i0;
    }

    public static androidx.test.espresso.ViewAction close()
    {
        androidx.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: androidx.test.espresso.ViewAction close(int)>(8388611);

        return $r0;
    }

    public static androidx.test.espresso.ViewAction close(int)
    {
        int i0;
        androidx.test.espresso.contrib.DrawerActions$2 $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.test.espresso.contrib.DrawerActions$2;

        specialinvoke $r0.<androidx.test.espresso.contrib.DrawerActions$2: void <init>(int)>(i0);

        return $r0;
    }

    public static androidx.test.espresso.ViewAction open()
    {
        androidx.test.espresso.ViewAction $r0;

        $r0 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: androidx.test.espresso.ViewAction open(int)>(8388611);

        return $r0;
    }

    public static androidx.test.espresso.ViewAction open(int)
    {
        int i0;
        androidx.test.espresso.contrib.DrawerActions$1 $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.test.espresso.contrib.DrawerActions$1;

        specialinvoke $r0.<androidx.test.espresso.contrib.DrawerActions$1: void <init>(int)>(i0);

        return $r0;
    }

    static volatile java.util.concurrent.atomic.AtomicInteger '-$$Nest$sfgetnextId'()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = <androidx.test.espresso.contrib.DrawerActions: java.util.concurrent.atomic.AtomicInteger nextId>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <androidx.test.espresso.contrib.DrawerActions: java.util.concurrent.atomic.AtomicInteger nextId> = $r0;

        $i0 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: int getTag()>();

        <androidx.test.espresso.contrib.DrawerActions: int TAG> = $i0;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.contrib.DrawerActions r0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void closeDrawer(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <androidx.test.espresso.contrib.DrawerActions: void closeDrawer(int,int)>(i0, 8388611);

        return;
    }

    public static void closeDrawer(int, int)
    {
        int i0, i1;
        org.hamcrest.Matcher $r0;
        androidx.test.espresso.ViewInteraction $r1;
        androidx.test.espresso.ViewAction[] $r2;
        androidx.test.espresso.ViewAction $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withId(int)>(i0);

        $r1 = staticinvoke <androidx.test.espresso.Espresso: androidx.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (androidx.test.espresso.ViewAction)[1];

        $r3 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: androidx.test.espresso.ViewAction close(int)>(i1);

        $r2[0] = $r3;

        virtualinvoke $r1.<androidx.test.espresso.ViewInteraction: androidx.test.espresso.ViewInteraction perform(androidx.test.espresso.ViewAction[])>($r2);

        return;
    }

    public static void openDrawer(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <androidx.test.espresso.contrib.DrawerActions: void openDrawer(int,int)>(i0, 8388611);

        return;
    }

    public static void openDrawer(int, int)
    {
        int i0, i1;
        org.hamcrest.Matcher $r0;
        androidx.test.espresso.ViewInteraction $r1;
        androidx.test.espresso.ViewAction[] $r2;
        androidx.test.espresso.ViewAction $r3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher withId(int)>(i0);

        $r1 = staticinvoke <androidx.test.espresso.Espresso: androidx.test.espresso.ViewInteraction onView(org.hamcrest.Matcher)>($r0);

        $r2 = newarray (androidx.test.espresso.ViewAction)[1];

        $r3 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: androidx.test.espresso.ViewAction open(int)>(i1);

        $r2[0] = $r3;

        virtualinvoke $r1.<androidx.test.espresso.ViewInteraction: androidx.test.espresso.ViewInteraction perform(androidx.test.espresso.ViewAction[])>($r2);

        return;
    }

androidx.test.espresso.contrib.DrawerActions$1
<androidx.test.espresso.contrib.DrawerActions$1: int val$gravity>
    public java.lang.String getDescription()
    {
        androidx.test.espresso.contrib.DrawerActions$1 r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$1;

        i0 = r0.<androidx.test.espresso.contrib.DrawerActions$1: int val$gravity>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("open drawer with gravity ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    protected org.hamcrest.Matcher checkAction()
    {
        androidx.test.espresso.contrib.DrawerActions$1 r0;
        int $i0;
        org.hamcrest.Matcher $r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$1;

        $i0 = r0.<androidx.test.espresso.contrib.DrawerActions$1: int val$gravity>;

        $r1 = staticinvoke <androidx.test.espresso.contrib.DrawerMatchers: org.hamcrest.Matcher isClosed(int)>($i0);

        return $r1;
    }

    void <init>(int)
    {
        androidx.test.espresso.contrib.DrawerActions$1 r0;
        int i0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$1;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.contrib.DrawerActions$1: int val$gravity> = i0;

        specialinvoke r0.<androidx.test.espresso.contrib.DrawerActions$DrawerAction: void <init>(androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA)>(null);

        return;
    }

    protected void performAction(androidx.test.espresso.UiController, androidx.drawerlayout.widget.DrawerLayout)
    {
        androidx.test.espresso.contrib.DrawerActions$1 r0;
        androidx.test.espresso.UiController r1;
        androidx.drawerlayout.widget.DrawerLayout r2;
        int $i0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$1;

        r1 := @parameter0: androidx.test.espresso.UiController;

        r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        $i0 = r0.<androidx.test.espresso.contrib.DrawerActions$1: int val$gravity>;

        virtualinvoke r2.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)>($i0);

        return;
    }

androidx.test.espresso.contrib.DrawerActions$2
<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity>
    public java.lang.String getDescription()
    {
        androidx.test.espresso.contrib.DrawerActions$2 r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$2;

        i0 = r0.<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close drawer with gravity ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    protected org.hamcrest.Matcher checkAction()
    {
        androidx.test.espresso.contrib.DrawerActions$2 r0;
        int $i0;
        org.hamcrest.Matcher $r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$2;

        $i0 = r0.<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity>;

        $r1 = staticinvoke <androidx.test.espresso.contrib.DrawerMatchers: org.hamcrest.Matcher isOpen(int)>($i0);

        return $r1;
    }

    void <init>(int)
    {
        androidx.test.espresso.contrib.DrawerActions$2 r0;
        int i0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$2;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity> = i0;

        specialinvoke r0.<androidx.test.espresso.contrib.DrawerActions$DrawerAction: void <init>(androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA)>(null);

        return;
    }

    protected void performAction(androidx.test.espresso.UiController, androidx.drawerlayout.widget.DrawerLayout)
    {
        androidx.test.espresso.contrib.DrawerActions$2 r0;
        androidx.test.espresso.UiController r1;
        androidx.drawerlayout.widget.DrawerLayout r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$2;

        r1 := @parameter0: androidx.test.espresso.UiController;

        r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        $i0 = r0.<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity>;

        virtualinvoke r2.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)>($i0);

        interfaceinvoke r1.<androidx.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        $i1 = r0.<androidx.test.espresso.contrib.DrawerActions$2: int val$gravity>;

        $z0 = virtualinvoke r2.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)>($i1);

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<androidx.test.espresso.UiController: void loopMainThreadForAtLeast(long)>(300L);

     label1:
        return;
    }

androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA
androidx.test.espresso.contrib.DrawerActions$DrawerAction
<androidx.test.espresso.contrib.DrawerActions$DrawerAction: org.hamcrest.Matcher checkAction()>
    public final org.hamcrest.Matcher getConstraints()
    {
        androidx.test.espresso.contrib.DrawerActions$DrawerAction r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$DrawerAction;

        $r1 = staticinvoke <androidx.test.espresso.matcher.ViewMatchers: org.hamcrest.Matcher isAssignableFrom(java.lang.Class)>(class "Landroidx/drawerlayout/widget/DrawerLayout;");

        return $r1;
    }

    private void <init>()
    {
        androidx.test.espresso.contrib.DrawerActions$DrawerAction r0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$DrawerAction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA)
    {
        androidx.test.espresso.contrib.DrawerActions$DrawerAction r0;
        androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$DrawerAction;

        r1 := @parameter0: androidx.test.espresso.contrib.DrawerActions$DrawerAction-IA;

        specialinvoke r0.<androidx.test.espresso.contrib.DrawerActions$DrawerAction: void <init>()>();

        return;
    }

    public final void perform(androidx.test.espresso.UiController, android.view.View)
    {
        androidx.test.espresso.contrib.DrawerActions$DrawerAction r0;
        androidx.test.espresso.UiController r1;
        android.view.View r2;
        androidx.drawerlayout.widget.DrawerLayout r3;
        java.lang.Object r4;
        org.hamcrest.Matcher $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        androidx.test.espresso.IdlingRegistry $r7, $r9;
        java.lang.Object[] $r8, $r10;
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r11, r12;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener r13, r16;
        androidx.test.espresso.IdlingResource[] r14, r15;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$DrawerAction;

        r1 := @parameter0: androidx.test.espresso.UiController;

        r2 := @parameter1: android.view.View;

        r3 = (androidx.drawerlayout.widget.DrawerLayout) r2;

        $r5 = virtualinvoke r0.<androidx.test.espresso.contrib.DrawerActions$DrawerAction: org.hamcrest.Matcher checkAction()>();

        $z0 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: int '-$$Nest$sfgetTAG'()>();

        r4 = virtualinvoke r3.<androidx.drawerlayout.widget.DrawerLayout: java.lang.Object getTag(int)>($i0);

        $z1 = r4 instanceof androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        if $z1 == 0 goto label2;

        r11 = (androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener) r4;

        goto label3;

     label2:
        r12 = new androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        specialinvoke r12.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: void <init>(androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener-IA)>(null);

        r11 = r12;

        $i1 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: int '-$$Nest$sfgetTAG'()>();

        virtualinvoke r3.<androidx.drawerlayout.widget.DrawerLayout: void setTag(int,java.lang.Object)>($i1, r11);

        r13 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) r11;

        virtualinvoke r3.<androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>(r13);

        $r7 = staticinvoke <androidx.test.espresso.IdlingRegistry: androidx.test.espresso.IdlingRegistry getInstance()>();

        $r8 = newarray (androidx.test.espresso.IdlingResource)[1];

        $r8[0] = r11;

        r14 = (androidx.test.espresso.IdlingResource[]) $r8;

        virtualinvoke $r7.<androidx.test.espresso.IdlingRegistry: boolean register(androidx.test.espresso.IdlingResource[])>(r14);

     label3:
        virtualinvoke r0.<androidx.test.espresso.contrib.DrawerActions$DrawerAction: void performAction(androidx.test.espresso.UiController,androidx.drawerlayout.widget.DrawerLayout)>(r1, r3);

        interfaceinvoke r1.<androidx.test.espresso.UiController: void loopMainThreadUntilIdle()>();

        $r9 = staticinvoke <androidx.test.espresso.IdlingRegistry: androidx.test.espresso.IdlingRegistry getInstance()>();

        $r10 = newarray (androidx.test.espresso.IdlingResource)[1];

        $r10[0] = r11;

        r15 = (androidx.test.espresso.IdlingResource[]) $r10;

        virtualinvoke $r9.<androidx.test.espresso.IdlingRegistry: boolean unregister(androidx.test.espresso.IdlingResource[])>(r15);

        r16 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) r11;

        virtualinvoke r3.<androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>(r16);

        $i2 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: int '-$$Nest$sfgetTAG'()>();

        virtualinvoke r3.<androidx.drawerlayout.widget.DrawerLayout: void setTag(int,java.lang.Object)>($i2, null);

        return;
    }

<androidx.test.espresso.contrib.DrawerActions$DrawerAction: void performAction(androidx.test.espresso.UiController,androidx.drawerlayout.widget.DrawerLayout)>
androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener-IA
androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener
<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: int id>
<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: androidx.test.espresso.IdlingResource$ResourceCallback callback>
<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: boolean idle>
    public java.lang.String getName()
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        i0 = r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: int id>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IdlingDrawerListener::");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void <init>()
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        specialinvoke r0.<androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.contrib.DrawerActions: java.util.concurrent.atomic.AtomicInteger '-$$Nest$sfgetnextId'()>();

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: int id> = $i0;

        r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: boolean idle> = 1;

        return;
    }

    void <init>(androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener-IA)
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener-IA r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        r1 := @parameter0: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener-IA;

        specialinvoke r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: void <init>()>();

        return;
    }

    public void onDrawerStateChanged(int)
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        int i0;
        androidx.test.espresso.IdlingResource$ResourceCallback $r1, $r2;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: boolean idle> = 1;

        $r1 = r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: androidx.test.espresso.IdlingResource$ResourceCallback callback>;

        if $r1 == null goto label2;

        $r2 = r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: androidx.test.espresso.IdlingResource$ResourceCallback callback>;

        interfaceinvoke $r2.<androidx.test.espresso.IdlingResource$ResourceCallback: void onTransitionToIdle()>();

        goto label2;

     label1:
        r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: boolean idle> = 0;

     label2:
        return;
    }

    public void registerIdleTransitionCallback(androidx.test.espresso.IdlingResource$ResourceCallback)
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        androidx.test.espresso.IdlingResource$ResourceCallback r1;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        r1 := @parameter0: androidx.test.espresso.IdlingResource$ResourceCallback;

        r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: androidx.test.espresso.IdlingResource$ResourceCallback callback> = r1;

        return;
    }

    public boolean isIdleNow()
    {
        androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener;

        $z0 = r0.<androidx.test.espresso.contrib.DrawerActions$IdlingDrawerListener: boolean idle>;

        return $z0;
    }

