androidx.paging.NullPaddedListDiffHelperKt
    public static final androidx.paging.NullPaddedDiffResult computeDiff(androidx.paging.NullPaddedList, androidx.paging.NullPaddedList, androidx.recyclerview.widget.DiffUtil$ItemCallback)
    {
        androidx.paging.NullPaddedList $r0, r1;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r2;
        int i0, i1, i2, i3, $i4, $i5;
        androidx.recyclerview.widget.DiffUtil$DiffResult r3, r11;
        java.lang.Iterable $r4;
        java.util.Iterator r5;
        androidx.paging.NullPaddedListDiffHelperKt$computeDiff$diffResult$1 $r6;
        androidx.recyclerview.widget.DiffUtil$Callback $r7;
        kotlin.ranges.IntRange $r8;
        boolean $z2, $z3, $z4, $z5, $z6, z7;
        kotlin.collections.IntIterator $r9;
        java.util.Collection $r10;
        androidx.paging.NullPaddedDiffResult $r12;

        $r0 := @parameter0: androidx.paging.NullPaddedList;

        r1 := @parameter1: androidx.paging.NullPaddedList;

        r2 := @parameter2: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "newList");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "diffCallback");

        i0 = interfaceinvoke $r0.<androidx.paging.NullPaddedList: int getStorageCount()>();

        i1 = interfaceinvoke r1.<androidx.paging.NullPaddedList: int getStorageCount()>();

        $r6 = new androidx.paging.NullPaddedListDiffHelperKt$computeDiff$diffResult$1;

        specialinvoke $r6.<androidx.paging.NullPaddedListDiffHelperKt$computeDiff$diffResult$1: void <init>(androidx.paging.NullPaddedList,androidx.paging.NullPaddedList,androidx.recyclerview.widget.DiffUtil$ItemCallback,int,int)>($r0, r1, r2, i0, i1);

        $r7 = (androidx.recyclerview.widget.DiffUtil$Callback) $r6;

        r11 = staticinvoke <androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>($r7, 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r11, "NullPaddedList<T>.comput\u2026    },\n        true\n    )");

        r3 = r11;

        $i4 = interfaceinvoke $r0.<androidx.paging.NullPaddedList: int getStorageCount()>();

        $r8 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i4);

        $r4 = (java.lang.Iterable) $r8;

        $z2 = $r4 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r10 = (java.util.Collection) $r4;

        $z3 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z4 = 0;

        goto label6;

     label1:
        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        $r9 = (kotlin.collections.IntIterator) r5;

        i2 = virtualinvoke $r9.<kotlin.collections.IntIterator: int nextInt()>();

        i3 = i2;

        $i5 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$DiffResult: int convertOldPositionToNew(int)>(i3);

        if $i5 == -1 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        if $z6 == 0 goto label2;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z7 = $z4;

        $r12 = new androidx.paging.NullPaddedDiffResult;

        specialinvoke $r12.<androidx.paging.NullPaddedDiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$DiffResult,boolean)>(r3, z7);

        return $r12;
    }

    public static final void dispatchDiff(androidx.paging.NullPaddedList, androidx.recyclerview.widget.ListUpdateCallback, androidx.paging.NullPaddedList, androidx.paging.NullPaddedDiffResult)
    {
        androidx.paging.NullPaddedList $r0, r2;
        androidx.recyclerview.widget.ListUpdateCallback r1;
        androidx.paging.NullPaddedDiffResult r3;
        boolean $z0;
        androidx.paging.DistinctListsDiffDispatcher $r4;
        androidx.paging.OverlappingListsDiffDispatcher $r5;

        $r0 := @parameter0: androidx.paging.NullPaddedList;

        r1 := @parameter1: androidx.recyclerview.widget.ListUpdateCallback;

        r2 := @parameter2: androidx.paging.NullPaddedList;

        r3 := @parameter3: androidx.paging.NullPaddedDiffResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "newList");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "diffResult");

        $z0 = virtualinvoke r3.<androidx.paging.NullPaddedDiffResult: boolean getHasOverlap()>();

        if $z0 == 0 goto label1;

        $r5 = <androidx.paging.OverlappingListsDiffDispatcher: androidx.paging.OverlappingListsDiffDispatcher INSTANCE>;

        virtualinvoke $r5.<androidx.paging.OverlappingListsDiffDispatcher: void dispatchDiff(androidx.paging.NullPaddedList,androidx.paging.NullPaddedList,androidx.recyclerview.widget.ListUpdateCallback,androidx.paging.NullPaddedDiffResult)>($r0, r2, r1, r3);

        goto label2;

     label1:
        $r4 = <androidx.paging.DistinctListsDiffDispatcher: androidx.paging.DistinctListsDiffDispatcher INSTANCE>;

        virtualinvoke $r4.<androidx.paging.DistinctListsDiffDispatcher: void dispatchDiff(androidx.recyclerview.widget.ListUpdateCallback,androidx.paging.NullPaddedList,androidx.paging.NullPaddedList)>(r1, $r0, r2);

     label2:
        return;
    }

    public static final int transformAnchorIndex(androidx.paging.NullPaddedList, androidx.paging.NullPaddedDiffResult, androidx.paging.NullPaddedList, int)
    {
        androidx.paging.NullPaddedList $r0, r2;
        androidx.paging.NullPaddedDiffResult r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, i18;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r3, $r6;
        kotlin.ranges.ClosedRange $r4, $r7;
        androidx.recyclerview.widget.DiffUtil$DiffResult $r5;
        byte $b19;

        $r0 := @parameter0: androidx.paging.NullPaddedList;

        r1 := @parameter1: androidx.paging.NullPaddedDiffResult;

        r2 := @parameter2: androidx.paging.NullPaddedList;

        i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffResult");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "newList");

        $z0 = virtualinvoke r1.<androidx.paging.NullPaddedDiffResult: boolean getHasOverlap()>();

        if $z0 != 0 goto label01;

        $i16 = interfaceinvoke r2.<androidx.paging.NullPaddedList: int getSize()>();

        $r6 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i16);

        $r7 = (kotlin.ranges.ClosedRange) $r6;

        $i17 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,kotlin.ranges.ClosedRange)>(i0, $r7);

        return $i17;

     label01:
        $i6 = interfaceinvoke $r0.<androidx.paging.NullPaddedList: int getPlaceholdersBefore()>();

        i1 = i0 - $i6;

        i2 = interfaceinvoke $r0.<androidx.paging.NullPaddedList: int getStorageCount()>();

        if 0 > i1 goto label03;

        if i1 >= i2 goto label02;

        $z1 = 1;

        goto label04;

     label02:
        $z1 = 0;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        if $z1 == 0 goto label11;

        i18 = 0;

     label05:
        i3 = i18;

        i18 = i18 + 1;

        $i10 = i3 / 2;

        $i9 = i3 % 2;

        if $i9 != 1 goto label06;

        $b19 = -1;

        goto label07;

     label06:
        $b19 = 1;

     label07:
        $i11 = $i10 * $b19;

        i4 = i1 + $i11;

        if i4 < 0 goto label08;

        $i12 = interfaceinvoke $r0.<androidx.paging.NullPaddedList: int getStorageCount()>();

        if i4 < $i12 goto label09;

     label08:
        goto label10;

     label09:
        $r5 = virtualinvoke r1.<androidx.paging.NullPaddedDiffResult: androidx.recyclerview.widget.DiffUtil$DiffResult getDiff()>();

        i5 = virtualinvoke $r5.<androidx.recyclerview.widget.DiffUtil$DiffResult: int convertOldPositionToNew(int)>(i4);

        if i5 == -1 goto label10;

        $i13 = interfaceinvoke r2.<androidx.paging.NullPaddedList: int getPlaceholdersBefore()>();

        $i14 = i5 + $i13;

        return $i14;

     label10:
        if i18 <= 29 goto label05;

     label11:
        $i7 = interfaceinvoke r2.<androidx.paging.NullPaddedList: int getSize()>();

        $r3 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i7);

        $r4 = (kotlin.ranges.ClosedRange) $r3;

        $i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,kotlin.ranges.ClosedRange)>(i0, $r4);

        return $i8;
    }

