androidx.wear.compose.foundation.CurvedLayoutInfo
<androidx.wear.compose.foundation.CurvedLayoutInfo: float sweepRadians>
<androidx.wear.compose.foundation.CurvedLayoutInfo: float outerRadius>
<androidx.wear.compose.foundation.CurvedLayoutInfo: float thickness>
<androidx.wear.compose.foundation.CurvedLayoutInfo: long centerOffset>
<androidx.wear.compose.foundation.CurvedLayoutInfo: float measureRadius>
<androidx.wear.compose.foundation.CurvedLayoutInfo: float startAngleRadians>
<androidx.wear.compose.foundation.CurvedLayoutInfo: float innerRadius>
    private void <init>(float, float, float, long, float, float)
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7;
        long l0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        l0 := @parameter3: long;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float sweepRadians> = f0;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float outerRadius> = f1;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float thickness> = f2;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: long centerOffset> = l0;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float measureRadius> = f3;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float startAngleRadians> = f4;

        $f6 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float outerRadius>;

        $f5 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float thickness>;

        $f7 = $f6 - $f5;

        r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float innerRadius> = $f7;

        return;
    }

    public final float getSweepRadians()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float sweepRadians>;

        return $f0;
    }

    public final float getOuterRadius()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float outerRadius>;

        return $f0;
    }

    public final float getThickness()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float thickness>;

        return $f0;
    }

    public final long getCenterOffset-F1C5BW0()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        long $l0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $l0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: long centerOffset>;

        return $l0;
    }

    public final float getMeasureRadius()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float measureRadius>;

        return $f0;
    }

    public final float getStartAngleRadians()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float startAngleRadians>;

        return $f0;
    }

    public final float getInnerRadius()
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float $f0;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        $f0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float innerRadius>;

        return $f0;
    }

    public final long computePointOffset-dBAh8RU(float, float)
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        long $l0, $l1, $l2;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $l0 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: long centerOffset>;

        $f5 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float outerRadius>;

        $f3 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float thickness>;

        $f2 = 1.0F - f0;

        $f4 = $f3 * $f2;

        $f10 = $f5 - $f4;

        $f8 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float startAngleRadians>;

        $f6 = r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: float sweepRadians>;

        $f7 = f1 * $f6;

        $f9 = $f8 + $f7;

        $l1 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: long offsetFromDistanceAndAngle(float,float)>($f10, $f9);

        $l2 = staticinvoke <androidx.compose.ui.geometry.Offset: long plus-MK-Hz9U(long,long)>($l0, $l1);

        return $l2;
    }

    public void <init>(float, float, float, long, float, float, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.foundation.CurvedLayoutInfo r0;
        float f0, f1, f2, f3, f4;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedLayoutInfo;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        l0 := @parameter3: long;

        f3 := @parameter4: float;

        f4 := @parameter5: float;

        $r1 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedLayoutInfo: void <init>(float,float,float,long,float,float)>(f0, f1, f2, l0, f3, f4);

        return;
    }

