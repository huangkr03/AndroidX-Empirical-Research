androidx.media2.SessionToken
<androidx.media2.SessionToken: java.lang.String TAG>
<androidx.media2.SessionToken: long WAIT_TIME_MS_FOR_SESSION_READY>
<androidx.media2.SessionToken: int MSG_SEND_TOKEN2_FOR_LEGACY_SESSION>
<androidx.media2.SessionToken: int TYPE_SESSION>
<androidx.media2.SessionToken: int TYPE_SESSION_SERVICE>
<androidx.media2.SessionToken: int TYPE_LIBRARY_SERVICE>
<androidx.media2.SessionToken: int TYPE_SESSION_LEGACY>
<androidx.media2.SessionToken: int TYPE_BROWSER_SERVICE_LEGACY>
<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>
    public void <init>(android.content.Context, android.content.ComponentName)
    {
        androidx.media2.SessionToken r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        android.content.pm.PackageManager r3;
        int i0;
        java.lang.String $r4, $r11;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        androidx.media2.SessionTokenImplLegacy $r12;
        androidx.media2.SessionTokenImplBase $r13;
        byte b1;

        r0 := @this: androidx.media2.SessionToken;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        i0 = staticinvoke <androidx.media2.SessionToken: int getUid(android.content.pm.PackageManager,java.lang.String)>(r3, $r4);

        $z0 = staticinvoke <androidx.media2.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "androidx.media2.MediaLibraryService", r2);

        if $z0 == 0 goto label1;

        b1 = 2;

        goto label4;

     label1:
        $z1 = staticinvoke <androidx.media2.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "androidx.media2.MediaSessionService", r2);

        if $z1 == 0 goto label2;

        b1 = 1;

        goto label4;

     label2:
        $z2 = staticinvoke <androidx.media2.SessionToken: boolean isInterfaceDeclared(android.content.pm.PackageManager,java.lang.String,android.content.ComponentName)>(r3, "android.media.browse.MediaBrowserService", r2);

        if $z2 == 0 goto label3;

        b1 = 101;

        goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t implement none of");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MediaSessionService, MediaLibraryService, MediaBrowserService nor");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MediaBrowserServiceCompat. Use service\'s full name.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label4:
        if b1 == 101 goto label5;

        $r13 = new androidx.media2.SessionTokenImplBase;

        specialinvoke $r13.<androidx.media2.SessionTokenImplBase: void <init>(android.content.ComponentName,int,int)>(r2, i0, b1);

        r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl> = $r13;

        goto label6;

     label5:
        $r12 = new androidx.media2.SessionTokenImplLegacy;

        specialinvoke $r12.<androidx.media2.SessionTokenImplLegacy: void <init>(android.content.ComponentName,int)>(r2, i0);

        r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl> = $r12;

     label6:
        return;
    }

    void <init>(androidx.media2.SessionToken$SessionTokenImpl)
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl r1;

        r0 := @this: androidx.media2.SessionToken;

        r1 := @parameter0: androidx.media2.SessionToken$SessionTokenImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl> = r1;

        return;
    }

    void <init>()
    {
        androidx.media2.SessionToken r0;

        r0 := @this: androidx.media2.SessionToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int hashCode()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media2.SessionToken r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        androidx.media2.SessionToken$SessionTokenImpl $r3, $r4;

        r0 := @this: androidx.media2.SessionToken;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media2.SessionToken;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.media2.SessionToken) r1;

        $r4 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r3 = r2.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String toString()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int getUid()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $i0 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: int getUid()>();

        return $i0;
    }

    public java.lang.String getPackageName()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: java.lang.String getPackageName()>();

        return $r2;
    }

    public java.lang.String getServiceName()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: java.lang.String getServiceName()>();

        return $r2;
    }

    public android.content.ComponentName getComponentName()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        android.content.ComponentName $r2;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: android.content.ComponentName getComponentName()>();

        return $r2;
    }

    public int getType()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $i0 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: int getType()>();

        return $i0;
    }

    public boolean isLegacySession()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $z0 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: boolean isLegacySession()>();

        return $z0;
    }

    public java.lang.Object getBinder()
    {
        androidx.media2.SessionToken r0;
        androidx.media2.SessionToken$SessionTokenImpl $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.media2.SessionToken;

        $r1 = r0.<androidx.media2.SessionToken: androidx.media2.SessionToken$SessionTokenImpl mImpl>;

        $r2 = interfaceinvoke $r1.<androidx.media2.SessionToken$SessionTokenImpl: java.lang.Object getBinder()>();

        return $r2;
    }

    public static void createSessionToken(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token, java.util.concurrent.Executor, androidx.media2.SessionToken$OnSessionTokenCreatedListener)
    {
        android.content.Context r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        java.util.concurrent.Executor r2;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r3, r9;
        android.support.v4.media.session.MediaControllerCompat r4, $r12;
        int i0;
        androidx.media2.SessionToken r5, $r15, $r23;
        android.os.HandlerThread r6, $r18;
        androidx.media2.SessionToken$1 r7, $r19;
        androidx.media2.SessionToken$2 r8, $r21;
        android.os.Message r10;
        java.lang.Throwable r11, $r28, $r29, r31;
        boolean $z0;
        android.content.pm.PackageManager $r13;
        java.lang.String $r14, $r17;
        androidx.media2.SessionTokenImplLegacy $r16;
        android.os.Looper $r20;
        java.lang.IllegalArgumentException $r24, $r25, $r26, $r27;
        androidx.versionedparcelable.VersionedParcelable r30;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: androidx.media2.SessionToken$OnSessionTokenCreatedListener;

        if r0 != null goto label01;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r27;

     label01:
        if r1 != null goto label02;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token shouldn\'t be null");

        throw $r26;

     label02:
        if r2 != null goto label03;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r25;

     label03:
        if r3 != null goto label04;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listener shouldn\'t be null");

        throw $r24;

     label04:
        r30 = virtualinvoke r1.<android.support.v4.media.session.MediaSessionCompat$Token: androidx.versionedparcelable.VersionedParcelable getSession2Token()>();

        $z0 = r30 instanceof androidx.media2.SessionToken;

        if $z0 == 0 goto label06;

        $r23 = (androidx.media2.SessionToken) r30;

        staticinvoke <androidx.media2.SessionToken: void notifySessionTokenCreated(java.util.concurrent.Executor,androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>(r2, r3, r1, $r23);

     label05:
        return;

     label06:
        $r12 = new android.support.v4.media.session.MediaControllerCompat;

        specialinvoke $r12.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)>(r0, r1);

        r4 = $r12;

        $r13 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r14 = virtualinvoke r4.<android.support.v4.media.session.MediaControllerCompat: java.lang.String getPackageName()>();

        i0 = staticinvoke <androidx.media2.SessionToken: int getUid(android.content.pm.PackageManager,java.lang.String)>($r13, $r14);

        $r15 = new androidx.media2.SessionToken;

        $r16 = new androidx.media2.SessionTokenImplLegacy;

        $r17 = virtualinvoke r4.<android.support.v4.media.session.MediaControllerCompat: java.lang.String getPackageName()>();

        specialinvoke $r16.<androidx.media2.SessionTokenImplLegacy: void <init>(android.support.v4.media.session.MediaSessionCompat$Token,java.lang.String,int)>(r1, $r17, i0);

        specialinvoke $r15.<androidx.media2.SessionToken: void <init>(androidx.media2.SessionToken$SessionTokenImpl)>($r16);

        r5 = $r15;

        $r18 = new android.os.HandlerThread;

        specialinvoke $r18.<android.os.HandlerThread: void <init>(java.lang.String)>("SessionToken");

        r6 = $r18;

        virtualinvoke r6.<android.os.HandlerThread: void start()>();

        $r19 = new androidx.media2.SessionToken$1;

        $r20 = virtualinvoke r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r19.<androidx.media2.SessionToken$1: void <init>(android.os.Looper,androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.support.v4.media.session.MediaControllerCompat,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken,java.util.concurrent.Executor,android.os.HandlerThread)>($r20, r3, r4, r1, r5, r2, r6);

        r7 = $r19;

        $r21 = new androidx.media2.SessionToken$2;

        specialinvoke $r21.<androidx.media2.SessionToken$2: void <init>(androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.os.Handler,android.support.v4.media.session.MediaControllerCompat,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken,java.util.concurrent.Executor,android.os.HandlerThread)>(r3, r7, r4, r1, r5, r2, r6);

        r8 = $r21;

        r9 = r3;

        entermonitor r3;

     label07:
        virtualinvoke r4.<android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)>(r8, r7);

        r10 = virtualinvoke r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1000, r8);

        virtualinvoke r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r10, 300L);

        exitmonitor r9;

     label08:
        goto label11;

     label09:
        $r28 := @caughtexception;

        r11 = $r28;

        exitmonitor r9;

     label10:
        throw r11;

     label11:
        goto label13;

     label12:
        $r29 := @caughtexception;

        r31 = $r29;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SessionToken", "Failed to create session token2.", r31);

     label13:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label11 with label12;
    }

    static void notifySessionTokenCreated(java.util.concurrent.Executor, androidx.media2.SessionToken$OnSessionTokenCreatedListener, android.support.v4.media.session.MediaSessionCompat$Token, androidx.media2.SessionToken)
    {
        java.util.concurrent.Executor r0;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r1;
        android.support.v4.media.session.MediaSessionCompat$Token r2;
        androidx.media2.SessionToken r3;
        androidx.media2.SessionToken$3 $r4;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: androidx.media2.SessionToken$OnSessionTokenCreatedListener;

        r2 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        r3 := @parameter3: androidx.media2.SessionToken;

        $r4 = new androidx.media2.SessionToken$3;

        specialinvoke $r4.<androidx.media2.SessionToken$3: void <init>(androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>(r1, r2, r3);

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private static boolean isInterfaceDeclared(android.content.pm.PackageManager, java.lang.String, android.content.ComponentName)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, $r7, $r12, $r13;
        android.content.ComponentName r2;
        android.content.Intent r3, $r6;
        java.util.List r4;
        android.content.pm.ResolveInfo r5;
        int $i0, i1;
        java.lang.Object $r9;
        android.content.pm.ServiceInfo $r10, $r11;
        boolean $z0;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ComponentName;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>(r1);

        r3 = $r6;

        $r7 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r7);

        r4 = virtualinvoke r0.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 128);

        if r4 == null goto label4;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (android.content.pm.ResolveInfo) $r9;

        if r5 == null goto label3;

        $r10 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if $r10 != null goto label2;

        goto label3;

     label2:
        $r11 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r13 = virtualinvoke r2.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r12, $r13);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    private static int getUid(android.content.pm.PackageManager, java.lang.String)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1, $r9;
        java.lang.Throwable r2, $r4;
        android.content.pm.ApplicationInfo $r3;
        int $i0;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find package ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

androidx.media2.SessionToken$1
<androidx.media2.SessionToken$1: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>
<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaControllerCompat val$controller>
<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>
<androidx.media2.SessionToken$1: androidx.media2.SessionToken val$token2ForLegacySession>
<androidx.media2.SessionToken$1: java.util.concurrent.Executor val$executor>
<androidx.media2.SessionToken$1: android.os.HandlerThread val$thread>
    void <init>(android.os.Looper, androidx.media2.SessionToken$OnSessionTokenCreatedListener, android.support.v4.media.session.MediaControllerCompat, android.support.v4.media.session.MediaSessionCompat$Token, androidx.media2.SessionToken, java.util.concurrent.Executor, android.os.HandlerThread)
    {
        androidx.media2.SessionToken$1 r0;
        android.os.Looper r1;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r2;
        android.support.v4.media.session.MediaControllerCompat r3;
        android.support.v4.media.session.MediaSessionCompat$Token r4;
        androidx.media2.SessionToken r5;
        java.util.concurrent.Executor r6;
        android.os.HandlerThread r7;

        r0 := @this: androidx.media2.SessionToken$1;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: androidx.media2.SessionToken$OnSessionTokenCreatedListener;

        r3 := @parameter2: android.support.v4.media.session.MediaControllerCompat;

        r4 := @parameter3: android.support.v4.media.session.MediaSessionCompat$Token;

        r5 := @parameter4: androidx.media2.SessionToken;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.os.HandlerThread;

        r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener> = r2;

        r0.<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaControllerCompat val$controller> = r3;

        r0.<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat> = r4;

        r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken val$token2ForLegacySession> = r5;

        r0.<androidx.media2.SessionToken$1: java.util.concurrent.Executor val$executor> = r6;

        r0.<androidx.media2.SessionToken$1: android.os.HandlerThread val$thread> = r7;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media2.SessionToken$1 r0;
        android.os.Message r1;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r2, $r4, $r12;
        java.lang.Throwable r3, $r16;
        int $i0, $i1;
        java.lang.Object $r5;
        android.support.v4.media.session.MediaControllerCompat$Callback $r6;
        android.support.v4.media.session.MediaControllerCompat $r7;
        androidx.media2.SessionToken $r8, $r10;
        android.support.v4.media.session.MediaSessionCompat$Token $r9, $r11;
        java.util.concurrent.Executor $r13;
        android.os.HandlerThread $r14, $r15;

        r0 := @this: androidx.media2.SessionToken$1;

        r1 := @parameter0: android.os.Message;

        $r4 = r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = r1.<android.os.Message: int what>;

        if $i0 != 1000 goto label3;

        $r7 = r0.<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaControllerCompat val$controller>;

        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        $r6 = (android.support.v4.media.session.MediaControllerCompat$Callback) $r5;

        virtualinvoke $r7.<android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>($r6);

        $r9 = r0.<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r8 = r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken val$token2ForLegacySession>;

        virtualinvoke $r9.<android.support.v4.media.session.MediaSessionCompat$Token: void setSession2Token(androidx.versionedparcelable.VersionedParcelable)>($r8);

        $r13 = r0.<androidx.media2.SessionToken$1: java.util.concurrent.Executor val$executor>;

        $r12 = r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>;

        $r11 = r0.<androidx.media2.SessionToken$1: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r10 = r0.<androidx.media2.SessionToken$1: androidx.media2.SessionToken val$token2ForLegacySession>;

        staticinvoke <androidx.media2.SessionToken: void notifySessionTokenCreated(java.util.concurrent.Executor,androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>($r13, $r12, $r11, $r10);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 18 goto label2;

        $r15 = r0.<androidx.media2.SessionToken$1: android.os.HandlerThread val$thread>;

        virtualinvoke $r15.<android.os.HandlerThread: boolean quitSafely()>();

        goto label3;

     label2:
        $r14 = r0.<androidx.media2.SessionToken$1: android.os.HandlerThread val$thread>;

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

androidx.media2.SessionToken$2
<androidx.media2.SessionToken$2: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>
<androidx.media2.SessionToken$2: android.os.Handler val$handler>
<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaControllerCompat val$controller>
<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>
<androidx.media2.SessionToken$2: androidx.media2.SessionToken val$token2ForLegacySession>
<androidx.media2.SessionToken$2: java.util.concurrent.Executor val$executor>
<androidx.media2.SessionToken$2: android.os.HandlerThread val$thread>
    void <init>(androidx.media2.SessionToken$OnSessionTokenCreatedListener, android.os.Handler, android.support.v4.media.session.MediaControllerCompat, android.support.v4.media.session.MediaSessionCompat$Token, androidx.media2.SessionToken, java.util.concurrent.Executor, android.os.HandlerThread)
    {
        androidx.media2.SessionToken$2 r0;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r1;
        android.os.Handler r2;
        android.support.v4.media.session.MediaControllerCompat r3;
        android.support.v4.media.session.MediaSessionCompat$Token r4;
        androidx.media2.SessionToken r5;
        java.util.concurrent.Executor r6;
        android.os.HandlerThread r7;

        r0 := @this: androidx.media2.SessionToken$2;

        r1 := @parameter0: androidx.media2.SessionToken$OnSessionTokenCreatedListener;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.support.v4.media.session.MediaControllerCompat;

        r4 := @parameter3: android.support.v4.media.session.MediaSessionCompat$Token;

        r5 := @parameter4: androidx.media2.SessionToken;

        r6 := @parameter5: java.util.concurrent.Executor;

        r7 := @parameter6: android.os.HandlerThread;

        r0.<androidx.media2.SessionToken$2: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener> = r1;

        r0.<androidx.media2.SessionToken$2: android.os.Handler val$handler> = r2;

        r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaControllerCompat val$controller> = r3;

        r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat> = r4;

        r0.<androidx.media2.SessionToken$2: androidx.media2.SessionToken val$token2ForLegacySession> = r5;

        r0.<androidx.media2.SessionToken$2: java.util.concurrent.Executor val$executor> = r6;

        r0.<androidx.media2.SessionToken$2: android.os.HandlerThread val$thread> = r7;

        specialinvoke r0.<android.support.v4.media.session.MediaControllerCompat$Callback: void <init>()>();

        return;
    }

    public void onSessionReady()
    {
        androidx.media2.SessionToken$2 r0;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r1, $r3, $r10;
        java.lang.Throwable r2, $r18;
        android.os.Handler $r4;
        android.support.v4.media.session.MediaControllerCompat $r5;
        android.support.v4.media.session.MediaSessionCompat$Token $r6, $r8, $r11, $r17;
        androidx.versionedparcelable.VersionedParcelable $r7, $r12;
        boolean $z0;
        java.util.concurrent.Executor $r9;
        androidx.media2.SessionToken $r13, $r16;
        int $i0;
        android.os.HandlerThread $r14, $r15;

        r0 := @this: androidx.media2.SessionToken$2;

        $r3 = r0.<androidx.media2.SessionToken$2: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media2.SessionToken$2: android.os.Handler val$handler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(1000);

        $r5 = r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaControllerCompat val$controller>;

        virtualinvoke $r5.<android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)>(r0);

        $r6 = r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r7 = virtualinvoke $r6.<android.support.v4.media.session.MediaSessionCompat$Token: androidx.versionedparcelable.VersionedParcelable getSession2Token()>();

        $z0 = $r7 instanceof androidx.media2.SessionToken;

        if $z0 != 0 goto label2;

        $r17 = r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r16 = r0.<androidx.media2.SessionToken$2: androidx.media2.SessionToken val$token2ForLegacySession>;

        virtualinvoke $r17.<android.support.v4.media.session.MediaSessionCompat$Token: void setSession2Token(androidx.versionedparcelable.VersionedParcelable)>($r16);

     label2:
        $r9 = r0.<androidx.media2.SessionToken$2: java.util.concurrent.Executor val$executor>;

        $r10 = r0.<androidx.media2.SessionToken$2: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>;

        $r11 = r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r8 = r0.<androidx.media2.SessionToken$2: android.support.v4.media.session.MediaSessionCompat$Token val$tokenCompat>;

        $r12 = virtualinvoke $r8.<android.support.v4.media.session.MediaSessionCompat$Token: androidx.versionedparcelable.VersionedParcelable getSession2Token()>();

        $r13 = (androidx.media2.SessionToken) $r12;

        staticinvoke <androidx.media2.SessionToken: void notifySessionTokenCreated(java.util.concurrent.Executor,androidx.media2.SessionToken$OnSessionTokenCreatedListener,android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>($r9, $r10, $r11, $r13);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label3;

        $r15 = r0.<androidx.media2.SessionToken$2: android.os.HandlerThread val$thread>;

        virtualinvoke $r15.<android.os.HandlerThread: boolean quitSafely()>();

        goto label4;

     label3:
        $r14 = r0.<androidx.media2.SessionToken$2: android.os.HandlerThread val$thread>;

        virtualinvoke $r14.<android.os.HandlerThread: boolean quit()>();

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r2 = $r18;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

androidx.media2.SessionToken$3
<androidx.media2.SessionToken$3: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>
<androidx.media2.SessionToken$3: android.support.v4.media.session.MediaSessionCompat$Token val$token>
<androidx.media2.SessionToken$3: androidx.media2.SessionToken val$token2>
    void <init>(androidx.media2.SessionToken$OnSessionTokenCreatedListener, android.support.v4.media.session.MediaSessionCompat$Token, androidx.media2.SessionToken)
    {
        androidx.media2.SessionToken$3 r0;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener r1;
        android.support.v4.media.session.MediaSessionCompat$Token r2;
        androidx.media2.SessionToken r3;

        r0 := @this: androidx.media2.SessionToken$3;

        r1 := @parameter0: androidx.media2.SessionToken$OnSessionTokenCreatedListener;

        r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        r3 := @parameter2: androidx.media2.SessionToken;

        r0.<androidx.media2.SessionToken$3: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener> = r1;

        r0.<androidx.media2.SessionToken$3: android.support.v4.media.session.MediaSessionCompat$Token val$token> = r2;

        r0.<androidx.media2.SessionToken$3: androidx.media2.SessionToken val$token2> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.media2.SessionToken$3 r0;
        androidx.media2.SessionToken $r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;
        androidx.media2.SessionToken$OnSessionTokenCreatedListener $r3;

        r0 := @this: androidx.media2.SessionToken$3;

        $r3 = r0.<androidx.media2.SessionToken$3: androidx.media2.SessionToken$OnSessionTokenCreatedListener val$listener>;

        $r2 = r0.<androidx.media2.SessionToken$3: android.support.v4.media.session.MediaSessionCompat$Token val$token>;

        $r1 = r0.<androidx.media2.SessionToken$3: androidx.media2.SessionToken val$token2>;

        interfaceinvoke $r3.<androidx.media2.SessionToken$OnSessionTokenCreatedListener: void onSessionTokenCreated(android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>($r2, $r1);

        return;
    }

androidx.media2.SessionToken$OnSessionTokenCreatedListener
<androidx.media2.SessionToken$OnSessionTokenCreatedListener: void onSessionTokenCreated(android.support.v4.media.session.MediaSessionCompat$Token,androidx.media2.SessionToken)>
androidx.media2.SessionToken$SessionTokenImpl
<androidx.media2.SessionToken$SessionTokenImpl: boolean isLegacySession()>
<androidx.media2.SessionToken$SessionTokenImpl: int getUid()>
<androidx.media2.SessionToken$SessionTokenImpl: java.lang.String getPackageName()>
<androidx.media2.SessionToken$SessionTokenImpl: java.lang.String getServiceName()>
<androidx.media2.SessionToken$SessionTokenImpl: android.content.ComponentName getComponentName()>
<androidx.media2.SessionToken$SessionTokenImpl: int getType()>
<androidx.media2.SessionToken$SessionTokenImpl: java.lang.Object getBinder()>
androidx.media2.SessionToken$TokenType
