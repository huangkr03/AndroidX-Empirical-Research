androidx.test.internal.runner.listener.SuiteAssignmentPrinter
<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long startTime>
<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long endTime>
<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid>
    public long getCurrentTimeMillis()
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        long $l0;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    public void <init>()
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        specialinvoke r0.<androidx.test.internal.runner.listener.InstrumentationRunListener: void <init>()>();

        return;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid> = 0;

        return;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.notification.Failure r1;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid> = 0;

        return;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        long l0, $l1, $l3, $l5, $l6;
        androidx.test.internal.runner.TestSize r2, r3;
        boolean $z0, $z1;
        java.lang.Object[] $r4, $r8, $r14;
        java.lang.String $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r19;
        byte $b4;
        float $f0;
        java.lang.Long $r12, $r18;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        $l1 = virtualinvoke r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long getCurrentTimeMillis()>();

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long endTime> = $l1;

        $z0 = r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid>;

        if $z0 == 0 goto label1;

        $l3 = r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long startTime>;

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label2;

     label1:
        virtualinvoke r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>("F");

        $r4 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r4[0] = $r5;

        $r6 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s#%s: skipping suite assignment due to test failure\n", $r4);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SuiteAssignmentPrinter", $r7);

        goto label4;

     label2:
        $l6 = r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long endTime>;

        $l5 = r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long startTime>;

        l0 = $l6 - $l5;

        $f0 = (float) l0;

        r2 = staticinvoke <androidx.test.internal.runner.TestSize: androidx.test.internal.runner.TestSize getTestSizeForRunTime(float)>($f0);

        r3 = staticinvoke <androidx.test.internal.runner.TestSize: androidx.test.internal.runner.TestSize fromDescription(org.junit.runner.Description)>(r1);

        $z1 = virtualinvoke r2.<androidx.test.internal.runner.TestSize: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label3;

        $r14 = newarray (java.lang.Object)[5];

        $r15 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r14[0] = $r15;

        $r16 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r14[1] = $r16;

        $r14[2] = r3;

        $r17 = virtualinvoke r2.<androidx.test.internal.runner.TestSize: java.lang.String getSizeQualifierName()>();

        $r14[3] = $r17;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r14[4] = $r18;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\n%s#%s: current size: %s. suggested: %s runTime: %d ms\n", $r14);

        virtualinvoke r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>($r19);

        goto label4;

     label3:
        virtualinvoke r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: void sendString(java.lang.String)>(".");

        $r8 = newarray (java.lang.Object)[4];

        $r9 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r8[1] = $r10;

        $r11 = virtualinvoke r2.<androidx.test.internal.runner.TestSize: java.lang.String getSizeQualifierName()>();

        $r8[2] = $r11;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[3] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s#%s assigned correctly as %s. runTime: %d ms\n", $r8);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SuiteAssignmentPrinter", $r13);

     label4:
        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long startTime> = -1L;

        return;
    }

    public void testIgnored(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid> = 0;

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        androidx.test.internal.runner.listener.SuiteAssignmentPrinter r0;
        org.junit.runner.Description r1;
        long $l0;

        r0 := @this: androidx.test.internal.runner.listener.SuiteAssignmentPrinter;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: boolean timingValid> = 1;

        $l0 = virtualinvoke r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long getCurrentTimeMillis()>();

        r0.<androidx.test.internal.runner.listener.SuiteAssignmentPrinter: long startTime> = $l0;

        return;
    }

