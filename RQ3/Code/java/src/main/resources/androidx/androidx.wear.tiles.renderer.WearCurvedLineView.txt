androidx.wear.tiles.renderer.WearCurvedLineView
<androidx.wear.tiles.renderer.WearCurvedLineView: int DEFAULT_THICKNESS_PX>
<androidx.wear.tiles.renderer.WearCurvedLineView: float DEFAULT_SWEEP_ANGLE_DEGREES>
<androidx.wear.tiles.renderer.WearCurvedLineView: int DEFAULT_COLOR>
<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx>
<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>
<androidx.wear.tiles.renderer.WearCurvedLineView: int mColor>
<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>
<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath>
    public void <init>(android.content.Context)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        android.content.Context r1;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.content.res.TypedArray r3;
        int[] $r4;
        float $f0, $f1;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $r4 = <androidx.wear.tiles.renderer.R$styleable: int[] WearCurvedLineView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r4, i0, i1);

        $i2 = <androidx.wear.tiles.renderer.R$styleable: int WearCurvedLineView_thickness>;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>($i2, 0.0F);

        $i3 = (int) $f0;

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx> = $i3;

        $i4 = <androidx.wear.tiles.renderer.R$styleable: int WearCurvedLineView_color>;

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>($i4, -1);

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mColor> = $i5;

        $i6 = <androidx.wear.tiles.renderer.R$styleable: int WearCurvedLineView_sweepAngleDegrees>;

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i6, 0.0F);

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees> = $f1;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void updatePathAndPaint()
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        android.graphics.Path $r1, $r2, $r3, $r4;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i8;
        byte $b1, $b2;
        android.graphics.Path$Direction $r5;
        android.graphics.Paint $r6, $r7, $r9, $r11, $r12, $r13;
        android.graphics.Paint$Style $r8;
        android.graphics.Paint$Cap $r10;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        $r1 = new android.graphics.Path;

        specialinvoke $r1.<android.graphics.Path: void <init>()>();

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath> = $r1;

        $i0 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx>;

        $f1 = (float) $i0;

        f0 = $f1 / 2.0F;

        $f2 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        $b1 = $f2 cmpl 360.0F;

        if $b1 < 0 goto label1;

        $r4 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath>;

        $i5 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getMeasuredWidth()>();

        $f12 = (float) $i5;

        $f13 = $f12 - f0;

        $i6 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getMeasuredHeight()>();

        $f14 = (float) $i6;

        $f15 = $f14 - f0;

        $r5 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r4.<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path$Direction)>(f0, f0, $f13, $f15, $r5);

        goto label2;

     label1:
        $f3 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        $b2 = $f3 cmpl 0.0F;

        if $b2 == 0 goto label2;

        $r2 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath>;

        virtualinvoke $r2.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        $r3 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath>;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getMeasuredWidth()>();

        $f4 = (float) $i3;

        $f5 = $f4 - f0;

        $i4 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getMeasuredHeight()>();

        $f6 = (float) $i4;

        $f11 = $f6 - f0;

        $f7 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        $f8 = $f7 / 2.0F;

        $f10 = -90.0F - $f8;

        $f9 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        virtualinvoke $r3.<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>(f0, f0, $f5, $f11, $f10, $f9, 1);

     label2:
        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint> = $r6;

        $r7 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r7.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r9 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        $r10 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r9.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r10);

        $r11 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        $i7 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mColor>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i7);

        $r12 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        $i8 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx>;

        $f16 = (float) $i8;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeWidth(float)>($f16);

        $r13 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void updatePathAndPaint()>();

        return;
    }

    public int getThicknessPx()
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        int $i0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        $i0 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx>;

        return $i0;
    }

    public void setThicknessPx(int)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        int i0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        i0 = 0;

     label1:
        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx> = i0;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void updatePathAndPaint()>();

        virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void invalidate()>();

        return;
    }

    public float getSweepAngleDegrees()
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        float $f0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        $f0 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        return $f0;
    }

    public void setSweepAngleDegrees(float)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        float f0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        f0 := @parameter0: float;

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees> = f0;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void updatePathAndPaint()>();

        virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void invalidate()>();

        return;
    }

    public int getColor()
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        int $i0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        $i0 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mColor>;

        return $i0;
    }

    public void setColor(int)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        int i0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        i0 := @parameter0: int;

        r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mColor> = i0;

        specialinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void updatePathAndPaint()>();

        virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: void invalidate()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        android.graphics.Canvas r1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Path mPath>;

        $r2 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r2);

        return;
    }

    public void checkInvalidAttributeAsChild()
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        return;
    }

    public boolean insideClickArea(float, float)
    {
        androidx.wear.tiles.renderer.WearCurvedLineView r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte $b9, $b10, $b11;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: androidx.wear.tiles.renderer.WearCurvedLineView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getHeight()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $f8 = (float) $i2;

        $f9 = $f8 / 2.0F;

        $i3 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getPaddingTop()>();

        $f10 = (float) $i3;

        f2 = $f9 - $f10;

        $i4 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int mThicknessPx>;

        $f11 = (float) $i4;

        f3 = f2 - $f11;

        $i5 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getWidth()>();

        $i6 = $i5 / 2;

        $f12 = (float) $i6;

        f4 = f0 - $f12;

        $i7 = virtualinvoke r0.<androidx.wear.tiles.renderer.WearCurvedLineView: int getHeight()>();

        $i8 = $i7 / 2;

        $f13 = (float) $i8;

        f5 = f1 - $f13;

        $f15 = f4 * f4;

        $f14 = f5 * f5;

        f6 = $f15 + $f14;

        $f16 = f3 * f3;

        $b9 = f6 cmpg $f16;

        if $b9 < 0 goto label1;

        $f17 = f2 * f2;

        $b10 = f6 cmpl $f17;

        if $b10 <= 0 goto label2;

     label1:
        return 0;

     label2:
        $f18 = staticinvoke <java.lang.Math: float abs(float)>(f4);

        $d1 = (double) $f18;

        $f19 = neg f5;

        $d0 = (double) $f19;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        f7 = (float) $d3;

        $f20 = r0.<androidx.wear.tiles.renderer.WearCurvedLineView: float mSweepAngleDegrees>;

        $f21 = $f20 / 2.0F;

        $b11 = f7 cmpg $f21;

        if $b11 >= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

