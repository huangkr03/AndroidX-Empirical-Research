androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSAnnotated annotated>
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSDeclaration container>
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy needsWildcardResolution$delegate>
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy suppressesWildcards$delegate>
    private void <init>(com.google.devtools.ksp.symbol.KSAnnotated, com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope r0;
        com.google.devtools.ksp.symbol.KSAnnotated r1;
        com.google.devtools.ksp.symbol.KSDeclaration r2;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2 $r3;
        kotlin.jvm.functions.Function0 $r4, $r7;
        kotlin.Lazy $r5, $r8;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2 $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSDeclaration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSAnnotated annotated> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSDeclaration container> = r2;

        $r3 = new androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: void <init>(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy needsWildcardResolution$delegate> = $r5;

        $r6 = new androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2: void <init>(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy suppressesWildcards$delegate> = $r8;

        return;
    }

    public final boolean getNeedsWildcardResolution()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy needsWildcardResolution$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final boolean getSuppressesWildcards()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: kotlin.Lazy suppressesWildcards$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final boolean isInKotlinCode(com.google.devtools.ksp.symbol.KSAnnotated)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope r0;
        com.google.devtools.ksp.symbol.KSAnnotated $r1;
        com.google.devtools.ksp.symbol.Origin r2, $r3, $r4, $r5;
        com.google.devtools.ksp.symbol.KSNode r6;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        r6 = (com.google.devtools.ksp.symbol.KSNode) $r1;

     label1:
        if r6 == null goto label6;

        r2 = interfaceinvoke r6.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.Origin getOrigin()>();

        $r3 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin SYNTHETIC>;

        if r2 == $r3 goto label5;

        $r4 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN>;

        if r2 == $r4 goto label2;

        $r5 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN_LIB>;

        if r2 != $r5 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        r6 = interfaceinvoke r6.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.KSNode getParent()>();

        goto label1;

     label6:
        return 0;
    }

<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: androidx.room.compiler.processing.XType findDeclarationType()>
    public void <init>(com.google.devtools.ksp.symbol.KSAnnotated, com.google.devtools.ksp.symbol.KSDeclaration, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope r0;
        com.google.devtools.ksp.symbol.KSAnnotated r1;
        com.google.devtools.ksp.symbol.KSDeclaration r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSDeclaration;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: void <init>(com.google.devtools.ksp.symbol.KSAnnotated,com.google.devtools.ksp.symbol.KSDeclaration)>(r1, r2);

        return;
    }

    public static final boolean access$isInKotlinCode(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope, com.google.devtools.ksp.symbol.KSAnnotated)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r0;
        com.google.devtools.ksp.symbol.KSAnnotated $r1;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        $r1 := @parameter1: com.google.devtools.ksp.symbol.KSAnnotated;

        $z0 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: boolean isInKotlinCode(com.google.devtools.ksp.symbol.KSAnnotated)>($r1);

        return $z0;
    }

    public static final com.google.devtools.ksp.symbol.KSAnnotated access$getAnnotated$p(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r0;
        com.google.devtools.ksp.symbol.KSAnnotated $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSAnnotated annotated>;

        return $r1;
    }

    public static final com.google.devtools.ksp.symbol.KSDeclaration access$getContainer$p(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSDeclaration container>;

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: androidx.room.compiler.processing.ksp.KspExecutableElement kspExecutableElement>
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: int parameterIndex>
    public void <init>(androidx.room.compiler.processing.ksp.KspExecutableElement, int, com.google.devtools.ksp.symbol.KSAnnotated, com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter r0;
        androidx.room.compiler.processing.ksp.KspExecutableElement r1;
        int i0;
        com.google.devtools.ksp.symbol.KSAnnotated r2;
        com.google.devtools.ksp.symbol.KSDeclaration r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspExecutableElement;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.devtools.ksp.symbol.KSAnnotated;

        r3 := @parameter3: com.google.devtools.ksp.symbol.KSDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "kspExecutableElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "annotated");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: void <init>(com.google.devtools.ksp.symbol.KSAnnotated,com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, r3, null);

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: androidx.room.compiler.processing.ksp.KspExecutableElement kspExecutableElement> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: int parameterIndex> = i0;

        return;
    }

    public androidx.room.compiler.processing.XType findDeclarationType()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter r0;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r1, $r2;
        boolean $z0;
        androidx.room.compiler.processing.ksp.KspMethodElement $r3;
        androidx.room.compiler.processing.XMethodType $r4;
        java.util.List $r5;
        int $i0;
        java.lang.Object $r6;
        androidx.room.compiler.processing.XType $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: androidx.room.compiler.processing.ksp.KspExecutableElement kspExecutableElement>;

        $z0 = $r1 instanceof androidx.room.compiler.processing.ksp.KspMethodElement;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: androidx.room.compiler.processing.ksp.KspExecutableElement kspExecutableElement>;

        $r3 = (androidx.room.compiler.processing.ksp.KspMethodElement) $r2;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspMethodElement: androidx.room.compiler.processing.XMethodType getExecutableType()>();

        $r5 = interfaceinvoke $r4.<androidx.room.compiler.processing.XMethodType: java.util.List getParameterTypes()>();

        $i0 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$MethodParameter: int parameterIndex>;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r5, $i0);

        $r7 = (androidx.room.compiler.processing.XType) $r6;

        goto label2;

     label1:
        $r7 = (androidx.room.compiler.processing.XType) null;

     label2:
        return $r7;
    }

androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2 r0;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Boolean invoke()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2 r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r2, $r3, $r6, $r8;
        com.google.devtools.ksp.symbol.KSAnnotated $r4, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>;

        $r4 = staticinvoke <androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSAnnotated access$getAnnotated$p(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>($r2);

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: boolean access$isInKotlinCode(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope,com.google.devtools.ksp.symbol.KSAnnotated)>($r3, $r4);

        if $z0 != 0 goto label4;

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>;

        r1 = staticinvoke <androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSDeclaration access$getContainer$p(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>($r6);

        if r1 == null goto label2;

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>;

        $r7 = (com.google.devtools.ksp.symbol.KSAnnotated) r1;

        $z1 = staticinvoke <androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: boolean access$isInKotlinCode(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope,com.google.devtools.ksp.symbol.KSAnnotated)>($r8, $r7);

        if $z1 != 1 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$needsWildcardResolution$2: java.lang.Boolean invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement declaration>
    public void <init>(androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter r0;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement r1;
        com.google.devtools.ksp.symbol.KSPropertyAccessor $r2;
        com.google.devtools.ksp.symbol.KSAnnotated $r3;
        androidx.room.compiler.processing.ksp.KspFieldElement $r4;
        androidx.room.compiler.processing.ksp.KspMemberContainer $r5;
        com.google.devtools.ksp.symbol.KSDeclaration $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: com.google.devtools.ksp.symbol.KSPropertyAccessor getAccessor()>();

        $r3 = (com.google.devtools.ksp.symbol.KSAnnotated) $r2;

        $r4 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: androidx.room.compiler.processing.ksp.KspFieldElement getField()>();

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspMemberContainer getEnclosingElement()>();

        $r6 = interfaceinvoke $r5.<androidx.room.compiler.processing.ksp.KspMemberContainer: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: void <init>(com.google.devtools.ksp.symbol.KSAnnotated,com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, $r6, null);

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement declaration> = r1;

        return;
    }

    public final androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter r0;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement declaration>;

        return $r1;
    }

    public androidx.room.compiler.processing.XType findDeclarationType()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter r0;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement $r1, $r3;
        androidx.room.compiler.processing.ksp.KspFieldElement $r2;
        java.util.List $r4;
        java.lang.Object $r5;
        androidx.room.compiler.processing.XExecutableParameterElement $r6;
        androidx.room.compiler.processing.XType $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$PropertySetterParameter: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement declaration>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: androidx.room.compiler.processing.ksp.KspFieldElement getField()>();

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement getSyntheticSetter()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: java.util.List getParameters()>();

        if $r4 == null goto label1;

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r4);

        $r6 = (androidx.room.compiler.processing.XExecutableParameterElement) $r5;

        if $r6 == null goto label1;

        $r7 = interfaceinvoke $r6.<androidx.room.compiler.processing.XExecutableParameterElement: androidx.room.compiler.processing.XType getType()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2
<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2 r0;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope;

        r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Boolean invoke()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2 r0;
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope $r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;
        com.google.devtools.ksp.symbol.KSNode $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope: com.google.devtools.ksp.symbol.KSAnnotated access$getAnnotated$p(androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope)>($r1);

        $r3 = (com.google.devtools.ksp.symbol.KSNode) $r2;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSTypeExtKt: boolean hasSuppressWildcardsAnnotationInHierarchy(com.google.devtools.ksp.symbol.KSNode)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspJvmTypeResolutionScope$suppressesWildcards$2: java.lang.Boolean invoke()>();

        return $r1;
    }

