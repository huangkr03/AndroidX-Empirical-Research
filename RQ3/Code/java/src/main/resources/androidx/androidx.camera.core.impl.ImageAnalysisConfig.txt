androidx.camera.core.impl.ImageAnalysisConfig
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_BACKPRESSURE_STRATEGY>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_QUEUE_DEPTH>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_READER_PROXY_PROVIDER>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_FORMAT>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_ONE_PIXEL_SHIFT_ENABLED>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_ROTATION_ENABLED>
<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.OptionsBundle mConfig>
    public void <init>(androidx.camera.core.impl.OptionsBundle)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        androidx.camera.core.impl.OptionsBundle r1;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        r1 := @parameter0: androidx.camera.core.impl.OptionsBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.OptionsBundle mConfig> = r1;

        return;
    }

    public androidx.camera.core.impl.Config getConfig()
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        androidx.camera.core.impl.OptionsBundle $r1;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        $r1 = r0.<androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.OptionsBundle mConfig>;

        return $r1;
    }

    public int getBackpressureStrategy(int)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        i0 := @parameter0: int;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_BACKPRESSURE_STRATEGY>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int getBackpressureStrategy()
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_BACKPRESSURE_STRATEGY>;

        $r2 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getImageQueueDepth(int)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        i0 := @parameter0: int;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_QUEUE_DEPTH>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int getImageQueueDepth()
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_QUEUE_DEPTH>;

        $r2 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getOutputImageFormat(int)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        i0 := @parameter0: int;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_FORMAT>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public java.lang.Boolean getOnePixelShiftEnabled(java.lang.Boolean)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        java.lang.Boolean r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_ONE_PIXEL_SHIFT_ENABLED>;

        $r3 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (java.lang.Boolean) $r3;

        return $r4;
    }

    public java.lang.Boolean isOutputImageRotationEnabled(java.lang.Boolean)
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        java.lang.Boolean r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_ROTATION_ENABLED>;

        $r3 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (java.lang.Boolean) $r3;

        return $r4;
    }

    public androidx.camera.core.ImageReaderProxyProvider getImageReaderProxyProvider()
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        androidx.camera.core.ImageReaderProxyProvider $r3;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        $r1 = <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_READER_PROXY_PROVIDER>;

        $r2 = virtualinvoke r0.<androidx.camera.core.impl.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, null);

        $r3 = (androidx.camera.core.ImageReaderProxyProvider) $r2;

        return $r3;
    }

    public int getInputFormat()
    {
        androidx.camera.core.impl.ImageAnalysisConfig r0;

        r0 := @this: androidx.camera.core.impl.ImageAnalysisConfig;

        return 35;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.Config$Option $r0, $r2, $r3, $r4, $r5, $r6;
        java.lang.Class $r1;

        $r0 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.backpressureStrategy", class "Landroidx/camera/core/ImageAnalysis$BackpressureStrategy;");

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_BACKPRESSURE_STRATEGY> = $r0;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.imageQueueDepth", $r1);

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_QUEUE_DEPTH> = $r2;

        $r3 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.imageReaderProxyProvider", class "Landroidx/camera/core/ImageReaderProxyProvider;");

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_IMAGE_READER_PROXY_PROVIDER> = $r3;

        $r4 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.outputImageFormat", class "Landroidx/camera/core/ImageAnalysis$OutputImageFormat;");

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_FORMAT> = $r4;

        $r5 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.onePixelShiftEnabled", class "Ljava/lang/Boolean;");

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_ONE_PIXEL_SHIFT_ENABLED> = $r5;

        $r6 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageAnalysis.outputImageRotationEnabled", class "Ljava/lang/Boolean;");

        <androidx.camera.core.impl.ImageAnalysisConfig: androidx.camera.core.impl.Config$Option OPTION_OUTPUT_IMAGE_ROTATION_ENABLED> = $r6;

        return;
    }

