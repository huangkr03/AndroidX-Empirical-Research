androidx.fragment.app.FragmentLifecycleCallbacksDispatcher
<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>
<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>
    void <init>(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0;
        androidx.fragment.app.FragmentManager r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks> = $r2;

        r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager> = r1;

        return;
    }

    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r1;
        boolean z0;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r2 = new androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder;

        specialinvoke $r2.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)>(r1, z0);

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r1, $r9;
        java.util.concurrent.CopyOnWriteArrayList r2, $r4, $r5, $r6, $r10;
        int i0, i1;
        java.lang.Throwable r3, $r12;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder $r8;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        i1 = 0;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        i0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

     label2:
        if i1 >= i0 goto label4;

        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>(i1);

        $r8 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r7;

        $r9 = $r8.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        if $r9 != r1 goto label3;

        $r10 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        virtualinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>(i1);

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r12;
        androidx.fragment.app.Fragment r1, r3;
        boolean z0, $z1, $z2;
        android.content.Context r2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r7, $r10, r13;
        androidx.fragment.app.FragmentHostCallback $r6;
        java.util.concurrent.CopyOnWriteArrayList $r8;
        java.lang.Object $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r11;
        java.util.Iterator r14;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>();

        r2 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r7.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r13 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r12 = virtualinvoke r13.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r12.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r14 = virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r9;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r11 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r10 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r11.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>($r10, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentAttached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r12;
        androidx.fragment.app.Fragment r1, r3;
        boolean z0, $z1, $z2;
        android.content.Context r2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r7, $r10, r13;
        androidx.fragment.app.FragmentHostCallback $r6;
        java.util.concurrent.CopyOnWriteArrayList $r8;
        java.lang.Object $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r11;
        java.util.Iterator r14;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()>();

        r2 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r7.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r13 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r12 = virtualinvoke r13.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r12.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r14 = virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r9;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r11 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r10 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r11.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>($r10, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r10;
        androidx.fragment.app.Fragment r1, r3;
        android.os.Bundle r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r8, r11;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        java.util.Iterator r12;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r11 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r10 = virtualinvoke r11.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r10.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r7;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r9 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r8, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r10;
        androidx.fragment.app.Fragment r1, r3;
        android.os.Bundle r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r8, r11;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        java.util.Iterator r12;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r11 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r10 = virtualinvoke r11.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r10.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r7;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r9 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r8, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r10;
        androidx.fragment.app.Fragment r1, r3;
        android.os.Bundle r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r8, r11;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        java.util.Iterator r12;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r11 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r10 = virtualinvoke r11.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r10.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r7;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r9 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r8, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment, android.view.View, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r11;
        androidx.fragment.app.Fragment r1, r4;
        android.view.View r2;
        android.os.Bundle r3;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r5;
        androidx.fragment.app.FragmentManager $r6, $r9, r12;
        java.util.concurrent.CopyOnWriteArrayList $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        java.util.Iterator r13;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r4 = virtualinvoke $r6.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r4 == null goto label1;

        r12 = virtualinvoke r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r11 = virtualinvoke r12.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r11.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>(r1, r2, r3, 1);

     label1:
        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r13 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r8;

        if z0 == 0 goto label3;

        $z1 = r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r10 = r5.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r9 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)>($r9, r1, r2, r3);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentStarted(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentResumed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentPaused(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentStopped(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r10;
        androidx.fragment.app.Fragment r1, r3;
        android.os.Bundle r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r4;
        androidx.fragment.app.FragmentManager $r5, $r8, r11;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        java.util.Iterator r12;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: android.os.Bundle;

        z0 := @parameter2: boolean;

        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r3 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r3 == null goto label1;

        r11 = virtualinvoke r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r10 = virtualinvoke r11.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r10.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>(r1, r2, 1);

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r12 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r7;

        if z0 == 0 goto label3;

        $z1 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r9 = r4.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r8 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r8, r1, r2);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

    void dispatchOnFragmentDetached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0, $r9;
        androidx.fragment.app.Fragment r1, r2;
        boolean z0, $z1, $z2;
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r3;
        androidx.fragment.app.FragmentManager $r4, $r7, r10;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.lang.Object $r6;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r8;
        java.util.Iterator r11;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        r2 = virtualinvoke $r4.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()>();

        if r2 == null goto label1;

        r10 = virtualinvoke r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()>();

        $r9 = virtualinvoke r10.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()>();

        virtualinvoke $r9.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>(r1, 1);

     label1:
        $r5 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        r11 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder) $r6;

        if z0 == 0 goto label3;

        $z1 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label4;

     label3:
        $r8 = r3.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        $r7 = r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager>;

        virtualinvoke $r8.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r7, r1);

     label4:
        goto label2;

     label5:
        return;
    }

androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder
<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>
<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive>
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks r1;
        boolean z0;

        r0 := @this: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder;

        r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback> = r1;

        r0.<androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive> = z0;

        return;
    }

