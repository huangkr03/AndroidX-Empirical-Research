androidx.media3.exoplayer.audio.DecoderAudioRenderer
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: java.lang.String TAG>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int REINITIALIZATION_STATE_NONE>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int REINITIALIZATION_STATE_SIGNAL_END_OF_STREAM>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int REINITIALIZATION_STATE_WAIT_END_OF_STREAM>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int MAX_PENDING_OUTPUT_STREAM_OFFSET_COUNT>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderDelay>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderPadding>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean experimentalKeepAudioTrackOnSeek>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean firstStreamSampleRead>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession sourceDrmSession>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean decoderReceivedBuffers>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowFirstBufferPositionDiscontinuity>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowPositionDiscontinuity>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean inputStreamEnded>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean outputStreamEnded>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long outputStreamOffsetUs>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>
    public void <init>()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.audio.AudioProcessor[] $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = newarray (androidx.media3.common.audio.AudioProcessor)[0];

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void <init>(android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.common.audio.AudioProcessor[])>(null, null, $r1);

        return;
    }

    public transient void <init>(android.os.Handler, androidx.media3.exoplayer.audio.AudioRendererEventListener, androidx.media3.common.audio.AudioProcessor[])
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r2;
        androidx.media3.common.audio.AudioProcessor[] r3;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r3 := @parameter2: androidx.media3.common.audio.AudioProcessor[];

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void <init>(android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.audio.AudioCapabilities,androidx.media3.common.audio.AudioProcessor[])>(r1, r2, null, r3);

        return;
    }

    public transient void <init>(android.os.Handler, androidx.media3.exoplayer.audio.AudioRendererEventListener, androidx.media3.exoplayer.audio.AudioCapabilities, androidx.media3.common.audio.AudioProcessor[])
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r2;
        androidx.media3.exoplayer.audio.AudioCapabilities r3, $r6, $r8;
        androidx.media3.common.audio.AudioProcessor[] r4;
        androidx.media3.exoplayer.audio.DefaultAudioSink$Builder $r5, $r9, $r10;
        java.lang.Object $r7;
        androidx.media3.exoplayer.audio.DefaultAudioSink $r11;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r3 := @parameter2: androidx.media3.exoplayer.audio.AudioCapabilities;

        r4 := @parameter3: androidx.media3.common.audio.AudioProcessor[];

        $r5 = new androidx.media3.exoplayer.audio.DefaultAudioSink$Builder;

        specialinvoke $r5.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: void <init>()>();

        $r6 = <androidx.media3.exoplayer.audio.AudioCapabilities: androidx.media3.exoplayer.audio.AudioCapabilities DEFAULT_AUDIO_CAPABILITIES>;

        $r7 = staticinvoke <com.google.common.base.MoreObjects: java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)>(r3, $r6);

        $r8 = (androidx.media3.exoplayer.audio.AudioCapabilities) $r7;

        $r9 = virtualinvoke $r5.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setAudioCapabilities(androidx.media3.exoplayer.audio.AudioCapabilities)>($r8);

        $r10 = virtualinvoke $r9.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setAudioProcessors(androidx.media3.common.audio.AudioProcessor[])>(r4);

        $r11 = virtualinvoke $r10.<androidx.media3.exoplayer.audio.DefaultAudioSink$Builder: androidx.media3.exoplayer.audio.DefaultAudioSink build()>();

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void <init>(android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.audio.AudioSink)>(r1, r2, $r11);

        return;
    }

    public void <init>(android.os.Handler, androidx.media3.exoplayer.audio.AudioRendererEventListener, androidx.media3.exoplayer.audio.AudioSink)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r2;
        androidx.media3.exoplayer.audio.AudioSink r3;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r4;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener $r5;
        androidx.media3.decoder.DecoderInputBuffer $r6;
        long[] $r7;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        r3 := @parameter2: androidx.media3.exoplayer.audio.AudioSink;

        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void <init>(int)>(1);

        $r4 = new androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher;

        specialinvoke $r4.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void <init>(android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener)>(r1, r2);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher> = $r4;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink> = r3;

        $r5 = new androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        specialinvoke $r5.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: void <init>(androidx.media3.exoplayer.audio.DecoderAudioRenderer,androidx.media3.exoplayer.audio.DecoderAudioRenderer$1)>(r0, null);

        interfaceinvoke r3.<androidx.media3.exoplayer.audio.AudioSink: void setListener(androidx.media3.exoplayer.audio.AudioSink$Listener)>($r5);

        $r6 = staticinvoke <androidx.media3.decoder.DecoderInputBuffer: androidx.media3.decoder.DecoderInputBuffer newNoDataInstance()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer> = $r6;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState> = 0;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setOutputStreamOffsetUs(long)>(-9223372036854775807L);

        $r7 = newarray (long)[10];

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs> = $r7;

        return;
    }

    public void experimentalSetEnableKeepAudioTrackOnSeek(boolean)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean experimentalKeepAudioTrackOnSeek> = z0;

        return;
    }

    public androidx.media3.exoplayer.MediaClock getMediaClock()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        return r0;
    }

    public final int supportsFormat(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.Format r1;
        int i0, $i2, $i3, $i4, $i5;
        byte b1, $b6;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z0 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        $i5 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int)>(0);

        return $i5;

     label1:
        i0 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int supportsFormatInternal(androidx.media3.common.Format)>(r1);

        if i0 > 2 goto label2;

        $i4 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int)>(i0);

        return $i4;

     label2:
        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 21 goto label3;

        $b6 = 32;

        goto label4;

     label3:
        $b6 = 0;

     label4:
        b1 = $b6;

        $i3 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int,int,int)>(i0, 8, b1);

        return $i3;
    }

<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int supportsFormatInternal(androidx.media3.common.Format)>
    protected final boolean sinkSupportsFormat(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.Format r1;
        androidx.media3.exoplayer.audio.AudioSink $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $z0 = interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioSink: boolean supportsFormat(androidx.media3.common.Format)>(r1);

        return $z0;
    }

    protected final int getSinkFormatSupport(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.Format r1;
        androidx.media3.exoplayer.audio.AudioSink $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $i0 = interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioSink: int getFormatSupport(androidx.media3.common.Format)>(r1);

        return $i0;
    }

    public void render(long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        long l0, l1;
        int i2;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.common.Format $r1, $r10;
        androidx.media3.decoder.Decoder $r2;
        androidx.media3.exoplayer.DecoderCounters $r3;
        androidx.media3.decoder.DecoderInputBuffer $r4, $r5, $r6;
        androidx.media3.exoplayer.audio.AudioSink $r7;
        java.lang.Throwable $r8, r13, r14;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r9;
        androidx.media3.exoplayer.ExoPlaybackException $r11;
        androidx.media3.exoplayer.FormatHolder r12;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean outputStreamEnded>;

        if $z0 == 0 goto label02;

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.audio.AudioSink: void playToEndOfStream()>();

        goto label01;

     label01:
        return;

     label02:
        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        if $r1 != null goto label06;

        r12 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.FormatHolder getFormatHolder()>();

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer>;

        virtualinvoke $r4.<androidx.media3.decoder.DecoderInputBuffer: void clear()>();

        $r5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer>;

        i2 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int readSource(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r12, $r5, 2);

        if i2 != -5 goto label03;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void onInputFormatChanged(androidx.media3.exoplayer.FormatHolder)>(r12);

        goto label06;

     label03:
        if i2 != -4 goto label05;

        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer>;

        $z3 = virtualinvoke $r6.<androidx.media3.decoder.DecoderInputBuffer: boolean isEndOfStream()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z3);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean inputStreamEnded> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void processEndOfStream()>();

        goto label04;

     label04:
        return;

     label05:
        return;

     label06:
        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void maybeInitDecoder()>();

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r2 == null goto label14;

     label07:
        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("drainAndFeed");

     label08:
        $z1 = specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean drainOutputBuffer()>();

        if $z1 == 0 goto label09;

        goto label08;

     label09:
        $z2 = specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean feedInputBuffer()>();

        if $z2 == 0 goto label10;

        goto label09;

     label10:
        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

        r13 = $r8;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DecoderAudioRenderer", "Audio codec error", r13);

        $r9 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r9.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void audioCodecError(java.lang.Exception)>(r13);

        $r10 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        $r11 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,int)>(r13, $r10, 4003);

        r14 = (java.lang.Throwable) $r11;

        throw r14;

     label13:
        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        virtualinvoke $r3.<androidx.media3.exoplayer.DecoderCounters: void ensureUpdated()>();

     label14:
        return;

        catch androidx.media3.decoder.DecoderException from label07 to label11 with label12;
    }

    protected void onPositionDiscontinuity()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowPositionDiscontinuity> = 1;

        return;
    }

<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder createDecoder(androidx.media3.common.Format,androidx.media3.decoder.CryptoConfig)>
<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format getOutputFormat(androidx.media3.decoder.Decoder)>
    protected androidx.media3.exoplayer.DecoderReuseEvaluation canReuseDecoder(java.lang.String, androidx.media3.common.Format, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        java.lang.String r1;
        androidx.media3.common.Format r2, r3;
        androidx.media3.exoplayer.DecoderReuseEvaluation $r4;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Format;

        r3 := @parameter2: androidx.media3.common.Format;

        $r4 = new androidx.media3.exoplayer.DecoderReuseEvaluation;

        specialinvoke $r4.<androidx.media3.exoplayer.DecoderReuseEvaluation: void <init>(java.lang.String,androidx.media3.common.Format,androidx.media3.common.Format,int,int)>(r1, r2, r3, 0, 1);

        return $r4;
    }

    private boolean drainOutputBuffer() throws androidx.media3.exoplayer.ExoPlaybackException, androidx.media3.decoder.DecoderException, androidx.media3.exoplayer.audio.AudioSink$ConfigurationException, androidx.media3.exoplayer.audio.AudioSink$InitializationException, androidx.media3.exoplayer.audio.AudioSink$WriteException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.Format r1, $r10;
        androidx.media3.decoder.SimpleDecoderOutputBuffer $r2, $r3, $r4, $r8, $r15, $r18, $r19, $r20, $r21, $r23, $r25;
        boolean $z0, $z1, $z2, $z3;
        long $l0;
        java.nio.ByteBuffer $r5;
        androidx.media3.exoplayer.audio.AudioSink $r6, $r14, $r24;
        androidx.media3.exoplayer.DecoderCounters $r7, $r22;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.media3.decoder.Decoder $r9, $r16;
        androidx.media3.common.Format$Builder $r11, $r12, $r13;
        java.lang.Object $r17;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        if $r2 != null goto label3;

        $r16 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r17 = interfaceinvoke $r16.<androidx.media3.decoder.Decoder: java.lang.Object dequeueOutputBuffer()>();

        $r18 = (androidx.media3.decoder.SimpleDecoderOutputBuffer) $r17;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer> = $r18;

        $r19 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        if $r19 != null goto label1;

        return 0;

     label1:
        $r20 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $i6 = $r20.<androidx.media3.decoder.SimpleDecoderOutputBuffer: int skippedOutputBufferCount>;

        if $i6 <= 0 goto label2;

        $r22 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        $i8 = $r22.<androidx.media3.exoplayer.DecoderCounters: int skippedOutputBufferCount>;

        $r23 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $i7 = $r23.<androidx.media3.decoder.SimpleDecoderOutputBuffer: int skippedOutputBufferCount>;

        $i9 = $i8 + $i7;

        $r22.<androidx.media3.exoplayer.DecoderCounters: int skippedOutputBufferCount> = $i9;

        $r24 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r24.<androidx.media3.exoplayer.audio.AudioSink: void handleDiscontinuity()>();

     label2:
        $r21 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $z2 = virtualinvoke $r21.<androidx.media3.decoder.SimpleDecoderOutputBuffer: boolean isFirstSample()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void processFirstSampleOfStream()>();

     label3:
        $r25 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $z3 = virtualinvoke $r25.<androidx.media3.decoder.SimpleDecoderOutputBuffer: boolean isEndOfStream()>();

        if $z3 == 0 goto label6;

        $i5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState>;

        if $i5 != 2 goto label4;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void releaseDecoder()>();

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void maybeInitDecoder()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure> = 1;

        goto label5;

     label4:
        $r15 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        virtualinvoke $r15.<androidx.media3.decoder.SimpleDecoderOutputBuffer: void release()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer> = null;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void processEndOfStream()>();

        goto label5;

     label5:
        return 0;

     label6:
        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure>;

        if $z0 == 0 goto label7;

        $r9 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r10 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format getOutputFormat(androidx.media3.decoder.Decoder)>($r9);

        $r11 = virtualinvoke $r10.<androidx.media3.common.Format: androidx.media3.common.Format$Builder buildUpon()>();

        $i3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderDelay>;

        $r12 = virtualinvoke $r11.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderDelay(int)>($i3);

        $i4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderPadding>;

        $r13 = virtualinvoke $r12.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setEncoderPadding(int)>($i4);

        r1 = virtualinvoke $r13.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        $r14 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r14.<androidx.media3.exoplayer.audio.AudioSink: void configure(androidx.media3.common.Format,int,int[])>(r1, 0, null);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure> = 0;

     label7:
        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $r5 = $r3.<androidx.media3.decoder.SimpleDecoderOutputBuffer: java.nio.ByteBuffer data>;

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        $l0 = $r4.<androidx.media3.decoder.SimpleDecoderOutputBuffer: long timeUs>;

        $z1 = interfaceinvoke $r6.<androidx.media3.exoplayer.audio.AudioSink: boolean handleBuffer(java.nio.ByteBuffer,long,int)>($r5, $l0, 1);

        if $z1 == 0 goto label8;

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        $i1 = $r7.<androidx.media3.exoplayer.DecoderCounters: int renderedOutputBufferCount>;

        $i2 = $i1 + 1;

        $r7.<androidx.media3.exoplayer.DecoderCounters: int renderedOutputBufferCount> = $i2;

        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        virtualinvoke $r8.<androidx.media3.decoder.SimpleDecoderOutputBuffer: void release()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer> = null;

        return 1;

     label8:
        return 0;
    }

    private void processFirstSampleOfStream()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;
        int $i0, $i2, $i3, $i4;
        long[] $r2, $r3, $r4;
        long $l1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void handleDiscontinuity()>();

        $i0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $l1 = $r2[0];

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setOutputStreamOffsetUs(long)>($l1);

        $i2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        $i3 = $i2 - 1;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount> = $i3;

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $i4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 1, $r3, 0, $i4);

     label1:
        return;
    }

    private void setOutputStreamOffsetUs(long)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        long l0;
        byte $b1;
        androidx.media3.exoplayer.audio.AudioSink $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long outputStreamOffsetUs> = l0;

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void setOutputStreamOffsetUs(long)>(l0);

     label1:
        return;
    }

    private boolean feedInputBuffer() throws androidx.media3.decoder.DecoderException, androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.decoder.Decoder $r2, $r11, $r15, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;
        androidx.media3.decoder.DecoderInputBuffer $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r13, $r14, $r17, $r18, $r22, $r23;
        androidx.media3.common.Format $r7;
        androidx.media3.exoplayer.DecoderCounters $r12;
        java.lang.IllegalStateException $r16;
        java.lang.Object $r21;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r2 == null goto label01;

        $i0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState>;

        if $i0 == 2 goto label01;

        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean inputStreamEnded>;

        if $z0 == 0 goto label02;

     label01:
        return 0;

     label02:
        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        if $r3 != null goto label03;

        $r20 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r21 = interfaceinvoke $r20.<androidx.media3.decoder.Decoder: java.lang.Object dequeueInputBuffer()>();

        $r22 = (androidx.media3.decoder.DecoderInputBuffer) $r21;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = $r22;

        $r23 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        if $r23 != null goto label03;

        return 0;

     label03:
        $i1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState>;

        if $i1 != 1 goto label04;

        $r17 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        virtualinvoke $r17.<androidx.media3.decoder.DecoderInputBuffer: void setFlags(int)>(4);

        $r19 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r18 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        interfaceinvoke $r19.<androidx.media3.decoder.Decoder: void queueInputBuffer(java.lang.Object)>($r18);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = null;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState> = 2;

        return 0;

     label04:
        r1 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.FormatHolder getFormatHolder()>();

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        $i2 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int readSource(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r1, $r4, 0);

        tableswitch($i2)
        {
            case -5: goto label06;
            case -4: goto label07;
            case -3: goto label05;
            default: goto label10;
        };

     label05:
        return 0;

     label06:
        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void onInputFormatChanged(androidx.media3.exoplayer.FormatHolder)>(r1);

        return 1;

     label07:
        $r5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        $z1 = virtualinvoke $r5.<androidx.media3.decoder.DecoderInputBuffer: boolean isEndOfStream()>();

        if $z1 == 0 goto label08;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean inputStreamEnded> = 1;

        $r15 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r14 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        interfaceinvoke $r15.<androidx.media3.decoder.Decoder: void queueInputBuffer(java.lang.Object)>($r14);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = null;

        return 0;

     label08:
        $z2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean firstStreamSampleRead>;

        if $z2 != 0 goto label09;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean firstStreamSampleRead> = 1;

        $r13 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        virtualinvoke $r13.<androidx.media3.decoder.DecoderInputBuffer: void addFlag(int)>(134217728);

     label09:
        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        virtualinvoke $r6.<androidx.media3.decoder.DecoderInputBuffer: void flip()>();

        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        $r8.<androidx.media3.decoder.DecoderInputBuffer: androidx.media3.common.Format format> = $r7;

        $r9 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void onQueueInputBuffer(androidx.media3.decoder.DecoderInputBuffer)>($r9);

        $r11 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r10 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer>;

        interfaceinvoke $r11.<androidx.media3.decoder.Decoder: void queueInputBuffer(java.lang.Object)>($r10);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean decoderReceivedBuffers> = 1;

        $r12 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        $i3 = $r12.<androidx.media3.exoplayer.DecoderCounters: int queuedInputBufferCount>;

        $i4 = $i3 + 1;

        $r12.<androidx.media3.exoplayer.DecoderCounters: int queuedInputBufferCount> = $i4;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = null;

        return 1;

     label10:
        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>()>();

        throw $r16;
    }

    private void processEndOfStream() throws androidx.media3.exoplayer.audio.AudioSink$WriteException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean outputStreamEnded> = 1;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void playToEndOfStream()>();

        return;
    }

    private void flushDecoder() throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        int $i0;
        androidx.media3.decoder.SimpleDecoderOutputBuffer $r1, $r3;
        androidx.media3.decoder.Decoder $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $i0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void releaseDecoder()>();

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void maybeInitDecoder()>();

        goto label3;

     label1:
        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = null;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        virtualinvoke $r3.<androidx.media3.decoder.SimpleDecoderOutputBuffer: void release()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer> = null;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        interfaceinvoke $r2.<androidx.media3.decoder.Decoder: void flush()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean decoderReceivedBuffers> = 0;

     label3:
        return;
    }

    public boolean isEnded()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.audio.AudioSink $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean outputStreamEnded>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $z1 = interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: boolean isEnded()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isReady()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;
        boolean $z0, $z1, $z2;
        androidx.media3.common.Format $r2;
        androidx.media3.decoder.SimpleDecoderOutputBuffer $r3;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $z0 = interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: boolean hasPendingData()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        if $r2 == null goto label2;

        $z1 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean isSourceReady()>();

        if $z1 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer>;

        if $r3 == null goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public long getPositionUs()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        int $i0;
        long $l1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $i0 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int getState()>();

        if $i0 != 2 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void updateCurrentPosition()>();

     label1:
        $l1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs>;

        return $l1;
    }

    public void setPlaybackParameters(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.PlaybackParameters r1;
        androidx.media3.exoplayer.audio.AudioSink $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioSink: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        return;
    }

    public androidx.media3.common.PlaybackParameters getPlaybackParameters()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;
        androidx.media3.common.PlaybackParameters $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r2 = interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: androidx.media3.common.PlaybackParameters getPlaybackParameters()>();

        return $r2;
    }

    protected void onEnabled(boolean, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        boolean z0, z1, $z2;
        androidx.media3.exoplayer.DecoderCounters $r1, $r2;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r3;
        androidx.media3.exoplayer.RendererConfiguration $r4;
        androidx.media3.exoplayer.audio.AudioSink $r5, $r6, $r8;
        androidx.media3.exoplayer.analytics.PlayerId $r7;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = new androidx.media3.exoplayer.DecoderCounters;

        specialinvoke $r1.<androidx.media3.exoplayer.DecoderCounters: void <init>()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters> = $r1;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        virtualinvoke $r3.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void enabled(androidx.media3.exoplayer.DecoderCounters)>($r2);

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.RendererConfiguration getConfiguration()>();

        $z2 = $r4.<androidx.media3.exoplayer.RendererConfiguration: boolean tunneling>;

        if $z2 == 0 goto label1;

        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.audio.AudioSink: void enableTunnelingV21()>();

        goto label2;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.audio.AudioSink: void disableTunneling()>();

     label2:
        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        interfaceinvoke $r6.<androidx.media3.exoplayer.audio.AudioSink: void setPlayerId(androidx.media3.exoplayer.analytics.PlayerId)>($r7);

        return;
    }

    protected void onPositionReset(long, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        long l0;
        boolean z0, $z1;
        androidx.media3.exoplayer.audio.AudioSink $r1, $r3;
        androidx.media3.decoder.Decoder $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean experimentalKeepAudioTrackOnSeek>;

        if $z1 == 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.audio.AudioSink: void experimentalFlushWithoutAudioTrackRelease()>();

        goto label2;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void flush()>();

     label2:
        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs> = l0;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowFirstBufferPositionDiscontinuity> = 1;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowPositionDiscontinuity> = 1;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean inputStreamEnded> = 0;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean outputStreamEnded> = 0;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r2 == null goto label3;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void flushDecoder()>();

     label3:
        return;
    }

    protected void onStarted()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void play()>();

        return;
    }

    protected void onStopped()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioSink $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void updateCurrentPosition()>();

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: void pause()>();

        return;
    }

    protected void onDisabled()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        java.lang.Throwable r1, $r5;
        androidx.media3.exoplayer.audio.AudioSink $r2;
        androidx.media3.exoplayer.DecoderCounters $r3, $r6;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r4, $r7;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat> = null;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure> = 1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setOutputStreamOffsetUs(long)>(-9223372036854775807L);

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setSourceDrmSession(androidx.media3.exoplayer.drm.DrmSession)>(null);

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void releaseDecoder()>();

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioSink: void reset()>();

     label2:
        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        virtualinvoke $r4.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void disabled(androidx.media3.exoplayer.DecoderCounters)>($r3);

        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        virtualinvoke $r7.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void disabled(androidx.media3.exoplayer.DecoderCounters)>($r6);

        throw r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void onStreamChanged(androidx.media3.common.Format[], long, long) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.common.Format[] r1;
        long l0, l1, $l2, $l12;
        byte $b3;
        long[] $r2, $r3, $r6;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void onStreamChanged(androidx.media3.common.Format[],long,long)>(r1, l0, l1);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean firstStreamSampleRead> = 0;

        $l2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long outputStreamOffsetUs>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 != 0 goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setOutputStreamOffsetUs(long)>(l1);

        goto label4;

     label1:
        $i5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $i4 = lengthof $r2;

        if $i5 != $i4 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many stream changes, so dropping offset: ");

        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $i10 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        $i11 = $i10 - 1;

        $l12 = $r6[$i11];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("DecoderAudioRenderer", $r8);

        goto label3;

     label2:
        $i6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        $i7 = $i6 + 1;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount> = $i7;

     label3:
        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long[] pendingOutputStreamOffsetsUs>;

        $i8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int pendingOutputStreamOffsetCount>;

        $i9 = $i8 - 1;

        $r3[$i9] = l1;

     label4:
        return;
    }

    public void handleMessage(int, java.lang.Object) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        androidx.media3.common.AudioAttributes r2;
        androidx.media3.common.AuxEffectInfo r3;
        androidx.media3.exoplayer.audio.AudioSink $r4, $r6, $r8, $r9, $r10, $r12;
        java.lang.Integer $r5;
        java.lang.Boolean $r7;
        boolean $z0;
        java.lang.Float $r11;
        float $f0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label7;
            case 5: goto label7;
            case 6: goto label3;
            case 7: goto label7;
            case 8: goto label7;
            case 9: goto label4;
            case 10: goto label5;
            case 11: goto label7;
            case 12: goto label6;
            default: goto label7;
        };

     label1:
        $r12 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r11 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        interfaceinvoke $r12.<androidx.media3.exoplayer.audio.AudioSink: void setVolume(float)>($f0);

        goto label8;

     label2:
        r2 = (androidx.media3.common.AudioAttributes) r1;

        $r10 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r10.<androidx.media3.exoplayer.audio.AudioSink: void setAudioAttributes(androidx.media3.common.AudioAttributes)>(r2);

        goto label8;

     label3:
        r3 = (androidx.media3.common.AuxEffectInfo) r1;

        $r9 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        interfaceinvoke $r9.<androidx.media3.exoplayer.audio.AudioSink: void setAuxEffectInfo(androidx.media3.common.AuxEffectInfo)>(r3);

        goto label8;

     label4:
        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r7 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r8.<androidx.media3.exoplayer.audio.AudioSink: void setSkipSilenceEnabled(boolean)>($z0);

        goto label8;

     label5:
        $r6 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $r5 = (java.lang.Integer) r1;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r6.<androidx.media3.exoplayer.audio.AudioSink: void setAudioSessionId(int)>($i2);

        goto label8;

     label6:
        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 23 goto label8;

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        staticinvoke <androidx.media3.exoplayer.audio.DecoderAudioRenderer$Api23: void setAudioSinkPreferredDevice(androidx.media3.exoplayer.audio.AudioSink,java.lang.Object)>($r4, r1);

        goto label8;

     label7:
        specialinvoke r0.<androidx.media3.exoplayer.BaseRenderer: void handleMessage(int,java.lang.Object)>(i0, r1);

     label8:
        return;
    }

    private void maybeInitDecoder() throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        long l0, l1, $l2;
        androidx.media3.decoder.Decoder $r1, $r16, $r18;
        androidx.media3.exoplayer.drm.DrmSession $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6, $r10, r21, r22, r23, r24;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r7, $r17;
        androidx.media3.common.Format $r8, $r11, $r15;
        androidx.media3.exoplayer.ExoPlaybackException $r9, $r12;
        androidx.media3.decoder.CryptoConfig r13;
        androidx.media3.exoplayer.drm.DrmSession$DrmSessionException r14;
        java.lang.String $r19;
        androidx.media3.exoplayer.DecoderCounters $r20;
        int $i3, $i4;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession sourceDrmSession>;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setDecoderDrmSession(androidx.media3.exoplayer.drm.DrmSession)>($r2);

        r13 = null;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>;

        if $r3 == null goto label3;

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>;

        r13 = interfaceinvoke $r4.<androidx.media3.exoplayer.drm.DrmSession: androidx.media3.decoder.CryptoConfig getCryptoConfig()>();

        if r13 != null goto label3;

        $r5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>;

        r14 = interfaceinvoke $r5.<androidx.media3.exoplayer.drm.DrmSession: androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError()>();

        if r14 == null goto label2;

        goto label3;

     label2:
        return;

     label3:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("createAudioDecoder");

        $r15 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        $r16 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder createDecoder(androidx.media3.common.Format,androidx.media3.decoder.CryptoConfig)>($r15, r13);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder> = $r16;

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r17 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r18 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r19 = interfaceinvoke $r18.<androidx.media3.decoder.Decoder: java.lang.String getName()>();

        $l2 = l0 - l1;

        virtualinvoke $r17.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void decoderInitialized(java.lang.String,long,long)>($r19, l0, $l2);

        $r20 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        $i3 = $r20.<androidx.media3.exoplayer.DecoderCounters: int decoderInitCount>;

        $i4 = $i3 + 1;

        $r20.<androidx.media3.exoplayer.DecoderCounters: int decoderInitCount> = $i4;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r21 = $r6;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DecoderAudioRenderer", "Audio codec error", r21);

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r7.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void audioCodecError(java.lang.Exception)>(r21);

        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        $r9 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,int)>(r21, $r8, 4001);

        r23 = (java.lang.Throwable) $r9;

        throw r23;

     label6:
        $r10 := @caughtexception;

        r22 = $r10;

        $r11 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        $r12 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,int)>(r22, $r11, 4001);

        r24 = (java.lang.Throwable) $r12;

        throw r24;

     label7:
        return;

        catch androidx.media3.decoder.DecoderException from label3 to label4 with label5;
        catch java.lang.OutOfMemoryError from label3 to label4 with label6;
    }

    private void releaseDecoder()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.decoder.Decoder $r1, $r3, $r4;
        androidx.media3.exoplayer.DecoderCounters $r2;
        int $i0, $i1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.DecoderInputBuffer inputBuffer> = null;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.SimpleDecoderOutputBuffer outputBuffer> = null;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState> = 0;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean decoderReceivedBuffers> = 0;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        $i0 = $r2.<androidx.media3.exoplayer.DecoderCounters: int decoderReleaseCount>;

        $i1 = $i0 + 1;

        $r2.<androidx.media3.exoplayer.DecoderCounters: int decoderReleaseCount> = $i1;

        $r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        interfaceinvoke $r3.<androidx.media3.decoder.Decoder: void release()>();

        $r5 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r4 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r6 = interfaceinvoke $r4.<androidx.media3.decoder.Decoder: java.lang.String getName()>();

        virtualinvoke $r5.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void decoderReleased(java.lang.String)>($r6);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder> = null;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setDecoderDrmSession(androidx.media3.exoplayer.drm.DrmSession)>(null);

        return;
    }

    private void setSourceDrmSession(androidx.media3.exoplayer.drm.DrmSession)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.drm.DrmSession r1, $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSession;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession sourceDrmSession>;

        staticinvoke <androidx.media3.exoplayer.drm.DrmSession: void replaceSession(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession)>($r2, r1);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession sourceDrmSession> = r1;

        return;
    }

    private void setDecoderDrmSession(androidx.media3.exoplayer.drm.DrmSession)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.drm.DrmSession r1, $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSession;

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>;

        staticinvoke <androidx.media3.exoplayer.drm.DrmSession: void replaceSession(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession)>($r2, r1);

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession> = r1;

        return;
    }

    private void onInputFormatChanged(androidx.media3.exoplayer.FormatHolder) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.FormatHolder r1;
        androidx.media3.common.Format r2, r3, $r4, $r15, $r19;
        java.lang.Object $r5;
        androidx.media3.exoplayer.drm.DrmSession $r6, $r8, $r9;
        int $i0, $i1, $i2;
        androidx.media3.decoder.Decoder $r7, $r10, $r13;
        java.lang.String $r11, $r14;
        boolean $z0;
        androidx.media3.exoplayer.DecoderReuseEvaluation $r12, r17;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r16, $r18;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.exoplayer.FormatHolder;

        $r4 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r2 = (androidx.media3.common.Format) $r5;

        $r6 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.exoplayer.drm.DrmSession drmSession>;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void setSourceDrmSession(androidx.media3.exoplayer.drm.DrmSession)>($r6);

        r3 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat> = r2;

        $i0 = r2.<androidx.media3.common.Format: int encoderDelay>;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderDelay> = $i0;

        $i1 = r2.<androidx.media3.common.Format: int encoderPadding>;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int encoderPadding> = $i1;

        $r7 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        if $r7 != null goto label1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void maybeInitDecoder()>();

        $r16 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r15 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        virtualinvoke $r16.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void inputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation)>($r15, null);

        return;

     label1:
        $r9 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession sourceDrmSession>;

        $r8 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.drm.DrmSession decoderDrmSession>;

        if $r9 == $r8 goto label2;

        $r12 = new androidx.media3.exoplayer.DecoderReuseEvaluation;

        $r13 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r14 = interfaceinvoke $r13.<androidx.media3.decoder.Decoder: java.lang.String getName()>();

        specialinvoke $r12.<androidx.media3.exoplayer.DecoderReuseEvaluation: void <init>(java.lang.String,androidx.media3.common.Format,androidx.media3.common.Format,int,int)>($r14, r3, r2, 0, 128);

        r17 = $r12;

        goto label3;

     label2:
        $r10 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.decoder.Decoder decoder>;

        $r11 = interfaceinvoke $r10.<androidx.media3.decoder.Decoder: java.lang.String getName()>();

        r17 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.DecoderReuseEvaluation canReuseDecoder(java.lang.String,androidx.media3.common.Format,androidx.media3.common.Format)>($r11, r3, r2);

     label3:
        $i2 = r17.<androidx.media3.exoplayer.DecoderReuseEvaluation: int result>;

        if $i2 != 0 goto label5;

        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean decoderReceivedBuffers>;

        if $z0 == 0 goto label4;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: int decoderReinitializationState> = 1;

        goto label5;

     label4:
        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void releaseDecoder()>();

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void maybeInitDecoder()>();

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean audioTrackNeedsConfigure> = 1;

     label5:
        $r18 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        $r19 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.common.Format inputFormat>;

        virtualinvoke $r18.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void inputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation)>($r19, r17);

        return;
    }

    protected void onQueueInputBuffer(androidx.media3.decoder.DecoderInputBuffer)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.decoder.DecoderInputBuffer r1;
        boolean $z0, $z1;
        long $l0, $l1, $l2, $l3, $l5;
        byte $b4;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r1 := @parameter0: androidx.media3.decoder.DecoderInputBuffer;

        $z0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowFirstBufferPositionDiscontinuity>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<androidx.media3.decoder.DecoderInputBuffer: boolean isDecodeOnly()>();

        if $z1 != 0 goto label2;

        $l1 = r1.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        $l0 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs>;

        $l2 = $l1 - $l0;

        $l3 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $b4 = $l3 cmp 500000L;

        if $b4 <= 0 goto label1;

        $l5 = r1.<androidx.media3.decoder.DecoderInputBuffer: long timeUs>;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs> = $l5;

     label1:
        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowFirstBufferPositionDiscontinuity> = 0;

     label2:
        return;
    }

    private void updateCurrentPosition()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        long l0, $l2, $l3;
        androidx.media3.exoplayer.audio.AudioSink $r1;
        boolean $z0, $z1;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioSink audioSink>;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean isEnded()>();

        l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioSink: long getCurrentPositionUs(boolean)>($z0);

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label3;

        $z1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowPositionDiscontinuity>;

        if $z1 == 0 goto label1;

        $l3 = l0;

        goto label2;

     label1:
        $l2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs>;

        $l3 = staticinvoke <java.lang.Math: long max(long,long)>($l2, l0);

     label2:
        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: long currentPositionUs> = $l3;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: boolean allowPositionDiscontinuity> = 0;

     label3:
        return;
    }

    static androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$100(androidx.media3.exoplayer.audio.DecoderAudioRenderer)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r1;

        r0 := @parameter0: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher>;

        return $r1;
    }

androidx.media3.exoplayer.audio.DecoderAudioRenderer$1
androidx.media3.exoplayer.audio.DecoderAudioRenderer$Api23
    private void <init>()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$Api23 r0;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$Api23;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setAudioSinkPreferredDevice(androidx.media3.exoplayer.audio.AudioSink, java.lang.Object)
    {
        androidx.media3.exoplayer.audio.AudioSink r0;
        java.lang.Object r1;
        android.media.AudioDeviceInfo r2;

        r0 := @parameter0: androidx.media3.exoplayer.audio.AudioSink;

        r1 := @parameter1: java.lang.Object;

        r2 = (android.media.AudioDeviceInfo) r1;

        interfaceinvoke r0.<androidx.media3.exoplayer.audio.AudioSink: void setPreferredDevice(android.media.AudioDeviceInfo)>(r2);

        return;
    }

androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener
<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>
    private void <init>(androidx.media3.exoplayer.audio.DecoderAudioRenderer)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        r1 := @parameter0: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPositionDiscontinuity()
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer $r1;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>;

        virtualinvoke $r1.<androidx.media3.exoplayer.audio.DecoderAudioRenderer: void onPositionDiscontinuity()>();

        return;
    }

    public void onPositionAdvancing(long)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        long l0;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer $r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$100(androidx.media3.exoplayer.audio.DecoderAudioRenderer)>($r1);

        virtualinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void positionAdvancing(long)>(l0);

        return;
    }

    public void onUnderrun(int, long, long)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        int i0;
        long l1, l2;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer $r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$100(androidx.media3.exoplayer.audio.DecoderAudioRenderer)>($r1);

        virtualinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void underrun(int,long,long)>(i0, l1, l2);

        return;
    }

    public void onSkipSilenceEnabledChanged(boolean)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        boolean z0;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer $r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>;

        $r2 = staticinvoke <androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$100(androidx.media3.exoplayer.audio.DecoderAudioRenderer)>($r1);

        virtualinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void skipSilenceEnabledChanged(boolean)>(z0);

        return;
    }

    public void onAudioSinkError(java.lang.Exception)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        java.lang.Exception r1;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer $r2;
        androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher $r3;
        java.lang.Throwable r4;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        r1 := @parameter0: java.lang.Exception;

        r4 = (java.lang.Throwable) r1;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DecoderAudioRenderer", "Audio sink error", r4);

        $r2 = r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: androidx.media3.exoplayer.audio.DecoderAudioRenderer this$0>;

        $r3 = staticinvoke <androidx.media3.exoplayer.audio.DecoderAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$100(androidx.media3.exoplayer.audio.DecoderAudioRenderer)>($r2);

        virtualinvoke $r3.<androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher: void audioSinkError(java.lang.Exception)>(r1);

        return;
    }

    void <init>(androidx.media3.exoplayer.audio.DecoderAudioRenderer, androidx.media3.exoplayer.audio.DecoderAudioRenderer$1)
    {
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener r0;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer r1;
        androidx.media3.exoplayer.audio.DecoderAudioRenderer$1 r2;

        r0 := @this: androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener;

        r1 := @parameter0: androidx.media3.exoplayer.audio.DecoderAudioRenderer;

        r2 := @parameter1: androidx.media3.exoplayer.audio.DecoderAudioRenderer$1;

        specialinvoke r0.<androidx.media3.exoplayer.audio.DecoderAudioRenderer$AudioSinkListener: void <init>(androidx.media3.exoplayer.audio.DecoderAudioRenderer)>(r1);

        return;
    }

