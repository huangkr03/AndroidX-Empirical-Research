androidx.wear.widget.ArcLayout
<androidx.wear.widget.ArcLayout: int ANCHOR_START>
<androidx.wear.widget.ArcLayout: int ANCHOR_CENTER>
<androidx.wear.widget.ArcLayout: int ANCHOR_END>
<androidx.wear.widget.ArcLayout: float DEFAULT_START_ANGLE_DEGREES>
<androidx.wear.widget.ArcLayout: boolean DEFAULT_LAYOUT_DIRECTION_IS_CLOCKWISE>
<androidx.wear.widget.ArcLayout: int DEFAULT_ANCHOR_TYPE>
<androidx.wear.widget.ArcLayout: int mThicknessPx>
<androidx.wear.widget.ArcLayout: int mAnchorType>
<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees>
<androidx.wear.widget.ArcLayout: boolean mClockwise>
<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>
<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>
    public void <init>(android.content.Context)
    {
        androidx.wear.widget.ArcLayout r0;
        android.content.Context r1;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.wear.widget.ArcLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.wear.widget.ArcLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.wear.widget.ArcLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.content.res.TypedArray r3;
        androidx.wear.widget.ArcLayout$ChildArcAngles $r4;
        int[] $r5;
        float $f0;
        boolean $z0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<androidx.wear.widget.ArcLayout: int mThicknessPx> = 0;

        $r4 = new androidx.wear.widget.ArcLayout$ChildArcAngles;

        specialinvoke $r4.<androidx.wear.widget.ArcLayout$ChildArcAngles: void <init>(androidx.wear.widget.ArcLayout$1)>(null);

        r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles> = $r4;

        r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView> = null;

        $r5 = <androidx.wear.R$styleable: int[] ArcLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i0, i1);

        $i2 = <androidx.wear.R$styleable: int ArcLayout_anchorPosition>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i2, 0);

        r0.<androidx.wear.widget.ArcLayout: int mAnchorType> = $i3;

        $i4 = <androidx.wear.R$styleable: int ArcLayout_anchorAngleDegrees>;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i4, 0.0F);

        r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees> = $f0;

        $i5 = <androidx.wear.R$styleable: int ArcLayout_clockwise>;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i5, 1);

        r0.<androidx.wear.widget.ArcLayout: boolean mClockwise> = $z0;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void requestLayout()
    {
        androidx.wear.widget.ArcLayout r0;
        int $i0, i1;
        android.view.View $r1;

        r0 := @this: androidx.wear.widget.ArcLayout;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i1 >= $i0 goto label2;

        $r1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void forceLayout()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.wear.widget.ArcLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33, $i34, i35, i36;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r1, $r2, $r3, $r4;
        float $f0, f1;
        androidx.wear.widget.ArcLayout$Widget $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        android.util.DisplayMetrics r8;
        android.view.View r9, r11;
        androidx.wear.widget.ArcLayout$LayoutParams r10, r12;

        r0 := @this: androidx.wear.widget.ArcLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i28 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i29 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if $i4 != 0 goto label01;

        $i27 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if $i27 != 0 goto label01;

        $r6 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i28 = r8.<android.util.DisplayMetrics: int widthPixels>;

        i29 = r8.<android.util.DisplayMetrics: int heightPixels>;

     label01:
        if i28 >= i29 goto label02;

        i29 = i28;

        goto label03;

     label02:
        if i29 >= i28 goto label03;

        i28 = i29;

     label03:
        i30 = i29 / 2;

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i30, -2147483648);

        i31 = 0;

        i32 = 0;

        i33 = 0;

     label04:
        $i34 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i33 >= $i34 goto label09;

        r9 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i33);

        $i17 = virtualinvoke r9.<android.view.View: int getVisibility()>();

        if $i17 != 8 goto label05;

        goto label08;

     label05:
        $z1 = r9 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z1 == 0 goto label06;

        $r5 = (androidx.wear.widget.ArcLayout$Widget) r9;

        i35 = interfaceinvoke $r5.<androidx.wear.widget.ArcLayout$Widget: int getThickness()>();

        goto label07;

     label06:
        $r2 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i18 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i19 = staticinvoke <androidx.wear.widget.ArcLayout: int getChildMeasureSpec(int,int,int)>(i2, 0, $i18);

        $r3 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i20 = $r3.<android.view.ViewGroup$LayoutParams: int height>;

        $i21 = staticinvoke <androidx.wear.widget.ArcLayout: int getChildMeasureSpec(int,int,int)>(i2, 0, $i20);

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void measureChild(android.view.View,int,int)>(r9, $i19, $i21);

        i35 = virtualinvoke r9.<android.view.View: int getMeasuredHeight()>();

        $i22 = virtualinvoke r9.<android.view.View: int getMeasuredState()>();

        i32 = staticinvoke <androidx.wear.widget.ArcLayout: int combineMeasuredStates(int,int)>(i32, $i22);

     label07:
        $r4 = virtualinvoke r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r10 = (androidx.wear.widget.ArcLayout$LayoutParams) $r4;

        $i23 = r10.<androidx.wear.widget.ArcLayout$LayoutParams: int topMargin>;

        $i25 = i35 + $i23;

        $i24 = r10.<androidx.wear.widget.ArcLayout$LayoutParams: int bottomMargin>;

        $i26 = $i25 + $i24;

        i31 = staticinvoke <java.lang.Math: int max(int,int)>(i31, $i26);

     label08:
        i33 = i33 + 1;

        goto label04;

     label09:
        r0.<androidx.wear.widget.ArcLayout: int mThicknessPx> = i31;

        i36 = 0;

     label10:
        $i5 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i36 >= $i5 goto label13;

        r11 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i36);

        $i8 = virtualinvoke r11.<android.view.View: int getVisibility()>();

        if $i8 != 8 goto label11;

        goto label12;

     label11:
        $z0 = r11 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label12;

        $r1 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (androidx.wear.widget.ArcLayout$LayoutParams) $r1;

        f1 = specialinvoke r0.<androidx.wear.widget.ArcLayout: float getChildTopInset(android.view.View)>(r11);

        $i9 = i30 * 2;

        $f0 = f1 * 2.0F;

        $i10 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i11 = $i9 - $i10;

        i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);

        $i12 = r12.<androidx.wear.widget.ArcLayout$LayoutParams: int width>;

        $i13 = staticinvoke <androidx.wear.widget.ArcLayout: int getChildMeasureSpec(int,int,int)>(i3, 0, $i12);

        $i14 = r12.<androidx.wear.widget.ArcLayout$LayoutParams: int height>;

        $i15 = staticinvoke <androidx.wear.widget.ArcLayout: int getChildMeasureSpec(int,int,int)>(i3, 0, $i14);

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void measureChild(android.view.View,int,int)>(r11, $i13, $i15);

        $i16 = virtualinvoke r11.<android.view.View: int getMeasuredState()>();

        i32 = staticinvoke <androidx.wear.widget.ArcLayout: int combineMeasuredStates(int,int)>(i32, $i16);

     label12:
        i36 = i36 + 1;

        goto label10;

     label13:
        $i6 = staticinvoke <androidx.wear.widget.ArcLayout: int resolveSizeAndState(int,int,int)>(i28, i0, i32);

        $i7 = staticinvoke <androidx.wear.widget.ArcLayout: int resolveSizeAndState(int,int,int)>(i29, i1, i32);

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void setMeasuredDimension(int,int)>($i6, $i7);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.wear.widget.ArcLayout r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, i28, i29, i30;
        android.view.View r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, f35, $f36;
        androidx.wear.widget.ArcLayout$LayoutParams r2;
        androidx.wear.widget.ArcLayout$ChildArcAngles $r3, $r4, $r5, $r7;
        android.view.ViewGroup$LayoutParams $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;

        r0 := @this: androidx.wear.widget.ArcLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f35 = specialinvoke r0.<androidx.wear.widget.ArcLayout: float calculateInitialRotation()>();

        i26 = 0;

     label1:
        $i4 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i26 >= $i4 goto label7;

        r1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i26);

        $i5 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i5 != 8 goto label2;

        goto label6;

     label2:
        $r3 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void calculateArcAngle(android.view.View,androidx.wear.widget.ArcLayout$ChildArcAngles)>(r1, $r3);

        $r4 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        $f6 = $r4.<androidx.wear.widget.ArcLayout$ChildArcAngles: float leftMarginAsAngle>;

        $r5 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        $f4 = $r5.<androidx.wear.widget.ArcLayout$ChildArcAngles: float actualChildAngle>;

        $f5 = $f4 / 2.0F;

        f0 = $f6 + $f5;

        $z1 = r0.<androidx.wear.widget.ArcLayout: boolean mClockwise>;

        if $z1 == 0 goto label3;

        $f36 = 1.0F;

        goto label4;

     label3:
        $f36 = -1.0F;

     label4:
        f1 = $f36;

        $f7 = f35 + f0;

        f2 = f1 * $f7;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.wear.widget.ArcLayout$LayoutParams) $r6;

        r2.<androidx.wear.widget.ArcLayout$LayoutParams: float mMiddleAngle> = f2;

        $i6 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $i7 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i8 = $i6 - $i7;

        $i9 = $i8 / 2;

        $f8 = (float) $i9;

        $f9 = specialinvoke r0.<androidx.wear.widget.ArcLayout: float getChildTopInset(android.view.View)>(r1);

        f3 = $f8 - $f9;

        $i10 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $f10 = (float) $i10;

        $f11 = $f10 / 2.0F;

        $d3 = (double) $f11;

        $d4 = (double) f3;

        $d0 = (double) f2;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 180.0;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d6 = $d4 * $d5;

        $d7 = $d3 + $d6;

        $f12 = (float) $d7;

        r2.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterX> = $f12;

        $i11 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $f13 = (float) $i11;

        $f14 = $f13 / 2.0F;

        $d11 = (double) $f14;

        $d12 = (double) f3;

        $d8 = (double) f2;

        $d9 = $d8 * 3.141592653589793;

        $d10 = $d9 / 180.0;

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d10);

        $d14 = $d12 * $d13;

        $d15 = $d11 - $d14;

        $f15 = (float) $d15;

        r2.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterY> = $f15;

        $r7 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        $f16 = virtualinvoke $r7.<androidx.wear.widget.ArcLayout$ChildArcAngles: float getTotalAngle()>();

        f35 = f35 + $f16;

        $z2 = r1 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z2 == 0 goto label5;

        $i18 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $f25 = (float) $i18;

        $f26 = $f25 / 2.0F;

        $i19 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $f27 = (float) $i19;

        $f28 = $f27 / 2.0F;

        $f29 = $f26 - $f28;

        i27 = staticinvoke <java.lang.Math: int round(float)>($f29);

        $i20 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $f30 = (float) $i20;

        $f31 = $f30 / 2.0F;

        $i21 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $f32 = (float) $i21;

        $f33 = $f32 / 2.0F;

        $f34 = $f31 - $f33;

        i28 = staticinvoke <java.lang.Math: int round(float)>($f34);

        $i22 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i23 = i27 + $i22;

        $i24 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i25 = i28 + $i24;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i27, i28, $i23, $i25);

        goto label6;

     label5:
        $f17 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterX>;

        $i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $f18 = (float) $i12;

        $f19 = $f18 / 2.0F;

        $f20 = $f17 - $f19;

        i29 = staticinvoke <java.lang.Math: int round(float)>($f20);

        $f21 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterY>;

        $i13 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $f22 = (float) $i13;

        $f23 = $f22 / 2.0F;

        $f24 = $f21 - $f23;

        i30 = staticinvoke <java.lang.Math: int round(float)>($f24);

        $i14 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i15 = i29 + $i14;

        $i16 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i17 = i30 + $i16;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i29, i30, $i15, $i17);

     label6:
        i26 = i26 + 1;

        goto label1;

     label7:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.MotionEvent r1;
        android.view.View r2, $r5;
        androidx.wear.widget.ArcLayout$LayoutParams r3;
        float f0, f1, f2, $f3, $f4;
        float[] r4, $r7;
        int $i0, $i1, $i2, i3;
        android.view.ViewGroup$LayoutParams $r6;
        boolean $z0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r5 = r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>;

        if $r5 != null goto label4;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label4;

        i3 = 0;

     label1:
        $i1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i3 >= $i1 goto label4;

        r2 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i3);

        $i2 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i2 == 0 goto label2;

        goto label3;

     label2:
        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.wear.widget.ArcLayout$LayoutParams) $r6;

        f0 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: float mMiddleAngle>;

        $r7 = newarray (float)[2];

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r7[0] = $f3;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r7[1] = $f4;

        r4 = $r7;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void mapPoint(android.view.View,float,float[])>(r2, f0, r4);

        f1 = r4[0];

        f2 = r4[1];

        $z0 = staticinvoke <androidx.wear.widget.ArcLayout: boolean insideChildClickArea(android.view.View,float,float)>(r2, f1, f2);

        if $z0 == 0 goto label3;

        r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView> = r2;

        goto label4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 1;
    }

    private static boolean insideChildClickArea(android.view.View, float, float)
    {
        android.view.View r0;
        float f0, f1, $f2, $f3;
        boolean $z0, $z1, $z2;
        byte $b0, $b2, $b3, $b5;
        int $i1, $i4;
        androidx.wear.widget.ArcLayout$Widget $r1;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $z0 = r0 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label1;

        $r1 = (androidx.wear.widget.ArcLayout$Widget) r0;

        $z1 = interfaceinvoke $r1.<androidx.wear.widget.ArcLayout$Widget: boolean isPointInsideClickArea(float,float)>(f0, f1);

        return $z1;

     label1:
        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label2;

        $i1 = virtualinvoke r0.<android.view.View: int getMeasuredWidth()>();

        $f2 = (float) $i1;

        $b2 = f0 cmpg $f2;

        if $b2 >= 0 goto label2;

        $b3 = f1 cmpl 0.0F;

        if $b3 < 0 goto label2;

        $i4 = virtualinvoke r0.<android.view.View: int getMeasuredHeight()>();

        $f3 = (float) $i4;

        $b5 = f1 cmpg $f3;

        if $b5 >= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void mapPoint(android.view.View, float, float[])
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.View r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        float[] r2;
        android.graphics.Matrix r3, $r5;
        androidx.wear.widget.ArcLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams $r6;
        boolean $z0, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        r2 := @parameter2: float[];

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r3 = $r5;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (androidx.wear.widget.ArcLayout$LayoutParams) $r6;

        $z0 = r1 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label1;

        $f8 = neg f0;

        $i4 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $i5 = $i4 / 2;

        $f9 = (float) $i5;

        $i6 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $i7 = $i6 / 2;

        $f10 = (float) $i7;

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f8, $f9, $f10);

        $f11 = virtualinvoke r1.<android.view.View: float getX()>();

        $f12 = neg $f11;

        $f13 = virtualinvoke r1.<android.view.View: float getY()>();

        $f14 = neg $f13;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f12, $f14);

        goto label3;

     label1:
        $f1 = r4.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterX>;

        $f4 = neg $f1;

        $f2 = r4.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterY>;

        $f3 = neg $f2;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f4, $f3);

        $z2 = virtualinvoke r4.<androidx.wear.widget.ArcLayout$LayoutParams: boolean isRotated()>();

        if $z2 == 0 goto label2;

        $f7 = neg f0;

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float)>($f7);

     label2:
        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = $i0 / 2;

        $f5 = (float) $i1;

        $i2 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i3 = $i2 / 2;

        $f6 = (float) $i3;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f5, $f6);

     label3:
        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.MotionEvent r1;
        float[] r2, $r5;
        androidx.wear.widget.ArcLayout$LayoutParams r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.view.View $r4, $r6, $r8, $r9;
        android.view.ViewGroup$LayoutParams $r7;
        int $i0, $i1;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r4 = r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>;

        if $r4 == null goto label3;

        $r5 = newarray (float)[2];

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r5[0] = $f2;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r5[1] = $f3;

        r2 = $r5;

        $r6 = r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.wear.widget.ArcLayout$LayoutParams) $r7;

        $r8 = r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>;

        $f4 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: float mMiddleAngle>;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void mapPoint(android.view.View,float,float[])>($r8, $f4, r2);

        $f5 = r2[0];

        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f0 = $f5 - $f6;

        $f7 = r2[1];

        $f8 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        f1 = $f7 - $f8;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(f0, f1);

        $r9 = r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView>;

        virtualinvoke $r9.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 == 1 goto label1;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i1 != 3 goto label2;

     label1:
        r0.<androidx.wear.widget.ArcLayout: android.view.View mTouchedView> = null;

     label2:
        return 1;

     label3:
        return 0;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.wear.widget.ArcLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2;
        long l0;
        androidx.wear.widget.ArcLayout$LayoutParams r3;
        float f0, $f1, $f2, $f4, $f5, $f6, $f7, $f8, $f9, f10;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0, $z1, $z2, z3;
        int $i2, $i3;
        androidx.wear.widget.ArcLayout$Widget $r5;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.wear.widget.ArcLayout$LayoutParams) $r4;

        f0 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: float mMiddleAngle>;

        $z0 = r2 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $f4 = (float) $i2;

        $f5 = $f4 / 2.0F;

        $i3 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $f6 = (float) $i3;

        $f7 = $f6 / 2.0F;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(f0, $f5, $f7);

        $r5 = (androidx.wear.widget.ArcLayout$Widget) r2;

        interfaceinvoke $r5.<androidx.wear.widget.ArcLayout$Widget: void checkInvalidAttributeAsChild()>();

        goto label6;

     label1:
        $z1 = virtualinvoke r3.<androidx.wear.widget.ArcLayout$LayoutParams: boolean isRotated()>();

        if $z1 == 0 goto label4;

        $z2 = r0.<androidx.wear.widget.ArcLayout: boolean mClockwise>;

        if $z2 == 0 goto label2;

        $f8 = 0.0F;

        goto label3;

     label2:
        $f8 = 180.0F;

     label3:
        $f9 = f0 + $f8;

        goto label5;

     label4:
        $f9 = 0.0F;

     label5:
        f10 = $f9;

        $f2 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterX>;

        $f1 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: float mCenterY>;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(f10, $f2, $f1);

     label6:
        z3 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return z3;
    }

    private float calculateInitialRotation()
    {
        androidx.wear.widget.ArcLayout r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12;
        boolean $z0;
        int $i0, $i1, $i2, $i3, i4;
        android.view.View $r1;
        androidx.wear.widget.ArcLayout$ChildArcAngles $r2, $r3;

        r0 := @this: androidx.wear.widget.ArcLayout;

        $z0 = r0.<androidx.wear.widget.ArcLayout: boolean mClockwise>;

        if $z0 == 0 goto label1;

        $f11 = 1.0F;

        goto label2;

     label1:
        $f11 = -1.0F;

     label2:
        f0 = $f11;

        $i0 = r0.<androidx.wear.widget.ArcLayout: int mAnchorType>;

        if $i0 != 0 goto label3;

        $f9 = r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees>;

        $f10 = f0 * $f9;

        return $f10;

     label3:
        f12 = 0.0F;

        i4 = 0;

     label4:
        $i1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getChildCount()>();

        if i4 >= $i1 goto label5;

        $r1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.view.View getChildAt(int)>(i4);

        $r2 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        specialinvoke r0.<androidx.wear.widget.ArcLayout: void calculateArcAngle(android.view.View,androidx.wear.widget.ArcLayout$ChildArcAngles)>($r1, $r2);

        $r3 = r0.<androidx.wear.widget.ArcLayout: androidx.wear.widget.ArcLayout$ChildArcAngles mChildArcAngles>;

        $f8 = virtualinvoke $r3.<androidx.wear.widget.ArcLayout$ChildArcAngles: float getTotalAngle()>();

        f12 = f12 + $f8;

        i4 = i4 + 1;

        goto label4;

     label5:
        $i2 = r0.<androidx.wear.widget.ArcLayout: int mAnchorType>;

        if $i2 != 1 goto label6;

        $f4 = r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees>;

        $f6 = f0 * $f4;

        $f5 = f12 / 2.0F;

        $f7 = $f6 - $f5;

        return $f7;

     label6:
        $i3 = r0.<androidx.wear.widget.ArcLayout: int mAnchorType>;

        if $i3 != 2 goto label7;

        $f1 = r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees>;

        $f2 = f0 * $f1;

        $f3 = $f2 - f12;

        return $f3;

     label7:
        return 0.0F;
    }

    private static float widthToAngleDegrees(float, float)
    {
        float f0, f1, $f2, $f3, $f4;
        double $d0, $d1, $d2, $d3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f0 / f1;

        $f3 = $f2 / 2.0F;

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double asin(double)>($d0);

        $d2 = 2.0 * $d1;

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        $f4 = (float) $d3;

        return $f4;
    }

    private void calculateArcAngle(android.view.View, androidx.wear.widget.ArcLayout$ChildArcAngles)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.View r1;
        androidx.wear.widget.ArcLayout$ChildArcAngles r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        androidx.wear.widget.ArcLayout$LayoutParams r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0;
        androidx.wear.widget.ArcLayout$Widget $r5;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.wear.widget.ArcLayout$ChildArcAngles;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float leftMarginAsAngle> = 0.0F;

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float rightMarginAsAngle> = 0.0F;

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float actualChildAngle> = 0.0F;

        return;

     label1:
        $i1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $f1 = (float) $i1;

        $f3 = $f1 / 2.0F;

        $i2 = r0.<androidx.wear.widget.ArcLayout: int mThicknessPx>;

        $f2 = (float) $i2;

        f0 = $f3 - $f2;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.wear.widget.ArcLayout$LayoutParams) $r4;

        $i3 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: int leftMargin>;

        $f4 = (float) $i3;

        $f5 = staticinvoke <androidx.wear.widget.ArcLayout: float widthToAngleDegrees(float,float)>($f4, f0);

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float leftMarginAsAngle> = $f5;

        $i4 = r3.<androidx.wear.widget.ArcLayout$LayoutParams: int rightMargin>;

        $f6 = (float) $i4;

        $f7 = staticinvoke <androidx.wear.widget.ArcLayout: float widthToAngleDegrees(float,float)>($f6, f0);

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float rightMarginAsAngle> = $f7;

        $z0 = r1 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label2;

        $r5 = (androidx.wear.widget.ArcLayout$Widget) r1;

        $f10 = interfaceinvoke $r5.<androidx.wear.widget.ArcLayout$Widget: float getSweepAngleDegrees()>();

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float actualChildAngle> = $f10;

        goto label3;

     label2:
        $i5 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $f8 = (float) $i5;

        $f9 = staticinvoke <androidx.wear.widget.ArcLayout: float widthToAngleDegrees(float,float)>($f8, f0);

        r2.<androidx.wear.widget.ArcLayout$ChildArcAngles: float actualChildAngle> = $f9;

     label3:
        return;
    }

    private float getChildTopInset(android.view.View)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.View r1;
        androidx.wear.widget.ArcLayout$LayoutParams r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0, $z1;
        androidx.wear.widget.ArcLayout$Widget $r4;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.wear.widget.ArcLayout$LayoutParams) $r3;

        $z0 = r1 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 == 0 goto label1;

        $r4 = (androidx.wear.widget.ArcLayout$Widget) r1;

        $i9 = interfaceinvoke $r4.<androidx.wear.widget.ArcLayout$Widget: int getThickness()>();

        goto label2;

     label1:
        $i9 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

     label2:
        i0 = $i9;

        $i4 = r0.<androidx.wear.widget.ArcLayout: int mThicknessPx>;

        $i3 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: int topMargin>;

        $i6 = $i4 - $i3;

        $i5 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: int bottomMargin>;

        $i7 = $i6 - $i5;

        i1 = $i7 - i0;

        $z1 = r0.<androidx.wear.widget.ArcLayout: boolean mClockwise>;

        if $z1 == 0 goto label3;

        $i10 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: int topMargin>;

        goto label4;

     label3:
        $i10 = r2.<androidx.wear.widget.ArcLayout$LayoutParams: int bottomMargin>;

     label4:
        i2 = $i10;

        $f1 = (float) i2;

        $f2 = specialinvoke r0.<androidx.wear.widget.ArcLayout: float getChildTopOffset(android.view.View)>(r1);

        f0 = $f1 + $f2;

        $i8 = virtualinvoke r2.<androidx.wear.widget.ArcLayout$LayoutParams: int getVerticalAlignment()>();

        tableswitch($i8)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label8;
        };

     label5:
        return f0;

     label6:
        $f5 = (float) i1;

        $f6 = $f5 / 2.0F;

        $f7 = f0 + $f6;

        return $f7;

     label7:
        $f3 = (float) i1;

        $f4 = f0 + $f3;

        return $f4;

     label8:
        return 0.0F;
    }

    private float getChildTopOffset(android.view.View)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.View r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.View;

        $z0 = r1 instanceof androidx.wear.widget.ArcLayout$Widget;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        if $i0 < $i1 goto label2;

     label1:
        return 0.0F;

     label2:
        $i2 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: int getMeasuredWidth()>();

        $i4 = $i2 - $i3;

        $f0 = (float) $i4;

        $f1 = $f0 / 2.0F;

        $i5 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $f2 = (float) $i5;

        return $f2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.wear.widget.ArcLayout$LayoutParams;

        return $z0;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.wear.widget.ArcLayout r0;
        android.view.ViewGroup$LayoutParams r1, r4;
        androidx.wear.widget.ArcLayout$LayoutParams r3;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        r3 = new androidx.wear.widget.ArcLayout$LayoutParams;

        specialinvoke r3.<androidx.wear.widget.ArcLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        r4 = (android.view.ViewGroup$LayoutParams) r3;

        return r4;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.wear.widget.ArcLayout r0;
        android.util.AttributeSet r1;
        android.content.Context $r3;
        androidx.wear.widget.ArcLayout$LayoutParams r4;
        android.view.ViewGroup$LayoutParams r5;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r1 := @parameter0: android.util.AttributeSet;

        r4 = new androidx.wear.widget.ArcLayout$LayoutParams;

        $r3 = virtualinvoke r0.<androidx.wear.widget.ArcLayout: android.content.Context getContext()>();

        specialinvoke r4.<androidx.wear.widget.ArcLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        r5 = (android.view.ViewGroup$LayoutParams) r4;

        return r5;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.wear.widget.ArcLayout r0;
        androidx.wear.widget.ArcLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: androidx.wear.widget.ArcLayout;

        r2 = new androidx.wear.widget.ArcLayout$LayoutParams;

        specialinvoke r2.<androidx.wear.widget.ArcLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        r3 = (android.view.ViewGroup$LayoutParams) r2;

        return r3;
    }

    public int getAnchorType()
    {
        androidx.wear.widget.ArcLayout r0;
        int $i0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        $i0 = r0.<androidx.wear.widget.ArcLayout: int mAnchorType>;

        return $i0;
    }

    public void setAnchorType(int)
    {
        androidx.wear.widget.ArcLayout r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: androidx.wear.widget.ArcLayout;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown anchor type");

        throw $r1;

     label2:
        r0.<androidx.wear.widget.ArcLayout: int mAnchorType> = i0;

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void invalidate()>();

        return;
    }

    public float getAnchorAngleDegrees()
    {
        androidx.wear.widget.ArcLayout r0;
        float $f0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        $f0 = r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees>;

        return $f0;
    }

    public void setAnchorAngleDegrees(float)
    {
        androidx.wear.widget.ArcLayout r0;
        float f0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        f0 := @parameter0: float;

        r0.<androidx.wear.widget.ArcLayout: float mAnchorAngleDegrees> = f0;

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void invalidate()>();

        return;
    }

    public boolean isClockwise()
    {
        androidx.wear.widget.ArcLayout r0;
        boolean $z0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        $z0 = r0.<androidx.wear.widget.ArcLayout: boolean mClockwise>;

        return $z0;
    }

    public void setClockwise(boolean)
    {
        androidx.wear.widget.ArcLayout r0;
        boolean z0;

        r0 := @this: androidx.wear.widget.ArcLayout;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.widget.ArcLayout: boolean mClockwise> = z0;

        virtualinvoke r0.<androidx.wear.widget.ArcLayout: void invalidate()>();

        return;
    }

