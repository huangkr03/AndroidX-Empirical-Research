androidx.compose.ui.text.AndroidParagraph
<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>
<androidx.compose.ui.text.AndroidParagraph: int maxLines>
<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis>
<androidx.compose.ui.text.AndroidParagraph: long constraints>
<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>
<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>
<androidx.compose.ui.text.AndroidParagraph: java.util.List placeholderRects>
<androidx.compose.ui.text.AndroidParagraph: kotlin.Lazy wordBoundary$delegate>
    private void <init>(androidx.compose.ui.text.platform.AndroidParagraphIntrinsics, int, boolean, long)
    {
        androidx.compose.ui.text.AndroidParagraph r0, r6;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics r1, $r7, $r8, $r34;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, i45, i48, i49, i50, i51, i52, i54, i55, i56, i57, i58, $i59, $i60, $i61;
        boolean z0, z1, z2, z3, $z6, $z7, $z8, $z9, $z10, $z12, $z14, $z16, z19, z20, z21, z22, $z23, $z24, $z25;
        long l1, $l3, $l30, $l32, $l35, $l42, $l53;
        androidx.compose.ui.text.TextStyle r2;
        androidx.compose.ui.text.style.ResolvedTextDirection r3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        androidx.compose.ui.text.android.TextLayout $r4, $r25, $r26, $r32, r51, $r53, $r56, $r68;
        android.graphics.Paint$FontMetricsInt $r5, $r28, $r29;
        androidx.compose.ui.text.style.TextAlign $r9, r45;
        androidx.compose.ui.text.style.TextAlign$Companion $r10;
        androidx.compose.ui.text.ParagraphStyle $r11;
        androidx.compose.ui.text.style.Hyphens $r12;
        androidx.compose.ui.text.style.LineBreak $r13, $r14, $r15;
        android.text.Spanned $r16, $r23, $r24;
        java.lang.Object[] $r17, r62, r63;
        java.util.ArrayList $r18;
        androidx.compose.ui.text.AndroidParagraph$wordBoundary$2 $r19;
        kotlin.LazyThreadSafetyMode $r20;
        kotlin.jvm.functions.Function0 $r21;
        kotlin.Lazy $r22;
        int[] $r27;
        java.lang.IllegalStateException $r30;
        kotlin.NoWhenBranchMatchedException $r31;
        androidx.compose.ui.geometry.Size $r33;
        java.lang.CharSequence $r35, $r44, $r60;
        java.lang.IllegalArgumentException $r38, $r40;
        java.lang.String $r39, $r41, $r42, $r43;
        byte $b46, b47;
        androidx.compose.ui.text.style.LineBreak$Strategy $r46;
        androidx.compose.ui.text.style.LineBreak$Strictness $r47;
        androidx.compose.ui.text.style.LineBreak$WordBreak $r48;
        android.text.TextUtils$TruncateAt $r49, r50;
        androidx.compose.ui.text.platform.AndroidTextPaint $r54;
        androidx.compose.ui.graphics.Brush $r55;
        androidx.compose.ui.text.platform.style.ShaderBrushSpan[] r57;
        androidx.compose.ui.text.platform.style.ShaderBrushSpan r58, r59;
        java.util.List $r61;
        java.util.Collection r64, r67;
        java.lang.Object $r65;
        androidx.compose.ui.text.android.style.PlaceholderSpan r66;
        androidx.compose.ui.geometry.Rect $r69;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l1 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics> = r1;

        r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines> = i0;

        r0.<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis> = z0;

        r0.<androidx.compose.ui.text.AndroidParagraph: long constraints> = l1;

        $l3 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        $i4 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>($l3);

        if $i4 != 0 goto label01;

        $l42 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        $i43 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>($l42);

        if $i43 != 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        if $z12 != 0 goto label03;

        $r42 = "Setting Constraints.minWidth and Constraints.minHeight is not supported, these should be the default zero values instead.";

        $r40 = new java.lang.IllegalArgumentException;

        $r41 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label03:
        $i5 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        if $i5 < 1 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        if $z14 != 0 goto label06;

        $r43 = "maxLines should be greater than 0";

        $r38 = new java.lang.IllegalArgumentException;

        $r39 = virtualinvoke $r43.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r39);

        throw $r38;

     label06:
        $r7 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        r2 = virtualinvoke $r7.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: androidx.compose.ui.text.TextStyle getStyle()>();

        $z6 = r0.<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis>;

        $z7 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: boolean access$shouldAttachIndentationFixSpan(androidx.compose.ui.text.TextStyle,boolean)>(r2, $z6);

        if $z7 == 0 goto label07;

        $r34 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $r35 = virtualinvoke $r34.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: java.lang.CharSequence getCharSequence$ui_text_release()>();

        $r44 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: java.lang.CharSequence access$attachIndentationFixSpan(java.lang.CharSequence)>($r35);

        goto label08;

     label07:
        $r8 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $r44 = virtualinvoke $r8.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: java.lang.CharSequence getCharSequence$ui_text_release()>();

     label08:
        r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence> = $r44;

        $r9 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.style.TextAlign getTextAlign-buA522U()>();

        $i44 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$toLayoutAlign-AMY3VfE(androidx.compose.ui.text.style.TextAlign)>($r9);

        r45 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.style.TextAlign getTextAlign-buA522U()>();

        $r10 = <androidx.compose.ui.text.style.TextAlign: androidx.compose.ui.text.style.TextAlign$Companion Companion>;

        i45 = virtualinvoke $r10.<androidx.compose.ui.text.style.TextAlign$Companion: int getJustify-e0LSkKk()>();

        if r45 != null goto label09;

        $z16 = 0;

        goto label10;

     label09:
        $i6 = virtualinvoke r45.<androidx.compose.ui.text.style.TextAlign: int unbox-impl()>();

        $z16 = staticinvoke <androidx.compose.ui.text.style.TextAlign: boolean equals-impl0(int,int)>($i6, i45);

     label10:
        if $z16 == 0 goto label11;

        $b46 = 1;

        goto label12;

     label11:
        $b46 = 0;

     label12:
        b47 = $b46;

        $r11 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.ParagraphStyle getParagraphStyle$ui_text_release()>();

        $r12 = virtualinvoke $r11.<androidx.compose.ui.text.ParagraphStyle: androidx.compose.ui.text.style.Hyphens getHyphens()>();

        i48 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$toLayoutHyphenationFrequency(androidx.compose.ui.text.style.Hyphens)>($r12);

        $r13 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.style.LineBreak getLineBreak()>();

        if $r13 == null goto label13;

        $i41 = virtualinvoke $r13.<androidx.compose.ui.text.style.LineBreak: int getStrategy-fcGXIks()>();

        $r46 = staticinvoke <androidx.compose.ui.text.style.LineBreak$Strategy: androidx.compose.ui.text.style.LineBreak$Strategy box-impl(int)>($i41);

        goto label14;

     label13:
        $r46 = null;

     label14:
        i49 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$toLayoutBreakStrategy-u6PBz3U(androidx.compose.ui.text.style.LineBreak$Strategy)>($r46);

        $r14 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.style.LineBreak getLineBreak()>();

        if $r14 == null goto label15;

        $i40 = virtualinvoke $r14.<androidx.compose.ui.text.style.LineBreak: int getStrictness-usljTpc()>();

        $r47 = staticinvoke <androidx.compose.ui.text.style.LineBreak$Strictness: androidx.compose.ui.text.style.LineBreak$Strictness box-impl(int)>($i40);

        goto label16;

     label15:
        $r47 = null;

     label16:
        i50 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$toLayoutLineBreakStyle-4a2g8L8(androidx.compose.ui.text.style.LineBreak$Strictness)>($r47);

        $r15 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.text.style.LineBreak getLineBreak()>();

        if $r15 == null goto label17;

        $i39 = virtualinvoke $r15.<androidx.compose.ui.text.style.LineBreak: int getWordBreak-jp8hJ3c()>();

        $r48 = staticinvoke <androidx.compose.ui.text.style.LineBreak$WordBreak: androidx.compose.ui.text.style.LineBreak$WordBreak box-impl(int)>($i39);

        goto label18;

     label17:
        $r48 = null;

     label18:
        i51 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$toLayoutLineBreakWordStyle-gvcdTPQ(androidx.compose.ui.text.style.LineBreak$WordBreak)>($r48);

        $z8 = r0.<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis>;

        if $z8 == 0 goto label19;

        $r49 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        goto label20;

     label19:
        $r49 = (android.text.TextUtils$TruncateAt) null;

     label20:
        r50 = $r49;

        $i7 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        r51 = specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout constructTextLayout(int,int,android.text.TextUtils$TruncateAt,int,int,int,int,int)>($i44, b47, r50, $i7, i48, i49, i50, i51);

        $z9 = r0.<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis>;

        if $z9 == 0 goto label23;

        $i31 = virtualinvoke r51.<androidx.compose.ui.text.android.TextLayout: int getHeight()>();

        $l32 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        $i33 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>($l32);

        if $i31 <= $i33 goto label23;

        $i34 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        if $i34 <= 1 goto label23;

        $l35 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        $i36 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>($l35);

        i52 = staticinvoke <androidx.compose.ui.text.AndroidParagraph_androidKt: int access$numberOfLinesThatFitMaxHeight(androidx.compose.ui.text.android.TextLayout,int)>(r51, $i36);

        if i52 < 0 goto label21;

        $i37 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        if i52 == $i37 goto label21;

        $i38 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>(i52, 1);

        $r53 = specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout constructTextLayout(int,int,android.text.TextUtils$TruncateAt,int,int,int,int,int)>($i44, b47, r50, $i38, i48, i49, i50, i51);

        goto label22;

     label21:
        $r53 = r51;

     label22:
        r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout> = $r53;

        goto label24;

     label23:
        r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout> = r51;

     label24:
        $r54 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        $r55 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: androidx.compose.ui.graphics.Brush getBrush()>();

        $f27 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getWidth()>();

        $f28 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHeight()>();

        $l53 = staticinvoke <androidx.compose.ui.geometry.SizeKt: long Size(float,float)>($f27, $f28);

        $f29 = virtualinvoke r2.<androidx.compose.ui.text.TextStyle: float getAlpha()>();

        virtualinvoke $r54.<androidx.compose.ui.text.platform.AndroidTextPaint: void setBrush-12SF9DM(androidx.compose.ui.graphics.Brush,long,float)>($r55, $l53, $f29);

        $r56 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        r57 = specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.style.ShaderBrushSpan[] getShaderBrushSpans(androidx.compose.ui.text.android.TextLayout)>($r56);

        i54 = 0;

        i55 = lengthof r57;

     label25:
        if i54 >= i55 goto label26;

        r58 = r57[i54];

        r59 = r58;

        $f25 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getWidth()>();

        $f26 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHeight()>();

        $l30 = staticinvoke <androidx.compose.ui.geometry.SizeKt: long Size(float,float)>($f25, $f26);

        $r33 = staticinvoke <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size box-impl(long)>($l30);

        virtualinvoke r59.<androidx.compose.ui.text.platform.style.ShaderBrushSpan: void setSize-iaC8Vc4(androidx.compose.ui.geometry.Size)>($r33);

        i54 = i54 + 1;

        goto label25;

     label26:
        $r60 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        r6 = r0;

        z19 = 0;

        $z10 = $r60 instanceof android.text.Spanned;

        if $z10 != 0 goto label27;

        $r61 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label52;

     label27:
        $r16 = (android.text.Spanned) $r60;

        $i8 = interfaceinvoke $r60.<java.lang.CharSequence: int length()>();

        $r17 = interfaceinvoke $r16.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i8, class "Landroidx/compose/ui/text/android/style/PlaceholderSpan;");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "getSpans(0, length, PlaceholderSpan::class.java)");

        r62 = $r17;

        z20 = 0;

        r63 = r62;

        $r18 = new java.util.ArrayList;

        $i9 = lengthof r62;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i9);

        r64 = (java.util.Collection) $r18;

        z21 = 0;

        i56 = 0;

        i57 = lengthof r63;

     label28:
        if i56 >= i57 goto label51;

        $r65 = r63[i56];

        r66 = (androidx.compose.ui.text.android.style.PlaceholderSpan) $r65;

        r67 = r64;

        z22 = 0;

        $r23 = (android.text.Spanned) $r60;

        i58 = interfaceinvoke $r23.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r66);

        $r24 = (android.text.Spanned) $r60;

        $i59 = interfaceinvoke $r24.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r66);

        $r25 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        i2 = virtualinvoke $r25.<androidx.compose.ui.text.android.TextLayout: int getLineForOffset(int)>(i58);

        $i10 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        if i2 < $i10 goto label29;

        $z23 = 1;

        goto label30;

     label29:
        $z23 = 0;

     label30:
        z1 = $z23;

        $r26 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i11 = virtualinvoke $r26.<androidx.compose.ui.text.android.TextLayout: int getLineEllipsisCount(int)>(i2);

        if $i11 <= 0 goto label31;

        $r32 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i29 = virtualinvoke $r32.<androidx.compose.ui.text.android.TextLayout: int getLineEllipsisOffset(int)>(i2);

        if $i59 <= $i29 goto label31;

        $z24 = 1;

        goto label32;

     label31:
        $z24 = 0;

     label32:
        z2 = $z24;

        $r68 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i60 = virtualinvoke $r68.<androidx.compose.ui.text.android.TextLayout: int getLineEnd(int)>(i2);

        if $i59 <= $i60 goto label33;

        $z25 = 1;

        goto label34;

     label33:
        $z25 = 0;

     label34:
        z3 = $z25;

        if z2 != 0 goto label35;

        if z3 != 0 goto label35;

        if z1 == 0 goto label36;

     label35:
        $r69 = null;

        goto label50;

     label36:
        r3 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int)>(i58);

        $r27 = <androidx.compose.ui.text.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i12 = virtualinvoke r3.<androidx.compose.ui.text.style.ResolvedTextDirection: int ordinal()>();

        $i13 = $r27[$i12];

        tableswitch($i13)
        {
            case 1: goto label37;
            case 2: goto label38;
            default: goto label39;
        };

     label37:
        $f30 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHorizontalPosition(int,boolean)>(i58, 1);

        goto label40;

     label38:
        $f4 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHorizontalPosition(int,boolean)>(i58, 1);

        $i14 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getWidthPx()>();

        $f5 = (float) $i14;

        $f30 = $f4 - $f5;

        goto label40;

     label39:
        $r31 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r31.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r31;

     label40:
        f0 = $f30;

        $i15 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getWidthPx()>();

        $f6 = (float) $i15;

        f1 = f0 + $f6;

        $r4 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i16 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getVerticalAlign()>();

        tableswitch($i16)
        {
            case 0: goto label41;
            case 1: goto label42;
            case 2: goto label43;
            case 3: goto label44;
            case 4: goto label45;
            case 5: goto label46;
            case 6: goto label47;
            default: goto label48;
        };

     label41:
        $f23 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBaseline(int)>(i2);

        $i28 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $f24 = (float) $i28;

        $f31 = $f23 - $f24;

        goto label49;

     label42:
        $f31 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineTop(int)>(i2);

        goto label49;

     label43:
        $f21 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBottom(int)>(i2);

        $i27 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $f22 = (float) $i27;

        $f31 = $f21 - $f22;

        goto label49;

     label44:
        $f15 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineTop(int)>(i2);

        $f16 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBottom(int)>(i2);

        $f17 = $f15 + $f16;

        $i26 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $f18 = (float) $i26;

        $f20 = $f17 - $f18;

        $f19 = (float) 2;

        $f31 = $f20 / $f19;

        goto label49;

     label45:
        $r29 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        $i25 = $r29.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $f13 = (float) $i25;

        $f14 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBaseline(int)>(i2);

        $f31 = $f13 + $f14;

        goto label49;

     label46:
        $r28 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        $i23 = $r28.<android.graphics.Paint$FontMetricsInt: int descent>;

        $f9 = (float) $i23;

        $f10 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBaseline(int)>(i2);

        $f11 = $f9 + $f10;

        $i24 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $f12 = (float) $i24;

        $f31 = $f11 - $f12;

        goto label49;

     label47:
        $r5 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        $i18 = $r5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i17 = $r5.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i19 = $i18 + $i17;

        $i20 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $i21 = $i19 - $i20;

        $i22 = $i21 / 2;

        $f7 = (float) $i22;

        $f8 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineBaseline(int)>(i2);

        $f31 = $f7 + $f8;

        goto label49;

     label48:
        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected verticalAlignment");

        throw $r30;

     label49:
        f2 = $f31;

        $i61 = virtualinvoke r66.<androidx.compose.ui.text.android.style.PlaceholderSpan: int getHeightPx()>();

        $f32 = (float) $i61;

        f3 = f2 + $f32;

        $r69 = new androidx.compose.ui.geometry.Rect;

        specialinvoke $r69.<androidx.compose.ui.geometry.Rect: void <init>(float,float,float,float)>(f0, f2, f1, f3);

     label50:
        interfaceinvoke r67.<java.util.Collection: boolean add(java.lang.Object)>($r69);

        i56 = i56 + 1;

        goto label28;

     label51:
        $r61 = (java.util.List) r64;

     label52:
        r6.<androidx.compose.ui.text.AndroidParagraph: java.util.List placeholderRects> = $r61;

        $r20 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r19 = new androidx.compose.ui.text.AndroidParagraph$wordBoundary$2;

        specialinvoke $r19.<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: void <init>(androidx.compose.ui.text.AndroidParagraph)>(r0);

        $r21 = (kotlin.jvm.functions.Function0) $r19;

        $r22 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r20, $r21);

        r0.<androidx.compose.ui.text.AndroidParagraph: kotlin.Lazy wordBoundary$delegate> = $r22;

        return;
    }

    public final androidx.compose.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        return $r1;
    }

    public final int getMaxLines()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $i0 = r0.<androidx.compose.ui.text.AndroidParagraph: int maxLines>;

        return $i0;
    }

    public final boolean getEllipsis()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $z0 = r0.<androidx.compose.ui.text.AndroidParagraph: boolean ellipsis>;

        return $z0;
    }

    public final long getConstraints-msEJaDk()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        long $l0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $l0 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        return $l0;
    }

    private void <init>(java.lang.String, androidx.compose.ui.text.TextStyle, java.util.List, java.util.List, int, boolean, long, androidx.compose.ui.text.font.FontFamily$Resolver, androidx.compose.ui.unit.Density)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        java.lang.String r1;
        androidx.compose.ui.text.TextStyle r2;
        java.util.List r3, r4;
        int i0;
        boolean z0;
        long l1;
        androidx.compose.ui.text.font.FontFamily$Resolver r5;
        androidx.compose.ui.unit.Density r6;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r7;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.compose.ui.text.TextStyle;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        l1 := @parameter6: long;

        r5 := @parameter7: androidx.compose.ui.text.font.FontFamily$Resolver;

        r6 := @parameter8: androidx.compose.ui.unit.Density;

        $r7 = new androidx.compose.ui.text.platform.AndroidParagraphIntrinsics;

        specialinvoke $r7.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: void <init>(java.lang.String,androidx.compose.ui.text.TextStyle,java.util.List,java.util.List,androidx.compose.ui.text.font.FontFamily$Resolver,androidx.compose.ui.unit.Density)>(r1, r2, r3, r4, r5, r6);

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void <init>(androidx.compose.ui.text.platform.AndroidParagraphIntrinsics,int,boolean,long,kotlin.jvm.internal.DefaultConstructorMarker)>($r7, i0, z0, l1, null);

        return;
    }

    public final java.lang.CharSequence getCharSequence$ui_text_release()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        java.lang.CharSequence $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        return $r1;
    }

    public static void getCharSequence$ui_text_release$annotations()
    {
        return;
    }

    public float getWidth()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        long $l0;
        int $i1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $l0 = r0.<androidx.compose.ui.text.AndroidParagraph: long constraints>;

        $i1 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>($l0);

        $f0 = (float) $i1;

        return $f0;
    }

    public float getHeight()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.android.TextLayout $r1;
        int $i0;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getHeight()>();

        $f0 = (float) $i0;

        return $f0;
    }

    public float getMaxIntrinsicWidth()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: float getMaxIntrinsicWidth()>();

        return $f0;
    }

    public float getMinIntrinsicWidth()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: float getMinIntrinsicWidth()>();

        return $f0;
    }

    public float getFirstBaseline()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $f0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getLineBaseline$ui_text_release(int)>(0);

        return $f0;
    }

    public float getLastBaseline()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $i0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: int getLineCount()>();

        $i1 = $i0 - 1;

        $f0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getLineBaseline$ui_text_release(int)>($i1);

        return $f0;
    }

    public boolean getDidExceedMaxLines()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.android.TextLayout $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: boolean getDidExceedMaxLines()>();

        return $z0;
    }

    public final java.util.Locale getTextLocale$ui_text_release()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r1;
        androidx.compose.ui.text.platform.AndroidTextPaint $r2;
        java.util.Locale $r3;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        $r3 = virtualinvoke $r2.<androidx.compose.ui.text.platform.AndroidTextPaint: java.util.Locale getTextLocale()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "paragraphIntrinsics.textPaint.textLocale");

        return $r3;
    }

    public static void getTextLocale$ui_text_release$annotations()
    {
        return;
    }

    public int getLineCount()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.android.TextLayout $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineCount()>();

        return $i0;
    }

    public java.util.List getPlaceholderRects()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: java.util.List placeholderRects>;

        return $r1;
    }

    public final androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r1;
        androidx.compose.ui.text.platform.AndroidTextPaint $r2;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        return $r2;
    }

    public static void getTextPaint$ui_text_release$annotations()
    {
        return;
    }

    public int getLineForVerticalPosition(float)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        float f0;
        int $i0, $i1;
        androidx.compose.ui.text.android.TextLayout $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i0 = (int) f0;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineForVertical(int)>($i0);

        return $i1;
    }

    public int getOffsetForPosition-k-4lQ0M(long)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        long l0;
        int i1, $i2, $i3;
        androidx.compose.ui.text.android.TextLayout $r1, $r2;
        float $f0, $f1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>(l0);

        $i2 = (int) $f0;

        i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineForVertical(int)>($i2);

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f1 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>(l0);

        $i3 = virtualinvoke $r2.<androidx.compose.ui.text.android.TextLayout: int getOffsetForHorizontal(int,float)>(i1, $f1);

        return $i3;
    }

    public androidx.compose.ui.geometry.Rect getBoundingBox(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        android.graphics.RectF r1;
        androidx.compose.ui.text.android.TextLayout $r3;
        androidx.compose.ui.geometry.Rect $r4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.text.android.TextLayout: android.graphics.RectF getBoundingBox(int)>(i0);

        $r4 = new androidx.compose.ui.geometry.Rect;

        $f3 = r1.<android.graphics.RectF: float left>;

        $f2 = r1.<android.graphics.RectF: float top>;

        $f1 = r1.<android.graphics.RectF: float right>;

        $f0 = r1.<android.graphics.RectF: float bottom>;

        specialinvoke $r4.<androidx.compose.ui.geometry.Rect: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r4;
    }

    public final void fillBoundingBoxes-8ffj60Q(long, float[], int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        long l0;
        float[] r1;
        int i1, $i2, $i3;
        androidx.compose.ui.text.android.TextLayout $r2;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        l0 := @parameter0: long;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "array");

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>(l0);

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>(l0);

        virtualinvoke $r2.<androidx.compose.ui.text.android.TextLayout: void fillBoundingBoxes(int,int,float[],int)>($i2, $i3, r1, i1);

        return;
    }

    public androidx.compose.ui.graphics.Path getPathForRange(int, int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, i1, $i2, $i3;
        android.graphics.Path r1, $r14;
        java.lang.AssertionError $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11;
        java.lang.CharSequence $r9, $r13;
        java.lang.String $r12;
        androidx.compose.ui.text.android.TextLayout $r15;
        androidx.compose.ui.graphics.Path $r16;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if 0 > i0 goto label2;

        if i0 > i1 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        $r13 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        $i3 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        if i1 <= $i3 goto label5;

     label4:
        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or End(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of Range(0..");

        $r9 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        $i2 = interfaceinvoke $r9.<java.lang.CharSequence: int length()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), or start > end!");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r2;

     label5:
        $r14 = new android.graphics.Path;

        specialinvoke $r14.<android.graphics.Path: void <init>()>();

        r1 = $r14;

        $r15 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        virtualinvoke $r15.<androidx.compose.ui.text.android.TextLayout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, r1);

        $r16 = staticinvoke <androidx.compose.ui.graphics.AndroidPath_androidKt: androidx.compose.ui.graphics.Path asComposePath(android.graphics.Path)>(r1);

        return $r16;
    }

    public androidx.compose.ui.geometry.Rect getCursorRect(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, i1, $i2, $i3;
        float f0, $f1, $f2;
        androidx.compose.ui.text.android.TextLayout $r1, $r2, $r4, $r5;
        androidx.compose.ui.geometry.Rect $r3;
        java.lang.AssertionError $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;
        java.lang.CharSequence $r11, $r14;
        java.lang.String $r13;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        if 0 > i0 goto label2;

        $r14 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        $i3 = interfaceinvoke $r14.<java.lang.CharSequence: int length()>();

        if i0 > $i3 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of bounds (0,");

        $r11 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        $i2 = interfaceinvoke $r11.<java.lang.CharSequence: int length()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r6;

     label4:
        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        f0 = staticinvoke <androidx.compose.ui.text.android.TextLayout: float getPrimaryHorizontal$default(androidx.compose.ui.text.android.TextLayout,int,boolean,int,java.lang.Object)>($r1, i0, 0, 2, null);

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        i1 = virtualinvoke $r2.<androidx.compose.ui.text.android.TextLayout: int getLineForOffset(int)>(i0);

        $r3 = new androidx.compose.ui.geometry.Rect;

        $r4 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f1 = virtualinvoke $r4.<androidx.compose.ui.text.android.TextLayout: float getLineTop(int)>(i1);

        $r5 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f2 = virtualinvoke $r5.<androidx.compose.ui.text.android.TextLayout: float getLineBottom(int)>(i1);

        specialinvoke $r3.<androidx.compose.ui.geometry.Rect: void <init>(float,float,float,float)>(f0, $f1, f0, $f2);

        return $r3;
    }

    private final androidx.compose.ui.text.android.selection.WordBoundary getWordBoundary()
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.compose.ui.text.android.selection.WordBoundary $r3;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 = r0.<androidx.compose.ui.text.AndroidParagraph: kotlin.Lazy wordBoundary$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.compose.ui.text.android.selection.WordBoundary) $r2;

        return $r3;
    }

    public long getWordBoundary--jx7JFs(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, $i1, $i2;
        androidx.compose.ui.text.android.selection.WordBoundary $r1, $r2;
        long $l3;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.selection.WordBoundary getWordBoundary()>();

        $i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.selection.WordBoundary: int getWordStart(int)>(i0);

        $r2 = specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.selection.WordBoundary getWordBoundary()>();

        $i2 = virtualinvoke $r2.<androidx.compose.ui.text.android.selection.WordBoundary: int getWordEnd(int)>(i0);

        $l3 = staticinvoke <androidx.compose.ui.text.TextRangeKt: long TextRange(int,int)>($i1, $i2);

        return $l3;
    }

    public float getLineLeft(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineLeft(int)>(i0);

        return $f0;
    }

    public float getLineRight(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineRight(int)>(i0);

        return $f0;
    }

    public float getLineTop(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineTop(int)>(i0);

        return $f0;
    }

    public final float getLineAscent$ui_text_release(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineAscent(int)>(i0);

        return $f0;
    }

    public final float getLineBaseline$ui_text_release(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineBaseline(int)>(i0);

        return $f0;
    }

    public final float getLineDescent$ui_text_release(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineDescent(int)>(i0);

        return $f0;
    }

    public float getLineBottom(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineBottom(int)>(i0);

        return $f0;
    }

    public float getLineHeight(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineHeight(int)>(i0);

        return $f0;
    }

    public float getLineWidth(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: float getLineWidth(int)>(i0);

        return $f0;
    }

    public int getLineStart(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, $i1;
        androidx.compose.ui.text.android.TextLayout $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineStart(int)>(i0);

        return $i1;
    }

    public int getLineEnd(int, boolean)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, $i1;
        boolean z0;
        androidx.compose.ui.text.android.TextLayout $r1, $r2;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.text.android.TextLayout: int getLineVisibleEnd(int)>(i0);

        goto label2;

     label1:
        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineEnd(int)>(i0);

     label2:
        return $i1;
    }

    public boolean isLineEllipsized(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: boolean isLineEllipsized(int)>(i0);

        return $z0;
    }

    public int getLineForOffset(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, $i1;
        androidx.compose.ui.text.android.TextLayout $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineForOffset(int)>(i0);

        return $i1;
    }

    public float getHorizontalPosition(int, boolean)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        boolean z0;
        androidx.compose.ui.text.android.TextLayout $r1, $r2;
        float $f0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = staticinvoke <androidx.compose.ui.text.android.TextLayout: float getPrimaryHorizontal$default(androidx.compose.ui.text.android.TextLayout,int,boolean,int,java.lang.Object)>($r2, i0, 0, 2, null);

        goto label2;

     label1:
        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $f0 = staticinvoke <androidx.compose.ui.text.android.TextLayout: float getSecondaryHorizontal$default(androidx.compose.ui.text.android.TextLayout,int,boolean,int,java.lang.Object)>($r1, i0, 0, 2, null);

     label2:
        return $f0;
    }

    public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, i1, i2;
        androidx.compose.ui.text.android.TextLayout $r1, $r2;
        androidx.compose.ui.text.style.ResolvedTextDirection $r3;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        i1 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: int getLineForOffset(int)>(i0);

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        i2 = virtualinvoke $r2.<androidx.compose.ui.text.android.TextLayout: int getParagraphDirection(int)>(i1);

        if i2 != 1 goto label1;

        $r3 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Ltr>;

        goto label2;

     label1:
        $r3 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Rtl>;

     label2:
        return $r3;
    }

    public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0;
        androidx.compose.ui.text.android.TextLayout $r1;
        boolean $z0;
        androidx.compose.ui.text.style.ResolvedTextDirection $r2;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: boolean isRtlCharAt(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Rtl>;

        goto label2;

     label1:
        $r2 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Ltr>;

     label2:
        return $r2;
    }

    private final androidx.compose.ui.text.platform.style.ShaderBrushSpan[] getShaderBrushSpans(androidx.compose.ui.text.android.TextLayout)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.android.TextLayout $r1;
        java.lang.CharSequence $r2, $r3, $r5;
        boolean $z1, $z3;
        android.text.Spanned $r4;
        int $i0, $i1;
        java.lang.Object[] $r6, $r8, $r11;
        androidx.compose.ui.text.platform.style.ShaderBrushSpan[] $r7, $r9, $r10, $r12, $r13;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        $r1 := @parameter0: androidx.compose.ui.text.android.TextLayout;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: java.lang.CharSequence getText()>();

        $z1 = $r2 instanceof android.text.Spanned;

        if $z1 != 0 goto label1;

        $r10 = newarray (androidx.compose.ui.text.platform.style.ShaderBrushSpan)[0];

        $r11 = (java.lang.Object[]) $r10;

        $r12 = (androidx.compose.ui.text.platform.style.ShaderBrushSpan[]) $r11;

        return $r12;

     label1:
        $r3 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: java.lang.CharSequence getText()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type android.text.Spanned");

        $r4 = (android.text.Spanned) $r3;

        $r5 = virtualinvoke $r1.<androidx.compose.ui.text.android.TextLayout: java.lang.CharSequence getText()>();

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        $r6 = interfaceinvoke $r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroidx/compose/ui/text/platform/style/ShaderBrushSpan;");

        $r13 = (androidx.compose.ui.text.platform.style.ShaderBrushSpan[]) $r6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "brushSpans");

        $i1 = lengthof $r13;

        if $i1 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label4;

        $r7 = newarray (androidx.compose.ui.text.platform.style.ShaderBrushSpan)[0];

        $r8 = (java.lang.Object[]) $r7;

        $r9 = (androidx.compose.ui.text.platform.style.ShaderBrushSpan[]) $r8;

        return $r9;

     label4:
        return $r13;
    }

    public void paint-RPmYEkk(androidx.compose.ui.graphics.Canvas, long, androidx.compose.ui.graphics.Shadow, androidx.compose.ui.text.style.TextDecoration)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.graphics.Canvas r1;
        long l0;
        androidx.compose.ui.graphics.Shadow r2;
        androidx.compose.ui.text.style.TextDecoration r3;
        androidx.compose.ui.text.platform.AndroidTextPaint $r4;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.graphics.Shadow;

        r3 := @parameter3: androidx.compose.ui.text.style.TextDecoration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r4 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        virtualinvoke $r4.<androidx.compose.ui.text.platform.AndroidTextPaint: void setColor-8_81llA(long)>(l0);

        virtualinvoke $r4.<androidx.compose.ui.text.platform.AndroidTextPaint: void setShadow(androidx.compose.ui.graphics.Shadow)>(r2);

        virtualinvoke $r4.<androidx.compose.ui.text.platform.AndroidTextPaint: void setTextDecoration(androidx.compose.ui.text.style.TextDecoration)>(r3);

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void paint(androidx.compose.ui.graphics.Canvas)>(r1);

        return;
    }

    public void paint-iJQMabo(androidx.compose.ui.graphics.Canvas, long, androidx.compose.ui.graphics.Shadow, androidx.compose.ui.text.style.TextDecoration, androidx.compose.ui.graphics.drawscope.DrawStyle)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.graphics.Canvas r1;
        long l0;
        androidx.compose.ui.graphics.Shadow r2;
        androidx.compose.ui.text.style.TextDecoration r3;
        androidx.compose.ui.graphics.drawscope.DrawStyle r4;
        androidx.compose.ui.text.platform.AndroidTextPaint $r5;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.compose.ui.graphics.Shadow;

        r3 := @parameter3: androidx.compose.ui.text.style.TextDecoration;

        r4 := @parameter4: androidx.compose.ui.graphics.drawscope.DrawStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r5 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        virtualinvoke $r5.<androidx.compose.ui.text.platform.AndroidTextPaint: void setColor-8_81llA(long)>(l0);

        virtualinvoke $r5.<androidx.compose.ui.text.platform.AndroidTextPaint: void setShadow(androidx.compose.ui.graphics.Shadow)>(r2);

        virtualinvoke $r5.<androidx.compose.ui.text.platform.AndroidTextPaint: void setTextDecoration(androidx.compose.ui.text.style.TextDecoration)>(r3);

        virtualinvoke $r5.<androidx.compose.ui.text.platform.AndroidTextPaint: void setDrawStyle(androidx.compose.ui.graphics.drawscope.DrawStyle)>(r4);

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void paint(androidx.compose.ui.graphics.Canvas)>(r1);

        return;
    }

    public void paint(androidx.compose.ui.graphics.Canvas, androidx.compose.ui.graphics.Brush, float, androidx.compose.ui.graphics.Shadow, androidx.compose.ui.text.style.TextDecoration, androidx.compose.ui.graphics.drawscope.DrawStyle)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.graphics.Canvas r1;
        androidx.compose.ui.graphics.Brush r2;
        float f0, $f1, $f2;
        androidx.compose.ui.graphics.Shadow r3;
        androidx.compose.ui.text.style.TextDecoration r4;
        androidx.compose.ui.graphics.drawscope.DrawStyle r5;
        androidx.compose.ui.text.platform.AndroidTextPaint $r6;
        long $l0;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        r2 := @parameter1: androidx.compose.ui.graphics.Brush;

        f0 := @parameter2: float;

        r3 := @parameter3: androidx.compose.ui.graphics.Shadow;

        r4 := @parameter4: androidx.compose.ui.text.style.TextDecoration;

        r5 := @parameter5: androidx.compose.ui.graphics.drawscope.DrawStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "brush");

        $r6 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        $f1 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getWidth()>();

        $f2 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHeight()>();

        $l0 = staticinvoke <androidx.compose.ui.geometry.SizeKt: long Size(float,float)>($f1, $f2);

        virtualinvoke $r6.<androidx.compose.ui.text.platform.AndroidTextPaint: void setBrush-12SF9DM(androidx.compose.ui.graphics.Brush,long,float)>(r2, $l0, f0);

        virtualinvoke $r6.<androidx.compose.ui.text.platform.AndroidTextPaint: void setShadow(androidx.compose.ui.graphics.Shadow)>(r3);

        virtualinvoke $r6.<androidx.compose.ui.text.platform.AndroidTextPaint: void setTextDecoration(androidx.compose.ui.text.style.TextDecoration)>(r4);

        virtualinvoke $r6.<androidx.compose.ui.text.platform.AndroidTextPaint: void setDrawStyle(androidx.compose.ui.graphics.drawscope.DrawStyle)>(r5);

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void paint(androidx.compose.ui.graphics.Canvas)>(r1);

        return;
    }

    private final void paint(androidx.compose.ui.graphics.Canvas)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.graphics.Canvas r1;
        android.graphics.Canvas r2;
        boolean $z0, $z1;
        androidx.compose.ui.text.android.TextLayout $r3;
        float $f0, $f1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        r2 = staticinvoke <androidx.compose.ui.graphics.AndroidCanvas_androidKt: android.graphics.Canvas getNativeCanvas(androidx.compose.ui.graphics.Canvas)>(r1);

        $z0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: boolean getDidExceedMaxLines()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.graphics.Canvas: int save()>();

        $f0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getWidth()>();

        $f1 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getHeight()>();

        virtualinvoke r2.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

     label1:
        $r3 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        virtualinvoke $r3.<androidx.compose.ui.text.android.TextLayout: void paint(android.graphics.Canvas)>(r2);

        $z1 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: boolean getDidExceedMaxLines()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.graphics.Canvas: void restore()>();

     label2:
        return;
    }

    private final androidx.compose.ui.text.android.TextLayout constructTextLayout(int, int, android.text.TextUtils$TruncateAt, int, int, int, int, int)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        android.text.TextUtils$TruncateAt r1;
        java.lang.CharSequence r2;
        float f0;
        androidx.compose.ui.text.platform.AndroidTextPaint r3;
        androidx.compose.ui.text.android.LayoutIntrinsics r4;
        boolean z0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics $r5, $r6, $r7;
        androidx.compose.ui.text.TextStyle $r8;
        androidx.compose.ui.text.android.TextLayout $r9;
        android.text.TextPaint $r10;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.text.TextUtils$TruncateAt;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        r2 = r0.<androidx.compose.ui.text.AndroidParagraph: java.lang.CharSequence charSequence>;

        f0 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: float getWidth()>();

        r3 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidTextPaint getTextPaint$ui_text_release()>();

        $r5 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        i7 = virtualinvoke $r5.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: int getTextDirectionHeuristic$ui_text_release()>();

        $r6 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        r4 = virtualinvoke $r6.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: androidx.compose.ui.text.android.LayoutIntrinsics getLayoutIntrinsics$ui_text_release()>();

        $r7 = r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        $r8 = virtualinvoke $r7.<androidx.compose.ui.text.platform.AndroidParagraphIntrinsics: androidx.compose.ui.text.TextStyle getStyle()>();

        z0 = staticinvoke <androidx.compose.ui.text.platform.AndroidParagraphHelper_androidKt: boolean isIncludeFontPaddingEnabled(androidx.compose.ui.text.TextStyle)>($r8);

        $r9 = new androidx.compose.ui.text.android.TextLayout;

        $r10 = (android.text.TextPaint) r3;

        specialinvoke $r9.<androidx.compose.ui.text.android.TextLayout: void <init>(java.lang.CharSequence,float,android.text.TextPaint,int,android.text.TextUtils$TruncateAt,int,float,float,boolean,boolean,int,int,int,int,int,int,int[],int[],androidx.compose.ui.text.android.LayoutIntrinsics,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, f0, $r10, i0, r1, i7, 1.0F, 0.0F, z0, 1, i2, i4, i5, i6, i3, i1, null, null, r4, 196736, null);

        return $r9;
    }

    public void <init>(androidx.compose.ui.text.platform.AndroidParagraphIntrinsics, int, boolean, long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        androidx.compose.ui.text.platform.AndroidParagraphIntrinsics r1;
        int i0;
        boolean z0;
        long l1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: androidx.compose.ui.text.platform.AndroidParagraphIntrinsics;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l1 := @parameter3: long;

        $r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void <init>(androidx.compose.ui.text.platform.AndroidParagraphIntrinsics,int,boolean,long)>(r1, i0, z0, l1);

        return;
    }

    public void <init>(java.lang.String, androidx.compose.ui.text.TextStyle, java.util.List, java.util.List, int, boolean, long, androidx.compose.ui.text.font.FontFamily$Resolver, androidx.compose.ui.unit.Density, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.AndroidParagraph r0;
        java.lang.String r1;
        androidx.compose.ui.text.TextStyle r2;
        java.util.List r3, r4;
        int i0;
        boolean z0;
        long l1;
        androidx.compose.ui.text.font.FontFamily$Resolver r5;
        androidx.compose.ui.unit.Density r6;
        kotlin.jvm.internal.DefaultConstructorMarker $r7;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.compose.ui.text.TextStyle;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        l1 := @parameter6: long;

        r5 := @parameter7: androidx.compose.ui.text.font.FontFamily$Resolver;

        r6 := @parameter8: androidx.compose.ui.unit.Density;

        $r7 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.AndroidParagraph: void <init>(java.lang.String,androidx.compose.ui.text.TextStyle,java.util.List,java.util.List,int,boolean,long,androidx.compose.ui.text.font.FontFamily$Resolver,androidx.compose.ui.unit.Density)>(r1, r2, r3, r4, i0, z0, l1, r5, r6);

        return;
    }

    public static final androidx.compose.ui.text.android.TextLayout access$getLayout$p(androidx.compose.ui.text.AndroidParagraph)
    {
        androidx.compose.ui.text.AndroidParagraph $r0;
        androidx.compose.ui.text.android.TextLayout $r1;

        $r0 := @parameter0: androidx.compose.ui.text.AndroidParagraph;

        $r1 = $r0.<androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout layout>;

        return $r1;
    }

androidx.compose.ui.text.AndroidParagraph$WhenMappings
<androidx.compose.ui.text.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.compose.ui.text.style.ResolvedTextDirection[] $r1;
        int $i0, $i1, $i2;
        androidx.compose.ui.text.style.ResolvedTextDirection $r2, $r3;

        $r1 = staticinvoke <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Ltr>;

        $i1 = virtualinvoke $r2.<androidx.compose.ui.text.style.ResolvedTextDirection: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection Rtl>;

        $i2 = virtualinvoke $r3.<androidx.compose.ui.text.style.ResolvedTextDirection: int ordinal()>();

        r0[$i2] = 2;

        <androidx.compose.ui.text.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

androidx.compose.ui.text.AndroidParagraph$wordBoundary$2
<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: androidx.compose.ui.text.AndroidParagraph this$0>
    void <init>(androidx.compose.ui.text.AndroidParagraph)
    {
        androidx.compose.ui.text.AndroidParagraph$wordBoundary$2 r0;
        androidx.compose.ui.text.AndroidParagraph $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph$wordBoundary$2;

        $r1 := @parameter0: androidx.compose.ui.text.AndroidParagraph;

        r0.<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: androidx.compose.ui.text.AndroidParagraph this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.compose.ui.text.android.selection.WordBoundary invoke()
    {
        androidx.compose.ui.text.AndroidParagraph$wordBoundary$2 r0;
        androidx.compose.ui.text.android.selection.WordBoundary $r1;
        androidx.compose.ui.text.AndroidParagraph $r2, $r4;
        java.util.Locale $r3;
        androidx.compose.ui.text.android.TextLayout $r5;
        java.lang.CharSequence $r6;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph$wordBoundary$2;

        $r1 = new androidx.compose.ui.text.android.selection.WordBoundary;

        $r2 = r0.<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: androidx.compose.ui.text.AndroidParagraph this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.text.AndroidParagraph: java.util.Locale getTextLocale$ui_text_release()>();

        $r4 = r0.<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: androidx.compose.ui.text.AndroidParagraph this$0>;

        $r5 = staticinvoke <androidx.compose.ui.text.AndroidParagraph: androidx.compose.ui.text.android.TextLayout access$getLayout$p(androidx.compose.ui.text.AndroidParagraph)>($r4);

        $r6 = virtualinvoke $r5.<androidx.compose.ui.text.android.TextLayout: java.lang.CharSequence getText()>();

        specialinvoke $r1.<androidx.compose.ui.text.android.selection.WordBoundary: void <init>(java.util.Locale,java.lang.CharSequence)>($r3, $r6);

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.text.AndroidParagraph$wordBoundary$2 r0;
        androidx.compose.ui.text.android.selection.WordBoundary $r1;

        r0 := @this: androidx.compose.ui.text.AndroidParagraph$wordBoundary$2;

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.AndroidParagraph$wordBoundary$2: androidx.compose.ui.text.android.selection.WordBoundary invoke()>();

        return $r1;
    }

