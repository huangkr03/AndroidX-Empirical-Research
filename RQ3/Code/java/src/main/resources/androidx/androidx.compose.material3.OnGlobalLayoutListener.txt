androidx.compose.material3.OnGlobalLayoutListener
<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>
<androidx.compose.material3.OnGlobalLayoutListener: kotlin.jvm.functions.Function0 onGlobalLayoutCallback>
<androidx.compose.material3.OnGlobalLayoutListener: boolean isListeningToGlobalLayout>
    public void <init>(android.view.View, kotlin.jvm.functions.Function0)
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        android.view.View r1, $r4;
        kotlin.jvm.functions.Function0 r2;
        android.view.View$OnAttachStateChangeListener $r3;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onGlobalLayoutCallback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view> = r1;

        r0.<androidx.compose.material3.OnGlobalLayoutListener: kotlin.jvm.functions.Function0 onGlobalLayoutCallback> = r2;

        $r4 = r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>;

        $r3 = (android.view.View$OnAttachStateChangeListener) r0;

        virtualinvoke $r4.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r3);

        specialinvoke r0.<androidx.compose.material3.OnGlobalLayoutListener: void registerOnGlobalLayoutListener()>();

        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        android.view.View r1;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        specialinvoke r0.<androidx.compose.material3.OnGlobalLayoutListener: void registerOnGlobalLayoutListener()>();

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        android.view.View r1;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        specialinvoke r0.<androidx.compose.material3.OnGlobalLayoutListener: void unregisterOnGlobalLayoutListener()>();

        return;
    }

    public void onGlobalLayout()
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        $r1 = r0.<androidx.compose.material3.OnGlobalLayoutListener: kotlin.jvm.functions.Function0 onGlobalLayoutCallback>;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    private final void registerOnGlobalLayoutListener()
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        boolean $z0, $z1;
        android.view.View $r1, $r2;
        android.view.ViewTreeObserver $r3;
        android.view.ViewTreeObserver$OnGlobalLayoutListener $r4;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        $z0 = r0.<androidx.compose.material3.OnGlobalLayoutListener: boolean isListeningToGlobalLayout>;

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>;

        $z1 = virtualinvoke $r1.<android.view.View: boolean isAttachedToWindow()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r4 = (android.view.ViewTreeObserver$OnGlobalLayoutListener) r0;

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r4);

        r0.<androidx.compose.material3.OnGlobalLayoutListener: boolean isListeningToGlobalLayout> = 1;

        return;
    }

    private final void unregisterOnGlobalLayoutListener()
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        boolean $z0;
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnGlobalLayoutListener $r3;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        $z0 = r0.<androidx.compose.material3.OnGlobalLayoutListener: boolean isListeningToGlobalLayout>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = (android.view.ViewTreeObserver$OnGlobalLayoutListener) r0;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r3);

        r0.<androidx.compose.material3.OnGlobalLayoutListener: boolean isListeningToGlobalLayout> = 0;

        return;
    }

    public final void dispose()
    {
        androidx.compose.material3.OnGlobalLayoutListener r0;
        android.view.View$OnAttachStateChangeListener $r1;
        android.view.View $r2;

        r0 := @this: androidx.compose.material3.OnGlobalLayoutListener;

        specialinvoke r0.<androidx.compose.material3.OnGlobalLayoutListener: void unregisterOnGlobalLayoutListener()>();

        $r2 = r0.<androidx.compose.material3.OnGlobalLayoutListener: android.view.View view>;

        $r1 = (android.view.View$OnAttachStateChangeListener) r0;

        virtualinvoke $r2.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>($r1);

        return;
    }

