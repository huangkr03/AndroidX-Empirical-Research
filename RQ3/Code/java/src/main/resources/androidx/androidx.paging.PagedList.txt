androidx.paging.PagedList
<androidx.paging.PagedList: androidx.paging.PagedList$Companion Companion>
<androidx.paging.PagedList: androidx.paging.PagingSource pagingSource>
<androidx.paging.PagedList: kotlinx.coroutines.CoroutineScope coroutineScope>
<androidx.paging.PagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>
<androidx.paging.PagedList: androidx.paging.PagedStorage storage>
<androidx.paging.PagedList: androidx.paging.PagedList$Config config>
<androidx.paging.PagedList: java.lang.Runnable refreshRetryCallback>
<androidx.paging.PagedList: int requiredRemainder>
<androidx.paging.PagedList: java.util.List callbacks>
<androidx.paging.PagedList: java.util.List loadStateListeners>
    public void <init>(androidx.paging.PagingSource, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher, androidx.paging.PagedStorage, androidx.paging.PagedList$Config)
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagingSource r1;
        kotlinx.coroutines.CoroutineScope r2;
        kotlinx.coroutines.CoroutineDispatcher r3;
        androidx.paging.PagedStorage r4;
        androidx.paging.PagedList$Config r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r8, $r10;
        java.util.List $r9, $r11;
        boolean z0, z1;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: androidx.paging.PagingSource;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        r4 := @parameter3: androidx.paging.PagedStorage;

        r5 := @parameter4: androidx.paging.PagedList$Config;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pagingSource");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "notifyDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "storage");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "config");

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<androidx.paging.PagedList: androidx.paging.PagingSource pagingSource> = r1;

        r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineScope coroutineScope> = r2;

        r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher> = r3;

        r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage> = r4;

        r0.<androidx.paging.PagedList: androidx.paging.PagedList$Config config> = r5;

        $r6 = r0.<androidx.paging.PagedList: androidx.paging.PagedList$Config config>;

        $i0 = $r6.<androidx.paging.PagedList$Config: int prefetchDistance>;

        $i2 = $i0 * 2;

        $r7 = r0.<androidx.paging.PagedList: androidx.paging.PagedList$Config config>;

        $i1 = $r7.<androidx.paging.PagedList$Config: int pageSize>;

        $i3 = $i2 + $i1;

        r0.<androidx.paging.PagedList: int requiredRemainder> = $i3;

        z0 = 0;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = (java.util.List) $r8;

        r0.<androidx.paging.PagedList: java.util.List callbacks> = $r9;

        z1 = 0;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = (java.util.List) $r10;

        r0.<androidx.paging.PagedList: java.util.List loadStateListeners> = $r11;

        return;
    }

    public androidx.paging.PagingSource getPagingSource()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagingSource $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagingSource pagingSource>;

        return $r1;
    }

    public final kotlinx.coroutines.CoroutineScope getCoroutineScope$paging_common()
    {
        androidx.paging.PagedList r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineScope coroutineScope>;

        return $r1;
    }

    public final kotlinx.coroutines.CoroutineDispatcher getNotifyDispatcher$paging_common()
    {
        androidx.paging.PagedList r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>;

        return $r1;
    }

    public final androidx.paging.PagedStorage getStorage$paging_common()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        return $r1;
    }

    public final androidx.paging.PagedList$Config getConfig()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedList$Config $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedList$Config config>;

        return $r1;
    }

    public final androidx.paging.NullPaddedList getNullPaddedList()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;
        androidx.paging.NullPaddedList $r2;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $r2 = (androidx.paging.NullPaddedList) $r1;

        return $r2;
    }

    public final java.lang.Runnable getRefreshRetryCallback$paging_common()
    {
        androidx.paging.PagedList r0;
        java.lang.Runnable $r1;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: java.lang.Runnable refreshRetryCallback>;

        return $r1;
    }

    public final void setRefreshRetryCallback$paging_common(java.lang.Runnable)
    {
        androidx.paging.PagedList r0;
        java.lang.Runnable r1;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: java.lang.Runnable;

        r0.<androidx.paging.PagedList: java.lang.Runnable refreshRetryCallback> = r1;

        return;
    }

    public final int lastLoad()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $i0 = virtualinvoke $r1.<androidx.paging.PagedStorage: int getLastLoadAroundIndex()>();

        return $i0;
    }

    public final int getRequiredRemainder$paging_common()
    {
        androidx.paging.PagedList r0;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $i0 = r0.<androidx.paging.PagedList: int requiredRemainder>;

        return $i0;
    }

    public int getSize()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $i0 = virtualinvoke $r1.<androidx.paging.PagedStorage: int size()>();

        return $i0;
    }

    public final androidx.paging.DataSource getDataSource()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagingSource r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        androidx.paging.LegacyPagingSource $r10;
        androidx.paging.DataSource $r11;

        r0 := @this: androidx.paging.PagedList;

        r1 = virtualinvoke r0.<androidx.paging.PagedList: androidx.paging.PagingSource getPagingSource()>();

        $z0 = r1 instanceof androidx.paging.LegacyPagingSource;

        if $z0 == 0 goto label1;

        $r10 = (androidx.paging.LegacyPagingSource) r1;

        $r11 = virtualinvoke $r10.<androidx.paging.LegacyPagingSource: androidx.paging.DataSource getDataSource$paging_common()>();

        return $r11;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to access dataSource on a PagedList that was instantiated with a ");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of a DataSource");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r2;
    }

    public static void getDataSource$annotations()
    {
        return;
    }

<androidx.paging.PagedList: java.lang.Object getLastKey()>
<androidx.paging.PagedList: boolean isDetached()>
<androidx.paging.PagedList: void dispatchCurrentLoadState(kotlin.jvm.functions.Function2)>
<androidx.paging.PagedList: void loadAroundInternal(int)>
<androidx.paging.PagedList: void detach()>
    public final int getLoadedCount()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $i0 = virtualinvoke $r1.<androidx.paging.PagedStorage: int getStorageCount()>();

        return $i0;
    }

    public boolean isImmutable()
    {
        androidx.paging.PagedList r0;
        boolean $z0;

        r0 := @this: androidx.paging.PagedList;

        $z0 = virtualinvoke r0.<androidx.paging.PagedList: boolean isDetached()>();

        return $z0;
    }

    public final int getPositionOffset()
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedStorage $r1;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $i0 = virtualinvoke $r1.<androidx.paging.PagedStorage: int getPositionOffset()>();

        return $i0;
    }

    public void setInitialLoadState(androidx.paging.LoadType, androidx.paging.LoadState)
    {
        androidx.paging.PagedList r0;
        androidx.paging.LoadType r1;
        androidx.paging.LoadState r2;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "loadState");

        return;
    }

    public void retry()
    {
        androidx.paging.PagedList r0;

        r0 := @this: androidx.paging.PagedList;

        return;
    }

    public final void setRetryCallback(java.lang.Runnable)
    {
        androidx.paging.PagedList r0;
        java.lang.Runnable r1;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: java.lang.Runnable;

        r0.<androidx.paging.PagedList: java.lang.Runnable refreshRetryCallback> = r1;

        return;
    }

    public final void dispatchStateChangeAsync$paging_common(androidx.paging.LoadType, androidx.paging.LoadState)
    {
        androidx.paging.PagedList r0;
        androidx.paging.LoadType r1;
        androidx.paging.LoadState r2;
        kotlinx.coroutines.CoroutineDispatcher $r3;
        androidx.paging.PagedList$dispatchStateChangeAsync$1 $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlin.coroutines.CoroutineContext $r6;
        kotlin.jvm.functions.Function2 $r7;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.LoadState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "state");

        $r5 = r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r3 = r0.<androidx.paging.PagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>;

        $r6 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.paging.PagedList$dispatchStateChangeAsync$1;

        specialinvoke $r4.<androidx.paging.PagedList$dispatchStateChangeAsync$1: void <init>(androidx.paging.PagedList,androidx.paging.LoadType,androidx.paging.LoadState,kotlin.coroutines.Continuation)>(r0, r1, r2, null);

        $r7 = (kotlin.jvm.functions.Function2) $r4;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, $r6, null, $r7, 2, null);

        return;
    }

    public java.lang.Object get(int)
    {
        androidx.paging.PagedList r0;
        int i0;
        androidx.paging.PagedStorage $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        $r2 = virtualinvoke $r1.<androidx.paging.PagedStorage: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public final void loadAround(int)
    {
        androidx.paging.PagedList r0;
        int i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        androidx.paging.PagedStorage $r8;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<androidx.paging.PagedList: int size()>();

        if i0 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");

        $i1 = virtualinvoke r0.<androidx.paging.PagedList: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        $r8 = r0.<androidx.paging.PagedList: androidx.paging.PagedStorage storage>;

        virtualinvoke $r8.<androidx.paging.PagedStorage: void setLastLoadAroundIndex(int)>(i0);

        virtualinvoke r0.<androidx.paging.PagedList: void loadAroundInternal(int)>(i0);

        return;
    }

    public final java.util.List snapshot()
    {
        androidx.paging.PagedList r0;
        boolean $z0;
        androidx.paging.SnapshotPagedList $r1;
        java.util.List $r2;

        r0 := @this: androidx.paging.PagedList;

        $z0 = virtualinvoke r0.<androidx.paging.PagedList: boolean isImmutable()>();

        if $z0 == 0 goto label1;

        $r2 = (java.util.List) r0;

        goto label2;

     label1:
        $r1 = new androidx.paging.SnapshotPagedList;

        specialinvoke $r1.<androidx.paging.SnapshotPagedList: void <init>(androidx.paging.PagedList)>(r0);

        $r2 = (java.util.List) $r1;

     label2:
        return $r2;
    }

    public final void addWeakLoadStateListener(kotlin.jvm.functions.Function2)
    {
        androidx.paging.PagedList r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.paging.PagedList$addWeakLoadStateListener$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.util.List $r4, $r6;
        java.lang.ref.WeakReference $r5;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r4 = r0.<androidx.paging.PagedList: java.util.List loadStateListeners>;

        $r2 = <androidx.paging.PagedList$addWeakLoadStateListener$1: androidx.paging.PagedList$addWeakLoadStateListener$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)>($r4, $r3);

        $r6 = r0.<androidx.paging.PagedList: java.util.List loadStateListeners>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        virtualinvoke r0.<androidx.paging.PagedList: void dispatchCurrentLoadState(kotlin.jvm.functions.Function2)>(r1);

        return;
    }

    public final void removeWeakLoadStateListener(kotlin.jvm.functions.Function2)
    {
        androidx.paging.PagedList r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.paging.PagedList$removeWeakLoadStateListener$1 $r2;
        java.util.List $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r3 = r0.<androidx.paging.PagedList: java.util.List loadStateListeners>;

        $r2 = new androidx.paging.PagedList$removeWeakLoadStateListener$1;

        specialinvoke $r2.<androidx.paging.PagedList$removeWeakLoadStateListener$1: void <init>(kotlin.jvm.functions.Function2)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)>($r3, $r4);

        return;
    }

    public final void addWeakCallback(java.util.List, androidx.paging.PagedList$Callback)
    {
        androidx.paging.PagedList r0;
        java.util.List r1;
        androidx.paging.PagedList$Callback r2;
        androidx.paging.PagedList$Companion $r3;
        int $i0, $i1;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.paging.PagedList$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        if r1 == null goto label1;

        if r1 == r0 goto label1;

        $r3 = <androidx.paging.PagedList: androidx.paging.PagedList$Companion Companion>;

        $i0 = virtualinvoke r0.<androidx.paging.PagedList: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke $r3.<androidx.paging.PagedList$Companion: void dispatchNaiveUpdatesSinceSnapshot$paging_common(int,int,androidx.paging.PagedList$Callback)>($i0, $i1, r2);

     label1:
        virtualinvoke r0.<androidx.paging.PagedList: void addWeakCallback(androidx.paging.PagedList$Callback)>(r2);

        return;
    }

    public final void addWeakCallback(androidx.paging.PagedList$Callback)
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedList$Callback r1;
        androidx.paging.PagedList$addWeakCallback$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        java.util.List $r4, $r6;
        java.lang.ref.WeakReference $r5;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: androidx.paging.PagedList$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r4 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r2 = <androidx.paging.PagedList$addWeakCallback$1: androidx.paging.PagedList$addWeakCallback$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)>($r4, $r3);

        $r6 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public final void removeWeakCallback(androidx.paging.PagedList$Callback)
    {
        androidx.paging.PagedList r0;
        androidx.paging.PagedList$Callback r1;
        androidx.paging.PagedList$removeWeakCallback$1 $r2;
        java.util.List $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.paging.PagedList;

        r1 := @parameter0: androidx.paging.PagedList$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r3 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r2 = new androidx.paging.PagedList$removeWeakCallback$1;

        specialinvoke $r2.<androidx.paging.PagedList$removeWeakCallback$1: void <init>(androidx.paging.PagedList$Callback)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)>($r3, $r4);

        return;
    }

    public final void notifyInserted$paging_common(int, int)
    {
        androidx.paging.PagedList r0;
        int i0, i1;
        java.lang.Iterable $r1, $r7;
        java.util.Iterator r2;
        java.lang.Object r3, $r9;
        java.lang.ref.WeakReference r4;
        androidx.paging.PagedList$Callback r5;
        java.util.List $r6, $r8;
        boolean $z2;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r7 = (java.lang.Iterable) $r6;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List reversed(java.lang.Iterable)>($r7);

        $r1 = (java.lang.Iterable) $r8;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.ref.WeakReference) r3;

        $r9 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (androidx.paging.PagedList$Callback) $r9;

        if r5 != null goto label3;

        goto label2;

     label3:
        virtualinvoke r5.<androidx.paging.PagedList$Callback: void onInserted(int,int)>(i0, i1);

        goto label2;

     label4:
        return;
    }

    public final void notifyChanged(int, int)
    {
        androidx.paging.PagedList r0;
        int i0, i1;
        java.lang.Iterable $r1, $r7;
        java.util.Iterator r2;
        java.lang.Object r3, $r9;
        java.lang.ref.WeakReference r4;
        androidx.paging.PagedList$Callback r5;
        java.util.List $r6, $r8;
        boolean $z2;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r7 = (java.lang.Iterable) $r6;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List reversed(java.lang.Iterable)>($r7);

        $r1 = (java.lang.Iterable) $r8;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.ref.WeakReference) r3;

        $r9 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (androidx.paging.PagedList$Callback) $r9;

        if r5 != null goto label3;

        goto label2;

     label3:
        virtualinvoke r5.<androidx.paging.PagedList$Callback: void onChanged(int,int)>(i0, i1);

        goto label2;

     label4:
        return;
    }

    public final void notifyRemoved(int, int)
    {
        androidx.paging.PagedList r0;
        int i0, i1;
        java.lang.Iterable $r1, $r7;
        java.util.Iterator r2;
        java.lang.Object r3, $r9;
        java.lang.ref.WeakReference r4;
        androidx.paging.PagedList$Callback r5;
        java.util.List $r6, $r8;
        boolean $z2;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.paging.PagedList: java.util.List callbacks>;

        $r7 = (java.lang.Iterable) $r6;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List reversed(java.lang.Iterable)>($r7);

        $r1 = (java.lang.Iterable) $r8;

        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.ref.WeakReference) r3;

        $r9 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (androidx.paging.PagedList$Callback) $r9;

        if r5 != null goto label3;

        goto label2;

     label3:
        virtualinvoke r5.<androidx.paging.PagedList$Callback: void onRemoved(int,int)>(i0, i1);

        goto label2;

     label4:
        return;
    }

    public static final androidx.paging.PagedList create(androidx.paging.PagingSource, androidx.paging.PagingSource$LoadResult$Page, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, androidx.paging.PagedList$BoundaryCallback, androidx.paging.PagedList$Config, java.lang.Object)
    {
        androidx.paging.PagingSource r0;
        androidx.paging.PagingSource$LoadResult$Page r1;
        kotlinx.coroutines.CoroutineScope r2;
        kotlinx.coroutines.CoroutineDispatcher r3, r4;
        androidx.paging.PagedList$BoundaryCallback r5;
        androidx.paging.PagedList$Config r6;
        java.lang.Object r7;
        androidx.paging.PagedList$Companion $r8;
        androidx.paging.PagedList $r9;

        r0 := @parameter0: androidx.paging.PagingSource;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        r2 := @parameter2: kotlinx.coroutines.CoroutineScope;

        r3 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        r4 := @parameter4: kotlinx.coroutines.CoroutineDispatcher;

        r5 := @parameter5: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter6: androidx.paging.PagedList$Config;

        r7 := @parameter7: java.lang.Object;

        $r8 = <androidx.paging.PagedList: androidx.paging.PagedList$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.paging.PagedList$Companion: androidx.paging.PagedList create(androidx.paging.PagingSource,androidx.paging.PagingSource$LoadResult$Page,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.PagedList$BoundaryCallback,androidx.paging.PagedList$Config,java.lang.Object)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return $r9;
    }

    public final volatile int size()
    {
        androidx.paging.PagedList r0;
        int $i0;

        r0 := @this: androidx.paging.PagedList;

        $i0 = virtualinvoke r0.<androidx.paging.PagedList: int getSize()>();

        return $i0;
    }

    public volatile java.lang.Object removeAt(int)
    {
        androidx.paging.PagedList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.util.AbstractList: java.lang.Object remove(int)>(i0);

        return $r1;
    }

    public final volatile java.lang.Object remove(int)
    {
        androidx.paging.PagedList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagedList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.paging.PagedList: java.lang.Object removeAt(int)>(i0);

        return $r1;
    }

    public static final java.util.List access$getLoadStateListeners$p(androidx.paging.PagedList)
    {
        androidx.paging.PagedList $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.paging.PagedList;

        $r1 = $r0.<androidx.paging.PagedList: java.util.List loadStateListeners>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.paging.PagedList$Companion $r0;

        $r0 = new androidx.paging.PagedList$Companion;

        specialinvoke $r0.<androidx.paging.PagedList$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.PagedList: androidx.paging.PagedList$Companion Companion> = $r0;

        return;
    }

