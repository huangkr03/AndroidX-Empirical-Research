androidx.wear.tiles.TileProvider
<androidx.wear.tiles.TileProvider: int API_VERSION>
<androidx.wear.tiles.TileProvider: int getApiVersion()>
<androidx.wear.tiles.TileProvider: void onTileRequest(int,androidx.wear.tiles.TileRequestData,androidx.wear.tiles.TileCallback)>
<androidx.wear.tiles.TileProvider: void onResourcesRequest(int,androidx.wear.tiles.ResourcesRequestData,androidx.wear.tiles.ResourcesCallback)>
<androidx.wear.tiles.TileProvider: void onTileAddEvent(androidx.wear.tiles.TileAddEventData)>
<androidx.wear.tiles.TileProvider: void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData)>
<androidx.wear.tiles.TileProvider: void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData)>
<androidx.wear.tiles.TileProvider: void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData)>
androidx.wear.tiles.TileProvider$Default
    public void <init>()
    {
        androidx.wear.tiles.TileProvider$Default r0;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        return 0;
    }

    public void onTileRequest(int, androidx.wear.tiles.TileRequestData, androidx.wear.tiles.TileCallback) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        int i0;
        androidx.wear.tiles.TileRequestData r1;
        androidx.wear.tiles.TileCallback r2;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.TileRequestData;

        r2 := @parameter2: androidx.wear.tiles.TileCallback;

        return;
    }

    public void onResourcesRequest(int, androidx.wear.tiles.ResourcesRequestData, androidx.wear.tiles.ResourcesCallback) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        int i0;
        androidx.wear.tiles.ResourcesRequestData r1;
        androidx.wear.tiles.ResourcesCallback r2;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.ResourcesRequestData;

        r2 := @parameter2: androidx.wear.tiles.ResourcesCallback;

        return;
    }

    public void onTileAddEvent(androidx.wear.tiles.TileAddEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        androidx.wear.tiles.TileAddEventData r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        r1 := @parameter0: androidx.wear.tiles.TileAddEventData;

        return;
    }

    public void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        androidx.wear.tiles.TileRemoveEventData r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        r1 := @parameter0: androidx.wear.tiles.TileRemoveEventData;

        return;
    }

    public void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        androidx.wear.tiles.TileEnterEventData r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        r1 := @parameter0: androidx.wear.tiles.TileEnterEventData;

        return;
    }

    public void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Default r0;
        androidx.wear.tiles.TileLeaveEventData r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        r1 := @parameter0: androidx.wear.tiles.TileLeaveEventData;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileProvider$Default r0;

        r0 := @this: androidx.wear.tiles.TileProvider$Default;

        return null;
    }

androidx.wear.tiles.TileProvider$Stub$Proxy
<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>
<androidx.wear.tiles.TileProvider$Stub$Proxy: androidx.wear.tiles.TileProvider sDefaultImpl>
    void <init>(android.os.IBinder)
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        $r1 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        return "androidx.wear.tiles.TileProvider";
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0, i1;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileProvider $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        $r4 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        if z0 != 0 goto label3;

        $r5 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r5 == null goto label3;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        i1 = interfaceinvoke $r6.<androidx.wear.tiles.TileProvider: int getApiVersion()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onTileRequest(int, androidx.wear.tiles.TileRequestData, androidx.wear.tiles.TileCallback) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        int i0;
        androidx.wear.tiles.TileRequestData r1;
        androidx.wear.tiles.TileCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.wear.tiles.TileProvider $r6, $r7;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.TileRequestData;

        r2 := @parameter2: androidx.wear.tiles.TileCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.TileRequestData: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.wear.tiles.TileCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.wear.tiles.TileProvider: void onTileRequest(int,androidx.wear.tiles.TileRequestData,androidx.wear.tiles.TileCallback)>(i0, r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onResourcesRequest(int, androidx.wear.tiles.ResourcesRequestData, androidx.wear.tiles.ResourcesCallback) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        int i0;
        androidx.wear.tiles.ResourcesRequestData r1;
        androidx.wear.tiles.ResourcesCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.wear.tiles.TileProvider $r6, $r7;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.tiles.ResourcesRequestData;

        r2 := @parameter2: androidx.wear.tiles.ResourcesCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.ResourcesRequestData: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.wear.tiles.ResourcesCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.wear.tiles.TileProvider: void onResourcesRequest(int,androidx.wear.tiles.ResourcesRequestData,androidx.wear.tiles.ResourcesCallback)>(i0, r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onTileAddEvent(androidx.wear.tiles.TileAddEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        androidx.wear.tiles.TileAddEventData r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileProvider $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 := @parameter0: androidx.wear.tiles.TileAddEventData;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.TileAddEventData: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.wear.tiles.TileProvider: void onTileAddEvent(androidx.wear.tiles.TileAddEventData)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        androidx.wear.tiles.TileRemoveEventData r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileProvider $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 := @parameter0: androidx.wear.tiles.TileRemoveEventData;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.TileRemoveEventData: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.wear.tiles.TileProvider: void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        androidx.wear.tiles.TileEnterEventData r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileProvider $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 := @parameter0: androidx.wear.tiles.TileEnterEventData;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.TileEnterEventData: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.wear.tiles.TileProvider: void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub$Proxy r0;
        androidx.wear.tiles.TileLeaveEventData r1;
        android.os.Parcel r2;
        boolean z0;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        androidx.wear.tiles.TileProvider $r5, $r6;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub$Proxy;

        r1 := @parameter0: androidx.wear.tiles.TileLeaveEventData;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.wear.tiles.TileProvider");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.wear.tiles.TileLeaveEventData: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r4 = r0.<androidx.wear.tiles.TileProvider$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

        if z0 != 0 goto label5;

        $r5 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        if $r5 == null goto label5;

        $r6 = staticinvoke <androidx.wear.tiles.TileProvider$Stub: androidx.wear.tiles.TileProvider getDefaultImpl()>();

        interfaceinvoke $r6.<androidx.wear.tiles.TileProvider: void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData)>(r1);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label8;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

     label7:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

androidx.wear.tiles.TileProvider$Stub
<androidx.wear.tiles.TileProvider$Stub: java.lang.String DESCRIPTOR>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_getApiVersion>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onTileRequest>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onResourcesRequest>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onTileAddEvent>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onTileRemoveEvent>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onTileEnterEvent>
<androidx.wear.tiles.TileProvider$Stub: int TRANSACTION_onTileLeaveEvent>
    public void <init>()
    {
        androidx.wear.tiles.TileProvider$Stub r0;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.wear.tiles.TileProvider");

        return;
    }

    public static androidx.wear.tiles.TileProvider asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.wear.tiles.TileProvider$Stub$Proxy $r2;
        boolean $z0;
        androidx.wear.tiles.TileProvider $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.wear.tiles.TileProvider");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.wear.tiles.TileProvider;

        if $z0 == 0 goto label2;

        $r3 = (androidx.wear.tiles.TileProvider) r1;

        return $r3;

     label2:
        $r2 = new androidx.wear.tiles.TileProvider$Stub$Proxy;

        specialinvoke $r2.<androidx.wear.tiles.TileProvider$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.wear.tiles.TileProvider$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.wear.tiles.TileProvider$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        android.os.Parcelable$Creator $r4, $r6, $r8, $r10, $r13, $r16;
        java.lang.Object $r5, $r7, $r9, $r11, $r14, $r17;
        android.os.IBinder $r12, $r15;
        boolean $z0;
        androidx.wear.tiles.TileRequestData r18;
        androidx.wear.tiles.TileCallback r19;
        androidx.wear.tiles.ResourcesRequestData r20;
        androidx.wear.tiles.ResourcesCallback r21;
        androidx.wear.tiles.TileAddEventData r22;
        androidx.wear.tiles.TileRemoveEventData r23;
        androidx.wear.tiles.TileEnterEventData r24;
        androidx.wear.tiles.TileLeaveEventData r25;

        r0 := @this: androidx.wear.tiles.TileProvider$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.wear.tiles.TileProvider";

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 6: goto label09;
            case 7: goto label12;
            case 8: goto label15;
            case 9: goto label18;
            case 1598968902: goto label01;
            default: goto label21;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        i8 = virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: int getApiVersion()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i8);

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i7 goto label04;

        $r16 = <androidx.wear.tiles.TileRequestData: android.os.Parcelable$Creator CREATOR>;

        $r17 = interfaceinvoke $r16.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r18 = (androidx.wear.tiles.TileRequestData) $r17;

        goto label05;

     label04:
        r18 = null;

     label05:
        $r15 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r19 = staticinvoke <androidx.wear.tiles.TileCallback$Stub: androidx.wear.tiles.TileCallback asInterface(android.os.IBinder)>($r15);

        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onTileRequest(int,androidx.wear.tiles.TileRequestData,androidx.wear.tiles.TileCallback)>(i9, r18, r19);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label07;

        $r13 = <androidx.wear.tiles.ResourcesRequestData: android.os.Parcelable$Creator CREATOR>;

        $r14 = interfaceinvoke $r13.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r20 = (androidx.wear.tiles.ResourcesRequestData) $r14;

        goto label08;

     label07:
        r20 = null;

     label08:
        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r21 = staticinvoke <androidx.wear.tiles.ResourcesCallback$Stub: androidx.wear.tiles.ResourcesCallback asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onResourcesRequest(int,androidx.wear.tiles.ResourcesRequestData,androidx.wear.tiles.ResourcesCallback)>(i10, r20, r21);

        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label10;

        $r10 = <androidx.wear.tiles.TileAddEventData: android.os.Parcelable$Creator CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r22 = (androidx.wear.tiles.TileAddEventData) $r11;

        goto label11;

     label10:
        r22 = null;

     label11:
        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onTileAddEvent(androidx.wear.tiles.TileAddEventData)>(r22);

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label13;

        $r8 = <androidx.wear.tiles.TileRemoveEventData: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r23 = (androidx.wear.tiles.TileRemoveEventData) $r9;

        goto label14;

     label13:
        r23 = null;

     label14:
        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onTileRemoveEvent(androidx.wear.tiles.TileRemoveEventData)>(r23);

        return 1;

     label15:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label16;

        $r6 = <androidx.wear.tiles.TileEnterEventData: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r24 = (androidx.wear.tiles.TileEnterEventData) $r7;

        goto label17;

     label16:
        r24 = null;

     label17:
        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onTileEnterEvent(androidx.wear.tiles.TileEnterEventData)>(r24);

        return 1;

     label18:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label19;

        $r4 = <androidx.wear.tiles.TileLeaveEventData: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r25 = (androidx.wear.tiles.TileLeaveEventData) $r5;

        goto label20;

     label19:
        r25 = null;

     label20:
        virtualinvoke r0.<androidx.wear.tiles.TileProvider$Stub: void onTileLeaveEvent(androidx.wear.tiles.TileLeaveEventData)>(r25);

        return 1;

     label21:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static boolean setDefaultImpl(androidx.wear.tiles.TileProvider)
    {
        androidx.wear.tiles.TileProvider r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.wear.tiles.TileProvider;

        $r1 = <androidx.wear.tiles.TileProvider$Stub$Proxy: androidx.wear.tiles.TileProvider sDefaultImpl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;

     label1:
        if r0 == null goto label2;

        <androidx.wear.tiles.TileProvider$Stub$Proxy: androidx.wear.tiles.TileProvider sDefaultImpl> = r0;

        return 1;

     label2:
        return 0;
    }

    public static androidx.wear.tiles.TileProvider getDefaultImpl()
    {
        androidx.wear.tiles.TileProvider $r0;

        $r0 = <androidx.wear.tiles.TileProvider$Stub$Proxy: androidx.wear.tiles.TileProvider sDefaultImpl>;

        return $r0;
    }

androidx.wear.tiles.TileProvider$_Parcel
    public void <init>()
    {
        androidx.wear.tiles.TileProvider$_Parcel r0;

        r0 := @this: androidx.wear.tiles.TileProvider$_Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object readTypedObject(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    private static void writeTypedObject(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    static java.lang.Object access$000(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <androidx.wear.tiles.TileProvider$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)>(r0, r1);

        return $r2;
    }

    static void access$100(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        staticinvoke <androidx.wear.tiles.TileProvider$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)>(r0, r1, i0);

        return;
    }

