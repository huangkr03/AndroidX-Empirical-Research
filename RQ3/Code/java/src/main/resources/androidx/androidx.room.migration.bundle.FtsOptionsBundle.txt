androidx.room.migration.bundle.FtsOptionsBundle
<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String tokenizer>
<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List tokenizerArgs>
<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String contentTable>
<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String languageIdColumnName>
<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String matchInfo>
<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List notIndexedColumns>
<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List prefixSizes>
<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String preferredOrder>
    public void <init>(java.lang.String, java.util.List, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.lang.String)
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.lang.String r1, r3, r4, r5, r8;
        java.util.List r2, r6, r7;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.util.List;

        r7 := @parameter6: java.util.List;

        r8 := @parameter7: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tokenizer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tokenizerArgs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "contentTable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "languageIdColumnName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "matchInfo");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "notIndexedColumns");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "prefixSizes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "preferredOrder");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String tokenizer> = r1;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List tokenizerArgs> = r2;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String contentTable> = r3;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String languageIdColumnName> = r4;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String matchInfo> = r5;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List notIndexedColumns> = r6;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List prefixSizes> = r7;

        r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String preferredOrder> = r8;

        return;
    }

    public java.util.List getTokenizerArgs()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.util.List $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List tokenizerArgs>;

        return $r1;
    }

    public java.lang.String getContentTable()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String contentTable>;

        return $r1;
    }

    public java.lang.String getLanguageIdColumnName()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String languageIdColumnName>;

        return $r1;
    }

    public java.lang.String getMatchInfo()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String matchInfo>;

        return $r1;
    }

    public java.util.List getNotIndexedColumns()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.util.List $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List notIndexedColumns>;

        return $r1;
    }

    public java.util.List getPrefixSizes()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.util.List $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List prefixSizes>;

        return $r1;
    }

    public java.lang.String getPreferredOrder()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String preferredOrder>;

        return $r1;
    }

    private void <init>()
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0;
        java.util.List $r1, $r2, $r3;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String)>("", $r1, "", "", "", $r2, $r3, "");

        return;
    }

    public boolean isSchemaEqual(androidx.room.migration.bundle.FtsOptionsBundle)
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0, r1;
        java.lang.String $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r4, $r5, $r12, $r13, $r14, $r15;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        r1 := @parameter0: androidx.room.migration.bundle.FtsOptionsBundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $r3 = r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String tokenizer>;

        $r2 = r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String tokenizer>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getTokenizerArgs()>();

        $r5 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getTokenizerArgs()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getContentTable()>();

        $r7 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getContentTable()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 == 0 goto label1;

        $r8 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getLanguageIdColumnName()>();

        $r9 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getLanguageIdColumnName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z3 == 0 goto label1;

        $r10 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getMatchInfo()>();

        $r11 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getMatchInfo()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z4 == 0 goto label1;

        $r12 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getNotIndexedColumns()>();

        $r13 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getNotIndexedColumns()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, $r13);

        if $z5 == 0 goto label1;

        $r14 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getPrefixSizes()>();

        $r15 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.util.List getPrefixSizes()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z6 == 0 goto label1;

        $r16 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getPreferredOrder()>();

        $r17 = virtualinvoke r1.<androidx.room.migration.bundle.FtsOptionsBundle: java.lang.String getPreferredOrder()>();

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, $r17);

        if $z7 == 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        return $z8;
    }

    public volatile boolean isSchemaEqual(java.lang.Object)
    {
        androidx.room.migration.bundle.FtsOptionsBundle r0, $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.room.migration.bundle.FtsOptionsBundle;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.migration.bundle.FtsOptionsBundle) r1;

        $z0 = virtualinvoke r0.<androidx.room.migration.bundle.FtsOptionsBundle: boolean isSchemaEqual(androidx.room.migration.bundle.FtsOptionsBundle)>($r2);

        return $z0;
    }

