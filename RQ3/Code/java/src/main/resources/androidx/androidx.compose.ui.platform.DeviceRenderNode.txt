androidx.compose.ui.platform.DeviceRenderNode
<androidx.compose.ui.platform.DeviceRenderNode: long getUniqueId()>
<androidx.compose.ui.platform.DeviceRenderNode: int getLeft()>
<androidx.compose.ui.platform.DeviceRenderNode: int getTop()>
<androidx.compose.ui.platform.DeviceRenderNode: int getRight()>
<androidx.compose.ui.platform.DeviceRenderNode: int getBottom()>
<androidx.compose.ui.platform.DeviceRenderNode: int getWidth()>
<androidx.compose.ui.platform.DeviceRenderNode: int getHeight()>
<androidx.compose.ui.platform.DeviceRenderNode: float getScaleX()>
<androidx.compose.ui.platform.DeviceRenderNode: void setScaleX(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getScaleY()>
<androidx.compose.ui.platform.DeviceRenderNode: void setScaleY(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getTranslationX()>
<androidx.compose.ui.platform.DeviceRenderNode: void setTranslationX(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getTranslationY()>
<androidx.compose.ui.platform.DeviceRenderNode: void setTranslationY(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getElevation()>
<androidx.compose.ui.platform.DeviceRenderNode: void setElevation(float)>
<androidx.compose.ui.platform.DeviceRenderNode: int getAmbientShadowColor()>
<androidx.compose.ui.platform.DeviceRenderNode: void setAmbientShadowColor(int)>
<androidx.compose.ui.platform.DeviceRenderNode: int getSpotShadowColor()>
<androidx.compose.ui.platform.DeviceRenderNode: void setSpotShadowColor(int)>
<androidx.compose.ui.platform.DeviceRenderNode: float getRotationZ()>
<androidx.compose.ui.platform.DeviceRenderNode: void setRotationZ(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getRotationX()>
<androidx.compose.ui.platform.DeviceRenderNode: void setRotationX(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getRotationY()>
<androidx.compose.ui.platform.DeviceRenderNode: void setRotationY(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getCameraDistance()>
<androidx.compose.ui.platform.DeviceRenderNode: void setCameraDistance(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getPivotX()>
<androidx.compose.ui.platform.DeviceRenderNode: void setPivotX(float)>
<androidx.compose.ui.platform.DeviceRenderNode: float getPivotY()>
<androidx.compose.ui.platform.DeviceRenderNode: void setPivotY(float)>
<androidx.compose.ui.platform.DeviceRenderNode: boolean getClipToOutline()>
<androidx.compose.ui.platform.DeviceRenderNode: void setClipToOutline(boolean)>
<androidx.compose.ui.platform.DeviceRenderNode: boolean getClipToBounds()>
<androidx.compose.ui.platform.DeviceRenderNode: void setClipToBounds(boolean)>
<androidx.compose.ui.platform.DeviceRenderNode: float getAlpha()>
<androidx.compose.ui.platform.DeviceRenderNode: void setAlpha(float)>
<androidx.compose.ui.platform.DeviceRenderNode: androidx.compose.ui.graphics.RenderEffect getRenderEffect()>
<androidx.compose.ui.platform.DeviceRenderNode: void setRenderEffect(androidx.compose.ui.graphics.RenderEffect)>
<androidx.compose.ui.platform.DeviceRenderNode: boolean getHasDisplayList()>
<androidx.compose.ui.platform.DeviceRenderNode: void setOutline(android.graphics.Outline)>
<androidx.compose.ui.platform.DeviceRenderNode: boolean setPosition(int,int,int,int)>
<androidx.compose.ui.platform.DeviceRenderNode: void offsetLeftAndRight(int)>
<androidx.compose.ui.platform.DeviceRenderNode: void offsetTopAndBottom(int)>
<androidx.compose.ui.platform.DeviceRenderNode: void record(androidx.compose.ui.graphics.CanvasHolder,androidx.compose.ui.graphics.Path,kotlin.jvm.functions.Function1)>
<androidx.compose.ui.platform.DeviceRenderNode: void getMatrix(android.graphics.Matrix)>
<androidx.compose.ui.platform.DeviceRenderNode: void getInverseMatrix(android.graphics.Matrix)>
<androidx.compose.ui.platform.DeviceRenderNode: void drawInto(android.graphics.Canvas)>
<androidx.compose.ui.platform.DeviceRenderNode: boolean setHasOverlappingRendering(boolean)>
<androidx.compose.ui.platform.DeviceRenderNode: androidx.compose.ui.platform.DeviceRenderNodeData dumpRenderNodeData()>
<androidx.compose.ui.platform.DeviceRenderNode: void discardDisplayList()>
