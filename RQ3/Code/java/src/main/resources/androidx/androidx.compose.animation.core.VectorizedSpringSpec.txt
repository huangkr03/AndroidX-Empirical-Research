androidx.compose.animation.core.VectorizedSpringSpec
<androidx.compose.animation.core.VectorizedSpringSpec: float dampingRatio>
<androidx.compose.animation.core.VectorizedSpringSpec: float stiffness>
<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>
<androidx.compose.animation.core.VectorizedSpringSpec: int $stable>
    private void <init>(float, float, androidx.compose.animation.core.Animations)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        float f0, f1;
        androidx.compose.animation.core.Animations r1;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r2;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: androidx.compose.animation.core.Animations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.VectorizedSpringSpec: float dampingRatio> = f0;

        r0.<androidx.compose.animation.core.VectorizedSpringSpec: float stiffness> = f1;

        $r2 = new androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        specialinvoke $r2.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: void <init>(androidx.compose.animation.core.Animations)>(r1);

        r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0> = $r2;

        return;
    }

    public final float getDampingRatio()
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        float $f0;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        $f0 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: float dampingRatio>;

        return $f0;
    }

    public final float getStiffness()
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        float $f0;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        $f0 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: float stiffness>;

        return $f0;
    }

    public boolean isInfinite()
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r1;
        boolean $z0;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        $r1 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: boolean isInfinite()>();

        return $z0;
    }

    public long getDurationNanos(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>;

        $l0 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3);

        return $l0;
    }

    public androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3);

        return $r5;
    }

    public androidx.compose.animation.core.AnimationVector getValueFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedSpringSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec $$delegate_0>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public void <init>(float, float, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        float f0, f1;
        androidx.compose.animation.core.AnimationVector r1;
        androidx.compose.animation.core.Animations $r2;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: androidx.compose.animation.core.AnimationVector;

        $r2 = staticinvoke <androidx.compose.animation.core.VectorizedAnimationSpecKt: androidx.compose.animation.core.Animations access$createSpringAnimations(androidx.compose.animation.core.AnimationVector,float,float)>(r1, f0, f1);

        specialinvoke r0.<androidx.compose.animation.core.VectorizedSpringSpec: void <init>(float,float,androidx.compose.animation.core.Animations)>(f0, f1, $r2);

        return;
    }

    public void <init>(float, float, androidx.compose.animation.core.AnimationVector, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.VectorizedSpringSpec r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        float f0, f1;
        androidx.compose.animation.core.AnimationVector r2;

        r0 := @this: androidx.compose.animation.core.VectorizedSpringSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        f1 = 1500.0F;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r2 = null;

     label3:
        specialinvoke r0.<androidx.compose.animation.core.VectorizedSpringSpec: void <init>(float,float,androidx.compose.animation.core.AnimationVector)>(f0, f1, r2);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.core.VectorizedSpringSpec: int $stable> = 8;

        return;
    }

