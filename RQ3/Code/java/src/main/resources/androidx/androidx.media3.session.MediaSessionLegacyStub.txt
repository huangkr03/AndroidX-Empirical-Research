androidx.media3.session.MediaSessionLegacyStub
<androidx.media3.session.MediaSessionLegacyStub: java.lang.String TAG>
<androidx.media3.session.MediaSessionLegacyStub: java.lang.String DEFAULT_MEDIA_SESSION_TAG_PREFIX>
<androidx.media3.session.MediaSessionLegacyStub: java.lang.String DEFAULT_MEDIA_SESSION_TAG_DELIM>
<androidx.media3.session.MediaSessionLegacyStub: int DEFAULT_CONNECTION_TIMEOUT_MS>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media.MediaSessionManager sessionManager>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb controllerLegacyCbForBroadcast>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler connectionTimeoutHandler>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>
<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>
<androidx.media3.session.MediaSessionLegacyStub: java.lang.String appPackageName>
<androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat volumeProviderCompat>
<androidx.media3.session.MediaSessionLegacyStub: long connectionTimeoutMs>
<androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback pendingBitmapLoadCallback>
<androidx.media3.session.MediaSessionLegacyStub: int sessionFlags>
    public void <init>(androidx.media3.session.MediaSessionImpl, android.content.ComponentName, android.app.PendingIntent, android.os.Handler)
    {
        androidx.media3.session.MediaSessionLegacyStub r0, r8;
        androidx.media3.session.MediaSessionImpl r1, $r9;
        android.content.ComponentName r2;
        android.app.PendingIntent r3, r7;
        android.os.Handler r4, $r14, $r17;
        android.content.Context r5;
        java.lang.String r6, $r10, $r21;
        androidx.media.MediaSessionManager $r11;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast $r12;
        androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler $r13;
        android.os.Looper $r15, $r18;
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler $r16;
        androidx.media3.session.ConnectedControllersManager $r19;
        java.lang.String[] $r20;
        android.support.v4.media.session.MediaSessionCompat $r22, $r25, $r26;
        androidx.media3.session.SessionToken $r23;
        android.os.Bundle $r24;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: android.os.Handler;

        specialinvoke r0.<android.support.v4.media.session.MediaSessionCompat$Callback: void <init>()>();

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl> = r1;

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r5 = virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl: android.content.Context getContext()>();

        $r10 = virtualinvoke r5.<android.content.Context: java.lang.String getPackageName()>();

        r0.<androidx.media3.session.MediaSessionLegacyStub: java.lang.String appPackageName> = $r10;

        $r11 = staticinvoke <androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)>(r5);

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media.MediaSessionManager sessionManager> = $r11;

        $r12 = new androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        specialinvoke $r12.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void <init>(androidx.media3.session.MediaSessionLegacyStub)>(r0);

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb controllerLegacyCbForBroadcast> = $r12;

        $r13 = new androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler;

        $r14 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r15 = virtualinvoke $r14.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r13.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: void <init>(androidx.media3.session.MediaSessionLegacyStub,android.os.Looper)>(r0, $r15);

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler connectionTimeoutHandler> = $r13;

        $r16 = new androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        $r17 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r18 = virtualinvoke $r17.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r16.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: void <init>(androidx.media3.session.MediaSessionLegacyStub,android.os.Looper)>(r0, $r18);

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler> = $r16;

        $r19 = new androidx.media3.session.ConnectedControllersManager;

        specialinvoke $r19.<androidx.media3.session.ConnectedControllersManager: void <init>(androidx.media3.session.MediaSessionImpl)>(r1);

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager> = $r19;

        r0.<androidx.media3.session.MediaSessionLegacyStub: long connectionTimeoutMs> = 300000L;

        $r20 = newarray (java.lang.String)[2];

        $r20[0] = "androidx.media3.session.id";

        $r21 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: java.lang.String getId()>();

        $r20[1] = $r21;

        r6 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(".", $r20);

        $r22 = new android.support.v4.media.session.MediaSessionCompat;

        $r23 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken getToken()>();

        $r24 = virtualinvoke $r23.<androidx.media3.session.SessionToken: android.os.Bundle getExtras()>();

        specialinvoke $r22.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle)>(r5, r6, r2, r3, $r24);

        r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat> = $r22;

        r7 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent getSessionActivity()>();

        if r7 == null goto label1;

        $r26 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        virtualinvoke $r26.<android.support.v4.media.session.MediaSessionCompat: void setSessionActivity(android.app.PendingIntent)>(r7);

     label1:
        r8 = r0;

        $r25 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        virtualinvoke $r25.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>(r8, r4);

        return;
    }

    public void start()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.session.MediaSessionCompat $r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat: void setActive(boolean)>(1);

        return;
    }

    public void release()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.session.MediaSessionCompat $r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        virtualinvoke $r1.<android.support.v4.media.session.MediaSessionCompat: void release()>();

        return;
    }

    public android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.session.MediaSessionCompat $r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        return $r1;
    }

    public void onCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2, $r7, $r11;
        android.os.ResultReceiver r3;
        androidx.media3.session.SessionCommand r4, $r6;
        boolean $z0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r8;
        androidx.media3.session.MediaSessionImpl $r9;
        androidx.media3.session.SessionToken $r10;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>(r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>("androidx.media3.session.SESSION_COMMAND_REQUEST_SESSION3_TOKEN", r1);

        if $z0 == 0 goto label1;

        if r3 == null goto label1;

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r10 = virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken getToken()>();

        $r11 = virtualinvoke $r10.<androidx.media3.session.SessionToken: android.os.Bundle toBundle()>();

        virtualinvoke r3.<android.os.ResultReceiver: void send(int,android.os.Bundle)>(0, $r11);

        return;

     label1:
        $r6 = new androidx.media3.session.SessionCommand;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r6.<androidx.media3.session.SessionCommand: void <init>(java.lang.String,android.os.Bundle)>(r1, $r7);

        r4 = $r6;

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,androidx.media3.session.SessionCommand,android.os.Bundle,android.os.ResultReceiver)>(r0, r4, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onCommand$0(androidx.media3.session.SessionCommand,android.os.Bundle,android.os.ResultReceiver,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.SessionCommand,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>(r4, $r8);

        return;
    }

    public void onCustomAction(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2, $r5;
        androidx.media3.session.SessionCommand r3, $r4;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r6;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r4 = new androidx.media3.session.SessionCommand;

        $r5 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r4.<androidx.media3.session.SessionCommand: void <init>(java.lang.String,android.os.Bundle)>(r1, $r5);

        r3 = $r4;

        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,androidx.media3.session.SessionCommand,android.os.Bundle)>(r0, r3, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onCustomAction$1(androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.SessionCommand,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>(r3, $r6);

        return;
    }

    public boolean onMediaButtonEvent(android.content.Intent)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.content.Intent r1;
        android.view.KeyEvent r2;
        androidx.media.MediaSessionManager$RemoteUserInfo r3;
        int i0, $i1, $i2;
        android.os.Parcelable $r4;
        android.support.v4.media.session.MediaSessionCompat $r5;
        java.lang.String $r6, $r7;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler $r8, $r9, $r10, $r11;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.content.Intent;

        $r4 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.KEY_EVENT");

        r2 = (android.view.KeyEvent) $r4;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();

        if $i1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        r3 = virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        i0 = virtualinvoke r2.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch(i0)
        {
            case 79: goto label3;
            case 85: goto label3;
            default: goto label7;
        };

     label3:
        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: java.lang.String appPackageName>;

        $r7 = virtualinvoke r3.<androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        $i2 = virtualinvoke r2.<android.view.KeyEvent: int getRepeatCount()>();

        if $i2 != 0 goto label5;

        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>;

        $z1 = virtualinvoke $r8.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: boolean hasPendingMediaPlayPauseKey()>();

        if $z1 == 0 goto label4;

        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>;

        virtualinvoke $r10.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: void clearPendingMediaPlayPauseKey()>();

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void onSkipToNext()>();

        goto label6;

     label4:
        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>;

        virtualinvoke $r9.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: void addPendingMediaPlayPauseKey(androidx.media.MediaSessionManager$RemoteUserInfo)>(r3);

        goto label6;

     label5:
        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaPlayPauseOnHandler(androidx.media.MediaSessionManager$RemoteUserInfo)>(r3);

     label6:
        return 1;

     label7:
        $r11 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>;

        $z2 = virtualinvoke $r11.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: boolean hasPendingMediaPlayPauseKey()>();

        if $z2 == 0 goto label8;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaPlayPauseOnHandler(androidx.media.MediaSessionManager$RemoteUserInfo)>(r3);

     label8:
        return 0;
    }

    private void maybeUpdateFlags(androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.PlayerWrapper r1;
        byte b0, $b3;
        boolean $z0;
        int $i1, $i2;
        android.support.v4.media.session.MediaSessionCompat $r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.PlayerWrapper;

        $z0 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(20);

        if $z0 == 0 goto label1;

        $b3 = 4;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        b0 = $b3;

        $i1 = r0.<androidx.media3.session.MediaSessionLegacyStub: int sessionFlags>;

        if $i1 == b0 goto label3;

        r0.<androidx.media3.session.MediaSessionLegacyStub: int sessionFlags> = b0;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $i2 = r0.<androidx.media3.session.MediaSessionLegacyStub: int sessionFlags>;

        virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: void setFlags(int)>($i2);

     label3:
        return;
    }

    private void handleMediaPlayPauseOnHandler(androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler $r2;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler mediaPlayPauseKeyHandler>;

        virtualinvoke $r2.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: void clearPendingMediaPlayPauseKey()>();

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$handleMediaPlayPauseOnHandler$2(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(1, $r3, r1);

        return;
    }

    public void onPrepare()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onPrepare$3(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(2, $r1, $r3);

        return;
    }

    public void onPrepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(r1, null, null, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 0);

        return;
    }

    public void onPrepareFromSearch(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(null, null, r1, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 0);

        return;
    }

    public void onPrepareFromUri(android.net.Uri, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(null, r1, null, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 0);

        return;
    }

    public void onPlay()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onPlay$4(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(1, $r1, $r3);

        return;
    }

    public void onPlayFromMediaId(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(r1, null, null, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 1);

        return;
    }

    public void onPlayFromSearch(java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        java.lang.String r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(null, null, r1, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 1);

        return;
    }

    public void onPlayFromUri(android.net.Uri, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle)>(null, r1, null, r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaRequest(androidx.media3.common.MediaItem,boolean)>($r3, 1);

        return;
    }

    public void onPause()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onPause$5(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(1, $r1, $r3);

        return;
    }

    public void onStop()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onStop$6(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(3, $r1, $r3);

        return;
    }

    public void onSeekTo(long)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        long l0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        l0 := @parameter0: long;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,long)>(r0, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSeekTo$7(long,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(5, $r1, $r3);

        return;
    }

    public void onSkipToNext()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionImpl $r1;
        androidx.media3.session.PlayerWrapper $r2;
        boolean $z0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4, $r7;
        androidx.media.MediaSessionManager$RemoteUserInfo $r5, $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $z0 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(9);

        if $z0 == 0 goto label1;

        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSkipToNext$8(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r8 = virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(9, $r6, $r8);

        goto label2;

     label1:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSkipToNext$9(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(8, $r3, $r5);

     label2:
        return;
    }

    public void onSkipToPrevious()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionImpl $r1;
        androidx.media3.session.PlayerWrapper $r2;
        boolean $z0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4, $r7;
        androidx.media.MediaSessionManager$RemoteUserInfo $r5, $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $z0 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(7);

        if $z0 == 0 goto label1;

        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSkipToPrevious$10(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r8 = virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(7, $r6, $r8);

        goto label2;

     label1:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSkipToPrevious$11(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r5 = virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(6, $r3, $r5);

     label2:
        return;
    }

    public void onSetPlaybackSpeed(float)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        float f0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        f0 := @parameter0: float;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,float)>(r0, f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSetPlaybackSpeed$12(float,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(13, $r1, $r3);

        return;
    }

    public void onSkipToQueueItem(long)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        long l0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        l0 := @parameter0: long;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,long)>(r0, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSkipToQueueItem$13(long,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(10, $r1, $r3);

        return;
    }

    public void onFastForward()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onFastForward$14(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(12, $r1, $r3);

        return;
    }

    public void onRewind()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onRewind$15(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(11, $r1, $r3);

        return;
    }

    public void onSetRating(android.support.v4.media.RatingCompat)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.RatingCompat r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.RatingCompat;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle)>(r1, null);

        return;
    }

    public void onSetRating(android.support.v4.media.RatingCompat, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.RatingCompat r1;
        android.os.Bundle r2;
        androidx.media3.common.Rating r3;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.RatingCompat;

        r2 := @parameter1: android.os.Bundle;

        r3 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Rating convertToRating(android.support.v4.media.RatingCompat)>(r1);

        if r3 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring invalid RatingCompat ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r8);

        return;

     label1:
        $r4 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,androidx.media3.common.Rating)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSetRating$16(androidx.media3.common.Rating,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithSessionCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>(40010, $r4);

        return;
    }

    public void onSetCaptioningEnabled(boolean)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        z0 := @parameter0: boolean;

        return;
    }

    public void onSetRepeatMode(int)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSetRepeatMode$17(int,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(15, $r1, $r3);

        return;
    }

    public void onSetShuffleMode(int)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onSetShuffleMode$18(int,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(14, $r1, $r3);

        return;
    }

    public void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleOnAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>(r1, -1);

        return;
    }

    public void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat, int)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        int i0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleOnAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int)>(r1, i0);

        return;
    }

    public void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media.MediaSessionManager$RemoteUserInfo $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,android.support.v4.media.MediaDescriptionCompat)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onRemoveQueueItem$19(android.support.v4.media.MediaDescriptionCompat,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(20, $r2, $r4);

        return;
    }

    public void onRemoveQueueItemAt(int)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$onRemoveQueueItemAt$20(int,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(20, $r1, $r3);

        return;
    }

    public androidx.media3.session.MediaSession$ControllerCb getControllerLegacyCbForBroadcast()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerCb $r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb controllerLegacyCbForBroadcast>;

        return $r1;
    }

    public androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.ConnectedControllersManager $r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        return $r1;
    }

    private void dispatchSessionTaskWithPlayerCommand(int, androidx.media3.session.MediaSessionLegacyStub$SessionTask, androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r1;
        androidx.media.MediaSessionManager$RemoteUserInfo r2;
        androidx.media3.session.MediaSessionImpl $r3, $r4;
        boolean $z0;
        android.os.Handler $r5;
        java.lang.Runnable $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        r2 := @parameter2: androidx.media.MediaSessionManager$RemoteUserInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $z0 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteUserInfo is null, ignoring command=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r10);

        return;

     label2:
        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionLegacyStub,int,androidx.media.MediaSessionManager$RemoteUserInfo,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>(r0, i0, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$dispatchSessionTaskWithPlayerCommand$21(int,androidx.media.MediaSessionManager$RemoteUserInfo,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r5, $r6);

        return;
    }

    private void dispatchSessionTaskWithSessionCommand(int, androidx.media3.session.MediaSessionLegacyStub$SessionTask)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithSessionCommandInternal(androidx.media3.session.SessionCommand,int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(null, i0, r1, $r3);

        return;
    }

    private void dispatchSessionTaskWithSessionCommand(androidx.media3.session.SessionCommand, androidx.media3.session.MediaSessionLegacyStub$SessionTask)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.SessionCommand r1;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r2;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media.MediaSessionManager$RemoteUserInfo $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithSessionCommandInternal(androidx.media3.session.SessionCommand,int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(r1, 0, r2, $r4);

        return;
    }

    private void dispatchSessionTaskWithSessionCommandInternal(androidx.media3.session.SessionCommand, int, androidx.media3.session.MediaSessionLegacyStub$SessionTask, androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.SessionCommand r1;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r2;
        androidx.media.MediaSessionManager$RemoteUserInfo r3;
        androidx.media3.session.MediaSessionImpl $r4;
        android.os.Handler $r5;
        java.lang.Runnable $r6;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r11;
        java.lang.Object $r12;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        r3 := @parameter3: androidx.media.MediaSessionManager$RemoteUserInfo;

        if r3 != null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteUserInfo is null, ignoring command=");

        if r1 != null goto label1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        goto label2;

     label1:
        $r12 = r1;

     label2:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r11);

        return;

     label3:
        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionLegacyStub,androidx.media3.session.SessionCommand,int,androidx.media.MediaSessionManager$RemoteUserInfo,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>(r0, r1, i0, r3, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$dispatchSessionTaskWithSessionCommandInternal$22(androidx.media3.session.SessionCommand,int,androidx.media.MediaSessionManager$RemoteUserInfo,androidx.media3.session.MediaSessionLegacyStub$SessionTask)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r5, $r6);

        return;
    }

    private androidx.media3.session.MediaSession$ControllerInfo tryGetController(androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1, $r13;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb r2, $r7;
        androidx.media3.session.MediaSession$ConnectionResult r3;
        java.lang.Throwable r4, $r16;
        androidx.media3.session.ConnectedControllersManager $r5, $r12;
        long $l0;
        androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler $r6;
        androidx.media3.session.MediaSession$ControllerInfo $r8, r17;
        androidx.media.MediaSessionManager $r9;
        boolean $z0, $z1;
        android.os.Bundle $r10;
        androidx.media3.session.MediaSessionImpl $r11;
        androidx.media3.common.Player$Commands $r14;
        androidx.media3.session.SessionCommands $r15;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        r17 = virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>(r1);

        if r17 != null goto label6;

        $r7 = new androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb;

        specialinvoke $r7.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo)>(r1);

        r2 = $r7;

        $r8 = new androidx.media3.session.MediaSession$ControllerInfo;

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media.MediaSessionManager sessionManager>;

        $z0 = virtualinvoke $r9.<androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)>(r1);

        $r10 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r8.<androidx.media3.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,int,boolean,androidx.media3.session.MediaSession$ControllerCb,android.os.Bundle)>(r1, 0, 0, $z0, r2, $r10);

        r17 = $r8;

        $r11 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r3 = virtualinvoke $r11.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$ConnectionResult onConnectOnHandler(androidx.media3.session.MediaSession$ControllerInfo)>(r17);

        $z1 = r3.<androidx.media3.session.MediaSession$ConnectionResult: boolean isAccepted>;

        if $z1 != 0 goto label5;

     label1:
        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void onDisconnected(int)>(0);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r4 = $r16;

     label4:
        return null;

     label5:
        $r12 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r13 = virtualinvoke r17.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo getRemoteUserInfo()>();

        $r15 = r3.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r14 = r3.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.common.Player$Commands availablePlayerCommands>;

        virtualinvoke $r12.<androidx.media3.session.ConnectedControllersManager: void addController(java.lang.Object,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>($r13, r17, $r15, $r14);

     label6:
        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler connectionTimeoutHandler>;

        $l0 = r0.<androidx.media3.session.MediaSessionLegacyStub: long connectionTimeoutMs>;

        virtualinvoke $r6.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: void disconnectControllerAfterTimeout(androidx.media3.session.MediaSession$ControllerInfo,long)>(r17, $l0);

        return r17;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setLegacyControllerDisconnectTimeoutMs(long)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        long l0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        l0 := @parameter0: long;

        r0.<androidx.media3.session.MediaSessionLegacyStub: long connectionTimeoutMs> = l0;

        return;
    }

    private void handleMediaRequest(androidx.media3.common.MediaItem, boolean)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.common.MediaItem r1;
        boolean z0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media.MediaSessionManager$RemoteUserInfo $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,androidx.media3.common.MediaItem,boolean)>(r0, r1, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$handleMediaRequest$23(androidx.media3.common.MediaItem,boolean,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(31, $r2, $r4);

        return;
    }

    private void handleOnAddQueueItem(android.support.v4.media.MediaDescriptionCompat, int)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media.MediaSessionManager$RemoteUserInfo $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionLegacyStub$SessionTask (androidx.media3.session.MediaSessionLegacyStub,android.support.v4.media.MediaDescriptionCompat,int)>(r0, r1, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub: void lambda$handleOnAddQueueItem$24(android.support.v4.media.MediaDescriptionCompat,int,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $r4 = virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void dispatchSessionTaskWithPlayerCommand(int,androidx.media3.session.MediaSessionLegacyStub$SessionTask,androidx.media.MediaSessionManager$RemoteUserInfo)>(20, $r2, $r4);

        return;
    }

    private static void sendCustomCommandResultWhenReady(android.os.ResultReceiver, com.google.common.util.concurrent.ListenableFuture)
    {
        android.os.ResultReceiver r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        java.lang.Runnable $r2;
        java.util.concurrent.Executor $r3;

        r0 := @parameter0: android.os.ResultReceiver;

        r1 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.ListenableFuture,android.os.ResultReceiver)>(r1, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionLegacyStub: void lambda$sendCustomCommandResultWhenReady$25(com.google.common.util.concurrent.ListenableFuture,android.os.ResultReceiver)>, methodtype: void __METHODTYPE__());

        $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r2, $r3);

        return;
    }

    private static void ignoreFuture(java.util.concurrent.Future)
    {
        java.util.concurrent.Future r0;

        r0 := @parameter0: java.util.concurrent.Future;

        return;
    }

    private static void setMetadata(android.support.v4.media.session.MediaSessionCompat, android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.MediaMetadataCompat r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: android.support.v4.media.MediaMetadataCompat;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setMetadata(android.support.v4.media.MediaMetadataCompat)>(r1);

        return;
    }

    private static void setQueue(android.support.v4.media.session.MediaSessionCompat, java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.util.List r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: java.util.List;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setQueue(java.util.List)>(r1);

        return;
    }

    private static void setQueueTitle(android.support.v4.media.session.MediaSessionCompat, java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: java.lang.CharSequence;

        virtualinvoke r0.<android.support.v4.media.session.MediaSessionCompat: void setQueueTitle(java.lang.CharSequence)>(r1);

        return;
    }

    private static androidx.media3.common.MediaItem createMediaItemForMediaRequest(java.lang.String, android.net.Uri, java.lang.String, android.os.Bundle)
    {
        java.lang.String r0, r2, $r13;
        android.net.Uri r1;
        android.os.Bundle r3;
        androidx.media3.common.MediaItem$Builder $r4, $r5, $r11;
        androidx.media3.common.MediaItem$RequestMetadata$Builder $r6, $r7, $r8, $r9;
        androidx.media3.common.MediaItem$RequestMetadata $r10;
        androidx.media3.common.MediaItem $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        $r4 = new androidx.media3.common.MediaItem$Builder;

        specialinvoke $r4.<androidx.media3.common.MediaItem$Builder: void <init>()>();

        if r0 != null goto label1;

        $r13 = "";

        goto label2;

     label1:
        $r13 = r0;

     label2:
        $r5 = virtualinvoke $r4.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMediaId(java.lang.String)>($r13);

        $r6 = new androidx.media3.common.MediaItem$RequestMetadata$Builder;

        specialinvoke $r6.<androidx.media3.common.MediaItem$RequestMetadata$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<androidx.media3.common.MediaItem$RequestMetadata$Builder: androidx.media3.common.MediaItem$RequestMetadata$Builder setMediaUri(android.net.Uri)>(r1);

        $r8 = virtualinvoke $r7.<androidx.media3.common.MediaItem$RequestMetadata$Builder: androidx.media3.common.MediaItem$RequestMetadata$Builder setSearchQuery(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<androidx.media3.common.MediaItem$RequestMetadata$Builder: androidx.media3.common.MediaItem$RequestMetadata$Builder setExtras(android.os.Bundle)>(r3);

        $r10 = virtualinvoke $r9.<androidx.media3.common.MediaItem$RequestMetadata$Builder: androidx.media3.common.MediaItem$RequestMetadata build()>();

        $r11 = virtualinvoke $r5.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setRequestMetadata(androidx.media3.common.MediaItem$RequestMetadata)>($r10);

        $r12 = virtualinvoke $r11.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        return $r12;
    }

    private static java.lang.String getBitmapLoadErrorMessage(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load bitmap: ");

        $r3 = virtualinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static void lambda$sendCustomCommandResultWhenReady$25(com.google.common.util.concurrent.ListenableFuture, android.os.ResultReceiver)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        android.os.ResultReceiver r1;
        java.lang.Object $r2, $r4;
        androidx.media3.session.SessionResult $r3, $r6, $r8, r9;
        java.lang.Throwable $r5, $r7, r10, r11;
        int $i0;
        android.os.Bundle $r12;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: android.os.ResultReceiver;

     label1:
        $r2 = interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r3 = (androidx.media3.session.SessionResult) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "SessionResult must not be null");

        r9 = (androidx.media3.session.SessionResult) $r4;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new androidx.media3.session.SessionResult;

        specialinvoke $r6.<androidx.media3.session.SessionResult: void <init>(int)>(1);

        r9 = $r6;

        goto label5;

     label4:
        $r7 := @caughtexception;

        r11 = $r7;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(-1);

        r9 = $r8;

     label5:
        $i0 = r9.<androidx.media3.session.SessionResult: int resultCode>;

        $r12 = r9.<androidx.media3.session.SessionResult: android.os.Bundle extras>;

        virtualinvoke r1.<android.os.ResultReceiver: void send(int,android.os.Bundle)>($i0, $r12);

        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    private void lambda$handleOnAddQueueItem$24(android.support.v4.media.MediaDescriptionCompat, int, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        int i0;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        androidx.media3.common.MediaItem r4;
        com.google.common.util.concurrent.ListenableFuture r5;
        boolean $z0;
        androidx.media3.session.MediaSessionImpl $r6;
        com.google.common.collect.ImmutableList $r7;
        androidx.media3.session.MediaSessionLegacyStub$2 $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        r3 = virtualinvoke r1.<android.support.v4.media.MediaDescriptionCompat: java.lang.String getMediaId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", "onAddQueueItem(): Media ID shouldn\'t be empty");

        return;

     label1:
        r4 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.MediaItem convertToMediaItem(android.support.v4.media.MediaDescriptionCompat)>(r1);

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r7 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r4);

        r5 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r2, $r7);

        $r8 = new androidx.media3.session.MediaSessionLegacyStub$2;

        specialinvoke $r8.<androidx.media3.session.MediaSessionLegacyStub$2: void <init>(androidx.media3.session.MediaSessionLegacyStub,int)>(r0, i0);

        $r9 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r5, $r8, $r9);

        return;
    }

    private void lambda$handleMediaRequest$23(androidx.media3.common.MediaItem, boolean, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.common.MediaItem r1;
        boolean z0;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        androidx.media3.session.MediaSessionImpl $r4;
        com.google.common.collect.ImmutableList $r5;
        androidx.media3.session.MediaSessionLegacyStub$1 $r6;
        java.util.concurrent.Executor $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r5 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r1);

        r3 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>(r2, $r5, -1, -9223372036854775807L);

        $r6 = new androidx.media3.session.MediaSessionLegacyStub$1;

        specialinvoke $r6.<androidx.media3.session.MediaSessionLegacyStub$1: void <init>(androidx.media3.session.MediaSessionLegacyStub,boolean)>(r0, z0);

        $r7 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r3, $r6, $r7);

        return;
    }

    private void lambda$dispatchSessionTaskWithSessionCommandInternal$22(androidx.media3.session.SessionCommand, int, androidx.media.MediaSessionManager$RemoteUserInfo, androidx.media3.session.MediaSessionLegacyStub$SessionTask)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.SessionCommand r1;
        int i0, $i1;
        androidx.media.MediaSessionManager$RemoteUserInfo r2;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r3;
        androidx.media3.session.MediaSession$ControllerInfo r4;
        java.lang.Throwable r5, $r17;
        androidx.media3.session.MediaSessionImpl $r6;
        boolean $z0, $z1, $z2, $z3;
        android.support.v4.media.session.MediaSessionCompat $r7;
        androidx.media3.session.ConnectedControllersManager $r8, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r18, $r19, $r20;
        java.lang.String $r16, $r21;
        java.lang.Object $r22;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media.MediaSessionManager$RemoteUserInfo;

        r3 := @parameter3: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $z0 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $z1 = virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat: boolean isActive()>();

        if $z1 != 0 goto label04;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore incoming session command before initialization. command=");

        if r1 != null goto label02;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        goto label03;

     label02:
        $r22 = r1.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

     label03:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pid=");

        $i1 = virtualinvoke r2.<androidx.media.MediaSessionManager$RemoteUserInfo: int getPid()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r16);

        return;

     label04:
        r4 = specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerInfo tryGetController(androidx.media.MediaSessionManager$RemoteUserInfo)>(r2);

        if r4 != null goto label05;

        return;

     label05:
        if r1 == null goto label06;

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z3 = virtualinvoke $r9.<androidx.media3.session.ConnectedControllersManager: boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand)>(r4, r1);

        if $z3 != 0 goto label07;

        return;

     label06:
        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z2 = virtualinvoke $r8.<androidx.media3.session.ConnectedControllersManager: boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r4, i0);

        if $z2 != 0 goto label07;

        return;

     label07:
        interfaceinvoke r3.<androidx.media3.session.MediaSessionLegacyStub$SessionTask: void run(androidx.media3.session.MediaSession$ControllerInfo)>(r4);

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        r5 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionLegacyStub", $r21, r5);

     label10:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void lambda$dispatchSessionTaskWithPlayerCommand$21(int, androidx.media.MediaSessionManager$RemoteUserInfo, androidx.media3.session.MediaSessionLegacyStub$SessionTask)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0, i1, $i2;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        androidx.media3.session.MediaSessionLegacyStub$SessionTask r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        java.lang.Throwable r4, $r15;
        androidx.media3.session.MediaSessionImpl $r5, $r8;
        boolean $z0, $z1, $z2;
        android.support.v4.media.session.MediaSessionCompat $r6;
        androidx.media3.session.ConnectedControllersManager $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18;
        java.lang.String $r14, $r19;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media.MediaSessionManager$RemoteUserInfo;

        r2 := @parameter2: androidx.media3.session.MediaSessionLegacyStub$SessionTask;

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $z0 = virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        $z1 = virtualinvoke $r6.<android.support.v4.media.session.MediaSessionCompat: boolean isActive()>();

        if $z1 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore incoming player command before initialization. command=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pid=");

        $i2 = virtualinvoke r1.<androidx.media.MediaSessionManager$RemoteUserInfo: int getPid()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r14);

        return;

     label2:
        r3 = specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerInfo tryGetController(androidx.media.MediaSessionManager$RemoteUserInfo)>(r1);

        if r3 != null goto label3;

        return;

     label3:
        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z2 = virtualinvoke $r7.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r3, i0);

        if $z2 != 0 goto label4;

        return;

     label4:
        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        i1 = virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl: int onPlayerCommandRequestOnHandler(androidx.media3.session.MediaSession$ControllerInfo,int)>(r3, i0);

        if i1 == 0 goto label5;

        return;

     label5:
        interfaceinvoke r2.<androidx.media3.session.MediaSessionLegacyStub$SessionTask: void run(androidx.media3.session.MediaSession$ControllerInfo)>(r3);

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        r4 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionLegacyStub", $r19, r4);

     label8:
        return;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    private void lambda$onRemoveQueueItemAt$20(int, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        if i0 >= 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", "onRemoveQueueItem(): index shouldn\'t be negative");

        return;

     label1:
        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void removeMediaItem(int)>(i0);

        return;
    }

    private void lambda$onRemoveQueueItem$19(android.support.v4.media.MediaDescriptionCompat, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.MediaDescriptionCompat r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.lang.String r3, $r11;
        androidx.media3.session.PlayerWrapper r4;
        androidx.media3.common.Timeline r5;
        androidx.media3.common.Timeline$Window r6, $r9, $r10;
        androidx.media3.common.MediaItem r7;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaSessionImpl $r8;
        int $i0, i1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: android.support.v4.media.MediaDescriptionCompat;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 = virtualinvoke r1.<android.support.v4.media.MediaDescriptionCompat: java.lang.String getMediaId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", "onRemoveQueueItem(): Media ID shouldn\'t be null");

        return;

     label1:
        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r4 = virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $z1 = virtualinvoke r4.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(17);

        if $z1 != 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", "Can\'t remove item by id without availabe COMMAND_GET_TIMELINE");

        return;

     label2:
        r5 = virtualinvoke r4.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimeline()>();

        $r9 = new androidx.media3.common.Timeline$Window;

        specialinvoke $r9.<androidx.media3.common.Timeline$Window: void <init>()>();

        r6 = $r9;

        i1 = 0;

     label3:
        $i0 = virtualinvoke r5.<androidx.media3.common.Timeline: int getWindowCount()>();

        if i1 >= $i0 goto label5;

        $r10 = virtualinvoke r5.<androidx.media3.common.Timeline: androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window)>(i1, r6);

        r7 = $r10.<androidx.media3.common.Timeline$Window: androidx.media3.common.MediaItem mediaItem>;

        $r11 = r7.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r11, r3);

        if $z2 == 0 goto label4;

        virtualinvoke r4.<androidx.media3.session.PlayerWrapper: void removeMediaItem(int)>(i1);

        return;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    private void lambda$onSetShuffleMode$18(int, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $z0 = staticinvoke <androidx.media3.session.MediaUtils: boolean convertToShuffleModeEnabled(int)>(i0);

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void setShuffleModeEnabled(boolean)>($z0);

        return;
    }

    private void lambda$onSetRepeatMode$17(int, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        int i0, $i1;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i1 = staticinvoke <androidx.media3.session.MediaUtils: int convertToRepeatMode(int)>(i0);

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void setRepeatMode(int)>($i1);

        return;
    }

    private void lambda$onSetRating$16(androidx.media3.common.Rating, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.common.Rating r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        androidx.media3.common.MediaItem r3;
        androidx.media3.session.MediaSessionImpl $r4, $r7;
        androidx.media3.session.PlayerWrapper $r5;
        java.lang.String $r6;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.common.Rating;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        r3 = virtualinvoke $r5.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()>();

        if r3 != null goto label1;

        return;

     label1:
        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r6 = r3.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetRatingOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.common.Rating)>(r2, $r6, r1);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void ignoreFuture(java.util.concurrent.Future)>($r8);

        return;
    }

    private void lambda$onRewind$15(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekBack()>();

        return;
    }

    private void lambda$onFastForward$14(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekForward()>();

        return;
    }

    private void lambda$onSkipToQueueItem$13(long, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        long l0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.PlayerWrapper r2;
        androidx.media3.session.MediaSessionImpl $r3;
        int $i1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r2 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i1 = (int) l0;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void seekToDefaultPosition(int)>($i1);

        return;
    }

    private void lambda$onSetPlaybackSpeed$12(float, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        float f0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void setPlaybackSpeed(float)>(f0);

        return;
    }

    private void lambda$onSkipToPrevious$11(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekToPreviousMediaItem()>();

        return;
    }

    private void lambda$onSkipToPrevious$10(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekToPrevious()>();

        return;
    }

    private void lambda$onSkipToNext$9(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekToNextMediaItem()>();

        return;
    }

    private void lambda$onSkipToNext$8(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekToNext()>();

        return;
    }

    private void lambda$onSeekTo$7(long, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        long l0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void seekTo(long)>(l0);

        return;
    }

    private void lambda$onStop$6(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void stop()>();

        return;
    }

    private void lambda$onPause$5(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void pause()>();

        return;
    }

    private void lambda$onPlay$4(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.PlayerWrapper r2;
        int i0;
        androidx.media3.session.MediaSessionImpl $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r2 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        i0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getPlaybackState()>();

        if i0 != 1 goto label1;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void prepareIfCommandAvailable()>();

        goto label2;

     label1:
        if i0 != 4 goto label2;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void seekToDefaultPositionIfCommandAvailable()>();

     label2:
        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $z0 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: boolean onPlayRequested()>();

        if $z0 == 0 goto label3;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void play()>();

     label3:
        return;
    }

    private void lambda$onPrepare$3(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void prepare()>();

        return;
    }

    private void lambda$handleMediaPlayPauseOnHandler$2(androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.PlayerWrapper r2;
        int i0;
        androidx.media3.session.MediaSessionImpl $r3;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        r2 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        i0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getPlaybackState()>();

        $z0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: boolean getPlayWhenReady()>();

        if $z0 == 0 goto label1;

        if i0 == 4 goto label1;

        if i0 != 1 goto label4;

     label1:
        if i0 != 1 goto label2;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void prepareIfCommandAvailable()>();

        goto label3;

     label2:
        if i0 != 4 goto label3;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void seekToDefaultPositionIfCommandAvailable()>();

     label3:
        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void play()>();

        goto label5;

     label4:
        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void pause()>();

     label5:
        return;
    }

    private void lambda$onCustomAction$1(androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2, $r8;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        androidx.media3.session.MediaSessionImpl $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        if r2 == null goto label1;

        $r8 = r2;

        goto label2;

     label1:
        $r8 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label2:
        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onCustomCommandOnHandler(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,android.os.Bundle)>(r3, r1, $r8);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void ignoreFuture(java.util.concurrent.Future)>($r5);

        return;
    }

    private void lambda$onCommand$0(androidx.media3.session.SessionCommand, android.os.Bundle, android.os.ResultReceiver, androidx.media3.session.MediaSession$ControllerInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2, $r9;
        android.os.ResultReceiver r3;
        androidx.media3.session.MediaSession$ControllerInfo r4;
        com.google.common.util.concurrent.ListenableFuture r5;
        androidx.media3.session.MediaSessionImpl $r6;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.ResultReceiver;

        r4 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        if r2 != null goto label1;

        $r9 = <android.os.Bundle: android.os.Bundle EMPTY>;

        goto label2;

     label1:
        $r9 = r2;

     label2:
        r5 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onCustomCommandOnHandler(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,android.os.Bundle)>(r4, r1, $r9);

        if r3 == null goto label3;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void sendCustomCommandResultWhenReady(android.os.ResultReceiver,com.google.common.util.concurrent.ListenableFuture)>(r3, r5);

        goto label4;

     label3:
        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void ignoreFuture(java.util.concurrent.Future)>(r5);

     label4:
        return;
    }

    static androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.MediaSessionImpl $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl sessionImpl>;

        return $r1;
    }

    static void access$100(androidx.media3.session.MediaSessionLegacyStub, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void maybeUpdateFlags(androidx.media3.session.PlayerWrapper)>(r1);

        return;
    }

    static android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        android.support.v4.media.session.MediaSessionCompat $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat sessionCompat>;

        return $r1;
    }

    static void access$300(android.support.v4.media.session.MediaSessionCompat, java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.util.List r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: java.util.List;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void setQueue(android.support.v4.media.session.MediaSessionCompat,java.util.List)>(r0, r1);

        return;
    }

    static void access$400(android.support.v4.media.session.MediaSessionCompat, java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: java.lang.CharSequence;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void setQueueTitle(android.support.v4.media.session.MediaSessionCompat,java.lang.CharSequence)>(r0, r1);

        return;
    }

    static androidx.media.VolumeProviderCompat access$502(androidx.media3.session.MediaSessionLegacyStub, androidx.media.VolumeProviderCompat)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media.VolumeProviderCompat r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter1: androidx.media.VolumeProviderCompat;

        r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat volumeProviderCompat> = r1;

        return r1;
    }

    static androidx.media.VolumeProviderCompat access$500(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media.VolumeProviderCompat $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat volumeProviderCompat>;

        return $r1;
    }

    static void access$600(android.support.v4.media.session.MediaSessionCompat, android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat r0;
        android.support.v4.media.MediaMetadataCompat r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat;

        r1 := @parameter1: android.support.v4.media.MediaMetadataCompat;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void setMetadata(android.support.v4.media.session.MediaSessionCompat,android.support.v4.media.MediaMetadataCompat)>(r0, r1);

        return;
    }

    static com.google.common.util.concurrent.FutureCallback access$702(androidx.media3.session.MediaSessionLegacyStub, com.google.common.util.concurrent.FutureCallback)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        com.google.common.util.concurrent.FutureCallback r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter1: com.google.common.util.concurrent.FutureCallback;

        r0.<androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback pendingBitmapLoadCallback> = r1;

        return r1;
    }

    static java.lang.String access$800(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: java.lang.String getBitmapLoadErrorMessage(java.lang.Throwable)>(r0);

        return $r1;
    }

    static com.google.common.util.concurrent.FutureCallback access$700(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        com.google.common.util.concurrent.FutureCallback $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback pendingBitmapLoadCallback>;

        return $r1;
    }

    static androidx.media3.session.ConnectedControllersManager access$900(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media3.session.ConnectedControllersManager $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        return $r1;
    }

    static void access$1000(androidx.media3.session.MediaSessionLegacyStub, androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r1 := @parameter1: androidx.media.MediaSessionManager$RemoteUserInfo;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub: void handleMediaPlayPauseOnHandler(androidx.media.MediaSessionManager$RemoteUserInfo)>(r1);

        return;
    }

androidx.media3.session.MediaSessionLegacyStub$1
<androidx.media3.session.MediaSessionLegacyStub$1: boolean val$play>
<androidx.media3.session.MediaSessionLegacyStub$1: androidx.media3.session.MediaSessionLegacyStub this$0>
    void <init>(androidx.media3.session.MediaSessionLegacyStub, boolean)
    {
        androidx.media3.session.MediaSessionLegacyStub$1 r0;
        androidx.media3.session.MediaSessionLegacyStub r1;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$1;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.session.MediaSessionLegacyStub$1: androidx.media3.session.MediaSessionLegacyStub this$0> = r1;

        r0.<androidx.media3.session.MediaSessionLegacyStub$1: boolean val$play> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(androidx.media3.session.MediaSession$MediaItemsWithStartPosition)
    {
        androidx.media3.session.MediaSessionLegacyStub$1 r0;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r1;
        androidx.media3.session.MediaSessionLegacyStub $r2;
        androidx.media3.session.MediaSessionImpl $r3;
        android.os.Handler $r4;
        boolean $z0;
        java.lang.Runnable $r5;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$1;

        r1 := @parameter0: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$1: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $z0 = r0.<androidx.media3.session.MediaSessionLegacyStub$1: boolean val$play>;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionLegacyStub$1,androidx.media3.session.MediaSession$MediaItemsWithStartPosition,boolean)>(r0, r1, $z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub$1: void lambda$onSuccess$0(androidx.media3.session.MediaSession$MediaItemsWithStartPosition,boolean)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r4, $r5);

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.media3.session.MediaSessionLegacyStub$1 r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$1;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.media3.session.MediaSessionLegacyStub$1 r0;
        java.lang.Object r1;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition $r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.session.MediaSession$MediaItemsWithStartPosition) r1;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$1: void onSuccess(androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>($r2);

        return;
    }

    private void lambda$onSuccess$0(androidx.media3.session.MediaSession$MediaItemsWithStartPosition, boolean)
    {
        androidx.media3.session.MediaSessionLegacyStub$1 r0;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r1;
        boolean z0;
        androidx.media3.session.PlayerWrapper r2;
        int i0;
        androidx.media3.session.MediaSessionLegacyStub $r3;
        androidx.media3.session.MediaSessionImpl $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$1;

        r1 := @parameter0: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub$1: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        r2 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        staticinvoke <androidx.media3.session.MediaUtils: void setMediaItemsWithStartIndexAndPosition(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>(r2, r1);

        i0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getPlaybackState()>();

        if i0 != 1 goto label1;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void prepareIfCommandAvailable()>();

        goto label2;

     label1:
        if i0 != 4 goto label2;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void seekToDefaultPositionIfCommandAvailable()>();

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void playIfCommandAvailable()>();

     label3:
        return;
    }

androidx.media3.session.MediaSessionLegacyStub$2
<androidx.media3.session.MediaSessionLegacyStub$2: int val$index>
<androidx.media3.session.MediaSessionLegacyStub$2: androidx.media3.session.MediaSessionLegacyStub this$0>
    void <init>(androidx.media3.session.MediaSessionLegacyStub, int)
    {
        androidx.media3.session.MediaSessionLegacyStub$2 r0;
        androidx.media3.session.MediaSessionLegacyStub r1;
        int i0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$2;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        i0 := @parameter1: int;

        r0.<androidx.media3.session.MediaSessionLegacyStub$2: androidx.media3.session.MediaSessionLegacyStub this$0> = r1;

        r0.<androidx.media3.session.MediaSessionLegacyStub$2: int val$index> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.util.List)
    {
        androidx.media3.session.MediaSessionLegacyStub$2 r0;
        java.util.List r1;
        androidx.media3.session.MediaSessionLegacyStub $r2;
        androidx.media3.session.MediaSessionImpl $r3;
        android.os.Handler $r4;
        int $i0;
        java.lang.Runnable $r5;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$2;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$2: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $i0 = r0.<androidx.media3.session.MediaSessionLegacyStub$2: int val$index>;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionLegacyStub$2,int,java.util.List)>(r0, $i0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub$2: void lambda$onSuccess$0(int,java.util.List)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r4, $r5);

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.media3.session.MediaSessionLegacyStub$2 r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$2;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.media3.session.MediaSessionLegacyStub$2 r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$2: void onSuccess(java.util.List)>($r2);

        return;
    }

    private void lambda$onSuccess$0(int, java.util.List)
    {
        androidx.media3.session.MediaSessionLegacyStub$2 r0;
        int i0;
        java.util.List r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        androidx.media3.session.PlayerWrapper $r4, $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$2;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        if i0 != -1 goto label1;

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$2: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: void addMediaItems(java.util.List)>(r1);

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$2: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: void addMediaItems(int,java.util.List)>(i0, r1);

     label2:
        return;
    }

androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler
<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: int MSG_CONNECTION_TIMED_OUT>
<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: androidx.media3.session.MediaSessionLegacyStub this$0>
    public void <init>(androidx.media3.session.MediaSessionLegacyStub, android.os.Looper)
    {
        androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler r0;
        androidx.media3.session.MediaSessionLegacyStub r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: androidx.media3.session.MediaSessionLegacyStub this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler r0;
        android.os.Message r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.lang.Throwable r3, $r12;
        java.lang.Object $r4, $r8;
        androidx.media3.session.MediaSessionLegacyStub $r5, $r10;
        androidx.media3.session.ConnectedControllersManager $r6, $r11;
        boolean $z0;
        androidx.media3.session.MediaSession$ControllerCb $r7, $r9;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (androidx.media3.session.MediaSession$ControllerInfo) $r4;

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager access$900(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $z0 = virtualinvoke $r6.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r2);

        if $z0 == 0 goto label5;

     label1:
        $r7 = virtualinvoke r2.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.session.MediaSession$ControllerCb) $r8;

        interfaceinvoke $r9.<androidx.media3.session.MediaSession$ControllerCb: void onDisconnected(int)>(0);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

     label4:
        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r11 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager access$900(androidx.media3.session.MediaSessionLegacyStub)>($r10);

        virtualinvoke $r11.<androidx.media3.session.ConnectedControllersManager: void removeController(androidx.media3.session.MediaSession$ControllerInfo)>(r2);

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void disconnectControllerAfterTimeout(androidx.media3.session.MediaSession$ControllerInfo, long)
    {
        androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        long l0;
        android.os.Message r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        l0 := @parameter1: long;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: void removeMessages(int,java.lang.Object)>(1001, r1);

        r2 = virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1001, r1);

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ConnectionTimeoutHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l0);

        return;
    }

androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>
    public void <init>(androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo> = r1;

        return;
    }

    public int hashCode()
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb r0;
        java.lang.Object[] $r1;
        androidx.media.MediaSessionManager$RemoteUserInfo $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r1[0] = $r2;

        $i0 = staticinvoke <androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        androidx.media.MediaSessionManager$RemoteUserInfo $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "Landroidx/media3/session/MediaSessionLegacyStub$ControllerLegacyCb;" goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb) r1;

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r4 = r2.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCb: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $z0;
    }

androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.common.MediaMetadata val$newMediaMetadata>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: java.lang.String val$newMediaId>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: android.net.Uri val$newMediaUri>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: long val$newDurationMs>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1>
    void <init>(androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast, androidx.media3.common.MediaMetadata, java.lang.String, android.net.Uri, long)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1 r0;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r1;
        androidx.media3.common.MediaMetadata r2;
        java.lang.String r3;
        android.net.Uri r4;
        long l0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        r2 := @parameter1: androidx.media3.common.MediaMetadata;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.net.Uri;

        l0 := @parameter4: long;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1> = r1;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.common.MediaMetadata val$newMediaMetadata> = r2;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: java.lang.String val$newMediaId> = r3;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: android.net.Uri val$newMediaUri> = r4;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: long val$newDurationMs> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(android.graphics.Bitmap)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1 r0;
        android.graphics.Bitmap r1;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast $r2, $r5, $r12;
        androidx.media3.session.MediaSessionLegacyStub $r3, $r6, $r13;
        com.google.common.util.concurrent.FutureCallback $r4;
        android.support.v4.media.session.MediaSessionCompat $r7;
        long $l0;
        android.net.Uri $r8;
        java.lang.String $r9;
        androidx.media3.common.MediaMetadata $r10;
        android.support.v4.media.MediaMetadataCompat $r11;
        androidx.media3.session.MediaSessionImpl $r14;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1>;

        $r3 = $r2.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback access$700(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        if r0 == $r4 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1>;

        $r6 = $r5.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r6);

        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.common.MediaMetadata val$newMediaMetadata>;

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: java.lang.String val$newMediaId>;

        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: android.net.Uri val$newMediaUri>;

        $l0 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: long val$newDurationMs>;

        $r11 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.MediaMetadataCompat convertToMediaMetadataCompat(androidx.media3.common.MediaMetadata,java.lang.String,android.net.Uri,long,android.graphics.Bitmap)>($r10, $r9, $r8, $l0, r1);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$600(android.support.v4.media.session.MediaSessionCompat,android.support.v4.media.MediaMetadataCompat)>($r7, $r11);

        $r12 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1>;

        $r13 = $r12.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r14 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r13);

        virtualinvoke $r14.<androidx.media3.session.MediaSessionImpl: void onNotificationRefreshRequired()>();

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1 r0;
        java.lang.Throwable r1;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast $r2;
        androidx.media3.session.MediaSessionLegacyStub $r3;
        com.google.common.util.concurrent.FutureCallback $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast this$1>;

        $r3 = $r2.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback access$700(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        if r0 == $r4 goto label1;

        return;

     label1:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: java.lang.String access$800(java.lang.Throwable)>(r1);

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r5);

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1 r0;
        java.lang.Object r1;
        android.graphics.Bitmap $r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) r1;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: void onSuccess(android.graphics.Bitmap)>($r2);

        return;
    }

androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.common.MediaMetadata lastMediaMetadata>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: java.lang.String lastMediaId>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: android.net.Uri lastMediaUri>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: long lastDurationMs>
<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>
    public void <init>(androidx.media3.session.MediaSessionLegacyStub)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        androidx.media3.session.MediaSessionLegacyStub r1;
        androidx.media3.common.MediaMetadata $r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.media3.common.MediaMetadata: androidx.media3.common.MediaMetadata EMPTY>;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.common.MediaMetadata lastMediaMetadata> = $r2;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: java.lang.String lastMediaId> = "";

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: long lastDurationMs> = -9223372036854775807L;

        return;
    }

    public void onAvailableCommandsChangedFromPlayer(int, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.PlayerWrapper r2;
        androidx.media3.session.MediaSessionLegacyStub $r3, $r5, $r6;
        androidx.media3.session.MediaSessionImpl $r4, $r7;
        android.support.v4.media.session.MediaSessionCompat $r8;
        android.support.v4.media.session.PlaybackStateCompat $r9;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        r2 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$100(androidx.media3.session.MediaSessionLegacyStub,androidx.media3.session.PlayerWrapper)>($r5, r2);

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r6);

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r9 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r8.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r9);

        return;
    }

    public void onDisconnected(int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        return;
    }

    public void onPlayerChanged(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.PlayerWrapper) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, $i1, $i2, $i3;
        androidx.media3.session.PlayerWrapper r1, r2;
        androidx.media3.common.Timeline r3, $r13;
        androidx.media3.common.MediaMetadata r4, r5, $r11, $r12;
        androidx.media3.common.MediaItem r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.media3.session.MediaSessionLegacyStub $r8, $r15;
        android.support.v4.media.session.MediaSessionCompat $r9;
        android.support.v4.media.session.PlaybackStateCompat $r10;
        androidx.media3.common.DeviceInfo $r14;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.PlayerWrapper;

        r3 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimelineWithCommandCheck()>();

        if r1 == null goto label01;

        $r13 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimelineWithCommandCheck()>();

        $z6 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, r3);

        if $z6 != 0 goto label02;

     label01:
        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onTimelineChanged(int,androidx.media3.common.Timeline,int)>(i0, r3, 0);

     label02:
        r4 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getPlaylistMetadataWithCommandCheck()>();

        if r1 == null goto label03;

        $r12 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getPlaylistMetadataWithCommandCheck()>();

        $z5 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r12, r4);

        if $z5 != 0 goto label04;

     label03:
        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onPlaylistMetadataChanged(int,androidx.media3.common.MediaMetadata)>(i0, r4);

     label04:
        r5 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getMediaMetadataWithCommandCheck()>();

        if r1 == null goto label05;

        $r11 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getMediaMetadataWithCommandCheck()>();

        $z4 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, r5);

        if $z4 != 0 goto label06;

     label05:
        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onMediaMetadataChanged(int,androidx.media3.common.MediaMetadata)>(i0, r5);

     label06:
        if r1 == null goto label07;

        $z2 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: boolean getShuffleModeEnabled()>();

        $z3 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: boolean getShuffleModeEnabled()>();

        if $z2 == $z3 goto label08;

     label07:
        $z0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: boolean getShuffleModeEnabled()>();

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onShuffleModeEnabledChanged(int,boolean)>(i0, $z0);

     label08:
        if r1 == null goto label09;

        $i2 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: int getRepeatMode()>();

        $i3 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getRepeatMode()>();

        if $i2 == $i3 goto label10;

     label09:
        $i1 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getRepeatMode()>();

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onRepeatModeChanged(int,int)>(i0, $i1);

     label10:
        $r14 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onDeviceInfoChanged(int,androidx.media3.common.DeviceInfo)>(i0, $r14);

        $r15 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$100(androidx.media3.session.MediaSessionLegacyStub,androidx.media3.session.PlayerWrapper)>($r15, r2);

        r6 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()>();

        if r1 == null goto label11;

        $r7 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()>();

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r6);

        if $z1 != 0 goto label12;

     label11:
        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void onMediaItemTransition(int,androidx.media3.common.MediaItem,int)>(i0, r6, 3);

        goto label13;

     label12:
        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r9 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r8);

        $r10 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r9.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r10);

     label13:
        return;
    }

    public void onPlayerError(int, androidx.media3.common.PlaybackException)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.common.PlaybackException r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4;
        androidx.media3.session.PlayerWrapper $r7;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.PlaybackException;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r8);

        return;
    }

    public void setCustomLayout(int, java.util.List)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        java.util.List r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4;
        androidx.media3.session.PlayerWrapper $r7;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r8);

        return;
    }

    public void onSessionExtrasChanged(int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSessionLegacyStub $r2;
        androidx.media3.session.MediaSessionImpl $r3;
        android.support.v4.media.session.MediaSessionCompat $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setExtras(android.os.Bundle)>(r1);

        return;
    }

    public void onPlayWhenReadyChanged(int, boolean, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        boolean z0;
        androidx.media3.session.MediaSessionLegacyStub $r1, $r4;
        androidx.media3.session.MediaSessionImpl $r2, $r5;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media3.session.PlayerWrapper $r6;
        android.support.v4.media.session.PlaybackStateCompat $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r4);

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r7);

        return;
    }

    public void onPlaybackSuppressionReasonChanged(int, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        androidx.media3.session.MediaSessionLegacyStub $r1, $r4;
        androidx.media3.session.MediaSessionImpl $r2, $r5;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media3.session.PlayerWrapper $r6;
        android.support.v4.media.session.PlaybackStateCompat $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r4);

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r7);

        return;
    }

    public void onPlaybackStateChanged(int, int, androidx.media3.common.PlaybackException) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        androidx.media3.common.PlaybackException r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4;
        androidx.media3.session.PlayerWrapper $r7;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.PlaybackException;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r8);

        return;
    }

    public void onIsPlayingChanged(int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        boolean z0;
        androidx.media3.session.MediaSessionLegacyStub $r1, $r4;
        androidx.media3.session.MediaSessionImpl $r2, $r5;
        android.support.v4.media.session.MediaSessionCompat $r3;
        androidx.media3.session.PlayerWrapper $r6;
        android.support.v4.media.session.PlaybackStateCompat $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r4);

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r7);

        return;
    }

    public void onPositionDiscontinuity(int, androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        androidx.media3.common.Player$PositionInfo r1, r2;
        androidx.media3.session.MediaSessionLegacyStub $r3, $r6;
        androidx.media3.session.MediaSessionImpl $r4, $r7;
        android.support.v4.media.session.MediaSessionCompat $r5;
        androidx.media3.session.PlayerWrapper $r8;
        android.support.v4.media.session.PlaybackStateCompat $r9;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$PositionInfo;

        r2 := @parameter2: androidx.media3.common.Player$PositionInfo;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r6);

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r9 = virtualinvoke $r8.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r9);

        return;
    }

    public void onPlaybackParametersChanged(int, androidx.media3.common.PlaybackParameters) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.common.PlaybackParameters r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4;
        androidx.media3.session.PlayerWrapper $r7;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.PlaybackParameters;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r8);

        return;
    }

    public void onMediaItemTransition(int, androidx.media3.common.MediaItem, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1, $i2;
        androidx.media3.common.MediaItem r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r6, $r9, $r13;
        android.support.v4.media.session.MediaSessionCompat $r3, $r8, $r14;
        androidx.media3.common.MediaMetadata $r4;
        androidx.media3.common.Rating $r5;
        androidx.media3.session.MediaSessionImpl $r7, $r10;
        androidx.media3.session.PlayerWrapper $r11;
        android.support.v4.media.session.PlaybackStateCompat $r12;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void updateMetadataIfChanged()>();

        if r1 != null goto label1;

        $r13 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r14 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r13);

        virtualinvoke $r14.<android.support.v4.media.session.MediaSessionCompat: void setRatingType(int)>(0);

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaMetadata mediaMetadata>;

        $r5 = $r4.<androidx.media3.common.MediaMetadata: androidx.media3.common.Rating userRating>;

        $i2 = staticinvoke <androidx.media3.session.MediaUtils: int getRatingCompatStyle(androidx.media3.common.Rating)>($r5);

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setRatingType(int)>($i2);

     label2:
        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r6);

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r9 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r10 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r9);

        $r11 = virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r12 = virtualinvoke $r11.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r8.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r12);

        return;
    }

    public void onMediaMetadataChanged(int, androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.common.MediaMetadata r1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaMetadata;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void updateMetadataIfChanged()>();

        return;
    }

    public void onTimelineChanged(int, androidx.media3.common.Timeline, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        androidx.media3.common.Timeline r1;
        boolean $z0;
        androidx.media3.session.MediaSessionLegacyStub $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r1.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$300(android.support.v4.media.session.MediaSessionCompat,java.util.List)>($r3, null);

        return;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void updateQueue(androidx.media3.common.Timeline)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void updateMetadataIfChanged()>();

        return;
    }

    private void updateQueue(androidx.media3.common.Timeline)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        androidx.media3.common.Timeline r1;
        java.util.List r2;
        java.util.ArrayList r3, $r9;
        java.util.concurrent.atomic.AtomicInteger r4, $r10;
        java.lang.Runnable r5;
        androidx.media3.common.MediaItem r6;
        androidx.media3.common.MediaMetadata r7;
        com.google.common.util.concurrent.ListenableFuture r8;
        int $i0, i1;
        java.lang.Object $r11;
        byte[] $r12, $r16;
        androidx.media3.session.MediaSessionLegacyStub $r13, $r17;
        androidx.media3.session.MediaSessionImpl $r14, $r18;
        androidx.media3.session.BitmapLoader $r15;
        android.os.Handler $r19;
        java.util.concurrent.Executor $r21;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r2 = staticinvoke <androidx.media3.session.MediaUtils: java.util.List convertToMediaItemList(androidx.media3.common.Timeline)>(r1);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        $r10 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r4 = $r10;

        r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast,java.util.concurrent.atomic.AtomicInteger,java.util.List,java.util.List,androidx.media3.common.Timeline)>(r0, r4, r2, r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void lambda$updateQueue$0(java.util.concurrent.atomic.AtomicInteger,java.util.List,java.util.List,androidx.media3.common.Timeline)>, methodtype: void __METHODTYPE__());

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (androidx.media3.common.MediaItem) $r11;

        r7 = r6.<androidx.media3.common.MediaItem: androidx.media3.common.MediaMetadata mediaMetadata>;

        $r12 = r7.<androidx.media3.common.MediaMetadata: byte[] artworkData>;

        if $r12 != null goto label2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(null);

        interfaceinvoke r5.<java.lang.Runnable: void run()>();

        goto label3;

     label2:
        $r13 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r14 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r13);

        $r15 = virtualinvoke $r14.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader getBitmapLoader()>();

        $r16 = r7.<androidx.media3.common.MediaMetadata: byte[] artworkData>;

        r8 = interfaceinvoke $r15.<androidx.media3.session.BitmapLoader: com.google.common.util.concurrent.ListenableFuture decodeBitmap(byte[])>($r16);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8);

        $r17 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r18 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r17);

        $r19 = virtualinvoke $r18.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r19);

        $r21 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r19) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        interfaceinvoke r8.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r5, $r21);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void handleBitmapFuturesAllCompletedAndSetQueue(java.util.List, androidx.media3.common.Timeline, java.util.List)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        java.util.List r1, r3, r25;
        androidx.media3.common.Timeline r2;
        java.util.ArrayList r4, $r7;
        com.google.common.util.concurrent.ListenableFuture r5;
        java.lang.Throwable r6, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        androidx.media3.session.MediaSessionLegacyStub $r8, $r10;
        android.support.v4.media.session.MediaSessionCompat $r9, $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r17;
        java.lang.Object $r18, $r19, $r22;
        android.graphics.Bitmap r21;
        androidx.media3.common.MediaItem $r23;
        android.support.v4.media.session.MediaSessionCompat$QueueItem $r24;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.media3.common.Timeline;

        r3 := @parameter2: java.util.List;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        i6 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 >= $i0 goto label6;

        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        r5 = (com.google.common.util.concurrent.ListenableFuture) $r18;

        r21 = null;

        if r5 == null goto label5;

     label2:
        $r19 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r5);

        r21 = (android.graphics.Bitmap) $r19;

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        r6 = $r20;

        staticinvoke <androidx.media3.common.util.Log: void d(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", "Failed to get bitmap");

     label5:
        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        $r23 = (androidx.media3.common.MediaItem) $r22;

        $r24 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.session.MediaSessionCompat$QueueItem convertToQueueItem(androidx.media3.common.MediaItem,int,android.graphics.Bitmap)>($r23, i6, r21);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r24);

        i6 = i6 + 1;

        goto label1;

     label6:
        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 21 goto label8;

        r25 = staticinvoke <androidx.media3.session.MediaUtils: java.util.List truncateListBySize(java.util.List,int)>(r4, 262144);

        $i2 = interfaceinvoke r25.<java.util.List: int size()>();

        $i3 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        if $i2 == $i3 goto label7;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending ");

        $i4 = interfaceinvoke r25.<java.util.List: int size()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" items out of ");

        $i5 = virtualinvoke r2.<androidx.media3.common.Timeline: int getWindowCount()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void i(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r17);

     label7:
        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r11 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r10);

        virtualinvoke $r11.<android.support.v4.media.session.MediaSessionCompat: void setQueue(java.util.List)>(r25);

        goto label9;

     label8:
        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r9 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r8);

        virtualinvoke $r9.<android.support.v4.media.session.MediaSessionCompat: void setQueue(java.util.List)>(r4);

     label9:
        return;

        catch java.util.concurrent.CancellationException from label2 to label3 with label4;
        catch java.util.concurrent.ExecutionException from label2 to label3 with label4;
    }

    public void onPlaylistMetadataChanged(int, androidx.media3.common.MediaMetadata) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.common.MediaMetadata r1;
        java.lang.CharSequence r2, r3;
        androidx.media3.session.MediaSessionLegacyStub $r4, $r7;
        android.support.v4.media.session.MediaSessionCompat $r5, $r8;
        android.support.v4.media.session.MediaControllerCompat $r6;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaMetadata;

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r5 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r4);

        $r6 = virtualinvoke $r5.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat getController()>();

        r2 = virtualinvoke $r6.<android.support.v4.media.session.MediaControllerCompat: java.lang.CharSequence getQueueTitle()>();

        r3 = r1.<androidx.media3.common.MediaMetadata: java.lang.CharSequence title>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, r3);

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r8 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r7);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$400(android.support.v4.media.session.MediaSessionCompat,java.lang.CharSequence)>($r8, r3);

     label1:
        return;
    }

    public void onShuffleModeEnabledChanged(int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, $i1;
        boolean z0;
        androidx.media3.session.MediaSessionLegacyStub $r1;
        androidx.media3.session.MediaSessionImpl $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $i1 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackStateCompatShuffleMode(boolean)>(z0);

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setShuffleMode(int)>($i1);

        return;
    }

    public void onRepeatModeChanged(int, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1, $i2;
        androidx.media3.session.MediaSessionLegacyStub $r1;
        androidx.media3.session.MediaSessionImpl $r2;
        android.support.v4.media.session.MediaSessionCompat $r3;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $i2 = staticinvoke <androidx.media3.session.MediaUtils: int convertToPlaybackStateCompatRepeatMode(int)>(i1);

        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat: void setRepeatMode(int)>($i2);

        return;
    }

    public void onAudioAttributesChanged(int, androidx.media3.common.AudioAttributes)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1, i2;
        androidx.media3.common.AudioAttributes r1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r6;
        androidx.media3.session.MediaSessionImpl $r3;
        androidx.media3.session.PlayerWrapper $r4;
        androidx.media3.common.DeviceInfo $r5;
        android.support.v4.media.session.MediaSessionCompat $r7;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.AudioAttributes;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r5 = virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: androidx.media3.common.DeviceInfo getDeviceInfo()>();

        i1 = $r5.<androidx.media3.common.DeviceInfo: int playbackType>;

        if i1 != 0 goto label1;

        i2 = staticinvoke <androidx.media3.session.MediaUtils: int getLegacyStreamType(androidx.media3.common.AudioAttributes)>(r1);

        $r6 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r6);

        virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackToLocal(int)>(i2);

     label1:
        return;
    }

    public void onDeviceInfoChanged(int, androidx.media3.common.DeviceInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1;
        androidx.media3.common.DeviceInfo r1;
        androidx.media3.session.PlayerWrapper r2;
        androidx.media3.session.MediaSessionLegacyStub $r3, $r5, $r8, $r10, $r12, $r15;
        androidx.media3.session.MediaSessionImpl $r4;
        androidx.media.VolumeProviderCompat $r6, $r9, $r13;
        android.support.v4.media.session.MediaSessionCompat $r11, $r16;
        androidx.media3.common.AudioAttributes $r14;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.DeviceInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        r2 = virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media.VolumeProviderCompat createVolumeProviderCompat()>();

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat access$502(androidx.media3.session.MediaSessionLegacyStub,androidx.media.VolumeProviderCompat)>($r5, $r6);

        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r9 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat access$500(androidx.media3.session.MediaSessionLegacyStub)>($r8);

        if $r9 != null goto label1;

        $r14 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.AudioAttributes getAudioAttributesWithCommandCheck()>();

        i1 = staticinvoke <androidx.media3.session.MediaUtils: int getLegacyStreamType(androidx.media3.common.AudioAttributes)>($r14);

        $r15 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r16 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r15);

        virtualinvoke $r16.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackToLocal(int)>(i1);

        goto label2;

     label1:
        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r11 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r10);

        $r12 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r13 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat access$500(androidx.media3.session.MediaSessionLegacyStub)>($r12);

        virtualinvoke $r11.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackToRemote(androidx.media.VolumeProviderCompat)>($r13);

     label2:
        return;
    }

    public void onDeviceVolumeChanged(int, int, boolean)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0, i1, $i2;
        boolean z0;
        androidx.media3.session.MediaSessionLegacyStub $r1, $r3;
        androidx.media.VolumeProviderCompat $r2, $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat access$500(androidx.media3.session.MediaSessionLegacyStub)>($r1);

        if $r2 == null goto label3;

        $r3 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r4 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media.VolumeProviderCompat access$500(androidx.media3.session.MediaSessionLegacyStub)>($r3);

        if z0 == 0 goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = i1;

     label2:
        virtualinvoke $r4.<androidx.media.VolumeProviderCompat: void setCurrentVolume(int)>($i2);

     label3:
        return;
    }

    public void onPeriodicSessionPositionInfoChanged(int, androidx.media3.session.SessionPositionInfo, boolean, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        int i0;
        androidx.media3.session.SessionPositionInfo r1;
        boolean z0, z1;
        androidx.media3.session.MediaSessionLegacyStub $r2, $r5;
        androidx.media3.session.MediaSessionImpl $r3, $r6;
        android.support.v4.media.session.MediaSessionCompat $r4;
        androidx.media3.session.PlayerWrapper $r7;
        android.support.v4.media.session.PlaybackStateCompat $r8;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionPositionInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r3 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r5 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r5);

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerWrapper: android.support.v4.media.session.PlaybackStateCompat createPlaybackStateCompat()>();

        virtualinvoke $r4.<android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r8);

        return;
    }

    private void updateMetadataIfChanged()
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.common.MediaItem r2;
        androidx.media3.common.MediaMetadata r3, $r36;
        long l0, $l1;
        java.lang.String r4, $r28, $r33, $r34;
        android.net.Uri r5, $r29, $r35;
        com.google.common.util.concurrent.ListenableFuture r6;
        java.lang.Throwable r7, $r32;
        androidx.media3.session.MediaSessionLegacyStub $r8, $r10, $r13, $r16, $r18, $r20, $r26, $r38;
        androidx.media3.session.MediaSessionImpl $r9, $r11, $r21;
        androidx.media3.session.BitmapLoader $r12;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1 $r15;
        com.google.common.util.concurrent.FutureCallback $r19;
        android.os.Handler $r22;
        java.util.concurrent.Executor $r24;
        java.lang.Object $r25;
        android.support.v4.media.session.MediaSessionCompat $r27, $r39;
        byte $b2;
        androidx.media3.common.MediaItem$LocalConfiguration $r30, $r31;
        android.graphics.Bitmap r37;
        android.support.v4.media.MediaMetadataCompat $r40;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        $r8 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r9 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r8);

        r1 = virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        r2 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaItem getCurrentMediaItemWithCommandCheck()>();

        r3 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: androidx.media3.common.MediaMetadata getMediaMetadataWithCommandCheck()>();

        l0 = virtualinvoke r1.<androidx.media3.session.PlayerWrapper: long getDurationWithCommandCheck()>();

        if r2 == null goto label01;

        $r34 = r2.<androidx.media3.common.MediaItem: java.lang.String mediaId>;

        goto label02;

     label01:
        $r34 = "";

     label02:
        r4 = $r34;

        if r2 == null goto label03;

        $r30 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r30 == null goto label03;

        $r31 = r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r35 = $r31.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        goto label04;

     label03:
        $r35 = null;

     label04:
        r5 = $r35;

        $r36 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.common.MediaMetadata lastMediaMetadata>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r36, r3);

        if $z3 == 0 goto label05;

        $r28 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: java.lang.String lastMediaId>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r28, r4);

        if $z1 == 0 goto label05;

        $r29 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: android.net.Uri lastMediaUri>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r29, r5);

        if $z2 == 0 goto label05;

        $l1 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: long lastDurationMs>;

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label05;

        return;

     label05:
        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: java.lang.String lastMediaId> = r4;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: android.net.Uri lastMediaUri> = r5;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.common.MediaMetadata lastMediaMetadata> = r3;

        r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: long lastDurationMs> = l0;

        if r2 != null goto label06;

        $r26 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r27 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r26);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$600(android.support.v4.media.session.MediaSessionCompat,android.support.v4.media.MediaMetadataCompat)>($r27, null);

        return;

     label06:
        r37 = null;

        $r10 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r11 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r10);

        $r12 = virtualinvoke $r11.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader getBitmapLoader()>();

        r6 = interfaceinvoke $r12.<androidx.media3.session.BitmapLoader: com.google.common.util.concurrent.ListenableFuture loadBitmapFromMetadata(androidx.media3.common.MediaMetadata)>(r3);

        if r6 == null goto label11;

        $r13 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback access$702(androidx.media3.session.MediaSessionLegacyStub,com.google.common.util.concurrent.FutureCallback)>($r13, null);

        $z0 = interfaceinvoke r6.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 == 0 goto label10;

     label07:
        $r25 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r6);

        r37 = (android.graphics.Bitmap) $r25;

     label08:
        goto label11;

     label09:
        $r32 := @caughtexception;

        r7 = $r32;

        $r33 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: java.lang.String access$800(java.lang.Throwable)>(r7);

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionLegacyStub", $r33);

        goto label11;

     label10:
        $r16 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r15 = new androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1;

        specialinvoke $r15.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast$1: void <init>(androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast,androidx.media3.common.MediaMetadata,java.lang.String,android.net.Uri,long)>(r0, r3, r4, r5, l0);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback access$702(androidx.media3.session.MediaSessionLegacyStub,com.google.common.util.concurrent.FutureCallback)>($r16, $r15);

        $r18 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r19 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: com.google.common.util.concurrent.FutureCallback access$700(androidx.media3.session.MediaSessionLegacyStub)>($r18);

        $r20 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r21 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSessionImpl access$000(androidx.media3.session.MediaSessionLegacyStub)>($r20);

        $r22 = virtualinvoke $r21.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r22);

        $r24 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r22) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r6, $r19, $r24);

     label11:
        $r38 = r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: androidx.media3.session.MediaSessionLegacyStub this$0>;

        $r39 = staticinvoke <androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat access$200(androidx.media3.session.MediaSessionLegacyStub)>($r38);

        $r40 = staticinvoke <androidx.media3.session.MediaUtils: android.support.v4.media.MediaMetadataCompat convertToMediaMetadataCompat(androidx.media3.common.MediaMetadata,java.lang.String,android.net.Uri,long,android.graphics.Bitmap)>(r3, r4, r5, l0, r37);

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$600(android.support.v4.media.session.MediaSessionCompat,android.support.v4.media.MediaMetadataCompat)>($r39, $r40);

        return;

        catch java.util.concurrent.ExecutionException from label07 to label08 with label09;
    }

    private void lambda$updateQueue$0(java.util.concurrent.atomic.AtomicInteger, java.util.List, java.util.List, androidx.media3.common.Timeline)
    {
        androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast r0;
        java.util.concurrent.atomic.AtomicInteger r1;
        java.util.List r2, r3;
        androidx.media3.common.Timeline r4;
        int i0, $i1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast;

        r1 := @parameter0: java.util.concurrent.atomic.AtomicInteger;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: androidx.media3.common.Timeline;

        i0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 != $i1 goto label1;

        specialinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$ControllerLegacyCbForBroadcast: void handleBitmapFuturesAllCompletedAndSetQueue(java.util.List,androidx.media3.common.Timeline,java.util.List)>(r3, r4, r2);

     label1:
        return;
    }

androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler
<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: int MSG_DOUBLE_TAP_TIMED_OUT>
<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: androidx.media3.session.MediaSessionLegacyStub this$0>
    public void <init>(androidx.media3.session.MediaSessionLegacyStub, android.os.Looper)
    {
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler r0;
        androidx.media3.session.MediaSessionLegacyStub r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        r1 := @parameter0: androidx.media3.session.MediaSessionLegacyStub;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: androidx.media3.session.MediaSessionLegacyStub this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler r0;
        android.os.Message r1;
        androidx.media.MediaSessionManager$RemoteUserInfo r2;
        java.lang.Object $r3;
        androidx.media3.session.MediaSessionLegacyStub $r4;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        r1 := @parameter0: android.os.Message;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (androidx.media.MediaSessionManager$RemoteUserInfo) $r3;

        $r4 = r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: androidx.media3.session.MediaSessionLegacyStub this$0>;

        staticinvoke <androidx.media3.session.MediaSessionLegacyStub: void access$1000(androidx.media3.session.MediaSessionLegacyStub,androidx.media.MediaSessionManager$RemoteUserInfo)>($r4, r2);

        return;
    }

    public void addPendingMediaPlayPauseKey(androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        android.os.Message r2;
        int $i0;
        long $l1;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        r2 = virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1002, r1);

        $i0 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        $l1 = (long) $i0;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, $l1);

        return;
    }

    public void clearPendingMediaPlayPauseKey()
    {
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler r0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: void removeMessages(int)>(1002);

        return;
    }

    public boolean hasPendingMediaPlayPauseKey()
    {
        androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionLegacyStub$MediaPlayPauseKeyHandler: boolean hasMessages(int)>(1002);

        return $z0;
    }

androidx.media3.session.MediaSessionLegacyStub$SessionTask
<androidx.media3.session.MediaSessionLegacyStub$SessionTask: void run(androidx.media3.session.MediaSession$ControllerInfo)>
