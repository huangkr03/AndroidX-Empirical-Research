androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection
<androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection: androidx.camera.core.impl.Quirks mCameraQuirks>
    public void <init>(androidx.camera.core.impl.Quirks)
    {
        androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection r0;
        androidx.camera.core.impl.Quirks r1;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection;

        r1 := @parameter0: androidx.camera.core.impl.Quirks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection: androidx.camera.core.impl.Quirks mCameraQuirks> = r1;

        return;
    }

    public android.graphics.PointF getCorrectedPoint(androidx.camera.core.MeteringPoint, int)
    {
        androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection r0;
        androidx.camera.core.MeteringPoint r1;
        int i0;
        android.graphics.PointF $r2, $r4;
        float $f0, $f1, $f2, $f3, $f4;
        androidx.camera.core.impl.Quirks $r3;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection;

        r1 := @parameter0: androidx.camera.core.MeteringPoint;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $r3 = r0.<androidx.camera.camera2.internal.compat.workaround.MeteringRegionCorrection: androidx.camera.core.impl.Quirks mCameraQuirks>;

        $z0 = virtualinvoke $r3.<androidx.camera.core.impl.Quirks: boolean contains(java.lang.Class)>(class "Landroidx/camera/camera2/internal/compat/quirk/AfRegionFlipHorizontallyQuirk;");

        if $z0 == 0 goto label1;

        $r4 = new android.graphics.PointF;

        $f2 = virtualinvoke r1.<androidx.camera.core.MeteringPoint: float getX()>();

        $f3 = 1.0F - $f2;

        $f4 = virtualinvoke r1.<androidx.camera.core.MeteringPoint: float getY()>();

        specialinvoke $r4.<android.graphics.PointF: void <init>(float,float)>($f3, $f4);

        return $r4;

     label1:
        $r2 = new android.graphics.PointF;

        $f0 = virtualinvoke r1.<androidx.camera.core.MeteringPoint: float getX()>();

        $f1 = virtualinvoke r1.<androidx.camera.core.MeteringPoint: float getY()>();

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>($f0, $f1);

        return $r2;
    }

