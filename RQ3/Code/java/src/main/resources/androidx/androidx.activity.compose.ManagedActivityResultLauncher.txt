androidx.activity.compose.ManagedActivityResultLauncher
<androidx.activity.compose.ManagedActivityResultLauncher: androidx.activity.compose.ActivityResultLauncherHolder launcher>
<androidx.activity.compose.ManagedActivityResultLauncher: androidx.compose.runtime.State contract>
<androidx.activity.compose.ManagedActivityResultLauncher: int $stable>
    public void <init>(androidx.activity.compose.ActivityResultLauncherHolder, androidx.compose.runtime.State)
    {
        androidx.activity.compose.ManagedActivityResultLauncher r0;
        androidx.activity.compose.ActivityResultLauncherHolder r1;
        androidx.compose.runtime.State r2;

        r0 := @this: androidx.activity.compose.ManagedActivityResultLauncher;

        r1 := @parameter0: androidx.activity.compose.ActivityResultLauncherHolder;

        r2 := @parameter1: androidx.compose.runtime.State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "launcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "contract");

        specialinvoke r0.<androidx.activity.result.ActivityResultLauncher: void <init>()>();

        r0.<androidx.activity.compose.ManagedActivityResultLauncher: androidx.activity.compose.ActivityResultLauncherHolder launcher> = r1;

        r0.<androidx.activity.compose.ManagedActivityResultLauncher: androidx.compose.runtime.State contract> = r2;

        return;
    }

    public void unregister()
    {
        androidx.activity.compose.ManagedActivityResultLauncher r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.activity.compose.ManagedActivityResultLauncher;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Registration is automatically handled by rememberLauncherForActivityResult");

        throw $r1;
    }

    public void launch(java.lang.Object, androidx.core.app.ActivityOptionsCompat)
    {
        androidx.activity.compose.ManagedActivityResultLauncher r0;
        java.lang.Object r1;
        androidx.core.app.ActivityOptionsCompat r2;
        androidx.activity.compose.ActivityResultLauncherHolder $r3;

        r0 := @this: androidx.activity.compose.ManagedActivityResultLauncher;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.core.app.ActivityOptionsCompat;

        $r3 = r0.<androidx.activity.compose.ManagedActivityResultLauncher: androidx.activity.compose.ActivityResultLauncherHolder launcher>;

        virtualinvoke $r3.<androidx.activity.compose.ActivityResultLauncherHolder: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)>(r1, r2);

        return;
    }

    public androidx.activity.result.contract.ActivityResultContract getContract()
    {
        androidx.activity.compose.ManagedActivityResultLauncher r0;
        androidx.compose.runtime.State $r1;
        java.lang.Object $r2;
        androidx.activity.result.contract.ActivityResultContract $r3;

        r0 := @this: androidx.activity.compose.ManagedActivityResultLauncher;

        $r1 = r0.<androidx.activity.compose.ManagedActivityResultLauncher: androidx.compose.runtime.State contract>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r3 = (androidx.activity.result.contract.ActivityResultContract) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        <androidx.activity.compose.ManagedActivityResultLauncher: int $stable> = 8;

        return;
    }

