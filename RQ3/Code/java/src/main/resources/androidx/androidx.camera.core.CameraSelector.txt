androidx.camera.core.CameraSelector
<androidx.camera.core.CameraSelector: int LENS_FACING_FRONT>
<androidx.camera.core.CameraSelector: int LENS_FACING_BACK>
<androidx.camera.core.CameraSelector: androidx.camera.core.CameraSelector DEFAULT_FRONT_CAMERA>
<androidx.camera.core.CameraSelector: androidx.camera.core.CameraSelector DEFAULT_BACK_CAMERA>
<androidx.camera.core.CameraSelector: java.util.LinkedHashSet mCameraFilterSet>
    void <init>(java.util.LinkedHashSet)
    {
        androidx.camera.core.CameraSelector r0;
        java.util.LinkedHashSet r1;

        r0 := @this: androidx.camera.core.CameraSelector;

        r1 := @parameter0: java.util.LinkedHashSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet mCameraFilterSet> = r1;

        return;
    }

    public androidx.camera.core.impl.CameraInternal select(java.util.LinkedHashSet)
    {
        androidx.camera.core.CameraSelector r0;
        java.util.LinkedHashSet r1, $r3;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object $r5;
        androidx.camera.core.impl.CameraInternal $r6;

        r0 := @this: androidx.camera.core.CameraSelector;

        r1 := @parameter0: java.util.LinkedHashSet;

        $r3 = virtualinvoke r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet filter(java.util.LinkedHashSet)>(r1);

        r2 = virtualinvoke $r3.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (androidx.camera.core.impl.CameraInternal) $r5;

        return $r6;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No available camera can be found");

        throw $r4;
    }

    public java.util.List filter(java.util.List)
    {
        androidx.camera.core.CameraSelector r0;
        java.util.List r1, $r7, r10, r11, r12;
        java.util.Iterator r2;
        androidx.camera.core.CameraFilter r3;
        java.util.LinkedHashSet $r5;
        boolean $z0;
        java.lang.Object $r6, r8;
        java.util.ArrayList r9;

        r0 := @this: androidx.camera.core.CameraSelector;

        r1 := @parameter0: java.util.List;

        r9 = new java.util.ArrayList;

        specialinvoke r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r8 = r9;

        $r5 = r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet mCameraFilterSet>;

        r2 = virtualinvoke $r5.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.camera.core.CameraFilter) $r6;

        r10 = (java.util.List) r8;

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r10);

        r8 = interfaceinvoke r3.<androidx.camera.core.CameraFilter: java.util.List filter(java.util.List)>($r7);

        goto label1;

     label2:
        r11 = (java.util.List) r8;

        interfaceinvoke r11.<java.util.List: boolean retainAll(java.util.Collection)>(r1);

        r12 = (java.util.List) r8;

        return r12;
    }

    public java.util.LinkedHashSet filter(java.util.LinkedHashSet)
    {
        androidx.camera.core.CameraSelector r0;
        java.util.LinkedHashSet r1, $r6, r14;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3, r11;
        androidx.camera.core.impl.CameraInternal r4, r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r9;
        androidx.camera.core.CameraInfo $r8, $r10;
        java.util.List r13;

        r0 := @this: androidx.camera.core.CameraSelector;

        r1 := @parameter0: java.util.LinkedHashSet;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        r11 = virtualinvoke r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (androidx.camera.core.impl.CameraInternal) $r9;

        $r10 = interfaceinvoke r12.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.CameraInfo getCameraInfo()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        r13 = virtualinvoke r0.<androidx.camera.core.CameraSelector: java.util.List filter(java.util.List)>(r2);

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        r14 = $r6;

        r3 = virtualinvoke r1.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.camera.core.impl.CameraInternal) $r7;

        $r8 = interfaceinvoke r4.<androidx.camera.core.impl.CameraInternal: androidx.camera.core.CameraInfo getCameraInfo()>();

        $z2 = interfaceinvoke r13.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z2 == 0 goto label4;

        virtualinvoke r14.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r4);

     label4:
        goto label3;

     label5:
        return r14;
    }

    public java.util.LinkedHashSet getCameraFilterSet()
    {
        androidx.camera.core.CameraSelector r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: androidx.camera.core.CameraSelector;

        $r1 = r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet mCameraFilterSet>;

        return $r1;
    }

    public java.lang.Integer getLensFacing()
    {
        androidx.camera.core.CameraSelector r0;
        java.util.Iterator r1;
        androidx.camera.core.CameraFilter r2;
        java.lang.Integer r3, r8;
        java.util.LinkedHashSet $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        androidx.camera.core.impl.LensFacingCameraFilter $r6;
        int $i0;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.camera.core.CameraSelector;

        r8 = null;

        $r4 = r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet mCameraFilterSet>;

        r1 = virtualinvoke $r4.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.camera.core.CameraFilter) $r5;

        $z1 = r2 instanceof androidx.camera.core.impl.LensFacingCameraFilter;

        if $z1 == 0 goto label3;

        $r6 = (androidx.camera.core.impl.LensFacingCameraFilter) r2;

        $i0 = virtualinvoke $r6.<androidx.camera.core.impl.LensFacingCameraFilter: int getLensFacing()>();

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        if r8 != null goto label2;

        r8 = r3;

        goto label3;

     label2:
        $z2 = virtualinvoke r8.<java.lang.Integer: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label3;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Multiple conflicting lens facing requirements exist.");

        throw $r7;

     label3:
        goto label1;

     label4:
        return r8;
    }

    static void <clinit>()
    {
        androidx.camera.core.CameraSelector$Builder $r0, $r1, $r3, $r4;
        androidx.camera.core.CameraSelector $r2, $r5;

        $r0 = new androidx.camera.core.CameraSelector$Builder;

        specialinvoke $r0.<androidx.camera.core.CameraSelector$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.camera.core.CameraSelector$Builder: androidx.camera.core.CameraSelector$Builder requireLensFacing(int)>(0);

        $r2 = virtualinvoke $r1.<androidx.camera.core.CameraSelector$Builder: androidx.camera.core.CameraSelector build()>();

        <androidx.camera.core.CameraSelector: androidx.camera.core.CameraSelector DEFAULT_FRONT_CAMERA> = $r2;

        $r3 = new androidx.camera.core.CameraSelector$Builder;

        specialinvoke $r3.<androidx.camera.core.CameraSelector$Builder: void <init>()>();

        $r4 = virtualinvoke $r3.<androidx.camera.core.CameraSelector$Builder: androidx.camera.core.CameraSelector$Builder requireLensFacing(int)>(1);

        $r5 = virtualinvoke $r4.<androidx.camera.core.CameraSelector$Builder: androidx.camera.core.CameraSelector build()>();

        <androidx.camera.core.CameraSelector: androidx.camera.core.CameraSelector DEFAULT_BACK_CAMERA> = $r5;

        return;
    }

androidx.camera.core.CameraSelector$Builder
<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet>
    public void <init>()
    {
        androidx.camera.core.CameraSelector$Builder r0;
        java.util.LinkedHashSet $r1;

        r0 := @this: androidx.camera.core.CameraSelector$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet> = $r1;

        return;
    }

    private void <init>(java.util.LinkedHashSet)
    {
        androidx.camera.core.CameraSelector$Builder r0;
        java.util.LinkedHashSet r1, $r2;

        r0 := @this: androidx.camera.core.CameraSelector$Builder;

        r1 := @parameter0: java.util.LinkedHashSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r1);

        r0.<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet> = $r2;

        return;
    }

    public androidx.camera.core.CameraSelector$Builder requireLensFacing(int)
    {
        androidx.camera.core.CameraSelector$Builder r0;
        int i0;
        androidx.camera.core.impl.LensFacingCameraFilter $r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: androidx.camera.core.CameraSelector$Builder;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet>;

        $r1 = new androidx.camera.core.impl.LensFacingCameraFilter;

        specialinvoke $r1.<androidx.camera.core.impl.LensFacingCameraFilter: void <init>(int)>(i0);

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r1);

        return r0;
    }

    public androidx.camera.core.CameraSelector$Builder addCameraFilter(androidx.camera.core.CameraFilter)
    {
        androidx.camera.core.CameraSelector$Builder r0;
        androidx.camera.core.CameraFilter r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: androidx.camera.core.CameraSelector$Builder;

        r1 := @parameter0: androidx.camera.core.CameraFilter;

        $r2 = r0.<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet>;

        virtualinvoke $r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public static androidx.camera.core.CameraSelector$Builder fromSelector(androidx.camera.core.CameraSelector)
    {
        androidx.camera.core.CameraSelector r0;
        androidx.camera.core.CameraSelector$Builder r1, $r2;
        java.util.LinkedHashSet $r3;

        r0 := @parameter0: androidx.camera.core.CameraSelector;

        $r2 = new androidx.camera.core.CameraSelector$Builder;

        $r3 = virtualinvoke r0.<androidx.camera.core.CameraSelector: java.util.LinkedHashSet getCameraFilterSet()>();

        specialinvoke $r2.<androidx.camera.core.CameraSelector$Builder: void <init>(java.util.LinkedHashSet)>($r3);

        r1 = $r2;

        return r1;
    }

    public androidx.camera.core.CameraSelector build()
    {
        androidx.camera.core.CameraSelector$Builder r0;
        androidx.camera.core.CameraSelector $r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: androidx.camera.core.CameraSelector$Builder;

        $r1 = new androidx.camera.core.CameraSelector;

        $r2 = r0.<androidx.camera.core.CameraSelector$Builder: java.util.LinkedHashSet mCameraFilterSet>;

        specialinvoke $r1.<androidx.camera.core.CameraSelector: void <init>(java.util.LinkedHashSet)>($r2);

        return $r1;
    }

androidx.camera.core.CameraSelector$LensFacing
