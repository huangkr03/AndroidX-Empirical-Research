androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt
    public static final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measureStaggeredGrid-yR9pz_M(androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope, androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState, androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider, int[], long, boolean, long, int, int, int, int, int)
    {
        androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope $r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState r1;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r2;
        int[] r3, r10, r11, $r20, $r21, $r27, r28, $r34, r35;
        long l0, l1;
        boolean z0;
        int i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, $i22, $i23, i24, i25, $i26, $i27;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext r4, $r12;
        kotlin.jvm.internal.Ref$ObjectRef r5, r6, $r13, $r14, $r26, r30, $r33, r37;
        androidx.compose.runtime.snapshots.Snapshot$Companion r7;
        androidx.compose.runtime.snapshots.Snapshot r8, r9, r25;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition $r15, $r16;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r17, $r32;
        float $f0;
        java.lang.Object $r18, $r19;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult $r22;
        java.lang.Throwable $r23, $r24, r40, r42;
        kotlin.Unit r39, r41;

        $r0 := @parameter0: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope;

        r1 := @parameter1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;

        r2 := @parameter2: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        r3 := @parameter3: int[];

        l0 := @parameter4: long;

        z0 := @parameter5: boolean;

        l1 := @parameter6: long;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        i5 := @parameter10: int;

        i6 := @parameter11: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$measureStaggeredGrid");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "itemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "resolvedSlotSums");

        $r12 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        specialinvoke $r12.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: void <init>(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState,androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider,int[],long,boolean,androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope,int,long,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, l0, z0, $r0, i2, l1, i5, i6, i3, i4, null);

        r4 = $r12;

        $r13 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r13.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r5 = $r13;

        $r14 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r14.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r6 = $r14;

        r7 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r8 = virtualinvoke r7.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot createNonObservableSnapshot()>();

     label01:
        r25 = r8;

        r9 = virtualinvoke r25.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot makeCurrent()>();

     label02:
        $r15 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition getScrollPosition$foundation_release()>();

        r10 = virtualinvoke $r15.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $r16 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition getScrollPosition$foundation_release()>();

        r11 = virtualinvoke $r16.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getOffsets()>();

        $r26 = r5;

        $i8 = lengthof r10;

        $i7 = lengthof r3;

        if $i8 != $i7 goto label03;

        $r27 = r10;

        goto label09;

     label03:
        $r17 = virtualinvoke r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r17.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void reset()>();

        $i9 = lengthof r3;

        r28 = newarray (int)[$i9];

        r30 = r5;

        i19 = 0;

        i20 = lengthof r28;

     label04:
        if i19 >= i20 goto label08;

        $i21 = i19;

        $i16 = lengthof r10;

        if i19 >= $i16 goto label05;

        $i22 = r10[i19];

        goto label07;

     label05:
        if i19 != 0 goto label06;

        $i22 = 0;

        goto label07;

     label06:
        $i17 = i19 - 1;

        $i18 = r28[$i17];

        $i22 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findNextItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>(r4, $i18, i19);

     label07:
        r28[$i21] = $i22;

        $r32 = virtualinvoke r4.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i23 = r28[i19];

        virtualinvoke $r32.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>($i23, i19);

        i19 = i19 + 1;

        goto label04;

     label08:
        $r26 = r30;

        $r27 = r28;

     label09:
        $r26.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r27;

        $r33 = r6;

        $i11 = lengthof r11;

        $i10 = lengthof r3;

        if $i11 != $i10 goto label10;

        $r34 = r11;

        goto label16;

     label10:
        $i12 = lengthof r3;

        r35 = newarray (int)[$i12];

        r37 = r6;

        i24 = 0;

        i25 = lengthof r35;

     label11:
        if i24 >= i25 goto label15;

        $i26 = i24;

        $i14 = lengthof r11;

        if i24 >= $i14 goto label12;

        $i27 = r11[i24];

        goto label14;

     label12:
        if i24 != 0 goto label13;

        $i27 = 0;

        goto label14;

     label13:
        $i15 = i24 - 1;

        $i27 = r35[$i15];

     label14:
        r35[$i26] = $i27;

        i24 = i24 + 1;

        goto label11;

     label15:
        $r33 = r37;

        $r34 = r35;

     label16:
        $r33.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r34;

        r39 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label17:
        virtualinvoke r25.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r9);

        goto label20;

     label18:
        $r24 := @caughtexception;

        r40 = $r24;

     label19:
        virtualinvoke r25.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r9);

        throw r40;

     label20:
        r41 = r39;

     label21:
        virtualinvoke r8.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        goto label24;

     label22:
        $r23 := @caughtexception;

        r42 = $r23;

     label23:
        virtualinvoke r8.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        throw r42;

     label24:
        $f0 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float getScrollToBeConsumed$foundation_release()>();

        $i13 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $r18 = r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r21 = (int[]) $r18;

        $r19 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r20 = (int[]) $r19;

        $r22 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measure(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int[],int[],boolean)>(r4, $i13, $r21, $r20, 1);

        return $r22;

        catch java.lang.Throwable from label02 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label01 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private static final androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measure(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext, int, int[], int[], boolean)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r0, r67, r70, r91, r94;
        int i0, i1, $i5, $i7, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, i97, i98, i99, i100, i101, i102, i103, i104, i105, i106, i107, i108, $i109, i110, i111, i112, $i113, i114, i115, $i116, i117, $i118, $i119, $i120, i121, $i122, i123, $i124, i125, i126, i127, i128, i129, $i130, i131, i132, i133, $i134, $i135, $i136, i137, i138, i139, i140, i141, i142, i143, $i144, $i145, $i146, i147, i148, i149, i150, i152, $i153, i154, i155, $i156, $i157, i158, i159, i160, i161, i162, $i163, i164, i165, i166, i167, i168, i169, i170, i171, $i172, $i173, $i174, $i175, $i176, i177, i178, i179, i180, i181, i182, $i183, i184, i185, i186, $i188, i189, $i190, $i191, i192, i193, $i194, i195, i196, i197, i198, $i199, $i200, i201, i202, $i203, $i204, i205, i206, i207, $i208, i209, i210, i211, $i212, i213;
        int[] r1, r2, r4, $r11, $r12, $r13, $r14, $r28, r63, $r66, $r68, r69, $r72, r73, r74, $r75, r76, r89, r90, r92, r93, $r98, r99, r100, r115;
        boolean z0, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, z16, $z17, $z18, z20, $z21, z22, z23, $z25, z27, $z28, $z29, $z32, $z33, z35, z37, z38, $z40, $z41, z42, $z45, z46, $z49, $z50, z51;
        androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope $r3;
        long l2, l3, $l4, $l6, $l8, $l10, $l33, $l35, $l46, $l48;
        kotlin.collections.ArrayDeque[] r5, r64, r103, r107, r110;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider $r6;
        androidx.compose.ui.layout.MeasureScope $r7, $r23;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$1 $r8;
        kotlin.jvm.functions.Function1 $r9, $r24;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult $r10, $r25, $r42, $r49, $r55;
        kotlin.Unit $r15;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r16, $r38, $r41, $r50, $r53, $r54, $r56, $r59;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider $r17, $r39, $r51, $r57;
        kotlin.collections.ArrayDeque $r18, $r26, $r40, $r52, $r58, $r60, r81, r82, r85, r102, r104, r105, r108, r109, r111;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState $r19, $r37, $r96;
        androidx.compose.runtime.collection.MutableVector $r20, r106, r113;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem[] $r21;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$13 $r22;
        java.lang.Object $r27, $r29, $r32, $r35, $r45, $r47, $r48;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem $r30, $r33, $r36, $r46, r65, r78, r84, r86, r87, r95, r112;
        java.util.Collection $r31, $r44;
        java.util.List $r34, $r43, r62, $r117;
        float $f0, $f1, $f2, $f3;
        androidx.compose.ui.layout.MeasureResult r61, r116;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem r114;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        z0 := @parameter4: boolean;

        $r3 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope getMeasureScope()>();

        $r6 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider getItemProvider()>();

        i1 = interfaceinvoke $r6.<androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider: int getItemCount()>();

        if i1 <= 0 goto label003;

        $r11 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] getResolvedSlotSums()>();

        $i15 = lengthof $r11;

        if $i15 != 0 goto label001;

        $z11 = 1;

        goto label002;

     label001:
        $z11 = 0;

     label002:
        if $z11 == 0 goto label004;

     label003:
        $r7 = (androidx.compose.ui.layout.MeasureScope) $r3;

        $l4 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i5 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>($l4);

        $l6 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i7 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>($l6);

        $r8 = <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        r61 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $i5, $i7, null, $r9, 4, null);

        r62 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $l8 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i9 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>($l8);

        $l10 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i11 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>($l10);

        l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i9, $i11);

        $i12 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        i97 = neg $i12;

        $i13 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisAvailableSize()>();

        $i14 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getAfterContentPadding()>();

        i98 = $i13 + $i14;

        i99 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        i100 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getAfterContentPadding()>();

        $r10 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult;

        specialinvoke $r10.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: void <init>(int[],int[],float,androidx.compose.ui.layout.MeasureResult,boolean,boolean,int,java.util.List,long,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, 0.0F, r61, 0, 0, i1, r62, l2, i97, i98, i99, i100, null);

        return $r10;

     label004:
        i101 = i0;

        $i16 = lengthof r1;

        $r12 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "copyOf(this, size)");

        r63 = $r12;

        $i17 = lengthof r2;

        $r13 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r2, $i17);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "copyOf(this, size)");

        r4 = $r13;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void ensureIndicesInRange(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int[],int)>($r0, r63, i1);

        $i18 = neg i101;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i18);

        i102 = 0;

        $r14 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] getResolvedSlotSums()>();

        i103 = lengthof $r14;

        r64 = newarray (kotlin.collections.ArrayDeque)[i103];

     label005:
        if i102 >= i103 goto label006;

        i104 = i102;

        $r60 = new kotlin.collections.ArrayDeque;

        specialinvoke $r60.<kotlin.collections.ArrayDeque: void <init>()>();

        r64[i104] = $r60;

        i102 = i102 + 1;

        goto label005;

     label006:
        r5 = r64;

        $i19 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        $i20 = neg $i19;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i20);

        i105 = -1;

     label007:
        $z2 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: boolean measure$lambda-17$hasSpaceBeforeFirst(int[],int[],androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext)>(r63, r4, $r0);

        if $z2 == 0 goto label010;

        i106 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMinValue(int[])>(r4);

        $i92 = r63[i106];

        i107 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, $i92, i106);

        if i107 >= 0 goto label008;

        i105 = i106;

        goto label010;

     label008:
        $r56 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i93 = virtualinvoke $r56.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int getSpan(int)>(i107);

        if $i93 != -1 goto label009;

        $r59 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r59.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>(i107, i106);

     label009:
        $r57 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider getMeasuredItemProvider()>();

        r65 = virtualinvoke $r57.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem getAndMeasure(int,int)>(i107, i106);

        $r58 = r5[i106];

        virtualinvoke $r58.<kotlin.collections.ArrayDeque: void addFirst(java.lang.Object)>(r65);

        r63[i106] = i107;

        $i94 = r4[i106];

        $i95 = virtualinvoke r65.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i96 = $i94 + $i95;

        r4[i106] = $i96;

        goto label007;

     label010:
        $i21 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        i108 = neg $i21;

        $i22 = r4[0];

        if $i22 >= i108 goto label011;

        $i89 = r4[0];

        i101 = i101 + $i89;

        $i90 = r4[0];

        $i91 = i108 - $i90;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i91);

     label011:
        $i23 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i23);

        if i105 != -1 goto label012;

        $i109 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(int[],int)>(r63, 0);

        goto label013;

     label012:
        $i109 = i105;

     label013:
        i110 = $i109;

        if i110 == -1 goto label018;

        i111 = i110;

        $z10 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: boolean measure$lambda-17$misalignedStart(int[],androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int[],int)>(r63, $r0, r4, i111);

        if $z10 == 0 goto label018;

        if z0 == 0 goto label018;

        $r54 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r54.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void reset()>();

        i112 = 0;

        $i113 = lengthof r63;

        $r66 = newarray (int)[$i113];

        i114 = i101;

        r67 = $r0;

     label014:
        if i112 >= $i113 goto label015;

        $r66[i112] = -1;

        i112 = i112 + 1;

        goto label014;

     label015:
        i115 = 0;

        $i116 = lengthof r4;

        $r68 = newarray (int)[$i116];

        r69 = $r66;

        i117 = i114;

        r70 = r67;

     label016:
        if i115 >= $i116 goto label017;

        $i88 = r4[i111];

        $r68[i115] = $i88;

        i115 = i115 + 1;

        goto label016;

     label017:
        $r55 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measure(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int[],int[],boolean)>(r70, i117, r69, $r68, 0);

        return $r55;

     label018:
        $i118 = lengthof r1;

        $r72 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i118);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r72, "copyOf(this, size)");

        r73 = $r72;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void ensureIndicesInRange(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int[],int)>($r0, r73, i1);

        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r74 = r73;

        $i119 = 0;

        $i120 = lengthof r2;

        $r75 = newarray (int)[$i120];

     label019:
        if $i119 >= $i120 goto label020;

        i121 = $i119;

        $i85 = r2[i121];

        $i86 = $i85 - i101;

        $i87 = neg $i86;

        $r75[i121] = $i87;

        $i119 = $i119 + 1;

        goto label019;

     label020:
        r76 = $r75;

        $i24 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisAvailableSize()>();

        $i25 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getAfterContentPadding()>();

        $i26 = $i24 + $i25;

        $i122 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i26, 0);

        i123 = 0;

        $i124 = 0;

        i125 = lengthof r74;

     label021:
        if $i124 >= i125 goto label023;

        i126 = r74[$i124];

        $i81 = i123;

        i123 = i123 + 1;

        i127 = i126;

        i128 = $i81;

        if i127 < 0 goto label022;

        $r51 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider getMeasuredItemProvider()>();

        r78 = virtualinvoke $r51.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem getAndMeasure(int,int)>(i127, i128);

        $i82 = r76[i128];

        $i83 = virtualinvoke r78.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i84 = $i82 + $i83;

        r76[i128] = $i84;

        $r52 = r5[i128];

        virtualinvoke $r52.<kotlin.collections.ArrayDeque: void addLast(java.lang.Object)>(r78);

        $r53 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r53.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>(i127, i128);

     label022:
        $i124 = $i124 + 1;

        goto label021;

     label023:
        i129 = 0;

        $i130 = lengthof r76;

     label024:
        if i129 >= $i130 goto label028;

        i131 = r76[i129];

        i132 = i131;

        z16 = 0;

        if i132 > $i122 goto label025;

        $z17 = 1;

        goto label026;

     label025:
        $z17 = 0;

     label026:
        if $z17 == 0 goto label027;

        $z18 = 1;

        goto label029;

     label027:
        i129 = i129 + 1;

        goto label024;

     label028:
        $z18 = 0;

     label029:
        if $z18 != 0 goto label034;

        i133 = 0;

        $i134 = lengthof r5;

     label030:
        if i133 >= $i134 goto label032;

        r81 = r5[i133];

        r82 = r81;

        z20 = 0;

        $z9 = virtualinvoke r82.<kotlin.collections.ArrayDeque: boolean isEmpty()>();

        if $z9 != 0 goto label031;

        $z21 = 0;

        goto label033;

     label031:
        i133 = i133 + 1;

        goto label030;

     label032:
        $z21 = 1;

     label033:
        if $z21 == 0 goto label042;

     label034:
        $i135 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMinValue(int[])>(r76);

        $i27 = r74[$i135];

        $i136 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findNextItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, $i27, $i135);

        if $i136 < i1 goto label040;

        z22 = 0;

        i137 = 2147483647;

        z23 = 0;

        i138 = 0;

        i139 = 0;

        i140 = lengthof r74;

     label035:
        if i139 >= i140 goto label038;

        $i80 = i138;

        i138 = i138 + 1;

        i141 = r74[i139];

        i142 = $i80;

        if i142 == $i135 goto label037;

        i143 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findNextItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, i141, i142);

     label036:
        if i143 >= i1 goto label037;

        i137 = staticinvoke <java.lang.Math: int min(int,int)>(i143, i137);

        $r50 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r50.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>(i143, -1);

        i143 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findNextItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, i143, i142);

        goto label036;

     label037:
        i139 = i139 + 1;

        goto label035;

     label038:
        if i137 == 2147483647 goto label039;

        if z0 == 0 goto label039;

        $i78 = r1[$i135];

        $i79 = staticinvoke <java.lang.Math: int min(int,int)>($i78, i137);

        r1[$i135] = $i79;

        $r49 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measure(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int[],int[],boolean)>($r0, i0, r1, r2, 0);

        return $r49;

     label039:
        goto label042;

     label040:
        $i28 = r63[$i135];

        if $i28 != -1 goto label041;

        r63[$i135] = $i136;

     label041:
        $r16 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r16.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>($i136, $i135);

        $r17 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider getMeasuredItemProvider()>();

        r84 = virtualinvoke $r17.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem getAndMeasure(int,int)>($i136, $i135);

        $i29 = r76[$i135];

        $i30 = virtualinvoke r84.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i31 = $i29 + $i30;

        r76[$i135] = $i31;

        $r18 = r5[$i135];

        virtualinvoke $r18.<kotlin.collections.ArrayDeque: void addLast(java.lang.Object)>(r84);

        r74[$i135] = $i136;

        goto label023;

     label042:
        $i144 = 0;

        $i145 = lengthof r5;

     label043:
        if $i144 >= $i145 goto label052;

        r85 = r5[$i144];

        $i146 = r76[$i144];

        i147 = 0;

        $r43 = (java.util.List) r85;

        i148 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r43);

     label044:
        if -1 >= i148 goto label046;

        $r48 = virtualinvoke r85.<kotlin.collections.ArrayDeque: java.lang.Object get(int)>(i148);

        r86 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r48;

        $i75 = virtualinvoke r86.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i146 = $i146 - $i75;

        i147 = i148;

        $i76 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisSpacing()>();

        $i77 = i108 + $i76;

        if $i146 > $i77 goto label045;

        goto label046;

     label045:
        i148 = i148 + -1;

        goto label044;

     label046:
        i149 = 0;

        i150 = i147;

     label047:
        if i149 >= i150 goto label048;

        $r47 = virtualinvoke r85.<kotlin.collections.ArrayDeque: java.lang.Object removeFirst()>();

        r87 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r47;

        $i72 = r4[$i144];

        $i73 = virtualinvoke r87.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i74 = $i72 - $i73;

        r4[$i144] = $i74;

        i149 = i149 + 1;

        goto label047;

     label048:
        $r44 = (java.util.Collection) r85;

        $z8 = interfaceinvoke $r44.<java.util.Collection: boolean isEmpty()>();

        if $z8 != 0 goto label049;

        $z25 = 1;

        goto label050;

     label049:
        $z25 = 0;

     label050:
        if $z25 == 0 goto label051;

        $r45 = virtualinvoke r85.<kotlin.collections.ArrayDeque: java.lang.Object first()>();

        $r46 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r45;

        $i71 = virtualinvoke $r46.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getIndex()>();

        r63[$i144] = $i71;

     label051:
        $i144 = $i144 + 1;

        goto label043;

     label052:
        i152 = 0;

        $i153 = lengthof r76;

     label053:
        if i152 >= $i153 goto label057;

        i154 = r76[i152];

        i155 = i154;

        z27 = 0;

        $i70 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisAvailableSize()>();

        if i155 >= $i70 goto label054;

        $z28 = 1;

        goto label055;

     label054:
        $z28 = 0;

     label055:
        if $z28 != 0 goto label056;

        $z29 = 0;

        goto label058;

     label056:
        i152 = i152 + 1;

        goto label053;

     label057:
        $z29 = 1;

     label058:
        if $z29 == 0 goto label075;

        $i156 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMaxValue(int[])>(r76);

        $i59 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisAvailableSize()>();

        $i60 = r76[$i156];

        $i157 = $i59 - $i60;

        $i61 = neg $i157;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i61);

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r76, $i157);

     label059:
        r89 = r4;

        i158 = 0;

        i159 = lengthof r89;

     label060:
        if i158 >= i159 goto label064;

        i160 = r89[i158];

        i161 = i160;

        $i69 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        if i161 >= $i69 goto label061;

        $z32 = 1;

        goto label062;

     label061:
        $z32 = 0;

     label062:
        if $z32 == 0 goto label063;

        $z33 = 1;

        goto label065;

     label063:
        i158 = i158 + 1;

        goto label060;

     label064:
        $z33 = 0;

     label065:
        if $z33 == 0 goto label074;

        i162 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMinValue(int[])>(r4);

        $i64 = r63[i162];

        if $i64 != -1 goto label066;

        $i163 = i1;

        goto label067;

     label066:
        $i163 = r63[i162];

     label067:
        i164 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, $i163, i162);

        if i164 >= 0 goto label073;

        $z7 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: boolean measure$lambda-17$misalignedStart(int[],androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int[],int)>(r63, $r0, r4, i162);

        if $z7 == 0 goto label072;

        if z0 == 0 goto label072;

        $r41 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r41.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void reset()>();

        i165 = 0;

        i166 = lengthof r63;

        r90 = newarray (int)[i166];

        i167 = i101;

        r91 = $r0;

     label068:
        if i165 >= i166 goto label069;

        r90[i165] = -1;

        i165 = i165 + 1;

        goto label068;

     label069:
        i168 = 0;

        i169 = lengthof r4;

        r92 = newarray (int)[i169];

        r93 = r90;

        i170 = i167;

        r94 = r91;

     label070:
        if i168 >= i169 goto label071;

        $i68 = r4[i162];

        r92[i168] = $i68;

        i168 = i168 + 1;

        goto label070;

     label071:
        $r42 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult measure(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int[],int[],boolean)>(r94, i170, r93, r92, 0);

        return $r42;

     label072:
        goto label074;

     label073:
        $r38 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        virtualinvoke $r38.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>(i164, i162);

        $r39 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider getMeasuredItemProvider()>();

        r95 = virtualinvoke $r39.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureProvider: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem getAndMeasure(int,int)>(i164, i162);

        $r40 = r5[i162];

        virtualinvoke $r40.<kotlin.collections.ArrayDeque: void addFirst(java.lang.Object)>(r95);

        $i65 = r4[i162];

        $i66 = virtualinvoke r95.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i67 = $i65 + $i66;

        r4[i162] = $i67;

        r63[i162] = i164;

        goto label059;

     label074:
        i101 = i101 + $i157;

        i171 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int indexOfMinValue(int[])>(r4);

        $i62 = r4[i171];

        if $i62 >= 0 goto label075;

        $i172 = r4[i171];

        i101 = i101 + $i172;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r76, $i172);

        $i63 = neg $i172;

        staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: void offsetBy(int[],int)>(r4, $i63);

     label075:
        $r96 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState getState()>();

        $f1 = virtualinvoke $r96.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float getScrollToBeConsumed$foundation_release()>();

        $i173 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f1);

        $i174 = staticinvoke <kotlin.math.MathKt: int getSign(int)>($i173);

        $i175 = staticinvoke <kotlin.math.MathKt: int getSign(int)>(i101);

        if $i174 != $i175 goto label076;

        $r37 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState getState()>();

        $f0 = virtualinvoke $r37.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float getScrollToBeConsumed$foundation_release()>();

        $i56 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f0);

        $i57 = staticinvoke <java.lang.Math: int abs(int)>($i56);

        $i58 = staticinvoke <java.lang.Math: int abs(int)>(i101);

        if $i57 < $i58 goto label076;

        $f2 = (float) i101;

        goto label077;

     label076:
        $r19 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState getState()>();

        $f2 = virtualinvoke $r19.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState: float getScrollToBeConsumed$foundation_release()>();

     label077:
        $f3 = $f2;

        $i176 = lengthof r4;

        $r98 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r4, $i176);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r98, "copyOf(this, size)");

        r99 = $r98;

        i177 = 0;

        i178 = lengthof r99;

     label078:
        if i177 >= i178 goto label079;

        i179 = r99[i177];

        i180 = i177;

        r100 = r99;

        z35 = 0;

        i181 = neg i179;

        r100[i180] = i181;

        i177 = i177 + 1;

        goto label078;

     label079:
        $i32 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        if $i32 <= 0 goto label085;

        i182 = 0;

        $i183 = lengthof r5;

     label080:
        if i182 >= $i183 goto label085;

        r102 = r5[i182];

        i184 = 0;

        i185 = virtualinvoke r102.<kotlin.collections.ArrayDeque: int size()>();

     label081:
        if i184 >= i185 goto label084;

        $r32 = virtualinvoke r102.<kotlin.collections.ArrayDeque: java.lang.Object get(int)>(i184);

        $r33 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r32;

        i186 = virtualinvoke $r33.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $r34 = (java.util.List) r102;

        $i49 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r34);

        if i184 == $i49 goto label082;

        $i50 = r4[i182];

        if $i50 == 0 goto label082;

        $i51 = r4[i182];

        if $i51 < i186 goto label082;

        $i52 = r4[i182];

        $i53 = $i52 - i186;

        r4[i182] = $i53;

        $i54 = i184 + 1;

        $r35 = virtualinvoke r102.<kotlin.collections.ArrayDeque: java.lang.Object get(int)>($i54);

        $r36 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r35;

        $i55 = virtualinvoke $r36.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getIndex()>();

        r63[i182] = $i55;

        goto label083;

     label082:
        goto label084;

     label083:
        i184 = i184 + 1;

        goto label081;

     label084:
        i182 = i182 + 1;

        goto label080;

     label085:
        $z3 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical()>();

        if $z3 == 0 goto label086;

        $l48 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i188 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>($l48);

        goto label087;

     label086:
        $l33 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i34 = staticinvoke <kotlin.collections.ArraysKt: int maxOrThrow(int[])>(r76);

        $i188 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: int constrainWidth-K40F9xA(long,int)>($l33, $i34);

     label087:
        i189 = $i188;

        $z4 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: boolean isVertical()>();

        if $z4 == 0 goto label088;

        $l46 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i47 = staticinvoke <kotlin.collections.ArraysKt: int maxOrThrow(int[])>(r76);

        $i190 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: int constrainHeight-K40F9xA(long,int)>($l46, $i47);

        goto label089;

     label088:
        $l35 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: long getConstraints-msEJaDk()>();

        $i190 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>($l35);

     label089:
        $i191 = $i190;

        r103 = r5;

        i192 = 0;

        i193 = 0;

        $i194 = lengthof r103;

     label090:
        if i193 >= $i194 goto label091;

        r104 = r103[i193];

        r105 = r104;

        i195 = i192;

        i196 = virtualinvoke r105.<kotlin.collections.ArrayDeque: int size()>();

        i192 = i195 + i196;

        i193 = i193 + 1;

        goto label090;

     label091:
        i197 = i192;

        z37 = 0;

        $r20 = new androidx.compose.runtime.collection.MutableVector;

        $r21 = newarray (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem)[i197];

        specialinvoke $r20.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r21, 0);

        r106 = $r20;

     label092:
        r107 = r5;

        z38 = 0;

        i198 = 0;

        $i199 = lengthof r107;

     label093:
        if i198 >= $i199 goto label097;

        r108 = r107[i198];

        r109 = r108;

        $r31 = (java.util.Collection) r109;

        $z6 = interfaceinvoke $r31.<java.util.Collection: boolean isEmpty()>();

        if $z6 != 0 goto label094;

        $z40 = 1;

        goto label095;

     label094:
        $z40 = 0;

     label095:
        if $z40 == 0 goto label096;

        $z41 = 1;

        goto label098;

     label096:
        i198 = i198 + 1;

        goto label093;

     label097:
        $z41 = 0;

     label098:
        if $z41 == 0 goto label106;

        r110 = r5;

        z42 = 0;

        $i200 = -1;

        i201 = 2147483647;

        i202 = 0;

        $i203 = lengthof r110;

     label099:
        if i202 >= $i203 goto label103;

        r111 = r110[i202];

        $r29 = virtualinvoke r111.<kotlin.collections.ArrayDeque: java.lang.Object firstOrNull()>();

        $r30 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r29;

        if $r30 == null goto label100;

        $i204 = virtualinvoke $r30.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getIndex()>();

        goto label101;

     label100:
        $i204 = 2147483647;

     label101:
        i205 = $i204;

        if i201 <= i205 goto label102;

        i201 = i205;

        $i200 = i202;

     label102:
        i202 = i202 + 1;

        goto label099;

     label103:
        i206 = $i200;

        $r26 = r5[i206];

        $r27 = virtualinvoke $r26.<kotlin.collections.ArrayDeque: java.lang.Object removeFirst()>();

        r112 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem) $r27;

        i207 = r99[i206];

        if i206 != 0 goto label104;

        $i208 = 0;

        goto label105;

     label104:
        $r28 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int[] getResolvedSlotSums()>();

        $i39 = i206 - 1;

        $i40 = $r28[$i39];

        $i41 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getCrossAxisSpacing()>();

        $i42 = $i41 * i206;

        $i208 = $i40 + $i42;

     label105:
        r113 = r106;

        r114 = virtualinvoke r112.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridPositionedItem position(int,int,int)>(i206, i207, $i208);

        virtualinvoke r113.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r114);

        $i43 = r99[i206];

        $i44 = virtualinvoke r112.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasuredItem: int getSizeWithSpacings()>();

        $i45 = $i43 + $i44;

        r99[i206] = $i45;

        goto label092;

     label106:
        $i36 = r63[0];

        if $i36 != 0 goto label107;

        $i38 = r4[0];

        if $i38 <= 0 goto label108;

     label107:
        $z45 = 1;

        goto label109;

     label108:
        $z45 = 0;

     label109:
        z46 = $z45;

        r115 = r76;

        i209 = 0;

        i210 = lengthof r115;

     label110:
        if i209 >= i210 goto label114;

        i211 = r115[i209];

        $i37 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisAvailableSize()>();

        if i211 <= $i37 goto label111;

        $z49 = 1;

        goto label112;

     label111:
        $z49 = 0;

     label112:
        if $z49 == 0 goto label113;

        $z50 = 1;

        goto label115;

     label113:
        i209 = i209 + 1;

        goto label110;

     label114:
        $z50 = 0;

     label115:
        z51 = $z50;

        $r23 = (androidx.compose.ui.layout.MeasureScope) $r3;

        $r22 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$13;

        specialinvoke $r22.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt$measure$1$13: void <init>(androidx.compose.runtime.collection.MutableVector)>(r106);

        $r24 = (kotlin.jvm.functions.Function1) $r22;

        r116 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r23, i189, $i191, null, $r24, 4, null);

        $r117 = virtualinvoke r106.<androidx.compose.runtime.collection.MutableVector: java.util.List asMutableList()>();

        l3 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i189, $i191);

        $i212 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getBeforeContentPadding()>();

        i213 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getAfterContentPadding()>();

        $r25 = new androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult;

        specialinvoke $r25.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: void <init>(int[],int[],float,androidx.compose.ui.layout.MeasureResult,boolean,boolean,int,java.util.List,long,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r63, r4, $f3, r116, z51, z46, i1, $r117, l3, i108, $i122, $i212, i213, null);

        return $r25;
    }

    private static final void offsetBy(int[], int)
    {
        int[] $r0;
        int i0, i1, $i2, $i3, i4;

        $r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i4 = 0;

        i1 = lengthof $r0;

     label1:
        if i4 >= i1 goto label2;

        $i2 = $r0[i4];

        $i3 = $i2 + i0;

        $r0[i4] = $i3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static final int indexOfMinValue(int[])
    {
        int[] $r0;
        int i0, $i1, i2, i3, i4;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i2 = -1;

        i3 = 2147483647;

        i4 = 0;

        i0 = lengthof $r0;

     label1:
        if i4 >= i0 goto label3;

        $i1 = $r0[i4];

        if i3 <= $i1 goto label2;

        i3 = $r0[i4];

        i2 = i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return i2;
    }

    private static final int indexOfMinBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1, i2, i3, i4;
        java.lang.Object $r2, $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        i2 = -1;

        i3 = 2147483647;

        i4 = 0;

        i0 = lengthof $r0;

     label1:
        if i4 >= i0 goto label3;

        $r2 = $r0[i4];

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        if i3 <= i1 goto label2;

        i3 = i1;

        i2 = i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return i2;
    }

    private static final int indexOfMaxValue(int[])
    {
        int[] $r0;
        int i0, $i1, i2, i3, i4;

        $r0 := @parameter0: int[];

        i2 = -1;

        i3 = -2147483648;

        i4 = 0;

        i0 = lengthof $r0;

     label1:
        if i4 >= i0 goto label3;

        $i1 = $r0[i4];

        if i3 >= $i1 goto label2;

        i3 = $r0[i4];

        i2 = i4;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return i2;
    }

    private static final int[] transform(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, $i2, i3;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        i3 = 0;

        i0 = lengthof $r0;

     label1:
        if i3 >= i0 goto label2;

        $i1 = $r0[i3];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r0[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final void ensureIndicesInRange(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext, int[], int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r0;
        int[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r2;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        $i2 = lengthof r1;

        i7 = $i2 + -1;

        if 0 > i7 goto label5;

     label1:
        i1 = i7;

        i7 = i7 + -1;

     label2:
        $i8 = r1[i1];

        if $i8 < i0 goto label3;

        $i5 = r1[i1];

        $i6 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r0, $i5, i1);

        r1[i1] = $i6;

        goto label2;

     label3:
        $i3 = r1[i1];

        if $i3 == -1 goto label4;

        $r2 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i4 = r1[i1];

        virtualinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: void setSpan(int,int)>($i4, i1);

     label4:
        if 0 <= i7 goto label1;

     label5:
        return;
    }

    private static final int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r0;
        int i0, i1, $i2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i2 = virtualinvoke $r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findPreviousItemIndex(int,int)>(i0, i1);

        return $i2;
    }

    private static final int findNextItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext, int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r0;
        int i0, i1, $i2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r1;

        $r0 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke $r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i2 = virtualinvoke $r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int findNextItemIndex(int,int)>(i0, i1);

        return $i2;
    }

    private static final boolean measure$lambda-17$hasSpaceBeforeFirst(int[], int[], androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext)
    {
        int[] r0, r1;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r2;
        int i0, i1, i2, $i3, $i4, i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        $r2 := @parameter2: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        i5 = 0;

        i0 = lengthof r0;

     label1:
        if i5 >= i0 goto label3;

        i1 = r0[i5];

        i2 = r1[i5];

        $i3 = virtualinvoke $r2.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: int getMainAxisSpacing()>();

        $i4 = neg $i3;

        if i2 >= $i4 goto label2;

        if i1 <= 0 goto label2;

        return 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static final boolean measure$lambda-17$misalignedStart(int[], androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext, int[], int)
    {
        int[] r0, r2;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i13;
        kotlin.ranges.IntRange r3;
        boolean z0, $z2, $z3, $z4, $z6, $z7, $z9, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        kotlin.collections.IntIterator $r4, $r6;
        java.util.Collection $r5, $r7;
        java.lang.Iterable $r8, $r10;
        java.util.Iterator $r9, r11;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans $r12;

        r0 := @parameter0: int[];

        $r1 := @parameter1: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext;

        r2 := @parameter2: int[];

        i0 := @parameter3: int;

        r3 = staticinvoke <kotlin.collections.ArraysKt: kotlin.ranges.IntRange getIndices(int[])>(r0);

        $r8 = (java.lang.Iterable) r3;

        $z2 = $r8 instanceof java.util.Collection;

        if $z2 == 0 goto label01;

        $r7 = (java.util.Collection) $r8;

        $z4 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label01;

        $z6 = 0;

        goto label06;

     label01:
        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z7 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label05;

        $r6 = (kotlin.collections.IntIterator) $r9;

        i9 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        i10 = i9;

        $i5 = r0[i10];

        $i6 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r1, $i5, i10);

        if $i6 != -1 goto label03;

        $i8 = r2[i10];

        $i7 = r2[i0];

        if $i8 == $i7 goto label03;

        $z9 = 1;

        goto label04;

     label03:
        $z9 = 0;

     label04:
        if $z9 == 0 goto label02;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z0 = $z6;

        $r10 = (java.lang.Iterable) r3;

        $z11 = $r10 instanceof java.util.Collection;

        if $z11 == 0 goto label07;

        $r5 = (java.util.Collection) $r10;

        $z3 = interfaceinvoke $r5.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label07;

        $z12 = 0;

        goto label12;

     label07:
        r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z13 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label11;

        $r4 = (kotlin.collections.IntIterator) r11;

        i11 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = r0[i11];

        $i2 = staticinvoke <androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureKt: int findPreviousItemIndex(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext,int,int)>($r1, $i1, i11);

        if $i2 == -1 goto label09;

        $i4 = r2[i11];

        $i3 = r2[i0];

        if $i4 < $i3 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        if $z14 == 0 goto label08;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        $z15 = $z12;

        $r12 = virtualinvoke $r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureContext: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans getSpans()>();

        $i13 = virtualinvoke $r12.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridSpans: int getSpan(int)>(0);

        if $i13 == 0 goto label13;

        $z16 = 1;

        goto label14;

     label13:
        $z16 = 0;

     label14:
        if z0 != 0 goto label15;

        if $z15 != 0 goto label15;

        if $z16 == 0 goto label16;

     label15:
        $z17 = 1;

        goto label17;

     label16:
        $z17 = 0;

     label17:
        return $z17;
    }

