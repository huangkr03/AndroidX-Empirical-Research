androidx.media3.session.SequencedFutureManager
<androidx.media3.session.SequencedFutureManager: java.lang.String TAG>
<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>
<androidx.media3.session.SequencedFutureManager: int nextSequenceNumber>
<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>
<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback>
<androidx.media3.session.SequencedFutureManager: android.os.Handler releaseCallbackHandler>
<androidx.media3.session.SequencedFutureManager: boolean isReleased>
    public void <init>()
    {
        androidx.media3.session.SequencedFutureManager r0;
        java.lang.Object $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock> = $r1;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap> = $r2;

        return;
    }

    public int obtainNextSequenceNumber()
    {
        androidx.media3.session.SequencedFutureManager r0;
        java.lang.Object r1, $r2;
        int $i0, $i1;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        $r2 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        $i0 = r0.<androidx.media3.session.SequencedFutureManager: int nextSequenceNumber>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.session.SequencedFutureManager: int nextSequenceNumber> = $i1;

        exitmonitor r1;

        return $i0;
    }

    public androidx.media3.session.SequencedFutureManager$SequencedFuture createSequencedFuture(java.lang.Object)
    {
        androidx.media3.session.SequencedFutureManager r0;
        java.lang.Object r1, r2, $r5;
        int i0;
        androidx.media3.session.SequencedFutureManager$SequencedFuture r3;
        java.lang.Throwable r4, $r10;
        boolean $z0;
        androidx.collection.ArrayMap $r6;
        java.lang.Integer $r7;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        r1 := @parameter0: java.lang.Object;

        $r5 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        i0 = virtualinvoke r0.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

        r3 = staticinvoke <androidx.media3.session.SequencedFutureManager$SequencedFuture: androidx.media3.session.SequencedFutureManager$SequencedFuture create(int,java.lang.Object)>(i0, r1);

        $z0 = r0.<androidx.media3.session.SequencedFutureManager: boolean isReleased>;

        if $z0 == 0 goto label2;

        virtualinvoke r3.<androidx.media3.session.SequencedFutureManager$SequencedFuture: void setWithTheValueOfResultWhenClosed()>();

        goto label3;

     label2:
        $r6 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r3);

     label3:
        exitmonitor r2;

     label4:
        return r3;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFutureResult(int, java.lang.Object)
    {
        androidx.media3.session.SequencedFutureManager r0;
        int i0;
        java.lang.Object r1, r2, $r5, $r8, $r10, $r15;
        androidx.media3.session.SequencedFutureManager$SequencedFuture r3;
        java.lang.Throwable r4, $r22;
        androidx.collection.ArrayMap $r6, $r9;
        java.lang.Integer $r7;
        boolean $z0;
        java.lang.Class $r11, $r12, $r16, $r19;
        java.lang.StringBuilder $r13, $r14, $r17, $r18, $r20;
        java.lang.String $r21;
        java.lang.Runnable $r23;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r5 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        r3 = (androidx.media3.session.SequencedFutureManager$SequencedFuture) $r8;

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object getResultWhenClosed()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r11 != $r12 goto label2;

        virtualinvoke r3.<androidx.media3.session.SequencedFutureManager$SequencedFuture: boolean set(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type mismatch, expected ");

        $r15 = virtualinvoke r3.<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object getResultWhenClosed()>();

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but was ");

        $r19 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("SequencedFutureManager", $r21);

     label3:
        $r23 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback>;

        if $r23 == null goto label4;

        $r9 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        $z0 = virtualinvoke $r9.<androidx.collection.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        virtualinvoke r0.<androidx.media3.session.SequencedFutureManager: void release()>();

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void release()
    {
        androidx.media3.session.SequencedFutureManager r0;
        java.util.ArrayList r1, $r3;
        java.lang.Object $r2, $r8, $r10, r14;
        androidx.collection.ArrayMap $r4, $r6;
        java.util.Collection $r5;
        java.lang.Runnable $r7, $r11;
        boolean $z0;
        android.os.Handler $r9, $r12;
        java.lang.Throwable $r13, r15;
        java.util.Iterator r16;
        androidx.media3.session.SequencedFutureManager$SequencedFuture r17;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        $r2 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>;

        r14 = $r2;

        entermonitor $r2;

     label1:
        r0.<androidx.media3.session.SequencedFutureManager: boolean isReleased> = 1;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        $r5 = virtualinvoke $r4.<androidx.collection.ArrayMap: java.util.Collection values()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r1 = $r3;

        $r6 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        virtualinvoke $r6.<androidx.collection.ArrayMap: void clear()>();

        $r7 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback>;

        if $r7 == null goto label2;

        $r9 = r0.<androidx.media3.session.SequencedFutureManager: android.os.Handler releaseCallbackHandler>;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r12 = (android.os.Handler) $r10;

        $r11 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback>;

        virtualinvoke $r12.<android.os.Handler: boolean post(java.lang.Runnable)>($r11);

        r0.<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback> = null;

        r0.<androidx.media3.session.SequencedFutureManager: android.os.Handler releaseCallbackHandler> = null;

     label2:
        exitmonitor r14;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r15 = $r13;

        exitmonitor r14;

     label5:
        throw r15;

     label6:
        r16 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (androidx.media3.session.SequencedFutureManager$SequencedFuture) $r8;

        virtualinvoke r17.<androidx.media3.session.SequencedFutureManager$SequencedFuture: void setWithTheValueOfResultWhenClosed()>();

        goto label7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void lazyRelease(long, java.lang.Runnable)
    {
        androidx.media3.session.SequencedFutureManager r0;
        long l0;
        java.lang.Runnable r1, $r7;
        java.lang.Object r2, $r5;
        android.os.Handler r3;
        java.lang.Throwable r4, $r8;
        androidx.collection.ArrayMap $r6;
        boolean $z0;

        r0 := @this: androidx.media3.session.SequencedFutureManager;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.Runnable;

        $r5 = r0.<androidx.media3.session.SequencedFutureManager: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        r3 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.session.SequencedFutureManager: android.os.Handler releaseCallbackHandler> = r3;

        r0.<androidx.media3.session.SequencedFutureManager: java.lang.Runnable pendingLazyReleaseCallback> = r1;

        $r6 = r0.<androidx.media3.session.SequencedFutureManager: androidx.collection.ArrayMap seqToFutureMap>;

        $z0 = virtualinvoke $r6.<androidx.collection.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.media3.session.SequencedFutureManager: void release()>();

        goto label3;

     label2:
        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.SequencedFutureManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.media3.session.SequencedFutureManager: void release()>, methodtype: void __METHODTYPE__());

        virtualinvoke r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, l0);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

androidx.media3.session.SequencedFutureManager$SequencedFuture
<androidx.media3.session.SequencedFutureManager$SequencedFuture: int sequenceNumber>
<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object resultWhenClosed>
    private void <init>(int, java.lang.Object)
    {
        androidx.media3.session.SequencedFutureManager$SequencedFuture r0;
        int i0;
        java.lang.Object r1;

        r0 := @this: androidx.media3.session.SequencedFutureManager$SequencedFuture;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void <init>()>();

        r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: int sequenceNumber> = i0;

        r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object resultWhenClosed> = r1;

        return;
    }

    public boolean set(java.lang.Object)
    {
        androidx.media3.session.SequencedFutureManager$SequencedFuture r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.SequencedFutureManager$SequencedFuture;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)>(r1);

        return $z0;
    }

    public void setWithTheValueOfResultWhenClosed()
    {
        androidx.media3.session.SequencedFutureManager$SequencedFuture r0;
        java.lang.Object $r1;

        r0 := @this: androidx.media3.session.SequencedFutureManager$SequencedFuture;

        $r1 = r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object resultWhenClosed>;

        virtualinvoke r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: boolean set(java.lang.Object)>($r1);

        return;
    }

    public int getSequenceNumber()
    {
        androidx.media3.session.SequencedFutureManager$SequencedFuture r0;
        int $i0;

        r0 := @this: androidx.media3.session.SequencedFutureManager$SequencedFuture;

        $i0 = r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: int sequenceNumber>;

        return $i0;
    }

    public java.lang.Object getResultWhenClosed()
    {
        androidx.media3.session.SequencedFutureManager$SequencedFuture r0;
        java.lang.Object $r1;

        r0 := @this: androidx.media3.session.SequencedFutureManager$SequencedFuture;

        $r1 = r0.<androidx.media3.session.SequencedFutureManager$SequencedFuture: java.lang.Object resultWhenClosed>;

        return $r1;
    }

    public static androidx.media3.session.SequencedFutureManager$SequencedFuture create(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r0;
        androidx.media3.session.SequencedFutureManager$SequencedFuture $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $r1 = new androidx.media3.session.SequencedFutureManager$SequencedFuture;

        specialinvoke $r1.<androidx.media3.session.SequencedFutureManager$SequencedFuture: void <init>(int,java.lang.Object)>(i0, r0);

        return $r1;
    }

