androidx.media.AudioManagerCompat
<androidx.media.AudioManagerCompat: java.lang.String TAG>
<androidx.media.AudioManagerCompat: int AUDIOFOCUS_GAIN>
<androidx.media.AudioManagerCompat: int AUDIOFOCUS_GAIN_TRANSIENT>
<androidx.media.AudioManagerCompat: int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK>
<androidx.media.AudioManagerCompat: int AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE>
    public static int requestAudioFocus(android.media.AudioManager, androidx.media.AudioFocusRequestCompat)
    {
        android.media.AudioManager r0;
        androidx.media.AudioFocusRequestCompat r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.AudioManager$OnAudioFocusChangeListener $r2;
        androidx.media.AudioAttributesCompat $r3;
        android.media.AudioFocusRequest $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @parameter0: android.media.AudioManager;

        r1 := @parameter1: androidx.media.AudioFocusRequestCompat;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AudioManager must not be null");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AudioFocusRequestCompat must not be null");

        throw $r5;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label3;

        $r4 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: android.media.AudioFocusRequest getAudioFocusRequest()>();

        $i4 = staticinvoke <androidx.media.AudioManagerCompat$Api26Impl: int requestAudioFocus(android.media.AudioManager,android.media.AudioFocusRequest)>(r0, $r4);

        return $i4;

     label3:
        $r2 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener()>();

        $r3 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: androidx.media.AudioAttributesCompat getAudioAttributesCompat()>();

        $i1 = virtualinvoke $r3.<androidx.media.AudioAttributesCompat: int getLegacyStreamType()>();

        $i2 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: int getFocusGain()>();

        $i3 = virtualinvoke r0.<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>($r2, $i1, $i2);

        return $i3;
    }

    public static int abandonAudioFocusRequest(android.media.AudioManager, androidx.media.AudioFocusRequestCompat)
    {
        android.media.AudioManager r0;
        androidx.media.AudioFocusRequestCompat r1;
        int $i0, $i1, $i2;
        android.media.AudioManager$OnAudioFocusChangeListener $r2;
        android.media.AudioFocusRequest $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @parameter0: android.media.AudioManager;

        r1 := @parameter1: androidx.media.AudioFocusRequestCompat;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AudioManager must not be null");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AudioFocusRequestCompat must not be null");

        throw $r4;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label3;

        $r3 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: android.media.AudioFocusRequest getAudioFocusRequest()>();

        $i2 = staticinvoke <androidx.media.AudioManagerCompat$Api26Impl: int abandonAudioFocusRequest(android.media.AudioManager,android.media.AudioFocusRequest)>(r0, $r3);

        return $i2;

     label3:
        $r2 = virtualinvoke r1.<androidx.media.AudioFocusRequestCompat: android.media.AudioManager$OnAudioFocusChangeListener getOnAudioFocusChangeListener()>();

        $i1 = virtualinvoke r0.<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>($r2);

        return $i1;
    }

    public static int getStreamMaxVolume(android.media.AudioManager, int)
    {
        android.media.AudioManager r0;
        int i0, $i1;

        r0 := @parameter0: android.media.AudioManager;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.media.AudioManager: int getStreamMaxVolume(int)>(i0);

        return $i1;
    }

    public static int getStreamMinVolume(android.media.AudioManager, int)
    {
        android.media.AudioManager r0;
        int i0, $i1, $i2;

        r0 := @parameter0: android.media.AudioManager;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $i2 = staticinvoke <androidx.media.AudioManagerCompat$Api28Impl: int getStreamMinVolume(android.media.AudioManager,int)>(r0, i0);

        return $i2;

     label1:
        return 0;
    }

    public static boolean isVolumeFixed(android.media.AudioManager)
    {
        android.media.AudioManager r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.media.AudioManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z0 = staticinvoke <androidx.media.AudioManagerCompat$Api21Impl: boolean isVolumeFixed(android.media.AudioManager)>(r0);

        return $z0;

     label1:
        return 0;
    }

    private void <init>()
    {
        androidx.media.AudioManagerCompat r0;

        r0 := @this: androidx.media.AudioManagerCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

