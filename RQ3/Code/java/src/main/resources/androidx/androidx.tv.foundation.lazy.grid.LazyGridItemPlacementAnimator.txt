androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int firstVisibleIndex>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound>
    public void <init>(kotlinx.coroutines.CoroutineScope, boolean)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        kotlinx.coroutines.CoroutineScope r1;
        boolean z0;
        java.util.LinkedHashMap $r2;
        java.util.Map $r3, $r4;
        java.util.LinkedHashSet $r5;
        java.util.ArrayList $r6, $r8, $r10, $r12;
        java.util.List $r7, $r9, $r11, $r13;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope> = r1;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical> = z0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap> = $r3;

        $r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r4;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = (java.util.List) $r6;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = (java.util.List) $r8;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = (java.util.List) $r10;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = (java.util.List) $r12;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound> = $r13;

        return;
    }

    public final void onMeasured(int, int, int, java.util.List, androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider, androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, i33, $i34, $i35, $i36, $i37, $i38, i40, $i41, $i43, i44, i45, $i46, $i47, i48, $i49, $i50, $i51, $i52, i53, i54, $i55, $i56, i57, $i58, i59, $i61, i62, i63, $i64, $i65, i66, $i67, $i68, $i69, $i70, $i71, i72, i73, $i74, $i75, i76, $i77, $i78;
        java.util.List r1, $r15, $r16, $r17, $r18, $r28, $r31, $r32, $r56, $r57, r70, $r71, $r77, $r78, $r89, $r92, $r93, $r101, $r102;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider r2;
        androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider r3;
        java.lang.Object r4, r5, $r7, $r25, $r27, $r35, $r43, $r45, $r48, $r49, $r50, $r51, $r53, r61, r62, r66, r72, $r76, r79, $r83, r86, r94, $r97, $r98, r103, $r106, $r107;
        androidx.tv.foundation.lazy.grid.PlaceableInfo r6;
        boolean z3, $z4, $z6, $z9, $z10, $z13, $z14, $z15, $z17, $z20, $z21, $z26, z27, z30, z31, z32, z33, z34, z35, z36, z37, z38, z39, $z40, z41, z42, z43, z44, z45, z46;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem $r8, r63, $r67, r73, r80, $r100, $r109;
        java.util.Map $r9, $r10, $r24, $r26, $r44, $r47, $r52, $r59, $r64, $r75, $r82, $r90, $r96, $r105;
        java.util.LinkedHashSet $r11, $r14, $r19, $r42;
        java.util.Set $r12;
        java.util.Collection $r13;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2 $r20;
        java.util.Comparator $r21, $r23, $r38, $r41;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2 $r22;
        androidx.compose.ui.unit.Constraints$Companion $r30, $r33;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1 $r37;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1 $r40;
        long $l27, $l39, l42, $l60;
        androidx.tv.foundation.lazy.grid.ItemInfo $r54, r68, r74, r81, r87, r99, r108;
        java.lang.Integer r69, r88;
        java.lang.Iterable $r84;
        java.util.Iterator $r85;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem $r91, r95, r104;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider;

        r3 := @parameter5: androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "positionedItems");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "itemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "spanLayoutProvider");

        i33 = 0;

        $i34 = interfaceinvoke r1.<java.util.List: int size()>();

     label01:
        if i33 >= $i34 goto label03;

        r61 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i33);

        r62 = r61;

        r63 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r62;

        $z21 = virtualinvoke r63.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: boolean getHasAnimations()>();

        if $z21 == 0 goto label02;

        $z26 = 1;

        goto label04;

     label02:
        i33 = i33 + 1;

        goto label01;

     label03:
        $z26 = 0;

     label04:
        if $z26 != 0 goto label05;

        $r59 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $z20 = interfaceinvoke $r59.<java.util.Map: boolean isEmpty()>();

        if $z20 == 0 goto label05;

        virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void reset()>();

        return;

     label05:
        $i35 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int firstVisibleIndex>;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>(r1);

        $r8 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) $r7;

        if $r8 == null goto label06;

        $i36 = virtualinvoke $r8.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        goto label07;

     label06:
        $i36 = 0;

     label07:
        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int firstVisibleIndex> = $i36;

        $r64 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>;

        $r9 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider: java.util.Map getKeyToIndexMap()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r9;

        $z4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z4 == 0 goto label08;

        $i37 = i2;

        goto label09;

     label08:
        $i37 = i1;

     label09:
        $i38 = $i37;

        $l39 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: long toOffset-Bjo55l4(int)>(i0);

        $r11 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys>;

        $r10 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r12 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r13 = (java.util.Collection) $r12;

        virtualinvoke $r11.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r13);

        z27 = 0;

        i40 = 0;

        $i41 = interfaceinvoke r1.<java.util.List: int size()>();

     label10:
        if i40 >= $i41 goto label16;

        r66 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i40);

        $r67 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r66;

        $r42 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys>;

        $r43 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        virtualinvoke $r42.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r43);

        $z17 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: boolean getHasAnimations()>();

        if $z17 == 0 goto label14;

        $r47 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r48 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r49 = interfaceinvoke $r47.<java.util.Map: java.lang.Object get(java.lang.Object)>($r48);

        r68 = (androidx.tv.foundation.lazy.grid.ItemInfo) $r49;

        if r68 != null goto label13;

        $r50 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r51 = interfaceinvoke $r64.<java.util.Map: java.lang.Object get(java.lang.Object)>($r50);

        r69 = (java.lang.Integer) $r51;

        if r69 == null goto label12;

        $i30 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getIndex()>();

        $i31 = virtualinvoke r69.<java.lang.Integer: int intValue()>();

        if $i30 == $i31 goto label12;

        $i32 = virtualinvoke r69.<java.lang.Integer: int intValue()>();

        if $i32 >= $i35 goto label11;

        $r57 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound>;

        interfaceinvoke $r57.<java.util.List: boolean add(java.lang.Object)>($r67);

        goto label15;

     label11:
        $r56 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound>;

        interfaceinvoke $r56.<java.util.List: boolean add(java.lang.Object)>($r67);

        goto label15;

     label12:
        $r52 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r53 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r54 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo$default(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator,androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,int,int,java.lang.Object)>(r0, $r67, 0, 2, null);

        interfaceinvoke $r52.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r54);

        goto label15;

     label13:
        l42 = virtualinvoke r68.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i21 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l42);

        $i22 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l39);

        $i23 = $i21 + $i22;

        $i24 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l42);

        $i25 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l39);

        $i26 = $i24 + $i25;

        $l27 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i23, $i26);

        virtualinvoke r68.<androidx.tv.foundation.lazy.grid.ItemInfo: void setNotAnimatableDelta--gyyYBs(long)>($l27);

        $i28 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisSize()>();

        virtualinvoke r68.<androidx.tv.foundation.lazy.grid.ItemInfo: void setCrossAxisSize(int)>($i28);

        $i29 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisOffset()>();

        virtualinvoke r68.<androidx.tv.foundation.lazy.grid.ItemInfo: void setCrossAxisOffset(int)>($i29);

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,androidx.tv.foundation.lazy.grid.ItemInfo)>($r67, r68);

        goto label15;

     label14:
        $r44 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r45 = virtualinvoke $r67.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r44.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r45);

     label15:
        i40 = i40 + 1;

        goto label10;

     label16:
        $i43 = 0;

        r70 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound>;

        z30 = 0;

        $i4 = interfaceinvoke r70.<java.util.List: int size()>();

        if $i4 <= 1 goto label17;

        $r40 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1;

        specialinvoke $r40.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1: void <init>(java.util.Map)>($r64);

        $r41 = (java.util.Comparator) $r40;

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>(r70, $r41);

     label17:
        z31 = 0;

        i44 = -1;

        i45 = 0;

        $r71 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound>;

        z32 = 0;

        $i46 = 0;

        $i47 = interfaceinvoke $r71.<java.util.List: int size()>();

     label18:
        if $i46 >= $i47 goto label21;

        r72 = interfaceinvoke $r71.<java.util.List: java.lang.Object get(int)>($i46);

        r73 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r72;

        z33 = 0;

        i48 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getLine(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem)>(r73);

        if i48 == -1 goto label19;

        if i48 != i44 goto label19;

        $i20 = virtualinvoke r73.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize()>();

        i45 = staticinvoke <java.lang.Math: int max(int,int)>(i45, $i20);

        goto label20;

     label19:
        $i43 = $i43 + i45;

        i45 = virtualinvoke r73.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize()>();

        i44 = i48;

     label20:
        $i49 = 0 - $i43;

        $i50 = virtualinvoke r73.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize()>();

        $i51 = $i49 - $i50;

        r74 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,int)>(r73, $i51);

        $r75 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r76 = virtualinvoke r73.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r75.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r76, r74);

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,androidx.tv.foundation.lazy.grid.ItemInfo)>(r73, r74);

        $i46 = $i46 + 1;

        goto label18;

     label21:
        $i52 = 0;

        i53 = -1;

        i54 = 0;

        $r77 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound>;

        z34 = 0;

        $i5 = interfaceinvoke $r77.<java.util.List: int size()>();

        if $i5 <= 1 goto label22;

        $r37 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1;

        specialinvoke $r37.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1: void <init>(java.util.Map)>($r64);

        $r38 = (java.util.Comparator) $r37;

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r77, $r38);

     label22:
        $r78 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound>;

        z35 = 0;

        $i55 = 0;

        $i56 = interfaceinvoke $r78.<java.util.List: int size()>();

     label23:
        if $i55 >= $i56 goto label26;

        r79 = interfaceinvoke $r78.<java.util.List: java.lang.Object get(int)>($i55);

        r80 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r79;

        z36 = 0;

        i57 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getLine(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem)>(r80);

        if i57 == -1 goto label24;

        if i57 != i53 goto label24;

        $i19 = virtualinvoke r80.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize()>();

        i54 = staticinvoke <java.lang.Math: int max(int,int)>(i54, $i19);

        goto label25;

     label24:
        $i52 = $i52 + i54;

        i54 = virtualinvoke r80.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize()>();

        i53 = i57;

     label25:
        $i58 = $i38 + $i52;

        r81 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,int)>(r80, $i58);

        $r82 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r83 = virtualinvoke r80.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        interfaceinvoke $r82.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r83, r81);

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,androidx.tv.foundation.lazy.grid.ItemInfo)>(r80, r81);

        $i55 = $i55 + 1;

        goto label23;

     label26:
        $r14 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys>;

        $r84 = (java.lang.Iterable) $r14;

        z37 = 0;

        $r85 = interfaceinvoke $r84.<java.lang.Iterable: java.util.Iterator iterator()>();

     label27:
        $z6 = interfaceinvoke $r85.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label39;

        r86 = interfaceinvoke $r85.<java.util.Iterator: java.lang.Object next()>();

        z38 = 0;

        $r24 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r25 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r24, r86);

        r87 = (androidx.tv.foundation.lazy.grid.ItemInfo) $r25;

        $r26 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r86);

        r88 = (java.lang.Integer) $r27;

        z39 = 0;

        $r89 = virtualinvoke r87.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        i59 = 0;

        i3 = interfaceinvoke $r89.<java.util.List: int size()>();

     label28:
        if i59 >= i3 goto label30;

        r4 = interfaceinvoke $r89.<java.util.List: java.lang.Object get(int)>(i59);

        r5 = r4;

        r6 = (androidx.tv.foundation.lazy.grid.PlaceableInfo) r5;

        $z15 = virtualinvoke r6.<androidx.tv.foundation.lazy.grid.PlaceableInfo: boolean getInProgress()>();

        if $z15 == 0 goto label29;

        $z40 = 1;

        goto label31;

     label29:
        i59 = i59 + 1;

        goto label28;

     label30:
        $z40 = 0;

     label31:
        z3 = $z40;

        $r28 = virtualinvoke r87.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $z9 = interfaceinvoke $r28.<java.util.List: boolean isEmpty()>();

        if $z9 != 0 goto label33;

        if r88 == null goto label33;

        if z3 != 0 goto label32;

        $r35 = interfaceinvoke $r64.<java.util.Map: java.lang.Object get(java.lang.Object)>(r86);

        $z14 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r88, $r35);

        if $z14 != 0 goto label33;

     label32:
        if z3 != 0 goto label34;

        $z13 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isWithinBounds(androidx.tv.foundation.lazy.grid.ItemInfo,int)>(r87, $i38);

        if $z13 != 0 goto label34;

     label33:
        $r90 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        interfaceinvoke $r90.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r86);

        goto label38;

     label34:
        $i12 = virtualinvoke r88.<java.lang.Integer: int intValue()>();

        $i13 = staticinvoke <androidx.tv.foundation.lazy.grid.ItemIndex: int constructor-impl(int)>($i12);

        $z10 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z10 == 0 goto label35;

        $r33 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $i18 = virtualinvoke r87.<androidx.tv.foundation.lazy.grid.ItemInfo: int getCrossAxisSize()>();

        $l60 = virtualinvoke $r33.<androidx.compose.ui.unit.Constraints$Companion: long fixedWidth-OenEA2s(int)>($i18);

        goto label36;

     label35:
        $r30 = <androidx.compose.ui.unit.Constraints: androidx.compose.ui.unit.Constraints$Companion Companion>;

        $i15 = virtualinvoke r87.<androidx.tv.foundation.lazy.grid.ItemInfo: int getCrossAxisSize()>();

        $l60 = virtualinvoke $r30.<androidx.compose.ui.unit.Constraints$Companion: long fixedHeight-OenEA2s(int)>($i15);

     label36:
        $r91 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider: androidx.tv.foundation.lazy.grid.LazyMeasuredItem getAndMeasure-ndEz314$default(androidx.tv.foundation.lazy.grid.LazyMeasuredItemProvider,int,int,long,int,java.lang.Object)>(r2, $i13, 0, $l60, 2, null);

        $i16 = virtualinvoke r88.<java.lang.Integer: int intValue()>();

        $i17 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int firstVisibleIndex>;

        if $i16 >= $i17 goto label37;

        $r32 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound>;

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r91);

        goto label38;

     label37:
        $r31 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound>;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r91);

     label38:
        goto label27;

     label39:
        $i61 = 0;

        i62 = -1;

        i63 = 0;

        $r92 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound>;

        z41 = 0;

        $i6 = interfaceinvoke $r92.<java.util.List: int size()>();

        if $i6 <= 1 goto label40;

        $r22 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2;

        specialinvoke $r22.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2: void <init>(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>(r0);

        $r23 = (java.util.Comparator) $r22;

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r92, $r23);

     label40:
        $r93 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound>;

        z42 = 0;

        $i64 = 0;

        $i65 = interfaceinvoke $r93.<java.util.List: int size()>();

     label41:
        if $i64 >= $i65 goto label44;

        r94 = interfaceinvoke $r93.<java.util.List: java.lang.Object get(int)>($i64);

        r95 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r94;

        z43 = 0;

        $i10 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getIndex-g5ugXTo()>();

        i66 = virtualinvoke r3.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getLineIndexOfItem-lRO02eA(int)>($i10);

        if i66 == -1 goto label42;

        if i66 != i62 goto label42;

        $i11 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        i63 = staticinvoke <java.lang.Math: int max(int,int)>(i63, $i11);

        goto label43;

     label42:
        $i61 = $i61 + i63;

        i63 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        i62 = i66;

     label43:
        $i67 = 0 - $i61;

        $i68 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        $r96 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r97 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r98 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r96, $r97);

        r99 = (androidx.tv.foundation.lazy.grid.ItemInfo) $r98;

        $i69 = $i67 - $i68;

        $i70 = virtualinvoke r99.<androidx.tv.foundation.lazy.grid.ItemInfo: int getCrossAxisOffset()>();

        $r100 = virtualinvoke r95.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem position(int,int,int,int,int,int)>($i69, $i70, i1, i2, -1, -1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r100);

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,androidx.tv.foundation.lazy.grid.ItemInfo)>($r100, r99);

        $i64 = $i64 + 1;

        goto label41;

     label44:
        $i71 = 0;

        i72 = -1;

        i73 = 0;

        $r101 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound>;

        z44 = 0;

        $i7 = interfaceinvoke $r101.<java.util.List: int size()>();

        if $i7 <= 1 goto label45;

        $r20 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2;

        specialinvoke $r20.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2: void <init>(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>(r0);

        $r21 = (java.util.Comparator) $r20;

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r101, $r21);

     label45:
        $r102 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound>;

        z45 = 0;

        $i74 = 0;

        $i75 = interfaceinvoke $r102.<java.util.List: int size()>();

     label46:
        if $i74 >= $i75 goto label49;

        r103 = interfaceinvoke $r102.<java.util.List: java.lang.Object get(int)>($i74);

        r104 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r103;

        z46 = 0;

        $i8 = virtualinvoke r104.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getIndex-g5ugXTo()>();

        i76 = virtualinvoke r3.<androidx.tv.foundation.lazy.grid.LazyGridSpanLayoutProvider: int getLineIndexOfItem-lRO02eA(int)>($i8);

        if i76 == -1 goto label47;

        if i76 != i72 goto label47;

        $i9 = virtualinvoke r104.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        i73 = staticinvoke <java.lang.Math: int max(int,int)>(i73, $i9);

        goto label48;

     label47:
        $i71 = $i71 + i73;

        i73 = virtualinvoke r104.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: int getMainAxisSize()>();

        i72 = i76;

     label48:
        $r105 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r106 = virtualinvoke r104.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r107 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r105, $r106);

        r108 = (androidx.tv.foundation.lazy.grid.ItemInfo) $r107;

        $i77 = $i38 + $i71;

        $i78 = virtualinvoke r108.<androidx.tv.foundation.lazy.grid.ItemInfo: int getCrossAxisOffset()>();

        $r109 = virtualinvoke r104.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem position(int,int,int,int,int,int)>($i77, $i78, i1, i2, -1, -1);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r109);

        specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,androidx.tv.foundation.lazy.grid.ItemInfo)>($r109, r108);

        $i74 = $i74 + 1;

        goto label46;

     label49:
        $r15 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromStartBound>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        $r16 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingInFromEndBound>;

        interfaceinvoke $r16.<java.util.List: void clear()>();

        $r17 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToStartBound>;

        interfaceinvoke $r17.<java.util.List: void clear()>();

        $r18 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.List movingAwayToEndBound>;

        interfaceinvoke $r18.<java.util.List: void clear()>();

        $r19 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.LinkedHashSet movingAwayKeys>;

        virtualinvoke $r19.<java.util.LinkedHashSet: void clear()>();

        return;
    }

    public final long getAnimatedOffset-YT5a7pE(java.lang.Object, int, int, int, long)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        java.lang.Object r1, $r5, $r8, $r10;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        long l3, l4, l21, l22, l23, $l24, l25;
        androidx.tv.foundation.lazy.grid.ItemInfo r2, $r6;
        androidx.tv.foundation.lazy.grid.PlaceableInfo r3;
        java.util.Map $r4;
        java.util.List $r7;
        androidx.compose.animation.core.Animatable $r9;
        androidx.compose.ui.unit.IntOffset $r11;
        boolean $z1;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 $r12;
        kotlinx.coroutines.CoroutineScope $r13;
        kotlin.jvm.functions.Function2 $r14;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        l3 := @parameter4: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = (androidx.tv.foundation.lazy.grid.ItemInfo) $r5;

        if $r6 != null goto label1;

        return l3;

     label1:
        r2 = $r6;

        $r7 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (androidx.tv.foundation.lazy.grid.PlaceableInfo) $r8;

        $r9 = virtualinvoke r3.<androidx.tv.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r10 = virtualinvoke $r9.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r11 = (androidx.compose.ui.unit.IntOffset) $r10;

        l21 = virtualinvoke $r11.<androidx.compose.ui.unit.IntOffset: long unbox-impl()>();

        l22 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l21);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l22);

        $i7 = $i5 + $i6;

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l21);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l22);

        $i10 = $i8 + $i9;

        l4 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i7, $i10);

        l23 = virtualinvoke r3.<androidx.tv.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $l24 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i11 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l23);

        $i12 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l24);

        $i13 = $i11 + $i12;

        $i14 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l23);

        $i15 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l24);

        $i16 = $i14 + $i15;

        l25 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i13, $i16);

        $z1 = virtualinvoke r3.<androidx.tv.foundation.lazy.grid.PlaceableInfo: boolean getInProgress()>();

        if $z1 == 0 goto label4;

        $i17 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l25);

        if $i17 > i1 goto label2;

        $i20 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        if $i20 < i1 goto label3;

     label2:
        $i18 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l25);

        if $i18 < i2 goto label4;

        $i19 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        if $i19 <= i2 goto label4;

     label3:
        $r13 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>;

        $r12 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        specialinvoke $r12.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo,kotlin.coroutines.Continuation)>(r3, null);

        $r14 = (kotlin.jvm.functions.Function2) $r12;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r13, null, null, $r14, 3, null);

     label4:
        return l4;
    }

    public final void reset()
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r1 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToItemInfoMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap> = $r2;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int firstVisibleIndex> = -1;

        return;
    }

    private final androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem, int)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r1;
        int i0, i2, i3, $i4, $i5, $i7, i10;
        androidx.tv.foundation.lazy.grid.ItemInfo r2, $r3;
        long l1, $l6, $l8, $l9;
        boolean $z1;
        java.util.List $r4;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r5;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem;

        i0 := @parameter1: int;

        $r3 = new androidx.tv.foundation.lazy.grid.ItemInfo;

        $i4 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisSize()>();

        $i5 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getCrossAxisOffset()>();

        specialinvoke $r3.<androidx.tv.foundation.lazy.grid.ItemInfo: void <init>(int,int)>($i4, $i5);

        r2 = $r3;

        $z1 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z1 == 0 goto label1;

        $l8 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $l9 = staticinvoke <androidx.compose.ui.unit.IntOffset: long copy-iSbpLlY$default(long,int,int,int,java.lang.Object)>($l8, 0, i0, 1, null);

        goto label2;

     label1:
        $l6 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $l9 = staticinvoke <androidx.compose.ui.unit.IntOffset: long copy-iSbpLlY$default(long,int,int,int,java.lang.Object)>($l6, i0, 0, 2, null);

     label2:
        l1 = $l9;

        i2 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        i10 = 0;

     label3:
        if i10 >= i2 goto label4;

        i3 = i10;

        $r4 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r5 = new androidx.tv.foundation.lazy.grid.PlaceableInfo;

        $i7 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i3);

        specialinvoke $r5.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void <init>(long,int,kotlin.jvm.internal.DefaultConstructorMarker)>(l1, $i7, null);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i10 = i10 + 1;

        goto label3;

     label4:
        return r2;
    }

    static androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo$default(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator, androidx.tv.foundation.lazy.grid.LazyGridPositionedItem, int, int, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r1;
        int i0, $i1, i3;
        java.lang.Object r2;
        androidx.tv.foundation.lazy.grid.ItemInfo $r3;
        long $l2;

        r0 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter1: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $l2 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        i3 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>($l2);

     label1:
        $r3 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: androidx.tv.foundation.lazy.grid.ItemInfo createItemInfo(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem,int)>(r1, i3);

        return $r3;
    }

    private final void startAnimationsIfNeeded(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem, androidx.tv.foundation.lazy.grid.ItemInfo)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r1;
        androidx.tv.foundation.lazy.grid.ItemInfo r2;
        java.lang.Object r3;
        int i0, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i29, i30, i33, i34;
        long l1, l2, l3, $l21, $l28, l31, l32, l35, l36;
        androidx.compose.animation.core.FiniteAnimationSpec r4;
        java.util.List $r5, $r6, $r11, $r12, $r14, r16;
        boolean $z3, z6;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 $r7;
        kotlinx.coroutines.CoroutineScope $r8;
        kotlin.jvm.functions.Function2 $r9;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r13, $r17;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r1 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem;

        r2 := @parameter1: androidx.tv.foundation.lazy.grid.ItemInfo;

     label1:
        $r5 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i5 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        if $i4 <= $i5 goto label2;

        $r14 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object removeLast(java.util.List)>($r14);

        goto label1;

     label2:
        $r6 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $i6 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i7 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getPlaceablesCount()>();

        if $i6 >= $i7 goto label3;

        $r11 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        i30 = interfaceinvoke $r11.<java.util.List: int size()>();

        l31 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $r12 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        $r13 = new androidx.tv.foundation.lazy.grid.PlaceableInfo;

        l32 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i22 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l31);

        $i23 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l32);

        $i24 = $i22 - $i23;

        $i25 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l31);

        $i26 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l32);

        $i27 = $i25 - $i26;

        $l28 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i24, $i27);

        $i29 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i30);

        specialinvoke $r13.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void <init>(long,int,kotlin.jvm.internal.DefaultConstructorMarker)>($l28, $i29, null);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label2;

     label3:
        r16 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        z6 = 0;

        i33 = 0;

        i34 = interfaceinvoke r16.<java.util.List: int size()>();

     label4:
        if i33 >= i34 goto label6;

        r3 = interfaceinvoke r16.<java.util.List: java.lang.Object get(int)>(i33);

        $r17 = (androidx.tv.foundation.lazy.grid.PlaceableInfo) r3;

        i0 = i33;

        l35 = virtualinvoke $r17.<androidx.tv.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        l1 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l35);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l1);

        $i10 = $i8 + $i9;

        $i11 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l35);

        $i12 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l1);

        $i13 = $i11 + $i12;

        l2 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i10, $i13);

        l36 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: long getOffset-nOcc-ac()>();

        $i14 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getMainAxisSize(int)>(i0);

        virtualinvoke $r17.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void setMainAxisSize(int)>($i14);

        r4 = virtualinvoke r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: androidx.compose.animation.core.FiniteAnimationSpec getAnimationSpec(int)>(i0);

        $z3 = staticinvoke <androidx.compose.ui.unit.IntOffset: boolean equals-impl0(long,long)>(l2, l36);

        if $z3 != 0 goto label5;

        l3 = virtualinvoke r2.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i15 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l36);

        $i16 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l3);

        $i17 = $i15 - $i16;

        $i18 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l36);

        $i19 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l3);

        $i20 = $i18 - $i19;

        $l21 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i17, $i20);

        virtualinvoke $r17.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void setTargetOffset--gyyYBs(long)>($l21);

        if r4 == null goto label5;

        virtualinvoke $r17.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(1);

        $r8 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: kotlinx.coroutines.CoroutineScope scope>;

        $r7 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        specialinvoke $r7.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.coroutines.Continuation)>($r17, r4, null);

        $r9 = (kotlin.jvm.functions.Function2) $r7;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r8, null, null, $r9, 3, null);

     label5:
        i33 = i33 + 1;

        goto label4;

     label6:
        return;
    }

    private final boolean isWithinBounds(androidx.tv.foundation.lazy.grid.ItemInfo, int)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.tv.foundation.lazy.grid.ItemInfo $r1;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.util.List $r2;
        java.lang.Object r3, r4;
        androidx.tv.foundation.lazy.grid.PlaceableInfo r5;
        long l2, l3, l4;
        boolean $z5, $z6;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r1 := @parameter0: androidx.tv.foundation.lazy.grid.ItemInfo;

        i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<androidx.tv.foundation.lazy.grid.ItemInfo: java.util.List getPlaceables()>();

        i15 = 0;

        i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i15 >= i1 goto label5;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i15);

        r4 = r3;

        r5 = (androidx.tv.foundation.lazy.grid.PlaceableInfo) r4;

        l2 = virtualinvoke r5.<androidx.tv.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        l3 = virtualinvoke $r1.<androidx.tv.foundation.lazy.grid.ItemInfo: long getNotAnimatableDelta-nOcc-ac()>();

        $i5 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l2);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>(l3);

        $i7 = $i5 + $i6;

        $i8 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l2);

        $i9 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>(l3);

        $i10 = $i8 + $i9;

        l4 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i7, $i10);

        $i11 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        $i12 = virtualinvoke r5.<androidx.tv.foundation.lazy.grid.PlaceableInfo: int getMainAxisSize()>();

        $i13 = $i11 + $i12;

        if $i13 <= 0 goto label2;

        $i14 = specialinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: int getMainAxis--gyyYBs(long)>(l4);

        if $i14 >= i0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label4;

        $z6 = 1;

        goto label6;

     label4:
        i15 = i15 + 1;

        goto label1;

     label5:
        $z6 = 0;

     label6:
        return $z6;
    }

    private final long toOffset-Bjo55l4(int)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        long $l3;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $i0 := @parameter0: int;

        $z0 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z0 == 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = $i0;

     label2:
        $z1 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z1 != 0 goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $i2 = $i0;

     label4:
        $l3 = staticinvoke <androidx.compose.ui.unit.IntOffsetKt: long IntOffset(int,int)>($i1, $i2);

        return $l3;
    }

    private final int getMainAxis--gyyYBs(long)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        long $l0;
        boolean $z0;
        int $i1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $l0 := @parameter0: long;

        $z0 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l0);

        goto label2;

     label1:
        $i1 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l0);

     label2:
        return $i1;
    }

    private final int getLine(androidx.tv.foundation.lazy.grid.LazyGridPositionedItem)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem $r1;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r1 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridPositionedItem;

        $z0 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: boolean isVertical>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getRow()>();

        goto label2;

     label1:
        $i0 = virtualinvoke $r1.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: int getColumn()>();

     label2:
        return $i0;
    }

    public static final java.util.Map access$getKeyToIndexMap$p(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        $r1 = $r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map keyToIndexMap>;

        return $r1;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item>
    void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r1 := @parameter0: androidx.tv.foundation.lazy.grid.PlaceableInfo;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        java.lang.Object $r1, r2, $r10;
        int $i0;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r3, $r5, $r7;
        kotlin.Unit $r4;
        androidx.compose.animation.core.Animatable $r6;
        long $l1;
        androidx.compose.ui.unit.IntOffset $r8;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item>;

        $r6 = virtualinvoke $r5.<androidx.tv.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r7 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item>;

        $l1 = virtualinvoke $r7.<androidx.tv.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $r8 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l1);

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: int label> = 1;

        $r10 = virtualinvoke $r6.<androidx.compose.animation.core.Animatable: java.lang.Object snapTo(java.lang.Object,kotlin.coroutines.Continuation)>($r8, $r9);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item>;

        virtualinvoke $r3.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(0);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r4;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $item>;

        specialinvoke $r3.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$getAnimatedOffset$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1: java.util.Map $previousKeyToIndexMap$inlined>
    public void <init>(java.util.Map)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1 r0;
        java.util.Map r1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1: java.util.Map $previousKeyToIndexMap$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1 r0;
        java.lang.Object r1, r2, $r5, $r6, $r9, $r10;
        java.lang.Comparable r3, $r12;
        java.util.Map $r4, $r8;
        java.lang.Integer $r7, $r11;
        int $i0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r13, r14;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r13 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r1;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1: java.util.Map $previousKeyToIndexMap$inlined>;

        $r5 = virtualinvoke r13.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        r14 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r2;

        r3 = (java.lang.Comparable) $r7;

        $r8 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$1: java.util.Map $previousKeyToIndexMap$inlined>;

        $r9 = virtualinvoke r14.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        $r12 = (java.lang.Comparable) $r11;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r12);

        return $i0;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>
    public void <init>(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2 r0;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2;

        r1 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2 r0;
        java.lang.Object r1, r2, $r6, $r7, $r11, $r12;
        java.lang.Comparable r3, $r14;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator $r4, $r9;
        java.util.Map $r5, $r10;
        java.lang.Integer $r8, $r13;
        int $i0;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem r15, r16;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r15 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r1;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>;

        $r5 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map access$getKeyToIndexMap$p(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>($r4);

        $r6 = virtualinvoke r15.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Integer) $r7;

        r16 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r2;

        r3 = (java.lang.Comparable) $r8;

        $r9 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortBy$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>;

        $r10 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map access$getKeyToIndexMap$p(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>($r9);

        $r11 = virtualinvoke r16.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        $r14 = (java.lang.Comparable) $r13;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r14);

        return $i0;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1: java.util.Map $previousKeyToIndexMap$inlined>
    public void <init>(java.util.Map)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1 r0;
        java.util.Map r1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1: java.util.Map $previousKeyToIndexMap$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1 r0;
        java.lang.Object r1, r2, $r5, $r6, $r9, $r10;
        java.lang.Comparable r3, $r12;
        java.util.Map $r4, $r8;
        java.lang.Integer $r7, $r11;
        int $i0;
        androidx.tv.foundation.lazy.grid.LazyGridPositionedItem r13, r14;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r13 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r2;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1: java.util.Map $previousKeyToIndexMap$inlined>;

        $r5 = virtualinvoke r13.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        r14 = (androidx.tv.foundation.lazy.grid.LazyGridPositionedItem) r1;

        r3 = (java.lang.Comparable) $r7;

        $r8 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$1: java.util.Map $previousKeyToIndexMap$inlined>;

        $r9 = virtualinvoke r14.<androidx.tv.foundation.lazy.grid.LazyGridPositionedItem: java.lang.Object getKey()>();

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        $r12 = (java.lang.Comparable) $r11;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r12);

        return $i0;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>
    public void <init>(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2 r0;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator r1;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2;

        r1 := @parameter0: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2 r0;
        java.lang.Object r1, r2, $r6, $r7, $r11, $r12;
        java.lang.Comparable r3, $r14;
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator $r4, $r9;
        java.util.Map $r5, $r10;
        java.lang.Integer $r8, $r13;
        int $i0;
        androidx.tv.foundation.lazy.grid.LazyMeasuredItem r15, r16;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r15 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r2;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>;

        $r5 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map access$getKeyToIndexMap$p(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>($r4);

        $r6 = virtualinvoke r15.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.lang.Integer) $r7;

        r16 = (androidx.tv.foundation.lazy.grid.LazyMeasuredItem) r1;

        r3 = (java.lang.Comparable) $r8;

        $r9 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$onMeasured$$inlined$sortByDescending$2: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator this$0>;

        $r10 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator: java.util.Map access$getKeyToIndexMap$p(androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator)>($r9);

        $r11 = virtualinvoke r16.<androidx.tv.foundation.lazy.grid.LazyMeasuredItem: java.lang.Object getKey()>();

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        $r14 = (java.lang.Comparable) $r13;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r14);

        return $i0;
    }

androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>
<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>
    void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r1;
        androidx.compose.animation.core.FiniteAnimationSpec $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r1 := @parameter0: androidx.tv.foundation.lazy.grid.PlaceableInfo;

        $r2 := @parameter1: androidx.compose.animation.core.FiniteAnimationSpec;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo> = $r1;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        java.lang.Object $r1, r4, $r15;
        androidx.compose.animation.core.FiniteAnimationSpec r2, $r16, $r17, $r21;
        java.lang.Throwable r3, $r19;
        int $i0;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r5, $r7, $r9, $r11;
        kotlin.Unit $r6;
        androidx.compose.animation.core.Animatable $r8, $r10;
        boolean $z0, $z1;
        long $l1;
        androidx.compose.ui.unit.IntOffset $r12;
        androidx.compose.animation.core.AnimationSpec $r13;
        kotlin.coroutines.Continuation $r14;
        java.lang.IllegalStateException $r18;
        androidx.compose.animation.core.SpringSpec $r20;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r1 := @parameter0: java.lang.Object;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label08;
            default: goto label13;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r8 = virtualinvoke $r7.<androidx.tv.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $z0 = virtualinvoke $r8.<androidx.compose.animation.core.Animatable: boolean isRunning()>();

        if $z0 == 0 goto label04;

        $r16 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        $z1 = $r16 instanceof androidx.compose.animation.core.SpringSpec;

        if $z1 == 0 goto label02;

        $r17 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        $r20 = (androidx.compose.animation.core.SpringSpec) $r17;

        goto label03;

     label02:
        $r20 = staticinvoke <androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimatorKt: androidx.compose.animation.core.SpringSpec access$getInterruptionSpec$p()>();

     label03:
        $r21 = (androidx.compose.animation.core.FiniteAnimationSpec) $r20;

        goto label05;

     label04:
        $r21 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

     label05:
        r2 = $r21;

     label06:
        $r9 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r10 = virtualinvoke $r9.<androidx.tv.foundation.lazy.grid.PlaceableInfo: androidx.compose.animation.core.Animatable getAnimatedOffset()>();

        $r11 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $l1 = virtualinvoke $r11.<androidx.tv.foundation.lazy.grid.PlaceableInfo: long getTargetOffset-nOcc-ac()>();

        $r12 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l1);

        $r13 = (androidx.compose.animation.core.AnimationSpec) r2;

        $r14 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: int label> = 1;

        $r15 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r10, $r12, $r13, null, null, $r14, 12, null);

     label07:
        if $r15 != r4 goto label09;

        return r4;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        $r5 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        virtualinvoke $r5.<androidx.tv.foundation.lazy.grid.PlaceableInfo: void setInProgress(boolean)>(0);

     label10:
        goto label12;

     label11:
        $r19 := @caughtexception;

        r3 = $r19;

     label12:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label13:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r18;

        catch java.util.concurrent.CancellationException from label06 to label07 with label11;
        catch java.util.concurrent.CancellationException from label08 to label10 with label11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.animation.core.FiniteAnimationSpec $r4;
        androidx.tv.foundation.lazy.grid.PlaceableInfo $r5;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        $r5 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.tv.foundation.lazy.grid.PlaceableInfo $placeableInfo>;

        $r4 = r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: androidx.compose.animation.core.FiniteAnimationSpec $animationSpec>;

        specialinvoke $r3.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: void <init>(androidx.tv.foundation.lazy.grid.PlaceableInfo,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.tv.foundation.lazy.grid.LazyGridItemPlacementAnimator$startAnimationsIfNeeded$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

