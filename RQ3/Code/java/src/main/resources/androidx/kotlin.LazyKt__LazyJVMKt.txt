kotlin.LazyKt__LazyJVMKt
    public void <init>()
    {
        kotlin.LazyKt__LazyJVMKt $r0;

        $r0 := @this: kotlin.LazyKt__LazyJVMKt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final kotlin.Lazy lazy(java.lang.Object, kotlin.jvm.functions.Function0)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function0 $r1;
        kotlin.SynchronizedLazyImpl $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "initializer");

        $r2 = new kotlin.SynchronizedLazyImpl;

        specialinvoke $r2.<kotlin.SynchronizedLazyImpl: void <init>(kotlin.jvm.functions.Function0,java.lang.Object)>($r1, $r0);

        return $r2;
    }

    public static final kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode, kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 $r0;
        int $i0;
        kotlin.LazyThreadSafetyMode $r1;
        int[] $r2;
        kotlin.NoWhenBranchMatchedException r3;
        kotlin.UnsafeLazyImpl r4;
        kotlin.SafePublicationLazyImpl r5;
        kotlin.SynchronizedLazyImpl r6;
        java.lang.Throwable r7;

        $r1 := @parameter0: kotlin.LazyThreadSafetyMode;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "mode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "initializer");

        $r2 = <kotlin.LazyKt__LazyJVMKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<kotlin.LazyThreadSafetyMode: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        r7 = (java.lang.Throwable) r3;

        throw r7;

     label2:
        r4 = new kotlin.UnsafeLazyImpl;

        specialinvoke r4.<kotlin.UnsafeLazyImpl: void <init>(kotlin.jvm.functions.Function0)>($r0);

        return r4;

     label3:
        r5 = new kotlin.SafePublicationLazyImpl;

        specialinvoke r5.<kotlin.SafePublicationLazyImpl: void <init>(kotlin.jvm.functions.Function0)>($r0);

        return r5;

     label4:
        r6 = new kotlin.SynchronizedLazyImpl;

        specialinvoke r6.<kotlin.SynchronizedLazyImpl: void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, null, 2, null);

        return r6;
    }

    public static final kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 $r0;
        kotlin.SynchronizedLazyImpl $r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "initializer");

        $r1 = new kotlin.SynchronizedLazyImpl;

        specialinvoke $r1.<kotlin.SynchronizedLazyImpl: void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, null, 2, null);

        return $r1;
    }

