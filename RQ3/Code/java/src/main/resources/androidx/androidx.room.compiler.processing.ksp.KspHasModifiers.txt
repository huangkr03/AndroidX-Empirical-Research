androidx.room.compiler.processing.ksp.KspHasModifiers
<androidx.room.compiler.processing.ksp.KspHasModifiers: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion Companion>
<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>
    private void <init>(com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration> = r1;

        return;
    }

    protected final com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        return $r1;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1, $r4;
        com.google.devtools.ksp.symbol.Visibility $r2, $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r2 = staticinvoke <com.google.devtools.ksp.UtilsKt: com.google.devtools.ksp.symbol.Visibility getVisibility(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        $r3 = <com.google.devtools.ksp.symbol.Visibility: com.google.devtools.ksp.symbol.Visibility INTERNAL>;

        if $r2 == $r3 goto label1;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r5 = staticinvoke <com.google.devtools.ksp.UtilsKt: com.google.devtools.ksp.symbol.Visibility getVisibility(com.google.devtools.ksp.symbol.KSDeclaration)>($r4);

        $r6 = <com.google.devtools.ksp.symbol.Visibility: com.google.devtools.ksp.symbol.Visibility PUBLIC>;

        if $r5 != $r6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z0 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isProtected(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        return $z0;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1, $r2, $r5, $r7, $r9;
        java.util.Set $r3;
        com.google.devtools.ksp.symbol.Modifier $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r6;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r8;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r10;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSDeclaration: java.util.Set getModifiers()>();

        $r4 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier ABSTRACT>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label5;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z1 = r1 instanceof com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        if $z1 == 0 goto label1;

        $r9 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r10 = (com.google.devtools.ksp.symbol.KSPropertyDeclaration) $r9;

        $z4 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isAbstract(com.google.devtools.ksp.symbol.KSPropertyDeclaration)>($r10);

        goto label4;

     label1:
        $z2 = r1 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z2 == 0 goto label2;

        $r7 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r8 = (com.google.devtools.ksp.symbol.KSClassDeclaration) $r7;

        $z4 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isAbstract(com.google.devtools.ksp.symbol.KSClassDeclaration)>($r8);

        goto label4;

     label2:
        $z3 = r1 instanceof com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        if $z3 == 0 goto label3;

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $r6 = (com.google.devtools.ksp.symbol.KSFunctionDeclaration) $r5;

        $z4 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: boolean isAbstract()>();

        goto label4;

     label3:
        $z4 = 0;

     label4:
        if $z4 == 0 goto label6;

     label5:
        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        return $z5;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z0 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isPrivate(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSDeclarationExtKt: boolean isStatic(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSDeclarationExtKt: boolean isTransient(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: com.google.devtools.ksp.symbol.KSDeclaration declaration>;

        $z0 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean isOpen(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void <init>(com.google.devtools.ksp.symbol.KSDeclaration, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: void <init>(com.google.devtools.ksp.symbol.KSDeclaration)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspHasModifiers: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration
    public void <init>(com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: void <init>(com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        return;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration r0;
        com.google.devtools.ksp.symbol.KSDeclaration $r1, $r2, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        com.google.devtools.ksp.symbol.Origin $r3, $r4;
        java.util.Set $r8;
        com.google.devtools.ksp.symbol.Modifier $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSDeclarationExtKt: boolean isStatic(com.google.devtools.ksp.symbol.KSDeclaration)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.Origin getOrigin()>();

        $r4 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin JAVA>;

        if $r3 == $r4 goto label4;

        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r6 = interfaceinvoke $r5.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getParentDeclaration()>();

        $z1 = $r6 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z1 == 0 goto label4;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r8 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSDeclaration: java.util.Set getModifiers()>();

        $r9 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier INNER>;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.XHasModifiers createForSyntheticAccessor(com.google.devtools.ksp.symbol.KSPropertyDeclaration, com.google.devtools.ksp.symbol.KSPropertyAccessor)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration r1;
        com.google.devtools.ksp.symbol.KSPropertyAccessor r2;
        androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration $r3;
        com.google.devtools.ksp.symbol.KSDeclaration $r4;
        androidx.room.compiler.processing.XHasModifiers $r5, $r7;
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSPropertyAccessor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "property");

        if r2 == null goto label1;

        $r6 = new androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: void <init>(com.google.devtools.ksp.symbol.KSPropertyAccessor)>(r2);

        $r7 = (androidx.room.compiler.processing.XHasModifiers) $r6;

        return $r7;

     label1:
        $r3 = new androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration;

        $r4 = (com.google.devtools.ksp.symbol.KSDeclaration) r1;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration: void <init>(com.google.devtools.ksp.symbol.KSDeclaration)>($r4);

        $r5 = (androidx.room.compiler.processing.XHasModifiers) $r3;

        return $r5;
    }

    public final androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration r1;
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField $r2;
        androidx.room.compiler.processing.XHasModifiers $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $r2 = new androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: void <init>(com.google.devtools.ksp.symbol.KSPropertyDeclaration)>(r1);

        $r3 = (androidx.room.compiler.processing.XHasModifiers) $r2;

        return $r3;
    }

    public final androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r1;
        androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration $r2;
        com.google.devtools.ksp.symbol.KSDeclaration $r3;
        androidx.room.compiler.processing.XHasModifiers $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $r2 = new androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration;

        $r3 = (com.google.devtools.ksp.symbol.KSDeclaration) r1;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration: void <init>(com.google.devtools.ksp.symbol.KSDeclaration)>($r3);

        $r4 = (androidx.room.compiler.processing.XHasModifiers) $r2;

        return $r4;
    }

    public final androidx.room.compiler.processing.XHasModifiers create(com.google.devtools.ksp.symbol.KSClassDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration r1;
        androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration $r2;
        com.google.devtools.ksp.symbol.KSDeclaration $r3;
        androidx.room.compiler.processing.XHasModifiers $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        $r2 = new androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration;

        $r3 = (com.google.devtools.ksp.symbol.KSDeclaration) r1;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspHasModifiers$ClassDeclaration: void <init>(com.google.devtools.ksp.symbol.KSDeclaration)>($r3);

        $r4 = (androidx.room.compiler.processing.XHasModifiers) $r2;

        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration
    public void <init>(com.google.devtools.ksp.symbol.KSDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration r0;
        com.google.devtools.ksp.symbol.KSDeclaration r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$Declaration;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: void <init>(com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        return;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2$WhenMappings
<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        com.google.devtools.ksp.symbol.Origin[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        com.google.devtools.ksp.symbol.Origin $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, r10, r11, r12, r13;

        $r1 = staticinvoke <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin JAVA>;

        $i1 = virtualinvoke $r2.<com.google.devtools.ksp.symbol.Origin: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

        r10 = $r6;

     label04:
        $r3 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin JAVA_LIB>;

        $i2 = virtualinvoke $r3.<com.google.devtools.ksp.symbol.Origin: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

        r11 = $r8;

     label07:
        $r4 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN>;

        $i3 = virtualinvoke $r4.<com.google.devtools.ksp.symbol.Origin: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        r12 = $r7;

     label10:
        $r5 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN_LIB>;

        $i4 = virtualinvoke $r5.<com.google.devtools.ksp.symbol.Origin: int ordinal()>();

        r0[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        r13 = $r9;

     label13:
        <androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2
<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: com.google.devtools.ksp.symbol.KSPropertyDeclaration $declaration>
    void <init>(com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2 r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: com.google.devtools.ksp.symbol.KSPropertyDeclaration $declaration> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Boolean invoke()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2 r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1, $r4;
        com.google.devtools.ksp.symbol.Origin $r2;
        int[] $r3;
        int $i0, $i1;
        com.google.devtools.ksp.symbol.KSAnnotated $r5;
        boolean $z0;
        java.lang.Boolean $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: com.google.devtools.ksp.symbol.KSPropertyDeclaration $declaration>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyDeclaration: com.google.devtools.ksp.symbol.Origin getOrigin()>();

        $r3 = <androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r2.<com.google.devtools.ksp.symbol.Origin: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $r4 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: com.google.devtools.ksp.symbol.KSPropertyDeclaration $declaration>;

        $r5 = (com.google.devtools.ksp.symbol.KSAnnotated) $r4;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KSAnnotatedExtKt: boolean hasJvmFieldAnnotation(com.google.devtools.ksp.symbol.KSAnnotated)>($r5);

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r6;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: java.lang.Boolean invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField
<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: kotlin.Lazy acceptDeclarationModifiers$delegate>
    public void <init>(com.google.devtools.ksp.symbol.KSPropertyDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2 $r3;
        kotlin.jvm.functions.Function0 $r4;
        kotlin.Lazy $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = (com.google.devtools.ksp.symbol.KSDeclaration) r1;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: void <init>(com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>($r2, null);

        $r3 = new androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField$acceptDeclarationModifiers$2: void <init>(com.google.devtools.ksp.symbol.KSPropertyDeclaration)>(r1);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: kotlin.Lazy acceptDeclarationModifiers$delegate> = $r5;

        return;
    }

    private final boolean getAcceptDeclarationModifiers()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: kotlin.Lazy acceptDeclarationModifiers$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        $z0 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: boolean getAcceptDeclarationModifiers()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isPublic()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        $z0 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: boolean getAcceptDeclarationModifiers()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isProtected()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField r0;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField;

        $z0 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyField: boolean getAcceptDeclarationModifiers()>();

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isPrivate()>();

        goto label2;

     label1:
        $z1 = 1;

     label2:
        return $z1;
    }

androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor
<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: com.google.devtools.ksp.symbol.KSPropertyAccessor accessor>
    public void <init>(com.google.devtools.ksp.symbol.KSPropertyAccessor)
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor r0;
        com.google.devtools.ksp.symbol.KSPropertyAccessor r1;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r2;
        com.google.devtools.ksp.symbol.KSDeclaration $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyAccessor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "accessor");

        $r2 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSPropertyAccessor: com.google.devtools.ksp.symbol.KSPropertyDeclaration getReceiver()>();

        $r3 = (com.google.devtools.ksp.symbol.KSDeclaration) $r2;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: void <init>(com.google.devtools.ksp.symbol.KSDeclaration,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, null);

        r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: com.google.devtools.ksp.symbol.KSPropertyAccessor accessor> = r1;

        return;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor r0;
        com.google.devtools.ksp.symbol.KSPropertyAccessor $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: com.google.devtools.ksp.symbol.KSPropertyAccessor accessor>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyAccessor: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier PUBLIC>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: boolean isPrivate()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: boolean isProtected()>();

        if $z2 != 0 goto label2;

        $z3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isPublic()>();

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor r0;
        com.google.devtools.ksp.symbol.KSPropertyAccessor $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: com.google.devtools.ksp.symbol.KSPropertyAccessor accessor>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyAccessor: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier PROTECTED>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: boolean isPrivate()>();

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isProtected()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor r0;
        com.google.devtools.ksp.symbol.KSPropertyAccessor $r1;
        java.util.Set $r2;
        com.google.devtools.ksp.symbol.Modifier $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspHasModifiers$PropertyFieldAccessor: com.google.devtools.ksp.symbol.KSPropertyAccessor accessor>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSPropertyAccessor: java.util.Set getModifiers()>();

        $r3 = <com.google.devtools.ksp.symbol.Modifier: com.google.devtools.ksp.symbol.Modifier PRIVATE>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspHasModifiers: boolean isPrivate()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

