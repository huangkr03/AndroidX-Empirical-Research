org.junit.internal.runners.statements.InvokeMethod
<org.junit.internal.runners.statements.InvokeMethod: java.lang.Object target>
<org.junit.internal.runners.statements.InvokeMethod: org.junit.runners.model.FrameworkMethod testMethod>
    public void <init>(org.junit.runners.model.FrameworkMethod, java.lang.Object)
    {
        org.junit.internal.runners.statements.InvokeMethod $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;

        $r0 := @this: org.junit.internal.runners.statements.InvokeMethod;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke $r0.<org.junit.runners.model.Statement: void <init>()>();

        $r0.<org.junit.internal.runners.statements.InvokeMethod: org.junit.runners.model.FrameworkMethod testMethod> = $r1;

        $r0.<org.junit.internal.runners.statements.InvokeMethod: java.lang.Object target> = $r2;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.internal.runners.statements.InvokeMethod $r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        $r0 := @this: org.junit.internal.runners.statements.InvokeMethod;

        $r1 = $r0.<org.junit.internal.runners.statements.InvokeMethod: org.junit.runners.model.FrameworkMethod testMethod>;

        $r2 = $r0.<org.junit.internal.runners.statements.InvokeMethod: java.lang.Object target>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r1.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r2, $r3);

        return;
    }

