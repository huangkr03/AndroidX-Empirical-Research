androidx.wear.complications.ComplicationSlotBounds
<androidx.wear.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>
    public void <init>(java.util.Map)
    {
        androidx.wear.complications.ComplicationSlotBounds r0;
        java.util.Map r1, $r2, $r4;
        boolean z0, z1, $z3, z4, z5, z6, z8;
        int $i0, $i1, i2, i3;
        androidx.wear.complications.data.ComplicationType[] $r3, r12;
        java.lang.IllegalArgumentException $r5, $r8;
        java.lang.String $r6, $r9, r11, r14;
        java.lang.Throwable $r7, $r10;
        androidx.wear.complications.data.ComplicationType $r13;

        r0 := @this: androidx.wear.complications.ComplicationSlotBounds;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "perComplicationTypeBounds");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds> = r1;

        $r2 = r0.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $r3 = staticinvoke <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType[] values()>();

        $i1 = lengthof $r3;

        if $i0 != $i1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z4 = $z3;

        z5 = 0;

        z6 = 0;

        if z4 != 0 goto label3;

        r11 = "ComplicationSlotBounds must contain entries for each ComplicationType";

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label3:
        r12 = staticinvoke <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType[] values()>();

        i2 = 0;

        i3 = lengthof r12;

     label4:
        if i2 >= i3 goto label5;

        $r13 = r12[i2];

        i2 = i2 + 1;

        $r4 = r0.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        z1 = 0;

        z8 = 0;

        if z0 != 0 goto label4;

        r14 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Missing bounds for ", $r13);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label5:
        return;
    }

    public final java.util.Map getPerComplicationTypeBounds()
    {
        androidx.wear.complications.ComplicationSlotBounds r0;
        java.util.Map $r1;

        r0 := @this: androidx.wear.complications.ComplicationSlotBounds;

        $r1 = r0.<androidx.wear.complications.ComplicationSlotBounds: java.util.Map perComplicationTypeBounds>;

        return $r1;
    }

    public void <init>(android.graphics.RectF)
    {
        androidx.wear.complications.ComplicationSlotBounds r0, r7;
        android.graphics.RectF r1, r9;
        androidx.wear.complications.data.ComplicationType[] $r2, r4;
        java.util.LinkedHashMap r3, $r10;
        int i0, $i1, $i2, $i3, i4;
        androidx.wear.complications.data.ComplicationType r5, r6, r8;
        java.util.Map r12, r13;

        r0 := @this: androidx.wear.complications.ComplicationSlotBounds;

        r1 := @parameter0: android.graphics.RectF;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        $r2 = staticinvoke <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType[] values()>();

        r7 = r0;

        $r10 = new java.util.LinkedHashMap;

        $i1 = lengthof $r2;

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        $i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>($i3);

        r3 = $r10;

        r4 = $r2;

        i0 = lengthof r4;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        r5 = r4[i4];

        r6 = r5;

        r8 = r5;

        r12 = (java.util.Map) r3;

        r9 = r1;

        interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9);

        i4 = i4 + 1;

        goto label1;

     label2:
        r13 = (java.util.Map) r3;

        specialinvoke r7.<androidx.wear.complications.ComplicationSlotBounds: void <init>(java.util.Map)>(r13);

        return;
    }

