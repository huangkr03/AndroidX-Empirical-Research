androidx.paging.NullPaddedDiffResult
<androidx.paging.NullPaddedDiffResult: androidx.recyclerview.widget.DiffUtil$DiffResult diff>
<androidx.paging.NullPaddedDiffResult: boolean hasOverlap>
    public void <init>(androidx.recyclerview.widget.DiffUtil$DiffResult, boolean)
    {
        androidx.paging.NullPaddedDiffResult r0;
        androidx.recyclerview.widget.DiffUtil$DiffResult r1;
        boolean z0;

        r0 := @this: androidx.paging.NullPaddedDiffResult;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$DiffResult;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diff");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.NullPaddedDiffResult: androidx.recyclerview.widget.DiffUtil$DiffResult diff> = r1;

        r0.<androidx.paging.NullPaddedDiffResult: boolean hasOverlap> = z0;

        return;
    }

    public final androidx.recyclerview.widget.DiffUtil$DiffResult getDiff()
    {
        androidx.paging.NullPaddedDiffResult r0;
        androidx.recyclerview.widget.DiffUtil$DiffResult $r1;

        r0 := @this: androidx.paging.NullPaddedDiffResult;

        $r1 = r0.<androidx.paging.NullPaddedDiffResult: androidx.recyclerview.widget.DiffUtil$DiffResult diff>;

        return $r1;
    }

    public final boolean getHasOverlap()
    {
        androidx.paging.NullPaddedDiffResult r0;
        boolean $z0;

        r0 := @this: androidx.paging.NullPaddedDiffResult;

        $z0 = r0.<androidx.paging.NullPaddedDiffResult: boolean hasOverlap>;

        return $z0;
    }

