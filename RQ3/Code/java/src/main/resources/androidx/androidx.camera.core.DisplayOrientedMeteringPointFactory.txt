androidx.camera.core.DisplayOrientedMeteringPointFactory
<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mWidth>
<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mHeight>
<androidx.camera.core.DisplayOrientedMeteringPointFactory: android.view.Display mDisplay>
<androidx.camera.core.DisplayOrientedMeteringPointFactory: androidx.camera.core.CameraInfo mCameraInfo>
    public void <init>(android.view.Display, androidx.camera.core.CameraInfo, float, float)
    {
        androidx.camera.core.DisplayOrientedMeteringPointFactory r0;
        android.view.Display r1;
        androidx.camera.core.CameraInfo r2;
        float f0, f1;

        r0 := @this: androidx.camera.core.DisplayOrientedMeteringPointFactory;

        r1 := @parameter0: android.view.Display;

        r2 := @parameter1: androidx.camera.core.CameraInfo;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        specialinvoke r0.<androidx.camera.core.MeteringPointFactory: void <init>()>();

        r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mWidth> = f0;

        r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mHeight> = f1;

        r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: android.view.Display mDisplay> = r1;

        r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: androidx.camera.core.CameraInfo mCameraInfo> = r2;

        return;
    }

    private java.lang.Integer getLensFacing()
    {
        androidx.camera.core.DisplayOrientedMeteringPointFactory r0;
        androidx.camera.core.CameraInfo $r1, $r2;
        boolean $z0;
        androidx.camera.core.impl.CameraInfoInternal $r3;
        java.lang.Integer $r4;

        r0 := @this: androidx.camera.core.DisplayOrientedMeteringPointFactory;

        $r1 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: androidx.camera.core.CameraInfo mCameraInfo>;

        $z0 = $r1 instanceof androidx.camera.core.impl.CameraInfoInternal;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: androidx.camera.core.CameraInfo mCameraInfo>;

        $r3 = (androidx.camera.core.impl.CameraInfoInternal) $r2;

        $r4 = interfaceinvoke $r3.<androidx.camera.core.impl.CameraInfoInternal: java.lang.Integer getLensFacing()>();

        return $r4;

     label1:
        return null;
    }

    protected android.graphics.PointF convertPoint(float, float)
    {
        androidx.camera.core.DisplayOrientedMeteringPointFactory r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9;
        java.lang.Integer r1;
        boolean z0, $z1;
        int i0, $i1;
        android.graphics.PointF $r2;

        r0 := @this: androidx.camera.core.DisplayOrientedMeteringPointFactory;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mWidth>;

        f3 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: float mHeight>;

        r1 = specialinvoke r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: java.lang.Integer getLensFacing()>();

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        i0 = specialinvoke r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: int getRelativeCameraOrientation(boolean)>(z0);

        f4 = f0;

        f5 = f1;

        f6 = f2;

        f7 = f3;

        if i0 == 90 goto label3;

        if i0 != 270 goto label4;

     label3:
        f4 = f1;

        f5 = f0;

        f6 = f3;

        f7 = f2;

     label4:
        lookupswitch(i0)
        {
            case 90: goto label5;
            case 180: goto label6;
            case 270: goto label7;
            default: goto label8;
        };

     label5:
        f5 = f7 - f5;

        goto label8;

     label6:
        f4 = f6 - f4;

        f5 = f7 - f5;

        goto label8;

     label7:
        f4 = f6 - f4;

        goto label8;

     label8:
        if z0 == 0 goto label9;

        f4 = f6 - f4;

     label9:
        f8 = f4 / f6;

        f9 = f5 / f7;

        $r2 = new android.graphics.PointF;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>(f8, f9);

        return $r2;
    }

    private int getRelativeCameraOrientation(boolean)
    {
        androidx.camera.core.DisplayOrientedMeteringPointFactory r0;
        boolean z0;
        android.view.Display $r1;
        androidx.camera.core.CameraInfo $r2;
        int $i0, i1, i2;
        java.lang.Throwable $r3, r4;

        r0 := @this: androidx.camera.core.DisplayOrientedMeteringPointFactory;

        z0 := @parameter0: boolean;

     label1:
        $r1 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: android.view.Display mDisplay>;

        i1 = virtualinvoke $r1.<android.view.Display: int getRotation()>();

        $r2 = r0.<androidx.camera.core.DisplayOrientedMeteringPointFactory: androidx.camera.core.CameraInfo mCameraInfo>;

        i2 = interfaceinvoke $r2.<androidx.camera.core.CameraInfo: int getSensorRotationDegrees(int)>(i1);

        if z0 == 0 goto label2;

        $i0 = 360 - i2;

        i2 = $i0 % 360;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        i2 = 0;

     label4:
        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

