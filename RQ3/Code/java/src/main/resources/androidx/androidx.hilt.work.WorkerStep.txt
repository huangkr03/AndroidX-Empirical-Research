androidx.hilt.work.WorkerStep
<androidx.hilt.work.WorkerStep: javax.lang.model.util.Elements elements>
<androidx.hilt.work.WorkerStep: javax.lang.model.util.Types types>
<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.Messager messager>
<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>
    public java.lang.String 'annotation'()
    {
        androidx.hilt.work.WorkerStep r0;
        androidx.hilt.ClassNames $r1;
        com.squareup.javapoet.ClassName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.hilt.work.WorkerStep;

        $r1 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r2 = virtualinvoke $r1.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getHILT_WORKER()>();

        $r3 = virtualinvoke $r2.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        return $r3;
    }

    public void process(java.util.Set)
    {
        androidx.hilt.work.WorkerStep r0;
        java.util.Set r1, r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.element.Element r5;
        javax.lang.model.element.TypeElement r6;
        androidx.hilt.work.WorkerElements r7, r8, $r10;
        boolean z2, z3, $z5, $z6;
        java.util.LinkedHashSet $r9;
        androidx.hilt.work.WorkerGenerator $r11;
        javax.'annotation'.processing.ProcessingEnvironment $r12;
        java.lang.Iterable $r13;

        r0 := @this: androidx.hilt.work.WorkerStep;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotatedElements");

        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r9;

        $r13 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.element.Element) r4;

        r6 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "typeElement");

        $z6 = interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        if $z6 == 0 goto label2;

        $r10 = specialinvoke r0.<androidx.hilt.work.WorkerStep: androidx.hilt.work.WorkerElements parse(javax.lang.model.element.TypeElement)>(r6);

        if $r10 == null goto label2;

        r7 = $r10;

        z2 = 0;

        z3 = 0;

        r8 = r7;

        $r11 = new androidx.hilt.work.WorkerGenerator;

        $r12 = r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        specialinvoke $r11.<androidx.hilt.work.WorkerGenerator: void <init>(javax.'annotation'.processing.ProcessingEnvironment,androidx.hilt.work.WorkerElements)>($r12, r8);

        virtualinvoke $r11.<androidx.hilt.work.WorkerGenerator: void generate()>();

        goto label2;

     label2:
        goto label1;

     label3:
        return;
    }

    private final androidx.hilt.work.WorkerElements parse(javax.lang.model.element.TypeElement)
    {
        androidx.hilt.work.WorkerStep r0;
        javax.lang.model.element.TypeElement r1, $r9, $r17;
        java.util.List r2, $r19, $r21, $r24, $r28;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, z14, $z17, $z21, $z26;
        javax.lang.model.element.VariableElement r3;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.hilt.ClassNames $r4, $r12, $r33, $r35, $r46, $r65, $r69, $r75, $r99;
        javax.lang.model.util.Elements $r5, $r13;
        com.squareup.javapoet.ClassName $r6, $r14, $r34, $r37, $r48, $r67, $r71, $r76, $r100;
        java.lang.String $r7, $r15, $r38, $r44, $r49, $r55, $r68, $r72, $r79;
        java.lang.CharSequence $r8, $r16;
        javax.lang.model.util.Types $r10;
        javax.lang.model.type.TypeMirror $r11, $r18, $r31, $r97;
        java.lang.Iterable $r20, $r64, $r80, $r89, r94;
        java.util.ArrayList $r22, $r23;
        javax.lang.model.element.NestingKind $r25, $r26;
        java.lang.Object $r27, r83, r87, r91, r96;
        androidx.hilt.work.WorkerElements $r29;
        javax.lang.model.element.Element $r30, $r36, $r45, $r47, $r56, $r59, $r60, $r63, $r66, $r70;
        com.squareup.javapoet.TypeName $r32, $r98;
        java.lang.StringBuilder $r39, $r40, $r42, $r43, $r50, $r51, $r53, $r54, $r73, $r74, $r77, $r78;
        javax.lang.model.element.Name $r41, $r52;
        java.util.Set $r57, $r61;
        javax.lang.model.element.Modifier $r58, $r62;
        java.util.Collection r81, r85;
        java.util.Iterator $r82, $r86, $r90, r95;
        javax.lang.model.element.ExecutableElement r84, r88, $r92, $r93;

        r0 := @this: androidx.hilt.work.WorkerStep;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        z14 = 1;

        $r5 = r0.<androidx.hilt.work.WorkerStep: javax.lang.model.util.Elements elements>;

        $r4 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r6 = virtualinvoke $r4.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getWORKER_ASSISTED_FACTORY()>();

        $r7 = virtualinvoke $r6.<com.squareup.javapoet.ClassName: java.lang.String toString()>();

        $r8 = (java.lang.CharSequence) $r7;

        $r9 = interfaceinvoke $r5.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r8);

        if $r9 != null goto label01;

        staticinvoke <androidx.hilt.work.WorkerStep: void error$default(androidx.hilt.work.WorkerStep,java.lang.String,javax.lang.model.element.Element,int,java.lang.Object)>(r0, "To use @HiltWorker you must add the \'work\' artifact. androidx.hilt:hilt-work:<version>", null, 2, null);

        z14 = 0;

     label01:
        $r10 = r0.<androidx.hilt.work.WorkerStep: javax.lang.model.util.Types types>;

        $r11 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $r13 = r0.<androidx.hilt.work.WorkerStep: javax.lang.model.util.Elements elements>;

        $r12 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r14 = virtualinvoke $r12.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getLISTENABLE_WORKER()>();

        $r15 = virtualinvoke $r14.<com.squareup.javapoet.ClassName: java.lang.String toString()>();

        $r16 = (java.lang.CharSequence) $r15;

        $r17 = interfaceinvoke $r13.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r16);

        $r18 = interfaceinvoke $r17.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $z2 = interfaceinvoke $r10.<javax.lang.model.util.Types: boolean isSubtype(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r11, $r18);

        if $z2 != 0 goto label02;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@HiltWorker is only supported on types that subclass ");

        $r75 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r76 = virtualinvoke $r75.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getLISTENABLE_WORKER()>();

        $r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.hilt.work.WorkerStep: void error$default(androidx.hilt.work.WorkerStep,java.lang.String,javax.lang.model.element.Element,int,java.lang.Object)>(r0, $r79, null, 2, null);

        z14 = 0;

     label02:
        $r19 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        $r20 = (java.lang.Iterable) $r19;

        $r21 = staticinvoke <javax.lang.model.util.ElementFilter: java.util.List constructorsIn(java.lang.Iterable)>($r20);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "ElementFilter.constructo\u2026Element.enclosedElements)");

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r81 = (java.util.Collection) $r22;

        $r80 = (java.lang.Iterable) $r21;

        $r82 = interfaceinvoke $r80.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z17 = interfaceinvoke $r82.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label05;

        r83 = interfaceinvoke $r82.<java.util.Iterator: java.lang.Object next()>();

        r84 = (javax.lang.model.element.ExecutableElement) r83;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r84, "it");

        $r66 = (javax.lang.model.element.Element) r84;

        $r65 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r67 = virtualinvoke $r65.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getINJECT()>();

        $r68 = virtualinvoke $r67.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r68, "ClassNames.INJECT.canonicalName()");

        $z11 = staticinvoke <androidx.hilt.ext.AnnotationProcessingKt: boolean hasAnnotation(javax.lang.model.element.Element,java.lang.String)>($r66, $r68);

        if $z11 == 0 goto label04;

        staticinvoke <androidx.hilt.work.WorkerStep: void error$default(androidx.hilt.work.WorkerStep,java.lang.String,javax.lang.model.element.Element,int,java.lang.Object)>(r0, "Worker constructor should be annotated with @AssistedInject instead of @Inject.", null, 2, null);

        z14 = 0;

     label04:
        $r70 = (javax.lang.model.element.Element) r84;

        $r69 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r71 = virtualinvoke $r69.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getASSISTED_INJECT()>();

        $r72 = virtualinvoke $r71.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r72, "ClassNames.ASSISTED_INJECT.canonicalName()");

        $z12 = staticinvoke <androidx.hilt.ext.AnnotationProcessingKt: boolean hasAnnotation(javax.lang.model.element.Element,java.lang.String)>($r70, $r72);

        if $z12 == 0 goto label03;

        interfaceinvoke r81.<java.util.Collection: boolean add(java.lang.Object)>(r83);

        goto label03;

     label05:
        r2 = (java.util.List) r81;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 == 1 goto label06;

        $r63 = (javax.lang.model.element.Element) r1;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>("@HiltWorker annotated class should contain exactly one @AssistedInject annotated constructor.", $r63);

        z14 = 0;

     label06:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r85 = (java.util.Collection) $r23;

        $r64 = (java.lang.Iterable) r2;

        $r86 = interfaceinvoke $r64.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z21 = interfaceinvoke $r86.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label08;

        r87 = interfaceinvoke $r86.<java.util.Iterator: java.lang.Object next()>();

        r88 = (javax.lang.model.element.ExecutableElement) r87;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r88, "it");

        $r61 = interfaceinvoke r88.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r62 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $z9 = interfaceinvoke $r61.<java.util.Set: boolean contains(java.lang.Object)>($r62);

        if $z9 == 0 goto label07;

        interfaceinvoke r85.<java.util.Collection: boolean add(java.lang.Object)>(r87);

        goto label07;

     label08:
        $r24 = (java.util.List) r85;

        $r89 = (java.lang.Iterable) $r24;

        $r90 = interfaceinvoke $r89.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r90.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        r91 = interfaceinvoke $r90.<java.util.Iterator: java.lang.Object next()>();

        $r92 = (javax.lang.model.element.ExecutableElement) r91;

        $r60 = (javax.lang.model.element.Element) $r92;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>("@AssistedInject annotated constructors must not be private.", $r60);

        z14 = 0;

        goto label09;

     label10:
        $r25 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: javax.lang.model.element.NestingKind getNestingKind()>();

        $r26 = <javax.lang.model.element.NestingKind: javax.lang.model.element.NestingKind MEMBER>;

        if $r25 != $r26 goto label11;

        $r57 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: java.util.Set getModifiers()>();

        $r58 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier STATIC>;

        $z8 = interfaceinvoke $r57.<java.util.Set: boolean contains(java.lang.Object)>($r58);

        if $z8 != 0 goto label11;

        $r59 = (javax.lang.model.element.Element) r1;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>("@HiltWorker may only be used on inner classes if they are static.", $r59);

        z14 = 0;

     label11:
        if z14 != 0 goto label12;

        return null;

     label12:
        $r27 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r2);

        $r93 = (javax.lang.model.element.ExecutableElement) $r27;

        $i3 = -1;

        $i4 = -1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r93, "injectConstructor");

        $r28 = interfaceinvoke $r93.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "injectConstructor.parameters");

        r94 = (java.lang.Iterable) $r28;

        $i5 = 0;

        r95 = interfaceinvoke r94.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        r96 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        $i2 = $i5;

        $i5 = $i5 + 1;

        z0 = 0;

        if $i2 >= 0 goto label14;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label14:
        r3 = (javax.lang.model.element.VariableElement) r96;

        i0 = $i2;

        $r31 = interfaceinvoke r3.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        $r32 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($r31);

        $r33 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r34 = virtualinvoke $r33.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getCONTEXT()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r32, $r34);

        if $z5 == 0 goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "param");

        $r47 = (javax.lang.model.element.Element) r3;

        $r46 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r48 = virtualinvoke $r46.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getASSISTED()>();

        $r49 = virtualinvoke $r48.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r49, "ClassNames.ASSISTED.canonicalName()");

        $z7 = staticinvoke <androidx.hilt.ext.AnnotationProcessingKt: boolean hasAnnotation(javax.lang.model.element.Element,java.lang.String)>($r47, $r49);

        if $z7 != 0 goto label15;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing @Assisted annotation in param \'");

        $r52 = interfaceinvoke r3.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        $r56 = (javax.lang.model.element.Element) r3;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>($r55, $r56);

        z14 = 0;

     label15:
        $i3 = i0;

     label16:
        $r97 = interfaceinvoke r3.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        $r98 = staticinvoke <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName get(javax.lang.model.type.TypeMirror)>($r97);

        $r99 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r100 = virtualinvoke $r99.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getWORKER_PARAMETERS()>();

        $z26 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r98, $r100);

        if $z26 == 0 goto label18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "param");

        $r36 = (javax.lang.model.element.Element) r3;

        $r35 = <androidx.hilt.ClassNames: androidx.hilt.ClassNames INSTANCE>;

        $r37 = virtualinvoke $r35.<androidx.hilt.ClassNames: com.squareup.javapoet.ClassName getASSISTED()>();

        $r38 = virtualinvoke $r37.<com.squareup.javapoet.ClassName: java.lang.String canonicalName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r38, "ClassNames.ASSISTED.canonicalName()");

        $z6 = staticinvoke <androidx.hilt.ext.AnnotationProcessingKt: boolean hasAnnotation(javax.lang.model.element.Element,java.lang.String)>($r36, $r38);

        if $z6 != 0 goto label17;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing @Assisted annotation in param \'");

        $r41 = interfaceinvoke r3.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = (javax.lang.model.element.Element) r3;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>($r44, $r45);

        z14 = 0;

     label17:
        $i4 = i0;

     label18:
        goto label13;

     label19:
        if $i3 <= $i4 goto label20;

        $r30 = (javax.lang.model.element.Element) $r93;

        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>("The \'Context\' parameter must be declared before the \'WorkerParameters\' in the @AssistedInject constructor of a @HiltWorker annotated class.", $r30);

     label20:
        if z14 != 0 goto label21;

        return null;

     label21:
        $r29 = new androidx.hilt.work.WorkerElements;

        specialinvoke $r29.<androidx.hilt.work.WorkerElements: void <init>(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement)>(r1, $r93);

        return $r29;
    }

    private final void error(java.lang.String, javax.lang.model.element.Element)
    {
        androidx.hilt.work.WorkerStep r0;
        java.lang.String r1;
        javax.lang.model.element.Element r2;
        java.lang.CharSequence $r3;
        javax.tools.Diagnostic$Kind $r4;
        javax.'annotation'.processing.Messager $r5;

        r0 := @this: androidx.hilt.work.WorkerStep;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.lang.model.element.Element;

        $r5 = r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.Messager messager>;

        $r4 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        $r3 = (java.lang.CharSequence) r1;

        interfaceinvoke $r5.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence,javax.lang.model.element.Element)>($r4, $r3, r2);

        return;
    }

    static void error$default(androidx.hilt.work.WorkerStep, java.lang.String, javax.lang.model.element.Element, int, java.lang.Object)
    {
        androidx.hilt.work.WorkerStep r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Object r2;
        javax.lang.model.element.Element r3;

        r0 := @parameter0: androidx.hilt.work.WorkerStep;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.lang.model.element.Element;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = (javax.lang.model.element.Element) null;

     label1:
        specialinvoke r0.<androidx.hilt.work.WorkerStep: void error(java.lang.String,javax.lang.model.element.Element)>(r1, r3);

        return;
    }

    public void <init>(javax.'annotation'.processing.ProcessingEnvironment)
    {
        androidx.hilt.work.WorkerStep r0;
        javax.'annotation'.processing.ProcessingEnvironment r1, $r2, $r4, $r6;
        javax.lang.model.util.Elements $r3;
        javax.lang.model.util.Types $r5;
        javax.'annotation'.processing.Messager $r7;

        r0 := @this: androidx.hilt.work.WorkerStep;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "processingEnv");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv> = r1;

        $r2 = r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r3 = interfaceinvoke $r2.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        r0.<androidx.hilt.work.WorkerStep: javax.lang.model.util.Elements elements> = $r3;

        $r4 = r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r5 = interfaceinvoke $r4.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        r0.<androidx.hilt.work.WorkerStep: javax.lang.model.util.Types types> = $r5;

        $r6 = r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r7 = interfaceinvoke $r6.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        r0.<androidx.hilt.work.WorkerStep: javax.'annotation'.processing.Messager messager> = $r7;

        return;
    }

