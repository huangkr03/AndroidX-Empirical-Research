androidx.work.impl.background.gcm.WorkManagerGcmService
<androidx.work.impl.background.gcm.WorkManagerGcmService: java.lang.String TAG>
<androidx.work.impl.background.gcm.WorkManagerGcmService: boolean mIsShutdown>
<androidx.work.impl.background.gcm.WorkManagerGcmService: androidx.work.impl.background.gcm.WorkManagerGcmDispatcher mGcmDispatcher>
    public void <init>()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        specialinvoke r0.<com.google.android.gms.gcm.GcmTaskService: void <init>()>();

        return;
    }

    public void onCreate()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        specialinvoke r0.<com.google.android.gms.gcm.GcmTaskService: void onCreate()>();

        specialinvoke r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: void initializeDispatcher()>();

        return;
    }

    public void onInitializeTasks()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;
        androidx.work.impl.background.gcm.WorkManagerGcmDispatcher $r1;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        specialinvoke r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: void checkDispatcher()>();

        $r1 = r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: androidx.work.impl.background.gcm.WorkManagerGcmDispatcher mGcmDispatcher>;

        virtualinvoke $r1.<androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: void onInitializeTasks()>();

        return;
    }

    public int onRunTask(com.google.android.gms.gcm.TaskParams)
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;
        com.google.android.gms.gcm.TaskParams r1;
        androidx.work.impl.background.gcm.WorkManagerGcmDispatcher $r2;
        int $i0;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        r1 := @parameter0: com.google.android.gms.gcm.TaskParams;

        specialinvoke r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: void checkDispatcher()>();

        $r2 = r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: androidx.work.impl.background.gcm.WorkManagerGcmDispatcher mGcmDispatcher>;

        $i0 = virtualinvoke $r2.<androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: int onRunTask(com.google.android.gms.gcm.TaskParams)>(r1);

        return $i0;
    }

    public void onDestroy()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        specialinvoke r0.<com.google.android.gms.gcm.GcmTaskService: void onDestroy()>();

        r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: boolean mIsShutdown> = 1;

        return;
    }

    private void checkDispatcher()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;
        boolean $z0;
        androidx.work.Logger $r1;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        $z0 = r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: boolean mIsShutdown>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        virtualinvoke $r1.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>("WorkManagerGcmService", "Re-initializing dispatcher after a request to shutdown");

        specialinvoke r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: void initializeDispatcher()>();

     label1:
        return;
    }

    private void initializeDispatcher()
    {
        androidx.work.impl.background.gcm.WorkManagerGcmService r0;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.impl.utils.WorkTimer r2, $r4;
        android.content.Context $r3;
        androidx.work.Configuration $r5;
        androidx.work.RunnableScheduler $r6;
        androidx.work.impl.background.gcm.WorkManagerGcmDispatcher $r7;

        r0 := @this: androidx.work.impl.background.gcm.WorkManagerGcmService;

        r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: boolean mIsShutdown> = 0;

        $r3 = virtualinvoke r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: android.content.Context getApplicationContext()>();

        r1 = staticinvoke <androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance(android.content.Context)>($r3);

        $r4 = new androidx.work.impl.utils.WorkTimer;

        $r5 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()>();

        $r6 = virtualinvoke $r5.<androidx.work.Configuration: androidx.work.RunnableScheduler getRunnableScheduler()>();

        specialinvoke $r4.<androidx.work.impl.utils.WorkTimer: void <init>(androidx.work.RunnableScheduler)>($r6);

        r2 = $r4;

        $r7 = new androidx.work.impl.background.gcm.WorkManagerGcmDispatcher;

        specialinvoke $r7.<androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: void <init>(androidx.work.impl.WorkManagerImpl,androidx.work.impl.utils.WorkTimer)>(r1, r2);

        r0.<androidx.work.impl.background.gcm.WorkManagerGcmService: androidx.work.impl.background.gcm.WorkManagerGcmDispatcher mGcmDispatcher> = $r7;

        return;
    }

