androidx.recyclerview.widget.DiffUtil
<androidx.recyclerview.widget.DiffUtil: java.util.Comparator DIAGONAL_COMPARATOR>
    private void <init>()
    {
        androidx.recyclerview.widget.DiffUtil r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)
    {
        androidx.recyclerview.widget.DiffUtil$Callback r0;
        androidx.recyclerview.widget.DiffUtil$DiffResult $r1;

        r0 := @parameter0: androidx.recyclerview.widget.DiffUtil$Callback;

        $r1 = staticinvoke <androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)>(r0, 1);

        return $r1;
    }

    public static androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback, boolean)
    {
        androidx.recyclerview.widget.DiffUtil$Callback r0;
        boolean z0, $z2, $z4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.util.ArrayList r1, r2, r5, $r10, $r11, $r15;
        androidx.recyclerview.widget.DiffUtil$CenteredArray r3, r4, $r13, $r14;
        androidx.recyclerview.widget.DiffUtil$Range r6, r8, r9, $r12, $r23;
        androidx.recyclerview.widget.DiffUtil$Snake r7;
        java.util.Comparator $r16;
        androidx.recyclerview.widget.DiffUtil$DiffResult $r17;
        int[] $r18, $r19;
        java.lang.Object $r20, $r21;
        androidx.recyclerview.widget.DiffUtil$Diagonal $r22;

        r0 := @parameter0: androidx.recyclerview.widget.DiffUtil$Callback;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()>();

        i1 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r1 = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

        $r12 = new androidx.recyclerview.widget.DiffUtil$Range;

        specialinvoke $r12.<androidx.recyclerview.widget.DiffUtil$Range: void <init>(int,int,int,int)>(0, i0, 0, i1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        $i3 = i0 + i1;

        $i4 = $i3 + 1;

        i2 = $i4 / 2;

        $r13 = new androidx.recyclerview.widget.DiffUtil$CenteredArray;

        $i5 = i2 * 2;

        $i6 = $i5 + 1;

        specialinvoke $r13.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void <init>(int)>($i6);

        r3 = $r13;

        $r14 = new androidx.recyclerview.widget.DiffUtil$CenteredArray;

        $i7 = i2 * 2;

        $i8 = $i7 + 1;

        specialinvoke $r14.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void <init>(int)>($i8);

        r4 = $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r5 = $r15;

     label1:
        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label7;

        $i9 = interfaceinvoke r2.<java.util.List: int size()>();

        $i10 = $i9 - 1;

        $r20 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>($i10);

        r6 = (androidx.recyclerview.widget.DiffUtil$Range) $r20;

        r7 = staticinvoke <androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray)>(r6, r0, r3, r4);

        if r7 == null goto label5;

        $i11 = virtualinvoke r7.<androidx.recyclerview.widget.DiffUtil$Snake: int diagonalSize()>();

        if $i11 <= 0 goto label2;

        $r22 = virtualinvoke r7.<androidx.recyclerview.widget.DiffUtil$Snake: androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r22);

     label2:
        $z4 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        $r23 = new androidx.recyclerview.widget.DiffUtil$Range;

        specialinvoke $r23.<androidx.recyclerview.widget.DiffUtil$Range: void <init>()>();

        goto label4;

     label3:
        $i12 = interfaceinvoke r5.<java.util.List: int size()>();

        $i13 = $i12 - 1;

        $r21 = interfaceinvoke r5.<java.util.List: java.lang.Object remove(int)>($i13);

        $r23 = (androidx.recyclerview.widget.DiffUtil$Range) $r21;

     label4:
        r8 = $r23;

        $i14 = r6.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>;

        r8.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart> = $i14;

        $i15 = r6.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart>;

        r8.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart> = $i15;

        $i16 = r7.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        r8.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd> = $i16;

        $i17 = r7.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        r8.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd> = $i17;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r8);

        r9 = r6;

        $i18 = r6.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>;

        r9.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd> = $i18;

        $i19 = r6.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd>;

        r9.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd> = $i19;

        $i20 = r7.<androidx.recyclerview.widget.DiffUtil$Snake: int endX>;

        r9.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart> = $i20;

        $i21 = r7.<androidx.recyclerview.widget.DiffUtil$Snake: int endY>;

        r9.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart> = $i21;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label6;

     label5:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6);

     label6:
        goto label1;

     label7:
        $r16 = <androidx.recyclerview.widget.DiffUtil: java.util.Comparator DIAGONAL_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r16);

        $r17 = new androidx.recyclerview.widget.DiffUtil$DiffResult;

        $r18 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] backingData()>();

        $r19 = virtualinvoke r4.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] backingData()>();

        specialinvoke $r17.<androidx.recyclerview.widget.DiffUtil$DiffResult: void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean)>(r0, r1, $r18, $r19, z0);

        return $r17;
    }

    private static androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range, androidx.recyclerview.widget.DiffUtil$Callback, androidx.recyclerview.widget.DiffUtil$CenteredArray, androidx.recyclerview.widget.DiffUtil$CenteredArray)
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        androidx.recyclerview.widget.DiffUtil$Callback r1;
        androidx.recyclerview.widget.DiffUtil$CenteredArray r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        androidx.recyclerview.widget.DiffUtil$Snake r4, r5;

        r0 := @parameter0: androidx.recyclerview.widget.DiffUtil$Range;

        r1 := @parameter1: androidx.recyclerview.widget.DiffUtil$Callback;

        r2 := @parameter2: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        r3 := @parameter3: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        if $i1 < 1 goto label1;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        if $i2 >= 1 goto label2;

     label1:
        return null;

     label2:
        $i3 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 1;

        i0 = $i6 / 2;

        $i7 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>;

        virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void set(int,int)>(1, $i7);

        $i8 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>;

        virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void set(int,int)>(1, $i8);

        i9 = 0;

     label3:
        if i9 >= i0 goto label6;

        r4 = staticinvoke <androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int)>(r0, r1, r2, r3, i9);

        if r4 == null goto label4;

        return r4;

     label4:
        r5 = staticinvoke <androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int)>(r0, r1, r2, r3, i9);

        if r5 == null goto label5;

        return r5;

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        return null;
    }

    private static androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range, androidx.recyclerview.widget.DiffUtil$Callback, androidx.recyclerview.widget.DiffUtil$CenteredArray, androidx.recyclerview.widget.DiffUtil$CenteredArray, int)
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        androidx.recyclerview.widget.DiffUtil$Callback r1;
        androidx.recyclerview.widget.DiffUtil$CenteredArray r2, r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i27, $i28, $i29, $i30, i31, $i32, $i33;
        boolean z0, $z1, $z2;
        androidx.recyclerview.widget.DiffUtil$Snake r4, $r5;

        r0 := @parameter0: androidx.recyclerview.widget.DiffUtil$Range;

        r1 := @parameter1: androidx.recyclerview.widget.DiffUtil$Callback;

        r2 := @parameter2: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        r3 := @parameter3: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter4: int;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        $i6 = $i4 - $i5;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $i8 = $i7 % 2;

        if $i8 != 1 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        i1 = $i9 - $i10;

        i24 = neg i0;

     label03:
        if i24 > i0 goto label13;

        $i11 = neg i0;

        if i24 == $i11 goto label04;

        if i24 == i0 goto label05;

        $i20 = i24 + 1;

        $i21 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i20);

        $i22 = i24 - 1;

        $i23 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i22);

        if $i21 <= $i23 goto label05;

     label04:
        $i12 = i24 + 1;

        $i13 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i12);

        i25 = $i13;

        i26 = $i13;

        goto label06;

     label05:
        $i19 = i24 - 1;

        i25 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i19);

        i26 = i25 + 1;

     label06:
        $i27 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart>;

        $i28 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>;

        $i29 = i26 - $i28;

        $i30 = $i27 + $i29;

        i31 = $i30 - i24;

        if i0 == 0 goto label07;

        if i26 == i25 goto label08;

     label07:
        $i32 = i31;

        goto label09;

     label08:
        $i32 = i31 - 1;

     label09:
        i2 = $i32;

     label10:
        $i33 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>;

        if i26 >= $i33 goto label11;

        $i18 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd>;

        if i31 >= $i18 goto label11;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i26, i31);

        if $z1 == 0 goto label11;

        i26 = i26 + 1;

        i31 = i31 + 1;

        goto label10;

     label11:
        virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void set(int,int)>(i24, i26);

        if z0 == 0 goto label12;

        i3 = i1 - i24;

        $i14 = neg i0;

        $i15 = $i14 + 1;

        if i3 < $i15 goto label12;

        $i16 = i0 - 1;

        if i3 > $i16 goto label12;

        $i17 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>(i3);

        if $i17 > i26 goto label12;

        $r5 = new androidx.recyclerview.widget.DiffUtil$Snake;

        specialinvoke $r5.<androidx.recyclerview.widget.DiffUtil$Snake: void <init>()>();

        r4 = $r5;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int startX> = i25;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int startY> = i2;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int endX> = i26;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int endY> = i31;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: boolean reverse> = 0;

        return r4;

     label12:
        i24 = i24 + 2;

        goto label03;

     label13:
        return null;
    }

    private static androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range, androidx.recyclerview.widget.DiffUtil$Callback, androidx.recyclerview.widget.DiffUtil$CenteredArray, androidx.recyclerview.widget.DiffUtil$CenteredArray, int)
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        androidx.recyclerview.widget.DiffUtil$Callback r1;
        androidx.recyclerview.widget.DiffUtil$CenteredArray r2, r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, $i26, $i27, $i28, $i29, i30, $i31, $i32;
        boolean z0, $z1, $z2;
        androidx.recyclerview.widget.DiffUtil$Snake r4, $r5;

        r0 := @parameter0: androidx.recyclerview.widget.DiffUtil$Range;

        r1 := @parameter1: androidx.recyclerview.widget.DiffUtil$Callback;

        r2 := @parameter2: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        r3 := @parameter3: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter4: int;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        $i6 = $i4 - $i5;

        $i7 = $i6 % 2;

        if $i7 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldSize()>();

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Range: int newSize()>();

        i1 = $i8 - $i9;

        i23 = neg i0;

     label03:
        if i23 > i0 goto label13;

        $i10 = neg i0;

        if i23 == $i10 goto label04;

        if i23 == i0 goto label05;

        $i19 = i23 + 1;

        $i20 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i19);

        $i21 = i23 - 1;

        $i22 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i21);

        if $i20 >= $i22 goto label05;

     label04:
        $i11 = i23 + 1;

        $i12 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i11);

        i24 = $i12;

        i25 = $i12;

        goto label06;

     label05:
        $i18 = i23 - 1;

        i24 = virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>($i18);

        i25 = i24 - 1;

     label06:
        $i26 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd>;

        $i27 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>;

        $i28 = $i27 - i25;

        $i29 = $i28 - i23;

        i30 = $i26 - $i29;

        if i0 == 0 goto label07;

        if i25 == i24 goto label08;

     label07:
        $i31 = i30;

        goto label09;

     label08:
        $i31 = i30 + 1;

     label09:
        i2 = $i31;

     label10:
        $i32 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>;

        if i25 <= $i32 goto label11;

        $i15 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart>;

        if i30 <= $i15 goto label11;

        $i17 = i25 - 1;

        $i16 = i30 - 1;

        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)>($i17, $i16);

        if $z1 == 0 goto label11;

        i25 = i25 + -1;

        i30 = i30 + -1;

        goto label10;

     label11:
        virtualinvoke r3.<androidx.recyclerview.widget.DiffUtil$CenteredArray: void set(int,int)>(i23, i25);

        if z0 == 0 goto label12;

        i3 = i1 - i23;

        $i13 = neg i0;

        if i3 < $i13 goto label12;

        if i3 > i0 goto label12;

        $i14 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int get(int)>(i3);

        if $i14 < i25 goto label12;

        $r5 = new androidx.recyclerview.widget.DiffUtil$Snake;

        specialinvoke $r5.<androidx.recyclerview.widget.DiffUtil$Snake: void <init>()>();

        r4 = $r5;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int startX> = i25;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int startY> = i30;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int endX> = i24;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: int endY> = i2;

        r4.<androidx.recyclerview.widget.DiffUtil$Snake: boolean reverse> = 1;

        return r4;

     label12:
        i23 = i23 + 2;

        goto label03;

     label13:
        return null;
    }

    static void <clinit>()
    {
        androidx.recyclerview.widget.DiffUtil$1 $r0;

        $r0 = new androidx.recyclerview.widget.DiffUtil$1;

        specialinvoke $r0.<androidx.recyclerview.widget.DiffUtil$1: void <init>()>();

        <androidx.recyclerview.widget.DiffUtil: java.util.Comparator DIAGONAL_COMPARATOR> = $r0;

        return;
    }

androidx.recyclerview.widget.DiffUtil$1
    void <init>()
    {
        androidx.recyclerview.widget.DiffUtil$1 r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.recyclerview.widget.DiffUtil$Diagonal, androidx.recyclerview.widget.DiffUtil$Diagonal)
    {
        androidx.recyclerview.widget.DiffUtil$1 r0;
        androidx.recyclerview.widget.DiffUtil$Diagonal r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$1;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$Diagonal;

        r2 := @parameter1: androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i1 = r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        $i0 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.recyclerview.widget.DiffUtil$1 r0;
        java.lang.Object r1, r2;
        androidx.recyclerview.widget.DiffUtil$Diagonal $r3, $r4;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.recyclerview.widget.DiffUtil$Diagonal) r1;

        $r3 = (androidx.recyclerview.widget.DiffUtil$Diagonal) r2;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$1: int compare(androidx.recyclerview.widget.DiffUtil$Diagonal,androidx.recyclerview.widget.DiffUtil$Diagonal)>($r4, $r3);

        return $i0;
    }

androidx.recyclerview.widget.DiffUtil$Callback
    public void <init>()
    {
        androidx.recyclerview.widget.DiffUtil$Callback r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()>
<androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()>
<androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)>
<androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)>
    public java.lang.Object getChangePayload(int, int)
    {
        androidx.recyclerview.widget.DiffUtil$Callback r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Callback;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return null;
    }

androidx.recyclerview.widget.DiffUtil$CenteredArray
<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>
<androidx.recyclerview.widget.DiffUtil$CenteredArray: int mMid>
    void <init>(int)
    {
        androidx.recyclerview.widget.DiffUtil$CenteredArray r0;
        int i0, $i1, $i2;
        int[] $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[i0];

        r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData> = $r1;

        $r2 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>;

        $i1 = lengthof $r2;

        $i2 = $i1 / 2;

        r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int mMid> = $i2;

        return;
    }

    int get(int)
    {
        androidx.recyclerview.widget.DiffUtil$CenteredArray r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int mMid>;

        $i2 = i0 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    int[] backingData()
    {
        androidx.recyclerview.widget.DiffUtil$CenteredArray r0;
        int[] $r1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        $r1 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>;

        return $r1;
    }

    void set(int, int)
    {
        androidx.recyclerview.widget.DiffUtil$CenteredArray r0;
        int i0, i1, $i2, $i3;
        int[] $r1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>;

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int mMid>;

        $i3 = i0 + $i2;

        $r1[$i3] = i1;

        return;
    }

    public void fill(int)
    {
        androidx.recyclerview.widget.DiffUtil$CenteredArray r0;
        int i0;
        int[] $r1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$CenteredArray;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.DiffUtil$CenteredArray: int[] mData>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, i0);

        return;
    }

androidx.recyclerview.widget.DiffUtil$Diagonal
<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>
<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>
<androidx.recyclerview.widget.DiffUtil$Diagonal: int size>
    void <init>(int, int, int)
    {
        androidx.recyclerview.widget.DiffUtil$Diagonal r0;
        int i0, i1, i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Diagonal;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x> = i0;

        r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y> = i1;

        r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int size> = i2;

        return;
    }

    int endX()
    {
        androidx.recyclerview.widget.DiffUtil$Diagonal r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int size>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    int endY()
    {
        androidx.recyclerview.widget.DiffUtil$Diagonal r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Diagonal: int size>;

        $i2 = $i1 + $i0;

        return $i2;
    }

androidx.recyclerview.widget.DiffUtil$DiffResult
<androidx.recyclerview.widget.DiffUtil$DiffResult: int NO_POSITION>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_NOT_CHANGED>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_CHANGED>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MOVED_CHANGED>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MOVED_NOT_CHANGED>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MOVED>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_OFFSET>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int FLAG_MASK>
<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>
<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>
<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize>
<androidx.recyclerview.widget.DiffUtil$DiffResult: boolean mDetectMoves>
    void <init>(androidx.recyclerview.widget.DiffUtil$Callback, java.util.List, int[], int[], boolean)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        androidx.recyclerview.widget.DiffUtil$Callback r1;
        java.util.List r2;
        int[] r3, r4, $r5, $r6;
        boolean z0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$Callback;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: int[];

        r4 := @parameter3: int[];

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals> = r2;

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses> = r3;

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses> = r4;

        $r5 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r5, 0);

        $r6 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r6, 0);

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback> = r1;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()>();

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize> = $i0;

        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()>();

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize> = $i1;

        r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: boolean mDetectMoves> = z0;

        specialinvoke r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: void addEdgeDiagonals()>();

        specialinvoke r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: void findMatchingItems()>();

        return;
    }

    private void addEdgeDiagonals()
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        androidx.recyclerview.widget.DiffUtil$Diagonal r1, $r5, $r7, $r9;
        java.util.List $r2, $r3, $r6, $r8;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        $r2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (androidx.recyclerview.widget.DiffUtil$Diagonal) $r4;

     label2:
        r1 = $r5;

        if r1 == null goto label3;

        $i0 = r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        if $i0 != 0 goto label3;

        $i1 = r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        if $i1 == 0 goto label4;

     label3:
        $r6 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $r7 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        specialinvoke $r7.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>(0, 0, 0);

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>(0, $r7);

     label4:
        $r8 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $r9 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize>;

        specialinvoke $r9.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>($i2, $i3, 0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    private void findMatchingItems()
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        java.util.Iterator r1;
        androidx.recyclerview.widget.DiffUtil$Diagonal r2;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        boolean z0, $z1, $z2;
        byte b2, $b11;
        java.util.List $r3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.DiffUtil$Callback $r5;
        int[] $r6, $r7;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        $r3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.recyclerview.widget.DiffUtil$Diagonal) $r4;

        i10 = 0;

     label2:
        $i3 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int size>;

        if i10 >= $i3 goto label5;

        $i4 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        i0 = $i4 + i10;

        $i5 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        i1 = $i5 + i10;

        $r5 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        z0 = virtualinvoke $r5.<androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i0, i1);

        if z0 == 0 goto label3;

        $b11 = 1;

        goto label4;

     label3:
        $b11 = 2;

     label4:
        b2 = $b11;

        $r6 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i6 = i1 << 4;

        $i7 = $i6 | b2;

        $r6[i0] = $i7;

        $r7 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i8 = i0 << 4;

        $i9 = $i8 | b2;

        $r7[i1] = $i9;

        i10 = i10 + 1;

        goto label2;

     label5:
        goto label1;

     label6:
        $z2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: boolean mDetectMoves>;

        if $z2 == 0 goto label7;

        specialinvoke r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: void findMoveMatches()>();

     label7:
        return;
    }

    private void findMoveMatches()
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        java.util.Iterator r1;
        androidx.recyclerview.widget.DiffUtil$Diagonal r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, $i1, i2;
        int[] $r5;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        i2 = 0;

        $r3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.recyclerview.widget.DiffUtil$Diagonal) $r4;

     label2:
        $i0 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        if i2 >= $i0 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i1 = $r5[i2];

        if $i1 != 0 goto label3;

        specialinvoke r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: void findMatchingAddition(int)>(i2);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        i2 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int endX()>();

        goto label1;

     label5:
        return;
    }

    private void findMatchingAddition(int)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        androidx.recyclerview.widget.DiffUtil$Diagonal r1;
        boolean z0, z1;
        byte b2, $b11;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        int[] $r5, $r8, $r9;
        androidx.recyclerview.widget.DiffUtil$Callback $r6, $r7;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        i9 = 0;

        $r2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i10 = 0;

     label1:
        if i10 >= i1 goto label7;

        $r3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i10);

        r1 = (androidx.recyclerview.widget.DiffUtil$Diagonal) $r4;

     label2:
        $i3 = r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        if i9 >= $i3 goto label6;

        $r5 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i4 = $r5[i9];

        if $i4 != 0 goto label5;

        $r6 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        z0 = virtualinvoke $r6.<androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)>(i0, i9);

        if z0 == 0 goto label5;

        $r7 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        z1 = virtualinvoke $r7.<androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)>(i0, i9);

        if z1 == 0 goto label3;

        $b11 = 8;

        goto label4;

     label3:
        $b11 = 4;

     label4:
        b2 = $b11;

        $r8 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i5 = i9 << 4;

        $i6 = $i5 | b2;

        $r8[i0] = $i6;

        $r9 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        $i7 = i0 << 4;

        $i8 = $i7 | b2;

        $r9[i9] = $i8;

        return;

     label5:
        i9 = i9 + 1;

        goto label2;

     label6:
        i9 = virtualinvoke r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: int endY()>();

        i10 = i10 + 1;

        goto label1;

     label7:
        return;
    }

    public int convertOldPositionToNew(int)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        int[] $r8;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>;

        if i0 < $i3 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds - passed position = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", old list size = ");

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        $r8 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i1 = $r8[i0];

        $i4 = i1 & 15;

        if $i4 != 0 goto label3;

        return -1;

     label3:
        $i5 = i1 >> 4;

        return $i5;
    }

    public int convertNewPositionToOld(int)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        int[] $r8;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize>;

        if i0 < $i3 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index out of bounds - passed position = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new list size = ");

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        $r8 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i1 = $r8[i0];

        $i4 = i1 & 15;

        if $i4 != 0 goto label3;

        return -1;

     label3:
        $i5 = i1 >> 4;

        return $i5;
    }

    public void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1;
        androidx.recyclerview.widget.AdapterListUpdateCallback $r2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        $r2 = new androidx.recyclerview.widget.AdapterListUpdateCallback;

        specialinvoke $r2.<androidx.recyclerview.widget.AdapterListUpdateCallback: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter)>(r1);

        virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback)>($r2);

        return;
    }

    public void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback)
    {
        androidx.recyclerview.widget.DiffUtil$DiffResult r0;
        java.util.ArrayDeque r1, $r4;
        androidx.recyclerview.widget.DiffUtil$Diagonal r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30;
        boolean $z0;
        androidx.recyclerview.widget.BatchingListUpdateCallback $r3, r17, r18;
        java.util.List $r5, $r6;
        java.lang.Object $r7, r20, r22, r23;
        int[] $r8, $r10, $r13;
        androidx.recyclerview.widget.DiffUtil$Callback $r9, $r11, $r15;
        androidx.recyclerview.widget.DiffUtil$PostponedUpdate $r12, $r14, r19, r21;
        androidx.recyclerview.widget.ListUpdateCallback r16;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$DiffResult;

        r16 := @parameter0: androidx.recyclerview.widget.ListUpdateCallback;

        $z0 = r16 instanceof androidx.recyclerview.widget.BatchingListUpdateCallback;

        if $z0 == 0 goto label01;

        r17 = (androidx.recyclerview.widget.BatchingListUpdateCallback) r16;

        goto label02;

     label01:
        $r3 = new androidx.recyclerview.widget.BatchingListUpdateCallback;

        specialinvoke $r3.<androidx.recyclerview.widget.BatchingListUpdateCallback: void <init>(androidx.recyclerview.widget.ListUpdateCallback)>(r16);

        r17 = $r3;

        r18 = r17;

     label02:
        i18 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>;

        $r4 = new java.util.ArrayDeque;

        specialinvoke $r4.<java.util.ArrayDeque: void <init>()>();

        r1 = $r4;

        i19 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mOldListSize>;

        i20 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int mNewListSize>;

        $r5 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        i21 = $i2 - 1;

     label03:
        if i21 < 0 goto label19;

        $r6 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: java.util.List mDiagonals>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i21);

        r2 = (androidx.recyclerview.widget.DiffUtil$Diagonal) $r7;

        i0 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int endX()>();

        i1 = virtualinvoke r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int endY()>();

     label04:
        if i19 <= i0 goto label10;

        i19 = i19 + -1;

        $r13 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        i22 = $r13[i19];

        $i11 = i22 & 12;

        if $i11 == 0 goto label08;

        i23 = i22 >> 4;

        r19 = staticinvoke <androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean)>(r1, i23, 0);

        if r19 == null goto label06;

        $i14 = r19.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos>;

        i24 = i18 - $i14;

        $i15 = i24 - 1;

        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onMoved(int,int)>(i19, $i15);

        $i16 = i22 & 4;

        if $i16 == 0 goto label05;

        $r15 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        r20 = virtualinvoke $r15.<androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i19, i23);

        $i17 = i24 - 1;

        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)>($i17, 1, r20);

     label05:
        goto label07;

     label06:
        $r14 = new androidx.recyclerview.widget.DiffUtil$PostponedUpdate;

        $i12 = i18 - i19;

        $i13 = $i12 - 1;

        specialinvoke $r14.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>(i19, $i13, 1);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r14);

     label07:
        goto label09;

     label08:
        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onRemoved(int,int)>(i19, 1);

        i18 = i18 + -1;

     label09:
        goto label04;

     label10:
        if i20 <= i1 goto label15;

        i20 = i20 + -1;

        $r10 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mNewItemStatuses>;

        i25 = $r10[i20];

        $i6 = i25 & 12;

        if $i6 == 0 goto label13;

        i26 = i25 >> 4;

        r21 = staticinvoke <androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean)>(r1, i26, 1);

        if r21 != null goto label11;

        $r12 = new androidx.recyclerview.widget.DiffUtil$PostponedUpdate;

        $i10 = i18 - i19;

        specialinvoke $r12.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: void <init>(int,int,boolean)>(i20, $i10, 0);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        goto label12;

     label11:
        $i7 = r21.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos>;

        $i8 = i18 - $i7;

        i27 = $i8 - 1;

        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onMoved(int,int)>(i27, i19);

        $i9 = i25 & 4;

        if $i9 == 0 goto label12;

        $r11 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        r22 = virtualinvoke $r11.<androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i26, i20);

        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)>(i19, 1, r22);

     label12:
        goto label14;

     label13:
        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onInserted(int,int)>(i19, 1);

        i18 = i18 + 1;

     label14:
        goto label10;

     label15:
        i28 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        i29 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        i30 = 0;

     label16:
        $i3 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int size>;

        if i30 >= $i3 goto label18;

        $r8 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: int[] mOldItemStatuses>;

        $i4 = $r8[i28];

        $i5 = $i4 & 15;

        if $i5 != 2 goto label17;

        $r9 = r0.<androidx.recyclerview.widget.DiffUtil$DiffResult: androidx.recyclerview.widget.DiffUtil$Callback mCallback>;

        r23 = virtualinvoke $r9.<androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)>(i28, i29);

        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)>(i28, 1, r23);

     label17:
        i28 = i28 + 1;

        i29 = i29 + 1;

        i30 = i30 + 1;

        goto label16;

     label18:
        i19 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int x>;

        i20 = r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: int y>;

        i21 = i21 + -1;

        goto label03;

     label19:
        virtualinvoke r17.<androidx.recyclerview.widget.BatchingListUpdateCallback: void dispatchLastEvent()>();

        return;
    }

    private static androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection, int, boolean)
    {
        java.util.Collection r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r1;
        java.lang.Object $r2, $r3;
        androidx.recyclerview.widget.DiffUtil$PostponedUpdate r4, r5, r6;

        r0 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r4 = null;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.recyclerview.widget.DiffUtil$PostponedUpdate) $r3;

        $i5 = r5.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int posInOwnerList>;

        if $i5 != i0 goto label2;

        $z2 = r5.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: boolean removal>;

        if $z2 != z0 goto label2;

        r4 = r5;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        goto label1;

     label3:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.recyclerview.widget.DiffUtil$PostponedUpdate) $r2;

        if z0 == 0 goto label4;

        $i3 = r6.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos>;

        $i4 = $i3 - 1;

        r6.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos> = $i4;

        goto label5;

     label4:
        $i1 = r6.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos>;

        $i2 = $i1 + 1;

        r6.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos> = $i2;

     label5:
        goto label3;

     label6:
        return r4;
    }

androidx.recyclerview.widget.DiffUtil$ItemCallback
    public void <init>()
    {
        androidx.recyclerview.widget.DiffUtil$ItemCallback r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)>
<androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)>
    public java.lang.Object getChangePayload(java.lang.Object, java.lang.Object)
    {
        androidx.recyclerview.widget.DiffUtil$ItemCallback r0;
        java.lang.Object r1, r2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return null;
    }

androidx.recyclerview.widget.DiffUtil$PostponedUpdate
<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int posInOwnerList>
<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos>
<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: boolean removal>
    void <init>(int, int, boolean)
    {
        androidx.recyclerview.widget.DiffUtil$PostponedUpdate r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$PostponedUpdate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int posInOwnerList> = i0;

        r0.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: int currentPos> = i1;

        r0.<androidx.recyclerview.widget.DiffUtil$PostponedUpdate: boolean removal> = z0;

        return;
    }

androidx.recyclerview.widget.DiffUtil$Range
<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>
<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>
<androidx.recyclerview.widget.DiffUtil$Range: int newListStart>
<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd>
    public void <init>()
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Range;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, int, int, int)
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Range;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart> = i0;

        r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd> = i1;

        r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart> = i2;

        r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd> = i3;

        return;
    }

    int oldSize()
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Range;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListEnd>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int oldListStart>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    int newSize()
    {
        androidx.recyclerview.widget.DiffUtil$Range r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Range;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListEnd>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Range: int newListStart>;

        $i2 = $i1 - $i0;

        return $i2;
    }

androidx.recyclerview.widget.DiffUtil$Snake
<androidx.recyclerview.widget.DiffUtil$Snake: int startX>
<androidx.recyclerview.widget.DiffUtil$Snake: int startY>
<androidx.recyclerview.widget.DiffUtil$Snake: int endX>
<androidx.recyclerview.widget.DiffUtil$Snake: int endY>
<androidx.recyclerview.widget.DiffUtil$Snake: boolean reverse>
    void <init>()
    {
        androidx.recyclerview.widget.DiffUtil$Snake r0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Snake;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    boolean hasAdditionOrRemoval()
    {
        androidx.recyclerview.widget.DiffUtil$Snake r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Snake;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endY>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i5 = $i1 - $i0;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endX>;

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i4 = $i3 - $i2;

        if $i5 == $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isAddition()
    {
        androidx.recyclerview.widget.DiffUtil$Snake r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Snake;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endY>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i5 = $i1 - $i0;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endX>;

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i4 = $i3 - $i2;

        if $i5 <= $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int diagonalSize()
    {
        androidx.recyclerview.widget.DiffUtil$Snake r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Snake;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endX>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i5 = $i1 - $i0;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endY>;

        $i2 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i4 = $i3 - $i2;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        return $i6;
    }

    androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal()
    {
        androidx.recyclerview.widget.DiffUtil$Snake r0;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.DiffUtil$Diagonal $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: androidx.recyclerview.widget.DiffUtil$Snake;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Snake: boolean hasAdditionOrRemoval()>();

        if $z0 == 0 goto label3;

        $z1 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: boolean reverse>;

        if $z1 == 0 goto label1;

        $r4 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i13 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i14 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Snake: int diagonalSize()>();

        specialinvoke $r4.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>($i13, $i14, $i15);

        return $r4;

     label1:
        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Snake: boolean isAddition()>();

        if $z2 == 0 goto label2;

        $r3 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i10 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i9 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i11 = $i9 + 1;

        $i12 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Snake: int diagonalSize()>();

        specialinvoke $r3.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>($i10, $i11, $i12);

        return $r3;

     label2:
        $r2 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i5 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i6 = $i5 + 1;

        $i7 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.DiffUtil$Snake: int diagonalSize()>();

        specialinvoke $r2.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>($i6, $i7, $i8);

        return $r2;

     label3:
        $r1 = new androidx.recyclerview.widget.DiffUtil$Diagonal;

        $i4 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i3 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startY>;

        $i1 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int endX>;

        $i0 = r0.<androidx.recyclerview.widget.DiffUtil$Snake: int startX>;

        $i2 = $i1 - $i0;

        specialinvoke $r1.<androidx.recyclerview.widget.DiffUtil$Diagonal: void <init>(int,int,int)>($i4, $i3, $i2);

        return $r1;
    }

