androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>
<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>
    static androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture create(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, androidx.test.espresso.remote.internal.deps.guava.base.Function, java.util.concurrent.Executor)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.base.Function r1;
        java.util.concurrent.Executor r2, $r5;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r3;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.guava.base.Function;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r3 = new androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        specialinvoke r3.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,androidx.test.espresso.remote.internal.deps.guava.base.Function)>(r0, r1);

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractFuture)>(r2, r3);

        interfaceinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r3, $r5);

        return r3;
    }

    static androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture create(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction, java.util.concurrent.Executor)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction r1;
        java.util.concurrent.Executor r2, $r5;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r3;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction;

        r2 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r3 = new androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        specialinvoke r3.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction)>(r0, r1);

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.MoreExecutors: java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractFuture)>(r2, r3);

        interfaceinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>(r3, $r5);

        return r3;
    }

<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>
    protected java.lang.String pendingToString()
    {
        java.lang.Object r0;
        java.lang.String r1, $r4, $r9, r16;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, r15, r17, r18;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture r13;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r14;

        r13 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r14 = r13.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        r0 = r13.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>;

        r1 = specialinvoke r13.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture$TrustedFuture: java.lang.String pendingToString()>();

        if r14 == null goto label4;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inputFuture=[");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");

        r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if r0 == null goto label2;

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("function=[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label2:
        if r1 == null goto label3;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        return null;

     label4:
        r16 = "";

        goto label1;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1, $r4;
        java.lang.Object r2, $r3, $r5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.FluentFuture$TrustedFuture: void <init>()>();

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture) $r3;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = $r5;

        return;
    }

    protected final void afterDone()
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>($r1);

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = null;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        return;
    }

    public final void run()
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1;
        java.lang.Object r2, r10, r11;
        boolean $z0, $z1, z8, z9, z10, z11;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8, $r9, r12, r13, r14, r15, r16;
        java.util.concurrent.ExecutionException r17;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture>;

        r2 = r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function>;

        z8 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean isCancelled()>();

        if r1 != null goto label08;

        z9 = 1;

     label01:
        z10 = z8 | z9;

        if r2 != null goto label07;

        z11 = 1;

     label02:
        $z0 = z10 | z11;

        if $z0 == 0 goto label03;

        return;

     label03:
        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture inputFuture> = null;

        $z1 = interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture: boolean isCancelled()>();

        if $z1 == 0 goto label04;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setFuture(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>(r1);

        return;

     label04:
        r10 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r1);

     label05:
        r11 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object doTransform(java.lang.Object,java.lang.Object)>(r2, r10);

     label06:
        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: void setResult(java.lang.Object)>(r11);

        return;

     label07:
        z11 = 0;

        goto label02;

     label08:
        z9 = 0;

        goto label01;

     label09:
        $r6 := @caughtexception;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean cancel(boolean)>(0);

        return;

     label10:
        $r8 := @caughtexception;

        r12 = $r8;

        r17 = (java.util.concurrent.ExecutionException) r12;

        $r9 = virtualinvoke r17.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>($r9);

        return;

     label11:
        $r5 := @caughtexception;

        r13 = $r5;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r13);

        return;

     label12:
        $r7 := @caughtexception;

        r14 = $r7;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r14);

        return;

     label13:
        $r3 := @caughtexception;

        r15 = $r3;

     label14:
        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.util.concurrent.Platform: void restoreInterruptIfIsInterruptedException(java.lang.Throwable)>(r15);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: boolean setException(java.lang.Throwable)>(r15);

        goto label16;

     label15:
        $r4 := @caughtexception;

        r16 = $r4;

        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        throw r16;

     label16:
        r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: java.lang.Object function> = null;

        return;

        catch java.util.concurrent.CancellationException from label04 to label05 with label09;
        catch java.util.concurrent.ExecutionException from label04 to label05 with label10;
        catch java.lang.RuntimeException from label04 to label05 with label11;
        catch java.lang.Error from label04 to label05 with label12;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label14 to label15 with label15;
    }

<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: void setResult(java.lang.Object)>
androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture
    androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture doTransform(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction, java.lang.Object) throws java.lang.Exception
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction r0;
        java.lang.Object r1;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r3;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r4;

        r3 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r0 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction;

        r1 := @parameter1: java.lang.Object;

        r4 = interfaceinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture apply(java.lang.Object)>(r1);

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object)>(r4, "AsyncFunction.apply returned null instead of a Future. Did you mean to return immediateFuture(null)? %s", r0);

        return r4;
    }

    volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        java.lang.Object r1, r2;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction $r3;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction) r1;

        $r4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture doTransform(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction,java.lang.Object)>($r3, r2);

        return $r4;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AsyncFunction;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Object)>(r1, r2);

        return;
    }

    void setResult(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: boolean setFuture(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>(r1);

        return;
    }

    volatile void setResult(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture r0;
        java.lang.Object r1;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture) r1;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$AsyncTransformFuture: void setResult(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture)>($r2);

        return;
    }

androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture
    java.lang.Object doTransform(androidx.test.espresso.remote.internal.deps.guava.base.Function, java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.base.Function r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.base.Function;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r1.<androidx.test.espresso.remote.internal.deps.guava.base.Function: java.lang.Object apply(java.lang.Object)>(r2);

        return $r3;
    }

    volatile java.lang.Object doTransform(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        java.lang.Object r1, r2, $r4;
        androidx.test.espresso.remote.internal.deps.guava.base.Function $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.test.espresso.remote.internal.deps.guava.base.Function) r1;

        $r4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: java.lang.Object doTransform(androidx.test.espresso.remote.internal.deps.guava.base.Function,java.lang.Object)>($r3, r2);

        return $r4;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture, androidx.test.espresso.remote.internal.deps.guava.base.Function)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture r1;
        androidx.test.espresso.remote.internal.deps.guava.base.Function r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.guava.base.Function;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture: void <init>(androidx.test.espresso.remote.internal.deps.guava.util.concurrent.ListenableFuture,java.lang.Object)>(r1, r2);

        return;
    }

    void setResult(java.lang.Object)
    {
        androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture r0;
        java.lang.Object r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.guava.util.concurrent.AbstractTransformFuture$TransformFuture: boolean set(java.lang.Object)>(r1);

        return;
    }

