androidx.slice.SliceStructure
<androidx.slice.SliceStructure: java.lang.String mStructure>
    public void <init>(androidx.slice.Slice)
    {
        androidx.slice.SliceStructure r0;
        androidx.slice.Slice r1;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.slice.SliceStructure;

        r1 := @parameter0: androidx.slice.Slice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        staticinvoke <androidx.slice.SliceStructure: void getStructure(androidx.slice.Slice,java.lang.StringBuilder)>(r1, r2);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.slice.SliceStructure: java.lang.String mStructure> = $r4;

        return;
    }

    public void <init>(androidx.slice.SliceItem)
    {
        androidx.slice.SliceStructure r0;
        androidx.slice.SliceItem r1;
        java.lang.StringBuilder r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.slice.SliceStructure;

        r1 := @parameter0: androidx.slice.SliceItem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        staticinvoke <androidx.slice.SliceStructure: void getStructure(androidx.slice.SliceItem,java.lang.StringBuilder)>(r1, r2);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.slice.SliceStructure: java.lang.String mStructure> = $r4;

        return;
    }

    public int hashCode()
    {
        androidx.slice.SliceStructure r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.slice.SliceStructure;

        $r1 = r0.<androidx.slice.SliceStructure: java.lang.String mStructure>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.slice.SliceStructure r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.slice.SliceStructure;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.slice.SliceStructure;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.slice.SliceStructure) r1;

        $r4 = r0.<androidx.slice.SliceStructure: java.lang.String mStructure>;

        $r3 = r2.<androidx.slice.SliceStructure: java.lang.String mStructure>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    private static void getStructure(androidx.slice.Slice, java.lang.StringBuilder)
    {
        androidx.slice.Slice r0;
        java.lang.StringBuilder r1;
        java.util.Iterator r2;
        androidx.slice.SliceItem r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @parameter0: androidx.slice.Slice;

        r1 := @parameter1: java.lang.StringBuilder;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s{");

        $r5 = virtualinvoke r0.<androidx.slice.Slice: java.util.List getItems()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.slice.SliceItem) $r7;

        staticinvoke <androidx.slice.SliceStructure: void getStructure(androidx.slice.SliceItem,java.lang.StringBuilder)>(r3, r1);

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        return;
    }

    private static void getStructure(androidx.slice.SliceItem, java.lang.StringBuilder)
    {
        androidx.slice.SliceItem r0;
        java.lang.StringBuilder r1;
        java.lang.String r2, $r6, $r7;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        androidx.slice.Slice $r8, $r10;
        byte b1;

        r0 := @parameter0: androidx.slice.SliceItem;

        r1 := @parameter1: java.lang.StringBuilder;

        r2 = virtualinvoke r0.<androidx.slice.SliceItem: java.lang.String getFormat()>();

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1422950858: goto label02;
            case -1377881982: goto label08;
            case 104431: goto label05;
            case 3327612: goto label06;
            case 3556653: goto label03;
            case 100313435: goto label04;
            case 100358090: goto label07;
            case 109526418: goto label01;
            default: goto label09;
        };

     label01:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("slice");

        if $z0 == 0 goto label09;

        b1 = 0;

        goto label09;

     label02:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("action");

        if $z8 == 0 goto label09;

        b1 = 1;

        goto label09;

     label03:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z4 == 0 goto label09;

        b1 = 2;

        goto label09;

     label04:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("image");

        if $z3 == 0 goto label09;

        b1 = 3;

        goto label09;

     label05:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 == 0 goto label09;

        b1 = 4;

        goto label09;

     label06:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z5 == 0 goto label09;

        b1 = 5;

        goto label09;

     label07:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z2 == 0 goto label09;

        b1 = 6;

        goto label09;

     label08:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bundle");

        if $z7 == 0 goto label09;

        b1 = 7;

     label09:
        tableswitch(b1)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label15;
            case 5: goto label15;
            case 6: goto label15;
            case 7: goto label15;
            default: goto label15;
        };

     label10:
        $r10 = virtualinvoke r0.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        staticinvoke <androidx.slice.SliceStructure: void getStructure(androidx.slice.Slice,java.lang.StringBuilder)>($r10, r1);

        goto label15;

     label11:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(97);

        $r6 = "range";

        $r7 = virtualinvoke r0.<androidx.slice.SliceItem: java.lang.String getSubType()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(114);

     label12:
        $r8 = virtualinvoke r0.<androidx.slice.SliceItem: androidx.slice.Slice getSlice()>();

        staticinvoke <androidx.slice.SliceStructure: void getStructure(androidx.slice.Slice,java.lang.StringBuilder)>($r8, r1);

        goto label15;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(116);

        goto label15;

     label14:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(105);

        goto label15;

     label15:
        return;
    }

