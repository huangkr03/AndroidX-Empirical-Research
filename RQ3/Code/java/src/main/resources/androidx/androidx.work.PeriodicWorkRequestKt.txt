androidx.work.PeriodicWorkRequestKt
    public static final androidx.work.PeriodicWorkRequest$Builder PeriodicWorkRequestBuilder(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r0;
        androidx.work.PeriodicWorkRequest$Builder $r1;
        java.lang.Class $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "repeatIntervalTimeUnit");

        $r1 = new androidx.work.PeriodicWorkRequest$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "W");

        $r2 = (java.lang.Class) class "Landroidx/work/ListenableWorker;";

        specialinvoke $r1.<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit)>($r2, l0, r0);

        return $r1;
    }

    public static final androidx.work.PeriodicWorkRequest$Builder PeriodicWorkRequestBuilder(java.time.Duration)
    {
        java.time.Duration r0;
        androidx.work.PeriodicWorkRequest$Builder $r1;
        java.lang.Class $r2;

        r0 := @parameter0: java.time.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "repeatInterval");

        $r1 = new androidx.work.PeriodicWorkRequest$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "W");

        $r2 = (java.lang.Class) class "Landroidx/work/ListenableWorker;";

        specialinvoke $r1.<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,java.time.Duration)>($r2, r0);

        return $r1;
    }

    public static final androidx.work.PeriodicWorkRequest$Builder PeriodicWorkRequestBuilder(long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit)
    {
        long l0, l1;
        java.util.concurrent.TimeUnit r0, r1;
        androidx.work.PeriodicWorkRequest$Builder $r2;
        java.lang.Class $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        l1 := @parameter2: long;

        r1 := @parameter3: java.util.concurrent.TimeUnit;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "repeatIntervalTimeUnit");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "flexTimeIntervalUnit");

        $r2 = new androidx.work.PeriodicWorkRequest$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "W");

        $r3 = (java.lang.Class) class "Landroidx/work/ListenableWorker;";

        specialinvoke $r2.<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)>($r3, l0, r0, l1, r1);

        return $r2;
    }

    public static final androidx.work.PeriodicWorkRequest$Builder PeriodicWorkRequestBuilder(java.time.Duration, java.time.Duration)
    {
        java.time.Duration r0, r1;
        androidx.work.PeriodicWorkRequest$Builder $r2;
        java.lang.Class $r3;

        r0 := @parameter0: java.time.Duration;

        r1 := @parameter1: java.time.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "repeatInterval");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "flexTimeInterval");

        $r2 = new androidx.work.PeriodicWorkRequest$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "W");

        $r3 = (java.lang.Class) class "Landroidx/work/ListenableWorker;";

        specialinvoke $r2.<androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,java.time.Duration,java.time.Duration)>($r3, r0, r1);

        return $r2;
    }

