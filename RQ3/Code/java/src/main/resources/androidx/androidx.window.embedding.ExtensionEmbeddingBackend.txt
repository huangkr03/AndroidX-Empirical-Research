androidx.window.embedding.ExtensionEmbeddingBackend
<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion>
<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>
<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks>
<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback>
<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>
<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance>
<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock>
<androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG>
    public void <init>(androidx.window.embedding.EmbeddingInterfaceCompat)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingInterfaceCompat r1, $r4;
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl $r2, $r5;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface $r6;
        java.util.concurrent.CopyOnWriteArraySet $r7;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: androidx.window.embedding.EmbeddingInterfaceCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension> = r1;

        $r2 = new androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl;

        specialinvoke $r2.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void <init>(androidx.window.embedding.ExtensionEmbeddingBackend)>(r0);

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks> = $r3;

        $r4 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        if $r4 != null goto label1;

        goto label2;

     label1:
        $r5 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback>;

        $r6 = (androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface) $r5;

        interfaceinvoke $r4.<androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)>($r6);

     label2:
        $r7 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r7.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules> = $r7;

        return;
    }

    public final androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingInterfaceCompat $r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        return $r1;
    }

    public final void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingInterfaceCompat r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: androidx.window.embedding.EmbeddingInterfaceCompat;

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension> = r1;

        return;
    }

    public final java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks>;

        return $r1;
    }

    public static void getSplitChangeCallbacks$annotations()
    {
        return;
    }

    public java.util.Set getSplitRules()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        java.util.concurrent.CopyOnWriteArraySet $r1;
        java.util.Set $r2;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public void setSplitRules(java.util.Set)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        java.util.Set r1, $r7;
        java.util.concurrent.CopyOnWriteArraySet $r2, $r4, $r6;
        java.util.Collection $r3;
        androidx.window.embedding.EmbeddingInterfaceCompat $r5;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rules");

        $r2 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void clear()>();

        $r4 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $r3 = (java.util.Collection) r1;

        virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: boolean addAll(java.util.Collection)>($r3);

        $r5 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        if $r5 != null goto label1;

        goto label2;

     label1:
        $r6 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $r7 = (java.util.Set) $r6;

        interfaceinvoke $r5.<androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)>($r7);

     label2:
        return;
    }

    public void registerRule(androidx.window.embedding.EmbeddingRule)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingRule r1;
        java.util.concurrent.CopyOnWriteArraySet $r2, $r3, $r5;
        boolean $z0;
        androidx.window.embedding.EmbeddingInterfaceCompat $r4;
        java.util.Set $r6;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: androidx.window.embedding.EmbeddingRule;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rule");

        $r2 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        if $r4 != null goto label1;

        goto label2;

     label1:
        $r5 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $r6 = (java.util.Set) $r5;

        interfaceinvoke $r4.<androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)>($r6);

     label2:
        return;
    }

    public void unregisterRule(androidx.window.embedding.EmbeddingRule)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingRule r1;
        java.util.concurrent.CopyOnWriteArraySet $r2, $r3, $r5;
        boolean $z0;
        androidx.window.embedding.EmbeddingInterfaceCompat $r4;
        java.util.Set $r6;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: androidx.window.embedding.EmbeddingRule;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rule");

        $r2 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        if $r4 != null goto label1;

        goto label2;

     label1:
        $r5 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules>;

        $r6 = (java.util.Set) $r5;

        interfaceinvoke $r4.<androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)>($r6);

     label2:
        return;
    }

    public void registerSplitListenerForActivity(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        android.app.Activity r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;
        java.util.concurrent.locks.Lock r4;
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r5, $r8;
        java.util.concurrent.locks.ReentrantLock $r6;
        androidx.window.embedding.EmbeddingInterfaceCompat $r7;
        java.util.concurrent.CopyOnWriteArrayList $r9;
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl $r10, $r13;
        java.util.List $r11, $r12, $r14, $r15;
        java.lang.Throwable $r16;
        kotlin.Unit $r17;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r6 = <androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        r4 = (java.util.concurrent.locks.Lock) $r6;

        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r7 = virtualinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()>();

        if $r7 != null goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EmbeddingBackend", "Extension not loaded, skipping callback registration.");

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        interfaceinvoke r3.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r15);

     label2:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r8 = new androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper;

        specialinvoke $r8.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r1, r2, r3);

        r5 = $r8;

        $r9 = virtualinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()>();

        virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r5);

        $r10 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback>;

        $r11 = virtualinvoke $r10.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()>();

        if $r11 == null goto label4;

        $r13 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback>;

        $r14 = virtualinvoke $r13.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r14);

        virtualinvoke r5.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)>($r14);

        goto label5;

     label4:
        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        virtualinvoke r5.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)>($r12);

     label5:
        $r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label6:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label9;

     label7:
        $r16 := @caughtexception;

     label8:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r16;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.core.util.Consumer r1, $r8;
        java.util.concurrent.locks.Lock r2;
        java.util.Iterator r3;
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.concurrent.CopyOnWriteArrayList $r6, $r9;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.Throwable $r10;
        kotlin.Unit $r11;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "consumer");

        $r5 = <androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        r2 = (java.util.concurrent.locks.Lock) $r5;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r6 = virtualinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()>();

        r3 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper) $r7;

        $r8 = virtualinvoke r4.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r1);

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()>();

        virtualinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r4);

        goto label3;

     label3:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r10 := @caughtexception;

     label6:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r10;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSplitSupported()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;
        androidx.window.embedding.EmbeddingInterfaceCompat $r1;
        boolean $z0;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend $r0;

        $r0 = <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance>;

        return $r0;
    }

    public static final java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
    {
        java.util.concurrent.locks.ReentrantLock $r0;

        $r0 = <androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        return $r0;
    }

    public static final void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend r0;

        r0 := @parameter0: androidx.window.embedding.ExtensionEmbeddingBackend;

        <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion $r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        $r0 = new androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        specialinvoke $r0.<androidx.window.embedding.ExtensionEmbeddingBackend$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion> = $r0;

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        <androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock> = $r1;

        return;
    }

androidx.window.embedding.ExtensionEmbeddingBackend$Companion
    private void <init>()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion r0;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion r0, $r7, $r8;
        java.util.concurrent.locks.Lock r1;
        androidx.window.embedding.EmbeddingInterfaceCompat r2;
        androidx.window.embedding.ExtensionEmbeddingBackend $r3, $r4, $r6, $r9;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.lang.Throwable $r10;
        kotlin.Unit $r11;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        $r3 = staticinvoke <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()>();

        if $r3 != null goto label6;

        $r5 = staticinvoke <androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()>();

        r1 = (java.util.concurrent.locks.Lock) $r5;

        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r6 = staticinvoke <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()>();

        if $r6 != null goto label2;

        $r7 = <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion>;

        r2 = specialinvoke $r7.<androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()>();

        $r8 = <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion>;

        $r9 = new androidx.window.embedding.ExtensionEmbeddingBackend;

        specialinvoke $r9.<androidx.window.embedding.ExtensionEmbeddingBackend: void <init>(androidx.window.embedding.EmbeddingInterfaceCompat)>(r2);

        staticinvoke <androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)>($r9);

     label2:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r10 := @caughtexception;

     label5:
        interfaceinvoke r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r10;

     label6:
        $r4 = staticinvoke <androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        return $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private final androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion r0;
        java.lang.Throwable r1, $r6;
        androidx.window.embedding.EmbeddingCompat$Companion $r2, $r4;
        java.lang.Integer $r3;
        boolean $z0, $z1;
        androidx.window.embedding.EmbeddingCompat $r5;
        java.lang.String $r7;
        androidx.window.embedding.EmbeddingInterfaceCompat r8;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        r8 = null;

     label1:
        $r2 = <androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()>();

        $z0 = virtualinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)>($r3);

        if $z0 == 0 goto label4;

        $r4 = <androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion>;

        $z1 = virtualinvoke $r4.<androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()>();

        if $z1 == 0 goto label4;

        $r5 = new androidx.window.embedding.EmbeddingCompat;

        specialinvoke $r5.<androidx.window.embedding.EmbeddingCompat: void <init>()>();

        r8 = (androidx.window.embedding.EmbeddingInterfaceCompat) $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Failed to load embedding extension: ", r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EmbeddingBackend", $r7);

        r8 = null;

     label4:
        if r8 != null goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("EmbeddingBackend", "No supported embedding extension found");

     label5:
        return r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final boolean isExtensionVersionSupported(java.lang.Integer)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion r0;
        java.lang.Integer r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        r1 := @parameter0: java.lang.Integer;

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i0 < 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.embedding.ExtensionEmbeddingBackend$Companion: void <init>()>();

        return;
    }

androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo>
<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0>
    public void <init>(androidx.window.embedding.ExtensionEmbeddingBackend)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl r0;
        androidx.window.embedding.ExtensionEmbeddingBackend r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl;

        r1 := @parameter0: androidx.window.embedding.ExtensionEmbeddingBackend;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List getLastInfo()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl r0;
        java.util.List $r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo>;

        return $r1;
    }

    public final void setLastInfo(java.util.List)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl r0;
        java.util.List r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl;

        r1 := @parameter0: java.util.List;

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo> = r1;

        return;
    }

    public void onSplitInfoChanged(java.util.List)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl r0;
        java.util.List r1;
        java.util.Iterator r2;
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r3;
        androidx.window.embedding.ExtensionEmbeddingBackend $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "splitInfo");

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo> = r1;

        $r4 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0>;

        $r5 = virtualinvoke $r4.<androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()>();

        r2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper) $r6;

        virtualinvoke r3.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)>(r1);

        goto label1;

     label2:
        return;
    }

androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity>
<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor>
<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback>
<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue>
    public void <init>(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r0;
        android.app.Activity r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity> = r1;

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor> = r2;

        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback> = r3;

        return;
    }

    public final androidx.core.util.Consumer getCallback()
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r0;
        androidx.core.util.Consumer $r1;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper;

        $r1 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback>;

        return $r1;
    }

    public final void accept(java.util.List)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r0;
        java.util.List r1, r2, $r9;
        java.lang.Iterable $r3;
        java.util.Collection r4;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.window.embedding.SplitInfo r7;
        java.util.ArrayList $r8;
        boolean $z3, $z4, $z6;
        java.util.concurrent.Executor $r10;
        java.lang.Runnable $r11;
        android.app.Activity $r12;

        r0 := @this: androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "splitInfoList");

        $r3 = (java.lang.Iterable) r1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.Collection) $r8;

        r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.window.embedding.SplitInfo) r6;

        $r12 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity>;

        $z4 = virtualinvoke r7.<androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)>($r12);

        if $z4 == 0 goto label1;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        r2 = (java.util.List) r4;

        $r9 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r9);

        if $z3 == 0 goto label3;

        return;

     label3:
        r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue> = r2;

        $r10 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor>;

        $r11 = dynamicinvoke "run" <java.lang.Runnable (androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)>(r0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r10.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r11);

        return;
    }

    private static final void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper, java.util.List)
    {
        androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper r0;
        java.util.List $r1;
        androidx.core.util.Consumer $r2;

        r0 := @parameter0: androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper;

        $r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$splitsWithActivity");

        $r2 = r0.<androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback>;

        interfaceinvoke $r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

