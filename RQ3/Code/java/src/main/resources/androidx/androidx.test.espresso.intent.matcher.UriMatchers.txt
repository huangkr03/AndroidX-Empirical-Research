androidx.test.espresso.intent.matcher.UriMatchers
    static java.util.Set getQueryParameterNames(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String r1, r3, $r7;
        java.util.LinkedHashSet r2, $r4;
        int i0, i1, i2, $i3, i4, $i5;
        boolean $z0, $z2;
        java.util.Set $r5, $r6;

        r0 := @parameter0: android.net.Uri;

        $z0 = virtualinvoke r0.<android.net.Uri: boolean isOpaque()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.test.espresso.intent.Checks: void checkArgument(boolean,java.lang.Object)>($z2, "This isn\'t a hierarchical URI.");

        r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getEncodedQuery()>();

        if r1 != null goto label3;

        $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r6;

     label3:
        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r2 = $r4;

        i2 = 0;

     label4:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(38, i2);

        if i0 != -1 goto label5;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label6;

     label5:
        $i3 = i0;

     label6:
        i1 = $i3;

        i4 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(61, i2);

        if i4 > i1 goto label7;

        if i4 != -1 goto label8;

     label7:
        i4 = i1;

     label8:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i2, i4);

        $r7 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>(r3);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7);

        i2 = i1 + 1;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 < $i5 goto label4;

        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2);

        return $r5;
    }

    public static org.hamcrest.Matcher hasHost(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasHost(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasHost(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        androidx.test.espresso.intent.matcher.UriMatchers$1 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new androidx.test.espresso.intent.matcher.UriMatchers$1;

        specialinvoke r3.<androidx.test.espresso.intent.matcher.UriMatchers$1: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasParamWithName(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasParamWithName(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasParamWithName(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        androidx.test.espresso.intent.matcher.UriMatchers$2 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new androidx.test.espresso.intent.matcher.UriMatchers$2;

        specialinvoke r3.<androidx.test.espresso.intent.matcher.UriMatchers$2: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasParamWithValue(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.hamcrest.Matcher $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasParamWithValue(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static org.hamcrest.Matcher hasParamWithValue(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r3, r8;
        androidx.test.espresso.intent.matcher.UriMatchers$4 r7;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher queryParamEntry(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>(r2);

        r7 = new androidx.test.espresso.intent.matcher.UriMatchers$4;

        specialinvoke r7.<androidx.test.espresso.intent.matcher.UriMatchers$4: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(r3, r0, r1);

        r8 = (org.hamcrest.Matcher) r7;

        return r8;
    }

    public static org.hamcrest.Matcher hasPath(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasPath(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasPath(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        androidx.test.espresso.intent.matcher.UriMatchers$3 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new androidx.test.espresso.intent.matcher.UriMatchers$3;

        specialinvoke r3.<androidx.test.espresso.intent.matcher.UriMatchers$3: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasScheme(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasScheme(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasScheme(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r4;
        androidx.test.espresso.intent.matcher.UriMatchers$6 r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r3 = new androidx.test.espresso.intent.matcher.UriMatchers$6;

        specialinvoke r3.<androidx.test.espresso.intent.matcher.UriMatchers$6: void <init>(org.hamcrest.Matcher)>(r0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasSchemeSpecificPart(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.hamcrest.Matcher $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: org.hamcrest.Matcher hasSchemeSpecificPart(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static org.hamcrest.Matcher hasSchemeSpecificPart(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r6;
        androidx.test.espresso.intent.matcher.UriMatchers$7 r5;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r5 = new androidx.test.espresso.intent.matcher.UriMatchers$7;

        specialinvoke r5.<androidx.test.espresso.intent.matcher.UriMatchers$7: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r0, r1);

        r6 = (org.hamcrest.Matcher) r5;

        return r6;
    }

    private static org.hamcrest.Matcher queryParamEntry(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r2, r5;
        androidx.test.espresso.intent.matcher.UriMatchers$5 r4;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>(r1);

        r4 = new androidx.test.espresso.intent.matcher.UriMatchers$5;

        specialinvoke r4.<androidx.test.espresso.intent.matcher.UriMatchers$5: void <init>(java.lang.Class,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>(class "Landroidx/test/espresso/intent/matcher/UriMatchers$QueryParamEntry;", r0, r2, r1);

        r5 = (org.hamcrest.Matcher) r4;

        return r5;
    }

    private void <init>()
    {
        androidx.test.espresso.intent.matcher.UriMatchers r0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.intent.matcher.UriMatchers$1
<androidx.test.espresso.intent.matcher.UriMatchers$1: org.hamcrest.Matcher val$hostMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$1 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$1;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$1: org.hamcrest.Matcher val$hostMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$1 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has host: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$1: org.hamcrest.Matcher val$hostMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$1 r0;
        android.net.Uri r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$1;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$1: org.hamcrest.Matcher val$hostMatcher>;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getHost()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$1 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$1: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$2
<androidx.test.espresso.intent.matcher.UriMatchers$2: org.hamcrest.Matcher val$paramName>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$2 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$2;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$2: org.hamcrest.Matcher val$paramName> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$2 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$2;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has param with name: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$2: org.hamcrest.Matcher val$paramName>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$2 r0;
        android.net.Uri r1;
        org.hamcrest.Matcher $r2, $r3;
        java.util.Set $r4;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$2;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$2: org.hamcrest.Matcher val$paramName>;

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>($r2);

        $r4 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: java.util.Set getQueryParameterNames(android.net.Uri)>(r1);

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r4);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$2 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$2: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$3
<androidx.test.espresso.intent.matcher.UriMatchers$3: org.hamcrest.Matcher val$pathName>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$3 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$3;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$3: org.hamcrest.Matcher val$pathName> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$3 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$3;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has path: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$3: org.hamcrest.Matcher val$pathName>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$3 r0;
        android.net.Uri r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$3;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$3: org.hamcrest.Matcher val$pathName>;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$3 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$3: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$4
<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$matcherImpl>
<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramName>
<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramVal>
    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$4 r0;
        org.hamcrest.Matcher r1, r2, r3;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$4;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$matcherImpl> = r1;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramName> = r2;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramVal> = r3;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$4 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3, $r6;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$4;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has param with: name: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramName>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" value: ");

        $r6 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$paramVal>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$4 r0;
        android.net.Uri r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.Set $r6;
        boolean $z0, $z1;
        org.hamcrest.Matcher $r7;
        java.lang.Object $r8;
        androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry $r9;
        java.util.List $r10;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$4;

        r1 := @parameter0: android.net.Uri;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = staticinvoke <androidx.test.espresso.intent.matcher.UriMatchers: java.util.Set getQueryParameterNames(android.net.Uri)>(r1);

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $r9 = new androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry;

        $r10 = virtualinvoke r1.<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>(r4);

        specialinvoke $r9.<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: void <init>(java.lang.String,java.lang.Iterable)>(r4, $r10);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r7 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: org.hamcrest.Matcher val$matcherImpl>;

        $z1 = interfaceinvoke $r7.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r2);

        return $z1;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$4 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$4: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$5
<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramName>
<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$valMatcher>
<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramVal>
    void <init>(java.lang.Class, org.hamcrest.Matcher, org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$5 r0;
        java.lang.Class r1;
        org.hamcrest.Matcher r2, r3, r4;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$5;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: org.hamcrest.Matcher;

        r4 := @parameter3: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramName> = r2;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$valMatcher> = r3;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramVal> = r4;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>(java.lang.Class)>(r1);

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$5 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r2, $r4;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$5;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramName>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r2);

        $r4 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramVal>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r4);

        return;
    }

    public boolean matchesSafely(androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$5 r0;
        androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry r1;
        java.lang.String $r2;
        org.hamcrest.Matcher $r3, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Iterable $r4;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$5;

        r1 := @parameter0: androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry;

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$paramName>;

        $r2 = r1.<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.String paramName>;

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: org.hamcrest.Matcher val$valMatcher>;

        $r4 = r1.<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.Iterable paramVals>;

        $z1 = interfaceinvoke $r5.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$5 r0;
        java.lang.Object r1;
        androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$5: boolean matchesSafely(androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$6
<androidx.test.espresso.intent.matcher.UriMatchers$6: org.hamcrest.Matcher val$schemeMatcher>
    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$6 r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$6;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$6: org.hamcrest.Matcher val$schemeMatcher> = r1;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$6 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$6;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has scheme: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$6: org.hamcrest.Matcher val$schemeMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$6 r0;
        android.net.Uri r1;
        org.hamcrest.Matcher $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$6;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$6: org.hamcrest.Matcher val$schemeMatcher>;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        return $z0;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$6 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$6;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$6: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$7
<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeMatcher>
<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeSpecificPartMatcher>
    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$7 r0;
        org.hamcrest.Matcher r1, r2;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$7;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeMatcher> = r1;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeSpecificPartMatcher> = r2;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$7 r0;
        org.hamcrest.Description r1;
        org.hamcrest.Matcher $r3, $r6;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$7;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has scheme specific part: scheme: ");

        $r3 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r3);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" scheme specific part: ");

        $r6 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeSpecificPartMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        return;
    }

    public boolean matchesSafely(android.net.Uri)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$7 r0;
        android.net.Uri r1;
        org.hamcrest.Matcher $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$7;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeMatcher>;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = interfaceinvoke $r2.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: org.hamcrest.Matcher val$schemeSpecificPartMatcher>;

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $z1 = interfaceinvoke $r4.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$7 r0;
        java.lang.Object r1;
        android.net.Uri $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.net.Uri) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.UriMatchers$7: boolean matchesSafely(android.net.Uri)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry
<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.String paramName>
<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.Iterable paramVals>
    public void <init>(java.lang.String, java.lang.Iterable)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry r0;
        java.lang.String r1;
        java.lang.Iterable r2;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.String paramName> = r1;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$QueryParamEntry: java.lang.Iterable paramVals> = r2;

        return;
    }

androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue
<androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue: java.lang.String schemeName>
<androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue: java.lang.String schemeVals>
    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue: java.lang.String schemeName> = r1;

        r0.<androidx.test.espresso.intent.matcher.UriMatchers$SchemeParamValue: java.lang.String schemeVals> = r2;

        return;
    }

