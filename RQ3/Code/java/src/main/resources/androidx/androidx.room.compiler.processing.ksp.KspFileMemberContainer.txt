androidx.room.compiler.processing.ksp.KspFileMemberContainer
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion Companion>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile ksFile>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy className$delegate>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy xClassName$delegate>
<androidx.room.compiler.processing.ksp.KspFileMemberContainer: java.lang.String fallbackLocationText>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSFile)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSFile r2, $r14;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r3;
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r4;
        com.google.devtools.ksp.symbol.KSAnnotated $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated $r7;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2 $r8;
        kotlin.jvm.functions.Function0 $r9, $r12;
        kotlin.Lazy $r10, $r13;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2 $r11;
        java.lang.String $r15;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ksFile");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile ksFile> = r2;

        $r4 = <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>;

        $r5 = (com.google.devtools.ksp.symbol.KSAnnotated) r2;

        $r3 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>;

        $r6 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getFILE()>();

        $r7 = virtualinvoke $r4.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, $r5, $r6);

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0> = $r7;

        $r8 = new androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2;

        specialinvoke $r8.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2: void <init>(androidx.room.compiler.processing.ksp.KspFileMemberContainer)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy className$delegate> = $r10;

        $r11 = new androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2;

        specialinvoke $r11.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: void <init>(androidx.room.compiler.processing.ksp.KspFileMemberContainer)>(r0);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy xClassName$delegate> = $r13;

        $r14 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile ksFile>;

        $r15 = interfaceinvoke $r14.<com.google.devtools.ksp.symbol.KSFile: java.lang.String getFilePath()>();

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: java.lang.String fallbackLocationText> = $r15;

        return;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAllAnnotations()>();

        return $r2;
    }

    public androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation getAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox getAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.List getAnnotations(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        java.util.Set $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: java.util.Set getAnnotationsAnnotatedWith(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public transient boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAllAnnotations(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAllAnnotations(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAllAnnotations(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $z0;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotation(kotlin.reflect.KClass)>(r1);

        return $z0;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnnotationWithPackage(java.lang.String)>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(com.squareup.javapoet.ClassName[])>(r1);

        return $z0;
    }

    public transient boolean hasAnyAnnotation(kotlin.reflect.KClass[])
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass[] r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(kotlin.reflect.KClass[])>(r1);

        return $z0;
    }

    public boolean hasAnyAnnotation(java.util.Collection)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        java.util.Collection r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotations");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean hasAnyAnnotation(java.util.Collection)>(r1);

        return $z0;
    }

    public androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.squareup.javapoet.ClassName r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: com.squareup.javapoet.ClassName;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotation requireAnnotation(com.squareup.javapoet.ClassName)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox requireAnnotation(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.reflect.KClass r1;
        androidx.room.compiler.processing.ksp.KspAnnotated $r2;
        androidx.room.compiler.processing.XAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspAnnotated $$delegate_0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.XAnnotationBox toAnnotationBox(kotlin.reflect.KClass)>(r1);

        return $r3;
    }

    public androidx.room.compiler.processing.ksp.KspType getType()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return null;
    }

    public com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return null;
    }

    public com.squareup.javapoet.ClassName getClassName()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.ClassName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy className$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.ClassName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XClassName getXClassName()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XClassName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: kotlin.Lazy xClassName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XClassName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XClassName asClassName()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        androidx.room.compiler.codegen.XClassName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    public java.lang.String kindName()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return "file";
    }

    public java.lang.String getFallbackLocationText()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: java.lang.String fallbackLocationText>;

        return $r1;
    }

    public java.lang.String getDocComment()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return null;
    }

    public androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return null;
    }

    public androidx.room.compiler.processing.ksp.KspFileMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        return r0;
    }

    public boolean validate()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        com.google.devtools.ksp.symbol.KSFile $r1;
        com.google.devtools.ksp.symbol.KSNode $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile ksFile>;

        $r2 = (com.google.devtools.ksp.symbol.KSNode) $r1;

        $z0 = staticinvoke <com.google.devtools.ksp.UtilsKt: boolean validate$default(com.google.devtools.ksp.symbol.KSNode,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, 1, null);

        return $z0;
    }

    public volatile androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0;
        androidx.room.compiler.processing.ksp.KspType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspType getType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer r0, $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspFileMemberContainer getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public static final androidx.room.compiler.codegen.XClassName access$getXClassName(androidx.room.compiler.processing.ksp.KspFileMemberContainer)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r0;
        androidx.room.compiler.codegen.XClassName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    public static final com.google.devtools.ksp.symbol.KSFile access$getKsFile$p(androidx.room.compiler.processing.ksp.KspFileMemberContainer)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r0;
        com.google.devtools.ksp.symbol.KSFile $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile ksFile>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2
<androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspFileMemberContainer)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2 r0;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.squareup.javapoet.ClassName invoke()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2 r0;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r1;
        androidx.room.compiler.codegen.XClassName $r2;
        com.squareup.javapoet.ClassName $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0>;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.codegen.XClassName access$getXClassName(androidx.room.compiler.processing.ksp.KspFileMemberContainer)>($r1);

        $r3 = virtualinvoke $r2.<androidx.room.compiler.codegen.XClassName: com.squareup.javapoet.ClassName getJava$room_compiler_processing()>();

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2 r0;
        com.squareup.javapoet.ClassName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$className$2: com.squareup.javapoet.ClassName invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final java.lang.String findClassName(com.google.devtools.ksp.symbol.KSFile)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion r0;
        com.google.devtools.ksp.symbol.KSFile $r1;
        com.google.devtools.ksp.symbol.KSAnnotation r2, r16;
        com.google.devtools.ksp.symbol.KSValueArgument r3, $r25;
        boolean $z1, $z2, $z3, $z4, $z7, z8;
        com.google.devtools.ksp.symbol.KSName $r4, $r10;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget $r5, $r6;
        com.google.devtools.ksp.symbol.KSTypeReference $r7;
        com.google.devtools.ksp.symbol.KSType $r8;
        com.google.devtools.ksp.symbol.KSDeclaration $r9;
        kotlin.reflect.KClass $r11;
        java.lang.String $r12, $r17, $r23, r27, $r28, $r29;
        kotlin.sequences.Sequence $r13;
        java.util.Iterator $r14, r21;
        java.lang.Object r15, $r18, $r22, $r24, $r26;
        java.util.List $r19;
        java.lang.Iterable $r20;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSFile;

        $r13 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSFile: kotlin.sequences.Sequence getAnnotations()>();

        $r14 = interfaceinvoke $r13.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.google.devtools.ksp.symbol.KSAnnotation) r15;

        $r5 = interfaceinvoke r16.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget getUseSiteTarget()>();

        $r6 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget FILE>;

        if $r5 != $r6 goto label04;

        $r7 = interfaceinvoke r16.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSTypeReference getAnnotationType()>();

        $r8 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r9 = interfaceinvoke $r8.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r10 = interfaceinvoke $r9.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r10 == null goto label02;

        $r17 = interfaceinvoke $r10.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label03;

     label02:
        $r17 = null;

     label03:
        $r11 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Lkotlin/jvm/JvmName;");

        $r12 = interfaceinvoke $r11.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r12);

        if $z4 == 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        if $z7 == 0 goto label01;

        $r18 = r15;

        goto label07;

     label06:
        $r18 = null;

     label07:
        r2 = (com.google.devtools.ksp.symbol.KSAnnotation) $r18;

        if r2 == null goto label13;

        $r19 = interfaceinvoke r2.<com.google.devtools.ksp.symbol.KSAnnotation: java.util.List getArguments()>();

        if $r19 == null goto label13;

        $r20 = (java.lang.Iterable) $r19;

        z8 = 0;

        r21 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.devtools.ksp.symbol.KSValueArgument) $r22;

        $r4 = interfaceinvoke r3.<com.google.devtools.ksp.symbol.KSValueArgument: com.google.devtools.ksp.symbol.KSName getName()>();

        if $r4 == null goto label09;

        $r23 = interfaceinvoke $r4.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label10;

     label09:
        $r23 = null;

     label10:
        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r23, "name");

        if $z3 == 0 goto label08;

        $r24 = $r22;

        goto label12;

     label11:
        $r24 = null;

     label12:
        $r25 = (com.google.devtools.ksp.symbol.KSValueArgument) $r24;

        if $r25 == null goto label13;

        $r26 = interfaceinvoke $r25.<com.google.devtools.ksp.symbol.KSValueArgument: java.lang.Object getValue()>();

        if $r26 == null goto label13;

        r27 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        if r27 == null goto label13;

        $r28 = r27;

        goto label14;

     label13:
        $r29 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSFile: java.lang.String getFileName()>();

        $r28 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r29, ".kt", "Kt", 0, 4, null);

     label14:
        return $r28;
    }

    public static final java.lang.String access$findClassName(androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion, com.google.devtools.ksp.symbol.KSFile)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion $r0;
        com.google.devtools.ksp.symbol.KSFile $r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion;

        $r1 := @parameter1: com.google.devtools.ksp.symbol.KSFile;

        $r2 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion: java.lang.String findClassName(com.google.devtools.ksp.symbol.KSFile)>($r1);

        return $r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2
<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspFileMemberContainer)
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2 r0;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspFileMemberContainer;

        r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.codegen.XClassName invoke()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2 r0;
        java.lang.String r1, $r9, r13, $r14;
        com.squareup.javapoet.ClassName r2;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer $r3, $r6;
        com.google.devtools.ksp.symbol.KSFile $r4, $r8;
        com.google.devtools.ksp.symbol.KSName $r5;
        boolean $z1;
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion $r7;
        java.lang.String[] $r10;
        androidx.room.compiler.codegen.XClassName $r11;
        androidx.room.compiler.processing.XNullability $r12;
        com.squareup.kotlinpoet.ClassName r15;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0>;

        $r4 = staticinvoke <androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile access$getKsFile$p(androidx.room.compiler.processing.ksp.KspFileMemberContainer)>($r3);

        $r5 = interfaceinvoke $r4.<com.google.devtools.ksp.symbol.KSFile: com.google.devtools.ksp.symbol.KSName getPackageName()>();

        r13 = interfaceinvoke $r5.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r13, "<root>");

        if $z1 == 0 goto label1;

        $r14 = "";

        goto label2;

     label1:
        $r14 = r13;

     label2:
        r1 = $r14;

        $r7 = <androidx.room.compiler.processing.ksp.KspFileMemberContainer: androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion Companion>;

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: androidx.room.compiler.processing.ksp.KspFileMemberContainer this$0>;

        $r8 = staticinvoke <androidx.room.compiler.processing.ksp.KspFileMemberContainer: com.google.devtools.ksp.symbol.KSFile access$getKsFile$p(androidx.room.compiler.processing.ksp.KspFileMemberContainer)>($r6);

        $r9 = staticinvoke <androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion: java.lang.String access$findClassName(androidx.room.compiler.processing.ksp.KspFileMemberContainer$Companion,com.google.devtools.ksp.symbol.KSFile)>($r7, $r8);

        $r10 = newarray (java.lang.String)[0];

        r2 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r1, $r9, $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "java");

        r15 = staticinvoke <com.squareup.kotlinpoet.javapoet.J2kInteropKt: com.squareup.kotlinpoet.ClassName toKClassName(com.squareup.javapoet.ClassName)>(r2);

        $r11 = new androidx.room.compiler.codegen.XClassName;

        $r12 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        specialinvoke $r11.<androidx.room.compiler.codegen.XClassName: void <init>(com.squareup.javapoet.ClassName,com.squareup.kotlinpoet.ClassName,androidx.room.compiler.processing.XNullability)>(r2, r15, $r12);

        return $r11;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2 r0;
        androidx.room.compiler.codegen.XClassName $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspFileMemberContainer$xClassName$2: androidx.room.compiler.codegen.XClassName invoke()>();

        return $r1;
    }

