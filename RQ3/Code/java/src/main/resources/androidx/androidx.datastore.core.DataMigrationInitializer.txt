androidx.datastore.core.DataMigrationInitializer
<androidx.datastore.core.DataMigrationInitializer: androidx.datastore.core.DataMigrationInitializer$Companion Companion>
    public void <init>()
    {
        androidx.datastore.core.DataMigrationInitializer r0;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.datastore.core.DataMigrationInitializer$Companion $r0;

        $r0 = new androidx.datastore.core.DataMigrationInitializer$Companion;

        specialinvoke $r0.<androidx.datastore.core.DataMigrationInitializer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.datastore.core.DataMigrationInitializer: androidx.datastore.core.DataMigrationInitializer$Companion Companion> = $r0;

        return;
    }

androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1
<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: int label>
<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0>
<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>
    void <init>(java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 r0;
        java.util.List $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 r0;
        java.lang.Object $r1, r3, $r5, $r9;
        androidx.datastore.core.InitializerApi r2;
        int $i0;
        kotlin.Unit $r4;
        androidx.datastore.core.DataMigrationInitializer$Companion $r6;
        java.util.List $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0>;

        r2 = (androidx.datastore.core.InitializerApi) $r5;

        $r6 = <androidx.datastore.core.DataMigrationInitializer: androidx.datastore.core.DataMigrationInitializer$Companion Companion>;

        $r7 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: int label> = 1;

        $r9 = staticinvoke <androidx.datastore.core.DataMigrationInitializer$Companion: java.lang.Object access$runMigrations(androidx.datastore.core.DataMigrationInitializer$Companion,java.util.List,androidx.datastore.core.InitializerApi,kotlin.coroutines.Continuation)>($r6, $r7, r2, $r8);

        if $r9 != r3 goto label3;

        return r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        java.util.List $r5;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        $r5 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>;

        specialinvoke $r4.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: void <init>(java.util.List,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(androidx.datastore.core.InitializerApi, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 r0, $r5;
        androidx.datastore.core.InitializerApi r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: androidx.datastore.core.InitializerApi;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.datastore.core.InitializerApi $r4;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.datastore.core.InitializerApi) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object invoke(androidx.datastore.core.InitializerApi,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.core.DataMigrationInitializer$Companion this$0>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label>
    void <init>(androidx.datastore.core.DataMigrationInitializer$Companion, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1 r0;
        androidx.datastore.core.DataMigrationInitializer$Companion r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1;

        r1 := @parameter0: androidx.datastore.core.DataMigrationInitializer$Companion;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.core.DataMigrationInitializer$Companion this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.datastore.core.DataMigrationInitializer$Companion $r3;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label> = $i1;

        $r3 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.core.DataMigrationInitializer$Companion this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = staticinvoke <androidx.datastore.core.DataMigrationInitializer$Companion: java.lang.Object access$runMigrations(androidx.datastore.core.DataMigrationInitializer$Companion,java.util.List,androidx.datastore.core.InitializerApi,kotlin.coroutines.Continuation)>($r3, null, null, $r2);

        return $r4;
    }

androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.core.DataMigration $migration>
    void <init>(androidx.datastore.core.DataMigration, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0;
        androidx.datastore.core.DataMigration $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r1 := @parameter0: androidx.datastore.core.DataMigration;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.core.DataMigration $migration> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0;
        java.lang.Object $r1, r2, $r6;
        int $i0;
        kotlin.Unit $r3;
        androidx.datastore.core.DataMigration $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.core.DataMigration $migration>;

        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label> = 1;

        $r6 = interfaceinvoke $r4.<androidx.datastore.core.DataMigration: java.lang.Object cleanUp(kotlin.coroutines.Continuation)>($r5);

        if $r6 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0, $r2;
        kotlin.coroutines.Continuation $r1, $r4;
        androidx.datastore.core.DataMigration $r3;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r3 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.core.DataMigration $migration>;

        specialinvoke $r2.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: void <init>(androidx.datastore.core.DataMigration,kotlin.coroutines.Continuation)>($r3, $r1);

        $r4 = (kotlin.coroutines.Continuation) $r2;

        return $r4;
    }

    public final java.lang.Object invoke(kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0, $r4;
        kotlin.coroutines.Continuation r1, $r2;
        kotlin.Unit $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>(r1);

        $r4 = (androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0;
        java.lang.Object r1, $r3;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: java.lang.Object invoke(kotlin.coroutines.Continuation)>($r2);

        return $r3;
    }

androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: int label>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>
<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>
    void <init>(java.util.List, java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r0;
        java.util.List $r1, $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations> = $r1;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r0;
        java.lang.Object $r1, r2, r4, r5, $r6, $r7, $r10, $r11, $r12, $r13, r17, r20, $r21, $r22;
        java.lang.Iterable $r3;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r8;
        java.util.List $r14, r16;
        java.util.Iterator r18;
        androidx.datastore.core.DataMigration r19;
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1 r23;
        java.lang.IllegalStateException r24;
        kotlin.coroutines.Continuation r25, r26;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label05;
            default: goto label10;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r2 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>;

        $r14 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>;

        $r3 = (java.lang.Iterable) $r14;

        r16 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>;

        r17 = r2;

        r18 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        r4 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.datastore.core.DataMigration) r4;

        r20 = r17;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0> = r16;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1> = r18;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2> = r19;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3> = r20;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: int label> = 1;

        r25 = (kotlin.coroutines.Continuation) r0;

        $r21 = interfaceinvoke r19.<androidx.datastore.core.DataMigration: java.lang.Object shouldMigrate(java.lang.Object,kotlin.coroutines.Continuation)>(r20, r25);

        if $r21 != r5 goto label04;

        return r5;

     label03:
        r20 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3>;

        $r11 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2>;

        r19 = (androidx.datastore.core.DataMigration) $r11;

        $r12 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>;

        r18 = (java.util.Iterator) $r12;

        $r13 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>;

        r16 = (java.util.List) $r13;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r21 = $r1;

     label04:
        $r8 = (java.lang.Boolean) $r21;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label07;

        r23 = new androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        specialinvoke r23.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2$1$1: void <init>(androidx.datastore.core.DataMigration,kotlin.coroutines.Continuation)>(r19, null);

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r23);

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0> = r16;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1> = r18;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2> = null;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3> = null;

        r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: int label> = 2;

        r26 = (kotlin.coroutines.Continuation) r0;

        $r10 = interfaceinvoke r19.<androidx.datastore.core.DataMigration: java.lang.Object migrate(java.lang.Object,kotlin.coroutines.Continuation)>(r20, r26);

        $r22 = $r10;

        if $r10 != r5 goto label06;

        return r5;

     label05:
        $r6 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>;

        r18 = (java.util.Iterator) $r6;

        $r7 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>;

        r16 = (java.util.List) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r22 = $r1;

     label06:
        goto label08;

     label07:
        $r22 = r20;

     label08:
        r17 = $r22;

        goto label02;

     label09:
        return r17;

     label10:
        r24 = new java.lang.IllegalStateException;

        specialinvoke r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r24;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        java.util.List $r5, $r6;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        $r6 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>;

        $r5 = r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>;

        specialinvoke $r4.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: void <init>(java.util.List,java.util.List,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0> = r1;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r0, $r5;
        java.lang.Object r1, $r6;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r0;
        java.lang.Object r1, r2, $r4;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        return $r4;
    }

androidx.datastore.core.DataMigrationInitializer$Companion
    private void <init>()
    {
        androidx.datastore.core.DataMigrationInitializer$Companion r0;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final kotlin.jvm.functions.Function2 getInitializer(java.util.List)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion r0;
        java.util.List r1;
        androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1 $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "migrations");

        $r2 = new androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1;

        specialinvoke $r2.<androidx.datastore.core.DataMigrationInitializer$Companion$getInitializer$1: void <init>(java.util.List,kotlin.coroutines.Continuation)>(r1, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        return $r3;
    }

    private final java.lang.Object runMigrations(java.util.List, androidx.datastore.core.InitializerApi, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion r0;
        java.util.List r1, r28;
        androidx.datastore.core.InitializerApi r2;
        kotlin.coroutines.Continuation r3, r38;
        kotlin.jvm.functions.Function1 r4;
        java.lang.Throwable r5, $r12, $r23, $r26, r32;
        java.lang.Object $r6, r7, $r9, $r10, $r11, $r14, $r15, $r20, $r24, $r25, r31;
        boolean $z0, $z2, z6;
        kotlin.Unit $r13;
        kotlin.jvm.functions.Function2 $r19;
        java.lang.Iterable $r21;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1 $r27, r33;
        kotlin.jvm.internal.Ref$ObjectRef r29, r36;
        java.util.Iterator r30;
        java.util.ArrayList r34;
        androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2 r35;
        java.lang.IllegalStateException r37;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.datastore.core.InitializerApi;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r3 instanceof androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1;

        if $z0 == 0 goto label01;

        $r27 = (androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1) r3;

        $i0 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i3 = $i2 - -2147483648;

        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label> = $i3;

        goto label02;

     label01:
        r33 = new androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1;

        specialinvoke r33.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: void <init>(androidx.datastore.core.DataMigrationInitializer$Companion,kotlin.coroutines.Continuation)>(r0, r3);

        $r27 = r33;

     label02:
        $r6 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result>;

        r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label09;
            default: goto label17;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

        r34 = new java.util.ArrayList;

        specialinvoke r34.<java.util.ArrayList: void <init>()>();

        r28 = (java.util.List) r34;

        r35 = new androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2;

        specialinvoke r35.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$2: void <init>(java.util.List,java.util.List,kotlin.coroutines.Continuation)>(r1, r28, null);

        $r19 = (kotlin.jvm.functions.Function2) r35;

        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0> = r28;

        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label> = 1;

        r38 = (kotlin.coroutines.Continuation) $r27;

        $r20 = interfaceinvoke r2.<androidx.datastore.core.InitializerApi: java.lang.Object updateData(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r19, r38);

        if $r20 != r7 goto label05;

        return r7;

     label04:
        $r15 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>;

        r28 = (java.util.List) $r15;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

     label05:
        r36 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r36.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r29 = r36;

        $r21 = (java.lang.Iterable) r28;

        r30 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        r31 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r4 = (kotlin.jvm.functions.Function1) r31;

     label07:
        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0> = r29;

        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1> = r30;

        $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: int label> = 2;

        $r14 = interfaceinvoke r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r27);

     label08:
        if $r14 != r7 goto label11;

        return r7;

     label09:
        $r9 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1>;

        r30 = (java.util.Iterator) $r9;

        $r10 = $r27.<androidx.datastore.core.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>;

        r29 = (kotlin.jvm.internal.Ref$ObjectRef) $r10;

     label10:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r6);

     label11:
        goto label14;

     label12:
        $r23 := @caughtexception;

        r5 = $r23;

        $r24 = r29.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r24 != null goto label13;

        r29.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r5;

        goto label14;

     label13:
        $r25 = r29.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r25);

        $r26 = (java.lang.Throwable) $r25;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r26, r5);

     label14:
        goto label06;

     label15:
        $r11 = r29.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r12 = (java.lang.Throwable) $r11;

        if $r12 == null goto label16;

        r32 = $r12;

        z6 = 0;

        throw r32;

     label16:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;

     label17:
        r37 = new java.lang.IllegalStateException;

        specialinvoke r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r37;

        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public static final java.lang.Object access$runMigrations(androidx.datastore.core.DataMigrationInitializer$Companion, java.util.List, androidx.datastore.core.InitializerApi, kotlin.coroutines.Continuation)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion $r0;
        java.util.List r1;
        androidx.datastore.core.InitializerApi r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.datastore.core.DataMigrationInitializer$Companion;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.datastore.core.InitializerApi;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = specialinvoke $r0.<androidx.datastore.core.DataMigrationInitializer$Companion: java.lang.Object runMigrations(java.util.List,androidx.datastore.core.InitializerApi,kotlin.coroutines.Continuation)>(r1, r2, $r3);

        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.core.DataMigrationInitializer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.core.DataMigrationInitializer$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.core.DataMigrationInitializer$Companion: void <init>()>();

        return;
    }

