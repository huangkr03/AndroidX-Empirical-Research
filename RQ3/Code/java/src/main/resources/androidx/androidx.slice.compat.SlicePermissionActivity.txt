androidx.slice.compat.SlicePermissionActivity
<androidx.slice.compat.SlicePermissionActivity: float MAX_LABEL_SIZE_PX>
<androidx.slice.compat.SlicePermissionActivity: java.lang.String TAG>
<androidx.slice.compat.SlicePermissionActivity: android.net.Uri mUri>
<androidx.slice.compat.SlicePermissionActivity: java.lang.String mCallingPkg>
<androidx.slice.compat.SlicePermissionActivity: java.lang.String mProviderPkg>
<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>
    public void <init>()
    {
        androidx.slice.compat.SlicePermissionActivity r0;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.slice.compat.SlicePermissionActivity r0;
        android.os.Bundle r1;
        java.lang.String r2, r3, $r10, $r12, $r14, $r17, $r19, $r22, $r25, $r37, $r43;
        android.widget.TextView r4, r5;
        android.content.Intent $r6, $r9, $r11;
        android.os.Parcelable $r7;
        android.net.Uri $r8;
        android.support.v4.text.BidiFormatter $r13, $r18;
        android.content.pm.ApplicationInfo $r15, $r20;
        java.lang.CharSequence $r16, $r21;
        java.lang.Object[] $r24, $r36, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.support.v7.app.AlertDialog$Builder $r26, $r27, $r28, $r29, $r30, r47;
        android.support.v7.app.AlertDialog $r31, $r32, $r38;
        android.view.Window $r33, $r39;
        android.view.View $r34, $r35, $r40, $r41;
        java.lang.Throwable $r44, r46;
        android.content.pm.PackageManager r45;
        android.content.Context r48;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r6 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: android.content.Intent getIntent()>();

        $r7 = virtualinvoke $r6.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("slice_uri");

        $r8 = (android.net.Uri) $r7;

        r0.<androidx.slice.compat.SlicePermissionActivity: android.net.Uri mUri> = $r8;

        $r9 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: android.content.Intent getIntent()>();

        $r10 = virtualinvoke $r9.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("pkg");

        r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String mCallingPkg> = $r10;

        $r11 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: android.content.Intent getIntent()>();

        $r12 = virtualinvoke $r11.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("provider_pkg");

        r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String mProviderPkg> = $r12;

     label1:
        r45 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: android.content.pm.PackageManager getPackageManager()>();

        $r13 = staticinvoke <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter getInstance()>();

        $r14 = r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String mCallingPkg>;

        $r15 = virtualinvoke r45.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r14, 0);

        $r16 = specialinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.CharSequence loadSafeLabel(android.content.pm.PackageManager,android.content.pm.ApplicationInfo)>(r45, $r15);

        $r17 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

        r2 = virtualinvoke $r13.<android.support.v4.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>($r17);

        $r18 = staticinvoke <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter getInstance()>();

        $r19 = r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String mProviderPkg>;

        $r20 = virtualinvoke r45.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r19, 0);

        $r21 = specialinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.CharSequence loadSafeLabel(android.content.pm.PackageManager,android.content.pm.ApplicationInfo)>(r45, $r20);

        $r22 = interfaceinvoke $r21.<java.lang.CharSequence: java.lang.String toString()>();

        r3 = virtualinvoke $r18.<android.support.v4.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>($r22);

        r47 = new android.support.v7.app.AlertDialog$Builder;

        r48 = (android.content.Context) r0;

        specialinvoke r47.<android.support.v7.app.AlertDialog$Builder: void <init>(android.content.Context)>(r48);

        $i0 = <androidx.slice.core.R$string: int abc_slice_permission_title>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r2;

        $r24[1] = r3;

        $r25 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String getString(int,java.lang.Object[])>($i0, $r24);

        $r26 = virtualinvoke r47.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>($r25);

        $i1 = <androidx.slice.core.R$layout: int abc_slice_permission_request>;

        $r27 = virtualinvoke $r26.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setView(int)>($i1);

        $i2 = <androidx.slice.core.R$string: int abc_slice_permission_deny>;

        $r28 = virtualinvoke $r27.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>($i2, r0);

        $i3 = <androidx.slice.core.R$string: int abc_slice_permission_allow>;

        $r29 = virtualinvoke $r28.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>($i3, r0);

        $r30 = virtualinvoke $r29.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)>(r0);

        $r31 = virtualinvoke $r30.<android.support.v7.app.AlertDialog$Builder: android.support.v7.app.AlertDialog show()>();

        r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog> = $r31;

        $r32 = r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>;

        $r33 = virtualinvoke $r32.<android.support.v7.app.AlertDialog: android.view.Window getWindow()>();

        $r34 = virtualinvoke $r33.<android.view.Window: android.view.View getDecorView()>();

        $i4 = <androidx.slice.core.R$id: int text1>;

        $r35 = virtualinvoke $r34.<android.view.View: android.view.View findViewById(int)>($i4);

        r4 = (android.widget.TextView) $r35;

        $i5 = <androidx.slice.core.R$string: int abc_slice_permission_text_1>;

        $r36 = newarray (java.lang.Object)[1];

        $r36[0] = r3;

        $r37 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String getString(int,java.lang.Object[])>($i5, $r36);

        virtualinvoke r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r37);

        $r38 = r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>;

        $r39 = virtualinvoke $r38.<android.support.v7.app.AlertDialog: android.view.Window getWindow()>();

        $r40 = virtualinvoke $r39.<android.view.Window: android.view.View getDecorView()>();

        $i6 = <androidx.slice.core.R$id: int text2>;

        $r41 = virtualinvoke $r40.<android.view.View: android.view.View findViewById(int)>($i6);

        r5 = (android.widget.TextView) $r41;

        $i7 = <androidx.slice.core.R$string: int abc_slice_permission_text_2>;

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r3;

        $r43 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String getString(int,java.lang.Object[])>($i7, $r42);

        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r43);

     label2:
        goto label4;

     label3:
        $r44 := @caughtexception;

        r46 = $r44;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SlicePermissionActivity", "Couldn\'t find package", r46);

        virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: void finish()>();

     label4:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private java.lang.CharSequence loadSafeLabel(android.content.pm.PackageManager, android.content.pm.ApplicationInfo)
    {
        androidx.slice.compat.SlicePermissionActivity r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ApplicationInfo r2;
        java.lang.String r3, $r9, $r11, $r14, r16, r17;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.CharSequence $r4, $r8;
        android.text.Spanned $r5;
        boolean $z0;
        android.text.TextPaint $r6, r18;
        android.text.TextUtils$TruncateAt $r7;
        java.lang.StringBuilder $r10, $r12, $r13, $r15;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        r1 := @parameter0: android.content.pm.PackageManager;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        $r4 = virtualinvoke r2.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r1);

        r3 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r5 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r3);

        r16 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        i0 = virtualinvoke r16.<java.lang.String: int length()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        i6 = virtualinvoke r16.<java.lang.String: int codePointAt(int)>(i5);

        i1 = staticinvoke <java.lang.Character: int getType(int)>(i6);

        if i1 == 13 goto label2;

        if i1 == 15 goto label2;

        if i1 != 14 goto label3;

     label2:
        r16 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        goto label5;

     label3:
        if i1 != 12 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i3 = staticinvoke <java.lang.Character: int charCount(int)>(i6);

        $i4 = i5 + $i3;

        $r14 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>($i4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $i2 = staticinvoke <java.lang.Character: int charCount(int)>(i6);

        i5 = i5 + $i2;

        goto label1;

     label5:
        r17 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r9 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        return $r9;

     label6:
        $r6 = new android.text.TextPaint;

        specialinvoke $r6.<android.text.TextPaint: void <init>()>();

        r18 = $r6;

        virtualinvoke r18.<android.text.TextPaint: void setTextSize(float)>(42.0F);

        $r7 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        $r8 = staticinvoke <android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)>(r17, r18, 500.0F, $r7);

        return $r8;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        androidx.slice.compat.SlicePermissionActivity r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.String $r2, $r4;
        android.net.Uri $r3, $r7;
        android.net.Uri$Builder $r5, $r6;
        android.content.Context r8;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        r1 := @parameter0: android.content.DialogInterface;

        i0 := @parameter1: int;

        if i0 != -1 goto label1;

        $r2 = virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String getPackageName()>();

        $r4 = r0.<androidx.slice.compat.SlicePermissionActivity: java.lang.String mCallingPkg>;

        $r3 = r0.<androidx.slice.compat.SlicePermissionActivity: android.net.Uri mUri>;

        $r5 = virtualinvoke $r3.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>("");

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        r8 = (android.content.Context) r0;

        staticinvoke <androidx.slice.compat.SliceProviderCompat: void grantSlicePermission(android.content.Context,java.lang.String,java.lang.String,android.net.Uri)>(r8, $r2, $r4, $r7);

     label1:
        virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: void finish()>();

        return;
    }

    public void onDismiss(android.content.DialogInterface)
    {
        androidx.slice.compat.SlicePermissionActivity r0;
        android.content.DialogInterface r1;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        r1 := @parameter0: android.content.DialogInterface;

        virtualinvoke r0.<androidx.slice.compat.SlicePermissionActivity: void finish()>();

        return;
    }

    public void onDestroy()
    {
        androidx.slice.compat.SlicePermissionActivity r0;
        android.support.v7.app.AlertDialog $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.slice.compat.SlicePermissionActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>;

        $z0 = virtualinvoke $r2.<android.support.v7.app.AlertDialog: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.slice.compat.SlicePermissionActivity: android.support.v7.app.AlertDialog mDialog>;

        virtualinvoke $r3.<android.support.v7.app.AlertDialog: void cancel()>();

     label1:
        return;
    }

