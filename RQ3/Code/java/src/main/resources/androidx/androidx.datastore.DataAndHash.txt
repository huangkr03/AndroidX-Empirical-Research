androidx.datastore.DataAndHash
<androidx.datastore.DataAndHash: java.lang.Object value>
<androidx.datastore.DataAndHash: int hashCode>
    public final void checkHashCode()
    {
        androidx.datastore.DataAndHash r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, r5;
        java.lang.Throwable $r3;
        java.lang.Object r4;
        boolean z1, $z2, z3, z4, z5;

        r0 := @this: androidx.datastore.DataAndHash;

        r4 = r0.<androidx.datastore.DataAndHash: java.lang.Object value>;

        z1 = 0;

        if r4 == null goto label1;

        $i1 = virtualinvoke r4.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i0 = r0.<androidx.datastore.DataAndHash: int hashCode>;

        if $i1 != $i0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z3 = $z2;

        z4 = 0;

        z5 = 0;

        if z3 != 0 goto label5;

        r5 = "Data in DataStore was mutated but DataStore is only compatible with Immutable types.";

        $r1 = new java.lang.IllegalStateException;

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label5:
        return;
    }

    public final java.lang.Object getValue()
    {
        androidx.datastore.DataAndHash r0;
        java.lang.Object $r1;

        r0 := @this: androidx.datastore.DataAndHash;

        $r1 = r0.<androidx.datastore.DataAndHash: java.lang.Object value>;

        return $r1;
    }

    public final int getHashCode()
    {
        androidx.datastore.DataAndHash r0;
        int $i0;

        r0 := @this: androidx.datastore.DataAndHash;

        $i0 = r0.<androidx.datastore.DataAndHash: int hashCode>;

        return $i0;
    }

    public void <init>(java.lang.Object, int)
    {
        androidx.datastore.DataAndHash r0;
        java.lang.Object r1;
        int i0;

        r0 := @this: androidx.datastore.DataAndHash;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.DataAndHash: java.lang.Object value> = r1;

        r0.<androidx.datastore.DataAndHash: int hashCode> = i0;

        return;
    }

