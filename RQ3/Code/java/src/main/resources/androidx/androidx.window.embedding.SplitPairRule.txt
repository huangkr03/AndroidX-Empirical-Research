androidx.window.embedding.SplitPairRule
<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>
<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>
<androidx.window.embedding.SplitPairRule: boolean clearTop>
<androidx.window.embedding.SplitPairRule: java.util.Set filters>
    public void <init>(java.util.Set, boolean, boolean, boolean, int, int, float, int)
    {
        androidx.window.embedding.SplitPairRule r0;
        java.util.Set r1, $r3;
        boolean z0, z1, z2;
        int i0, i1, i2;
        float f0;
        java.lang.Iterable $r2;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        r1 := @parameter0: java.util.Set;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        f0 := @parameter6: float;

        i2 := @parameter7: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "filters");

        specialinvoke r0.<androidx.window.embedding.SplitRule: void <init>(int,int,float,int)>(i0, i1, f0, i2);

        r0.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary> = z0;

        r0.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary> = z1;

        r0.<androidx.window.embedding.SplitPairRule: boolean clearTop> = z2;

        $r2 = (java.lang.Iterable) r1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r2);

        r0.<androidx.window.embedding.SplitPairRule: java.util.Set filters> = $r3;

        return;
    }

    public void <init>(java.util.Set, boolean, boolean, boolean, int, int, float, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.embedding.SplitPairRule r0;
        java.util.Set r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        boolean z0, z1, z2;
        float f0;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        r1 := @parameter0: java.util.Set;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i8 := @parameter4: int;

        i9 := @parameter5: int;

        f0 := @parameter6: float;

        i10 := @parameter7: int;

        i0 := @parameter8: int;

        r2 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        z1 = 1;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        z2 = 0;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        i8 = 0;

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        i9 = 0;

     label5:
        $i6 = i0 & 64;

        if $i6 == 0 goto label6;

        f0 = 0.5F;

     label6:
        $i7 = i0 & 128;

        if $i7 == 0 goto label7;

        i10 = 3;

     label7:
        specialinvoke r0.<androidx.window.embedding.SplitPairRule: void <init>(java.util.Set,boolean,boolean,boolean,int,int,float,int)>(r1, z0, z1, z2, i8, i9, f0, i10);

        return;
    }

    public final boolean getFinishPrimaryWithSecondary()
    {
        androidx.window.embedding.SplitPairRule r0;
        boolean $z0;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        $z0 = r0.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>;

        return $z0;
    }

    public final boolean getFinishSecondaryWithPrimary()
    {
        androidx.window.embedding.SplitPairRule r0;
        boolean $z0;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        $z0 = r0.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>;

        return $z0;
    }

    public final boolean getClearTop()
    {
        androidx.window.embedding.SplitPairRule r0;
        boolean $z0;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        $z0 = r0.<androidx.window.embedding.SplitPairRule: boolean clearTop>;

        return $z0;
    }

    public final java.util.Set getFilters()
    {
        androidx.window.embedding.SplitPairRule r0;
        java.util.Set $r1;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        $r1 = r0.<androidx.window.embedding.SplitPairRule: java.util.Set filters>;

        return $r1;
    }

    public final androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
    {
        androidx.window.embedding.SplitPairRule r0, $r6;
        androidx.window.embedding.SplitPairFilter r1;
        java.util.Set r2, $r4, $r8;
        java.util.LinkedHashSet $r3;
        java.util.Collection $r5;
        java.lang.Iterable $r7;
        boolean $z2, $z3, $z4;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        r1 := @parameter0: androidx.window.embedding.SplitPairFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "filter");

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r3;

        $r4 = r0.<androidx.window.embedding.SplitPairRule: java.util.Set filters>;

        $r5 = (java.util.Collection) $r4;

        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r6 = new androidx.window.embedding.SplitPairRule;

        $r7 = (java.lang.Iterable) r2;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r7);

        $z2 = r0.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>;

        $z3 = r0.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>;

        $z4 = r0.<androidx.window.embedding.SplitPairRule: boolean clearTop>;

        $i0 = virtualinvoke r0.<androidx.window.embedding.SplitPairRule: int getMinWidth()>();

        $i1 = virtualinvoke r0.<androidx.window.embedding.SplitPairRule: int getMinSmallestWidth()>();

        $f0 = virtualinvoke r0.<androidx.window.embedding.SplitPairRule: float getSplitRatio()>();

        $i2 = virtualinvoke r0.<androidx.window.embedding.SplitPairRule: int getLayoutDirection()>();

        specialinvoke $r6.<androidx.window.embedding.SplitPairRule: void <init>(java.util.Set,boolean,boolean,boolean,int,int,float,int)>($r8, $z2, $z3, $z4, $i0, $i1, $f0, $i2);

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.window.embedding.SplitPairRule r0, $r2, $r5, $r6, $r7;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Set $r3, $r4;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.window.embedding.SplitPairRule;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $z1 = specialinvoke r0.<androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<androidx.window.embedding.SplitPairRule: java.util.Set filters>;

        $r2 = (androidx.window.embedding.SplitPairRule) r1;

        $r3 = $r2.<androidx.window.embedding.SplitPairRule: java.util.Set filters>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $z4 = r0.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>;

        $r5 = (androidx.window.embedding.SplitPairRule) r1;

        $z3 = $r5.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>;

        if $z4 == $z3 goto label5;

        return 0;

     label5:
        $z6 = r0.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>;

        $r6 = (androidx.window.embedding.SplitPairRule) r1;

        $z5 = $r6.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>;

        if $z6 == $z5 goto label6;

        return 0;

     label6:
        $z8 = r0.<androidx.window.embedding.SplitPairRule: boolean clearTop>;

        $r7 = (androidx.window.embedding.SplitPairRule) r1;

        $z7 = $r7.<androidx.window.embedding.SplitPairRule: boolean clearTop>;

        if $z8 == $z7 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        androidx.window.embedding.SplitPairRule r0;
        java.util.Set $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.window.embedding.SplitPairRule;

        i8 = specialinvoke r0.<androidx.window.embedding.SplitRule: int hashCode()>();

        $i0 = 31 * i8;

        $r1 = r0.<androidx.window.embedding.SplitPairRule: java.util.Set filters>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i9 = $i0 + $i1;

        $i2 = 31 * i9;

        $z0 = r0.<androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary>;

        $i3 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z0);

        i10 = $i2 + $i3;

        $i4 = 31 * i10;

        $z1 = r0.<androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary>;

        $i5 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z1);

        i11 = $i4 + $i5;

        $i6 = 31 * i11;

        $z2 = r0.<androidx.window.embedding.SplitPairRule: boolean clearTop>;

        $i7 = staticinvoke <java.lang.Boolean: int hashCode(boolean)>($z2);

        i12 = $i6 + $i7;

        return i12;
    }

