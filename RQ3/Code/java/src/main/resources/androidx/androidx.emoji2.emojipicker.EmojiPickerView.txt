androidx.emoji2.emojipicker.EmojiPickerView
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerView$Companion Companion>
<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Float _emojiGridRows>
<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider>
<androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope scope>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider recentEmojiProvider>
<androidx.emoji2.emojipicker.EmojiPickerView: boolean recentNeedsRefreshing>
<androidx.emoji2.emojipicker.EmojiPickerView: java.util.List recentItems>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup recentItemGroup>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems emojiPickerItems>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter bodyAdapter>
<androidx.emoji2.emojipicker.EmojiPickerView: androidx.core.util.Consumer onEmojiPickedListener>
<androidx.emoji2.emojipicker.EmojiPickerView: boolean emojiCompatLoaded>
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0, r4;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4;
        android.content.res.TypedArray r3, $r14;
        androidx.emoji2.emojipicker.StickyVariantProvider $r5;
        kotlin.coroutines.EmptyCoroutineContext $r6;
        kotlin.coroutines.CoroutineContext $r7, $r24;
        kotlinx.coroutines.CoroutineScope $r8, $r22;
        androidx.emoji2.emojipicker.DefaultRecentEmojiProvider $r9;
        androidx.emoji2.emojipicker.RecentEmojiProvider $r10;
        java.util.ArrayList $r11;
        java.util.List $r12;
        int[] $r13;
        boolean $z1, $z2;
        androidx.emoji2.text.EmojiCompat $r16, $r18;
        androidx.emoji2.emojipicker.EmojiPickerView$Companion $r17;
        androidx.emoji2.emojipicker.EmojiPickerView$2 $r19;
        androidx.emoji2.text.EmojiCompat$InitCallback $r20;
        float $f0;
        java.lang.Float $r21;
        kotlinx.coroutines.CoroutineDispatcher $r23;
        androidx.emoji2.emojipicker.EmojiPickerView$3 $r25;
        kotlin.jvm.functions.Function2 $r26;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns> = 9;

        $r5 = new androidx.emoji2.emojipicker.StickyVariantProvider;

        specialinvoke $r5.<androidx.emoji2.emojipicker.StickyVariantProvider: void <init>(android.content.Context)>(r1);

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider> = $r5;

        $r6 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r7 = (kotlin.coroutines.CoroutineContext) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r7);

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope scope> = $r8;

        $r9 = new androidx.emoji2.emojipicker.DefaultRecentEmojiProvider;

        specialinvoke $r9.<androidx.emoji2.emojipicker.DefaultRecentEmojiProvider: void <init>(android.content.Context)>(r1);

        $r10 = (androidx.emoji2.emojipicker.RecentEmojiProvider) $r9;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider recentEmojiProvider> = $r10;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: boolean recentNeedsRefreshing> = 1;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = (java.util.List) $r11;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: java.util.List recentItems> = $r12;

        $r13 = <androidx.emoji2.emojipicker.R$styleable: int[] EmojiPickerView>;

        $r14 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r13, 0, 0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "context.obtainStyledAttr\u2026le.EmojiPickerView, 0, 0)");

        r3 = $r14;

        $i1 = <androidx.emoji2.emojipicker.R$styleable: int EmojiPickerView_emojiGridRows>;

        r4 = r0;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z1 == 0 goto label1;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>($i1, 0.0F);

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label2;

     label1:
        $r21 = null;

     label2:
        r4.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Float _emojiGridRows> = $r21;

        $i2 = <androidx.emoji2.emojipicker.R$styleable: int EmojiPickerView_emojiGridColumns>;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i2, 9);

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void setEmojiGridColumns(int)>($i3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $z2 = staticinvoke <androidx.emoji2.text.EmojiCompat: boolean isConfigured()>();

        if $z2 == 0 goto label5;

        $r16 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $i4 = virtualinvoke $r16.<androidx.emoji2.text.EmojiCompat: int getLoadState()>();

        tableswitch($i4)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label4;
            default: goto label5;
        };

     label3:
        $r17 = <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerView$Companion Companion>;

        <androidx.emoji2.emojipicker.EmojiPickerView: boolean emojiCompatLoaded> = 1;

        goto label5;

     label4:
        $r18 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $r19 = new androidx.emoji2.emojipicker.EmojiPickerView$2;

        specialinvoke $r19.<androidx.emoji2.emojipicker.EmojiPickerView$2: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,android.content.Context)>(r0, r1);

        $r20 = (androidx.emoji2.text.EmojiCompat$InitCallback) $r19;

        virtualinvoke $r18.<androidx.emoji2.text.EmojiCompat: void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback)>($r20);

     label5:
        $r22 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope scope>;

        $r23 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r24 = (kotlin.coroutines.CoroutineContext) $r23;

        $r25 = new androidx.emoji2.emojipicker.EmojiPickerView$3;

        specialinvoke $r25.<androidx.emoji2.emojipicker.EmojiPickerView$3: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,android.content.Context,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r26 = (kotlin.jvm.functions.Function2) $r25;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r22, $r24, null, $r26, 2, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.content.Context r1;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        android.util.AttributeSet r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: android.util.AttributeSet;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        i3 = 0;

     label2:
        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r3, i3);

        return;
    }

    public final float getEmojiGridRows()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        java.lang.Float $r1;
        float $f0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Float _emojiGridRows>;

        if $r1 == null goto label1;

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        goto label2;

     label1:
        $f0 = -1.0F;

     label2:
        return $f0;
    }

    public final void setEmojiGridRows(float)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0, r2;
        float f0, f1;
        java.lang.Float r1, $r5;
        boolean z1, $z2, $z3;
        java.lang.Number $r3;
        byte $b0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        f0 := @parameter0: float;

        r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r3 = (java.lang.Number) r1;

        f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        r2 = r0;

        $b0 = f1 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        if z1 == 0 goto label3;

        $r5 = r1;

        goto label4;

     label3:
        $r5 = null;

     label4:
        r2.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Float _emojiGridRows> = $r5;

        $z2 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: boolean isLaidOut()>();

        if $z2 == 0 goto label5;

        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void showEmojiPickerView()>();

     label5:
        return;
    }

    public final int getEmojiGridColumns()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns>;

        return $i0;
    }

    public final void setEmojiGridColumns(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0, r2;
        int i0, i1, $i2;
        java.lang.Integer r1, $r5;
        boolean z1, $z2, $z3;
        java.lang.Number $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        i0 := @parameter0: int;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = (java.lang.Number) r1;

        i1 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        r2 = r0;

        if i1 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        if z1 == 0 goto label3;

        $r5 = r1;

        goto label4;

     label3:
        $r5 = null;

     label4:
        if $r5 == null goto label5;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        goto label6;

     label5:
        $i2 = 9;

     label6:
        r2.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns> = $i2;

        $z2 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: boolean isLaidOut()>();

        if $z2 == 0 goto label7;

        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void showEmojiPickerView()>();

     label7:
        return;
    }

    private final androidx.emoji2.emojipicker.EmojiPickerBodyAdapter createEmojiPickerBodyAdapter()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;
        android.content.Context $r2;
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1 $r3;
        int $i0;
        java.lang.Float $r4;
        androidx.emoji2.emojipicker.StickyVariantProvider $r5;
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2 $r6;
        kotlin.jvm.functions.Function0 $r7;
        kotlin.jvm.functions.Function2 $r8;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = new androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        $r2 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "context");

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns>;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Float _emojiGridRows>;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider>;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r3;

        $r6 = new androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2;

        specialinvoke $r6.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: void <init>(androidx.emoji2.emojipicker.EmojiPickerView)>(r0);

        $r8 = (kotlin.jvm.functions.Function2) $r6;

        specialinvoke $r1.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void <init>(android.content.Context,int,java.lang.Float,androidx.emoji2.emojipicker.StickyVariantProvider,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2)>($r2, $i0, $r4, $r5, $r7, $r8);

        return $r1;
    }

    public final androidx.emoji2.emojipicker.EmojiPickerItems buildEmojiPickerItems$emoji2_emojipicker_release()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        java.util.List r1, r10, r12, $r17, $r23, $r28, r38, r40, r42;
        androidx.emoji2.emojipicker.BundledEmojiListLoader$EmojiDataCategory r3;
        java.lang.Iterable $r4;
        androidx.emoji2.emojipicker.CategoryTitle r5, r11, $r14, $r26;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, i15;
        java.util.Collection r6, r41;
        java.util.Iterator r7, r39;
        java.lang.Object r8, $r25;
        androidx.emoji2.emojipicker.EmojiViewItem r9;
        androidx.emoji2.emojipicker.ItemGroup $r13, $r30, r36, r37;
        android.content.Context $r15, $r20;
        java.lang.String $r16, $r21, $r27, $r33, $r34;
        java.lang.Integer $r18;
        androidx.emoji2.emojipicker.PlaceholderText $r19;
        androidx.emoji2.emojipicker.BundledEmojiListLoader $r22;
        boolean $z0, $z1;
        androidx.emoji2.emojipicker.EmojiPickerItems $r24;
        java.util.ArrayList $r29;
        androidx.emoji2.emojipicker.EmojiViewData $r31;
        androidx.emoji2.emojipicker.StickyVariantProvider $r32;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List createListBuilder()>();

        $r13 = new androidx.emoji2.emojipicker.ItemGroup;

        $i4 = <androidx.emoji2.emojipicker.R$drawable: int quantum_gm_ic_access_time_filled_vd_theme_24>;

        $r14 = new androidx.emoji2.emojipicker.CategoryTitle;

        $r15 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        $i5 = <androidx.emoji2.emojipicker.R$string: int emoji_category_recent>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.String getString(int)>($i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "context.getString(R.string.emoji_category_recent)");

        specialinvoke $r14.<androidx.emoji2.emojipicker.CategoryTitle: void <init>(java.lang.String)>($r16);

        $r17 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: java.util.List recentItems>;

        $i6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns>;

        $i7 = 3 * $i6;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r19 = new androidx.emoji2.emojipicker.PlaceholderText;

        $r20 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        $i8 = <androidx.emoji2.emojipicker.R$string: int emoji_empty_recent_category>;

        $r21 = virtualinvoke $r20.<android.content.Context: java.lang.String getString(int)>($i8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "context.getString(R.stri\u2026ji_empty_recent_category)");

        specialinvoke $r19.<androidx.emoji2.emojipicker.PlaceholderText: void <init>(java.lang.String)>($r21);

        specialinvoke $r13.<androidx.emoji2.emojipicker.ItemGroup: void <init>(int,androidx.emoji2.emojipicker.CategoryTitle,java.util.List,java.lang.Integer,androidx.emoji2.emojipicker.PlaceholderText)>($i4, $r14, $r17, $r18, $r19);

        r36 = $r13;

        r37 = r36;

        r38 = r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup recentItemGroup> = r37;

        interfaceinvoke r38.<java.util.List: boolean add(java.lang.Object)>(r36);

        $r22 = <androidx.emoji2.emojipicker.BundledEmojiListLoader: androidx.emoji2.emojipicker.BundledEmojiListLoader INSTANCE>;

        $r23 = virtualinvoke $r22.<androidx.emoji2.emojipicker.BundledEmojiListLoader: java.util.List getCategorizedEmojiData$emoji2_emojipicker_release()>();

        r39 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

        i13 = 0;

     label1:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i14 = i13;

        i13 = i13 + 1;

        $r25 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.emoji2.emojipicker.BundledEmojiListLoader$EmojiDataCategory) $r25;

        $i9 = virtualinvoke r3.<androidx.emoji2.emojipicker.BundledEmojiListLoader$EmojiDataCategory: int getHeaderIconId()>();

        $r26 = new androidx.emoji2.emojipicker.CategoryTitle;

        $r27 = virtualinvoke r3.<androidx.emoji2.emojipicker.BundledEmojiListLoader$EmojiDataCategory: java.lang.String getCategoryName()>();

        specialinvoke $r26.<androidx.emoji2.emojipicker.CategoryTitle: void <init>(java.lang.String)>($r27);

        $r28 = virtualinvoke r3.<androidx.emoji2.emojipicker.BundledEmojiListLoader$EmojiDataCategory: java.util.List getEmojiDataList()>();

        $r4 = (java.lang.Iterable) $r28;

        r5 = $r26;

        i0 = $i9;

        r40 = r1;

        $r29 = new java.util.ArrayList;

        $i10 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r4, 10);

        specialinvoke $r29.<java.util.ArrayList: void <init>(int)>($i10);

        r6 = (java.util.Collection) $r29;

        i15 = 0;

        r7 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $i11 = i15;

        i15 = i15 + 1;

        i1 = $i11;

        if i1 >= 0 goto label3;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label3:
        r9 = (androidx.emoji2.emojipicker.EmojiViewItem) r8;

        i2 = i1;

        r41 = r6;

        $r31 = new androidx.emoji2.emojipicker.EmojiViewData;

        $r32 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.StickyVariantProvider stickyVariantProvider>;

        $r33 = virtualinvoke r9.<androidx.emoji2.emojipicker.EmojiViewItem: java.lang.String getEmoji()>();

        $r34 = virtualinvoke $r32.<androidx.emoji2.emojipicker.StickyVariantProvider: java.lang.String get$emoji2_emojipicker_release(java.lang.String)>($r33);

        $i12 = $i14 + i2;

        specialinvoke $r31.<androidx.emoji2.emojipicker.EmojiViewData: void <init>(java.lang.String,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r34, 0, $i12, 2, null);

        interfaceinvoke r41.<java.util.Collection: boolean add(java.lang.Object)>($r31);

        goto label2;

     label4:
        r42 = (java.util.List) r6;

        r10 = r42;

        r11 = r5;

        i3 = i0;

        $r30 = new androidx.emoji2.emojipicker.ItemGroup;

        specialinvoke $r30.<androidx.emoji2.emojipicker.ItemGroup: void <init>(int,androidx.emoji2.emojipicker.CategoryTitle,java.util.List,java.lang.Integer,androidx.emoji2.emojipicker.PlaceholderText,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i3, r11, r10, null, null, 24, null);

        interfaceinvoke r40.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label1;

     label5:
        r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List build(java.util.List)>(r1);

        $r24 = new androidx.emoji2.emojipicker.EmojiPickerItems;

        specialinvoke $r24.<androidx.emoji2.emojipicker.EmojiPickerItems: void <init>(java.util.List)>(r12);

        return $r24;
    }

    private final void showEmojiPickerView()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        androidx.recyclerview.widget.GridLayoutManager r1, $r3, r23;
        androidx.emoji2.emojipicker.EmojiPickerItems $r2, $r24;
        android.content.Context $r4, $r8, $r11, r29;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1 $r5;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r6;
        androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $r7, r25;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1 $r9;
        kotlin.jvm.functions.Function1 $r10;
        android.view.ViewGroup $r12;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1 $r13;
        androidx.recyclerview.widget.RecyclerView$LayoutManager $r14, $r16;
        androidx.recyclerview.widget.RecyclerView$Adapter $r15, $r17;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3 $r18;
        androidx.recyclerview.widget.RecyclerView$OnScrollListener $r19;
        androidx.recyclerview.widget.RecyclerView$RecycledViewPool $r20, r36;
        androidx.emoji2.emojipicker.ItemType $r21;
        androidx.recyclerview.widget.RecyclerView $r22, $r28, $r31, r33, r35, r37;
        android.view.View $r26, r27, r30;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter r32, r34;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems buildEmojiPickerItems$emoji2_emojipicker_release()>();

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems emojiPickerItems> = $r2;

        $r3 = new androidx.recyclerview.widget.GridLayoutManager;

        $r4 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: int emojiGridColumns>;

        specialinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager: void <init>(android.content.Context,int,int,boolean)>($r4, $i0, 1, 0);

        r23 = $r3;

        $r5 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1;

        specialinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView)>(r0);

        $r6 = (androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) $r5;

        virtualinvoke r23.<androidx.recyclerview.widget.GridLayoutManager: void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)>($r6);

        r1 = r23;

        $r7 = new androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter;

        $r8 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "context");

        $r24 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems emojiPickerItems>;

        if $r24 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r24 = null;

     label1:
        $r9 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1;

        specialinvoke $r9.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,androidx.recyclerview.widget.GridLayoutManager)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        specialinvoke $r7.<androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter: void <init>(android.content.Context,androidx.emoji2.emojipicker.EmojiPickerItems,kotlin.jvm.functions.Function1)>($r8, $r24, $r10);

        r25 = $r7;

        specialinvoke r0.<android.widget.FrameLayout: void removeAllViews()>();

        $r11 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: android.content.Context getContext()>();

        $i1 = <androidx.emoji2.emojipicker.R$layout: int emoji_picker>;

        $r12 = (android.view.ViewGroup) r0;

        $r26 = staticinvoke <android.widget.FrameLayout: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r11, $i1, $r12);

        $i2 = <androidx.emoji2.emojipicker.R$id: int emoji_picker_header>;

        r27 = staticinvoke <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>($r26, $i2);

        $r28 = (androidx.recyclerview.widget.RecyclerView) r27;

        r29 = virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView: android.content.Context getContext()>();

        $r13 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1;

        specialinvoke $r13.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,android.content.Context)>(r0, r29);

        $r14 = (androidx.recyclerview.widget.RecyclerView$LayoutManager) $r13;

        virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>($r14);

        $r15 = (androidx.recyclerview.widget.RecyclerView$Adapter) r25;

        virtualinvoke $r28.<androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>($r15);

        $i3 = <androidx.emoji2.emojipicker.R$id: int emoji_picker_body>;

        r30 = staticinvoke <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>($r26, $i3);

        $r31 = (androidx.recyclerview.widget.RecyclerView) r30;

        $r16 = (androidx.recyclerview.widget.RecyclerView$LayoutManager) r1;

        virtualinvoke $r31.<androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)>($r16);

        r32 = specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter createEmojiPickerBodyAdapter()>();

        r33 = $r31;

        virtualinvoke r32.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void setHasStableIds(boolean)>(1);

        r34 = r32;

        r35 = r33;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter bodyAdapter> = r34;

        $r17 = (androidx.recyclerview.widget.RecyclerView$Adapter) r34;

        virtualinvoke r35.<androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>($r17);

        $r18 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3;

        specialinvoke $r18.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: void <init>(androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter,androidx.emoji2.emojipicker.EmojiPickerView,androidx.recyclerview.widget.GridLayoutManager)>(r25, r0, r1);

        $r19 = (androidx.recyclerview.widget.RecyclerView$OnScrollListener) $r18;

        virtualinvoke $r31.<androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)>($r19);

        virtualinvoke $r31.<androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)>(null);

        $r20 = new androidx.recyclerview.widget.RecyclerView$RecycledViewPool;

        specialinvoke $r20.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void <init>()>();

        r36 = $r20;

        r37 = $r31;

        $r21 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType EMOJI>;

        $i4 = virtualinvoke $r21.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        virtualinvoke r36.<androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void setMaxRecycledViews(int,int)>($i4, 100);

        virtualinvoke r37.<androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)>(r36);

        $r22 = (androidx.recyclerview.widget.RecyclerView) r30;

        return;
    }

    public final java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r23, r24;
        java.util.List r1;
        java.lang.Object $r2, r3, $r6, $r11, $r19;
        boolean $z0, $z1;
        kotlin.Unit $r5, $r14;
        kotlinx.coroutines.MainCoroutineDispatcher $r7;
        kotlin.coroutines.CoroutineContext $r9;
        kotlin.jvm.functions.Function2 $r10;
        androidx.emoji2.emojipicker.ItemGroup $r12, $r18;
        androidx.emoji2.emojipicker.RecentEmojiProvider $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        androidx.emoji2.emojipicker.EmojiPickerView r16;
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1 $r17, r20;
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r21;
        java.lang.IllegalStateException r22;

        r16 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1;

        if $z0 == 0 goto label01;

        $r17 = (androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1) r0;

        $i0 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label>;

        $i3 = $i2 - -2147483648;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label> = $i3;

        goto label02;

     label01:
        r20 = new androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1;

        specialinvoke r20.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>(r16, r0);

        $r17 = r20;

     label02:
        $r2 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label08;
            case 2: goto label10;
            default: goto label12;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $z1 = r16.<androidx.emoji2.emojipicker.EmojiPickerView: boolean recentNeedsRefreshing>;

        if $z1 != 0 goto label04;

        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r14;

     label04:
        $r12 = r16.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup recentItemGroup>;

        if $r12 == null goto label06;

        $r18 = r16.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup recentItemGroup>;

        if $r18 != null goto label05;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r18 = null;

     label05:
        $i5 = virtualinvoke $r18.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        goto label07;

     label06:
        $i5 = 0;

     label07:
        i6 = $i5;

        $r13 = r16.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider recentEmojiProvider>;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object L$0> = r16;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int I$0> = i6;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label> = 1;

        r23 = (kotlin.coroutines.Continuation) $r17;

        $r19 = interfaceinvoke $r13.<androidx.emoji2.emojipicker.RecentEmojiProvider: java.lang.Object getRecentEmojiList(kotlin.coroutines.Continuation)>(r23);

        if $r19 != r3 goto label09;

        return r3;

     label08:
        i6 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int I$0>;

        $r6 = $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object L$0>;

        r16 = (androidx.emoji2.emojipicker.EmojiPickerView) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r19 = $r2;

     label09:
        r1 = (java.util.List) $r19;

        $r7 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r9 = (kotlin.coroutines.CoroutineContext) $r7;

        r21 = new androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        specialinvoke r21.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,java.util.List,int,kotlin.coroutines.Continuation)>(r16, r1, i6, null);

        $r10 = (kotlin.jvm.functions.Function2) r21;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object L$0> = null;

        $r17.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label> = 2;

        r24 = (kotlin.coroutines.Continuation) $r17;

        $r11 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r9, $r10, r24);

        if $r11 != r3 goto label11;

        return r3;

     label10:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label11:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label12:
        r22 = new java.lang.IllegalStateException;

        specialinvoke r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r22;
    }

    public final void setOnEmojiPickedListener(androidx.core.util.Consumer)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        androidx.core.util.Consumer r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: androidx.core.util.Consumer;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.core.util.Consumer onEmojiPickedListener> = r1;

        return;
    }

    public final void setRecentEmojiProvider(androidx.emoji2.emojipicker.RecentEmojiProvider)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        androidx.emoji2.emojipicker.RecentEmojiProvider r1;
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: androidx.emoji2.emojipicker.RecentEmojiProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recentEmojiProvider");

        r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider recentEmojiProvider> = r1;

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope scope>;

        $r2 = new androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        specialinvoke $r2.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>(r0, null);

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, null, null, $r4, 3, null);

        return;
    }

    public void addView(android.view.View)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Adding views to the EmojiPickerView is unsupported");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>(r1);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Adding views to the EmojiPickerView is unsupported");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void addView(android.view.View, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        int i0, $i1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Adding views to the EmojiPickerView is unsupported");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int)>(r1, i0);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Adding views to the EmojiPickerView is unsupported");

        throw $r3;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    public void addView(android.view.View, int, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        int i0, i1, $i2;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: int getChildCount()>();

        if $i2 <= 0 goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Adding views to the EmojiPickerView is unsupported");

        throw $r2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,int)>(r1, i0, i1);

        return;
    }

    public void removeAllViews()
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r1;
    }

    public void removeView(android.view.View)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r2;
    }

    public void removeViewAt(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r1;
    }

    public void removeViewInLayout(android.view.View)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.view.View r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.view.View;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r2;
    }

    public void removeViews(int, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r1;
    }

    public void removeViewsInLayout(int, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Removing views from the EmojiPickerView is unsupported");

        throw $r1;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, 0, 4, null);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.emoji2.emojipicker.EmojiPickerView r0;
        android.content.Context r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 0, 6, null);

        return;
    }

    public static final boolean access$getEmojiCompatLoaded$cp()
    {
        boolean $z0;

        $z0 = <androidx.emoji2.emojipicker.EmojiPickerView: boolean emojiCompatLoaded>;

        return $z0;
    }

    public static final void access$setEmojiCompatLoaded$cp(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.emoji2.emojipicker.EmojiPickerView: boolean emojiCompatLoaded> = z0;

        return;
    }

    public static final androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.emoji2.emojipicker.EmojiPickerItems $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems emojiPickerItems>;

        return $r1;
    }

    public static final androidx.core.util.Consumer access$getOnEmojiPickedListener$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.core.util.Consumer $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.core.util.Consumer onEmojiPickedListener>;

        return $r1;
    }

    public static final androidx.emoji2.emojipicker.RecentEmojiProvider access$getRecentEmojiProvider$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.emoji2.emojipicker.RecentEmojiProvider $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider recentEmojiProvider>;

        return $r1;
    }

    public static final void access$setRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView, boolean)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        boolean z0;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        z0 := @parameter1: boolean;

        $r0.<androidx.emoji2.emojipicker.EmojiPickerView: boolean recentNeedsRefreshing> = z0;

        return;
    }

    public static final androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.emoji2.emojipicker.ItemGroup $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup recentItemGroup>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope scope>;

        return $r1;
    }

    public static final java.util.List access$getRecentItems$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: java.util.List recentItems>;

        return $r1;
    }

    public static final androidx.emoji2.emojipicker.EmojiPickerBodyAdapter access$getBodyAdapter$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r1 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter bodyAdapter>;

        return $r1;
    }

    public static final boolean access$getRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $z0 = $r0.<androidx.emoji2.emojipicker.EmojiPickerView: boolean recentNeedsRefreshing>;

        return $z0;
    }

    public static final void access$setEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView, androidx.emoji2.emojipicker.EmojiPickerItems)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;
        androidx.emoji2.emojipicker.EmojiPickerItems r1;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        r1 := @parameter1: androidx.emoji2.emojipicker.EmojiPickerItems;

        $r0.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems emojiPickerItems> = r1;

        return;
    }

    public static final void access$showEmojiPickerView(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView $r0;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        specialinvoke $r0.<androidx.emoji2.emojipicker.EmojiPickerView: void showEmojiPickerView()>();

        return;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$Companion $r0;

        $r0 = new androidx.emoji2.emojipicker.EmojiPickerView$Companion;

        specialinvoke $r0.<androidx.emoji2.emojipicker.EmojiPickerView$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerView$Companion Companion> = $r0;

        return;
    }

androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1
<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.emoji2.emojipicker.EmojiPickerView $r3, $r4, $r6;
        androidx.emoji2.emojipicker.EmojiPickerItems $r5;
        kotlin.Unit $r7;
        java.lang.IllegalStateException $r8;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r9;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label3;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r5 = virtualinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems buildEmojiPickerItems$emoji2_emojipicker_release()>();

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$setEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView,androidx.emoji2.emojipicker.EmojiPickerItems)>($r4, $r5);

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r9 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter access$getBodyAdapter$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r6);

        if $r9 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("bodyAdapter");

        $r9 = null;

     label2:
        virtualinvoke $r9.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void notifyDataSetChanged()>();

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1
<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: android.content.Context $context>
<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(android.content.Context, androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 r0;
        android.content.Context $r1;
        androidx.emoji2.emojipicker.EmojiPickerView $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: androidx.emoji2.emojipicker.EmojiPickerView;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: android.content.Context $context> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 r0;
        java.lang.Object $r1, r2, $r10, $r14;
        int $i0;
        kotlin.Unit $r3;
        kotlinx.coroutines.MainCoroutineDispatcher $r4;
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1 $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r6;
        kotlin.coroutines.CoroutineContext $r7;
        kotlin.jvm.functions.Function2 $r8;
        kotlin.coroutines.Continuation $r9, $r13;
        androidx.emoji2.emojipicker.BundledEmojiListLoader $r11;
        android.content.Context $r12;
        java.lang.IllegalStateException $r15;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label4;
            default: goto label6;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r11 = <androidx.emoji2.emojipicker.BundledEmojiListLoader: androidx.emoji2.emojipicker.BundledEmojiListLoader INSTANCE>;

        $r12 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: android.content.Context $context>;

        $r13 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: int label> = 1;

        $r14 = virtualinvoke $r11.<androidx.emoji2.emojipicker.BundledEmojiListLoader: java.lang.Object load$emoji2_emojipicker_release(android.content.Context,kotlin.coroutines.Continuation)>($r12, $r13);

        if $r14 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r7 = (kotlin.coroutines.CoroutineContext) $r4;

        $r5 = new androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1;

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r6, null);

        $r8 = (kotlin.jvm.functions.Function2) $r5;

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: int label> = 2;

        $r10 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r7, $r8, $r9);

        if $r10 != r2 goto label5;

        return r2;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label6:
        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r15;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;
        android.content.Context $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: android.content.Context $context>;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: void <init>(android.content.Context,androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$2
<androidx.emoji2.emojipicker.EmojiPickerView$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$2: android.content.Context $context>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, android.content.Context)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        android.content.Context $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: android.content.Context;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$2: android.content.Context $context> = $r2;

        specialinvoke r0.<androidx.emoji2.text.EmojiCompat$InitCallback: void <init>()>();

        return;
    }

    public void onInitialized()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerView$Companion $r1;
        androidx.emoji2.emojipicker.EmojiPickerView $r2, $r6;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlinx.coroutines.CoroutineDispatcher $r4;
        androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1 $r5;
        android.content.Context $r7;
        kotlin.coroutines.CoroutineContext $r8;
        kotlin.jvm.functions.Function2 $r9;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2;

        $r1 = <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerView$Companion Companion>;

        virtualinvoke $r1.<androidx.emoji2.emojipicker.EmojiPickerView$Companion: void setEmojiCompatLoaded$emoji2_emojipicker_release(boolean)>(1);

        $r2 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r3 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r2);

        $r4 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()>();

        $r8 = (kotlin.coroutines.CoroutineContext) $r4;

        $r5 = new androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1;

        $r7 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2: android.content.Context $context>;

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$2$onInitialized$1: void <init>(android.content.Context,androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r7, $r6, null);

        $r9 = (kotlin.jvm.functions.Function2) $r5;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, $r8, null, $r9, 2, null);

        return;
    }

    public void onFailed(java.lang.Throwable)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$2 r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$2;

        r1 := @parameter0: java.lang.Throwable;

        return;
    }

androidx.emoji2.emojipicker.EmojiPickerView$3$1
<androidx.emoji2.emojipicker.EmojiPickerView$3$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$3$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 r0;
        java.lang.Object $r1;
        int $i0;
        androidx.emoji2.emojipicker.EmojiPickerView $r3;
        kotlin.Unit $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$showEmojiPickerView(androidx.emoji2.emojipicker.EmojiPickerView)>($r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$3$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$3$load$1
<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: android.content.Context $context>
    void <init>(android.content.Context, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 r0;
        android.content.Context $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: android.content.Context $context> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        kotlin.Unit $r3;
        androidx.emoji2.emojipicker.BundledEmojiListLoader $r4;
        android.content.Context $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = <androidx.emoji2.emojipicker.BundledEmojiListLoader: androidx.emoji2.emojipicker.BundledEmojiListLoader INSTANCE>;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: android.content.Context $context>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: int label> = 1;

        $r7 = virtualinvoke $r4.<androidx.emoji2.emojipicker.BundledEmojiListLoader: java.lang.Object load$emoji2_emojipicker_release(android.content.Context,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        android.content.Context $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: android.content.Context $context>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: void <init>(android.content.Context,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$3$load$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$3
<androidx.emoji2.emojipicker.EmojiPickerView$3: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0>
<androidx.emoji2.emojipicker.EmojiPickerView$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$3: android.content.Context $context>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, android.content.Context, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        android.content.Context $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: android.content.Context $context> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3 r0;
        java.lang.Object $r1, r3, $r11, $r12, $r14, $r15, $r21;
        kotlinx.coroutines.CoroutineScope $r2;
        int $i0;
        kotlin.Unit $r4;
        kotlinx.coroutines.MainCoroutineDispatcher $r5;
        androidx.emoji2.emojipicker.EmojiPickerView$3$1 $r6;
        androidx.emoji2.emojipicker.EmojiPickerView $r7, $r19;
        kotlin.coroutines.CoroutineContext $r8;
        kotlin.jvm.functions.Function2 $r9, $r18;
        kotlin.coroutines.Continuation $r10, $r13, $r20;
        androidx.emoji2.emojipicker.EmojiPickerView$3$load$1 $r16;
        android.content.Context $r17;
        java.lang.IllegalStateException $r22;
        kotlinx.coroutines.Job r23;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label6;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r15 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r15;

        $r16 = new androidx.emoji2.emojipicker.EmojiPickerView$3$load$1;

        $r17 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: android.content.Context $context>;

        specialinvoke $r16.<androidx.emoji2.emojipicker.EmojiPickerView$3$load$1: void <init>(android.content.Context,kotlin.coroutines.Continuation)>($r17, null);

        $r18 = (kotlin.jvm.functions.Function2) $r16;

        r23 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r18, 3, null);

        $r19 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r20 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0> = r23;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: int label> = 1;

        $r21 = virtualinvoke $r19.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)>($r20);

        if $r21 != r3 goto label3;

        return r3;

     label2:
        $r12 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0>;

        r23 = (kotlinx.coroutines.Job) $r12;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r13 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0> = null;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: int label> = 2;

        $r14 = interfaceinvoke r23.<kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)>($r13);

        if $r14 != r3 goto label5;

        return r3;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r8 = (kotlin.coroutines.CoroutineContext) $r5;

        $r6 = new androidx.emoji2.emojipicker.EmojiPickerView$3$1;

        $r7 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r6.<androidx.emoji2.emojipicker.EmojiPickerView$3$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r7, null);

        $r9 = (kotlin.jvm.functions.Function2) $r6;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: int label> = 3;

        $r11 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r8, $r9, $r10);

        if $r11 != r3 goto label7;

        return r3;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label7:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label8:
        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r22;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        android.content.Context $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.emoji2.emojipicker.EmojiPickerView$3;

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: android.content.Context $context>;

        specialinvoke $r4.<androidx.emoji2.emojipicker.EmojiPickerView$3: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,android.content.Context,kotlin.coroutines.Continuation)>($r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object L$0> = r1;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$3) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$3 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$Companion
    private void <init>()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$Companion r0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean getEmojiCompatLoaded$emoji2_emojipicker_release()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$Companion r0;
        boolean $z0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$Companion;

        $z0 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: boolean access$getEmojiCompatLoaded$cp()>();

        return $z0;
    }

    public final void setEmojiCompatLoaded$emoji2_emojipicker_release(boolean)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$Companion r0;
        boolean z0;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$Companion;

        z0 := @parameter0: boolean;

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$setEmojiCompatLoaded$cp(boolean)>(z0);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$Companion: void <init>()>();

        return;
    }

androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1
<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.emoji2.emojipicker.EmojiPickerItems invoke()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        androidx.emoji2.emojipicker.EmojiPickerItems $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r2 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r1);

        if $r2 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r2 = null;

     label1:
        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerItems $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1;

        $r1 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$1: androidx.emoji2.emojipicker.EmojiPickerItems invoke()>();

        return $r1;
    }

androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2
<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter, androidx.emoji2.emojipicker.EmojiViewItem)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r1;
        androidx.emoji2.emojipicker.EmojiViewItem r2;
        androidx.emoji2.emojipicker.EmojiPickerView $r3, $r5, $r8;
        androidx.core.util.Consumer $r4;
        androidx.emoji2.emojipicker.RecentEmojiProvider $r6;
        java.lang.String $r7;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter;

        r2 := @parameter1: androidx.emoji2.emojipicker.EmojiViewItem;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "emojiViewItem");

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r4 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.core.util.Consumer access$getOnEmojiPickedListener$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r3);

        if $r4 == null goto label1;

        interfaceinvoke $r4.<androidx.core.util.Consumer: void accept(java.lang.Object)>(r2);

        goto label1;

     label1:
        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r6 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.RecentEmojiProvider access$getRecentEmojiProvider$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r5);

        $r7 = virtualinvoke r2.<androidx.emoji2.emojipicker.EmojiViewItem: java.lang.String getEmoji()>();

        interfaceinvoke $r6.<androidx.emoji2.emojipicker.RecentEmojiProvider: void recordSelection(java.lang.String)>($r7);

        $r8 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$setRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView,boolean)>($r8, 1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2 r0;
        java.lang.Object r1, r2;
        androidx.emoji2.emojipicker.EmojiViewItem $r3;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.emoji2.emojipicker.EmojiPickerBodyAdapter) r1;

        $r3 = (androidx.emoji2.emojipicker.EmojiViewItem) r2;

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$createEmojiPickerBodyAdapter$2: void invoke(androidx.emoji2.emojipicker.EmojiPickerBodyAdapter,androidx.emoji2.emojipicker.EmojiViewItem)>($r4, $r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object L$0>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int I$0>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object result>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1;

        r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.emoji2.emojipicker.EmojiPickerView $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: int label> = $i1;

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.util.List $recent>
<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, java.util.List, int, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        java.util.List $r2;
        int $i0;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: java.util.List;

        $i0 := @parameter2: int;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.util.List $recent> = $r2;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize> = $i0;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r0;
        java.lang.Object $r1, r4;
        java.util.Collection r2, r7, $r15;
        java.util.Iterator r3;
        java.lang.String r5;
        java.util.List r6, $r9, $r11, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        androidx.emoji2.emojipicker.EmojiPickerView $r8, $r10, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r32, $r39, $r41, $r44;
        java.util.ArrayList $r13;
        boolean $z0;
        androidx.emoji2.emojipicker.EmojiPickerItems $r17, $r29;
        androidx.emoji2.emojipicker.EmojiViewData $r26;
        java.lang.IllegalStateException $r27;
        java.lang.Iterable $r28;
        androidx.emoji2.emojipicker.ItemGroup $r30, $r33, $r35, $r36, $r38, $r40, $r43;
        kotlin.ranges.IntRange $r31;
        androidx.emoji2.emojipicker.EmojiPickerBodyAdapter $r34, $r37, $r42;
        kotlin.Unit $r45;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            default: goto label18;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r8 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r9 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: java.util.List access$getRecentItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r8);

        interfaceinvoke $r9.<java.util.List: void clear()>();

        $r10 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r11 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: java.util.List access$getRecentItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r10);

        $r12 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.util.List $recent>;

        $r28 = (java.lang.Iterable) $r12;

        r6 = $r11;

        $r13 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r28, 10);

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = (java.util.Collection) $r13;

        r3 = interfaceinvoke $r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) r4;

        r7 = r2;

        $r26 = new androidx.emoji2.emojipicker.EmojiViewData;

        specialinvoke $r26.<androidx.emoji2.emojipicker.EmojiViewData: void <init>(java.lang.String,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r5, 0, 0, 4, null);

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r26);

        goto label02;

     label03:
        $r14 = (java.util.List) r2;

        $r15 = (java.util.Collection) $r14;

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r15);

        $r16 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r17 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r16);

        if $r17 == null goto label17;

        $r18 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r29 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r18);

        if $r29 != null goto label04;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r29 = null;

     label04:
        $r19 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r30 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r19);

        if $r30 != null goto label05;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r30 = null;

     label05:
        $r31 = virtualinvoke $r29.<androidx.emoji2.emojipicker.EmojiPickerItems: kotlin.ranges.IntRange groupRange(androidx.emoji2.emojipicker.ItemGroup)>($r30);

        $r32 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r33 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r32);

        if $r33 != null goto label06;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r33 = null;

     label06:
        $i2 = virtualinvoke $r33.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        if $i2 <= $i3 goto label09;

        $r24 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r34 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter access$getBodyAdapter$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r24);

        if $r34 != null goto label07;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("bodyAdapter");

        $r34 = null;

     label07:
        $i6 = virtualinvoke $r31.<kotlin.ranges.IntRange: int getFirst()>();

        $i7 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        $i8 = $i6 + $i7;

        $r25 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r35 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r25);

        if $r35 != null goto label08;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r35 = null;

     label08:
        $i9 = virtualinvoke $r35.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i10 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        $i11 = $i9 - $i10;

        virtualinvoke $r34.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void notifyItemRangeInserted(int,int)>($i8, $i11);

        goto label14;

     label09:
        $r20 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r36 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r20);

        if $r36 != null goto label10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r36 = null;

     label10:
        $i4 = virtualinvoke $r36.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        if $i4 >= $i5 goto label14;

        $r22 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r37 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter access$getBodyAdapter$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r22);

        if $r37 != null goto label11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("bodyAdapter");

        $r37 = null;

     label11:
        $i12 = virtualinvoke $r31.<kotlin.ranges.IntRange: int getFirst()>();

        $r23 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r38 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r23);

        if $r38 != null goto label12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r38 = null;

     label12:
        $i13 = virtualinvoke $r38.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i14 = $i12 + $i13;

        $i15 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        $r39 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r40 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r39);

        if $r40 != null goto label13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r40 = null;

     label13:
        $i16 = virtualinvoke $r40.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i17 = $i15 - $i16;

        virtualinvoke $r37.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void notifyItemRangeRemoved(int,int)>($i14, $i17);

     label14:
        $r41 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r42 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerBodyAdapter access$getBodyAdapter$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r41);

        if $r42 != null goto label15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("bodyAdapter");

        $r42 = null;

     label15:
        $i18 = virtualinvoke $r31.<kotlin.ranges.IntRange: int getFirst()>();

        $i19 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        $r21 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r43 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r21);

        if $r43 != null goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r43 = null;

     label16:
        $i20 = virtualinvoke $r43.<androidx.emoji2.emojipicker.ItemGroup: int getSize()>();

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i20);

        virtualinvoke $r42.<androidx.emoji2.emojipicker.EmojiPickerBodyAdapter: void notifyItemRangeChanged(int,int)>($i18, $i21);

        $r44 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$setRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView,boolean)>($r44, 0);

     label17:
        $r45 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r45;

     label18:
        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r27;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        int $i0;
        java.util.List $r4;
        androidx.emoji2.emojipicker.EmojiPickerView $r5;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.util.List $recent>;

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: int $oldGroupSize>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,java.util.List,int,kotlin.coroutines.Continuation)>($r5, $r4, $i0, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$refreshRecent$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1
<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        kotlin.Unit $r3;
        androidx.emoji2.emojipicker.EmojiPickerView $r4, $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r8;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: void access$setRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView,boolean)>($r4, 1);

        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: int label> = 1;

        $r7 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)>($r6);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$setRecentEmojiProvider$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, android.content.Context)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        android.content.Context $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: android.content.Context;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>($r2, 0, 0);

        return;
    }

    public boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1 r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.emoji2.emojipicker.EmojiPickerView $r2;
        androidx.emoji2.emojipicker.EmojiPickerItems $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lp");

        $i0 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: int getWidth()>();

        $i1 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: int getPaddingStart()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: int getPaddingEnd()>();

        $i4 = $i2 - $i3;

        $r2 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r4 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r2);

        if $r4 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r4 = null;

     label1:
        $i5 = virtualinvoke $r4.<androidx.emoji2.emojipicker.EmojiPickerItems: int getNumGroups()>();

        $i6 = $i4 / $i5;

        r1.<androidx.recyclerview.widget.RecyclerView$LayoutParams: int width> = $i6;

        return 1;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 r0;
        java.lang.Object $r1, r2, $r6;
        int $i0;
        kotlin.Unit $r3;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: int label> = 1;

        $r6 = virtualinvoke $r4.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)>($r5);

        if $r6 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $headerAdapter>
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter, androidx.emoji2.emojipicker.EmojiPickerView, androidx.recyclerview.widget.GridLayoutManager)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3 r0;
        androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $r1;
        androidx.emoji2.emojipicker.EmojiPickerView $r2;
        androidx.recyclerview.widget.GridLayoutManager $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter;

        $r2 := @parameter1: androidx.emoji2.emojipicker.EmojiPickerView;

        $r3 := @parameter2: androidx.recyclerview.widget.GridLayoutManager;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $headerAdapter> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r2;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager> = $r3;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void <init>()>();

        return;
    }

    public void onScrolled(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3 r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        kotlin.ranges.IntRange r2;
        androidx.emoji2.emojipicker.EmojiPickerView $r3, $r6, $r7, $r8, $r9, $r12;
        androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $r4;
        androidx.recyclerview.widget.GridLayoutManager $r5, $r17;
        boolean $z0, $z1;
        kotlinx.coroutines.CoroutineScope $r10;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1 $r11;
        kotlin.jvm.functions.Function2 $r13;
        androidx.emoji2.emojipicker.EmojiPickerItems $r14, $r15;
        androidx.emoji2.emojipicker.ItemGroup $r16;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recyclerView");

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)>(r1, i0, i1);

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter $headerAdapter>;

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r14 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r3);

        if $r14 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r14 = null;

     label1:
        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager>;

        $i5 = virtualinvoke $r5.<androidx.recyclerview.widget.GridLayoutManager: int findFirstCompletelyVisibleItemPosition()>();

        $i6 = virtualinvoke $r14.<androidx.emoji2.emojipicker.EmojiPickerItems: int groupIndexByItemPosition(int)>($i5);

        virtualinvoke $r4.<androidx.emoji2.emojipicker.EmojiPickerHeaderAdapter: void setSelectedGroupIndex(int)>($i6);

        $r6 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $z0 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: boolean access$getRecentNeedsRefreshing$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r6);

        if $z0 == 0 goto label7;

        $r7 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r15 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r7);

        if $r15 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r15 = null;

     label2:
        $r8 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r16 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r8);

        if $r16 != null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r16 = null;

     label3:
        r2 = virtualinvoke $r15.<androidx.emoji2.emojipicker.EmojiPickerItems: kotlin.ranges.IntRange groupRange(androidx.emoji2.emojipicker.ItemGroup)>($r16);

        i2 = virtualinvoke r2.<kotlin.ranges.IntRange: int getFirst()>();

        i3 = virtualinvoke r2.<kotlin.ranges.IntRange: int getLast()>();

        $r17 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager>;

        i4 = virtualinvoke $r17.<androidx.recyclerview.widget.GridLayoutManager: int findFirstVisibleItemPosition()>();

        if i2 > i4 goto label5;

        if i4 > i3 goto label4;

        $z1 = 1;

        goto label6;

     label4:
        $z1 = 0;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        if $z1 != 0 goto label7;

        $r9 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r10 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r9);

        $r11 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1;

        $r12 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r11.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$1$2$3$onScrolled$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r12, null);

        $r13 = (kotlin.jvm.functions.Function2) $r11;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r10, null, null, $r13, 3, null);

     label7:
        return;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1$WhenMappings
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.emoji2.emojipicker.ItemType[] $r1;
        int $i0, $i1, $i2;
        androidx.emoji2.emojipicker.ItemType $r2, $r3;
        java.lang.Throwable $r4, $r5, r6, r7;

        $r1 = staticinvoke <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label1:
        $r2 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType CATEGORY_TITLE>;

        $i1 = virtualinvoke $r2.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        r0[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

     label4:
        $r3 = <androidx.emoji2.emojipicker.ItemType: androidx.emoji2.emojipicker.ItemType PLACEHOLDER_TEXT>;

        $i2 = virtualinvoke $r3.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        r0[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        r7 = $r4;

     label7:
        <androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void <init>()>();

        return;
    }

    public int getSpanSize(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1 r0;
        int i0, $i1, $i2, $i3;
        androidx.emoji2.emojipicker.EmojiPickerView $r1, $r5;
        androidx.emoji2.emojipicker.ItemViewData $r2;
        androidx.emoji2.emojipicker.ItemType $r3;
        int[] $r4;
        androidx.emoji2.emojipicker.EmojiPickerItems $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r6 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r1);

        if $r6 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r6 = null;

     label1:
        $r2 = virtualinvoke $r6.<androidx.emoji2.emojipicker.EmojiPickerItems: androidx.emoji2.emojipicker.ItemViewData getBodyItem(int)>(i0);

        $r3 = virtualinvoke $r2.<androidx.emoji2.emojipicker.ItemViewData: androidx.emoji2.emojipicker.ItemType getItemType()>();

        $r4 = <androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke $r3.<androidx.emoji2.emojipicker.ItemType: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label2;
            default: goto label3;
        };

     label2:
        $r5 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$bodyLayoutManager$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $i3 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView: int getEmojiGridColumns()>();

        goto label4;

     label3:
        $i3 = 1;

     label4:
        return $i3;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: int label>
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 r0;
        java.lang.Object $r1, r2, $r6;
        int $i0;
        kotlin.Unit $r3;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: int label> = 1;

        $r6 = virtualinvoke $r4.<androidx.emoji2.emojipicker.EmojiPickerView: java.lang.Object refreshRecent$emoji2_emojipicker_release(kotlin.coroutines.Continuation)>($r5);

        if $r6 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.emoji2.emojipicker.EmojiPickerView $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        $r4 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        specialinvoke $r3.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>
<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager>
    void <init>(androidx.emoji2.emojipicker.EmojiPickerView, androidx.recyclerview.widget.GridLayoutManager)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1 r0;
        androidx.emoji2.emojipicker.EmojiPickerView $r1;
        androidx.recyclerview.widget.GridLayoutManager $r2;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1;

        $r1 := @parameter0: androidx.emoji2.emojipicker.EmojiPickerView;

        $r2 := @parameter1: androidx.recyclerview.widget.GridLayoutManager;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0> = $r1;

        r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(int)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1 r0;
        int i0, i1, $i4;
        androidx.emoji2.emojipicker.EmojiPickerView r1, $r3;
        androidx.recyclerview.widget.GridLayoutManager r2;
        kotlinx.coroutines.CoroutineScope $r4;
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        androidx.emoji2.emojipicker.EmojiPickerItems $r7, $r8;
        androidx.emoji2.emojipicker.ItemGroup $r9;
        kotlin.ranges.IntRange $r10;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        $r7 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>($r3);

        if $r7 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r7 = null;

     label1:
        i1 = virtualinvoke $r7.<androidx.emoji2.emojipicker.EmojiPickerItems: int firstItemPositionByGroupIndex(int)>(i0);

        r1 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.emoji2.emojipicker.EmojiPickerView this$0>;

        r2 = r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: androidx.recyclerview.widget.GridLayoutManager $bodyLayoutManager>;

        $r8 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.EmojiPickerItems access$getEmojiPickerItems$p(androidx.emoji2.emojipicker.EmojiPickerView)>(r1);

        if $r8 != null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("emojiPickerItems");

        $r8 = null;

     label2:
        $r9 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: androidx.emoji2.emojipicker.ItemGroup access$getRecentItemGroup$p(androidx.emoji2.emojipicker.EmojiPickerView)>(r1);

        if $r9 != null goto label3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("recentItemGroup");

        $r9 = null;

     label3:
        $r10 = virtualinvoke $r8.<androidx.emoji2.emojipicker.EmojiPickerItems: kotlin.ranges.IntRange groupRange(androidx.emoji2.emojipicker.ItemGroup)>($r9);

        $i4 = virtualinvoke $r10.<kotlin.ranges.IntRange: int getFirst()>();

        if i1 != $i4 goto label4;

        $r4 = staticinvoke <androidx.emoji2.emojipicker.EmojiPickerView: kotlinx.coroutines.CoroutineScope access$getScope$p(androidx.emoji2.emojipicker.EmojiPickerView)>(r1);

        $r5 = new androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1;

        specialinvoke $r5.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1$1$1: void <init>(androidx.emoji2.emojipicker.EmojiPickerView,kotlin.coroutines.Continuation)>(r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r6, 3, null);

     label4:
        virtualinvoke r2.<androidx.recyclerview.widget.GridLayoutManager: void scrollToPositionWithOffset(int,int)>(i1, 0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        kotlin.Unit $r3;

        r0 := @this: androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.emoji2.emojipicker.EmojiPickerView$showEmojiPickerView$headerAdapter$1: void invoke(int)>($i0);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

