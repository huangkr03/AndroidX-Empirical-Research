androidx.media3.extractor.AacUtil
<androidx.media3.extractor.AacUtil: java.lang.String TAG>
<androidx.media3.extractor.AacUtil: int AAC_LC_AUDIO_SAMPLE_COUNT>
<androidx.media3.extractor.AacUtil: int AAC_XHE_AUDIO_SAMPLE_COUNT>
<androidx.media3.extractor.AacUtil: int AAC_HE_AUDIO_SAMPLE_COUNT>
<androidx.media3.extractor.AacUtil: int AAC_LD_AUDIO_SAMPLE_COUNT>
<androidx.media3.extractor.AacUtil: int AAC_LC_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.AacUtil: int AAC_HE_V1_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.AacUtil: int AAC_HE_V2_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.AacUtil: int AAC_XHE_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.AacUtil: int AAC_ELD_MAX_RATE_BYTES_PER_SECOND>
<androidx.media3.extractor.AacUtil: int AUDIO_SPECIFIC_CONFIG_FREQUENCY_INDEX_ARBITRARY>
<androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE>
<androidx.media3.extractor.AacUtil: int AUDIO_SPECIFIC_CONFIG_CHANNEL_CONFIGURATION_INVALID>
<androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE>
<androidx.media3.extractor.AacUtil: java.lang.String CODECS_STRING_PREFIX>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_LC>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_SBR>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_ER_BSAC>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_ELD>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_PS>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_ESCAPE>
<androidx.media3.extractor.AacUtil: int AUDIO_OBJECT_TYPE_AAC_XHE>
    public static androidx.media3.extractor.AacUtil$Config parseAudioSpecificConfig(byte[]) throws androidx.media3.common.ParserException
    {
        byte[] r0;
        androidx.media3.common.util.ParsableBitArray $r1;
        androidx.media3.extractor.AacUtil$Config $r2;

        r0 := @parameter0: byte[];

        $r1 = new androidx.media3.common.util.ParsableBitArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableBitArray: void <init>(byte[])>(r0);

        $r2 = staticinvoke <androidx.media3.extractor.AacUtil: androidx.media3.extractor.AacUtil$Config parseAudioSpecificConfig(androidx.media3.common.util.ParsableBitArray,boolean)>($r1, 0);

        return $r2;
    }

    public static androidx.media3.extractor.AacUtil$Config parseAudioSpecificConfig(androidx.media3.common.util.ParsableBitArray, boolean) throws androidx.media3.common.ParserException
    {
        androidx.media3.common.util.ParsableBitArray r0;
        boolean z0;
        java.lang.String r1, $r10, $r15;
        java.lang.StringBuilder $r3, $r4, $r8, $r9, $r13, $r14, r18, r19, r20;
        androidx.media3.common.ParserException $r6, $r11, $r16;
        int i0, i1, i2, i3, i4;
        int[] $r17;
        androidx.media3.extractor.AacUtil$Config r21;
        java.lang.Throwable r22, r23, r24;

        r0 := @parameter0: androidx.media3.common.util.ParsableBitArray;

        z0 := @parameter1: boolean;

        i0 = staticinvoke <androidx.media3.extractor.AacUtil: int getAudioObjectType(androidx.media3.common.util.ParsableBitArray)>(r0);

        i1 = staticinvoke <androidx.media3.extractor.AacUtil: int getSamplingFrequency(androidx.media3.common.util.ParsableBitArray)>(r0);

        i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(4);

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mp4a.40.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        if i0 == 5 goto label1;

        if i0 != 29 goto label2;

     label1:
        i1 = staticinvoke <androidx.media3.extractor.AacUtil: int getSamplingFrequency(androidx.media3.common.util.ParsableBitArray)>(r0);

        i0 = staticinvoke <androidx.media3.extractor.AacUtil: int getAudioObjectType(androidx.media3.common.util.ParsableBitArray)>(r0);

        if i0 != 22 goto label2;

        i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(4);

     label2:
        if z0 == 0 goto label8;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label4;
            case 14: goto label4;
            case 15: goto label4;
            case 16: goto label4;
            case 17: goto label3;
            case 18: goto label4;
            case 19: goto label3;
            case 20: goto label3;
            case 21: goto label3;
            case 22: goto label3;
            case 23: goto label3;
            default: goto label4;
        };

     label3:
        staticinvoke <androidx.media3.extractor.AacUtil: void parseGaSpecificConfig(androidx.media3.common.util.ParsableBitArray,int,int)>(r0, i0, i2);

        goto label5;

     label4:
        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported audio object type: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForUnsupportedContainerFeature(java.lang.String)>($r15);

        r22 = (java.lang.Throwable) $r16;

        throw r22;

     label5:
        tableswitch(i0)
        {
            case 17: goto label6;
            case 18: goto label8;
            case 19: goto label6;
            case 20: goto label6;
            case 21: goto label6;
            case 22: goto label6;
            case 23: goto label6;
            default: goto label8;
        };

     label6:
        i3 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(2);

        if i3 == 2 goto label7;

        if i3 != 3 goto label8;

     label7:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported epConfig: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForUnsupportedContainerFeature(java.lang.String)>($r10);

        r23 = (java.lang.Throwable) $r11;

        throw r23;

     label8:
        $r17 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE>;

        i4 = $r17[i2];

        if i4 != -1 goto label9;

        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>(null, null);

        r24 = (java.lang.Throwable) $r6;

        throw r24;

     label9:
        r21 = new androidx.media3.extractor.AacUtil$Config;

        specialinvoke r21.<androidx.media3.extractor.AacUtil$Config: void <init>(int,int,java.lang.String,androidx.media3.extractor.AacUtil$1)>(i1, i4, r1, null);

        return r21;
    }

    public static byte[] buildAacLcAudioSpecificConfig(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        int[] $r0, $r1, $r10, $r11;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        byte[] $r9;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i6 = -1;

        i7 = 0;

     label1:
        $r0 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE>;

        $i2 = lengthof $r0;

        if i7 >= $i2 goto label3;

        $r11 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE>;

        $i5 = $r11[i7];

        if i0 != $i5 goto label2;

        i6 = i7;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        i8 = -1;

        i9 = 0;

     label4:
        $r1 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE>;

        $i3 = lengthof $r1;

        if i9 >= $i3 goto label6;

        $r10 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE>;

        $i4 = $r10[i9];

        if i1 != $i4 goto label5;

        i8 = i9;

     label5:
        i9 = i9 + 1;

        goto label4;

     label6:
        if i0 == -1 goto label7;

        if i8 != -1 goto label8;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid sample rate or number of channels: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label8:
        $r9 = staticinvoke <androidx.media3.extractor.AacUtil: byte[] buildAudioSpecificConfig(int,int,int)>(2, i6, i8);

        return $r9;
    }

    public static byte[] buildAudioSpecificConfig(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        byte[] r0;
        byte $b8, $b14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 = newarray (byte)[2];

        $i3 = i0 << 3;

        $i6 = $i3 & 248;

        $i4 = i1 >> 1;

        $i5 = $i4 & 7;

        $i7 = $i6 | $i5;

        $b8 = (byte) $i7;

        r0[0] = $b8;

        $i9 = i1 << 7;

        $i12 = $i9 & 128;

        $i10 = i2 << 3;

        $i11 = $i10 & 120;

        $i13 = $i12 | $i11;

        $b14 = (byte) $i13;

        r0[1] = $b14;

        return r0;
    }

    private static int getAudioObjectType(androidx.media3.common.util.ParsableBitArray)
    {
        androidx.media3.common.util.ParsableBitArray r0;
        int $i0, i1;

        r0 := @parameter0: androidx.media3.common.util.ParsableBitArray;

        i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(5);

        if i1 != 31 goto label1;

        $i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(6);

        i1 = 32 + $i0;

     label1:
        return i1;
    }

    private static int getSamplingFrequency(androidx.media3.common.util.ParsableBitArray) throws androidx.media3.common.ParserException
    {
        androidx.media3.common.util.ParsableBitArray r0;
        int i0, $i1, i2;
        androidx.media3.common.ParserException $r1, $r3;
        int[] $r2;
        java.lang.Throwable r4, r5;

        r0 := @parameter0: androidx.media3.common.util.ParsableBitArray;

        i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(4);

        if i0 != 15 goto label2;

        $i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int bitsLeft()>();

        if $i1 >= 24 goto label1;

        $r3 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("AAC header insufficient data", null);

        r4 = (java.lang.Throwable) $r3;

        throw r4;

     label1:
        i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: int readBits(int)>(24);

        goto label4;

     label2:
        if i0 >= 13 goto label3;

        $r2 = <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE>;

        i2 = $r2[i0];

        goto label4;

     label3:
        $r1 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("AAC header wrong Sampling Frequency Index", null);

        r5 = (java.lang.Throwable) $r1;

        throw r5;

     label4:
        return i2;
    }

    private static void parseGaSpecificConfig(androidx.media3.common.util.ParsableBitArray, int, int)
    {
        androidx.media3.common.util.ParsableBitArray r0;
        int i0, i1;
        boolean z0, z1, z2;
        java.lang.UnsupportedOperationException $r1;

        r0 := @parameter0: androidx.media3.common.util.ParsableBitArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: boolean readBit()>();

        if z0 == 0 goto label1;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("AacUtil", "Unexpected frameLengthFlag = 1");

     label1:
        z1 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: boolean readBit()>();

        if z1 == 0 goto label2;

        virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(14);

     label2:
        z2 = virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: boolean readBit()>();

        if i1 != 0 goto label3;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label3:
        if i0 == 6 goto label4;

        if i0 != 20 goto label5;

     label4:
        virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(3);

     label5:
        if z2 == 0 goto label9;

        if i0 != 22 goto label6;

        virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(16);

     label6:
        if i0 == 17 goto label7;

        if i0 == 19 goto label7;

        if i0 == 20 goto label7;

        if i0 != 23 goto label8;

     label7:
        virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(3);

     label8:
        virtualinvoke r0.<androidx.media3.common.util.ParsableBitArray: void skipBits(int)>(1);

     label9:
        return;
    }

    private void <init>()
    {
        androidx.media3.extractor.AacUtil r0;

        r0 := @this: androidx.media3.extractor.AacUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;

        $r0 = newarray (int)[13];

        $r0[0] = 96000;

        $r0[1] = 88200;

        $r0[2] = 64000;

        $r0[3] = 48000;

        $r0[4] = 44100;

        $r0[5] = 32000;

        $r0[6] = 24000;

        $r0[7] = 22050;

        $r0[8] = 16000;

        $r0[9] = 12000;

        $r0[10] = 11025;

        $r0[11] = 8000;

        $r0[12] = 7350;

        <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE> = $r0;

        $r1 = newarray (int)[16];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 2;

        $r1[3] = 3;

        $r1[4] = 4;

        $r1[5] = 5;

        $r1[6] = 6;

        $r1[7] = 8;

        $r1[8] = -1;

        $r1[9] = -1;

        $r1[10] = -1;

        $r1[11] = 7;

        $r1[12] = 8;

        $r1[13] = -1;

        $r1[14] = 8;

        $r1[15] = -1;

        <androidx.media3.extractor.AacUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE> = $r1;

        return;
    }

androidx.media3.extractor.AacUtil$1
androidx.media3.extractor.AacUtil$AacAudioObjectType
androidx.media3.extractor.AacUtil$Config
<androidx.media3.extractor.AacUtil$Config: int sampleRateHz>
<androidx.media3.extractor.AacUtil$Config: int channelCount>
<androidx.media3.extractor.AacUtil$Config: java.lang.String codecs>
    private void <init>(int, int, java.lang.String)
    {
        androidx.media3.extractor.AacUtil$Config r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: androidx.media3.extractor.AacUtil$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.AacUtil$Config: int sampleRateHz> = i0;

        r0.<androidx.media3.extractor.AacUtil$Config: int channelCount> = i1;

        r0.<androidx.media3.extractor.AacUtil$Config: java.lang.String codecs> = r1;

        return;
    }

    void <init>(int, int, java.lang.String, androidx.media3.extractor.AacUtil$1)
    {
        androidx.media3.extractor.AacUtil$Config r0;
        int i0, i1;
        java.lang.String r1;
        androidx.media3.extractor.AacUtil$1 r2;

        r0 := @this: androidx.media3.extractor.AacUtil$Config;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: androidx.media3.extractor.AacUtil$1;

        specialinvoke r0.<androidx.media3.extractor.AacUtil$Config: void <init>(int,int,java.lang.String)>(i0, i1, r1);

        return;
    }

