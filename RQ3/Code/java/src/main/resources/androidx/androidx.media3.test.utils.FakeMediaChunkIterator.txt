androidx.media3.test.utils.FakeMediaChunkIterator
<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkTimeBoundariesSec>
<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkLengths>
    public void <init>(long[], long[])
    {
        androidx.media3.test.utils.FakeMediaChunkIterator r0;
        long[] r1, r2;
        int $i0, $i1;
        long $l2;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunkIterator;

        r1 := @parameter0: long[];

        r2 := @parameter1: long[];

        $i0 = lengthof r1;

        $i1 = $i0 - 2;

        $l2 = (long) $i1;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkIterator: void <init>(long,long)>(0L, $l2);

        r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkTimeBoundariesSec> = r1;

        r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkLengths> = r2;

        return;
    }

    public androidx.media3.datasource.DataSpec getDataSpec()
    {
        androidx.media3.test.utils.FakeMediaChunkIterator r0;
        androidx.media3.datasource.DataSpec $r1;
        android.net.Uri $r2;
        long[] $r3;
        long $l0, $l2;
        int $i1;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunkIterator;

        virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: void checkInBounds()>();

        $r1 = new androidx.media3.datasource.DataSpec;

        $r2 = <android.net.Uri: android.net.Uri EMPTY>;

        $r3 = r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkLengths>;

        $l0 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long getCurrentIndex()>();

        $i1 = (int) $l0;

        $l2 = $r3[$i1];

        specialinvoke $r1.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri,long,long)>($r2, 0L, $l2);

        return $r1;
    }

    public long getChunkStartTimeUs()
    {
        androidx.media3.test.utils.FakeMediaChunkIterator r0;
        long[] $r1;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunkIterator;

        virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: void checkInBounds()>();

        $r1 = r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkTimeBoundariesSec>;

        $l0 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long getCurrentIndex()>();

        $i1 = (int) $l0;

        $l2 = $r1[$i1];

        $l3 = $l2 * 1000000L;

        return $l3;
    }

    public long getChunkEndTimeUs()
    {
        androidx.media3.test.utils.FakeMediaChunkIterator r0;
        long[] $r1;
        long $l0, $l3, $l4;
        int $i1, $i2;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunkIterator;

        virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: void checkInBounds()>();

        $r1 = r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long[] chunkTimeBoundariesSec>;

        $l0 = virtualinvoke r0.<androidx.media3.test.utils.FakeMediaChunkIterator: long getCurrentIndex()>();

        $i1 = (int) $l0;

        $i2 = $i1 + 1;

        $l3 = $r1[$i2];

        $l4 = $l3 * 1000000L;

        return $l4;
    }

