androidx.test.internal.platform.os.ControlledLooper
<androidx.test.internal.platform.os.ControlledLooper: androidx.test.internal.platform.os.ControlledLooper NO_OP_CONTROLLED_LOOPER>
    static void <clinit>()
    {
        androidx.test.internal.platform.os.ControlledLooper$1 $r0;

        $r0 = new androidx.test.internal.platform.os.ControlledLooper$1;

        specialinvoke $r0.<androidx.test.internal.platform.os.ControlledLooper$1: void <init>()>();

        <androidx.test.internal.platform.os.ControlledLooper: androidx.test.internal.platform.os.ControlledLooper NO_OP_CONTROLLED_LOOPER> = $r0;

        return;
    }

<androidx.test.internal.platform.os.ControlledLooper: void drainMainThreadUntilIdle()>
<androidx.test.internal.platform.os.ControlledLooper: void simulateWindowFocus(android.view.View)>
androidx.test.internal.platform.os.ControlledLooper$1
    void <init>()
    {
        androidx.test.internal.platform.os.ControlledLooper$1 r0;

        r0 := @this: androidx.test.internal.platform.os.ControlledLooper$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drainMainThreadUntilIdle()
    {
        androidx.test.internal.platform.os.ControlledLooper$1 r0;

        r0 := @this: androidx.test.internal.platform.os.ControlledLooper$1;

        return;
    }

    public void simulateWindowFocus(android.view.View)
    {
        androidx.test.internal.platform.os.ControlledLooper$1 r0;
        android.view.View r1;

        r0 := @this: androidx.test.internal.platform.os.ControlledLooper$1;

        r1 := @parameter0: android.view.View;

        return;
    }

