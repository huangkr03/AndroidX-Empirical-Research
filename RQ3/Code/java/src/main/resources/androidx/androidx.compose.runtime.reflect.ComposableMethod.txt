androidx.compose.runtime.reflect.ComposableMethod
<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>
<androidx.compose.runtime.reflect.ComposableMethod: androidx.compose.runtime.reflect.ComposableInfo composableInfo>
<androidx.compose.runtime.reflect.ComposableMethod: int $stable>
    public void <init>(java.lang.reflect.Method, androidx.compose.runtime.reflect.ComposableInfo)
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        java.lang.reflect.Method r1;
        androidx.compose.runtime.reflect.ComposableInfo r2;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: androidx.compose.runtime.reflect.ComposableInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "method");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composableInfo");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method> = r1;

        r0.<androidx.compose.runtime.reflect.ComposableMethod: androidx.compose.runtime.reflect.ComposableInfo composableInfo> = r2;

        return;
    }

    public final java.lang.reflect.Method asMethod()
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        $r1 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        return $r1;
    }

    public final int getParameterCount()
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        androidx.compose.runtime.reflect.ComposableInfo $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        $r1 = r0.<androidx.compose.runtime.reflect.ComposableMethod: androidx.compose.runtime.reflect.ComposableInfo composableInfo>;

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.reflect.ComposableInfo: int getRealParamsCount()>();

        return $i0;
    }

    public final java.lang.reflect.Parameter[] getParameters()
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        java.lang.Object[] r1, $r5;
        byte b0;
        int i1;
        java.lang.reflect.Method $r2;
        java.lang.reflect.Parameter[] $r3, $r6;
        androidx.compose.runtime.reflect.ComposableInfo $r4;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        $r2 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.reflect.Parameter[] getParameters()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "method.parameters");

        r1 = (java.lang.Object[]) $r3;

        b0 = 0;

        $r4 = r0.<androidx.compose.runtime.reflect.ComposableMethod: androidx.compose.runtime.reflect.ComposableInfo composableInfo>;

        i1 = virtualinvoke $r4.<androidx.compose.runtime.reflect.ComposableInfo: int getRealParamsCount()>();

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r1, b0, i1);

        $r6 = (java.lang.reflect.Parameter[]) $r5;

        return $r6;
    }

    public final transient java.lang.Object invoke(androidx.compose.runtime.Composer, java.lang.Object, java.lang.Object[])
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        androidx.compose.runtime.Composer r1;
        java.lang.Object r2, $r10, $r23, r35, $r39, r41;
        java.lang.Object[] r3, $r9, r36, $r37, r38, r40, r42;
        androidx.compose.runtime.reflect.ComposableInfo r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, i26, $i27, i28, i30, i31, i32, $i33, i34, i36;
        java.lang.Integer[] r5, r24, r26, r33;
        java.lang.reflect.Method $r6, $r8, $r14;
        java.lang.Class[] $r7, $r15;
        java.lang.String $r12, $r13;
        java.lang.Class $r16;
        kotlin.ranges.IntRange $r17;
        boolean $z1, $z2, z7, $z8, $z10, $z11;
        java.lang.Integer $r19, $r22;
        java.lang.Number $r20;
        kotlin.collections.IntIterator $r21;
        java.lang.Iterable $r25, $r32;
        java.util.Collection r27, r29;
        java.util.Iterator r28, r34;
        byte $b25;
        java.util.List r30, r31;
        java.util.ArrayList r43;
        java.lang.IllegalStateException r44;
        java.lang.Throwable r45;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        r1 := @parameter0: androidx.compose.runtime.Composer;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "args");

        r4 = r0.<androidx.compose.runtime.reflect.ComposableMethod: androidx.compose.runtime.reflect.ComposableInfo composableInfo>;

        i0 = virtualinvoke r4.<androidx.compose.runtime.reflect.ComposableInfo: int component2()>();

        i1 = virtualinvoke r4.<androidx.compose.runtime.reflect.ComposableInfo: int component3()>();

        i2 = virtualinvoke r4.<androidx.compose.runtime.reflect.ComposableInfo: int component4()>();

        $r6 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i3 = lengthof $r7;

        i4 = i0 + 1;

        i5 = i4 + i1;

        i18 = 0;

        r24 = newarray (java.lang.Integer)[i2];

     label01:
        if i18 >= i2 goto label10;

        i19 = i18;

        i20 = i19 * 31;

        $i13 = i20 + 31;

        i21 = staticinvoke <java.lang.Math: int min(int,int)>($i13, i0);

        $r17 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(i20, i21);

        $r25 = (java.lang.Iterable) $r17;

        i22 = i19;

        r26 = r24;

        r43 = new java.util.ArrayList;

        $i14 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r25, 10);

        specialinvoke r43.<java.util.ArrayList: void <init>(int)>($i14);

        r27 = (java.util.Collection) r43;

        r28 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r21 = (kotlin.collections.IntIterator) r28;

        i23 = virtualinvoke $r21.<kotlin.collections.IntIterator: int nextInt()>();

        i24 = i23;

        r29 = r27;

        $i17 = lengthof r3;

        if i24 >= $i17 goto label03;

        $r23 = r3[i24];

        if $r23 != null goto label04;

     label03:
        $b25 = 1;

        goto label05;

     label04:
        $b25 = 0;

     label05:
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b25);

        interfaceinvoke r29.<java.util.Collection: boolean add(java.lang.Object)>($r22);

        goto label02;

     label06:
        r30 = (java.util.List) r27;

        r31 = r30;

        $r32 = (java.lang.Iterable) r31;

        i26 = i22;

        r33 = r26;

        z7 = 0;

        $i27 = 0;

        i28 = 0;

        r34 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        $i15 = $i27;

        $i27 = $i27 + 1;

        if $i15 >= 0 goto label08;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label08:
        $r20 = (java.lang.Number) r35;

        i6 = virtualinvoke $r20.<java.lang.Number: int intValue()>();

        i7 = i28;

        i8 = $i15;

        $i16 = i6 << i8;

        i28 = i7 | $i16;

        goto label07;

     label09:
        i30 = i28;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i30);

        r33[i26] = $r19;

        i18 = i18 + 1;

        goto label01;

     label10:
        r5 = r24;

        i31 = 0;

        r36 = newarray (java.lang.Object)[i3];

     label11:
        if i31 >= i3 goto label28;

        i32 = i31;

        $r37 = r36;

        $i33 = i32;

        i34 = i32;

        if 0 > i34 goto label13;

        if i34 >= i0 goto label12;

        $z8 = 1;

        goto label14;

     label12:
        $z8 = 0;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        if $z8 == 0 goto label16;

        r38 = r3;

        if i32 < 0 goto label15;

        $i12 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r38);

        if i32 > $i12 goto label15;

        $r39 = r38[i32];

        goto label27;

     label15:
        i36 = i32;

        r40 = r36;

        $r14 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $r15 = virtualinvoke $r14.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r16 = $r15[i32];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "method.parameterTypes[idx]");

        r41 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: java.lang.Object access$getDefaultValue(java.lang.Class)>($r16);

        $r37 = r40;

        $i33 = i36;

        $r39 = r41;

        goto label27;

     label16:
        if i34 != i0 goto label17;

        $r39 = r1;

        goto label27;

     label17:
        if i34 != i4 goto label18;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label27;

     label18:
        $i10 = i4 + 1;

        if $i10 > i34 goto label20;

        if i34 >= i5 goto label19;

        $z10 = 1;

        goto label21;

     label19:
        $z10 = 0;

        goto label21;

     label20:
        $z10 = 0;

     label21:
        if $z10 == 0 goto label22;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label27;

     label22:
        if i5 > i34 goto label24;

        if i34 >= i3 goto label23;

        $z11 = 1;

        goto label25;

     label23:
        $z11 = 0;

        goto label25;

     label24:
        $z11 = 0;

     label25:
        if $z11 == 0 goto label26;

        $i11 = i32 - i5;

        $r39 = r5[$i11];

        goto label27;

     label26:
        r44 = new java.lang.IllegalStateException;

        $r12 = "Unexpected index";

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r44.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        r45 = (java.lang.Throwable) r44;

        throw r45;

     label27:
        $r37[$i33] = $r39;

        i31 = i31 + 1;

        goto label11;

     label28:
        r42 = r36;

        $r8 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $i9 = lengthof r42;

        $r9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r42, $i9);

        $r10 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r9);

        return $r10;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.runtime.reflect.ComposableMethod r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.reflect.Method $r3, $r4;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.compose.runtime.reflect.ComposableMethod;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $r2 = (androidx.compose.runtime.reflect.ComposableMethod) r1;

        $r3 = $r2.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        androidx.compose.runtime.reflect.ComposableMethod r0;
        java.lang.reflect.Method $r1;
        int $i0;

        r0 := @this: androidx.compose.runtime.reflect.ComposableMethod;

        $r1 = r0.<androidx.compose.runtime.reflect.ComposableMethod: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int hashCode()>();

        return $i0;
    }

    static void <clinit>()
    {
        <androidx.compose.runtime.reflect.ComposableMethod: int $stable> = 8;

        return;
    }

