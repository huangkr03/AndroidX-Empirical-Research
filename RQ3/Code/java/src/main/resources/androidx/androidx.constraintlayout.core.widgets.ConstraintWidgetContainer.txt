androidx.constraintlayout.core.widgets.ConstraintWidgetContainer
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int MAX_ITERATIONS>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean DEBUG>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean DEBUG_LAYOUT>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean DEBUG_GRAPH>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int pass>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.Metrics mMetrics>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingLeft>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingTop>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingRight>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingBottom>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedWidth>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedHeight>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure>
<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int myCounter>
    public void invalidateGraph()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void invalidateGraph()>();

        return;
    }

    public void invalidateMeasures()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void invalidateMeasures()>();

        return;
    }

    public boolean directMeasure(boolean)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean z0, $z1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $z1 = virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: boolean directMeasure(boolean)>(z0);

        return $z1;
    }

    public boolean directMeasureSetup(boolean)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean z0, $z1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $z1 = virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: boolean directMeasureSetup(boolean)>(z0);

        return $z1;
    }

    public boolean directMeasureWithOrientation(boolean, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean z0, $z1;
        int i0;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $z1 = virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: boolean directMeasureWithOrientation(boolean,int)>(z0, i0);

        return $z1;
    }

    public void defineTerminalWidgets()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r1;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r2, $r3;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        $r2 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r3 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void defineTerminalWidgets(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour,androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)>($r2, $r3);

        return;
    }

    public long measure(int, int, int, int, int, int, int, int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r1;
        long $l9;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        i8 := @parameter8: int;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingLeft> = i7;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingTop> = i8;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver>;

        $l9 = virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: long solverMeasure(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int)>(r0, i0, i7, i8, i1, i2, i3, i4, i5, i6);

        return $l9;
    }

    public void updateHierarchy()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver>;

        virtualinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: void updateHierarchy(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        return;
    }

    public void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r2;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = r1;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph>;

        virtualinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void setMeasurer(androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)>(r1);

        return;
    }

    public androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>;

        return $r1;
    }

    public void fillMetrics(androidx.constraintlayout.core.Metrics)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.Metrics r1;
        androidx.constraintlayout.core.LinearSystem $r2;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.Metrics;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.Metrics mMetrics> = r1;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r2.<androidx.constraintlayout.core.LinearSystem: void fillMetrics(androidx.constraintlayout.core.Metrics)>(r1);

        return;
    }

    public void <init>()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r2;
        androidx.constraintlayout.core.LinearSystem $r3;
        androidx.constraintlayout.core.widgets.ChainHead[] $r4, $r5;
        java.util.HashSet $r6;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r7;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void <init>()>();

        $r1 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure;

        specialinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $r1;

        $r2 = new androidx.constraintlayout.core.widgets.analyzer.DependencyGraph;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph> = $r2;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $r3 = new androidx.constraintlayout.core.LinearSystem;

        specialinvoke $r3.<androidx.constraintlayout.core.LinearSystem: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem> = $r3;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $r4 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray> = $r4;

        $r5 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray> = $r5;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 257;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd> = $r6;

        $r7 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r7.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure> = $r7;

        return;
    }

    public void <init>(int, int, int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, i1, i2, i3;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r2;
        androidx.constraintlayout.core.LinearSystem $r3;
        androidx.constraintlayout.core.widgets.ChainHead[] $r4, $r5;
        java.util.HashSet $r6;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r7;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void <init>(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure;

        specialinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $r1;

        $r2 = new androidx.constraintlayout.core.widgets.analyzer.DependencyGraph;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph> = $r2;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $r3 = new androidx.constraintlayout.core.LinearSystem;

        specialinvoke $r3.<androidx.constraintlayout.core.LinearSystem: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem> = $r3;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $r4 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray> = $r4;

        $r5 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray> = $r5;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 257;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd> = $r6;

        $r7 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r7.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure> = $r7;

        return;
    }

    public void <init>(int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, i1;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r2;
        androidx.constraintlayout.core.LinearSystem $r3;
        androidx.constraintlayout.core.widgets.ChainHead[] $r4, $r5;
        java.util.HashSet $r6;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r7;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void <init>(int,int)>(i0, i1);

        $r1 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure;

        specialinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $r1;

        $r2 = new androidx.constraintlayout.core.widgets.analyzer.DependencyGraph;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph> = $r2;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $r3 = new androidx.constraintlayout.core.LinearSystem;

        specialinvoke $r3.<androidx.constraintlayout.core.LinearSystem: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem> = $r3;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $r4 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray> = $r4;

        $r5 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray> = $r5;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 257;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd> = $r6;

        $r7 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r7.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure> = $r7;

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        java.lang.String r1;
        int i0, i1;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure $r2;
        androidx.constraintlayout.core.widgets.analyzer.DependencyGraph $r3;
        androidx.constraintlayout.core.LinearSystem $r4;
        androidx.constraintlayout.core.widgets.ChainHead[] $r5, $r6;
        java.util.HashSet $r7;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r8;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void <init>(int,int)>(i0, i1);

        $r2 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure mBasicMeasureSolver> = $r2;

        $r3 = new androidx.constraintlayout.core.widgets.analyzer.DependencyGraph;

        specialinvoke $r3.<androidx.constraintlayout.core.widgets.analyzer.DependencyGraph: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer)>(r0);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.DependencyGraph mDependencyGraph> = $r3;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl> = 0;

        $r4 = new androidx.constraintlayout.core.LinearSystem;

        specialinvoke $r4.<androidx.constraintlayout.core.LinearSystem: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem> = $r4;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        $r5 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray> = $r5;

        $r6 = newarray (androidx.constraintlayout.core.widgets.ChainHead)[4];

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray> = $r6;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedWidth> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWrapFixedHeight> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = 257;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mDebugSolverPassCount> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = null;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = null;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd> = $r7;

        $r8 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r8.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure mMeasure> = $r8;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setDebugName(java.lang.String)>(r1);

        return;
    }

    public void setOptimizationLevel(int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel> = i0;

        $z0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(512);

        <androidx.constraintlayout.core.LinearSystem: boolean USE_DEPENDENCY_ORDERING> = $z0;

        return;
    }

    public int getOptimizationLevel()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $i0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        return $i0;
    }

    public boolean optimizeFor(int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        $i2 = $i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getType()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        return "ConstraintLayout";
    }

    public void reset()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.LinearSystem $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r1.<androidx.constraintlayout.core.LinearSystem: void reset()>();

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingLeft> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingRight> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingTop> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingBottom> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mSkipSolver> = 0;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void reset()>();

        return;
    }

    public boolean isWidthMeasuredTooSmall()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $z0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall>;

        return $z0;
    }

    public boolean isHeightMeasuredTooSmall()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $z0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall>;

        return $z0;
    }

    void addVerticalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1, $r7;
        java.lang.ref.WeakReference $r2, $r3, $r5, $r8;
        java.lang.Object $r4, $r6;
        int $i0, $i1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r6;

        $i1 = virtualinvoke $r7.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = $r8;

     label2:
        return;
    }

    public void addHorizontalWrapMinVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1, $r7;
        java.lang.ref.WeakReference $r2, $r3, $r5, $r8;
        java.lang.Object $r4, $r6;
        int $i0, $i1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r6;

        $i1 = virtualinvoke $r7.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = $r8;

     label2:
        return;
    }

    void addVerticalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1, $r7;
        java.lang.ref.WeakReference $r2, $r3, $r5, $r8;
        java.lang.Object $r4, $r6;
        int $i0, $i1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r6;

        $i1 = virtualinvoke $r7.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = $r8;

     label2:
        return;
    }

    public void addHorizontalWrapMaxVariable(androidx.constraintlayout.core.widgets.ConstraintAnchor)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1, $r7;
        java.lang.ref.WeakReference $r2, $r3, $r5, $r8;
        java.lang.Object $r4, $r6;
        int $i0, $i1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r7 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r6;

        $i1 = virtualinvoke $r7.<androidx.constraintlayout.core.widgets.ConstraintAnchor: int getFinalValue()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = $r8;

     label2:
        return;
    }

    private void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.SolverVariable)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1;
        androidx.constraintlayout.core.SolverVariable r2, r3;
        byte b0;
        androidx.constraintlayout.core.LinearSystem $r4, $r5;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        r2 := @parameter1: androidx.constraintlayout.core.SolverVariable;

        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        r3 = virtualinvoke $r4.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>(r1);

        b0 = 5;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r5.<androidx.constraintlayout.core.LinearSystem: void addGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int)>(r3, r2, 0, b0);

        return;
    }

    private void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor, androidx.constraintlayout.core.SolverVariable)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintAnchor r1;
        androidx.constraintlayout.core.SolverVariable r2, r3;
        byte b0;
        androidx.constraintlayout.core.LinearSystem $r4, $r5;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintAnchor;

        r2 := @parameter1: androidx.constraintlayout.core.SolverVariable;

        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        r3 = virtualinvoke $r4.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>(r1);

        b0 = 5;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r5.<androidx.constraintlayout.core.LinearSystem: void addGreaterThan(androidx.constraintlayout.core.SolverVariable,androidx.constraintlayout.core.SolverVariable,int,int)>(r2, r3, 0, b0);

        return;
    }

    public boolean addChildrenToSolver(androidx.constraintlayout.core.LinearSystem)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.LinearSystem r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i11;
        java.util.ArrayList $r2, $r5, $r19, $r30, $r33, $r36;
        java.util.HashSet $r3, $r4, $r15, $r21, $r22, $r23, $r24, $r25, $r28, $r29, $r32, r46;
        java.lang.Object $r6, $r18, $r20, $r26, $r27, $r31, $r34, $r37;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] $r7, $r8;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, r51, r52;
        androidx.constraintlayout.core.widgets.Barrier $r35;
        androidx.constraintlayout.core.widgets.ConstraintWidget r38, r39, r40, r42, r45, r47, r49, r50;
        java.util.Iterator r41, r44, r48;
        androidx.constraintlayout.core.widgets.VirtualLayout r43;
        byte b10;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.LinearSystem;

        z0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(64);

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        z12 = 0;

        i5 = 0;

     label01:
        if i5 >= i0 goto label03;

        $r36 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r38 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r37;

        virtualinvoke r38.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(0, 0);

        virtualinvoke r38.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setInBarrier(int,boolean)>(1, 0);

        $z11 = r38 instanceof androidx.constraintlayout.core.widgets.Barrier;

        if $z11 == 0 goto label02;

        z12 = 1;

     label02:
        i5 = i5 + 1;

        goto label01;

     label03:
        if z12 == 0 goto label06;

        i6 = 0;

     label04:
        if i6 >= i0 goto label06;

        $r33 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r34 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r39 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r34;

        $z10 = r39 instanceof androidx.constraintlayout.core.widgets.Barrier;

        if $z10 == 0 goto label05;

        $r35 = (androidx.constraintlayout.core.widgets.Barrier) r39;

        virtualinvoke $r35.<androidx.constraintlayout.core.widgets.Barrier: void markWidgets()>();

     label05:
        i6 = i6 + 1;

        goto label04;

     label06:
        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        virtualinvoke $r3.<java.util.HashSet: void clear()>();

        i7 = 0;

     label07:
        if i7 >= i0 goto label10;

        $r30 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r31 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r40 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r31;

        $z8 = virtualinvoke r40.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean addFirst()>();

        if $z8 == 0 goto label09;

        $z9 = r40 instanceof androidx.constraintlayout.core.widgets.VirtualLayout;

        if $z9 == 0 goto label08;

        $r32 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>(r40);

        goto label09;

     label08:
        virtualinvoke r40.<androidx.constraintlayout.core.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

     label09:
        i7 = i7 + 1;

        goto label07;

     label10:
        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        $i1 = virtualinvoke $r4.<java.util.HashSet: int size()>();

        if $i1 <= 0 goto label17;

        $r21 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        i8 = virtualinvoke $r21.<java.util.HashSet: int size()>();

        $r22 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        r41 = virtualinvoke $r22.<java.util.HashSet: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r27 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r27;

        r43 = (androidx.constraintlayout.core.widgets.VirtualLayout) r42;

        $r28 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        $z7 = virtualinvoke r43.<androidx.constraintlayout.core.widgets.VirtualLayout: boolean contains(java.util.HashSet)>($r28);

        if $z7 == 0 goto label12;

        virtualinvoke r43.<androidx.constraintlayout.core.widgets.VirtualLayout: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        $r29 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        virtualinvoke $r29.<java.util.HashSet: boolean remove(java.lang.Object)>(r43);

        goto label13;

     label12:
        goto label11;

     label13:
        $r23 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        $i4 = virtualinvoke $r23.<java.util.HashSet: int size()>();

        if i8 != $i4 goto label16;

        $r24 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        r44 = virtualinvoke $r24.<java.util.HashSet: java.util.Iterator iterator()>();

     label14:
        $z6 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label15;

        $r26 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r26;

        virtualinvoke r45.<androidx.constraintlayout.core.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        goto label14;

     label15:
        $r25 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.HashSet widgetsToAdd>;

        virtualinvoke $r25.<java.util.HashSet: void clear()>();

     label16:
        goto label10;

     label17:
        $z1 = <androidx.constraintlayout.core.LinearSystem: boolean USE_DEPENDENCY_ORDERING>;

        if $z1 == 0 goto label24;

        $r15 = new java.util.HashSet;

        specialinvoke $r15.<java.util.HashSet: void <init>()>();

        r46 = $r15;

        i9 = 0;

     label18:
        if i9 >= i0 goto label20;

        $r19 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r47 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r20;

        $z4 = virtualinvoke r47.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean addFirst()>();

        if $z4 != 0 goto label19;

        virtualinvoke r46.<java.util.HashSet: boolean add(java.lang.Object)>(r47);

     label19:
        i9 = i9 + 1;

        goto label18;

     label20:
        b10 = 1;

        $r16 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r17 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r16 != $r17 goto label21;

        b10 = 0;

     label21:
        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addChildrenToSolverByDependency(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.HashSet,int,boolean)>(r0, r1, r46, b10, 0);

        r48 = virtualinvoke r46.<java.util.HashSet: java.util.Iterator iterator()>();

     label22:
        $z13 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label23;

        $r18 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r18;

        staticinvoke <androidx.constraintlayout.core.widgets.Optimizer: void checkMatchParent(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.widgets.ConstraintWidget)>(r0, r1, r49);

        virtualinvoke r49.<androidx.constraintlayout.core.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        goto label22;

     label23:
        goto label32;

     label24:
        i11 = 0;

     label25:
        if i11 >= i0 goto label32;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r50 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r6;

        $z2 = r50 instanceof androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        if $z2 == 0 goto label30;

        $r7 = r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        r51 = $r7[0];

        $r8 = r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        r52 = $r8[1];

        $r9 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r51 != $r9 goto label26;

        $r14 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)>($r14);

     label26:
        $r10 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r52 != $r10 goto label27;

        $r13 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)>($r13);

     label27:
        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        $r11 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r51 != $r11 goto label28;

        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)>(r51);

     label28:
        $r12 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r52 != $r12 goto label29;

        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour)>(r52);

     label29:
        goto label31;

     label30:
        staticinvoke <androidx.constraintlayout.core.widgets.Optimizer: void checkMatchParent(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,androidx.constraintlayout.core.widgets.ConstraintWidget)>(r0, r1, r50);

        $z3 = virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean addFirst()>();

        if $z3 != 0 goto label31;

        virtualinvoke r50.<androidx.constraintlayout.core.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

     label31:
        i11 = i11 + 1;

        goto label25;

     label32:
        $i2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        if $i2 <= 0 goto label33;

        staticinvoke <androidx.constraintlayout.core.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int)>(r0, r1, null, 0);

     label33:
        $i3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        if $i3 <= 0 goto label34;

        staticinvoke <androidx.constraintlayout.core.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.LinearSystem,java.util.ArrayList,int)>(r0, r1, null, 1);

     label34:
        return 1;
    }

    public boolean updateChildrenFromSolver(androidx.constraintlayout.core.LinearSystem, boolean[])
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.LinearSystem r1;
        boolean[] r2;
        boolean z0, $z1, z2;
        int i0, i1;
        androidx.constraintlayout.core.widgets.ConstraintWidget r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.LinearSystem;

        r2 := @parameter1: boolean[];

        r2[2] = 0;

        z0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(64);

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        z2 = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r6;

        virtualinvoke r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean)>(r1, z0);

        $z1 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean hasDimensionOverride()>();

        if $z1 == 0 goto label2;

        z2 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z2;
    }

    public void updateFromRuns(boolean, boolean)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean z0, z1;
        int i0, i1;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.WidgetContainer: void updateFromRuns(boolean,boolean)>(z0, z1);

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r4;

        virtualinvoke r1.<androidx.constraintlayout.core.widgets.ConstraintWidget: void updateFromRuns(boolean,boolean)>(z0, z1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setPadding(int, int, int, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingLeft> = i0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingTop> = i1;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingRight> = i2;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mPaddingBottom> = i3;

        return;
    }

    public void setRtl(boolean)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        z0 := @parameter0: boolean;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl> = z0;

        return;
    }

    public boolean isRtl()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $z0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mIsRtl>;

        return $z0;
    }

    public static boolean measure(int, androidx.constraintlayout.core.widgets.ConstraintWidget, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i17, i18, $i19, $i20, $i21, $i22;
        androidx.constraintlayout.core.widgets.ConstraintWidget r0;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer r1;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, z10, $z11, $z12, $z13, $z14, $z15;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        int[] $r9, $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        byte $b15, $b16;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.constraintlayout.core.widgets.ConstraintWidget;

        r1 := @parameter2: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer;

        r2 := @parameter3: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        i1 := @parameter4: int;

        if r1 != null goto label01;

        return 0;

     label01:
        $i2 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getVisibility()>();

        if $i2 == 8 goto label02;

        $z2 = r0 instanceof androidx.constraintlayout.core.widgets.Guideline;

        if $z2 != 0 goto label02;

        $z3 = r0 instanceof androidx.constraintlayout.core.widgets.Barrier;

        if $z3 == 0 goto label03;

     label02:
        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth> = 0;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight> = 0;

        return 0;

     label03:
        $r3 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r3;

        $r4 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r4;

        $i3 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int horizontalDimension> = $i3;

        $i4 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension> = $i4;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredNeedsSolverPass> = 0;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measureStrategy> = i1;

        $r6 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior>;

        $r5 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $r6 != $r5 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z8 = $z7;

        $r8 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior>;

        $r7 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if $r8 != $r7 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z10 = $z9;

        if z8 == 0 goto label08;

        $f10 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: float mDimensionRatio>;

        $b16 = $f10 cmpl 0.0F;

        if $b16 <= 0 goto label08;

        $z11 = 1;

        goto label09;

     label08:
        $z11 = 0;

     label09:
        z0 = $z11;

        if z10 == 0 goto label10;

        $f9 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: float mDimensionRatio>;

        $b15 = $f9 cmpl 0.0F;

        if $b15 <= 0 goto label10;

        $z12 = 1;

        goto label11;

     label10:
        $z12 = 0;

     label11:
        z1 = $z12;

        if z8 == 0 goto label12;

        $z6 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean hasDanglingDimension(int)>(0);

        if $z6 == 0 goto label12;

        $i13 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $i13 != 0 goto label12;

        if z0 != 0 goto label12;

        z8 = 0;

        $r25 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r25;

        if z10 == 0 goto label12;

        $i14 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $i14 != 0 goto label12;

        $r26 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r26;

     label12:
        if z10 == 0 goto label13;

        $z5 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean hasDanglingDimension(int)>(1);

        if $z5 == 0 goto label13;

        $i11 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $i11 != 0 goto label13;

        if z1 != 0 goto label13;

        z10 = 0;

        $r23 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r23;

        if z8 == 0 goto label13;

        $i12 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $i12 != 0 goto label13;

        $r24 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r24;

     label13:
        $z13 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean isResolvedHorizontally()>();

        if $z13 == 0 goto label14;

        z8 = 0;

        $r22 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r22;

     label14:
        $z4 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean isResolvedVertically()>();

        if $z4 == 0 goto label15;

        z10 = 0;

        $r21 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r21;

     label15:
        if z0 == 0 goto label19;

        $r15 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int[] mResolvedMatchConstraintDefault>;

        $i9 = $r15[0];

        if $i9 != 4 goto label16;

        $r20 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r20;

        goto label19;

     label16:
        if z10 != 0 goto label19;

        $r17 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior>;

        $r16 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        if $r17 != $r16 goto label17;

        i17 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension>;

        goto label18;

     label17:
        $r18 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r18;

        interfaceinvoke r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer: void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r0, r2);

        i17 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

     label18:
        $r19 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior> = $r19;

        $f6 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: float getDimensionRatio()>();

        $f7 = (float) i17;

        $f8 = $f6 * $f7;

        $i10 = (int) $f8;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int horizontalDimension> = $i10;

     label19:
        if z1 == 0 goto label24;

        $r9 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int[] mResolvedMatchConstraintDefault>;

        $i5 = $r9[1];

        if $i5 != 4 goto label20;

        $r14 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r14;

        goto label24;

     label20:
        if z8 != 0 goto label24;

        $r11 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour horizontalBehavior>;

        $r10 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        if $r11 != $r10 goto label21;

        i18 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int horizontalDimension>;

        goto label22;

     label21:
        $r12 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r12;

        interfaceinvoke r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer: void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r0, r2);

        i18 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

     label22:
        $r13 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour verticalBehavior> = $r13;

        $i6 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getDimensionRatioSide()>();

        if $i6 != -1 goto label23;

        $f3 = (float) i18;

        $f4 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: float getDimensionRatio()>();

        $f5 = $f3 / $f4;

        $i8 = (int) $f5;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension> = $i8;

        goto label24;

     label23:
        $f0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: float getDimensionRatio()>();

        $f1 = (float) i18;

        $f2 = $f0 * $f1;

        $i7 = (int) $f2;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int verticalDimension> = $i7;

     label24:
        interfaceinvoke r1.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer: void measure(androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure)>(r0, r2);

        $i19 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredWidth>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setWidth(int)>($i19);

        $i20 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredHeight>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHeight(int)>($i20);

        $z14 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredHasBaseline>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setHasBaseline(boolean)>($z14);

        $i21 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measuredBaseline>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidget: void setBaselineDistance(int)>($i21);

        $i22 = <androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int SELF_DIMENSIONS>;

        r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int measureStrategy> = $i22;

        $z15 = r2.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: boolean measuredNeedsSolverPass>;

        return $z15;
    }

    public void layout()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, $i41, $i42, i43, $i44, i45;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour r1, r2, $r21, $r22, $r23, $r25, $r27, $r29, $r32, $r33, $r35, $r83, $r84, $r86, $r88, $r89, $r93, $r96, r105, r106, $r108, $r110, $r111, $r119, $r121, $r122;
        androidx.constraintlayout.core.widgets.ConstraintWidget r3, r104, r112, r113, r118;
        java.util.ArrayList $r4, $r10, $r37, $r39, $r77, $r80, $r91, r109;
        androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] $r5, $r6, $r13, $r14, $r20, $r24, $r26, $r28, $r30, $r34, $r36, $r120;
        androidx.constraintlayout.core.Metrics $r7, $r97;
        androidx.constraintlayout.core.LinearSystem $r8, $r9, $r11, $r15, $r16, $r17, $r19, $r41, $r43, $r44, $r50, $r58, $r66, $r74, $r79, $r85;
        androidx.constraintlayout.core.Cache $r12;
        java.lang.ref.WeakReference $r18, $r45, $r47, $r53, $r55, $r61, $r63, $r69, $r71, $r114, $r115, $r116;
        boolean[] $r31, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12, $z13, z14, $z15, $z16, z17, z18, $z19, z20, z21, z22;
        java.lang.Object $r38, $r40, $r46, $r48, $r54, $r56, $r62, $r64, $r70, $r72, $r78, $r81, $r92;
        androidx.constraintlayout.core.widgets.ConstraintAnchor $r49, $r51, $r57, $r59, $r65, $r67, $r73, $r75;
        androidx.constraintlayout.core.SolverVariable $r52, $r60, $r68, $r76;
        androidx.constraintlayout.core.widgets.WidgetContainer $r82;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer $r87, $r90, $r95;
        androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure $r94, r107;
        long $l27, $l28;
        java.lang.Throwable $r98, r117;
        java.lang.StringBuilder $r99, $r101, $r102;
        java.io.PrintStream $r100;
        java.lang.String $r103;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mX> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mY> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 0;

        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        i29 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i2 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        i30 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        r1 = $r5[1];

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        r2 = $r6[0];

        $r7 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.Metrics mMetrics>;

        if $r7 == null goto label01;

        $r97 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.Metrics mMetrics>;

        $l27 = $r97.<androidx.constraintlayout.core.Metrics: long layouts>;

        $l28 = $l27 + 1L;

        $r97.<androidx.constraintlayout.core.Metrics: long layouts> = $l28;

     label01:
        z12 = 0;

        $i3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int pass>;

        if $i3 != 0 goto label06;

        $i23 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        $z5 = staticinvoke <androidx.constraintlayout.core.widgets.Optimizer: boolean enabled(int,int)>($i23, 1);

        if $z5 == 0 goto label06;

        $r90 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer()>();

        staticinvoke <androidx.constraintlayout.core.widgets.analyzer.Direct: void solvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)>(r0, $r90);

        i31 = 0;

     label02:
        if i31 >= i0 goto label06;

        $r91 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r92 = virtualinvoke $r91.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        r104 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r92;

        $z6 = virtualinvoke r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean isMeasureRequested()>();

        if $z6 == 0 goto label05;

        $z7 = r104 instanceof androidx.constraintlayout.core.widgets.Guideline;

        if $z7 != 0 goto label05;

        $z8 = r104 instanceof androidx.constraintlayout.core.widgets.Barrier;

        if $z8 != 0 goto label05;

        $z9 = r104 instanceof androidx.constraintlayout.core.widgets.VirtualLayout;

        if $z9 != 0 goto label05;

        $z10 = virtualinvoke r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: boolean isInVirtualLayout()>();

        if $z10 != 0 goto label05;

        r105 = virtualinvoke r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)>(0);

        r106 = virtualinvoke r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)>(1);

        $r93 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r105 != $r93 goto label03;

        $i25 = r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultWidth>;

        if $i25 == 1 goto label03;

        $r96 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        if r106 != $r96 goto label03;

        $i26 = r104.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mMatchConstraintDefaultHeight>;

        if $i26 == 1 goto label03;

        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        z14 = $z13;

        if z14 != 0 goto label05;

        $r94 = new androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure;

        specialinvoke $r94.<androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: void <init>()>();

        r107 = $r94;

        $r95 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer mMeasurer>;

        $i24 = <androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure: int SELF_DIMENSIONS>;

        staticinvoke <androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean measure(int,androidx.constraintlayout.core.widgets.ConstraintWidget,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure,int)>(0, r104, $r95, r107, $i24);

     label05:
        i31 = i31 + 1;

        goto label02;

     label06:
        if i0 <= 2 goto label12;

        $r86 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r2 == $r86 goto label07;

        $r89 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r1 != $r89 goto label12;

     label07:
        $i20 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        $z3 = staticinvoke <androidx.constraintlayout.core.widgets.Optimizer: boolean enabled(int,int)>($i20, 1024);

        if $z3 == 0 goto label12;

        $r87 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer getMeasurer()>();

        $z4 = staticinvoke <androidx.constraintlayout.core.widgets.analyzer.Grouping: boolean simpleSolvingPass(androidx.constraintlayout.core.widgets.ConstraintWidgetContainer,androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer)>(r0, $r87);

        if $z4 == 0 goto label12;

        $r88 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r2 != $r88 goto label09;

        $i22 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        if i29 >= $i22 goto label08;

        if i29 <= 0 goto label08;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setWidth(int)>(i29);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 1;

        goto label09;

     label08:
        i29 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

     label09:
        $r108 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r1 != $r108 goto label11;

        $i21 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        if i30 >= $i21 goto label10;

        if i30 <= 0 goto label10;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setHeight(int)>(i30);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 1;

        goto label11;

     label10:
        i30 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

     label11:
        z12 = 1;

     label12:
        $z15 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(64);

        if $z15 != 0 goto label13;

        $z2 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(128);

        if $z2 == 0 goto label14;

     label13:
        $z16 = 1;

        goto label15;

     label14:
        $z16 = 0;

     label15:
        z17 = $z16;

        $r8 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r8.<androidx.constraintlayout.core.LinearSystem: boolean graphOptimizer> = 0;

        $r9 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r9.<androidx.constraintlayout.core.LinearSystem: boolean newgraphOptimizer> = 0;

        $i4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mOptimizationLevel>;

        if $i4 == 0 goto label16;

        if z17 == 0 goto label16;

        $r85 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r85.<androidx.constraintlayout.core.LinearSystem: boolean newgraphOptimizer> = 1;

     label16:
        z18 = 0;

        r109 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r110 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r111 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r110 == $r111 goto label17;

        $r83 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $r84 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r83 != $r84 goto label18;

     label17:
        $z19 = 1;

        goto label19;

     label18:
        $z19 = 0;

     label19:
        z20 = $z19;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void resetChains()>();

        i32 = 0;

        i33 = 0;

     label20:
        if i33 >= i0 goto label22;

        $r80 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r81 = virtualinvoke $r80.<java.util.ArrayList: java.lang.Object get(int)>(i33);

        r112 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r81;

        $z1 = r112 instanceof androidx.constraintlayout.core.widgets.WidgetContainer;

        if $z1 == 0 goto label21;

        $r82 = (androidx.constraintlayout.core.widgets.WidgetContainer) r112;

        virtualinvoke $r82.<androidx.constraintlayout.core.widgets.WidgetContainer: void layout()>();

     label21:
        i33 = i33 + 1;

        goto label20;

     label22:
        z21 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)>(64);

        z22 = 1;

     label23:
        if z22 == 0 goto label47;

        i32 = i32 + 1;

     label24:
        $r15 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r15.<androidx.constraintlayout.core.LinearSystem: void reset()>();

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void resetChains()>();

        $r16 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void createObjectVariables(androidx.constraintlayout.core.LinearSystem)>($r16);

        i34 = 0;

     label25:
        if i34 >= i0 goto label26;

        $r77 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r78 = virtualinvoke $r77.<java.util.ArrayList: java.lang.Object get(int)>(i34);

        r113 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r78;

        $r79 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke r113.<androidx.constraintlayout.core.widgets.ConstraintWidget: void createObjectVariables(androidx.constraintlayout.core.LinearSystem)>($r79);

        i34 = i34 + 1;

        goto label25;

     label26:
        $r17 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        z22 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.core.LinearSystem)>($r17);

        $r18 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        if $r18 == null goto label27;

        $r69 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        $r70 = virtualinvoke $r69.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r70 == null goto label27;

        $r71 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin>;

        $r72 = virtualinvoke $r71.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r75 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r72;

        $r74 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r73 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintAnchor mTop>;

        $r76 = virtualinvoke $r74.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>($r73);

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable)>($r75, $r76);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMin> = null;

     label27:
        $r114 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        if $r114 == null goto label28;

        $r61 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        $r62 = virtualinvoke $r61.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r62 == null goto label28;

        $r63 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax>;

        $r64 = virtualinvoke $r63.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r67 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r64;

        $r66 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r65 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintAnchor mBottom>;

        $r68 = virtualinvoke $r66.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>($r65);

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable)>($r67, $r68);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference verticalWrapMax> = null;

     label28:
        $r115 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        if $r115 == null goto label29;

        $r53 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        $r54 = virtualinvoke $r53.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r54 == null goto label29;

        $r55 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin>;

        $r56 = virtualinvoke $r55.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r59 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r56;

        $r58 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r57 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintAnchor mLeft>;

        $r60 = virtualinvoke $r58.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>($r57);

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addMinWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable)>($r59, $r60);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMin> = null;

     label29:
        $r116 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        if $r116 == null goto label30;

        $r45 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        $r46 = virtualinvoke $r45.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r46 == null goto label30;

        $r47 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax>;

        $r48 = virtualinvoke $r47.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r51 = (androidx.constraintlayout.core.widgets.ConstraintAnchor) $r48;

        $r50 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r49 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintAnchor mRight>;

        $r52 = virtualinvoke $r50.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.SolverVariable createObjectVariable(java.lang.Object)>($r49);

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addMaxWrap(androidx.constraintlayout.core.widgets.ConstraintAnchor,androidx.constraintlayout.core.SolverVariable)>($r51, $r52);

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.ref.WeakReference horizontalWrapMax> = null;

     label30:
        if z22 == 0 goto label31;

        $r44 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke $r44.<androidx.constraintlayout.core.LinearSystem: void minimize()>();

     label31:
        goto label33;

     label32:
        $r98 := @caughtexception;

        r117 = $r98;

        virtualinvoke r117.<java.lang.Exception: void printStackTrace()>();

        $r100 = <java.lang.System: java.io.PrintStream out>;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EXCEPTION : ");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r100.<java.io.PrintStream: void println(java.lang.String)>($r103);

     label33:
        if z22 == 0 goto label34;

        $r43 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r42 = <androidx.constraintlayout.core.widgets.Optimizer: boolean[] flags>;

        z22 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean updateChildrenFromSolver(androidx.constraintlayout.core.LinearSystem,boolean[])>($r43, $r42);

        goto label37;

     label34:
        $r19 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean)>($r19, z21);

        i35 = 0;

     label35:
        if i35 >= i0 goto label36;

        $r39 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        r118 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r40;

        $r41 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        virtualinvoke r118.<androidx.constraintlayout.core.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.core.LinearSystem,boolean)>($r41, z21);

        i35 = i35 + 1;

        goto label35;

     label36:
        z22 = 0;

     label37:
        if z20 == 0 goto label41;

        if i32 >= 8 goto label41;

        $r31 = <androidx.constraintlayout.core.widgets.Optimizer: boolean[] flags>;

        $z0 = $r31[2];

        if $z0 == 0 goto label41;

        i36 = 0;

        i37 = 0;

        i38 = 0;

     label38:
        if i38 >= i0 goto label39;

        $r37 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i38);

        r3 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r38;

        $i14 = r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mX>;

        $i15 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getWidth()>();

        $i16 = $i14 + $i15;

        i36 = staticinvoke <java.lang.Math: int max(int,int)>(i36, $i16);

        $i17 = r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: int mY>;

        $i18 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: int getHeight()>();

        $i19 = $i17 + $i18;

        i37 = staticinvoke <java.lang.Math: int max(int,int)>(i37, $i19);

        i38 = i38 + 1;

        goto label38;

     label39:
        $i10 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mMinWidth>;

        i39 = staticinvoke <java.lang.Math: int max(int,int)>($i10, i36);

        $i11 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mMinHeight>;

        i40 = staticinvoke <java.lang.Math: int max(int,int)>($i11, i37);

        $r32 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r2 != $r32 goto label40;

        $i13 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        if $i13 >= i39 goto label40;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setWidth(int)>(i39);

        $r36 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r35 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        $r36[0] = $r35;

        z12 = 1;

        z22 = 1;

     label40:
        $r119 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if r1 != $r119 goto label41;

        $i12 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        if $i12 >= i40 goto label41;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setHeight(int)>(i40);

        $r34 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r33 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        $r34[1] = $r33;

        z12 = 1;

        z22 = 1;

     label41:
        $i41 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mMinWidth>;

        $i42 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        i43 = staticinvoke <java.lang.Math: int max(int,int)>($i41, $i42);

        $i44 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        if i43 <= $i44 goto label42;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setWidth(int)>(i43);

        $r30 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r29 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $r30[0] = $r29;

        z12 = 1;

        z22 = 1;

     label42:
        $i5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mMinHeight>;

        $i6 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        i45 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $i7 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        if i45 <= $i7 goto label43;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setHeight(int)>(i45);

        $r28 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r27 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $r28[1] = $r27;

        z12 = 1;

        z22 = 1;

     label43:
        if z12 != 0 goto label45;

        $r20 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r22 = $r20[0];

        $r21 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r22 != $r21 goto label44;

        if i29 <= 0 goto label44;

        $i9 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getWidth()>();

        if $i9 <= i29 goto label44;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mWidthMeasuredTooSmall> = 1;

        z12 = 1;

        $r26 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r25 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $r26[0] = $r25;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setWidth(int)>(i29);

        z22 = 1;

     label44:
        $r120 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r121 = $r120[1];

        $r122 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r121 != $r122 goto label45;

        if i30 <= 0 goto label45;

        $i8 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int getHeight()>();

        if $i8 <= i30 goto label45;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean mHeightMeasuredTooSmall> = 1;

        z12 = 1;

        $r24 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r23 = <androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour FIXED>;

        $r24[1] = $r23;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void setHeight(int)>(i30);

        z22 = 1;

     label45:
        if i32 <= 8 goto label46;

        z22 = 0;

     label46:
        goto label23;

     label47:
        $r10 = (java.util.ArrayList) r109;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren> = $r10;

        if z12 == 0 goto label48;

        $r13 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r13[0] = r2;

        $r14 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r14[1] = r1;

     label48:
        $r11 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        $r12 = virtualinvoke $r11.<androidx.constraintlayout.core.LinearSystem: androidx.constraintlayout.core.Cache getCache()>();

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void resetSolverVariables(androidx.constraintlayout.core.Cache)>($r12);

        return;

        catch java.lang.Exception from label24 to label31 with label32;
    }

    public boolean handlesInternalConstraints()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        return 0;
    }

    public java.util.ArrayList getVerticalGuidelines()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        java.util.ArrayList r1, $r4, $r5, $r6;
        int i0, $i1, i2;
        androidx.constraintlayout.core.widgets.ConstraintWidget r2;
        androidx.constraintlayout.core.widgets.Guideline r3;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        i2 = 0;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label1:
        if i2 >= i0 goto label3;

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r7;

        $z0 = r2 instanceof androidx.constraintlayout.core.widgets.Guideline;

        if $z0 == 0 goto label2;

        r3 = (androidx.constraintlayout.core.widgets.Guideline) r2;

        $i1 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.Guideline: int getOrientation()>();

        if $i1 != 1 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r1;
    }

    public java.util.ArrayList getHorizontalGuidelines()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        java.util.ArrayList r1, $r4, $r5, $r6;
        int i0, $i1, i2;
        androidx.constraintlayout.core.widgets.ConstraintWidget r2;
        androidx.constraintlayout.core.widgets.Guideline r3;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        i2 = 0;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label1:
        if i2 >= i0 goto label3;

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList mChildren>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r7;

        $z0 = r2 instanceof androidx.constraintlayout.core.widgets.Guideline;

        if $z0 == 0 goto label2;

        r3 = (androidx.constraintlayout.core.widgets.Guideline) r2;

        $i1 = virtualinvoke r3.<androidx.constraintlayout.core.widgets.Guideline: int getOrientation()>();

        if $i1 != 0 goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r1;
    }

    public androidx.constraintlayout.core.LinearSystem getSystem()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.LinearSystem $r1;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        $r1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.LinearSystem mSystem>;

        return $r1;
    }

    private void resetChains()
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = 0;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = 0;

        return;
    }

    void addChain(androidx.constraintlayout.core.widgets.ConstraintWidget, int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1, r2;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        i0 := @parameter1: int;

        r2 = r1;

        if i0 != 0 goto label1;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addHorizontalChain(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r2);

        goto label2;

     label1:
        if i0 != 1 goto label2;

        specialinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: void addVerticalChain(androidx.constraintlayout.core.widgets.ConstraintWidget)>(r2);

     label2:
        return;
    }

    private void addHorizontalChain(androidx.constraintlayout.core.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.constraintlayout.core.widgets.ChainHead[] $r2, $r4, $r5, $r6, $r8;
        androidx.constraintlayout.core.widgets.ChainHead $r3;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        $i0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $i2 = $i0 + 1;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray>;

        $i1 = lengthof $r2;

        if $i2 < $i1 goto label1;

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray>;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray>;

        $i6 = lengthof $r5;

        $i7 = $i6 * 2;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r6, $i7);

        $r8 = (androidx.constraintlayout.core.widgets.ChainHead[]) $r7;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray> = $r8;

     label1:
        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mHorizontalChainsArray>;

        $i3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $r3 = new androidx.constraintlayout.core.widgets.ChainHead;

        $z0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        specialinvoke $r3.<androidx.constraintlayout.core.widgets.ChainHead: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean)>(r1, 0, $z0);

        $r4[$i3] = $r3;

        $i4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize>;

        $i5 = $i4 + 1;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHorizontalChainsSize> = $i5;

        return;
    }

    private void addVerticalChain(androidx.constraintlayout.core.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.core.widgets.ConstraintWidget r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.constraintlayout.core.widgets.ChainHead[] $r2, $r4, $r5, $r6, $r8;
        androidx.constraintlayout.core.widgets.ChainHead $r3;
        boolean $z0;
        java.lang.Object[] $r7;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.ConstraintWidget;

        $i0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $i2 = $i0 + 1;

        $r2 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray>;

        $i1 = lengthof $r2;

        if $i2 < $i1 goto label1;

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray>;

        $r5 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray>;

        $i6 = lengthof $r5;

        $i7 = $i6 * 2;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r6, $i7);

        $r8 = (androidx.constraintlayout.core.widgets.ChainHead[]) $r7;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray> = $r8;

     label1:
        $r4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: androidx.constraintlayout.core.widgets.ChainHead[] mVerticalChainsArray>;

        $i3 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $r3 = new androidx.constraintlayout.core.widgets.ChainHead;

        $z0 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: boolean isRtl()>();

        specialinvoke $r3.<androidx.constraintlayout.core.widgets.ChainHead: void <init>(androidx.constraintlayout.core.widgets.ConstraintWidget,int,boolean)>(r1, 1, $z0);

        $r4[$i3] = $r3;

        $i4 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize>;

        $i5 = $i4 + 1;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mVerticalChainsSize> = $i5;

        return;
    }

    public void setPass(int)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int pass> = i0;

        return;
    }

    public void getSceneString(java.lang.StringBuilder)
    {
        androidx.constraintlayout.core.widgets.ConstraintWidgetContainer r0;
        java.lang.StringBuilder r1, $r5, $r7, $r8, $r11, $r12, $r13, $r17, $r18, $r19;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        androidx.constraintlayout.core.widgets.ConstraintWidget r4;
        java.lang.String $r6, $r9, $r14, $r20;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r24;

        r0 := @this: androidx.constraintlayout.core.widgets.ConstraintWidgetContainer;

        r1 := @parameter0: java.lang.StringBuilder;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.lang.String stringId>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":{\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  actualWidth:");

        $i0 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mWidth>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  actualHeight:");

        $i1 = r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int mHeight>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r2 = virtualinvoke r0.<androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: java.util.ArrayList getChildren()>();

        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r24 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.constraintlayout.core.widgets.ConstraintWidget) $r24;

        virtualinvoke r4.<androidx.constraintlayout.core.widgets.ConstraintWidget: void getSceneString(java.lang.StringBuilder)>(r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n");

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        return;
    }

    static void <clinit>()
    {
        <androidx.constraintlayout.core.widgets.ConstraintWidgetContainer: int myCounter> = 0;

        return;
    }

