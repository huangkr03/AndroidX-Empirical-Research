androidx.compose.ui.node.DepthSortedSet
<androidx.compose.ui.node.DepthSortedSet: boolean extraAssertions>
<androidx.compose.ui.node.DepthSortedSet: kotlin.Lazy mapOfOriginalDepth$delegate>
<androidx.compose.ui.node.DepthSortedSet: java.util.Comparator DepthComparator>
<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>
    public void <init>(boolean)
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        boolean z0;
        androidx.compose.ui.node.DepthSortedSet$mapOfOriginalDepth$2 $r1;
        kotlin.jvm.functions.Function0 $r2;
        kotlin.LazyThreadSafetyMode $r3;
        kotlin.Lazy $r4;
        androidx.compose.ui.node.DepthSortedSet$DepthComparator$1 $r5;
        java.util.Comparator $r6, $r8;
        androidx.compose.ui.node.TreeSet $r7;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.node.DepthSortedSet: boolean extraAssertions> = z0;

        $r3 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r1 = <androidx.compose.ui.node.DepthSortedSet$mapOfOriginalDepth$2: androidx.compose.ui.node.DepthSortedSet$mapOfOriginalDepth$2 INSTANCE>;

        $r2 = (kotlin.jvm.functions.Function0) $r1;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r3, $r2);

        r0.<androidx.compose.ui.node.DepthSortedSet: kotlin.Lazy mapOfOriginalDepth$delegate> = $r4;

        $r5 = new androidx.compose.ui.node.DepthSortedSet$DepthComparator$1;

        specialinvoke $r5.<androidx.compose.ui.node.DepthSortedSet$DepthComparator$1: void <init>()>();

        $r6 = (java.util.Comparator) $r5;

        r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Comparator DepthComparator> = $r6;

        $r7 = new androidx.compose.ui.node.TreeSet;

        $r8 = r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Comparator DepthComparator>;

        specialinvoke $r7.<androidx.compose.ui.node.TreeSet: void <init>(java.util.Comparator)>($r8);

        r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set> = $r7;

        return;
    }

    public void <init>(boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: void <init>(boolean)>(z0);

        return;
    }

    private final java.util.Map getMapOfOriginalDepth()
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.Map $r3;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        r1 = r0.<androidx.compose.ui.node.DepthSortedSet: kotlin.Lazy mapOfOriginalDepth$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.Map) $r2;

        return $r3;
    }

    public final boolean contains(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r2, $r6;
        androidx.compose.ui.node.TreeSet $r3;
        java.util.Map $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        $r3 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        z0 = virtualinvoke $r3.<androidx.compose.ui.node.TreeSet: boolean contains(java.lang.Object)>(r1);

        $z1 = r0.<androidx.compose.ui.node.DepthSortedSet: boolean extraAssertions>;

        if $z1 == 0 goto label3;

        $r4 = specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Map getMapOfOriginalDepth()>();

        $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if z0 != $z2 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 != 0 goto label3;

        r2 = "Check failed.";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label3:
        return z0;
    }

    public final void add(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.LayoutNode r1;
        java.lang.Integer r2, $r9;
        java.lang.String r3, $r7, $r12, r13;
        boolean $z0, $z1, $z3;
        java.util.Map $r4, $r8;
        java.lang.Object $r5;
        int $i0, $i1, i2;
        java.lang.IllegalStateException $r6, $r11;
        androidx.compose.ui.node.TreeSet $r14;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        $z0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z0 != 0 goto label1;

        r13 = "Check failed.";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label1:
        $z1 = r0.<androidx.compose.ui.node.DepthSortedSet: boolean extraAssertions>;

        if $z1 == 0 goto label5;

        $r4 = specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Map getMapOfOriginalDepth()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 != null goto label2;

        $r8 = specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Map getMapOfOriginalDepth()>();

        $i1 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: int getDepth$ui_release()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        goto label5;

     label2:
        i2 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: int getDepth$ui_release()>();

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i0 != i2 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        if $z3 != 0 goto label5;

        r3 = "Check failed.";

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        $r14 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        virtualinvoke $r14.<androidx.compose.ui.node.TreeSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final boolean remove(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.LayoutNode r1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i1;
        androidx.compose.ui.node.TreeSet $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r5, $r7, $r9;
        java.lang.String $r6, $r8, $r10, r11, r13, r14;
        java.lang.Integer r12;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        $z1 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z1 != 0 goto label1;

        r11 = "Check failed.";

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r11.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label1:
        $r2 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        z0 = virtualinvoke $r2.<androidx.compose.ui.node.TreeSet: boolean remove(java.lang.Object)>(r1);

        $z2 = r0.<androidx.compose.ui.node.DepthSortedSet: boolean extraAssertions>;

        if $z2 == 0 goto label8;

        $r3 = specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: java.util.Map getMapOfOriginalDepth()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r12 = (java.lang.Integer) $r4;

        if z0 == 0 goto label5;

        i0 = virtualinvoke r1.<androidx.compose.ui.node.LayoutNode: int getDepth$ui_release()>();

        if r12 != null goto label2;

        goto label3;

     label2:
        $i1 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        if $z3 != 0 goto label8;

        r13 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label5:
        if r12 != null goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        if $z4 != 0 goto label8;

        r14 = "Check failed.";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label8:
        return z0;
    }

    public final androidx.compose.ui.node.LayoutNode pop()
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.LayoutNode r1;
        androidx.compose.ui.node.TreeSet $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        $r2 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.TreeSet: java.lang.Object first()>();

        r1 = (androidx.compose.ui.node.LayoutNode) $r3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "node");

        virtualinvoke r0.<androidx.compose.ui.node.DepthSortedSet: boolean remove(androidx.compose.ui.node.LayoutNode)>(r1);

        return r1;
    }

    public final void popEach(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.DepthSortedSet r0, r3;
        kotlin.jvm.functions.Function1 r1;
        boolean $z2, $z3;
        androidx.compose.ui.node.LayoutNode r4;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

     label1:
        r3 = r0;

        $z2 = virtualinvoke r3.<androidx.compose.ui.node.DepthSortedSet: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        if $z3 == 0 goto label4;

        r4 = virtualinvoke r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.LayoutNode pop()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        goto label1;

     label4:
        return;
    }

    public final boolean isEmpty()
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.TreeSet $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        $r1 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        $z0 = virtualinvoke $r1.<androidx.compose.ui.node.TreeSet: boolean isEmpty()>();

        return $z0;
    }

    public final boolean isNotEmpty()
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        boolean $z1, $z2;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        $z1 = virtualinvoke r0.<androidx.compose.ui.node.DepthSortedSet: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.node.DepthSortedSet r0;
        androidx.compose.ui.node.TreeSet $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        $r1 = r0.<androidx.compose.ui.node.DepthSortedSet: androidx.compose.ui.node.TreeSet set>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.TreeSet: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "set.toString()");

        return $r2;
    }

    public void <init>()
    {
        androidx.compose.ui.node.DepthSortedSet r0;

        r0 := @this: androidx.compose.ui.node.DepthSortedSet;

        specialinvoke r0.<androidx.compose.ui.node.DepthSortedSet: void <init>(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

