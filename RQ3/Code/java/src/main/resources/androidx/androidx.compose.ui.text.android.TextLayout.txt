androidx.compose.ui.text.android.TextLayout
<androidx.compose.ui.text.android.TextLayout: boolean didExceedMaxLines>
<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>
<androidx.compose.ui.text.android.TextLayout: int lineCount>
<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>
    public final float getMaxIntrinsicWidth()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        androidx.compose.ui.text.android.LayoutIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.LayoutIntrinsics: float getMaxIntrinsicWidth()>();

        return $f0;
    }

    public final float getMinIntrinsicWidth()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        androidx.compose.ui.text.android.LayoutIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.text.android.LayoutIntrinsics: float getMinIntrinsicWidth()>();

        return $f0;
    }

    public final boolean getDidExceedMaxLines()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $z0 = r0.<androidx.compose.ui.text.android.TextLayout: boolean didExceedMaxLines>;

        return $z0;
    }

    public static void getLayout$annotations()
    {
        return;
    }

    public final android.text.Layout getLayout()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        return $r1;
    }

    public final int getLineCount()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int $i0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $i0 = r0.<androidx.compose.ui.text.android.TextLayout: int lineCount>;

        return $i0;
    }

    public final java.lang.CharSequence getText()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        android.text.Layout $r1;
        java.lang.CharSequence $r2;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $r2 = virtualinvoke $r1.<android.text.Layout: java.lang.CharSequence getText()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "layout.text");

        return $r2;
    }

    public final int getHeight()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        boolean $z0;
        android.text.Layout $r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $z0 = r0.<androidx.compose.ui.text.android.TextLayout: boolean didExceedMaxLines>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i0 = r0.<androidx.compose.ui.text.android.TextLayout: int lineCount>;

        $i1 = $i0 - 1;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getLineBottom(int)>($i1);

        goto label2;

     label1:
        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i2 = virtualinvoke $r1.<android.text.Layout: int getHeight()>();

     label2:
        return $i2;
    }

    public final float getLineLeft(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineLeft(int)>(i0);

        return $f0;
    }

    public final float getLineRight(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineRight(int)>(i0);

        return $f0;
    }

    public final float getLineTop(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineTop(int)>(i0);

        $f0 = (float) $i1;

        return $f0;
    }

    public final float getLineBottom(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineBottom(int)>(i0);

        $f0 = (float) $i1;

        return $f0;
    }

    public final float getLineBaseline(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineBaseline(int)>(i0);

        $f0 = (float) $i1;

        return $f0;
    }

    public final float getLineHeight(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1, $i2, $i3;
        android.text.Layout $r1, $r2;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineBottom(int)>(i0);

        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getLineTop(int)>(i0);

        $i3 = $i1 - $i2;

        $f0 = (float) $i3;

        return $f0;
    }

    public final float getLineWidth(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getLineWidth(int)>(i0);

        return $f0;
    }

    public final int getLineStart(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineStart(int)>(i0);

        return $i1;
    }

    public final int getLineEnd(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1, $i2;
        android.text.Layout $r1, $r2, $r4;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisStart(int)>(i0);

        if $i1 != 0 goto label1;

        $r4 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i2 = virtualinvoke $r4.<android.text.Layout: int getLineEnd(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $r3 = virtualinvoke $r2.<android.text.Layout: java.lang.CharSequence getText()>();

        $i2 = interfaceinvoke $r3.<java.lang.CharSequence: int length()>();

     label2:
        return $i2;
    }

    public final int getLineVisibleEnd(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1, $i2, $i3, $i4;
        android.text.Layout $r1, $r2, $r3, $r4;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisStart(int)>(i0);

        if $i1 != 0 goto label1;

        $r4 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i4 = virtualinvoke $r4.<android.text.Layout: int getLineVisibleEnd(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getLineStart(int)>(i0);

        $r3 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i3 = virtualinvoke $r3.<android.text.Layout: int getEllipsisStart(int)>(i0);

        $i4 = $i2 + $i3;

     label2:
        return $i4;
    }

    public final boolean isLineEllipsized(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisStart(int)>(i0);

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getLineEllipsisOffset(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisStart(int)>(i0);

        return $i1;
    }

    public final int getLineEllipsisCount(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisCount(int)>(i0);

        return $i1;
    }

    public final int getLineForVertical(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineForVertical(int)>(i0);

        return $i1;
    }

    public final int getOffsetForHorizontal(int, float)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        float f0;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getOffsetForHorizontal(int,float)>(i0, f0);

        return $i1;
    }

    public final float getPrimaryHorizontal(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        return $f0;
    }

    public final float getSecondaryHorizontal(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $f0 = virtualinvoke $r1.<android.text.Layout: float getSecondaryHorizontal(int)>(i0);

        return $f0;
    }

    public final int getLineForOffset(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        return $i1;
    }

    public final boolean isRtlCharAt(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0;
        android.text.Layout $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $z0 = virtualinvoke $r1.<android.text.Layout: boolean isRtlCharAt(int)>(i0);

        return $z0;
    }

    public final int getParagraphDirection(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getParagraphDirection(int)>(i0);

        return $i1;
    }

    public final void getSelectionPath(int, int, android.graphics.Path)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, i1;
        android.graphics.Path r1;
        android.text.Layout $r2;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Path;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        virtualinvoke $r2.<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, r1);

        return;
    }

    public final boolean isEllipsisApplied(int)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        int i0, $i1;
        android.text.Layout $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i1 = virtualinvoke $r1.<android.text.Layout: int getEllipsisCount(int)>(i0);

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void paint(android.graphics.Canvas)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        android.graphics.Canvas r1;
        android.text.Layout $r2;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        r1 := @parameter0: android.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        virtualinvoke $r2.<android.text.Layout: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public final androidx.compose.ui.text.android.LayoutIntrinsics getLayoutIntrinsics()
    {
        androidx.compose.ui.text.android.TextLayout r0;
        androidx.compose.ui.text.android.LayoutIntrinsics $r1;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        $r1 = r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>;

        return $r1;
    }

    public void <init>(java.lang.CharSequence, float, android.text.TextPaint, int, android.text.TextUtils$TruncateAt, int, float, float, boolean, int, int, int, int, int[], int[], androidx.compose.ui.text.android.LayoutIntrinsics)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        java.lang.CharSequence r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, i20, $i21, $i22;
        android.text.TextUtils$TruncateAt r3;
        boolean z0, z1, z2, $z3, $z4, z5, z6, z7, $z8;
        int[] r4, r5;
        androidx.compose.ui.text.android.LayoutIntrinsics r6, $r13, $r17;
        android.text.TextDirectionHeuristic r7;
        android.text.Layout$Alignment r8;
        android.text.BoringLayout$Metrics r9;
        androidx.compose.ui.text.android.TextAlignmentAdapter $r10;
        android.text.Layout $r11, $r12, $r19, $r22;
        byte $b15;
        androidx.compose.ui.text.android.BoringLayoutFactory $r14;
        android.text.BoringLayout $r15;
        android.text.Spanned $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        androidx.compose.ui.text.android.StaticLayoutFactory $r20;
        android.text.StaticLayout $r21;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        r1 := @parameter0: java.lang.CharSequence;

        f0 := @parameter1: float;

        r2 := @parameter2: android.text.TextPaint;

        i0 := @parameter3: int;

        r3 := @parameter4: android.text.TextUtils$TruncateAt;

        i1 := @parameter5: int;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        z0 := @parameter8: boolean;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        i4 := @parameter11: int;

        i5 := @parameter12: int;

        r4 := @parameter13: int[];

        r5 := @parameter14: int[];

        r6 := @parameter15: androidx.compose.ui.text.android.LayoutIntrinsics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "charSequence");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "textPaint");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "layoutIntrinsics");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics> = r6;

        i6 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r7 = staticinvoke <androidx.compose.ui.text.android.TextLayoutKt: android.text.TextDirectionHeuristic getTextDirectionHeuristic(int)>(i1);

        $r10 = <androidx.compose.ui.text.android.TextAlignmentAdapter: androidx.compose.ui.text.android.TextAlignmentAdapter INSTANCE>;

        r8 = virtualinvoke $r10.<androidx.compose.ui.text.android.TextAlignmentAdapter: android.text.Layout$Alignment get(int)>(i0);

        $z3 = r1 instanceof android.text.Spanned;

        if $z3 == 0 goto label02;

        $r16 = (android.text.Spanned) r1;

        $i16 = interfaceinvoke $r16.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>(-1, i6, class "Landroidx/compose/ui/text/android/style/BaselineShiftSpan;");

        if $i16 >= i6 goto label01;

        $z4 = 1;

        goto label03;

     label01:
        $z4 = 0;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z1 = $z4;

        $r17 = r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>;

        r9 = virtualinvoke $r17.<androidx.compose.ui.text.android.LayoutIntrinsics: android.text.BoringLayout$Metrics getBoringMetrics()>();

        z5 = 0;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f4 = (float) $d1;

        i7 = (int) $f4;

        if r9 == null goto label04;

        $r13 = r0.<androidx.compose.ui.text.android.TextLayout: androidx.compose.ui.text.android.LayoutIntrinsics layoutIntrinsics>;

        $f3 = virtualinvoke $r13.<androidx.compose.ui.text.android.LayoutIntrinsics: float getMaxIntrinsicWidth()>();

        $b15 = $f3 cmpg f0;

        if $b15 > 0 goto label04;

        if z1 != 0 goto label04;

        $r14 = <androidx.compose.ui.text.android.BoringLayoutFactory: androidx.compose.ui.text.android.BoringLayoutFactory INSTANCE>;

        $r15 = virtualinvoke $r14.<androidx.compose.ui.text.android.BoringLayoutFactory: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.BoringLayout$Metrics,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,int)>(r1, r2, i7, r9, r8, z0, r3, i7);

        $r19 = (android.text.Layout) $r15;

        goto label05;

     label04:
        $r20 = <androidx.compose.ui.text.android.StaticLayoutFactory: androidx.compose.ui.text.android.StaticLayoutFactory INSTANCE>;

        $i17 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        z6 = 0;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $f5 = (float) $d3;

        $i18 = (int) $f5;

        z7 = 0;

        $d4 = (double) f0;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $f6 = (float) $d5;

        $i19 = (int) $f6;

        $r21 = staticinvoke <androidx.compose.ui.text.android.StaticLayoutFactory: android.text.StaticLayout create$default(androidx.compose.ui.text.android.StaticLayoutFactory,java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,android.text.Layout$Alignment,int,android.text.TextUtils$TruncateAt,int,float,float,int,boolean,boolean,int,int,int[],int[],int,java.lang.Object)>($r20, r1, 0, $i17, r2, $i18, r7, r8, i2, r3, $i19, f1, f2, i5, z0, 0, i3, i4, r4, r5, 16384, null);

        $r19 = (android.text.Layout) $r21;

     label05:
        r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout> = $r19;

        $r22 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        i20 = virtualinvoke $r22.<android.text.Layout: int getLineCount()>();

        z2 = 0;

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>(i20, i2);

        r0.<androidx.compose.ui.text.android.TextLayout: int lineCount> = $i21;

        $i22 = r0.<androidx.compose.ui.text.android.TextLayout: int lineCount>;

        if $i22 >= i2 goto label06;

        $z8 = 0;

        goto label10;

     label06:
        if r3 == null goto label08;

        $r12 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i12 = r0.<androidx.compose.ui.text.android.TextLayout: int lineCount>;

        $i13 = $i12 - 1;

        $i14 = virtualinvoke $r12.<android.text.Layout: int getEllipsisCount(int)>($i13);

        if $i14 <= 0 goto label07;

        $z8 = 1;

        goto label10;

     label07:
        $z8 = 0;

        goto label10;

     label08:
        $r11 = r0.<androidx.compose.ui.text.android.TextLayout: android.text.Layout layout>;

        $i8 = r0.<androidx.compose.ui.text.android.TextLayout: int lineCount>;

        $i9 = $i8 - 1;

        $i10 = virtualinvoke $r11.<android.text.Layout: int getLineEnd(int)>($i9);

        $i11 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i10 == $i11 goto label09;

        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        r0.<androidx.compose.ui.text.android.TextLayout: boolean didExceedMaxLines> = $z8;

        return;
    }

    public void <init>(java.lang.CharSequence, float, android.text.TextPaint, int, android.text.TextUtils$TruncateAt, int, float, float, boolean, int, int, int, int, int[], int[], androidx.compose.ui.text.android.LayoutIntrinsics, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.android.TextLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.compose.ui.text.android.LayoutIntrinsics $r4, r8;
        float f0, f1, f2;
        android.text.TextUtils$TruncateAt r5;
        boolean z0;
        int[] r6, r7;

        r0 := @this: androidx.compose.ui.text.android.TextLayout;

        r1 := @parameter0: java.lang.CharSequence;

        f0 := @parameter1: float;

        r2 := @parameter2: android.text.TextPaint;

        i15 := @parameter3: int;

        r5 := @parameter4: android.text.TextUtils$TruncateAt;

        i16 := @parameter5: int;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        z0 := @parameter8: boolean;

        i17 := @parameter9: int;

        i18 := @parameter10: int;

        i19 := @parameter11: int;

        i20 := @parameter12: int;

        r6 := @parameter13: int[];

        r7 := @parameter14: int[];

        r8 := @parameter15: androidx.compose.ui.text.android.LayoutIntrinsics;

        i0 := @parameter16: int;

        r3 := @parameter17: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label01;

        f0 = 0.0F;

     label01:
        $i2 = i0 & 8;

        if $i2 == 0 goto label02;

        i15 = 0;

     label02:
        $i3 = i0 & 16;

        if $i3 == 0 goto label03;

        r5 = (android.text.TextUtils$TruncateAt) null;

     label03:
        $i4 = i0 & 32;

        if $i4 == 0 goto label04;

        i16 = 2;

     label04:
        $i5 = i0 & 64;

        if $i5 == 0 goto label05;

        f1 = 1.0F;

     label05:
        $i6 = i0 & 128;

        if $i6 == 0 goto label06;

        f2 = 0.0F;

     label06:
        $i7 = i0 & 256;

        if $i7 == 0 goto label07;

        z0 = 1;

     label07:
        $i8 = i0 & 512;

        if $i8 == 0 goto label08;

        i17 = 2147483647;

     label08:
        $i9 = i0 & 1024;

        if $i9 == 0 goto label09;

        i18 = 0;

     label09:
        $i10 = i0 & 2048;

        if $i10 == 0 goto label10;

        i19 = 0;

     label10:
        $i11 = i0 & 4096;

        if $i11 == 0 goto label11;

        i20 = 0;

     label11:
        $i12 = i0 & 8192;

        if $i12 == 0 goto label12;

        r6 = (int[]) null;

     label12:
        $i13 = i0 & 16384;

        if $i13 == 0 goto label13;

        r7 = (int[]) null;

     label13:
        $i14 = i0 & 32768;

        if $i14 == 0 goto label14;

        $r4 = new androidx.compose.ui.text.android.LayoutIntrinsics;

        specialinvoke $r4.<androidx.compose.ui.text.android.LayoutIntrinsics: void <init>(java.lang.CharSequence,android.text.TextPaint,int)>(r1, r2, i16);

        r8 = $r4;

     label14:
        specialinvoke r0.<androidx.compose.ui.text.android.TextLayout: void <init>(java.lang.CharSequence,float,android.text.TextPaint,int,android.text.TextUtils$TruncateAt,int,float,float,boolean,int,int,int,int,int[],int[],androidx.compose.ui.text.android.LayoutIntrinsics)>(r1, f0, r2, i15, r5, i16, f1, f2, z0, i17, i18, i19, i20, r6, r7, r8);

        return;
    }

