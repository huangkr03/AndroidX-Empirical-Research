org.junit.runners.model.InvalidTestClassError
<org.junit.runners.model.InvalidTestClassError: long serialVersionUID>
<org.junit.runners.model.InvalidTestClassError: java.lang.String message>
    public void <init>(java.lang.Class, java.util.List)
    {
        org.junit.runners.model.InvalidTestClassError $r0;
        java.util.List $r1;
        java.lang.String $r2;
        java.lang.Class $r3;

        $r0 := @this: org.junit.runners.model.InvalidTestClassError;

        $r3 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.util.List;

        specialinvoke $r0.<org.junit.runners.model.InitializationError: void <init>(java.util.List)>($r1);

        $r2 = staticinvoke <org.junit.runners.model.InvalidTestClassError: java.lang.String createMessage(java.lang.Class,java.util.List)>($r3, $r1);

        $r0.<org.junit.runners.model.InvalidTestClassError: java.lang.String message> = $r2;

        return;
    }

    private static java.lang.String createMessage(java.lang.Class, java.util.List)
    {
        java.lang.StringBuilder $r0, $r8;
        java.lang.Class $r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Throwable $r7;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = 1;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3[0] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid test class \'%s\':", $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.Throwable) $r6;

        $r4 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getMessage()
    {
        org.junit.runners.model.InvalidTestClassError $r0;
        java.lang.String r1;

        $r0 := @this: org.junit.runners.model.InvalidTestClassError;

        r1 = $r0.<org.junit.runners.model.InvalidTestClassError: java.lang.String message>;

        return r1;
    }

