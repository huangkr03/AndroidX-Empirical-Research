androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: kotlin.jvm.functions.Function4 itemContentProvider>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: java.util.Map keyToIndexMap>
    public void <init>(kotlin.jvm.functions.Function4, androidx.compose.foundation.lazy.layout.IntervalList, kotlin.ranges.IntRange)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        kotlin.jvm.functions.Function4 r1;
        androidx.compose.foundation.lazy.layout.IntervalList r2, $r4;
        kotlin.ranges.IntRange r3;
        java.util.Map $r5;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        r1 := @parameter0: kotlin.jvm.functions.Function4;

        r2 := @parameter1: androidx.compose.foundation.lazy.layout.IntervalList;

        r3 := @parameter2: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "itemContentProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "intervals");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "nearestItemsRange");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: kotlin.jvm.functions.Function4 itemContentProvider> = r1;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals> = r2;

        $r4 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        $r5 = specialinvoke r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: java.util.Map generateKeyToIndexMap(kotlin.ranges.IntRange,androidx.compose.foundation.lazy.layout.IntervalList)>(r3, $r4);

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: java.util.Map keyToIndexMap> = $r5;

        return;
    }

    public final kotlin.jvm.functions.Function4 getItemContentProvider()
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        kotlin.jvm.functions.Function4 $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: kotlin.jvm.functions.Function4 itemContentProvider>;

        return $r1;
    }

    public final androidx.compose.foundation.lazy.layout.IntervalList getIntervals()
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        androidx.compose.foundation.lazy.layout.IntervalList $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        return $r1;
    }

    public int getItemCount()
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        androidx.compose.foundation.lazy.layout.IntervalList $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        $i0 = interfaceinvoke $r1.<androidx.compose.foundation.lazy.layout.IntervalList: int getSize()>();

        return $i0;
    }

    public java.util.Map getKeyToIndexMap()
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        $r1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: java.util.Map keyToIndexMap>;

        return $r1;
    }

    public void Item(int, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0, r1;
        int i0, $i1, i2, i3, $i4, $i5, $i6, $i8, $i10, $i12;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r2;
        androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent r3;
        boolean $z2, $z3, $z4, $z5, $z6;
        androidx.compose.foundation.lazy.layout.IntervalList $r4;
        java.lang.Object $r5;
        kotlin.jvm.functions.Function4 $r6;
        java.lang.Integer $r7, $r8;
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2 $r10;
        kotlin.jvm.functions.Function2 $r11;
        androidx.compose.runtime.Composer $r12, $r13;
        byte $b9, $b11;
        androidx.compose.runtime.ScopeUpdateScope $r14;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        i0 := @parameter0: int;

        $r12 := @parameter1: androidx.compose.runtime.Composer;

        $i1 := @parameter2: int;

        $r13 = interfaceinvoke $r12.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-1877726744);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r13, "C(Item)*117@4203L31:LazyLayoutItemProvider.kt#wow0x6");

        $i8 = $i1;

        $i4 = $i1 & 14;

        if $i4 != 0 goto label03;

        $z6 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: boolean changed(int)>(i0);

        if $z6 == 0 goto label01;

        $b9 = 4;

        goto label02;

     label01:
        $b9 = 2;

     label02:
        $i8 = $i1 | $b9;

     label03:
        $i10 = $i1 & 112;

        if $i10 != 0 goto label06;

        $i6 = $i8;

        $z5 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        if $z5 == 0 goto label04;

        $b11 = 32;

        goto label05;

     label04:
        $b11 = 16;

     label05:
        $i8 = $i6 | $b11;

     label06:
        $i12 = $i8 & 91;

        if $i12 != 18 goto label07;

        $z4 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z4 != 0 goto label09;

     label07:
        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label08;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1877726744, $i1, -1, "androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider.Item (LazyLayoutItemProvider.kt:115)");

     label08:
        r1 = r0;

        $r4 = r1.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        r2 = interfaceinvoke $r4.<androidx.compose.foundation.lazy.layout.IntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval get(int)>(i0);

        $i5 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        i2 = i0 - $i5;

        $r5 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        r3 = (androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent) $r5;

        i3 = i2;

        $r6 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: kotlin.jvm.functions.Function4 itemContentProvider>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r6.<kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r3, $r7, $r13, $r8);

        $z3 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z3 == 0 goto label10;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label10;

     label09:
        interfaceinvoke $r13.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label10:
        $r14 = interfaceinvoke $r13.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r14 != null goto label11;

        goto label12;

     label11:
        $r10 = new androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2;

        specialinvoke $r10.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: void <init>(androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider,int,int)>(r0, i0, $i1);

        $r11 = (kotlin.jvm.functions.Function2) $r10;

        interfaceinvoke $r14.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r11);

     label12:
        return;
    }

    public java.lang.Object getKey(int)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0, r1;
        int i0, i1, i2, $i3;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r2;
        androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent r3;
        androidx.compose.foundation.lazy.layout.IntervalList $r4;
        java.lang.Object $r5, $r8;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Integer $r7;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        i0 := @parameter0: int;

        r1 = r0;

        $r4 = r1.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        r2 = interfaceinvoke $r4.<androidx.compose.foundation.lazy.layout.IntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval get(int)>(i0);

        $i3 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        i1 = i0 - $i3;

        $r5 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        r3 = (androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent) $r5;

        i2 = i1;

        $r6 = interfaceinvoke r3.<androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent: kotlin.jvm.functions.Function1 getKey()>();

        if $r6 == null goto label1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        if $r8 != null goto label2;

     label1:
        $r8 = staticinvoke <androidx.compose.foundation.lazy.layout.Lazy_androidKt: java.lang.Object getDefaultLazyLayoutKey(int)>(i0);

     label2:
        return $r8;
    }

    public java.lang.Object getContentType(int)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0, r1;
        int i0, i1, i2, $i3;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r2;
        androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent r3;
        androidx.compose.foundation.lazy.layout.IntervalList $r4;
        java.lang.Object $r5, $r8;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Integer $r7;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        i0 := @parameter0: int;

        r1 = r0;

        $r4 = r1.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        r2 = interfaceinvoke $r4.<androidx.compose.foundation.lazy.layout.IntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval get(int)>(i0);

        $i3 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        i1 = i0 - $i3;

        $r5 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        r3 = (androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent) $r5;

        i2 = i1;

        $r6 = interfaceinvoke r3.<androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent: kotlin.jvm.functions.Function1 getType()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r8 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        return $r8;
    }

    private final java.lang.Object withLocalIntervalIndex(int, kotlin.jvm.functions.Function2)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        int i0, i1, $i2;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r2;
        androidx.compose.foundation.lazy.layout.IntervalList $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: androidx.compose.foundation.lazy.layout.IntervalList intervals>;

        r2 = interfaceinvoke $r3.<androidx.compose.foundation.lazy.layout.IntervalList: androidx.compose.foundation.lazy.layout.IntervalList$Interval get(int)>(i0);

        $i2 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        i1 = i0 - $i2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = virtualinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r6;
    }

    private final java.util.Map generateKeyToIndexMap(kotlin.ranges.IntRange, androidx.compose.foundation.lazy.layout.IntervalList)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider r0;
        kotlin.ranges.IntRange r1;
        androidx.compose.foundation.lazy.layout.IntervalList r2;
        int i0, i1, $i2, $i3, $i4;
        java.util.HashMap r3, $r4, r11;
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r9;
        boolean $z1;
        java.util.Map $r10;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        r1 := @parameter0: kotlin.ranges.IntRange;

        r2 := @parameter1: androidx.compose.foundation.lazy.layout.IntervalList;

        i0 = virtualinvoke r1.<kotlin.ranges.IntRange: int getFirst()>();

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        r9 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        $i2 = virtualinvoke r1.<kotlin.ranges.IntRange: int getLast()>();

        $i3 = interfaceinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList: int getSize()>();

        $i4 = $i3 - 1;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i4);

        if i1 >= i0 goto label4;

        $r10 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        goto label5;

     label4:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r11 = $r4;

        r3 = r11;

        $r5 = new androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1;

        specialinvoke $r5.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: void <init>(int,int,java.util.HashMap)>(i0, i1, r3);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        interfaceinvoke r2.<androidx.compose.foundation.lazy.layout.IntervalList: void forEach(int,int,kotlin.jvm.functions.Function1)>(i0, i1, $r6);

        $r10 = (java.util.Map) r11;

     label5:
        return $r10;
    }

androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $first>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $last>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: java.util.HashMap $map>
    void <init>(int, int, java.util.HashMap)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1 r0;
        int $i0, $i1;
        java.util.HashMap $r1;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.util.HashMap;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $first> = $i0;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $last> = $i1;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: java.util.HashMap $map> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.foundation.lazy.layout.IntervalList$Interval)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1 r0;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval r1;
        kotlin.jvm.functions.Function1 r2, $r6, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        java.lang.Integer r3, $r12;
        java.lang.Object $r4, $r7, $r13;
        androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent $r5, $r8;
        java.util.HashMap $r10;
        java.util.Map $r11;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r16, r17;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1;

        r1 := @parameter0: androidx.compose.foundation.lazy.layout.IntervalList$Interval;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r4 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        $r5 = (androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent) $r4;

        $r6 = interfaceinvoke $r5.<androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent: kotlin.jvm.functions.Function1 getKey()>();

        if $r6 == null goto label3;

        $r7 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: java.lang.Object getValue()>();

        $r8 = (androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent) $r7;

        $r9 = interfaceinvoke $r8.<androidx.compose.foundation.lazy.layout.LazyLayoutIntervalContent: kotlin.jvm.functions.Function1 getKey()>();

        if $r9 != null goto label1;

        r17 = "Required value was null.";

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label1:
        r2 = $r9;

        $i1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $first>;

        $i2 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $i3 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: int $last>;

        $i4 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        $i5 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getSize()>();

        $i6 = $i4 + $i5;

        $i7 = $i6 - 1;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i7);

        i11 = i0;

        if i11 > i10 goto label3;

     label2:
        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r10 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: java.util.HashMap $map>;

        $r11 = (java.util.Map) $r10;

        $i8 = virtualinvoke r1.<androidx.compose.foundation.lazy.layout.IntervalList$Interval: int getStartIndex()>();

        $i9 = i11 - $i8;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r13 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r12);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r3);

        if i11 == i10 goto label3;

        i11 = i11 + 1;

        goto label2;

     label3:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1 r0;
        java.lang.Object r1;
        androidx.compose.foundation.lazy.layout.IntervalList$Interval $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.foundation.lazy.layout.IntervalList$Interval) r1;

        virtualinvoke r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$generateKeyToIndexMap$1$1: void invoke(androidx.compose.foundation.lazy.layout.IntervalList$Interval)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider $tmp0_rcvr>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $index>
<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $$changed>
    void <init>(androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider, int, int)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2 r0;
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider $r1;
        int $i0, $i1;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2;

        $r1 := @parameter0: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider $tmp0_rcvr> = $r1;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $index> = $i0;

        r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $$changed> = $i1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2, $i3;
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider $r2;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider $tmp0_rcvr>;

        $i3 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $index>;

        $i1 = r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r2.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider: void Item(int,androidx.compose.runtime.Composer,int)>($i3, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.foundation.lazy.layout.DefaultLazyLayoutItemsProvider$Item$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

