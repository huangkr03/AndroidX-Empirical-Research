androidx.test.services.events.FailureInfo
<androidx.test.services.events.FailureInfo: android.os.Parcelable$Creator CREATOR>
<androidx.test.services.events.FailureInfo: java.lang.String failureMessage>
<androidx.test.services.events.FailureInfo: java.lang.String failureType>
<androidx.test.services.events.FailureInfo: java.lang.String stackTrace>
<androidx.test.services.events.FailureInfo: androidx.test.services.events.TestCaseInfo testCase>
    public int describeContents()
    {
        androidx.test.services.events.FailureInfo r0;

        r0 := @this: androidx.test.services.events.FailureInfo;

        return 0;
    }

    static void <clinit>()
    {
        androidx.test.services.events.FailureInfo$1 $r0;

        $r0 = new androidx.test.services.events.FailureInfo$1;

        specialinvoke $r0.<androidx.test.services.events.FailureInfo$1: void <init>()>();

        <androidx.test.services.events.FailureInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.test.services.events.FailureInfo r0;
        android.os.Parcel r1;
        java.lang.String $r3, $r4, $r5;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        android.os.Parcelable $r8;
        androidx.test.services.events.TestCaseInfo $r9;

        r0 := @this: androidx.test.services.events.FailureInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source cannot be null");

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.test.services.events.FailureInfo: java.lang.String failureMessage> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.test.services.events.FailureInfo: java.lang.String failureType> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.test.services.events.FailureInfo: java.lang.String stackTrace> = $r5;

        $r6 = class "Landroidx/test/services/events/TestCaseInfo;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r7);

        $r9 = (androidx.test.services.events.TestCaseInfo) $r8;

        r0.<androidx.test.services.events.FailureInfo: androidx.test.services.events.TestCaseInfo testCase> = $r9;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, androidx.test.services.events.TestCaseInfo)
    {
        androidx.test.services.events.FailureInfo r0;
        java.lang.String r1, r2, r3;
        androidx.test.services.events.TestCaseInfo r4;

        r0 := @this: androidx.test.services.events.FailureInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.test.services.events.TestCaseInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "stackTrace cannot be null");

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "testCase cannot be null");

        r0.<androidx.test.services.events.FailureInfo: java.lang.String failureMessage> = r1;

        r0.<androidx.test.services.events.FailureInfo: java.lang.String failureType> = r2;

        r0.<androidx.test.services.events.FailureInfo: java.lang.String stackTrace> = r3;

        r0.<androidx.test.services.events.FailureInfo: androidx.test.services.events.TestCaseInfo testCase> = r4;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.test.services.events.FailureInfo r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2, $r3, $r4;
        androidx.test.services.events.TestCaseInfo $r5;

        r0 := @this: androidx.test.services.events.FailureInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.test.services.events.FailureInfo: java.lang.String failureMessage>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<androidx.test.services.events.FailureInfo: java.lang.String failureType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<androidx.test.services.events.FailureInfo: java.lang.String stackTrace>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $r5 = r0.<androidx.test.services.events.FailureInfo: androidx.test.services.events.TestCaseInfo testCase>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, i0);

        return;
    }

androidx.test.services.events.FailureInfo$1
    public androidx.test.services.events.FailureInfo createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.FailureInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.FailureInfo $r2;

        r0 := @this: androidx.test.services.events.FailureInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.test.services.events.FailureInfo;

        specialinvoke $r2.<androidx.test.services.events.FailureInfo: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.FailureInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.FailureInfo $r2;

        r0 := @this: androidx.test.services.events.FailureInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.test.services.events.FailureInfo$1: androidx.test.services.events.FailureInfo createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.services.events.FailureInfo$1 r0;

        r0 := @this: androidx.test.services.events.FailureInfo$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.test.services.events.FailureInfo[] newArray(int)
    {
        androidx.test.services.events.FailureInfo$1 r0;
        int i0;
        androidx.test.services.events.FailureInfo[] $r1;

        r0 := @this: androidx.test.services.events.FailureInfo$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.test.services.events.FailureInfo)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.test.services.events.FailureInfo$1 r0;
        int i0;
        androidx.test.services.events.FailureInfo[] $r1;

        r0 := @this: androidx.test.services.events.FailureInfo$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.services.events.FailureInfo$1: androidx.test.services.events.FailureInfo[] newArray(int)>(i0);

        return $r1;
    }

