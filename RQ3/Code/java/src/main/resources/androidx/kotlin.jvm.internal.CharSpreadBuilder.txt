kotlin.jvm.internal.CharSpreadBuilder
<kotlin.jvm.internal.CharSpreadBuilder: char[] values>
    public void <init>(int)
    {
        kotlin.jvm.internal.CharSpreadBuilder $r0;
        int $i0;
        char[] $r1;

        $r0 := @this: kotlin.jvm.internal.CharSpreadBuilder;

        $i0 := @parameter0: int;

        specialinvoke $r0.<kotlin.jvm.internal.PrimitiveSpreadBuilder: void <init>(int)>($i0);

        $r1 = newarray (char)[$i0];

        $r0.<kotlin.jvm.internal.CharSpreadBuilder: char[] values> = $r1;

        return;
    }

    public final void add(char)
    {
        kotlin.jvm.internal.CharSpreadBuilder $r0;
        char $c0;
        char[] $r1;
        int $i1, $i2;

        $r0 := @this: kotlin.jvm.internal.CharSpreadBuilder;

        $c0 := @parameter0: char;

        $r1 = $r0.<kotlin.jvm.internal.CharSpreadBuilder: char[] values>;

        $i2 = virtualinvoke $r0.<kotlin.jvm.internal.CharSpreadBuilder: int getPosition()>();

        $i1 = $i2 + 1;

        virtualinvoke $r0.<kotlin.jvm.internal.CharSpreadBuilder: void setPosition(int)>($i1);

        $r1[$i2] = $c0;

        return;
    }

    public volatile int getSize(java.lang.Object)
    {
        kotlin.jvm.internal.CharSpreadBuilder $r0;
        int $i0;
        java.lang.Object $r1;
        char[] $r2;

        $r0 := @this: kotlin.jvm.internal.CharSpreadBuilder;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (char[]) $r1;

        $i0 = virtualinvoke $r0.<kotlin.jvm.internal.CharSpreadBuilder: int getSize(char[])>($r2);

        return $i0;
    }

    protected int getSize(char[])
    {
        kotlin.jvm.internal.CharSpreadBuilder $r0;
        char[] $r1;
        int $i0;

        $r0 := @this: kotlin.jvm.internal.CharSpreadBuilder;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        return $i0;
    }

    public final char[] toArray()
    {
        kotlin.jvm.internal.CharSpreadBuilder $r0;
        char[] $r1, $r2;
        int $i0;
        java.lang.Object $r3;

        $r0 := @this: kotlin.jvm.internal.CharSpreadBuilder;

        $r1 = $r0.<kotlin.jvm.internal.CharSpreadBuilder: char[] values>;

        $i0 = virtualinvoke $r0.<kotlin.jvm.internal.CharSpreadBuilder: int size()>();

        $r2 = newarray (char)[$i0];

        $r3 = virtualinvoke $r0.<kotlin.jvm.internal.CharSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r1 = (char[]) $r3;

        return $r1;
    }

