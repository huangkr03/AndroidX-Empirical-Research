androidx.compose.ui.res.ImageVectorCache
<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map>
    public void <init>()
    {
        androidx.compose.ui.res.ImageVectorCache r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map> = $r1;

        return;
    }

    public final androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry get(androidx.compose.ui.res.ImageVectorCache$Key)
    {
        androidx.compose.ui.res.ImageVectorCache r0;
        androidx.compose.ui.res.ImageVectorCache$Key r1;
        java.util.HashMap $r2;
        java.lang.Object $r3, $r5;
        java.lang.ref.WeakReference $r4;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry $r6;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache;

        r1 := @parameter0: androidx.compose.ui.res.ImageVectorCache$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r2 = r0.<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.ref.WeakReference) $r3;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public final void prune(int)
    {
        androidx.compose.ui.res.ImageVectorCache r0;
        int i0, $i1;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r3;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r7, $r9;
        java.lang.ref.WeakReference $r8;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache;

        i0 := @parameter0: int;

        $r4 = r0.<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "it.next()");

        r2 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.ref.WeakReference) $r7;

        $r9 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry) $r9;

        if r3 == null goto label2;

        $i1 = virtualinvoke r3.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int getConfigFlags()>();

        $z0 = staticinvoke <android.content.res.Configuration: boolean needNewResources(int,int)>(i0, $i1);

        if $z0 == 0 goto label1;

     label2:
        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label3:
        return;
    }

    public final void set(androidx.compose.ui.res.ImageVectorCache$Key, androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry)
    {
        androidx.compose.ui.res.ImageVectorCache r0;
        androidx.compose.ui.res.ImageVectorCache$Key r1;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r2;
        java.util.HashMap $r3;
        java.lang.ref.WeakReference $r4;
        java.util.Map $r5;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache;

        r1 := @parameter0: androidx.compose.ui.res.ImageVectorCache$Key;

        r2 := @parameter1: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "imageVectorEntry");

        $r3 = r0.<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map>;

        $r5 = (java.util.Map) $r3;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return;
    }

    public final void clear()
    {
        androidx.compose.ui.res.ImageVectorCache r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache: java.util.HashMap map>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry
<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>
<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>
<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int $stable>
    public void <init>(androidx.compose.ui.graphics.vector.ImageVector, int)
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        androidx.compose.ui.graphics.vector.ImageVector r1;
        int i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        r1 := @parameter0: androidx.compose.ui.graphics.vector.ImageVector;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "imageVector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector> = r1;

        r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags> = i0;

        return;
    }

    public final androidx.compose.ui.graphics.vector.ImageVector getImageVector()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        androidx.compose.ui.graphics.vector.ImageVector $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        return $r1;
    }

    public final int getConfigFlags()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        int $i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        return $i0;
    }

    public final androidx.compose.ui.graphics.vector.ImageVector component1()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        androidx.compose.ui.graphics.vector.ImageVector $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        return $r1;
    }

    public final int component2()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        int $i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        return $i0;
    }

    public final androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry copy(androidx.compose.ui.graphics.vector.ImageVector, int)
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0, $r2;
        androidx.compose.ui.graphics.vector.ImageVector r1;
        int i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        r1 := @parameter0: androidx.compose.ui.graphics.vector.ImageVector;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "imageVector");

        $r2 = new androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        specialinvoke $r2.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: void <init>(androidx.compose.ui.graphics.vector.ImageVector,int)>(r1, i0);

        return $r2;
    }

    public static androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry copy$default(androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry, androidx.compose.ui.graphics.vector.ImageVector, int, int, java.lang.Object)
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0, $r2;
        int i0, $i1, $i2, i3;
        java.lang.Object r1;
        androidx.compose.ui.graphics.vector.ImageVector r3;

        r0 := @parameter0: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        r3 := @parameter1: androidx.compose.ui.graphics.vector.ImageVector;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i3 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry copy(androidx.compose.ui.graphics.vector.ImageVector,int)>(r3, i3);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        androidx.compose.ui.graphics.vector.ImageVector $r3;
        int $i0;
        java.lang.String $r8;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageVectorEntry(imageVector=");

        $r3 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", configFlags=");

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int hashCode()
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0;
        androidx.compose.ui.graphics.vector.ImageVector $r1;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        i3 = virtualinvoke $r1.<androidx.compose.ui.graphics.vector.ImageVector: int hashCode()>();

        $i1 = i3 * 31;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        $i2 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        androidx.compose.ui.graphics.vector.ImageVector $r3, $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry) r1;

        $r4 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        $r3 = r2.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector imageVector>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = r0.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        $i0 = r2.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: int configFlags>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        return;
    }

androidx.compose.ui.res.ImageVectorCache$Key
<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>
<androidx.compose.ui.res.ImageVectorCache$Key: int id>
<androidx.compose.ui.res.ImageVectorCache$Key: int $stable>
    public void <init>(android.content.res.Resources$Theme, int)
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        android.content.res.Resources$Theme r1;
        int i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        r1 := @parameter0: android.content.res.Resources$Theme;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "theme");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme> = r1;

        r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id> = i0;

        return;
    }

    public final android.content.res.Resources$Theme getTheme()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        android.content.res.Resources$Theme $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        return $r1;
    }

    public final int getId()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        int $i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        return $i0;
    }

    public final android.content.res.Resources$Theme component1()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        android.content.res.Resources$Theme $r1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        return $r1;
    }

    public final int component2()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        int $i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        return $i0;
    }

    public final androidx.compose.ui.res.ImageVectorCache$Key copy(android.content.res.Resources$Theme, int)
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0, $r2;
        android.content.res.Resources$Theme r1;
        int i0;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        r1 := @parameter0: android.content.res.Resources$Theme;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "theme");

        $r2 = new androidx.compose.ui.res.ImageVectorCache$Key;

        specialinvoke $r2.<androidx.compose.ui.res.ImageVectorCache$Key: void <init>(android.content.res.Resources$Theme,int)>(r1, i0);

        return $r2;
    }

    public static androidx.compose.ui.res.ImageVectorCache$Key copy$default(androidx.compose.ui.res.ImageVectorCache$Key, android.content.res.Resources$Theme, int, int, java.lang.Object)
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0, $r2;
        int i0, $i1, $i2, i3;
        java.lang.Object r1;
        android.content.res.Resources$Theme r3;

        r0 := @parameter0: androidx.compose.ui.res.ImageVectorCache$Key;

        r3 := @parameter1: android.content.res.Resources$Theme;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i3 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.ui.res.ImageVectorCache$Key: androidx.compose.ui.res.ImageVectorCache$Key copy(android.content.res.Resources$Theme,int)>(r3, i3);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        android.content.res.Resources$Theme $r3;
        int $i0;
        java.lang.String $r8;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key(theme=");

        $r3 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id=");

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int hashCode()
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0;
        android.content.res.Resources$Theme $r1;
        int $i0, $i1, $i2, i3, i4;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        $r1 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        i3 = virtualinvoke $r1.<android.content.res.Resources$Theme: int hashCode()>();

        $i1 = i3 * 31;

        $i0 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        $i2 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.ui.res.ImageVectorCache$Key r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        android.content.res.Resources$Theme $r3, $r4;
        int $i0, $i1;

        r0 := @this: androidx.compose.ui.res.ImageVectorCache$Key;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.ui.res.ImageVectorCache$Key;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.compose.ui.res.ImageVectorCache$Key) r1;

        $r4 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        $r3 = r2.<androidx.compose.ui.res.ImageVectorCache$Key: android.content.res.Resources$Theme theme>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = r0.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        $i0 = r2.<androidx.compose.ui.res.ImageVectorCache$Key: int id>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.res.ImageVectorCache$Key: int $stable> = 8;

        return;
    }

