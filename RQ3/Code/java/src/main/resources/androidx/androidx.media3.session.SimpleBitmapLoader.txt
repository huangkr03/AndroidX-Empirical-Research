androidx.media3.session.SimpleBitmapLoader
<androidx.media3.session.SimpleBitmapLoader: java.lang.String FILE_URI_EXCEPTION_MESSAGE>
<androidx.media3.session.SimpleBitmapLoader: com.google.common.base.Supplier DEFAULT_EXECUTOR_SERVICE>
<androidx.media3.session.SimpleBitmapLoader: com.google.common.util.concurrent.ListeningExecutorService executorService>
    public void <init>()
    {
        androidx.media3.session.SimpleBitmapLoader r0;
        com.google.common.base.Supplier $r1;
        java.lang.Object $r2, $r4;
        com.google.common.util.concurrent.ListeningExecutorService $r3;
        java.util.concurrent.ExecutorService $r5;

        r0 := @this: androidx.media3.session.SimpleBitmapLoader;

        $r1 = <androidx.media3.session.SimpleBitmapLoader: com.google.common.base.Supplier DEFAULT_EXECUTOR_SERVICE>;

        $r2 = interfaceinvoke $r1.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r3 = (com.google.common.util.concurrent.ListeningExecutorService) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        $r5 = (java.util.concurrent.ExecutorService) $r4;

        specialinvoke r0.<androidx.media3.session.SimpleBitmapLoader: void <init>(java.util.concurrent.ExecutorService)>($r5);

        return;
    }

    public void <init>(java.util.concurrent.ExecutorService)
    {
        androidx.media3.session.SimpleBitmapLoader r0;
        java.util.concurrent.ExecutorService r1;
        com.google.common.util.concurrent.ListeningExecutorService $r2;

        r0 := @this: androidx.media3.session.SimpleBitmapLoader;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>(r1);

        r0.<androidx.media3.session.SimpleBitmapLoader: com.google.common.util.concurrent.ListeningExecutorService executorService> = $r2;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture decodeBitmap(byte[])
    {
        androidx.media3.session.SimpleBitmapLoader r0;
        byte[] r1;
        com.google.common.util.concurrent.ListeningExecutorService $r2;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.SimpleBitmapLoader;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.media3.session.SimpleBitmapLoader: com.google.common.util.concurrent.ListeningExecutorService executorService>;

        $r3 = dynamicinvoke "call" <java.util.concurrent.Callable (byte[])>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.SimpleBitmapLoader: android.graphics.Bitmap lambda$decodeBitmap$1(byte[])>, methodtype: android.graphics.Bitmap __METHODTYPE__());

        $r4 = interfaceinvoke $r2.<com.google.common.util.concurrent.ListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture loadBitmap(android.net.Uri)
    {
        androidx.media3.session.SimpleBitmapLoader r0;
        android.net.Uri r1;
        com.google.common.util.concurrent.ListeningExecutorService $r2;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.SimpleBitmapLoader;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.media3.session.SimpleBitmapLoader: com.google.common.util.concurrent.ListeningExecutorService executorService>;

        $r3 = dynamicinvoke "call" <java.util.concurrent.Callable (android.net.Uri)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.SimpleBitmapLoader: android.graphics.Bitmap lambda$loadBitmap$2(android.net.Uri)>, methodtype: android.graphics.Bitmap __METHODTYPE__());

        $r4 = interfaceinvoke $r2.<com.google.common.util.concurrent.ListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    private static android.graphics.Bitmap decode(byte[])
    {
        byte[] r0;
        android.graphics.Bitmap r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r0, 0, $i0);

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "Could not decode image data");

        return r1;
    }

    private static android.graphics.Bitmap load(android.net.Uri) throws java.io.IOException
    {
        android.net.Uri r0;
        int i0;
        java.io.InputStream r1;
        java.lang.Throwable r2, $r21, $r22, r28;
        java.lang.String $r3, $r4, $r6, $r12, $r16, $r18, r23;
        boolean $z0, $z1;
        java.net.URL $r5;
        byte[] $r7;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r15, $r17;
        java.lang.UnsupportedOperationException $r13;
        java.lang.IllegalArgumentException $r19, $r20;
        android.graphics.Bitmap r24, r27;
        java.net.URLConnection r25;
        java.net.HttpURLConnection r26;

        r0 := @parameter0: android.net.Uri;

        $r3 = "file";

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label03;

        r23 = virtualinvoke r0.<android.net.Uri: java.lang.String getPath()>();

        if r23 != null goto label01;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not read image from file");

        throw $r20;

     label01:
        r24 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r23);

        if r24 != null goto label02;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not read image from file");

        throw $r19;

     label02:
        return r24;

     label03:
        $r5 = new java.net.URL;

        $r6 = virtualinvoke r0.<android.net.Uri: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r6);

        r25 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $z1 = r25 instanceof java.net.HttpURLConnection;

        if $z1 != 0 goto label04;

        $r13 = new java.lang.UnsupportedOperationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported scheme: ");

        $r16 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label04:
        r26 = (java.net.HttpURLConnection) r25;

        virtualinvoke r26.<java.net.HttpURLConnection: void connect()>();

        i0 = virtualinvoke r26.<java.net.HttpURLConnection: int getResponseCode()>();

        if i0 == 200 goto label05;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid response status code: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label05:
        r1 = virtualinvoke r26.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label06:
        $r7 = staticinvoke <com.google.common.io.ByteStreams: byte[] toByteArray(java.io.InputStream)>(r1);

        r27 = staticinvoke <androidx.media3.session.SimpleBitmapLoader: android.graphics.Bitmap decode(byte[])>($r7);

     label07:
        if r1 == null goto label08;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label08:
        return r27;

     label09:
        $r22 := @caughtexception;

        r28 = $r22;

        if r1 == null goto label13;

     label10:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r21 := @caughtexception;

        r2 = $r21;

        virtualinvoke r28.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r2);

     label13:
        throw r28;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private static android.graphics.Bitmap lambda$loadBitmap$2(android.net.Uri) throws java.lang.Exception
    {
        android.net.Uri r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <androidx.media3.session.SimpleBitmapLoader: android.graphics.Bitmap load(android.net.Uri)>(r0);

        return $r1;
    }

    private static android.graphics.Bitmap lambda$decodeBitmap$1(byte[]) throws java.lang.Exception
    {
        byte[] r0;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <androidx.media3.session.SimpleBitmapLoader: android.graphics.Bitmap decode(byte[])>(r0);

        return $r1;
    }

    private static com.google.common.util.concurrent.ListeningExecutorService lambda$static$0()
    {
        java.util.concurrent.ExecutorService $r0;
        com.google.common.util.concurrent.ListeningExecutorService $r1;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r1 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.google.common.base.Supplier $r0, $r1;

        $r0 = dynamicinvoke "get" <com.google.common.base.Supplier ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.SimpleBitmapLoader: com.google.common.util.concurrent.ListeningExecutorService lambda$static$0()>, methodtype: com.google.common.util.concurrent.ListeningExecutorService __METHODTYPE__());

        $r1 = staticinvoke <com.google.common.base.Suppliers: com.google.common.base.Supplier memoize(com.google.common.base.Supplier)>($r0);

        <androidx.media3.session.SimpleBitmapLoader: com.google.common.base.Supplier DEFAULT_EXECUTOR_SERVICE> = $r1;

        return;
    }

