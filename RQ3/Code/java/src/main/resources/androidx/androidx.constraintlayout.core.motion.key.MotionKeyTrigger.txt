androidx.constraintlayout.core.motion.key.MotionKeyTrigger
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TAG>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String VIEW_TRANSITION_ON_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String VIEW_TRANSITION_ON_POSITIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String VIEW_TRANSITION_ON_NEGATIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String POST_LAYOUT>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TRIGGER_SLACK>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TRIGGER_COLLISION_VIEW>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TRIGGER_COLLISION_ID>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TRIGGER_ID>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String POSITIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String NEGATIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String TRIGGER_RECEIVER>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mCurveFit>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerReceiver>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mNegativeCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mPositiveCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerID>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerCollisionId>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mTriggerSlack>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireCrossReset>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireNegativeReset>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFirePositiveReset>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireThreshold>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireLastPos>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mPostLayout>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnNegativeCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnPositiveCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnCross>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_VIEW_TRANSITION_ON_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_VIEW_TRANSITION_ON_POSITIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_VIEW_TRANSITION_ON_NEGATIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_POST_LAYOUT>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_TRIGGER_SLACK>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_TRIGGER_COLLISION_VIEW>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_TRIGGER_COLLISION_ID>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_TRIGGER_ID>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_POSITIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_NEGATIVE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_TRIGGER_RECEIVER>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int TYPE_CROSS>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mCollisionRect>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mTargetRect>
<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int KEY_TYPE>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.constraintlayout.core.motion.utils.FloatRect $r1, $r2;
        java.util.HashMap $r3;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mCurveFit> = -1;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mCross> = null;

        $i0 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerReceiver> = $i0;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mNegativeCross> = null;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mPositiveCross> = null;

        $i1 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerID> = $i1;

        $i2 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerCollisionId> = $i2;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mTriggerSlack> = 0.1F;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireCrossReset> = 1;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireNegativeReset> = 1;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFirePositiveReset> = 1;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireThreshold> = #NaNF;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mPostLayout> = 0;

        $i3 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnNegativeCross> = $i3;

        $i4 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnPositiveCross> = $i4;

        $i5 = <androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int UNSET>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnCross> = $i5;

        $r1 = new androidx.constraintlayout.core.motion.utils.FloatRect;

        specialinvoke $r1.<androidx.constraintlayout.core.motion.utils.FloatRect: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mCollisionRect> = $r1;

        $r2 = new androidx.constraintlayout.core.motion.utils.FloatRect;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.FloatRect: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mTargetRect> = $r2;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mType> = 5;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.util.HashMap mCustom> = $r3;

        return;
    }

    public void getAttributeNames(java.util.HashSet)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        java.util.HashSet r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r1 := @parameter0: java.util.HashSet;

        return;
    }

    public void addValues(java.util.HashMap)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        java.util.HashMap r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r1 := @parameter0: java.util.HashMap;

        return;
    }

    public int getId(java.lang.String)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        byte b1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b1 = -1;

        $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1594793529: goto label09;
            case -966421266: goto label02;
            case -786670827: goto label07;
            case -648752941: goto label08;
            case -638126837: goto label10;
            case -76025313: goto label06;
            case -9754574: goto label03;
            case 364489912: goto label05;
            case 1301930599: goto label01;
            case 1401391082: goto label04;
            case 1535404999: goto label11;
            default: goto label12;
        };

     label01:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnCross");

        if $z2 == 0 goto label12;

        b1 = 0;

        goto label12;

     label02:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnPositiveCross");

        if $z9 == 0 goto label12;

        b1 = 1;

        goto label12;

     label03:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("viewTransitionOnNegativeCross");

        if $z4 == 0 goto label12;

        b1 = 2;

        goto label12;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("postLayout");

        if $z1 == 0 goto label12;

        b1 = 3;

        goto label12;

     label05:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("triggerSlack");

        if $z3 == 0 goto label12;

        b1 = 4;

        goto label12;

     label06:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("triggerCollisionView");

        if $z5 == 0 goto label12;

        b1 = 5;

        goto label12;

     label07:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("triggerCollisionId");

        if $z8 == 0 goto label12;

        b1 = 6;

        goto label12;

     label08:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("triggerID");

        if $z7 == 0 goto label12;

        b1 = 7;

        goto label12;

     label09:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("positiveCross");

        if $z10 == 0 goto label12;

        b1 = 8;

        goto label12;

     label10:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("negativeCross");

        if $z6 == 0 goto label12;

        b1 = 9;

        goto label12;

     label11:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("triggerReceiver");

        if $z0 == 0 goto label12;

        b1 = 10;

     label12:
        tableswitch(b1)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            case 6: goto label19;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label22;
            case 10: goto label23;
            default: goto label24;
        };

     label13:
        return 301;

     label14:
        return 302;

     label15:
        return 303;

     label16:
        return 304;

     label17:
        return 305;

     label18:
        return 306;

     label19:
        return 307;

     label20:
        return 308;

     label21:
        return 309;

     label22:
        return 310;

     label23:
        return 311;

     label24:
        return -1;
    }

    public androidx.constraintlayout.core.motion.key.MotionKeyTrigger copy(androidx.constraintlayout.core.motion.key.MotionKey)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0, r2;
        androidx.constraintlayout.core.motion.key.MotionKey r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5, $r6;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2, $z3;
        androidx.constraintlayout.core.motion.utils.FloatRect $r7, $r8;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r1 := @parameter0: androidx.constraintlayout.core.motion.key.MotionKey;

        specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey)>(r1);

        r2 = (androidx.constraintlayout.core.motion.key.MotionKeyTrigger) r1;

        $i0 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mCurveFit>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mCurveFit> = $i0;

        $r4 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mCross>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mCross> = $r4;

        $i1 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerReceiver>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerReceiver> = $i1;

        $r5 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mNegativeCross>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mNegativeCross> = $r5;

        $r6 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mPositiveCross>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mPositiveCross> = $r6;

        $i2 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerID>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerID> = $i2;

        $i3 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerCollisionId>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerCollisionId> = $i3;

        $f0 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mTriggerSlack>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mTriggerSlack> = $f0;

        $z0 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireCrossReset>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireCrossReset> = $z0;

        $z1 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireNegativeReset>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFireNegativeReset> = $z1;

        $z2 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFirePositiveReset>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mFirePositiveReset> = $z2;

        $f1 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireThreshold>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireThreshold> = $f1;

        $f2 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireLastPos>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mFireLastPos> = $f2;

        $z3 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mPostLayout>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mPostLayout> = $z3;

        $r7 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mCollisionRect>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mCollisionRect> = $r7;

        $r8 = r2.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mTargetRect>;

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.utils.FloatRect mTargetRect> = $r8;

        return r0;
    }

    public androidx.constraintlayout.core.motion.key.MotionKey clone()
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0, $r1, $r2;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        $r1 = new androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        specialinvoke $r1.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.key.MotionKeyTrigger copy(androidx.constraintlayout.core.motion.key.MotionKey)>(r0);

        return $r2;
    }

    private void fireCustom(java.lang.String, androidx.constraintlayout.core.motion.MotionWidget)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.lang.String r3, r4, $r12, r14;
        androidx.constraintlayout.core.motion.CustomVariable r5;
        int $i0;
        java.util.HashMap $r6, $r10;
        java.util.Set $r7;
        java.lang.Object $r8, $r11;
        java.util.Locale $r9, $r13;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.constraintlayout.core.motion.MotionWidget;

        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label3;

        $r12 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(1);

        $r13 = <java.util.Locale: java.util.Locale ROOT>;

        r14 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

     label3:
        $r6 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.util.HashMap mCustom>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        $r9 = <java.util.Locale: java.util.Locale ROOT>;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        if z0 != 0 goto label5;

        $z1 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>(r14);

        if $z1 == 0 goto label6;

     label5:
        $r10 = r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.util.HashMap mCustom>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (androidx.constraintlayout.core.motion.CustomVariable) $r11;

        if r5 == null goto label6;

        virtualinvoke r5.<androidx.constraintlayout.core.motion.CustomVariable: void applyToWidget(androidx.constraintlayout.core.motion.MotionWidget)>(r1);

     label6:
        goto label4;

     label7:
        return;
    }

    public void conditionallyFire(float, androidx.constraintlayout.core.motion.MotionWidget)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        float f0;
        androidx.constraintlayout.core.motion.MotionWidget r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.constraintlayout.core.motion.MotionWidget;

        return;
    }

    public boolean setValue(int, int)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        int i0, i1, $i2;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i0)
        {
            case 301: goto label6;
            case 302: goto label5;
            case 303: goto label4;
            case 304: goto label7;
            case 305: goto label7;
            case 306: goto label7;
            case 307: goto label3;
            case 308: goto label2;
            case 309: goto label7;
            case 310: goto label7;
            case 311: goto label1;
            default: goto label7;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerReceiver> = i1;

        goto label8;

     label2:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $i2 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int toInt(java.lang.Object)>($r1);

        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerID> = $i2;

        goto label8;

     label3:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mTriggerCollisionId> = i1;

        goto label8;

     label4:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnNegativeCross> = i1;

        goto label8;

     label5:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnPositiveCross> = i1;

        goto label8;

     label6:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: int mViewTransitionOnCross> = i1;

        goto label8;

     label7:
        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,int)>(i0, i1);

        return $z0;

     label8:
        return 1;
    }

    public boolean setValue(int, float)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        int i0;
        float f0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        lookupswitch(i0)
        {
            case 305: goto label1;
            default: goto label2;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: float mTriggerSlack> = f0;

        goto label3;

     label2:
        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,float)>(i0, f0);

        return $z0;

     label3:
        return 1;
    }

    public boolean setValue(int, java.lang.String)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case 309: goto label3;
            case 310: goto label2;
            case 311: goto label4;
            case 312: goto label1;
            default: goto label4;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mCross> = r1;

        goto label5;

     label2:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mNegativeCross> = r1;

        goto label5;

     label3:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: java.lang.String mPositiveCross> = r1;

        goto label5;

     label4:
        $z0 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,java.lang.String)>(i0, r1);

        return $z0;

     label5:
        return 1;
    }

    public boolean setValue(int, boolean)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        int i0;
        boolean z0, $z1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        lookupswitch(i0)
        {
            case 304: goto label1;
            default: goto label2;
        };

     label1:
        r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: boolean mPostLayout> = z0;

        goto label3;

     label2:
        $z1 = specialinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKey: boolean setValue(int,boolean)>(i0, z0);

        return $z1;

     label3:
        return 1;
    }

    public volatile androidx.constraintlayout.core.motion.key.MotionKey copy(androidx.constraintlayout.core.motion.key.MotionKey)
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0, $r2;
        androidx.constraintlayout.core.motion.key.MotionKey r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        r1 := @parameter0: androidx.constraintlayout.core.motion.key.MotionKey;

        $r2 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.key.MotionKeyTrigger copy(androidx.constraintlayout.core.motion.key.MotionKey)>(r1);

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        androidx.constraintlayout.core.motion.key.MotionKeyTrigger r0;
        androidx.constraintlayout.core.motion.key.MotionKey $r1;

        r0 := @this: androidx.constraintlayout.core.motion.key.MotionKeyTrigger;

        $r1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.key.MotionKeyTrigger: androidx.constraintlayout.core.motion.key.MotionKey clone()>();

        return $r1;
    }

