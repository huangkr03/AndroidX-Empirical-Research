androidx.compose.ui.test.AndroidComposeUiTestEnvironment
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingResourceRegistry idlingResourceRegistry>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.MainTestClockImpl mainClockImpl>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestDispatcher testCoroutineDispatcher>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.ApplyingContinuationInterceptor recomposerContinuationInterceptor>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl testReceiverScope>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner testOwner>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.TestContext testContext>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test>
<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: int $stable>
    public void <init>()
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        androidx.compose.ui.test.TestMonotonicFrameClock r1;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$infiniteAnimationPolicy$1 r2, $r20;
        androidx.compose.ui.test.junit4.IdlingResourceRegistry $r3, $r6;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r4, $r39;
        androidx.compose.ui.test.junit4.EspressoLink $r5;
        androidx.compose.ui.test.junit4.IdlingStrategy $r7;
        kotlinx.coroutines.test.TestDispatcher $r8, $r9, $r13, $r18;
        kotlin.coroutines.CoroutineContext $r10, $r21, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r35;
        kotlinx.coroutines.test.TestScope $r11, $r15;
        androidx.compose.ui.test.ApplyingContinuationInterceptor $r12, $r22;
        androidx.compose.ui.test.junit4.UncaughtExceptionHandler $r14, $r26;
        kotlinx.coroutines.CoroutineScope $r16, $r32, $r34;
        androidx.compose.ui.test.junit4.MainTestClockImpl $r17, $r38;
        kotlinx.coroutines.test.TestCoroutineScheduler $r19;
        kotlinx.coroutines.CompletableJob $r29;
        androidx.compose.runtime.Recomposer $r33, $r37;
        androidx.compose.ui.test.junit4.ComposeIdlingResource $r36;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl $r40, $r45;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner $r41, $r42;
        androidx.compose.ui.test.TestOwner $r43;
        androidx.compose.ui.test.TestContext $r44;
        androidx.compose.ui.test.AndroidComposeUiTest $r46;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new androidx.compose.ui.test.junit4.IdlingResourceRegistry;

        specialinvoke $r3.<androidx.compose.ui.test.junit4.IdlingResourceRegistry: void <init>()>();

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingResourceRegistry idlingResourceRegistry> = $r3;

        $r4 = new androidx.compose.ui.test.junit4.ComposeRootRegistry;

        specialinvoke $r4.<androidx.compose.ui.test.junit4.ComposeRootRegistry: void <init>()>();

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry> = $r4;

        $r5 = new androidx.compose.ui.test.junit4.EspressoLink;

        $r6 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingResourceRegistry idlingResourceRegistry>;

        specialinvoke $r5.<androidx.compose.ui.test.junit4.EspressoLink: void <init>(androidx.compose.ui.test.junit4.IdlingResourceRegistry)>($r6);

        $r7 = (androidx.compose.ui.test.junit4.IdlingStrategy) $r5;

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy> = $r7;

        $r8 = staticinvoke <kotlinx.coroutines.test.TestCoroutineDispatchersKt: kotlinx.coroutines.test.TestDispatcher UnconfinedTestDispatcher$default(kotlinx.coroutines.test.TestCoroutineScheduler,java.lang.String,int,java.lang.Object)>(null, null, 3, null);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestDispatcher testCoroutineDispatcher> = $r8;

        $r9 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestDispatcher testCoroutineDispatcher>;

        $r10 = (kotlin.coroutines.CoroutineContext) $r9;

        $r11 = staticinvoke <kotlinx.coroutines.test.TestScopeKt: kotlinx.coroutines.test.TestScope TestScope(kotlin.coroutines.CoroutineContext)>($r10);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope> = $r11;

        $r12 = new androidx.compose.ui.test.ApplyingContinuationInterceptor;

        $r13 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestDispatcher testCoroutineDispatcher>;

        specialinvoke $r12.<androidx.compose.ui.test.ApplyingContinuationInterceptor: void <init>(kotlinx.coroutines.test.TestDispatcher)>($r13);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.ApplyingContinuationInterceptor recomposerContinuationInterceptor> = $r12;

        $r14 = new androidx.compose.ui.test.junit4.UncaughtExceptionHandler;

        specialinvoke $r14.<androidx.compose.ui.test.junit4.UncaughtExceptionHandler: void <init>()>();

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler> = $r14;

        $r15 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>;

        $r16 = (kotlinx.coroutines.CoroutineScope) $r15;

        r1 = staticinvoke <androidx.compose.ui.test.TestMonotonicFrameClock_jvmKt: androidx.compose.ui.test.TestMonotonicFrameClock TestMonotonicFrameClock$default(kotlinx.coroutines.CoroutineScope,long,int,java.lang.Object)>($r16, 0L, 2, null);

        $r17 = new androidx.compose.ui.test.junit4.MainTestClockImpl;

        $r18 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestDispatcher testCoroutineDispatcher>;

        $r19 = virtualinvoke $r18.<kotlinx.coroutines.test.TestDispatcher: kotlinx.coroutines.test.TestCoroutineScheduler getScheduler()>();

        specialinvoke $r17.<androidx.compose.ui.test.junit4.MainTestClockImpl: void <init>(kotlinx.coroutines.test.TestCoroutineScheduler,androidx.compose.ui.test.TestMonotonicFrameClock)>($r19, r1);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.MainTestClockImpl mainClockImpl> = $r17;

        $r20 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$infiniteAnimationPolicy$1;

        specialinvoke $r20.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$infiniteAnimationPolicy$1: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)>(r0);

        r2 = $r20;

        $r22 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.ApplyingContinuationInterceptor recomposerContinuationInterceptor>;

        $r21 = (kotlin.coroutines.CoroutineContext) r1;

        $r23 = virtualinvoke $r22.<androidx.compose.ui.test.ApplyingContinuationInterceptor: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r21);

        $r24 = (kotlin.coroutines.CoroutineContext) r2;

        $r25 = interfaceinvoke $r23.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r24);

        $r26 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>;

        $r27 = (kotlin.coroutines.CoroutineContext) $r26;

        $r28 = interfaceinvoke $r25.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r27);

        $r29 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        $r30 = (kotlin.coroutines.CoroutineContext) $r29;

        $r31 = interfaceinvoke $r28.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r30);

        $r32 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r31);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope> = $r32;

        $r33 = new androidx.compose.runtime.Recomposer;

        $r34 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope>;

        $r35 = interfaceinvoke $r34.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        specialinvoke $r33.<androidx.compose.runtime.Recomposer: void <init>(kotlin.coroutines.CoroutineContext)>($r35);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer> = $r33;

        $r36 = new androidx.compose.ui.test.junit4.ComposeIdlingResource;

        $r39 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        $r38 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.MainTestClockImpl mainClockImpl>;

        $r37 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer>;

        specialinvoke $r36.<androidx.compose.ui.test.junit4.ComposeIdlingResource: void <init>(androidx.compose.ui.test.junit4.ComposeRootRegistry,androidx.compose.ui.test.junit4.MainTestClockImpl,androidx.compose.runtime.Recomposer)>($r39, $r38, $r37);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource> = $r36;

        $r40 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl;

        specialinvoke $r40.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)>(r0);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl testReceiverScope> = $r40;

        $r41 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner;

        specialinvoke $r41.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)>(r0);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner testOwner> = $r41;

        $r42 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner testOwner>;

        $r43 = (androidx.compose.ui.test.TestOwner) $r42;

        $r44 = staticinvoke <androidx.compose.ui.test.TestOwnerKt: androidx.compose.ui.test.TestContext createTestContext(androidx.compose.ui.test.TestOwner)>($r43);

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.TestContext testContext> = $r44;

        $r45 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl testReceiverScope>;

        $r46 = (androidx.compose.ui.test.AndroidComposeUiTest) $r45;

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test> = $r46;

        return;
    }

    public final androidx.compose.ui.test.junit4.ComposeRootRegistry getComposeRootRegistry$ui_test_junit4_release()
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r1;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        return $r1;
    }

    public final androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl getTestReceiverScope$ui_test_junit4_release()
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl $r1;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidComposeUiTestImpl testReceiverScope>;

        return $r1;
    }

<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.activity.ComponentActivity getActivity()>
    public final androidx.compose.ui.test.AndroidComposeUiTest getTest()
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        androidx.compose.ui.test.AndroidComposeUiTest $r1;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test>;

        return $r1;
    }

    public final java.lang.Object runTest(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.String $r2, $r4;
        java.util.Locale $r3;
        boolean $z0;
        androidx.compose.ui.test.junit4.IdlingStrategy $r5, $r13;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$runTest$1 $r6;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r7, $r12;
        kotlin.jvm.functions.Function0 $r8;
        java.lang.Object $r9;
        androidx.compose.ui.test.junit4.RobolectricIdlingStrategy $r10;
        androidx.compose.ui.test.junit4.ComposeIdlingResource $r11;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = <android.os.Build: java.lang.String FINGERPRINT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "FINGERPRINT");

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, "robolectric");

        if $z0 == 0 goto label1;

        $r10 = new androidx.compose.ui.test.junit4.RobolectricIdlingStrategy;

        $r12 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        $r11 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>;

        specialinvoke $r10.<androidx.compose.ui.test.junit4.RobolectricIdlingStrategy: void <init>(androidx.compose.ui.test.junit4.ComposeRootRegistry,androidx.compose.ui.test.junit4.ComposeIdlingResource)>($r12, $r11);

        $r13 = (androidx.compose.ui.test.junit4.IdlingStrategy) $r10;

        r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy> = $r13;

     label1:
        $r5 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy>;

        interfaceinvoke $r5.<androidx.compose.ui.test.junit4.IdlingStrategy: void runUntilIdle()>();

        $r7 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        $r6 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$runTest$1;

        specialinvoke $r6.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$runTest$1: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment,kotlin.jvm.functions.Function1)>(r0, r1);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        $r9 = virtualinvoke $r7.<androidx.compose.ui.test.junit4.ComposeRootRegistry: java.lang.Object withRegistry(kotlin.jvm.functions.Function0)>($r8);

        return $r9;
    }

    private final void waitForIdle(boolean)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        boolean z0;
        androidx.compose.ui.test.junit4.ComposeRootRegistry $r1;
        androidx.compose.ui.test.junit4.IdlingStrategy $r2;
        androidx.compose.ui.test.junit4.UncaughtExceptionHandler $r3;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeRootRegistry composeRootRegistry>;

        staticinvoke <androidx.compose.ui.test.junit4.ComposeRootRegistry_androidKt: void waitForComposeRoots(androidx.compose.ui.test.junit4.ComposeRootRegistry,boolean)>($r1, z0);

        $r2 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy>;

        interfaceinvoke $r2.<androidx.compose.ui.test.junit4.IdlingStrategy: void runUntilIdle()>();

        $r3 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>;

        virtualinvoke $r3.<androidx.compose.ui.test.junit4.UncaughtExceptionHandler: void throwUncaught()>();

        return;
    }

    private final java.lang.Object withWindowRecomposer(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.platform.WindowRecomposerPolicy r2;
        androidx.compose.ui.platform.WindowRecomposerFactory r3, r4;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$1 $r5;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$2$1 $r6;
        kotlinx.coroutines.CoroutineScope $r7, $r10, $r18;
        kotlin.jvm.functions.Function2 $r8;
        androidx.compose.runtime.Recomposer $r9, $r17;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r11, $r14, r22, r26;
        java.lang.Throwable $r12, $r13, $r15, $r16, r20, r23, r24, r25;
        java.lang.Object r19;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 = <androidx.compose.ui.platform.WindowRecomposerPolicy: androidx.compose.ui.platform.WindowRecomposerPolicy INSTANCE>;

        $r5 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$1;

        specialinvoke $r5.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$1: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)>(r0);

        r3 = (androidx.compose.ui.platform.WindowRecomposerFactory) $r5;

        r4 = virtualinvoke r2.<androidx.compose.ui.platform.WindowRecomposerPolicy: androidx.compose.ui.platform.WindowRecomposerFactory getAndSetFactory(androidx.compose.ui.platform.WindowRecomposerFactory)>(r3);

     label01:
        $r7 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope>;

        $r6 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$2$1;

        specialinvoke $r6.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withWindowRecomposer$2$1: void <init>(androidx.compose.ui.test.AndroidComposeUiTestEnvironment,kotlin.coroutines.Continuation)>(r0, null);

        $r8 = (kotlin.jvm.functions.Function2) $r6;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r7, null, null, $r8, 3, null);

        r19 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label02:
        $r9 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer>;

        virtualinvoke $r9.<androidx.compose.runtime.Recomposer: void cancel()>();

        $r10 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r10, null, 1, null);

        goto label05;

     label03:
        $r16 := @caughtexception;

        r20 = $r16;

     label04:
        $r17 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer>;

        virtualinvoke $r17.<androidx.compose.runtime.Recomposer: void cancel()>();

        $r18 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.CoroutineScope recomposerCoroutineScope>;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r18, null, 1, null);

        throw r20;

     label05:
        $z0 = virtualinvoke r2.<androidx.compose.ui.platform.WindowRecomposerPolicy: boolean compareAndSetFactory(androidx.compose.ui.platform.WindowRecomposerFactory,androidx.compose.ui.platform.WindowRecomposerFactory)>(r3, r4);

        if $z0 != 0 goto label06;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("WindowRecomposerFactory was set to unexpected value; cannot safely restore old state");

        r22 = $r11;

        throw r22;

     label06:
        goto label12;

     label07:
        $r12 := @caughtexception;

        r23 = $r12;

        r24 = r23;

        throw r23;

     label08:
        $r13 := @caughtexception;

        r25 = $r13;

     label09:
        $z1 = virtualinvoke r2.<androidx.compose.ui.platform.WindowRecomposerPolicy: boolean compareAndSetFactory(androidx.compose.ui.platform.WindowRecomposerFactory,androidx.compose.ui.platform.WindowRecomposerFactory)>(r3, r4);

        if $z1 != 0 goto label11;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("WindowRecomposerFactory was set to unexpected value; cannot safely restore old state");

        r26 = $r14;

        if r24 != null goto label10;

        throw r26;

     label10:
        $r15 = (java.lang.Throwable) r26;

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>(r24, $r15);

        throw r24;

     label11:
        throw r25;

     label12:
        return r19;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label01 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final java.lang.Object withTestCoroutines(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTestCoroutines$1 $r2, $r9;
        kotlinx.coroutines.test.TestScope $r3, $r5, $r10, $r12;
        kotlin.jvm.functions.Function2 $r4, $r11;
        kotlinx.coroutines.CoroutineScope $r6, $r13;
        androidx.compose.ui.test.junit4.UncaughtExceptionHandler $r7, $r14;
        java.lang.Throwable $r8, r16;
        java.lang.Object r15;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

     label1:
        r15 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        $r3 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>;

        $r2 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTestCoroutines$1;

        specialinvoke $r2.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTestCoroutines$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        staticinvoke <kotlinx.coroutines.test.TestBuildersKt: void runTest$default(kotlinx.coroutines.test.TestScope,long,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, 0L, $r4, 1, null);

        $r5 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>;

        $r6 = (kotlinx.coroutines.CoroutineScope) $r5;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r6, null, 1, null);

        $r7 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>;

        virtualinvoke $r7.<androidx.compose.ui.test.junit4.UncaughtExceptionHandler: void throwUncaught()>();

        return r15;

     label3:
        $r8 := @caughtexception;

        r16 = $r8;

     label4:
        $r10 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>;

        $r9 = new androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTestCoroutines$1;

        specialinvoke $r9.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTestCoroutines$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r11 = (kotlin.jvm.functions.Function2) $r9;

        staticinvoke <kotlinx.coroutines.test.TestBuildersKt: void runTest$default(kotlinx.coroutines.test.TestScope,long,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r10, 0L, $r11, 1, null);

        $r12 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: kotlinx.coroutines.test.TestScope testCoroutineScope>;

        $r13 = (kotlinx.coroutines.CoroutineScope) $r12;

        staticinvoke <kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)>($r13, null, 1, null);

        $r14 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>;

        virtualinvoke $r14.<androidx.compose.ui.test.junit4.UncaughtExceptionHandler: void throwUncaught()>();

        throw r16;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.Object withComposeIdlingResource(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.ui.test.junit4.ComposeIdlingResource $r2, $r5, $r9;
        androidx.compose.ui.test.IdlingResource $r3, $r6, $r10;
        androidx.compose.ui.test.AndroidComposeUiTest $r4, $r7, $r11;
        java.lang.Throwable $r8, r13;
        java.lang.Object r12;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

     label1:
        $r4 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test>;

        $r2 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>;

        $r3 = (androidx.compose.ui.test.IdlingResource) $r2;

        interfaceinvoke $r4.<androidx.compose.ui.test.AndroidComposeUiTest: void registerIdlingResource(androidx.compose.ui.test.IdlingResource)>($r3);

        r12 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        $r7 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test>;

        $r5 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>;

        $r6 = (androidx.compose.ui.test.IdlingResource) $r5;

        interfaceinvoke $r7.<androidx.compose.ui.test.AndroidComposeUiTest: void unregisterIdlingResource(androidx.compose.ui.test.IdlingResource)>($r6);

        return r12;

     label3:
        $r8 := @caughtexception;

        r13 = $r8;

     label4:
        $r11 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTest test>;

        $r9 = r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.ComposeIdlingResource composeIdlingResource>;

        $r10 = (androidx.compose.ui.test.IdlingResource) $r9;

        interfaceinvoke $r11.<androidx.compose.ui.test.AndroidComposeUiTest: void unregisterIdlingResource(androidx.compose.ui.test.IdlingResource)>($r10);

        throw r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.Object withTextInputService(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment r0;
        kotlin.jvm.functions.Function0 r1;
        kotlin.jvm.functions.Function1 r2, $r4;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTextInputService$1 $r3;
        java.lang.Throwable $r5, r7;
        java.lang.Object r6;

        r0 := @this: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        r2 = staticinvoke <androidx.compose.ui.platform.AndroidComposeView_androidKt: kotlin.jvm.functions.Function1 getTextInputServiceFactory()>();

     label1:
        $r3 = <androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTextInputService$1: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$withTextInputService$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        staticinvoke <androidx.compose.ui.platform.AndroidComposeView_androidKt: void setTextInputServiceFactory(kotlin.jvm.functions.Function1)>($r4);

        r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <androidx.compose.ui.platform.AndroidComposeView_androidKt: void setTextInputServiceFactory(kotlin.jvm.functions.Function1)>(r2);

        return r6;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

     label4:
        staticinvoke <androidx.compose.ui.platform.AndroidComposeView_androidKt: void setTextInputServiceFactory(kotlin.jvm.functions.Function1)>(r2);

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.ui.test.junit4.IdlingResourceRegistry access$getIdlingResourceRegistry$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.junit4.IdlingResourceRegistry $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingResourceRegistry idlingResourceRegistry>;

        return $r1;
    }

    public static final androidx.compose.ui.test.junit4.IdlingStrategy access$getIdlingStrategy$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.junit4.IdlingStrategy $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.IdlingStrategy idlingStrategy>;

        return $r1;
    }

    public static final java.lang.Object access$withTestCoroutines(androidx.compose.ui.test.AndroidComposeUiTestEnvironment, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = specialinvoke $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: java.lang.Object withTestCoroutines(kotlin.jvm.functions.Function0)>(r1);

        return $r2;
    }

    public static final java.lang.Object access$withWindowRecomposer(androidx.compose.ui.test.AndroidComposeUiTestEnvironment, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = specialinvoke $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: java.lang.Object withWindowRecomposer(kotlin.jvm.functions.Function0)>(r1);

        return $r2;
    }

    public static final java.lang.Object access$withComposeIdlingResource(androidx.compose.ui.test.AndroidComposeUiTestEnvironment, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = specialinvoke $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: java.lang.Object withComposeIdlingResource(kotlin.jvm.functions.Function0)>(r1);

        return $r2;
    }

    public static final java.lang.Object access$withTextInputService(androidx.compose.ui.test.AndroidComposeUiTestEnvironment, kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        $r2 = specialinvoke $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: java.lang.Object withTextInputService(kotlin.jvm.functions.Function0)>(r1);

        return $r2;
    }

    public static final androidx.compose.runtime.Recomposer access$getRecomposer$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.runtime.Recomposer $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.runtime.Recomposer recomposer>;

        return $r1;
    }

    public static final androidx.compose.ui.test.junit4.MainTestClockImpl access$getMainClockImpl$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.junit4.MainTestClockImpl $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.MainTestClockImpl mainClockImpl>;

        return $r1;
    }

    public static final androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner access$getTestOwner$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.AndroidComposeUiTestEnvironment$AndroidTestOwner testOwner>;

        return $r1;
    }

    public static final void access$waitForIdle(androidx.compose.ui.test.AndroidComposeUiTestEnvironment, boolean)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        boolean z0;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: void waitForIdle(boolean)>(z0);

        return;
    }

    public static final androidx.compose.ui.test.junit4.UncaughtExceptionHandler access$getCoroutineExceptionHandler$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.junit4.UncaughtExceptionHandler $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.junit4.UncaughtExceptionHandler coroutineExceptionHandler>;

        return $r1;
    }

    public static final androidx.compose.ui.test.TestContext access$getTestContext$p(androidx.compose.ui.test.AndroidComposeUiTestEnvironment)
    {
        androidx.compose.ui.test.AndroidComposeUiTestEnvironment $r0;
        androidx.compose.ui.test.TestContext $r1;

        $r0 := @parameter0: androidx.compose.ui.test.AndroidComposeUiTestEnvironment;

        $r1 = $r0.<androidx.compose.ui.test.AndroidComposeUiTestEnvironment: androidx.compose.ui.test.TestContext testContext>;

        return $r1;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.test.AndroidComposeUiTestEnvironment: int $stable> = 8;

        return;
    }

