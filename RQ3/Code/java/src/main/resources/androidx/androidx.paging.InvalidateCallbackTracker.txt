androidx.paging.InvalidateCallbackTracker
<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function1 callbackInvoker>
<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function0 invalidGetter>
<androidx.paging.InvalidateCallbackTracker: java.util.concurrent.locks.ReentrantLock lock>
<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>
<androidx.paging.InvalidateCallbackTracker: boolean invalid>
    public void <init>(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.paging.InvalidateCallbackTracker r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function0 r2;
        boolean z0;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.ArrayList $r4;
        java.util.List $r5;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callbackInvoker");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function1 callbackInvoker> = r1;

        r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function0 invalidGetter> = r2;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<androidx.paging.InvalidateCallbackTracker: java.util.concurrent.locks.ReentrantLock lock> = $r3;

        z0 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = (java.util.List) $r4;

        r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks> = $r5;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.InvalidateCallbackTracker r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlin.jvm.functions.Function0 r3;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r3 := @parameter1: kotlin.jvm.functions.Function0;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        specialinvoke r0.<androidx.paging.InvalidateCallbackTracker: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>(r1, r3);

        return;
    }

    public final boolean getInvalid$paging_common()
    {
        androidx.paging.InvalidateCallbackTracker r0;
        boolean $z0;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        $z0 = r0.<androidx.paging.InvalidateCallbackTracker: boolean invalid>;

        return $z0;
    }

    public final int callbackCount$paging_common()
    {
        androidx.paging.InvalidateCallbackTracker r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        $r1 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public final void registerInvalidatedCallback$paging_common(java.lang.Object)
    {
        androidx.paging.InvalidateCallbackTracker r0;
        java.lang.Object r1, $r3, $r13, r14;
        java.util.concurrent.locks.Lock r2;
        boolean z0, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.lang.Boolean $r4;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.List $r6;
        kotlin.jvm.functions.Function1 $r7, $r9;
        java.lang.Throwable $r11, r15;
        kotlin.jvm.functions.Function0 r12;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        r1 := @parameter0: java.lang.Object;

        r12 = r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function0 invalidGetter>;

        if r12 != null goto label01;

        $z6 = 0;

        goto label03;

     label01:
        $r3 = interfaceinvoke r12.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r4 = (java.lang.Boolean) $r3;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 1 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        if $z6 == 0 goto label04;

        virtualinvoke r0.<androidx.paging.InvalidateCallbackTracker: void invalidate$paging_common()>();

     label04:
        $z3 = r0.<androidx.paging.InvalidateCallbackTracker: boolean invalid>;

        if $z3 == 0 goto label05;

        $r9 = r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function1 callbackInvoker>;

        interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;

     label05:
        z7 = 0;

        $r5 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.concurrent.locks.ReentrantLock lock>;

        r2 = (java.util.concurrent.locks.Lock) $r5;

        z0 = 0;

        z8 = 0;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label06:
        $z4 = virtualinvoke r0.<androidx.paging.InvalidateCallbackTracker: boolean getInvalid$paging_common()>();

        if $z4 == 0 goto label07;

        z7 = 1;

        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label08;

     label07:
        $r6 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>;

        $z5 = interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

     label08:
        r14 = $r13;

     label09:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label12;

     label10:
        $r11 := @caughtexception;

        r15 = $r11;

     label11:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r15;

     label12:
        if z7 == 0 goto label13;

        $r7 = r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function1 callbackInvoker>;

        interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

     label13:
        return;

        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final void unregisterInvalidatedCallback$paging_common(java.lang.Object)
    {
        androidx.paging.InvalidateCallbackTracker r0;
        java.lang.Object r1;
        java.util.concurrent.locks.Lock r2;
        boolean z0, z2, z3;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.List $r4;
        java.lang.Throwable $r5, r6;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.concurrent.locks.ReentrantLock lock>;

        r2 = (java.util.concurrent.locks.Lock) $r3;

        z0 = 0;

        z2 = 0;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>;

        z3 = interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void invalidate$paging_common()
    {
        androidx.paging.InvalidateCallbackTracker r0;
        java.util.Iterator r1;
        java.lang.Object r2;
        boolean $z0, $z1, $z2;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.List $r4, $r6, r9, r12;
        java.lang.Iterable $r5, $r13;
        java.lang.Throwable $r7, r11;
        java.util.concurrent.locks.Lock r8;
        kotlin.Unit r10;
        kotlin.jvm.functions.Function1 r14;

        r0 := @this: androidx.paging.InvalidateCallbackTracker;

        $z0 = r0.<androidx.paging.InvalidateCallbackTracker: boolean invalid>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.concurrent.locks.ReentrantLock lock>;

        r8 = (java.util.concurrent.locks.Lock) $r3;

        interfaceinvoke r8.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $z1 = virtualinvoke r0.<androidx.paging.InvalidateCallbackTracker: boolean getInvalid$paging_common()>();

        if $z1 == 0 goto label04;

     label03:
        interfaceinvoke r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label04:
        r0.<androidx.paging.InvalidateCallbackTracker: boolean invalid> = 1;

        $r4 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>;

        $r5 = (java.lang.Iterable) $r4;

        r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r5);

        $r6 = r0.<androidx.paging.InvalidateCallbackTracker: java.util.List callbacks>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label05:
        interfaceinvoke r8.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label08;

     label06:
        $r7 := @caughtexception;

        r11 = $r7;

     label07:
        interfaceinvoke r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r11;

     label08:
        r12 = r9;

        if r12 != null goto label09;

        goto label11;

     label09:
        $r13 = (java.lang.Iterable) r12;

        r14 = r0.<androidx.paging.InvalidateCallbackTracker: kotlin.jvm.functions.Function1 callbackInvoker>;

        r1 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        goto label10;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

