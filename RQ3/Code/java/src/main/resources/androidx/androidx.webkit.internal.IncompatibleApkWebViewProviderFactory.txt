androidx.webkit.internal.IncompatibleApkWebViewProviderFactory
<androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] EMPTY_STRING_ARRAY>
<androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String UNSUPPORTED_EXCEPTION_EXPLANATION>
    public void <init>()
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface createWebView(android.webkit.WebView)
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;
        android.webkit.WebView r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        r1 := @parameter0: android.webkit.WebView;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This should never happen, if this method was called it means we\'re trying to reach into WebView APK code on an incompatible device. This most likely means the current method is being called too early, or is being called on start-up rather than lazily");

        throw $r2;
    }

    public org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface getWebkitToCompatConverter()
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This should never happen, if this method was called it means we\'re trying to reach into WebView APK code on an incompatible device. This most likely means the current method is being called too early, or is being called on start-up rather than lazily");

        throw $r1;
    }

    public org.chromium.support_lib_boundary.StaticsBoundaryInterface getStatics()
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This should never happen, if this method was called it means we\'re trying to reach into WebView APK code on an incompatible device. This most likely means the current method is being called too early, or is being called on start-up rather than lazily");

        throw $r1;
    }

    public java.lang.String[] getWebViewFeatures()
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        $r1 = <androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] EMPTY_STRING_ARRAY>;

        return $r1;
    }

    public org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface getServiceWorkerController()
    {
        androidx.webkit.internal.IncompatibleApkWebViewProviderFactory r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.webkit.internal.IncompatibleApkWebViewProviderFactory;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This should never happen, if this method was called it means we\'re trying to reach into WebView APK code on an incompatible device. This most likely means the current method is being called too early, or is being called on start-up rather than lazily");

        throw $r1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        <androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] EMPTY_STRING_ARRAY> = $r0;

        return;
    }

