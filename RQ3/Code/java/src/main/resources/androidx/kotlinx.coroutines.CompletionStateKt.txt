kotlinx.coroutines.CompletionStateKt
    public static final java.lang.Object recoverResult(java.lang.Object, kotlin.coroutines.Continuation)
    {
        java.lang.Object $r0;
        kotlin.coroutines.Continuation $r1;
        boolean $z0;
        kotlin.Result$Companion $r2;
        kotlinx.coroutines.CompletedExceptionally $r3;
        java.lang.Throwable $r4;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "uCont");

        $z0 = $r0 instanceof kotlinx.coroutines.CompletedExceptionally;

        if $z0 == 0 goto label2;

        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r3 = (kotlinx.coroutines.CompletedExceptionally) $r0;

        $r4 = $r3.<kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause>;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 == 0 goto label1;

        $r5 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r1;

        $r4 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r4, $r5);

     label1:
        $r0 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>($r4);

        $r0 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r0);

        return $r0;

     label2:
        $r2 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r0 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r0);

        return $r0;
    }

    public static final java.lang.Object toState(java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        kotlin.jvm.functions.Function1 $r2;
        kotlinx.coroutines.CompletedWithCancellation r3;
        kotlinx.coroutines.CompletedExceptionally r4;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r0 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r1);

        if $r0 != null goto label1;

        if $r2 == null goto label2;

        r3 = new kotlinx.coroutines.CompletedWithCancellation;

        specialinvoke r3.<kotlinx.coroutines.CompletedWithCancellation: void <init>(java.lang.Object,kotlin.jvm.functions.Function1)>($r1, $r2);

        $r1 = r3;

        goto label2;

     label1:
        r4 = new kotlinx.coroutines.CompletedExceptionally;

        $r1 = r4;

        specialinvoke r4.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r0, 0, 2, null);

     label2:
        return $r1;
    }

    public static final java.lang.Object toState(java.lang.Object, kotlinx.coroutines.CancellableContinuation)
    {
        java.lang.Object $r0;
        kotlinx.coroutines.CancellableContinuation $r1;
        java.lang.Throwable $r2, $r3;
        kotlinx.coroutines.CompletedExceptionally $r4;
        boolean $z0;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "caller");

        $r2 = staticinvoke <kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)>($r0);

        $r3 = $r2;

        if $r2 == null goto label3;

        $r4 = new kotlinx.coroutines.CompletedExceptionally;

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()>();

        if $z0 == 0 goto label2;

        $z0 = $r1 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r5 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r1;

        $r3 = staticinvoke <kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r2, $r5);

     label2:
        specialinvoke $r4.<kotlinx.coroutines.CompletedExceptionally: void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, 0, 2, null);

        return $r4;

     label3:
        return $r0;
    }

    public static java.lang.Object toState$default(java.lang.Object, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        $r1 = staticinvoke <kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)>($r1, $r2);

        return $r1;
    }

