androidx.security.app.authenticator.TestAppAuthenticatorBuilder
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: android.content.Context mContext>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: org.xmlpull.v1.XmlPullParser mParser>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder mAppAuthenticatorUtilsBuilder>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int POLICY_SIGNATURE_ACCEPTED_FOR_DECLARED_PACKAGES>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int POLICY_DENY_ALL>
<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int POLICY_CUSTOM>
    private void <init>(android.content.Context, org.xmlpull.v1.XmlPullParser)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        android.content.Context r1, $r5;
        org.xmlpull.v1.XmlPullParser r2;
        androidx.security.app.authenticator.TestAppSignatureVerifier$Builder $r3;
        androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder $r4;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: android.content.Context mContext> = r1;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: org.xmlpull.v1.XmlPullParser mParser> = r2;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy> = 1;

        $r3 = new androidx.security.app.authenticator.TestAppSignatureVerifier$Builder;

        specialinvoke $r3.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: void <init>(android.content.Context)>(r1);

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder> = $r3;

        $r4 = new androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder;

        $r5 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: android.content.Context mContext>;

        specialinvoke $r4.<androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder: void <init>(android.content.Context)>($r5);

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder mAppAuthenticatorUtilsBuilder> = $r4;

        return;
    }

    public static androidx.security.app.authenticator.TestAppAuthenticatorBuilder createFromResource(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources r1;
        android.content.res.XmlResourceParser r2;
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder $r3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        $r3 = new androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        specialinvoke $r3.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r2);

        return $r3;
    }

    public static androidx.security.app.authenticator.TestAppAuthenticatorBuilder createFromInputStream(android.content.Context, java.io.InputStream) throws androidx.security.app.authenticator.AppAuthenticatorXmlException
    {
        android.content.Context r0;
        java.io.InputStream r1;
        org.xmlpull.v1.XmlPullParser r2;
        java.lang.Throwable r3, $r6;
        org.xmlpull.v1.XmlPullParserFactory $r4;
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder $r5;
        androidx.security.app.authenticator.AppAuthenticatorXmlException $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.InputStream;

     label1:
        $r4 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        r2 = virtualinvoke $r4.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new androidx.security.app.authenticator.AppAuthenticatorXmlException;

        specialinvoke $r7.<androidx.security.app.authenticator.AppAuthenticatorXmlException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to create parser from provided InputStream", r3);

        throw $r7;

     label4:
        $r5 = new androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        specialinvoke $r5.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r2);

        return $r5;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public androidx.security.app.authenticator.TestAppAuthenticatorBuilder setTestPolicy(int)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        int i0;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        i0 := @parameter0: int;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy> = i0;

        return r0;
    }

    public androidx.security.app.authenticator.TestAppAuthenticatorBuilder setSignatureAcceptedForPackage(java.lang.String)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        java.lang.String r1;
        androidx.security.app.authenticator.TestAppSignatureVerifier$Builder $r2;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy> = 3;

        $r2 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        virtualinvoke $r2.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setSignatureAcceptedForPackage(java.lang.String)>(r1);

        return r0;
    }

    public androidx.security.app.authenticator.TestAppAuthenticatorBuilder setSigningIdentityForPackage(java.lang.String, java.lang.String)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        java.lang.String r1, r2, $r4;
        androidx.security.app.authenticator.TestAppSignatureVerifier$Builder $r3;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy> = 3;

        $r3 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        $r4 = staticinvoke <androidx.security.app.authenticator.AppAuthenticator: java.lang.String normalizeCertDigest(java.lang.String)>(r2);

        virtualinvoke $r3.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setSigningIdentityForPackage(java.lang.String,java.lang.String)>(r1, $r4);

        return r0;
    }

    public androidx.security.app.authenticator.TestAppAuthenticatorBuilder setUidForPackage(java.lang.String, int)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        java.lang.String r1;
        int i0;
        androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder $r2;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder mAppAuthenticatorUtilsBuilder>;

        virtualinvoke $r2.<androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder setUidForPackage(java.lang.String,int)>(r1, i0);

        return r0;
    }

    public androidx.security.app.authenticator.TestAppAuthenticatorBuilder setPackageNotInstalled(java.lang.String)
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        java.lang.String r1;
        androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder $r2;
        androidx.security.app.authenticator.TestAppSignatureVerifier$Builder $r4;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy> = 3;

        $r2 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder mAppAuthenticatorUtilsBuilder>;

        virtualinvoke $r2.<androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder setPackageNotInstalled(java.lang.String)>(r1);

        $r4 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        virtualinvoke $r4.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setPackageNotInstalled(java.lang.String)>(r1);

        return r0;
    }

    public androidx.security.app.authenticator.AppAuthenticator build() throws androidx.security.app.authenticator.AppAuthenticatorXmlException, java.io.IOException
    {
        androidx.security.app.authenticator.TestAppAuthenticatorBuilder r0;
        androidx.security.app.authenticator.AppAuthenticator$AppAuthenticatorConfig r1;
        androidx.security.app.authenticator.AppAuthenticator r2;
        org.xmlpull.v1.XmlPullParser $r3;
        androidx.security.app.authenticator.TestAppSignatureVerifier$Builder $r4, $r7, $r10, $r13;
        java.util.Map $r5, $r8;
        int $i0;
        android.content.Context $r12;
        androidx.security.app.authenticator.TestAppSignatureVerifier $r14;
        androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder $r15;
        androidx.security.app.authenticator.TestAppAuthenticatorUtils $r16;

        r0 := @this: androidx.security.app.authenticator.TestAppAuthenticatorBuilder;

        $r3 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: org.xmlpull.v1.XmlPullParser mParser>;

        r1 = staticinvoke <androidx.security.app.authenticator.AppAuthenticator: androidx.security.app.authenticator.AppAuthenticator$AppAuthenticatorConfig createConfigFromParser(org.xmlpull.v1.XmlPullParser)>($r3);

        $r4 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        $r5 = virtualinvoke r1.<androidx.security.app.authenticator.AppAuthenticator$AppAuthenticatorConfig: java.util.Map getPermissionAllowMap()>();

        virtualinvoke $r4.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setPermissionAllowMap(java.util.Map)>($r5);

        $r7 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        $r8 = virtualinvoke r1.<androidx.security.app.authenticator.AppAuthenticator$AppAuthenticatorConfig: java.util.Map getExpectedIdentities()>();

        virtualinvoke $r7.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setExpectedIdentities(java.util.Map)>($r8);

        $r10 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        $i0 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: int mTestPolicy>;

        virtualinvoke $r10.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder setTestPolicy(int)>($i0);

        $r12 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: android.content.Context mContext>;

        r2 = staticinvoke <androidx.security.app.authenticator.AppAuthenticator: androidx.security.app.authenticator.AppAuthenticator createFromConfig(android.content.Context,androidx.security.app.authenticator.AppAuthenticator$AppAuthenticatorConfig)>($r12, r1);

        $r13 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppSignatureVerifier$Builder mAppSignatureVerifierBuilder>;

        $r14 = virtualinvoke $r13.<androidx.security.app.authenticator.TestAppSignatureVerifier$Builder: androidx.security.app.authenticator.TestAppSignatureVerifier build()>();

        virtualinvoke r2.<androidx.security.app.authenticator.AppAuthenticator: void setAppSignatureVerifier(androidx.security.app.authenticator.AppSignatureVerifier)>($r14);

        $r15 = r0.<androidx.security.app.authenticator.TestAppAuthenticatorBuilder: androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder mAppAuthenticatorUtilsBuilder>;

        $r16 = virtualinvoke $r15.<androidx.security.app.authenticator.TestAppAuthenticatorUtils$Builder: androidx.security.app.authenticator.TestAppAuthenticatorUtils build()>();

        virtualinvoke r2.<androidx.security.app.authenticator.AppAuthenticator: void setAppAuthenticatorUtils(androidx.security.app.authenticator.AppAuthenticatorUtils)>($r16);

        return r2;
    }

