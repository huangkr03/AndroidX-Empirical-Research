androidx.work.impl.diagnostics.DiagnosticsReceiver
<androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG>
    public void <init>()
    {
        androidx.work.impl.diagnostics.DiagnosticsReceiver r0;

        r0 := @this: androidx.work.impl.diagnostics.DiagnosticsReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.work.impl.diagnostics.DiagnosticsReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.work.Logger $r3, $r8;
        java.lang.String $r4, $r9;
        androidx.work.OneTimeWorkRequest $r5;
        java.lang.Throwable $r7, r11;
        androidx.work.WorkManager r10;

        r0 := @this: androidx.work.impl.diagnostics.DiagnosticsReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r4 = <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG>;

        virtualinvoke $r3.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r4, "Requesting diagnostics");

     label2:
        r10 = staticinvoke <androidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)>(r1);

        $r5 = staticinvoke <androidx.work.OneTimeWorkRequest: androidx.work.OneTimeWorkRequest 'from'(java.lang.Class)>(class "Landroidx/work/impl/workers/DiagnosticsWorker;");

        virtualinvoke r10.<androidx.work.WorkManager: androidx.work.Operation enqueue(androidx.work.WorkRequest)>($r5);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r11 = $r7;

        $r8 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r9 = <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG>;

        virtualinvoke $r8.<androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "WorkManager is not initialized", r11);

     label5:
        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("DiagnosticsRcvr");

        <androidx.work.impl.diagnostics.DiagnosticsReceiver: java.lang.String TAG> = $r0;

        return;
    }

