androidx.compose.animation.FlingCalculatorKt
<androidx.compose.animation.FlingCalculatorKt: float GravityEarth>
<androidx.compose.animation.FlingCalculatorKt: float InchesPerMeter>
<androidx.compose.animation.FlingCalculatorKt: float DecelerationRate>
    private static final float computeDeceleration(float, float)
    {
        float f0, f1, $f2, $f3, $f4;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = 386.0878F * f1;

        $f3 = $f2 * 160.0F;

        $f4 = $f3 * f0;

        return $f4;
    }

    public static final float access$computeDeceleration(float, float)
    {
        float f0, f1, $f2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = staticinvoke <androidx.compose.animation.FlingCalculatorKt: float computeDeceleration(float,float)>(f0, f1);

        return $f2;
    }

    public static final float access$getDecelerationRate$p()
    {
        float $f0;

        $f0 = <androidx.compose.animation.FlingCalculatorKt: float DecelerationRate>;

        return $f0;
    }

    static void <clinit>()
    {
        double $d0, $d1, $d2;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double log(double)>(0.78);

        $d1 = staticinvoke <java.lang.Math: double log(double)>(0.9);

        $d2 = $d0 / $d1;

        $f0 = (float) $d2;

        <androidx.compose.animation.FlingCalculatorKt: float DecelerationRate> = $f0;

        return;
    }

