androidx.test.rule.DisableOnAndroidDebug
<androidx.test.rule.DisableOnAndroidDebug: org.junit.rules.TestRule rule>
    public final org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.test.rule.DisableOnAndroidDebug r0;
        org.junit.runners.model.Statement r1, $r4;
        org.junit.runner.Description r2;
        boolean $z0;
        org.junit.rules.TestRule $r3;

        r0 := @this: androidx.test.rule.DisableOnAndroidDebug;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $z0 = virtualinvoke r0.<androidx.test.rule.DisableOnAndroidDebug: boolean isDebugging()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = r0.<androidx.test.rule.DisableOnAndroidDebug: org.junit.rules.TestRule rule>;

        $r4 = interfaceinvoke $r3.<org.junit.rules.TestRule: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>(r1, r2);

        return $r4;
    }

    public void <init>(org.junit.rules.TestRule)
    {
        androidx.test.rule.DisableOnAndroidDebug r0;
        org.junit.rules.TestRule r1;

        r0 := @this: androidx.test.rule.DisableOnAndroidDebug;

        r1 := @parameter0: org.junit.rules.TestRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.rule.DisableOnAndroidDebug: org.junit.rules.TestRule rule> = r1;

        return;
    }

    public boolean isDebugging()
    {
        androidx.test.rule.DisableOnAndroidDebug r0;
        boolean $z0;

        r0 := @this: androidx.test.rule.DisableOnAndroidDebug;

        $z0 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

        return $z0;
    }

