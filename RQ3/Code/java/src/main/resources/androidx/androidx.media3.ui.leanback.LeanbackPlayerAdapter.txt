androidx.media3.ui.leanback.LeanbackPlayerAdapter
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.content.Context context>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.os.Handler handler>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener playerListener>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: int updatePeriodMs>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.ErrorMessageProvider errorMessageProvider>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean hasSurface>
<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean lastNotifiedPreparedState>
    public void <init>(android.content.Context, androidx.media3.common.Player, int)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        android.content.Context r1;
        androidx.media3.common.Player r2;
        int i0;
        android.os.Handler $r3;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener $r4;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.common.Player;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.leanback.media.PlayerAdapter: void <init>()>();

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.content.Context context> = r1;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player> = r2;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: int updatePeriodMs> = i0;

        $r3 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentOrMainLooper()>();

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.os.Handler handler> = $r3;

        $r4 = new androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        specialinvoke $r4.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: void <init>(androidx.media3.ui.leanback.LeanbackPlayerAdapter,androidx.media3.ui.leanback.LeanbackPlayerAdapter$1)>(r0, null);

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener playerListener> = $r4;

        return;
    }

    public void setErrorMessageProvider(androidx.media3.common.ErrorMessageProvider)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.ErrorMessageProvider r1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 := @parameter0: androidx.media3.common.ErrorMessageProvider;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.ErrorMessageProvider errorMessageProvider> = r1;

        return;
    }

    public void onAttachedToHost(androidx.leanback.media.PlaybackGlueHost)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.leanback.media.PlaybackGlueHost r1;
        boolean $z0;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener $r2, $r5;
        androidx.media3.common.Player $r3;
        androidx.leanback.media.SurfaceHolderGlueHost $r4, $r6;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 := @parameter0: androidx.leanback.media.PlaybackGlueHost;

        $z0 = r1 instanceof androidx.leanback.media.SurfaceHolderGlueHost;

        if $z0 == 0 goto label1;

        $r4 = (androidx.leanback.media.SurfaceHolderGlueHost) r1;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost> = $r4;

        $r6 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost>;

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener playerListener>;

        interfaceinvoke $r6.<androidx.leanback.media.SurfaceHolderGlueHost: void setSurfaceHolderCallback(android.view.SurfaceHolder$Callback)>($r5);

     label1:
        virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void notifyStateChanged()>();

        $r3 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener playerListener>;

        interfaceinvoke $r3.<androidx.media3.common.Player: void addListener(androidx.media3.common.Player$Listener)>($r2);

        return;
    }

    public void onDetachedFromHost()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.leanback.media.PlayerAdapter$Callback r1;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener $r2;
        androidx.media3.common.Player $r3;
        androidx.leanback.media.SurfaceHolderGlueHost $r4, $r5;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r3 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener playerListener>;

        interfaceinvoke $r3.<androidx.media3.common.Player: void removeListener(androidx.media3.common.Player$Listener)>($r2);

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost>;

        staticinvoke <androidx.media3.ui.leanback.LeanbackPlayerAdapter: void removeSurfaceHolderCallback(androidx.leanback.media.SurfaceHolderGlueHost)>($r5);

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost> = null;

     label1:
        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean hasSurface> = 0;

        r1 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onBufferingStateChanged(androidx.leanback.media.PlayerAdapter,boolean)>(r0, 0);

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onPlayStateChanged(androidx.leanback.media.PlayerAdapter)>(r0);

        specialinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void maybeNotifyPreparedStateChanged(androidx.leanback.media.PlayerAdapter$Callback)>(r1);

        return;
    }

    public void setProgressUpdatingEnabled(boolean)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        boolean z0;
        android.os.Handler $r1, $r2;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.os.Handler handler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        if z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.os.Handler handler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

     label1:
        return;
    }

    public boolean isPlaying()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        int i0;
        androidx.media3.common.Player $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        i0 = interfaceinvoke $r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if i0 == 1 goto label1;

        if i0 == 4 goto label1;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $z0 = interfaceinvoke $r2.<androidx.media3.common.Player: boolean getPlayWhenReady()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public long getDuration()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        long l0, $l2;
        androidx.media3.common.Player $r1;
        byte $b1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        l0 = interfaceinvoke $r1.<androidx.media3.common.Player: long getDuration()>();

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $l2 = -1L;

        goto label2;

     label1:
        $l2 = l0;

     label2:
        return $l2;
    }

    public long getCurrentPosition()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.Player $r1, $r2;
        int $i0;
        long $l1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i0 = interfaceinvoke $r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i0 != 1 goto label1;

        $l1 = -1L;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $l1 = interfaceinvoke $r2.<androidx.media3.common.Player: long getCurrentPosition()>();

     label2:
        return $l1;
    }

    public void play()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.Player $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        androidx.leanback.media.PlayerAdapter$Callback $r4;
        boolean $z0;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i0 = interfaceinvoke $r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i0 != 1 goto label1;

        $r7 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        interfaceinvoke $r7.<androidx.media3.common.Player: void prepare()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i1 = interfaceinvoke $r2.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i1 != 4 goto label2;

        $r6 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i2 = interfaceinvoke $r5.<androidx.media3.common.Player: int getCurrentMediaItemIndex()>();

        interfaceinvoke $r6.<androidx.media3.common.Player: void seekToDefaultPosition(int)>($i2);

     label2:
        $r8 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $z0 = interfaceinvoke $r8.<androidx.media3.common.Player: boolean isCommandAvailable(int)>(1);

        if $z0 == 0 goto label3;

        $r3 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        interfaceinvoke $r3.<androidx.media3.common.Player: void play()>();

        $r4 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        virtualinvoke $r4.<androidx.leanback.media.PlayerAdapter$Callback: void onPlayStateChanged(androidx.leanback.media.PlayerAdapter)>(r0);

     label3:
        return;
    }

    public void pause()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.Player $r1, $r2;
        boolean $z0;
        androidx.leanback.media.PlayerAdapter$Callback $r3;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $z0 = interfaceinvoke $r1.<androidx.media3.common.Player: boolean isCommandAvailable(int)>(1);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        interfaceinvoke $r2.<androidx.media3.common.Player: void pause()>();

        $r3 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        virtualinvoke $r3.<androidx.leanback.media.PlayerAdapter$Callback: void onPlayStateChanged(androidx.leanback.media.PlayerAdapter)>(r0);

     label1:
        return;
    }

    public void seekTo(long)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        long l0;
        androidx.media3.common.Player $r1, $r2;
        int $i1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        l0 := @parameter0: long;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i1 = interfaceinvoke $r1.<androidx.media3.common.Player: int getCurrentMediaItemIndex()>();

        interfaceinvoke $r2.<androidx.media3.common.Player: void seekTo(int,long)>($i1, l0);

        return;
    }

    public long getBufferedPosition()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.Player $r1;
        long $l0;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $l0 = interfaceinvoke $r1.<androidx.media3.common.Player: long getBufferedPosition()>();

        return $l0;
    }

    public boolean isPrepared()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.Player $r1;
        int $i0;
        androidx.leanback.media.SurfaceHolderGlueHost $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        $i0 = interfaceinvoke $r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i0 == 1 goto label2;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.SurfaceHolderGlueHost surfaceHolderGlueHost>;

        if $r2 == null goto label1;

        $z0 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean hasSurface>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void run()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.leanback.media.PlayerAdapter$Callback r1;
        int $i0;
        long $l1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onCurrentPositionChanged(androidx.leanback.media.PlayerAdapter)>(r0);

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onBufferedPositionChanged(androidx.leanback.media.PlayerAdapter)>(r0);

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.os.Handler handler>;

        $i0 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: int updatePeriodMs>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l1);

        return;
    }

    void setVideoSurface(android.view.Surface)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        android.view.Surface r1;
        androidx.media3.common.Player $r2;
        androidx.leanback.media.PlayerAdapter$Callback $r3;
        boolean $z0;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 := @parameter0: android.view.Surface;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean hasSurface> = $z0;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        interfaceinvoke $r2.<androidx.media3.common.Player: void setVideoSurface(android.view.Surface)>(r1);

        $r3 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        specialinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void maybeNotifyPreparedStateChanged(androidx.leanback.media.PlayerAdapter$Callback)>($r3);

        return;
    }

    void notifyStateChanged()
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        int i0;
        androidx.leanback.media.PlayerAdapter$Callback r1;
        androidx.media3.common.Player $r2;
        boolean $z0;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.Player player>;

        i0 = interfaceinvoke $r2.<androidx.media3.common.Player: int getPlaybackState()>();

        r1 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        specialinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void maybeNotifyPreparedStateChanged(androidx.leanback.media.PlayerAdapter$Callback)>(r1);

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onPlayStateChanged(androidx.leanback.media.PlayerAdapter)>(r0);

        if i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onBufferingStateChanged(androidx.leanback.media.PlayerAdapter,boolean)>(r0, $z0);

        if i0 != 4 goto label3;

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onPlayCompleted(androidx.leanback.media.PlayerAdapter)>(r0);

     label3:
        return;
    }

    private void maybeNotifyPreparedStateChanged(androidx.leanback.media.PlayerAdapter$Callback)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.leanback.media.PlayerAdapter$Callback r1;
        boolean z0, $z1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r1 := @parameter0: androidx.leanback.media.PlayerAdapter$Callback;

        z0 = virtualinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean isPrepared()>();

        $z1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean lastNotifiedPreparedState>;

        if $z1 == z0 goto label1;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: boolean lastNotifiedPreparedState> = z0;

        virtualinvoke r1.<androidx.leanback.media.PlayerAdapter$Callback: void onPreparedStateChanged(androidx.leanback.media.PlayerAdapter)>(r0);

     label1:
        return;
    }

    private static void removeSurfaceHolderCallback(androidx.leanback.media.SurfaceHolderGlueHost)
    {
        androidx.leanback.media.SurfaceHolderGlueHost r0;

        r0 := @parameter0: androidx.leanback.media.SurfaceHolderGlueHost;

        interfaceinvoke r0.<androidx.leanback.media.SurfaceHolderGlueHost: void setSurfaceHolderCallback(android.view.SurfaceHolder$Callback)>(null);

        return;
    }

    static androidx.media3.common.ErrorMessageProvider access$100(androidx.media3.ui.leanback.LeanbackPlayerAdapter)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        androidx.media3.common.ErrorMessageProvider $r1;

        r0 := @parameter0: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.ErrorMessageProvider errorMessageProvider>;

        return $r1;
    }

    static android.content.Context access$200(androidx.media3.ui.leanback.LeanbackPlayerAdapter)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r0;
        android.content.Context $r1;

        r0 := @parameter0: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        $r1 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.content.Context context>;

        return $r1;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.ui.leanback");

        return;
    }

androidx.media3.ui.leanback.LeanbackPlayerAdapter$1
androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener
<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>
    private void <init>(androidx.media3.ui.leanback.LeanbackPlayerAdapter)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r1;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        android.view.SurfaceHolder r1;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r2;
        android.view.Surface $r3;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        virtualinvoke $r2.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void setVideoSurface(android.view.Surface)>($r3);

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        android.view.SurfaceHolder r1;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r2;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke $r2.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void setVideoSurface(android.view.Surface)>(null);

        return;
    }

    public void onPlayerError(androidx.media3.common.PlaybackException)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.common.PlaybackException r1;
        androidx.leanback.media.PlayerAdapter$Callback r2;
        android.util.Pair r3;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r4, $r5, $r7, $r8, $r14, $r18;
        androidx.media3.common.ErrorMessageProvider $r6, $r15;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r9;
        java.lang.Object[] $r10;
        java.lang.Integer $r11, $r12, $r17;
        java.lang.String $r13, $r20;
        java.lang.Object $r16, $r19;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.common.PlaybackException;

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        r2 = virtualinvoke $r4.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r6 = staticinvoke <androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.ErrorMessageProvider access$100(androidx.media3.ui.leanback.LeanbackPlayerAdapter)>($r5);

        if $r6 == null goto label1;

        $r14 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r15 = staticinvoke <androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.media3.common.ErrorMessageProvider access$100(androidx.media3.ui.leanback.LeanbackPlayerAdapter)>($r14);

        r3 = interfaceinvoke $r15.<androidx.media3.common.ErrorMessageProvider: android.util.Pair getErrorMessage(java.lang.Throwable)>(r1);

        $r18 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r16 = r3.<android.util.Pair: java.lang.Object first>;

        $r17 = (java.lang.Integer) $r16;

        $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r19 = r3.<android.util.Pair: java.lang.Object second>;

        $r20 = (java.lang.String) $r19;

        virtualinvoke r2.<androidx.leanback.media.PlayerAdapter$Callback: void onError(androidx.leanback.media.PlayerAdapter,int,java.lang.String)>($r18, $i3, $r20);

        goto label2;

     label1:
        $r8 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $i0 = r1.<androidx.media3.common.PlaybackException: int errorCode>;

        $r7 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r9 = staticinvoke <androidx.media3.ui.leanback.LeanbackPlayerAdapter: android.content.Context access$200(androidx.media3.ui.leanback.LeanbackPlayerAdapter)>($r7);

        $i2 = <androidx.leanback.R$string: int lb_media_player_error>;

        $r10 = newarray (java.lang.Object)[2];

        $i1 = r1.<androidx.media3.common.PlaybackException: int errorCode>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r10[0] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r10[1] = $r12;

        $r13 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i2, $r10);

        virtualinvoke r2.<androidx.leanback.media.PlayerAdapter$Callback: void onError(androidx.leanback.media.PlayerAdapter,int,java.lang.String)>($r8, $i0, $r13);

     label2:
        return;
    }

    public void onTimelineChanged(androidx.media3.common.Timeline, int)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.common.Timeline r1;
        int i0;
        androidx.leanback.media.PlayerAdapter$Callback r2;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r3, $r4, $r5, $r6;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        r2 = virtualinvoke $r3.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke r2.<androidx.leanback.media.PlayerAdapter$Callback: void onDurationChanged(androidx.leanback.media.PlayerAdapter)>($r4);

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke r2.<androidx.leanback.media.PlayerAdapter$Callback: void onCurrentPositionChanged(androidx.leanback.media.PlayerAdapter)>($r5);

        $r6 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke r2.<androidx.leanback.media.PlayerAdapter$Callback: void onBufferedPositionChanged(androidx.leanback.media.PlayerAdapter)>($r6);

        return;
    }

    public void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.common.Player$PositionInfo r1, r2;
        int i0;
        androidx.leanback.media.PlayerAdapter$Callback r3;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r4, $r5, $r6;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Player$PositionInfo;

        r2 := @parameter1: androidx.media3.common.Player$PositionInfo;

        i0 := @parameter2: int;

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        r3 = virtualinvoke $r4.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        $r5 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke r3.<androidx.leanback.media.PlayerAdapter$Callback: void onCurrentPositionChanged(androidx.leanback.media.PlayerAdapter)>($r5);

        $r6 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke r3.<androidx.leanback.media.PlayerAdapter$Callback: void onBufferedPositionChanged(androidx.leanback.media.PlayerAdapter)>($r6);

        return;
    }

    public void onVideoSizeChanged(androidx.media3.common.VideoSize)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.common.VideoSize r1;
        int i0, $i1, $i2;
        float $f0, $f1, $f2;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r2, $r4;
        androidx.leanback.media.PlayerAdapter$Callback $r3;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.common.VideoSize;

        $i1 = r1.<androidx.media3.common.VideoSize: int width>;

        $f1 = (float) $i1;

        $f0 = r1.<androidx.media3.common.VideoSize: float pixelWidthHeightRatio>;

        $f2 = $f1 * $f0;

        i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $r2 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $r3 = virtualinvoke $r2.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: androidx.leanback.media.PlayerAdapter$Callback getCallback()>();

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        $i2 = r1.<androidx.media3.common.VideoSize: int height>;

        virtualinvoke $r3.<androidx.leanback.media.PlayerAdapter$Callback: void onVideoSizeChanged(androidx.leanback.media.PlayerAdapter,int,int)>($r4, i0, $i2);

        return;
    }

    public void onEvents(androidx.media3.common.Player, androidx.media3.common.Player$Events)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.common.Player$Events r2;
        int[] $r3;
        boolean $z0;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter $r4;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.common.Player$Events;

        $r3 = newarray (int)[2];

        $r3[0] = 5;

        $r3[1] = 4;

        $z0 = virtualinvoke r2.<androidx.media3.common.Player$Events: boolean containsAny(int[])>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: androidx.media3.ui.leanback.LeanbackPlayerAdapter this$0>;

        virtualinvoke $r4.<androidx.media3.ui.leanback.LeanbackPlayerAdapter: void notifyStateChanged()>();

     label1:
        return;
    }

    void <init>(androidx.media3.ui.leanback.LeanbackPlayerAdapter, androidx.media3.ui.leanback.LeanbackPlayerAdapter$1)
    {
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener r0;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter r1;
        androidx.media3.ui.leanback.LeanbackPlayerAdapter$1 r2;

        r0 := @this: androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener;

        r1 := @parameter0: androidx.media3.ui.leanback.LeanbackPlayerAdapter;

        r2 := @parameter1: androidx.media3.ui.leanback.LeanbackPlayerAdapter$1;

        specialinvoke r0.<androidx.media3.ui.leanback.LeanbackPlayerAdapter$PlayerListener: void <init>(androidx.media3.ui.leanback.LeanbackPlayerAdapter)>(r1);

        return;
    }

