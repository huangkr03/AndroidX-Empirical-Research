androidx.test.espresso.core.internal.deps.guava.collect.Maps
    static androidx.test.espresso.core.internal.deps.guava.base.Function valueFunction()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction $r0;

        $r0 = <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction VALUE>;

        return $r0;
    }

    static java.lang.String toStringImpl(java.util.Map)
    {
        java.lang.StringBuilder r0, $r3, $r5, $r9, $r10;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        int $i0;
        java.util.Set $r4;
        boolean $z0, z1;
        java.lang.String $r6;
        java.lang.Object $r7, $r8, $r11;
        java.util.Map r14;

        r14 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r14.<java.util.Map: int size()>();

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Collections2: java.lang.StringBuilder newStringBuilderForCollection(int)>($i0);

        r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r4 = interfaceinvoke r14.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        z1 = 1;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r7;

        if z1 != 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r11 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        z1 = 0;

        goto label1;

     label3:
        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.util.HashMap newHashMap()
    {
        java.util.HashMap r0;

        r0 = new java.util.HashMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        return r0;
    }

    static boolean equalsImpl(java.util.Map, java.lang.Object)
    {
        java.util.Map r0, r4;
        boolean $z0, $z1;
        java.util.Set $r1, $r2;
        java.lang.Object r3;

        r0 := @parameter0: java.util.Map;

        r3 := @parameter1: java.lang.Object;

        if r0 != r3 goto label1;

        return 1;

     label1:
        $z0 = r3 instanceof java.util.Map;

        if $z0 == 0 goto label2;

        r4 = (java.util.Map) r3;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $z1 = interfaceinvoke $r1.<java.util.Set: boolean equals(java.lang.Object)>($r2);

        return $z1;

     label2:
        return 0;
    }

androidx.test.espresso.core.internal.deps.guava.collect.Maps$1
    volatile java.lang.Object transform(java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$1;

        r1 := @parameter0: java.lang.Object;

        throw null;
    }

androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1
    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1 r0;
        java.lang.Object r1, $r3;
        java.util.Map$Entry $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1: java.lang.Object apply(java.util.Map$Entry)>($r2);

        return $r3;
    }

    public java.lang.Object apply(java.util.Map$Entry)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1 r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r2;
    }

    void <init>(java.lang.String, int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: void <init>(java.lang.String,int,androidx.test.espresso.core.internal.deps.guava.collect.Maps$1)>(r1, i0, null);

        return;
    }

androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2
    public volatile java.lang.Object apply(java.lang.Object)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2 r0;
        java.lang.Object r1, $r3;
        java.util.Map$Entry $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2: java.lang.Object apply(java.util.Map$Entry)>($r2);

        return $r3;
    }

    public java.lang.Object apply(java.util.Map$Entry)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2 r0;
        java.util.Map$Entry r1;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2;

        r1 := @parameter0: java.util.Map$Entry;

        $r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        return $r2;
    }

    void <init>(java.lang.String, int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2 r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: void <init>(java.lang.String,int,androidx.test.espresso.core.internal.deps.guava.collect.Maps$1)>(r1, i0, null);

        return;
    }

androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction
<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction KEY>
<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction VALUE>
<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $VALUES>
    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $r0;
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1 r1;
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2 r2;

        r1 = new androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$1: void <init>(java.lang.String,int)>("KEY", 0);

        <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction KEY> = r1;

        r2 = new androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2;

        specialinvoke r2.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction$2: void <init>(java.lang.String,int)>("VALUE", 1);

        <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction VALUE> = r2;

        $r0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $values()>();

        <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    void <init>(java.lang.String, int, androidx.test.espresso.core.internal.deps.guava.collect.Maps$1)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction r0;
        java.lang.String r1;
        int i0;
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$1 r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.test.espresso.core.internal.deps.guava.collect.Maps$1;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $values()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] r0;
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction $r1, $r2;

        r0 = newarray (androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction)[2];

        $r1 = <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction KEY>;

        r0[0] = $r1;

        $r2 = <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction VALUE>;

        r0[1] = $r2;

        return r0;
    }

    public static androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] values()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction: androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.espresso.core.internal.deps.guava.collect.Maps$EntryFunction[]) $r1;

        return $r2;
    }

