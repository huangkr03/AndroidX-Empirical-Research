androidx.ui.core.gesture.LongPressGestureFilter
<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.coroutines.CoroutineContext coroutineContext>
<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.jvm.functions.Function1 onLongPress>
<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.unit.Duration longPressTimeout>
<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>
<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions>
<androidx.ui.core.gesture.LongPressGestureFilter: kotlinx.coroutines.Job job>
<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.CustomEventDispatcher customEventDispatcher>
    public void <init>(kotlin.coroutines.CoroutineContext)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0, r2;
        kotlin.coroutines.CoroutineContext r1;
        boolean z0;
        java.util.LinkedHashMap r3, $r6;
        androidx.ui.unit.Duration $r4;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r5;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coroutineContext");

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.coroutines.CoroutineContext coroutineContext> = r1;

        $r4 = staticinvoke <androidx.ui.core.gesture.ConstantsKt: androidx.ui.unit.Duration getLongPressTimeout()>();

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.unit.Duration longPressTimeout> = $r4;

        $r5 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state> = $r5;

        r2 = r0;

        z0 = 0;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r3 = $r6;

        r2.<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions> = r3;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnLongPress()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.jvm.functions.Function1 onLongPress>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("onLongPress");

        throw null;
    }

    public final void setOnLongPress(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.jvm.functions.Function1 onLongPress> = r1;

        return;
    }

    public final androidx.ui.unit.Duration getLongPressTimeout()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        androidx.ui.unit.Duration $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        $r1 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.unit.Duration longPressTimeout>;

        return $r1;
    }

    public final void setLongPressTimeout(androidx.ui.unit.Duration)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        androidx.ui.unit.Duration r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: androidx.ui.unit.Duration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.unit.Duration longPressTimeout> = r1;

        return;
    }

    public void onInit(androidx.ui.core.CustomEventDispatcher)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        androidx.ui.core.CustomEventDispatcher r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: androidx.ui.core.CustomEventDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "customEventDispatcher");

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.CustomEventDispatcher customEventDispatcher> = r1;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        java.util.List r1, r27;
        androidx.ui.core.PointerEventPass r2, $r6, $r34, $r52;
        androidx.ui.unit.IntPxSize r3;
        java.util.Collection r4, $r9, $r22, $r23, r29;
        androidx.ui.core.PointerInputChange r5, r32, $r33, $r38, $r42, $r48, r56;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z22, $z24, $z25, $z28, $z29, $z31, z34, $z35, z37, $z39;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r7, $r8, $r10, $r11, $r12, $r13, $r24, $r25, $r43, $r44;
        androidx.ui.core.PointerInputData $r14, $r20;
        java.util.LinkedHashMap $r15, $r19;
        long $l0, $l1;
        androidx.ui.core.PointerId $r16, r50;
        java.lang.Object $r17, r31, r37, r41, r47, r54, r55;
        androidx.ui.unit.PxPosition $r18, $r51;
        java.util.ArrayList $r26;
        int $i2, $i3, $i4;
        java.lang.Iterable $r28, $r35, $r39, $r45;
        java.util.Iterator $r30, $r36, $r40, $r46;
        java.util.Map r49;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r27 = r1;

        $r6 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z1 == 0 goto label05;

        $r25 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r24 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Fired>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r24);

        if $z15 == 0 goto label05;

        $r28 = (java.lang.Iterable) r27;

        $r26 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r28, 10);

        specialinvoke $r26.<java.util.ArrayList: void <init>(int)>($i2);

        r29 = (java.util.Collection) $r26;

        $r30 = interfaceinvoke $r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z16 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label04;

        r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (androidx.ui.core.PointerInputChange) r31;

        r4 = r29;

        $z17 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUp(androidx.ui.core.PointerInputChange)>(r32);

        if $z17 == 0 goto label02;

        $r33 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r32);

        goto label03;

     label02:
        $r33 = r32;

     label03:
        r5 = $r33;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label01;

     label04:
        r27 = (java.util.List) r29;

     label05:
        $r34 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z22 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r34);

        if $z22 == 0 goto label20;

        $r11 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r10 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r10);

        if $z4 == 0 goto label10;

        $r35 = (java.lang.Iterable) r1;

        $z12 = $r35 instanceof java.util.Collection;

        if $z12 == 0 goto label06;

        $r23 = (java.util.Collection) $r35;

        $z14 = interfaceinvoke $r23.<java.util.Collection: boolean isEmpty()>();

        if $z14 == 0 goto label06;

        $z24 = 1;

        goto label09;

     label06:
        $r36 = interfaceinvoke $r35.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z25 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z25 == 0 goto label08;

        r37 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (androidx.ui.core.PointerInputChange) r37;

        $z13 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>($r38);

        if $z13 != 0 goto label07;

        $z24 = 0;

        goto label09;

     label08:
        $z24 = 1;

     label09:
        if $z24 == 0 goto label10;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void primeToFire()>();

        goto label16;

     label10:
        $r13 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r12 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r12);

        if $z5 != 0 goto label15;

        $r39 = (java.lang.Iterable) r1;

        $z9 = $r39 instanceof java.util.Collection;

        if $z9 == 0 goto label11;

        $r22 = (java.util.Collection) $r39;

        $z11 = interfaceinvoke $r22.<java.util.Collection: boolean isEmpty()>();

        if $z11 == 0 goto label11;

        $z28 = 1;

        goto label14;

     label11:
        $r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z29 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label13;

        r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r42 = (androidx.ui.core.PointerInputChange) r41;

        $z10 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>($r42);

        if $z10 != 0 goto label12;

        $z28 = 0;

        goto label14;

     label13:
        $z28 = 1;

     label14:
        if $z28 == 0 goto label15;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void resetToIdle()>();

        goto label16;

     label15:
        $z6 = staticinvoke <androidx.ui.core.gesture.GestureUtilsKt: boolean anyPointersInBounds(java.util.List,androidx.ui.unit.IntPxSize)>(r27, r3);

        if $z6 != 0 goto label16;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void resetToIdle()>();

     label16:
        $r43 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r44 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed>;

        $z31 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r43, $r44);

        if $z31 == 0 goto label20;

        $r45 = (java.lang.Iterable) r1;

        $r46 = interfaceinvoke $r45.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z7 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label20;

        r47 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        $r48 = (androidx.ui.core.PointerInputChange) r47;

        $r14 = virtualinvoke $r48.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $z8 = virtualinvoke $r14.<androidx.ui.core.PointerInputData: boolean getDown()>();

        if $z8 == 0 goto label18;

        $r19 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions>;

        r49 = (java.util.Map) $r19;

        $l1 = virtualinvoke $r48.<androidx.ui.core.PointerInputChange: long getId()>();

        r50 = staticinvoke <androidx.ui.core.PointerId: androidx.ui.core.PointerId box-impl(long)>($l1);

        $r20 = virtualinvoke $r48.<androidx.ui.core.PointerInputChange: androidx.ui.core.PointerInputData getCurrent()>();

        $r51 = virtualinvoke $r20.<androidx.ui.core.PointerInputData: androidx.ui.unit.PxPosition getPosition()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r51);

        z34 = 0;

        interfaceinvoke r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r50, $r51);

        goto label19;

     label18:
        $r15 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions>;

        $l0 = virtualinvoke $r48.<androidx.ui.core.PointerInputChange: long getId()>();

        $r16 = staticinvoke <androidx.ui.core.PointerId: androidx.ui.core.PointerId box-impl(long)>($l0);

        $r17 = virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r16);

        $r18 = (androidx.ui.unit.PxPosition) $r17;

     label19:
        goto label17;

     label20:
        $r52 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z35 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r52);

        if $z35 == 0 goto label25;

        $r8 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r7 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z2 != 0 goto label25;

        z37 = 0;

        $i3 = 0;

        $r9 = (java.util.Collection) r1;

        $i4 = interfaceinvoke $r9.<java.util.Collection: int size()>();

     label21:
        if $i3 >= $i4 goto label23;

        r54 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i3);

        r55 = r54;

        r56 = (androidx.ui.core.PointerInputChange) r55;

        $z3 = staticinvoke <androidx.ui.core.PointerInputKt: boolean anyPositionChangeConsumed(androidx.ui.core.PointerInputChange)>(r56);

        if $z3 == 0 goto label22;

        $z39 = 1;

        goto label24;

     label22:
        $i3 = $i3 + 1;

        goto label21;

     label23:
        $z39 = 0;

     label24:
        if $z39 == 0 goto label25;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void resetToIdle()>();

     label25:
        return r27;
    }

    public void onCustomEvent(androidx.ui.core.CustomEvent, androidx.ui.core.PointerEventPass)
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        androidx.ui.core.CustomEvent r1;
        androidx.ui.core.PointerEventPass r2, $r5;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        r1 := @parameter0: androidx.ui.core.CustomEvent;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "customEvent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        $r4 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state>;

        $r3 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 == 0 goto label1;

        $z1 = r1 instanceof androidx.ui.core.gesture.LongPressFiredEvent;

        if $z1 == 0 goto label1;

        $r5 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z2 == 0 goto label1;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void resetToIdle()>();

     label1:
        return;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        specialinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: void resetToIdle()>();

        return;
    }

    private final void fireLongPress()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        boolean z0;
        kotlin.jvm.functions.Function1 r1, $r4;
        java.lang.Iterable r2;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r3;
        java.util.LinkedHashMap $r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r9, $r14, $r16;
        java.util.Map$Entry $r8;
        androidx.ui.unit.PxPosition $r10;
        kotlin.jvm.internal.Ref$ObjectRef $r12, r21;
        androidx.ui.core.CustomEventDispatcher $r13, $r15, $r19;
        androidx.ui.core.gesture.LongPressFiredEvent $r17;
        androidx.ui.core.CustomEvent $r18;
        java.util.Map r20;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        $r3 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Fired>;

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state> = $r3;

        $r4 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.jvm.functions.Function1 getOnLongPress()>();

        $r5 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions>;

        r20 = (java.util.Map) $r5;

        r1 = $r4;

        z0 = 0;

        $r6 = interfaceinvoke r20.<java.util.Map: java.util.Set entrySet()>();

        r2 = (java.lang.Iterable) $r6;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.lang.Iterable)>(r2);

        $r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (androidx.ui.unit.PxPosition) $r9;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r10);

        $r12 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r12.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r21 = $r12;

        $r13 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.CustomEventDispatcher customEventDispatcher>;

        r21.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r13;

        $r14 = r21.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r15 = (androidx.ui.core.CustomEventDispatcher) $r14;

        if $r15 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("customEventDispatcher");

        throw null;

     label1:
        $r16 = r21.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r19 = (androidx.ui.core.CustomEventDispatcher) $r16;

        $r17 = <androidx.ui.core.gesture.LongPressFiredEvent: androidx.ui.core.gesture.LongPressFiredEvent INSTANCE>;

        $r18 = (androidx.ui.core.CustomEvent) $r17;

        interfaceinvoke $r19.<androidx.ui.core.CustomEventDispatcher: void dispatchCustomEvent(androidx.ui.core.CustomEvent)>($r18);

        return;
    }

    private final void primeToFire()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r1;
        androidx.ui.unit.Duration $r2;
        androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1 $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.jvm.functions.Function0 $r5;
        kotlinx.coroutines.Job $r6;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        $r1 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed>;

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state> = $r1;

        $r2 = virtualinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.unit.Duration getLongPressTimeout()>();

        $r4 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlin.coroutines.CoroutineContext coroutineContext>;

        $r3 = new androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1;

        specialinvoke $r3.<androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1: void <init>(androidx.ui.core.gesture.LongPressGestureFilter)>(r0);

        $r5 = (kotlin.jvm.functions.Function0) $r3;

        $r6 = staticinvoke <androidx.ui.temputils.CoroutineUtilsKt: kotlinx.coroutines.Job delay(androidx.ui.unit.Duration,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)>($r2, $r4, $r5);

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlinx.coroutines.Job job> = $r6;

        return;
    }

    private final void resetToIdle()
    {
        androidx.ui.core.gesture.LongPressGestureFilter r0;
        kotlinx.coroutines.Job r1;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r2;
        java.util.LinkedHashMap $r3;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter;

        $r2 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        r0.<androidx.ui.core.gesture.LongPressGestureFilter: androidx.ui.core.gesture.LongPressGestureFilter$State state> = $r2;

        r1 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: kotlinx.coroutines.Job job>;

        if r1 != null goto label1;

        goto label2;

     label1:
        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r1, null, 1, null);

     label2:
        $r3 = r0.<androidx.ui.core.gesture.LongPressGestureFilter: java.util.LinkedHashMap pointerPositions>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void clear()>();

        return;
    }

    public static final void access$fireLongPress(androidx.ui.core.gesture.LongPressGestureFilter)
    {
        androidx.ui.core.gesture.LongPressGestureFilter $r0;

        $r0 := @parameter0: androidx.ui.core.gesture.LongPressGestureFilter;

        specialinvoke $r0.<androidx.ui.core.gesture.LongPressGestureFilter: void fireLongPress()>();

        return;
    }

androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1
<androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1: androidx.ui.core.gesture.LongPressGestureFilter $this>
    void <init>(androidx.ui.core.gesture.LongPressGestureFilter)
    {
        androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1 r0;
        androidx.ui.core.gesture.LongPressGestureFilter $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1;

        $r1 := @parameter0: androidx.ui.core.gesture.LongPressGestureFilter;

        r0.<androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1: androidx.ui.core.gesture.LongPressGestureFilter $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1 r0;
        androidx.ui.core.gesture.LongPressGestureFilter $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1;

        $r1 = r0.<androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1: androidx.ui.core.gesture.LongPressGestureFilter $this>;

        staticinvoke <androidx.ui.core.gesture.LongPressGestureFilter: void access$fireLongPress(androidx.ui.core.gesture.LongPressGestureFilter)>($r1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1;

        virtualinvoke r0.<androidx.ui.core.gesture.LongPressGestureFilter$primeToFire$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.gesture.LongPressGestureFilter$State
<androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>
<androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed>
<androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Fired>
<androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.core.gesture.LongPressGestureFilter$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.core.gesture.LongPressGestureFilter$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.core.gesture.LongPressGestureFilter$State[] values()
    {
        androidx.ui.core.gesture.LongPressGestureFilter$State[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.core.gesture.LongPressGestureFilter$State)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.core.gesture.LongPressGestureFilter$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/core/gesture/LongPressGestureFilter$State;", r0);

        $r2 = (androidx.ui.core.gesture.LongPressGestureFilter$State) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.gesture.LongPressGestureFilter$State[] r0;
        androidx.ui.core.gesture.LongPressGestureFilter$State $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 = new androidx.ui.core.gesture.LongPressGestureFilter$State;

        specialinvoke $r1.<androidx.ui.core.gesture.LongPressGestureFilter$State: void <init>(java.lang.String,int)>("Idle", 0);

        <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle> = $r1;

        $r2 = new androidx.ui.core.gesture.LongPressGestureFilter$State;

        specialinvoke $r2.<androidx.ui.core.gesture.LongPressGestureFilter$State: void <init>(java.lang.String,int)>("Primed", 1);

        <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed> = $r2;

        $r3 = new androidx.ui.core.gesture.LongPressGestureFilter$State;

        specialinvoke $r3.<androidx.ui.core.gesture.LongPressGestureFilter$State: void <init>(java.lang.String,int)>("Fired", 2);

        <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Fired> = $r3;

        r0 = newarray (androidx.ui.core.gesture.LongPressGestureFilter$State)[3];

        $r4 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Idle>;

        r0[0] = $r4;

        $r5 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Primed>;

        r0[1] = $r5;

        $r6 = <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State Fired>;

        r0[2] = $r6;

        <androidx.ui.core.gesture.LongPressGestureFilter$State: androidx.ui.core.gesture.LongPressGestureFilter$State[] $VALUES> = r0;

        return;
    }

