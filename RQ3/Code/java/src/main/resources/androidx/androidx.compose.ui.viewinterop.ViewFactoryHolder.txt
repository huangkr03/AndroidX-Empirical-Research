androidx.compose.ui.viewinterop.ViewFactoryHolder
<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View typedView>
<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 factory>
<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 updateBlock>
    public void <init>(android.content.Context, androidx.compose.runtime.CompositionContext, androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        android.content.Context r1;
        androidx.compose.runtime.CompositionContext r2;
        androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.compose.runtime.CompositionContext;

        r3 := @parameter2: androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dispatcher");

        specialinvoke r0.<androidx.compose.ui.viewinterop.AndroidViewHolder: void <init>(android.content.Context,androidx.compose.runtime.CompositionContext,androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher)>(r1, r2, r3);

        virtualinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: void setClipChildren(boolean)>(0);

        $r4 = staticinvoke <androidx.compose.ui.viewinterop.AndroidView_androidKt: kotlin.jvm.functions.Function1 getNoOpUpdate()>();

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 updateBlock> = $r4;

        return;
    }

    public void <init>(android.content.Context, androidx.compose.runtime.CompositionContext, androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        android.content.Context r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher $r3, r5;
        androidx.compose.runtime.CompositionContext r4;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r1 := @parameter0: android.content.Context;

        r4 := @parameter1: androidx.compose.runtime.CompositionContext;

        r5 := @parameter2: androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r3 = new androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher;

        specialinvoke $r3.<androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher: void <init>()>();

        r5 = $r3;

     label2:
        specialinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: void <init>(android.content.Context,androidx.compose.runtime.CompositionContext,androidx.compose.ui.input.nestedscroll.NestedScrollDispatcher)>(r1, r4, r5);

        return;
    }

    public final android.view.View getTypedView$ui_release()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        android.view.View $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        $r1 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View typedView>;

        return $r1;
    }

    public final void setTypedView$ui_release(android.view.View)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        android.view.View r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r1 := @parameter0: android.view.View;

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View typedView> = r1;

        return;
    }

    public android.view.View getViewRoot()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        android.view.View $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        $r1 = (android.view.View) r0;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getFactory()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        $r1 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 factory>;

        return $r1;
    }

    public final void setFactory(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        kotlin.jvm.functions.Function1 r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.view.View $r4, $r5;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 factory> = r1;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.content.Context getContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "context");

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (android.view.View) $r3;

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View typedView> = $r4;

        $r5 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View typedView>;

        virtualinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: void setView$ui_release(android.view.View)>($r5);

     label1:
        return;
    }

    public final kotlin.jvm.functions.Function1 getUpdateBlock()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        $r1 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 updateBlock>;

        return $r1;
    }

    public final void setUpdateBlock(kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1 $r2;
        kotlin.jvm.functions.Function0 $r3;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 updateBlock> = r1;

        $r2 = new androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1;

        specialinvoke $r2.<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: void <init>(androidx.compose.ui.viewinterop.ViewFactoryHolder)>(r0);

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        virtualinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder: void setUpdate(kotlin.jvm.functions.Function0)>($r3);

        return;
    }

androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1
<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: androidx.compose.ui.viewinterop.ViewFactoryHolder this$0>
    void <init>(androidx.compose.ui.viewinterop.ViewFactoryHolder)
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1 r0;
        androidx.compose.ui.viewinterop.ViewFactoryHolder $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1;

        $r1 := @parameter0: androidx.compose.ui.viewinterop.ViewFactoryHolder;

        r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: androidx.compose.ui.viewinterop.ViewFactoryHolder this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1 r0;
        android.view.View r1, $r3;
        androidx.compose.ui.viewinterop.ViewFactoryHolder $r2, $r4;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1;

        $r2 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: androidx.compose.ui.viewinterop.ViewFactoryHolder this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.viewinterop.ViewFactoryHolder: android.view.View getTypedView$ui_release()>();

        if $r3 == null goto label1;

        r1 = $r3;

        $r4 = r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: androidx.compose.ui.viewinterop.ViewFactoryHolder this$0>;

        $r5 = virtualinvoke $r4.<androidx.compose.ui.viewinterop.ViewFactoryHolder: kotlin.jvm.functions.Function1 getUpdateBlock()>();

        interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label1;

     label1:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1;

        virtualinvoke r0.<androidx.compose.ui.viewinterop.ViewFactoryHolder$updateBlock$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

