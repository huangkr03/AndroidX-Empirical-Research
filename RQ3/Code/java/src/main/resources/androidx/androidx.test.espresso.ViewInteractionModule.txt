androidx.test.espresso.ViewInteractionModule
<androidx.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher>
<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher>
<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity>
    public android.view.View provideRootView(androidx.test.espresso.base.RootViewPicker)
    {
        androidx.test.espresso.ViewInteractionModule r0;
        androidx.test.espresso.base.RootViewPicker r1;
        android.view.View $r2;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        r1 := @parameter0: androidx.test.espresso.base.RootViewPicker;

        $r2 = virtualinvoke r1.<androidx.test.espresso.base.RootViewPicker: android.view.View get()>();

        return $r2;
    }

    androidx.test.espresso.ViewFinder provideViewFinder(androidx.test.espresso.base.ViewFinderImpl)
    {
        androidx.test.espresso.ViewInteractionModule r0;
        androidx.test.espresso.base.ViewFinderImpl r1;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        r1 := @parameter0: androidx.test.espresso.base.ViewFinderImpl;

        return r1;
    }

    androidx.test.espresso.internal.data.TestFlowVisualizer provideTestFlowVisualizer(androidx.test.platform.io.PlatformTestStorage)
    {
        androidx.test.espresso.ViewInteractionModule r0;
        androidx.test.platform.io.PlatformTestStorage r1;
        androidx.test.espresso.internal.data.TestFlowVisualizer $r2;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        r1 := @parameter0: androidx.test.platform.io.PlatformTestStorage;

        $r2 = staticinvoke <androidx.test.espresso.internal.data.TestFlowVisualizer: androidx.test.espresso.internal.data.TestFlowVisualizer getInstance(androidx.test.platform.io.PlatformTestStorage)>(r1);

        return $r2;
    }

    androidx.test.espresso.remote.RemoteInteraction provideRemoteInteraction()
    {
        androidx.test.espresso.ViewInteractionModule r0;
        androidx.test.espresso.remote.RemoteInteraction $r1;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        $r1 = staticinvoke <androidx.test.espresso.remote.RemoteInteractionRegistry: androidx.test.espresso.remote.RemoteInteraction getInstance()>();

        return $r1;
    }

    java.util.concurrent.atomic.AtomicReference provideNeedsActivity()
    {
        androidx.test.espresso.ViewInteractionModule r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        $r1 = r0.<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity>;

        return $r1;
    }

    java.util.concurrent.atomic.AtomicReference provideRootMatcher()
    {
        androidx.test.espresso.ViewInteractionModule r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        $r1 = r0.<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher>;

        return $r1;
    }

    org.hamcrest.Matcher provideViewMatcher()
    {
        androidx.test.espresso.ViewInteractionModule r0;
        org.hamcrest.Matcher $r1;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        $r1 = r0.<androidx.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.ViewInteractionModule r0;
        org.hamcrest.Matcher r1, $r2, $r5;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.concurrent.atomic.AtomicReference r6, r7;

        r0 := @this: androidx.test.espresso.ViewInteractionModule;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r6 = new java.util.concurrent.atomic.AtomicReference;

        $r2 = <androidx.test.espresso.matcher.RootMatchers: org.hamcrest.Matcher DEFAULT>;

        specialinvoke r6.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r2);

        r0.<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference rootMatcher> = r6;

        r7 = new java.util.concurrent.atomic.AtomicReference;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke r7.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>($r3);

        r0.<androidx.test.espresso.ViewInteractionModule: java.util.concurrent.atomic.AtomicReference needsActivity> = r7;

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (org.hamcrest.Matcher) $r4;

        r0.<androidx.test.espresso.ViewInteractionModule: org.hamcrest.Matcher viewMatcher> = $r5;

        return;
    }

