androidx.work.ExistingWorkPolicy
<androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy REPLACE>
<androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>
<androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND>
<androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE>
<androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.work.ExistingWorkPolicy r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.work.ExistingWorkPolicy;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.work.ExistingWorkPolicy[] values()
    {
        androidx.work.ExistingWorkPolicy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.work.ExistingWorkPolicy[]) $r1;

        return $r2;
    }

    public static androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.work.ExistingWorkPolicy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/work/ExistingWorkPolicy;", r0);

        $r2 = (androidx.work.ExistingWorkPolicy) $r1;

        return $r2;
    }

    private static final androidx.work.ExistingWorkPolicy[] $values()
    {
        androidx.work.ExistingWorkPolicy[] r0;
        androidx.work.ExistingWorkPolicy $r1, $r2, $r3, $r4;

        r0 = newarray (androidx.work.ExistingWorkPolicy)[4];

        $r1 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy REPLACE>;

        r0[0] = $r1;

        $r2 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP>;

        r0[1] = $r2;

        $r3 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND>;

        r0[2] = $r3;

        $r4 = <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE>;

        r0[3] = $r4;

        return r0;
    }

    static void <clinit>()
    {
        androidx.work.ExistingWorkPolicy $r0, $r1, $r2, $r3;
        androidx.work.ExistingWorkPolicy[] $r4;

        $r0 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r0.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("REPLACE", 0);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy REPLACE> = $r0;

        $r1 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r1.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("KEEP", 1);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy KEEP> = $r1;

        $r2 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r2.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("APPEND", 2);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND> = $r2;

        $r3 = new androidx.work.ExistingWorkPolicy;

        specialinvoke $r3.<androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>("APPEND_OR_REPLACE", 3);

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE> = $r3;

        $r4 = staticinvoke <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $values()>();

        <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] $VALUES> = $r4;

        return;
    }

