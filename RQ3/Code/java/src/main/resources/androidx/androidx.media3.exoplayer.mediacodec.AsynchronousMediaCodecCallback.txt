androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.HandlerThread callbackThread>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.Handler handler>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque bufferInfos>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat currentFormat>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaCodec$CodecException mediaCodecException>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean shutDown>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.IllegalStateException internalException>
    void <init>(android.os.HandlerThread)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.os.HandlerThread r1;
        java.lang.Object $r2;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r3, $r4;
        java.util.ArrayDeque $r5, $r6;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.os.HandlerThread;

        specialinvoke r0.<android.media.MediaCodec$Callback: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock> = $r2;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.HandlerThread callbackThread> = r1;

        $r3 = new androidx.media3.exoplayer.mediacodec.IntArrayQueue;

        specialinvoke $r3.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers> = $r3;

        $r4 = new androidx.media3.exoplayer.mediacodec.IntArrayQueue;

        specialinvoke $r4.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers> = $r4;

        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque bufferInfos> = $r5;

        $r6 = new java.util.ArrayDeque;

        specialinvoke $r6.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats> = $r6;

        return;
    }

    public void initialize(android.media.MediaCodec)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec r1;
        android.os.Handler r2, $r3, $r5;
        android.os.HandlerThread $r4, $r6;
        android.os.Looper $r7;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.Handler handler>;

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.HandlerThread callbackThread>;

        virtualinvoke $r4.<android.os.HandlerThread: void start()>();

        $r5 = new android.os.Handler;

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.HandlerThread callbackThread>;

        $r7 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r2 = $r5;

        virtualinvoke r1.<android.media.MediaCodec: void setCallback(android.media.MediaCodec$Callback,android.os.Handler)>(r0, r2);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.Handler handler> = r2;

        return;
    }

    public void shutdown()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.os.HandlerThread $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean shutDown> = 1;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.HandlerThread callbackThread>;

        virtualinvoke $r4.<android.os.HandlerThread: boolean quit()>();

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void flushInternal()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int dequeueInputBufferIndex()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        boolean $z0, $z1;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r4, $r5;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean isFlushingOrShutdown()>();

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return -1;

     label3:
        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void maybeThrowException()>();

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers>;

        $z1 = virtualinvoke $r4.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $i0 = -1;

        goto label5;

     label4:
        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers>;

        $i0 = virtualinvoke $r5.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: int remove()>();

     label5:
        exitmonitor r1;

     label6:
        return $i0;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec$BufferInfo r1, r3;
        java.lang.Object r2, $r5, $r9, $r14;
        int i0, $i1, $i3, $i4;
        java.lang.Throwable r4, $r15;
        boolean $z0, $z1;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r6, $r7;
        java.util.ArrayDeque $r8, $r13;
        android.media.MediaFormat $r10, $r11;
        long $l2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec$BufferInfo;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $z0 = specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean isFlushingOrShutdown()>();

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void maybeThrowException()>();

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>;

        $z1 = virtualinvoke $r6.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: boolean isEmpty()>();

        if $z1 == 0 goto label05;

        exitmonitor r2;

     label04:
        return -1;

     label05:
        $r7 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>;

        i0 = virtualinvoke $r7.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: int remove()>();

        if i0 < 0 goto label06;

        $r11 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat currentFormat>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r11);

        $r13 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque bufferInfos>;

        $r14 = virtualinvoke $r13.<java.util.ArrayDeque: java.lang.Object remove()>();

        r3 = (android.media.MediaCodec$BufferInfo) $r14;

        $i4 = r3.<android.media.MediaCodec$BufferInfo: int offset>;

        $i3 = r3.<android.media.MediaCodec$BufferInfo: int size>;

        $l2 = r3.<android.media.MediaCodec$BufferInfo: long presentationTimeUs>;

        $i1 = r3.<android.media.MediaCodec$BufferInfo: int flags>;

        virtualinvoke r1.<android.media.MediaCodec$BufferInfo: void set(int,int,long,int)>($i4, $i3, $l2, $i1);

        goto label07;

     label06:
        if i0 != -2 goto label07;

        $r8 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>;

        $r9 = virtualinvoke $r8.<java.util.ArrayDeque: java.lang.Object remove()>();

        $r10 = (android.media.MediaFormat) $r9;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat currentFormat> = $r10;

     label07:
        exitmonitor r2;

     label08:
        return i0;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label10:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.media.MediaFormat getOutputFormat()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        android.media.MediaFormat $r4, $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat currentFormat>;

        if $r4 != null goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat currentFormat>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void flush()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r8;
        long $l0, $l1;
        android.os.Handler $r4, $r6;
        java.lang.Runnable $r7;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $l0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>;

        $l1 = $l0 + 1L;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount> = $l1;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.os.Handler handler>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (android.os.Handler) $r5;

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void onFlushCompleted()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onInputBufferAvailable(android.media.MediaCodec, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec r1;
        int i0;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers>;

        virtualinvoke $r5.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void add(int)>(i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onOutputBufferAvailable(android.media.MediaCodec, int, android.media.MediaCodec$BufferInfo)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec r1;
        int i0;
        android.media.MediaCodec$BufferInfo r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r10;
        android.media.MediaFormat $r6, $r9;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r7;
        java.util.ArrayDeque $r8;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec;

        i0 := @parameter1: int;

        r2 := @parameter2: android.media.MediaCodec$BufferInfo;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat>;

        if $r6 == null goto label2;

        $r9 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat>;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void addOutputFormat(android.media.MediaFormat)>($r9);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat> = null;

     label2:
        $r7 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>;

        virtualinvoke $r7.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void add(int)>(i0);

        $r8 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque bufferInfos>;

        virtualinvoke $r8.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r2);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onError(android.media.MediaCodec, android.media.MediaCodec$CodecException)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec r1;
        android.media.MediaCodec$CodecException r2;
        java.lang.Object r3, $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.media.MediaCodec$CodecException;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r3 = $r4;

        entermonitor $r4;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaCodec$CodecException mediaCodecException> = r2;

        exitmonitor r3;

        goto label1;

     label1:
        return;
    }

    public void onOutputFormatChanged(android.media.MediaCodec, android.media.MediaFormat)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec r1;
        android.media.MediaFormat r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.media.MediaFormat;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void addOutputFormat(android.media.MediaFormat)>(r2);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat> = null;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void onFlushCompleted()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        long $l0, $l1, $l2, $l4;
        byte $b3, $b5;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean shutDown>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $l0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>;

        $l1 = $l0 - 1L;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount> = $l1;

        $l2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        $l4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>;

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label07;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void setInternalException(java.lang.IllegalStateException)>($r4);

        exitmonitor r1;

     label06:
        return;

     label07:
        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void flushInternal()>();

        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label10:
        throw r2;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void flushInternal()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.util.ArrayDeque $r1, $r4, $r5, $r6;
        boolean $z0;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r2, $r3;
        java.lang.Object $r7;
        android.media.MediaFormat $r8;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>;

        $z0 = virtualinvoke $r1.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>;

        $r7 = virtualinvoke $r6.<java.util.ArrayDeque: java.lang.Object getLast()>();

        $r8 = (android.media.MediaFormat) $r7;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat pendingOutputFormat> = $r8;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableInputBuffers>;

        virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void clear()>();

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>;

        virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void clear()>();

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque bufferInfos>;

        virtualinvoke $r4.<java.util.ArrayDeque: void clear()>();

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>;

        virtualinvoke $r5.<java.util.ArrayDeque: void clear()>();

        return;
    }

    private boolean isFlushingOrShutdown()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        long $l0;
        byte $b1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $l0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: long pendingFlushCount>;

        $b1 = $l0 cmp 0L;

        if $b1 > 0 goto label1;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: boolean shutDown>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private void addOutputFormat(android.media.MediaFormat)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaFormat r1;
        androidx.media3.exoplayer.mediacodec.IntArrayQueue $r2;
        java.util.ArrayDeque $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: android.media.MediaFormat;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: androidx.media3.exoplayer.mediacodec.IntArrayQueue availableOutputBuffers>;

        virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.IntArrayQueue: void add(int)>(-2);

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.util.ArrayDeque formats>;

        virtualinvoke $r3.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void maybeThrowException()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void maybeThrowInternalException()>();

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void maybeThrowMediaCodecException()>();

        return;
    }

    private void maybeThrowInternalException()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.IllegalStateException r1, $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.IllegalStateException internalException>;

        if $r2 == null goto label1;

        r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.IllegalStateException internalException>;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.IllegalStateException internalException> = null;

        throw r1;

     label1:
        return;
    }

    private void maybeThrowMediaCodecException()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        android.media.MediaCodec$CodecException r1, $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaCodec$CodecException mediaCodecException>;

        if $r2 == null goto label1;

        r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaCodec$CodecException mediaCodecException>;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaCodec$CodecException mediaCodecException> = null;

        throw r1;

     label1:
        return;
    }

    private void setInternalException(java.lang.IllegalStateException)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback r0;
        java.lang.IllegalStateException r1;
        java.lang.Object r2, $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        r1 := @parameter0: java.lang.IllegalStateException;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.Object lock>;

        r2 = $r3;

        entermonitor $r3;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: java.lang.IllegalStateException internalException> = r1;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

