androidx.activity.ComponentActivity
<androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG>
<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>
<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>
<androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>
<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController>
<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore>
<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory>
<androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>
<androidx.activity.ComponentActivity: int mContentLayoutId>
<androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode>
<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>
<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners>
<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners>
<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners>
<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners>
<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners>
<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged>
<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged>
    public void <init>()
    {
        androidx.activity.ComponentActivity r0;
        androidx.lifecycle.Lifecycle r1, $r16, $r18, $r21, $r23;
        java.lang.Runnable $r4;
        androidx.savedstate.SavedStateRegistryController $r6, $r20;
        int $i0, $i1, $i2;
        androidx.savedstate.SavedStateRegistry $r26;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r27;
        androidx.activity.contextaware.OnContextAvailableListener $r28;
        androidx.activity.contextaware.ContextAwareHelper r29;
        androidx.core.view.MenuHostHelper r30;
        androidx.lifecycle.LifecycleRegistry r31;
        androidx.activity.ComponentActivity$1 r32;
        androidx.activity.OnBackPressedDispatcher r33;
        java.util.concurrent.atomic.AtomicInteger r34;
        androidx.activity.ComponentActivity$2 r35;
        java.util.concurrent.CopyOnWriteArrayList r36, r37, r38, r39, r40;
        java.lang.IllegalStateException r41;
        androidx.activity.ComponentActivity$3 r42;
        androidx.activity.ComponentActivity$4 r43;
        androidx.activity.ComponentActivity$5 r44;
        androidx.activity.ImmLeaksCleaner r45;
        androidx.lifecycle.LifecycleObserver r46, r47, r48, r50;
        android.app.Activity r49;

        r0 := @this: androidx.activity.ComponentActivity;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void <init>()>();

        r29 = new androidx.activity.contextaware.ContextAwareHelper;

        specialinvoke r29.<androidx.activity.contextaware.ContextAwareHelper: void <init>()>();

        r0.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper> = r29;

        r30 = new androidx.core.view.MenuHostHelper;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.activity.ComponentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.activity.ComponentActivity: void invalidateMenu()>, methodtype: void __METHODTYPE__());

        specialinvoke r30.<androidx.core.view.MenuHostHelper: void <init>(java.lang.Runnable)>($r4);

        r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper> = r30;

        r31 = new androidx.lifecycle.LifecycleRegistry;

        specialinvoke r31.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>(r0);

        r0.<androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry> = r31;

        $r6 = staticinvoke <androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)>(r0);

        r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController> = $r6;

        r33 = new androidx.activity.OnBackPressedDispatcher;

        r32 = new androidx.activity.ComponentActivity$1;

        specialinvoke r32.<androidx.activity.ComponentActivity$1: void <init>(androidx.activity.ComponentActivity)>(r0);

        specialinvoke r33.<androidx.activity.OnBackPressedDispatcher: void <init>(java.lang.Runnable)>(r32);

        r0.<androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher> = r33;

        r34 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke r34.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode> = r34;

        r35 = new androidx.activity.ComponentActivity$2;

        specialinvoke r35.<androidx.activity.ComponentActivity$2: void <init>(androidx.activity.ComponentActivity)>(r0);

        r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry> = r35;

        r36 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r36.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners> = r36;

        r37 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r37.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners> = r37;

        r38 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r38.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners> = r38;

        r39 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r39.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners> = r39;

        r40 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r40.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners> = r40;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged> = 0;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged> = 0;

        r1 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        if r1 != null goto label1;

        r41 = new java.lang.IllegalStateException;

        specialinvoke r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getLifecycle() returned null in ComponentActivity\'s constructor. Please make sure you are lazily constructing your Lifecycle in the first call to getLifecycle() rather than relying on field initialization.");

        throw r41;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label2;

        $r23 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        r42 = new androidx.activity.ComponentActivity$3;

        specialinvoke r42.<androidx.activity.ComponentActivity$3: void <init>(androidx.activity.ComponentActivity)>(r0);

        r46 = (androidx.lifecycle.LifecycleObserver) r42;

        virtualinvoke $r23.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r46);

     label2:
        $r16 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        r43 = new androidx.activity.ComponentActivity$4;

        specialinvoke r43.<androidx.activity.ComponentActivity$4: void <init>(androidx.activity.ComponentActivity)>(r0);

        r47 = (androidx.lifecycle.LifecycleObserver) r43;

        virtualinvoke $r16.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r47);

        $r18 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        r44 = new androidx.activity.ComponentActivity$5;

        specialinvoke r44.<androidx.activity.ComponentActivity$5: void <init>(androidx.activity.ComponentActivity)>(r0);

        r48 = (androidx.lifecycle.LifecycleObserver) r44;

        virtualinvoke $r18.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r48);

        $r20 = r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController>;

        virtualinvoke $r20.<androidx.savedstate.SavedStateRegistryController: void performAttach()>();

        staticinvoke <androidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)>(r0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if 19 > $i1 goto label3;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 > 23 goto label3;

        $r21 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        r45 = new androidx.activity.ImmLeaksCleaner;

        r49 = (android.app.Activity) r0;

        specialinvoke r45.<androidx.activity.ImmLeaksCleaner: void <init>(android.app.Activity)>(r49);

        r50 = (androidx.lifecycle.LifecycleObserver) r45;

        virtualinvoke $r21.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>(r50);

     label3:
        $r26 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        $r27 = dynamicinvoke "saveState" <androidx.savedstate.SavedStateRegistry$SavedStateProvider (androidx.activity.ComponentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: android.os.Bundle __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.activity.ComponentActivity: android.os.Bundle lambda$new$0()>, methodtype: android.os.Bundle __METHODTYPE__());

        virtualinvoke $r26.<androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)>("android:support:activity-result", $r27);

        $r28 = dynamicinvoke "onContextAvailable" <androidx.activity.contextaware.OnContextAvailableListener (androidx.activity.ComponentActivity)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.content.Context), methodhandle: "REF_INVOKE_SPECIAL" <androidx.activity.ComponentActivity: void lambda$new$1(android.content.Context)>, methodtype: void __METHODTYPE__(android.content.Context));

        virtualinvoke r0.<androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>($r28);

        return;
    }

    public void <init>(int)
    {
        androidx.activity.ComponentActivity r0;
        int i0;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.activity.ComponentActivity: void <init>()>();

        r0.<androidx.activity.ComponentActivity: int mContentLayoutId> = i0;

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.activity.ComponentActivity r0;
        android.os.Bundle r1;
        androidx.savedstate.SavedStateRegistryController $r2;
        androidx.activity.contextaware.ContextAwareHelper $r3;
        boolean $z0;
        int $i0, $i1;
        androidx.activity.OnBackPressedDispatcher $r4;
        android.window.OnBackInvokedDispatcher $r5;
        android.content.Context r6;
        android.app.Activity r7, r8;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController>;

        virtualinvoke $r2.<androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>;

        r6 = (android.content.Context) r0;

        virtualinvoke $r3.<androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)>(r6);

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>(r1);

        r7 = (android.app.Activity) r0;

        staticinvoke <androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>(r7);

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        r8 = (android.app.Activity) r0;

        $r5 = staticinvoke <androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)>(r8);

        virtualinvoke $r4.<androidx.activity.OnBackPressedDispatcher: void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)>($r5);

     label1:
        $i0 = r0.<androidx.activity.ComponentActivity: int mContentLayoutId>;

        if $i0 == 0 goto label2;

        $i1 = r0.<androidx.activity.ComponentActivity: int mContentLayoutId>;

        virtualinvoke r0.<androidx.activity.ComponentActivity: void setContentView(int)>($i1);

     label2:
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        androidx.activity.ComponentActivity r0;
        android.os.Bundle r1;
        androidx.lifecycle.Lifecycle r2;
        boolean $z0;
        androidx.savedstate.SavedStateRegistryController $r3;
        androidx.lifecycle.Lifecycle$State $r4;
        androidx.lifecycle.LifecycleRegistry $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        $z0 = r2 instanceof androidx.lifecycle.LifecycleRegistry;

        if $z0 == 0 goto label1;

        $r5 = (androidx.lifecycle.LifecycleRegistry) r2;

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        virtualinvoke $r5.<androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)>($r4);

     label1:
        specialinvoke r0.<androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController>;

        virtualinvoke $r3.<androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)>(r1);

        return;
    }

    public final java.lang.Object onRetainNonConfigurationInstance()
    {
        androidx.activity.ComponentActivity r0;
        java.lang.Object r1, $r3;
        androidx.activity.ComponentActivity$NonConfigurationInstances $r2, r5, r6;
        androidx.lifecycle.ViewModelStore r4;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 = virtualinvoke r0.<androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()>();

        r4 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore>;

        if r4 != null goto label1;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: java.lang.Object getLastNonConfigurationInstance()>();

        r5 = (androidx.activity.ComponentActivity$NonConfigurationInstances) $r3;

        if r5 == null goto label1;

        r4 = r5.<androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore>;

     label1:
        if r4 != null goto label2;

        if r1 != null goto label2;

        return null;

     label2:
        $r2 = new androidx.activity.ComponentActivity$NonConfigurationInstances;

        specialinvoke $r2.<androidx.activity.ComponentActivity$NonConfigurationInstances: void <init>()>();

        r6 = $r2;

        r6.<androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom> = r1;

        r6.<androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore> = r4;

        return r6;
    }

    public java.lang.Object onRetainCustomNonConfigurationInstance()
    {
        androidx.activity.ComponentActivity r0;

        r0 := @this: androidx.activity.ComponentActivity;

        return null;
    }

    public java.lang.Object getLastCustomNonConfigurationInstance()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.ComponentActivity$NonConfigurationInstances r1;
        java.lang.Object $r2, $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        $r2 = virtualinvoke r0.<androidx.activity.ComponentActivity: java.lang.Object getLastNonConfigurationInstance()>();

        r1 = (androidx.activity.ComponentActivity$NonConfigurationInstances) $r2;

        if r1 == null goto label1;

        $r3 = r1.<androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setContentView(int)
    {
        androidx.activity.ComponentActivity r0;
        int i0;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.activity.ComponentActivity: void initViewTreeOwners()>();

        specialinvoke r0.<androidx.core.app.ComponentActivity: void setContentView(int)>(i0);

        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.activity.ComponentActivity r0;
        android.view.View r1;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.activity.ComponentActivity: void initViewTreeOwners()>();

        specialinvoke r0.<androidx.core.app.ComponentActivity: void setContentView(android.view.View)>(r1);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.activity.ComponentActivity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.activity.ComponentActivity: void initViewTreeOwners()>();

        specialinvoke r0.<androidx.core.app.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.activity.ComponentActivity r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.activity.ComponentActivity: void initViewTreeOwners()>();

        specialinvoke r0.<androidx.core.app.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    private void initViewTreeOwners()
    {
        androidx.activity.ComponentActivity r0;
        android.view.Window $r1, $r3, $r5, $r7;
        android.view.View $r2, $r4, $r6, $r8;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)>($r2, r0);

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)>($r4, r0);

        $r5 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)>($r6, r0);

        $r7 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.view.Window getWindow()>();

        $r8 = virtualinvoke $r7.<android.view.Window: android.view.View getDecorView()>();

        staticinvoke <androidx.activity.ViewTreeOnBackPressedDispatcherOwner: void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner)>($r8, r0);

        return;
    }

    public android.content.Context peekAvailableContext()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.contextaware.ContextAwareHelper $r1;
        android.content.Context $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>;

        $r2 = virtualinvoke $r1.<androidx.activity.contextaware.ContextAwareHelper: android.content.Context peekAvailableContext()>();

        return $r2;
    }

    public final void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.contextaware.OnContextAvailableListener r1;
        androidx.activity.contextaware.ContextAwareHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.activity.contextaware.OnContextAvailableListener;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>;

        virtualinvoke $r2.<androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>(r1);

        return;
    }

    public final void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.contextaware.OnContextAvailableListener r1;
        androidx.activity.contextaware.ContextAwareHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.activity.contextaware.OnContextAvailableListener;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>;

        virtualinvoke $r2.<androidx.activity.contextaware.ContextAwareHelper: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)>(r1);

        return;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        androidx.activity.ComponentActivity r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        androidx.core.view.MenuHostHelper $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        if i0 != 0 goto label1;

        specialinvoke r0.<androidx.core.app.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(i0, r1, r2);

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r3.<androidx.core.view.MenuHostHelper: void onPrepareMenu(android.view.Menu)>(r2);

     label1:
        return 1;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        androidx.activity.ComponentActivity r0;
        int i0;
        android.view.Menu r1;
        androidx.core.view.MenuHostHelper $r2;
        android.view.MenuInflater $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 0 goto label1;

        specialinvoke r0.<androidx.core.app.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>(i0, r1);

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke $r2.<androidx.core.view.MenuHostHelper: void onCreateMenu(android.view.Menu,android.view.MenuInflater)>(r1, $r3);

     label1:
        return 1;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        androidx.activity.ComponentActivity r0;
        int i0;
        android.view.MenuItem r1;
        boolean $z0, $z1;
        androidx.core.view.MenuHostHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        $z0 = specialinvoke r0.<androidx.core.app.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if i0 != 0 goto label2;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        $z1 = virtualinvoke $r2.<androidx.core.view.MenuHostHelper: boolean onMenuItemSelected(android.view.MenuItem)>(r1);

        return $z1;

     label2:
        return 0;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        androidx.activity.ComponentActivity r0;
        int i0;
        android.view.Menu r1;
        androidx.core.view.MenuHostHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r2.<androidx.core.view.MenuHostHelper: void onMenuClosed(android.view.Menu)>(r1);

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onPanelClosed(int,android.view.Menu)>(i0, r1);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.view.MenuProvider r1;
        androidx.core.view.MenuHostHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r2.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)>(r1);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.core.view.MenuHostHelper $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r3.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)>(r1, r2);

        return;
    }

    public void addMenuProvider(androidx.core.view.MenuProvider, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$State)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.view.MenuProvider r1;
        androidx.lifecycle.LifecycleOwner r2;
        androidx.lifecycle.Lifecycle$State r3;
        androidx.core.view.MenuHostHelper $r4;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        r2 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r3 := @parameter2: androidx.lifecycle.Lifecycle$State;

        $r4 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r4.<androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)>(r1, r2, r3);

        return;
    }

    public void removeMenuProvider(androidx.core.view.MenuProvider)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.view.MenuProvider r1;
        androidx.core.view.MenuHostHelper $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.view.MenuProvider;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper>;

        virtualinvoke $r2.<androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)>(r1);

        return;
    }

    public void invalidateMenu()
    {
        androidx.activity.ComponentActivity r0;

        r0 := @this: androidx.activity.ComponentActivity;

        virtualinvoke r0.<androidx.activity.ComponentActivity: void invalidateOptionsMenu()>();

        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.activity.ComponentActivity r0;
        androidx.lifecycle.LifecycleRegistry $r1;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry>;

        return $r1;
    }

    public androidx.lifecycle.ViewModelStore getViewModelStore()
    {
        androidx.activity.ComponentActivity r0;
        android.app.Application $r1;
        androidx.lifecycle.ViewModelStore $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.app.Application getApplication()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Your activity is not yet attached to the Application instance. You can\'t request ViewModel before onCreate call.");

        throw $r3;

     label1:
        virtualinvoke r0.<androidx.activity.ComponentActivity: void ensureViewModelStore()>();

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore>;

        return $r2;
    }

    void ensureViewModelStore()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.ComponentActivity$NonConfigurationInstances r1;
        androidx.lifecycle.ViewModelStore $r2, $r4, $r5, $r6;
        java.lang.Object $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: java.lang.Object getLastNonConfigurationInstance()>();

        r1 = (androidx.activity.ComponentActivity$NonConfigurationInstances) $r3;

        if r1 == null goto label1;

        $r6 = r1.<androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore>;

        r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore> = $r6;

     label1:
        $r4 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore>;

        if $r4 != null goto label2;

        $r5 = new androidx.lifecycle.ViewModelStore;

        specialinvoke $r5.<androidx.lifecycle.ViewModelStore: void <init>()>();

        r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore> = $r5;

     label2:
        return;
    }

    public androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
    {
        androidx.activity.ComponentActivity r0;
        androidx.lifecycle.ViewModelProvider$Factory $r1, $r9;
        androidx.lifecycle.SavedStateViewModelFactory $r2;
        android.app.Application $r3;
        android.content.Intent $r4, $r5;
        android.os.Bundle $r8;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory>;

        if $r1 != null goto label3;

        $r2 = new androidx.lifecycle.SavedStateViewModelFactory;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.app.Application getApplication()>();

        $r4 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.content.Intent getIntent()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r5.<android.content.Intent: android.os.Bundle getExtras()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        specialinvoke $r2.<androidx.lifecycle.SavedStateViewModelFactory: void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle)>($r3, r0, $r8);

        r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory> = $r2;

     label3:
        $r9 = r0.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory>;

        return $r9;
    }

    public androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
    {
        androidx.activity.ComponentActivity r0;
        androidx.lifecycle.viewmodel.MutableCreationExtras r1, $r2;
        android.app.Application $r3, $r13;
        androidx.lifecycle.viewmodel.CreationExtras$Key $r4, $r5, $r9, $r12;
        android.content.Intent $r6, $r7, $r10;
        android.os.Bundle $r8, $r11;

        r0 := @this: androidx.activity.ComponentActivity;

        $r2 = new androidx.lifecycle.viewmodel.MutableCreationExtras;

        specialinvoke $r2.<androidx.lifecycle.viewmodel.MutableCreationExtras: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.app.Application getApplication()>();

        if $r3 == null goto label1;

        $r12 = <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY>;

        $r13 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.app.Application getApplication()>();

        virtualinvoke r1.<androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)>($r12, $r13);

     label1:
        $r4 = <androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key SAVED_STATE_REGISTRY_OWNER_KEY>;

        virtualinvoke r1.<androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)>($r4, r0);

        $r5 = <androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_STORE_OWNER_KEY>;

        virtualinvoke r1.<androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)>($r5, r0);

        $r6 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.content.Intent getIntent()>();

        if $r6 == null goto label2;

        $r7 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r7.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r8 == null goto label2;

        $r9 = <androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key DEFAULT_ARGS_KEY>;

        $r10 = virtualinvoke r0.<androidx.activity.ComponentActivity: android.content.Intent getIntent()>();

        $r11 = virtualinvoke $r10.<android.content.Intent: android.os.Bundle getExtras()>();

        virtualinvoke r1.<androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)>($r9, $r11);

     label2:
        return r1;
    }

    public void onBackPressed()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.OnBackPressedDispatcher $r1;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        virtualinvoke $r1.<androidx.activity.OnBackPressedDispatcher: void onBackPressed()>();

        return;
    }

    public final androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.OnBackPressedDispatcher $r1;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher>;

        return $r1;
    }

    public final androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
    {
        androidx.activity.ComponentActivity r0;
        androidx.savedstate.SavedStateRegistryController $r1;
        androidx.savedstate.SavedStateRegistry $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController>;

        $r2 = virtualinvoke $r1.<androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        return $r2;
    }

    public void startActivityForResult(android.content.Intent, int)
    {
        androidx.activity.ComponentActivity r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(r1, i0);

        return;
    }

    public void startActivityForResult(android.content.Intent, int, android.os.Bundle)
    {
        androidx.activity.ComponentActivity r0;
        android.content.Intent r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>(r1, i0, r2);

        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException
    {
        androidx.activity.ComponentActivity r0;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>(r1, i0, r2, i1, i2, i3);

        return;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        androidx.activity.ComponentActivity r0;
        android.content.IntentSender r1;
        int i0, i1, i2, i3;
        android.content.Intent r2;
        android.os.Bundle r3;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.IntentSender;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r1, i0, r2, i1, i2, i3, r3);

        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        androidx.activity.ComponentActivity r0;
        int i0, i1;
        android.content.Intent r1;
        androidx.activity.result.ActivityResultRegistry $r2;
        boolean $z0;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        $r2 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        $z0 = virtualinvoke $r2.<androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,int,android.content.Intent)>(i0, i1, r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onActivityResult(int,int,android.content.Intent)>(i0, i1, r1);

     label1:
        return;
    }

    public void onRequestPermissionsResult(int, java.lang.String[], int[])
    {
        androidx.activity.ComponentActivity r0;
        int i0, $i1;
        java.lang.String[] r1;
        int[] r2;
        android.content.Intent $r3, $r5, $r6;
        androidx.activity.result.ActivityResultRegistry $r4;
        boolean $z0;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        $r4 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("androidx.activity.result.contract.extra.PERMISSIONS", r1);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>("androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS", r2);

        $z0 = virtualinvoke $r4.<androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,int,android.content.Intent)>(i0, -1, $r6);

        if $z0 != 0 goto label1;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>(i0, r1, r2);

     label1:
        return;
    }

    public final androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract, androidx.activity.result.ActivityResultRegistry, androidx.activity.result.ActivityResultCallback)
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.result.contract.ActivityResultContract r1;
        androidx.activity.result.ActivityResultRegistry r2;
        androidx.activity.result.ActivityResultCallback r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0;
        java.lang.String $r8;
        androidx.activity.result.ActivityResultLauncher $r9;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.activity.result.contract.ActivityResultContract;

        r2 := @parameter1: androidx.activity.result.ActivityResultRegistry;

        r3 := @parameter2: androidx.activity.result.ActivityResultCallback;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("activity_rq#");

        $r6 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r2.<androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)>($r8, r0, r1, r3);

        return $r9;
    }

    public final androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract, androidx.activity.result.ActivityResultCallback)
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.result.contract.ActivityResultContract r1;
        androidx.activity.result.ActivityResultCallback r2;
        androidx.activity.result.ActivityResultRegistry $r3;
        androidx.activity.result.ActivityResultLauncher $r4;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.activity.result.contract.ActivityResultContract;

        r2 := @parameter1: androidx.activity.result.ActivityResultCallback;

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        $r4 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)>(r1, $r3, r2);

        return $r4;
    }

    public final androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
    {
        androidx.activity.ComponentActivity r0;
        androidx.activity.result.ActivityResultRegistry $r1;

        r0 := @this: androidx.activity.ComponentActivity;

        $r1 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        return $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.activity.ComponentActivity r0;
        android.content.res.Configuration r1;
        java.util.Iterator r2;
        androidx.core.util.Consumer r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r4 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.util.Consumer) $r5;

        interfaceinvoke r3.<androidx.core.util.Consumer: void accept(java.lang.Object)>(r1);

        goto label1;

     label2:
        return;
    }

    public final void addOnConfigurationChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void onTrimMemory(int)
    {
        androidx.activity.ComponentActivity r0;
        int i0;
        java.util.Iterator r1;
        androidx.core.util.Consumer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onTrimMemory(int)>(i0);

        $r3 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.core.util.Consumer) $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r5);

        goto label1;

     label2:
        return;
    }

    public final void addOnTrimMemoryListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnTrimMemoryListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    protected void onNewIntent(android.content.Intent)
    {
        androidx.activity.ComponentActivity r0;
        android.content.Intent r1;
        java.util.Iterator r2;
        androidx.core.util.Consumer r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onNewIntent(android.content.Intent)>(r1);

        $r4 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners>;

        r2 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.core.util.Consumer) $r5;

        interfaceinvoke r3.<androidx.core.util.Consumer: void accept(java.lang.Object)>(r1);

        goto label1;

     label2:
        return;
    }

    public final void addOnNewIntentListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnNewIntentListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void onMultiWindowModeChanged(boolean)
    {
        androidx.activity.ComponentActivity r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        androidx.core.util.Consumer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Object $r4;
        androidx.core.app.MultiWindowModeChangedInfo $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged>;

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.core.util.Consumer) $r4;

        $r5 = new androidx.core.app.MultiWindowModeChangedInfo;

        specialinvoke $r5.<androidx.core.app.MultiWindowModeChangedInfo: void <init>(boolean)>(z0);

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r5);

        goto label2;

     label3:
        return;
    }

    public void onMultiWindowModeChanged(boolean, android.content.res.Configuration)
    {
        androidx.activity.ComponentActivity r0;
        boolean z0, $z1;
        android.content.res.Configuration r1;
        androidx.core.util.Consumer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Object $r4;
        androidx.core.app.MultiWindowModeChangedInfo $r5;
        java.lang.Throwable $r6, r7;
        java.util.Iterator r8;

        r0 := @this: androidx.activity.ComponentActivity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged> = 1;

     label1:
        specialinvoke r0.<androidx.core.app.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

     label2:
        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged> = 0;

        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged> = 0;

        throw r7;

     label4:
        $r3 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners>;

        r8 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.core.util.Consumer) $r4;

        $r5 = new androidx.core.app.MultiWindowModeChangedInfo;

        specialinvoke $r5.<androidx.core.app.MultiWindowModeChangedInfo: void <init>(boolean,android.content.res.Configuration)>(z0, r1);

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r5);

        goto label5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void onPictureInPictureModeChanged(boolean)
    {
        androidx.activity.ComponentActivity r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        androidx.core.util.Consumer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Object $r4;
        androidx.core.app.PictureInPictureModeChangedInfo $r5;

        r0 := @this: androidx.activity.ComponentActivity;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged>;

        if $z1 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.core.util.Consumer) $r4;

        $r5 = new androidx.core.app.PictureInPictureModeChangedInfo;

        specialinvoke $r5.<androidx.core.app.PictureInPictureModeChangedInfo: void <init>(boolean)>(z0);

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r5);

        goto label2;

     label3:
        return;
    }

    public void onPictureInPictureModeChanged(boolean, android.content.res.Configuration)
    {
        androidx.activity.ComponentActivity r0;
        boolean z0, $z1;
        android.content.res.Configuration r1;
        androidx.core.util.Consumer r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.lang.Object $r4;
        androidx.core.app.PictureInPictureModeChangedInfo $r5;
        java.lang.Throwable $r6, r7;
        java.util.Iterator r8;

        r0 := @this: androidx.activity.ComponentActivity;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.content.res.Configuration;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged> = 1;

     label1:
        specialinvoke r0.<androidx.core.app.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)>(z0, r1);

     label2:
        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged> = 0;

        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        r0.<androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged> = 0;

        throw r7;

     label4:
        $r3 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners>;

        r8 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.core.util.Consumer) $r4;

        $r5 = new androidx.core.app.PictureInPictureModeChangedInfo;

        specialinvoke $r5.<androidx.core.app.PictureInPictureModeChangedInfo: void <init>(boolean,android.content.res.Configuration)>(z0, r1);

        interfaceinvoke r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r5);

        goto label5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
    {
        androidx.activity.ComponentActivity r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: androidx.core.util.Consumer;

        $r2 = r0.<androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void reportFullyDrawn()
    {
        androidx.activity.ComponentActivity r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2;
        android.content.Context r3;

        r0 := @this: androidx.activity.ComponentActivity;

     label1:
        $z0 = staticinvoke <androidx.tracing.Trace: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>("reportFullyDrawn() for ComponentActivity");

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 19 goto label3;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void reportFullyDrawn()>();

        goto label4;

     label3:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 != 19 goto label4;

        r3 = (android.content.Context) r0;

        $i2 = staticinvoke <androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>(r3, "android.permission.UPDATE_DEVICE_STATS");

        if $i2 != 0 goto label4;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void reportFullyDrawn()>();

     label4:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        goto label6;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    private void lambda$new$1(android.content.Context)
    {
        androidx.activity.ComponentActivity r0;
        android.content.Context r1;
        android.os.Bundle r2;
        androidx.savedstate.SavedStateRegistry $r3;
        androidx.activity.result.ActivityResultRegistry $r4;

        r0 := @this: androidx.activity.ComponentActivity;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()>();

        r2 = virtualinvoke $r3.<androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>("android:support:activity-result");

        if r2 == null goto label1;

        $r4 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        virtualinvoke $r4.<androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)>(r2);

     label1:
        return;
    }

    private android.os.Bundle lambda$new$0()
    {
        androidx.activity.ComponentActivity r0;
        android.os.Bundle r1, $r2;
        androidx.activity.result.ActivityResultRegistry $r3;

        r0 := @this: androidx.activity.ComponentActivity;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry>;

        virtualinvoke $r3.<androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)>(r1);

        return r1;
    }

    static void access$001(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity r0;

        r0 := @parameter0: androidx.activity.ComponentActivity;

        specialinvoke r0.<androidx.core.app.ComponentActivity: void onBackPressed()>();

        return;
    }

androidx.activity.ComponentActivity$1
<androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0>
    void <init>(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity$1 r0;
        androidx.activity.ComponentActivity r1;

        r0 := @this: androidx.activity.ComponentActivity$1;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.activity.ComponentActivity$1 r0;
        java.lang.Throwable r1, $r3;
        androidx.activity.ComponentActivity $r2;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.activity.ComponentActivity$1;

     label1:
        $r2 = r0.<androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0>;

        staticinvoke <androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = virtualinvoke r1.<java.lang.IllegalStateException: java.lang.String getMessage()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, "Can not perform this action after onSaveInstanceState");

        if $z0 != 0 goto label4;

        throw r1;

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

androidx.activity.ComponentActivity$2$1
<androidx.activity.ComponentActivity$2$1: int val$requestCode>
<androidx.activity.ComponentActivity$2$1: androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult>
<androidx.activity.ComponentActivity$2$1: androidx.activity.ComponentActivity$2 this$1>
    void <init>(androidx.activity.ComponentActivity$2, int, androidx.activity.result.contract.ActivityResultContract$SynchronousResult)
    {
        androidx.activity.ComponentActivity$2$1 r0;
        androidx.activity.ComponentActivity$2 r1;
        int i0;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult r2;

        r0 := @this: androidx.activity.ComponentActivity$2$1;

        r1 := @parameter0: androidx.activity.ComponentActivity$2;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.activity.result.contract.ActivityResultContract$SynchronousResult;

        r0.<androidx.activity.ComponentActivity$2$1: androidx.activity.ComponentActivity$2 this$1> = r1;

        r0.<androidx.activity.ComponentActivity$2$1: int val$requestCode> = i0;

        r0.<androidx.activity.ComponentActivity$2$1: androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.activity.ComponentActivity$2$1 r0;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r1;
        androidx.activity.ComponentActivity$2 $r2;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: androidx.activity.ComponentActivity$2$1;

        $r2 = r0.<androidx.activity.ComponentActivity$2$1: androidx.activity.ComponentActivity$2 this$1>;

        $i0 = r0.<androidx.activity.ComponentActivity$2$1: int val$requestCode>;

        $r1 = r0.<androidx.activity.ComponentActivity$2$1: androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult>;

        $r3 = virtualinvoke $r1.<androidx.activity.result.contract.ActivityResultContract$SynchronousResult: java.lang.Object getValue()>();

        virtualinvoke $r2.<androidx.activity.ComponentActivity$2: boolean dispatchResult(int,java.lang.Object)>($i0, $r3);

        return;
    }

androidx.activity.ComponentActivity$2$2
<androidx.activity.ComponentActivity$2$2: int val$requestCode>
<androidx.activity.ComponentActivity$2$2: android.content.IntentSender$SendIntentException val$e>
<androidx.activity.ComponentActivity$2$2: androidx.activity.ComponentActivity$2 this$1>
    void <init>(androidx.activity.ComponentActivity$2, int, android.content.IntentSender$SendIntentException)
    {
        androidx.activity.ComponentActivity$2$2 r0;
        androidx.activity.ComponentActivity$2 r1;
        int i0;
        android.content.IntentSender$SendIntentException r2;

        r0 := @this: androidx.activity.ComponentActivity$2$2;

        r1 := @parameter0: androidx.activity.ComponentActivity$2;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.IntentSender$SendIntentException;

        r0.<androidx.activity.ComponentActivity$2$2: androidx.activity.ComponentActivity$2 this$1> = r1;

        r0.<androidx.activity.ComponentActivity$2$2: int val$requestCode> = i0;

        r0.<androidx.activity.ComponentActivity$2$2: android.content.IntentSender$SendIntentException val$e> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.activity.ComponentActivity$2$2 r0;
        android.content.Intent $r1, $r3, $r5;
        androidx.activity.ComponentActivity$2 $r2;
        int $i0;
        android.content.IntentSender$SendIntentException $r4;

        r0 := @this: androidx.activity.ComponentActivity$2$2;

        $r2 = r0.<androidx.activity.ComponentActivity$2$2: androidx.activity.ComponentActivity$2 this$1>;

        $i0 = r0.<androidx.activity.ComponentActivity$2$2: int val$requestCode>;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>()>();

        $r3 = virtualinvoke $r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("androidx.activity.result.contract.action.INTENT_SENDER_REQUEST");

        $r4 = r0.<androidx.activity.ComponentActivity$2$2: android.content.IntentSender$SendIntentException val$e>;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("androidx.activity.result.contract.extra.SEND_INTENT_EXCEPTION", $r4);

        virtualinvoke $r2.<androidx.activity.ComponentActivity$2: boolean dispatchResult(int,int,android.content.Intent)>($i0, 0, $r5);

        return;
    }

androidx.activity.ComponentActivity$2
<androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0>
    void <init>(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity$2 r0;
        androidx.activity.ComponentActivity r1;

        r0 := @this: androidx.activity.ComponentActivity$2;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0> = r1;

        specialinvoke r0.<androidx.activity.result.ActivityResultRegistry: void <init>()>();

        return;
    }

    public void onLaunch(int, androidx.activity.result.contract.ActivityResultContract, java.lang.Object, androidx.core.app.ActivityOptionsCompat)
    {
        androidx.activity.ComponentActivity$2 r0;
        int i0, $i1, $i2;
        androidx.activity.result.contract.ActivityResultContract r1;
        java.lang.Object r2;
        androidx.core.app.ActivityOptionsCompat r3;
        androidx.activity.ComponentActivity r4;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult r5;
        android.content.Intent r6, $r13;
        java.lang.Throwable r7, $r20;
        android.os.Bundle $r8, $r14, r24;
        java.lang.String $r9, $r10, $r25, $r26;
        boolean $z0, $z3, $z4;
        android.os.Parcelable $r11;
        android.content.IntentSender $r12;
        java.lang.ClassLoader $r15, $r16;
        android.os.Looper $r18, $r22;
        java.lang.String[] r27;
        androidx.activity.result.IntentSenderRequest r28;
        android.os.Handler r29, r31;
        androidx.activity.ComponentActivity$2$1 r30;
        androidx.activity.ComponentActivity$2$2 r32;
        android.content.Context r33, r34;
        android.app.Activity r35, r36, r37;

        r0 := @this: androidx.activity.ComponentActivity$2;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.activity.result.contract.ActivityResultContract;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.core.app.ActivityOptionsCompat;

        r4 = r0.<androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0>;

        r33 = (android.content.Context) r4;

        r5 = virtualinvoke r1.<androidx.activity.result.contract.ActivityResultContract: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)>(r33, r2);

        if r5 == null goto label01;

        r29 = new android.os.Handler;

        $r18 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke r29.<android.os.Handler: void <init>(android.os.Looper)>($r18);

        r30 = new androidx.activity.ComponentActivity$2$1;

        specialinvoke r30.<androidx.activity.ComponentActivity$2$1: void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult)>(r0, i0, r5);

        virtualinvoke r29.<android.os.Handler: boolean post(java.lang.Runnable)>(r30);

        return;

     label01:
        r34 = (android.content.Context) r4;

        r6 = virtualinvoke r1.<androidx.activity.result.contract.ActivityResultContract: android.content.Intent createIntent(android.content.Context,java.lang.Object)>(r34, r2);

        r24 = null;

        $r8 = virtualinvoke r6.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r8 == null goto label02;

        $r14 = virtualinvoke r6.<android.content.Intent: android.os.Bundle getExtras()>();

        $r15 = virtualinvoke $r14.<android.os.Bundle: java.lang.ClassLoader getClassLoader()>();

        if $r15 != null goto label02;

        $r16 = virtualinvoke r4.<androidx.activity.ComponentActivity: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke r6.<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>($r16);

     label02:
        $z3 = virtualinvoke r6.<android.content.Intent: boolean hasExtra(java.lang.String)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE");

        if $z3 == 0 goto label03;

        r24 = virtualinvoke r6.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE");

        virtualinvoke r6.<android.content.Intent: void removeExtra(java.lang.String)>("androidx.activity.result.contract.extra.ACTIVITY_OPTIONS_BUNDLE");

        goto label04;

     label03:
        if r3 == null goto label04;

        r24 = virtualinvoke r3.<androidx.core.app.ActivityOptionsCompat: android.os.Bundle toBundle()>();

     label04:
        $r25 = "androidx.activity.result.contract.action.REQUEST_PERMISSIONS";

        $r26 = virtualinvoke r6.<android.content.Intent: java.lang.String getAction()>();

        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label06;

        r27 = virtualinvoke r6.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("androidx.activity.result.contract.extra.PERMISSIONS");

        if r27 != null goto label05;

        r27 = newarray (java.lang.String)[0];

     label05:
        r35 = (android.app.Activity) r4;

        staticinvoke <androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>(r35, r27, i0);

        goto label12;

     label06:
        $r9 = "androidx.activity.result.contract.action.INTENT_SENDER_REQUEST";

        $r10 = virtualinvoke r6.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label11;

        $r11 = virtualinvoke r6.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("androidx.activity.result.contract.extra.INTENT_SENDER_REQUEST");

        r28 = (androidx.activity.result.IntentSenderRequest) $r11;

     label07:
        $r12 = virtualinvoke r28.<androidx.activity.result.IntentSenderRequest: android.content.IntentSender getIntentSender()>();

        $r13 = virtualinvoke r28.<androidx.activity.result.IntentSenderRequest: android.content.Intent getFillInIntent()>();

        $i1 = virtualinvoke r28.<androidx.activity.result.IntentSenderRequest: int getFlagsMask()>();

        $i2 = virtualinvoke r28.<androidx.activity.result.IntentSenderRequest: int getFlagsValues()>();

        r36 = (android.app.Activity) r4;

        staticinvoke <androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>(r36, $r12, i0, $r13, $i1, $i2, 0, r24);

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

        r7 = $r20;

        r31 = new android.os.Handler;

        $r22 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke r31.<android.os.Handler: void <init>(android.os.Looper)>($r22);

        r32 = new androidx.activity.ComponentActivity$2$2;

        specialinvoke r32.<androidx.activity.ComponentActivity$2$2: void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException)>(r0, i0, r7);

        virtualinvoke r31.<android.os.Handler: boolean post(java.lang.Runnable)>(r32);

     label10:
        goto label12;

     label11:
        r37 = (android.app.Activity) r4;

        staticinvoke <androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)>(r37, r6, i0, r24);

     label12:
        return;

        catch android.content.IntentSender$SendIntentException from label07 to label08 with label09;
    }

androidx.activity.ComponentActivity$3
<androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0>
    void <init>(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity$3 r0;
        androidx.activity.ComponentActivity r1;

        r0 := @this: androidx.activity.ComponentActivity$3;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.activity.ComponentActivity$3 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r5;
        android.view.Window r3;
        android.view.View r4, $r7;
        androidx.activity.ComponentActivity $r6;

        r0 := @this: androidx.activity.ComponentActivity$3;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        if r2 != $r5 goto label3;

        $r6 = r0.<androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0>;

        r3 = virtualinvoke $r6.<androidx.activity.ComponentActivity: android.view.Window getWindow()>();

        if r3 == null goto label1;

        $r7 = virtualinvoke r3.<android.view.Window: android.view.View peekDecorView()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        r4 = $r7;

        if r4 == null goto label3;

        staticinvoke <androidx.activity.ComponentActivity$Api19Impl: void cancelPendingInputEvents(android.view.View)>(r4);

     label3:
        return;
    }

androidx.activity.ComponentActivity$4
<androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0>
    void <init>(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity$4 r0;
        androidx.activity.ComponentActivity r1;

        r0 := @this: androidx.activity.ComponentActivity$4;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.activity.ComponentActivity$4 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;
        androidx.activity.ComponentActivity $r4, $r6, $r7;
        androidx.activity.contextaware.ContextAwareHelper $r5;
        boolean $z0;
        androidx.lifecycle.ViewModelStore $r8;

        r0 := @this: androidx.activity.ComponentActivity$4;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r2 != $r3 goto label1;

        $r4 = r0.<androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0>;

        $r5 = $r4.<androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper>;

        virtualinvoke $r5.<androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()>();

        $r6 = r0.<androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0>;

        $z0 = virtualinvoke $r6.<androidx.activity.ComponentActivity: boolean isChangingConfigurations()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0>;

        $r8 = virtualinvoke $r7.<androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()>();

        virtualinvoke $r8.<androidx.lifecycle.ViewModelStore: void clear()>();

     label1:
        return;
    }

androidx.activity.ComponentActivity$5
<androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0>
    void <init>(androidx.activity.ComponentActivity)
    {
        androidx.activity.ComponentActivity$5 r0;
        androidx.activity.ComponentActivity r1;

        r0 := @this: androidx.activity.ComponentActivity$5;

        r1 := @parameter0: androidx.activity.ComponentActivity;

        r0.<androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.activity.ComponentActivity$5 r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2;
        androidx.activity.ComponentActivity $r3, $r4;
        androidx.lifecycle.Lifecycle $r5;
        androidx.lifecycle.LifecycleObserver r6;

        r0 := @this: androidx.activity.ComponentActivity$5;

        r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter1: androidx.lifecycle.Lifecycle$Event;

        $r3 = r0.<androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0>;

        virtualinvoke $r3.<androidx.activity.ComponentActivity: void ensureViewModelStore()>();

        $r4 = r0.<androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0>;

        $r5 = virtualinvoke $r4.<androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()>();

        r6 = (androidx.lifecycle.LifecycleObserver) r0;

        virtualinvoke $r5.<androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>(r6);

        return;
    }

androidx.activity.ComponentActivity$Api19Impl
    private void <init>()
    {
        androidx.activity.ComponentActivity$Api19Impl r0;

        r0 := @this: androidx.activity.ComponentActivity$Api19Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void cancelPendingInputEvents(android.view.View)
    {
        android.view.View r0;

        r0 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.View: void cancelPendingInputEvents()>();

        return;
    }

androidx.activity.ComponentActivity$Api33Impl
    private void <init>()
    {
        androidx.activity.ComponentActivity$Api33Impl r0;

        r0 := @this: androidx.activity.ComponentActivity$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
    {
        android.app.Activity r0;
        android.window.OnBackInvokedDispatcher $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher()>();

        return $r1;
    }

androidx.activity.ComponentActivity$NonConfigurationInstances
<androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom>
<androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore>
    void <init>()
    {
        androidx.activity.ComponentActivity$NonConfigurationInstances r0;

        r0 := @this: androidx.activity.ComponentActivity$NonConfigurationInstances;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

