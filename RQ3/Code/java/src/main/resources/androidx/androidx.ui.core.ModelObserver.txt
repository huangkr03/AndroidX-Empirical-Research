androidx.ui.core.ModelObserver
<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 commitExecutor>
<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function2 commitObserver>
<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 readObserver>
<androidx.ui.core.ModelObserver: java.util.List commitMaps>
<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function0 commitUnsubscribe>
<androidx.ui.core.ModelObserver: boolean isObserving>
<androidx.ui.core.ModelObserver: boolean isPaused>
<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap currentMap>
<androidx.ui.core.ModelObserver: java.lang.Object currentTarget>
    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ModelObserver r0, r2;
        kotlin.jvm.functions.Function1 r1, $r7;
        boolean z0;
        java.util.List r3;
        androidx.ui.core.ModelObserver$commitObserver$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        androidx.ui.core.ModelObserver$readObserver$1 $r6;
        java.util.ArrayList $r8;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "commitExecutor");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 commitExecutor> = r1;

        $r4 = new androidx.ui.core.ModelObserver$commitObserver$1;

        specialinvoke $r4.<androidx.ui.core.ModelObserver$commitObserver$1: void <init>(androidx.ui.core.ModelObserver)>(r0);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function2 commitObserver> = $r5;

        $r6 = new androidx.ui.core.ModelObserver$readObserver$1;

        specialinvoke $r6.<androidx.ui.core.ModelObserver$readObserver$1: void <init>(androidx.ui.core.ModelObserver)>(r0);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 readObserver> = $r7;

        r2 = r0;

        z0 = 0;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r8;

        r2.<androidx.ui.core.ModelObserver: java.util.List commitMaps> = r3;

        return;
    }

    public final kotlin.jvm.functions.Function2 getFrameCommitObserver()
    {
        androidx.ui.core.ModelObserver r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.ui.core.ModelObserver;

        $r1 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function2 commitObserver>;

        return $r1;
    }

    public final void observeReads(java.lang.Object, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.ModelObserver r0;
        java.lang.Object r1, r5, $r9;
        kotlin.jvm.functions.Function1 r2, $r12;
        kotlin.jvm.functions.Function0 r3, $r8;
        androidx.compose.ObserverMap r4, $r10;
        boolean z0, $z1;
        androidx.ui.core.ModelObserver$observeReads$1 $r6;
        java.util.List $r7;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "onCommit");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        r4 = r0.<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap currentMap>;

        r5 = r0.<androidx.ui.core.ModelObserver: java.lang.Object currentTarget>;

        z0 = r0.<androidx.ui.core.ModelObserver: boolean isPaused>;

        $r7 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        $r6 = new androidx.ui.core.ModelObserver$observeReads$1;

        specialinvoke $r6.<androidx.ui.core.ModelObserver$observeReads$1: void <init>(androidx.ui.core.ModelObserver,kotlin.jvm.functions.Function1,java.lang.Object)>(r0, r2, r1);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        $r9 = staticinvoke <androidx.ui.util.SynchronizationHelperKt: java.lang.Object 'synchronized'(java.lang.Object,kotlin.jvm.functions.Function0)>($r7, $r8);

        $r10 = (androidx.compose.ObserverMap) $r9;

        r0.<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap currentMap> = $r10;

        r0.<androidx.ui.core.ModelObserver: java.lang.Object currentTarget> = r1;

        r0.<androidx.ui.core.ModelObserver: boolean isPaused> = 0;

        $z1 = r0.<androidx.ui.core.ModelObserver: boolean isObserving>;

        if $z1 != 0 goto label1;

        r0.<androidx.ui.core.ModelObserver: boolean isObserving> = 1;

        $r12 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 readObserver>;

        staticinvoke <androidx.compose.frames.FramesKt: void observeAllReads(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)>($r12, r3);

        r0.<androidx.ui.core.ModelObserver: boolean isObserving> = 0;

        goto label2;

     label1:
        interfaceinvoke r3.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        r0.<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap currentMap> = r4;

        r0.<androidx.ui.core.ModelObserver: java.lang.Object currentTarget> = r5;

        r0.<androidx.ui.core.ModelObserver: boolean isPaused> = z0;

        return;
    }

    public final void pauseObservingReads(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.ModelObserver r0;
        kotlin.jvm.functions.Function0 r1;
        boolean z0;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        z0 = r0.<androidx.ui.core.ModelObserver: boolean isPaused>;

        r0.<androidx.ui.core.ModelObserver: boolean isPaused> = 1;

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r0.<androidx.ui.core.ModelObserver: boolean isPaused> = z0;

        return;
    }

    public final void clear(java.lang.Object)
    {
        androidx.ui.core.ModelObserver r0;
        java.lang.Object r1;
        androidx.ui.core.ModelObserver$clear$1 $r2;
        java.util.List $r3;
        kotlin.jvm.functions.Function0 $r4;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        $r3 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        $r2 = new androidx.ui.core.ModelObserver$clear$1;

        specialinvoke $r2.<androidx.ui.core.ModelObserver$clear$1: void <init>(androidx.ui.core.ModelObserver,java.lang.Object)>(r0, r1);

        $r4 = (kotlin.jvm.functions.Function0) $r2;

        staticinvoke <androidx.ui.util.SynchronizationHelperKt: java.lang.Object 'synchronized'(java.lang.Object,kotlin.jvm.functions.Function0)>($r3, $r4);

        return;
    }

    public final void enableModelUpdatesObserving(boolean)
    {
        androidx.ui.core.ModelObserver r0;
        boolean z0, z1, $z4, $z5, z6, z7;
        kotlin.jvm.functions.Function0 $r1, $r3, $r5, r11;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Boolean $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;

        r0 := @this: androidx.ui.core.ModelObserver;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function0 commitUnsubscribe>;

        if $r1 != null goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if z0 != $z4 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z6 = $z5;

        z1 = 0;

        z7 = 0;

        if z6 != 0 goto label5;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Called twice with the same enabled value: ", $r6);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label5:
        if z0 == 0 goto label6;

        $r4 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function2 commitObserver>;

        $r5 = staticinvoke <androidx.compose.frames.FramesKt: kotlin.jvm.functions.Function0 registerCommitObserver(kotlin.jvm.functions.Function2)>($r4);

        r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function0 commitUnsubscribe> = $r5;

        goto label9;

     label6:
        r11 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function0 commitUnsubscribe>;

        if r11 != null goto label7;

        goto label8;

     label7:
        interfaceinvoke r11.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label8:
        $r3 = (kotlin.jvm.functions.Function0) null;

        r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function0 commitUnsubscribe> = $r3;

     label9:
        return;
    }

    private final void callOnCommit(java.util.List[])
    {
        androidx.ui.core.ModelObserver r0;
        java.util.List[] r1;
        int i0, i1, i2;
        java.util.List r2, $r4;
        boolean z0, $z1, $z2;
        androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1 $r3;
        kotlin.jvm.functions.Function0 $r5;
        java.lang.Object $r6;
        java.util.Collection r7;
        androidx.ui.core.ModelObserver$CommitMap r8;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: java.util.List[];

        i2 = 0;

        i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>(r1);

        if i2 > i0 goto label5;

     label1:
        i1 = i2;

        i2 = i2 + 1;

        r2 = r1[i1];

        r7 = (java.util.Collection) r2;

        z0 = 0;

        $z1 = interfaceinvoke r7.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label4;

        $r4 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        $r3 = new androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1;

        specialinvoke $r3.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: void <init>(androidx.ui.core.ModelObserver,int)>(r0, i1);

        $r5 = (kotlin.jvm.functions.Function0) $r3;

        $r6 = staticinvoke <androidx.ui.util.SynchronizationHelperKt: java.lang.Object 'synchronized'(java.lang.Object,kotlin.jvm.functions.Function0)>($r4, $r5);

        r8 = (androidx.ui.core.ModelObserver$CommitMap) $r6;

        virtualinvoke r8.<androidx.ui.core.ModelObserver$CommitMap: void callOnCommit(java.util.List)>(r2);

     label4:
        if i1 != i0 goto label1;

     label5:
        return;
    }

    private final androidx.compose.ObserverMap ensureMap(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ModelObserver r0;
        kotlin.jvm.functions.Function1 r1, $r12;
        int i0, i1, $i2;
        java.util.Iterator r2;
        java.lang.Object r3, $r6;
        androidx.ui.core.ModelObserver$CommitMap r4, $r7, $r9;
        boolean $z2, $z4;
        java.util.List $r5, $r10, $r13;
        androidx.compose.ObserverMap $r8, $r11;

        r0 := @this: androidx.ui.core.ModelObserver;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r13 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        i1 = 0;

        r2 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.ui.core.ModelObserver$CommitMap) r3;

        $r12 = virtualinvoke r4.<androidx.ui.core.ModelObserver$CommitMap: kotlin.jvm.functions.Function1 getOnCommit()>();

        if $r12 != r1 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        if $z4 == 0 goto label4;

        $i2 = i1;

        goto label6;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $i2 = -1;

     label6:
        i0 = $i2;

        if i0 != -1 goto label7;

        $r9 = new androidx.ui.core.ModelObserver$CommitMap;

        specialinvoke $r9.<androidx.ui.core.ModelObserver$CommitMap: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r10 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r9.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap getMap()>();

        return $r11;

     label7:
        $r5 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (androidx.ui.core.ModelObserver$CommitMap) $r6;

        $r8 = virtualinvoke $r7.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap getMap()>();

        return $r8;
    }

    public static final androidx.compose.ObserverMap access$ensureMap(androidx.ui.core.ModelObserver, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ModelObserver $r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ObserverMap $r2;

        $r0 := @parameter0: androidx.ui.core.ModelObserver;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = specialinvoke $r0.<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap ensureMap(kotlin.jvm.functions.Function1)>(r1);

        return $r2;
    }

    public static final java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.ui.core.ModelObserver;

        $r1 = r0.<androidx.ui.core.ModelObserver: java.util.List commitMaps>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getCommitExecutor$p(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @parameter0: androidx.ui.core.ModelObserver;

        $r1 = r0.<androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 commitExecutor>;

        return $r1;
    }

    public static final void access$callOnCommit(androidx.ui.core.ModelObserver, java.util.List[])
    {
        androidx.ui.core.ModelObserver $r0;
        java.util.List[] r1;

        $r0 := @parameter0: androidx.ui.core.ModelObserver;

        r1 := @parameter1: java.util.List[];

        specialinvoke $r0.<androidx.ui.core.ModelObserver: void callOnCommit(java.util.List[])>(r1);

        return;
    }

    public static final boolean access$isPaused$p(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver r0;
        boolean $z0;

        r0 := @parameter0: androidx.ui.core.ModelObserver;

        $z0 = r0.<androidx.ui.core.ModelObserver: boolean isPaused>;

        return $z0;
    }

    public static final androidx.compose.ObserverMap access$getCurrentMap$p(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver r0;
        androidx.compose.ObserverMap $r1;

        r0 := @parameter0: androidx.ui.core.ModelObserver;

        $r1 = r0.<androidx.ui.core.ModelObserver: androidx.compose.ObserverMap currentMap>;

        return $r1;
    }

    public static final java.lang.Object access$getCurrentTarget$p(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver r0;
        java.lang.Object $r1;

        r0 := @parameter0: androidx.ui.core.ModelObserver;

        $r1 = r0.<androidx.ui.core.ModelObserver: java.lang.Object currentTarget>;

        return $r1;
    }

androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1
<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: int $i>
    void <init>(androidx.ui.core.ModelObserver, int)
    {
        androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1 r0;
        androidx.ui.core.ModelObserver $r1;
        int $i0;

        r0 := @this: androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $i0 := @parameter1: int;

        r0.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: int $i> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.ui.core.ModelObserver$CommitMap invoke()
    {
        androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1 r0;
        androidx.ui.core.ModelObserver $r1;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r3;
        androidx.ui.core.ModelObserver$CommitMap $r4;

        r0 := @this: androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1;

        $r1 = r0.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: androidx.ui.core.ModelObserver $this>;

        $r2 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r1);

        $i0 = r0.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: int $i>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (androidx.ui.core.ModelObserver$CommitMap) $r3;

        return $r4;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1 r0;
        androidx.ui.core.ModelObserver$CommitMap $r1;

        r0 := @this: androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1;

        $r1 = virtualinvoke r0.<androidx.ui.core.ModelObserver$callOnCommit$commitCaller$1: androidx.ui.core.ModelObserver$CommitMap invoke()>();

        return $r1;
    }

androidx.ui.core.ModelObserver$clear$1
<androidx.ui.core.ModelObserver$clear$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$clear$1: java.lang.Object $target>
    void <init>(androidx.ui.core.ModelObserver, java.lang.Object)
    {
        androidx.ui.core.ModelObserver$clear$1 r0;
        androidx.ui.core.ModelObserver $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.ui.core.ModelObserver$clear$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $r2 := @parameter1: java.lang.Object;

        r0.<androidx.ui.core.ModelObserver$clear$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$clear$1: java.lang.Object $target> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.ModelObserver$clear$1 r0;
        java.lang.Iterable $r1;
        java.lang.Object r2, r4;
        java.util.Iterator r3;
        androidx.ui.core.ModelObserver$CommitMap r5;
        androidx.ui.core.ModelObserver $r6;
        java.util.List $r7;
        boolean $z2;
        androidx.compose.ObserverMap $r8;

        r0 := @this: androidx.ui.core.ModelObserver$clear$1;

        $r6 = r0.<androidx.ui.core.ModelObserver$clear$1: androidx.ui.core.ModelObserver $this>;

        $r7 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r6);

        $r1 = (java.lang.Iterable) $r7;

        r2 = r0.<androidx.ui.core.ModelObserver$clear$1: java.lang.Object $target>;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.ModelObserver$CommitMap) r4;

        $r8 = virtualinvoke r5.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap getMap()>();

        virtualinvoke $r8.<androidx.compose.ObserverMap: void removeValue(java.lang.Object)>(r2);

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$clear$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.ModelObserver$clear$1;

        virtualinvoke r0.<androidx.ui.core.ModelObserver$clear$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.ModelObserver$CommitMap
<androidx.ui.core.ModelObserver$CommitMap: kotlin.jvm.functions.Function1 onCommit>
<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap map>
    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ModelObserver$CommitMap r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ObserverMap $r2;

        r0 := @this: androidx.ui.core.ModelObserver$CommitMap;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onCommit");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.core.ModelObserver$CommitMap: kotlin.jvm.functions.Function1 onCommit> = r1;

        $r2 = new androidx.compose.ObserverMap;

        specialinvoke $r2.<androidx.compose.ObserverMap: void <init>()>();

        r0.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap map> = $r2;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnCommit()
    {
        androidx.ui.core.ModelObserver$CommitMap r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.core.ModelObserver$CommitMap;

        $r1 = r0.<androidx.ui.core.ModelObserver$CommitMap: kotlin.jvm.functions.Function1 onCommit>;

        return $r1;
    }

    public final androidx.compose.ObserverMap getMap()
    {
        androidx.ui.core.ModelObserver$CommitMap r0;
        androidx.compose.ObserverMap $r1;

        r0 := @this: androidx.ui.core.ModelObserver$CommitMap;

        $r1 = r0.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap map>;

        return $r1;
    }

    public final void callOnCommit(java.util.List)
    {
        androidx.ui.core.ModelObserver$CommitMap r0;
        java.util.List r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, r5;
        boolean $z2;
        kotlin.jvm.functions.Function1 $r6;

        r0 := @this: androidx.ui.core.ModelObserver$CommitMap;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "targets");

        $r2 = (java.lang.Iterable) r1;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        $r6 = virtualinvoke r0.<androidx.ui.core.ModelObserver$CommitMap: kotlin.jvm.functions.Function1 getOnCommit()>();

        interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        goto label1;

     label2:
        return;
    }

androidx.ui.core.ModelObserver$commitObserver$1$1
<androidx.ui.core.ModelObserver$commitObserver$1$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$commitObserver$1$1: java.util.List[] $targetsArray>
    void <init>(androidx.ui.core.ModelObserver, java.util.List[])
    {
        androidx.ui.core.ModelObserver$commitObserver$1$1 r0;
        androidx.ui.core.ModelObserver $r1;
        java.util.List[] $r2;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $r2 := @parameter1: java.util.List[];

        r0.<androidx.ui.core.ModelObserver$commitObserver$1$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$commitObserver$1$1: java.util.List[] $targetsArray> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.ModelObserver$commitObserver$1$1 r0;
        java.util.List[] $r1;
        androidx.ui.core.ModelObserver $r2;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$1;

        $r2 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$1: androidx.ui.core.ModelObserver $this>;

        $r1 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$1: java.util.List[] $targetsArray>;

        staticinvoke <androidx.ui.core.ModelObserver: void access$callOnCommit(androidx.ui.core.ModelObserver,java.util.List[])>($r2, $r1);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$commitObserver$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$1;

        virtualinvoke r0.<androidx.ui.core.ModelObserver$commitObserver$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1
<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: java.util.Set $committed>
<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: kotlin.jvm.internal.Ref$ObjectRef $hasValues>
    void <init>(androidx.ui.core.ModelObserver, java.util.Set, kotlin.jvm.internal.Ref$ObjectRef)
    {
        androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1 r0;
        androidx.ui.core.ModelObserver $r1;
        java.util.Set $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $r2 := @parameter1: java.util.Set;

        $r3 := @parameter2: kotlin.jvm.internal.Ref$ObjectRef;

        r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: java.util.Set $committed> = $r2;

        r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: kotlin.jvm.internal.Ref$ObjectRef $hasValues> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List[] invoke()
    {
        androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1 r0;
        int i0, i1, i2, i3;
        java.util.List[] r1, r5;
        java.util.List r2, r6, $r8, $r10;
        kotlin.jvm.internal.Ref$ObjectRef r3;
        boolean z0, z1, z3, $z4, $z5;
        java.util.Collection r4;
        androidx.ui.core.ModelObserver $r7, $r9;
        java.lang.Object $r11, $r16;
        androidx.ui.core.ModelObserver$CommitMap $r12;
        androidx.compose.ObserverMap $r13;
        java.util.Set $r14;
        java.lang.Iterable $r15;
        kotlin.jvm.internal.Ref$BooleanRef $r17;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1;

        i3 = 0;

        $r7 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: androidx.ui.core.ModelObserver $this>;

        $r8 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r7);

        i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        r1 = newarray (java.util.List)[i0];

     label1:
        if i3 >= i0 goto label5;

        i1 = i3;

        $r9 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: androidx.ui.core.ModelObserver $this>;

        $r10 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (androidx.ui.core.ModelObserver$CommitMap) $r11;

        $r13 = virtualinvoke $r12.<androidx.ui.core.ModelObserver$CommitMap: androidx.compose.ObserverMap getMap()>();

        $r14 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: java.util.Set $committed>;

        $r15 = (java.lang.Iterable) $r14;

        r2 = virtualinvoke $r13.<androidx.compose.ObserverMap: java.util.List get(java.lang.Iterable)>($r15);

        r3 = r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: kotlin.jvm.internal.Ref$ObjectRef $hasValues>;

        i2 = i1;

        r5 = r1;

        z0 = 0;

        z1 = 0;

        r4 = (java.util.Collection) r2;

        z3 = 0;

        $z4 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label4;

        $r16 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r17 = (kotlin.jvm.internal.Ref$BooleanRef) $r16;

        $r17.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

     label4:
        r6 = r2;

        r5[i2] = r6;

        i3 = i3 + 1;

        goto label1;

     label5:
        return r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1 r0;
        java.util.List[] $r1;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1;

        $r1 = virtualinvoke r0.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: java.util.List[] invoke()>();

        return $r1;
    }

androidx.ui.core.ModelObserver$commitObserver$1
<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this>
    void <init>(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver$commitObserver$1 r0;
        androidx.ui.core.ModelObserver $r1;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        r0.<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(java.util.Set, androidx.compose.frames.Frame)
    {
        androidx.ui.core.ModelObserver$commitObserver$1 r0;
        java.util.Set r1;
        androidx.compose.frames.Frame $r2;
        kotlin.jvm.internal.Ref$ObjectRef r3, $r5;
        java.util.List[] r4;
        kotlin.jvm.internal.Ref$BooleanRef $r6, $r8, $r16;
        java.lang.Object $r7, $r14, $r15;
        androidx.ui.core.ModelObserver $r9, $r12, $r17, $r20;
        java.util.List $r10;
        androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1 $r11;
        kotlin.jvm.functions.Function0 $r13;
        boolean $z0;
        kotlin.jvm.functions.Function1 $r18;
        androidx.ui.core.ModelObserver$commitObserver$1$1 $r19;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1;

        r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: androidx.compose.frames.Frame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "committed");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$noName_1");

        $r5 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r5.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r3 = $r5;

        $r6 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r6.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r6;

        $r7 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r8 = (kotlin.jvm.internal.Ref$BooleanRef) $r7;

        $r8.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 0;

        $r9 = r0.<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this>;

        $r10 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r9);

        $r11 = new androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1;

        $r12 = r0.<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this>;

        specialinvoke $r11.<androidx.ui.core.ModelObserver$commitObserver$1$targetsArray$1: void <init>(androidx.ui.core.ModelObserver,java.util.Set,kotlin.jvm.internal.Ref$ObjectRef)>($r12, r1, r3);

        $r13 = (kotlin.jvm.functions.Function0) $r11;

        $r14 = staticinvoke <androidx.ui.util.SynchronizationHelperKt: java.lang.Object 'synchronized'(java.lang.Object,kotlin.jvm.functions.Function0)>($r10, $r13);

        r4 = (java.util.List[]) $r14;

        $r15 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r16 = (kotlin.jvm.internal.Ref$BooleanRef) $r15;

        $z0 = $r16.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z0 == 0 goto label1;

        $r17 = r0.<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this>;

        $r18 = staticinvoke <androidx.ui.core.ModelObserver: kotlin.jvm.functions.Function1 access$getCommitExecutor$p(androidx.ui.core.ModelObserver)>($r17);

        $r19 = new androidx.ui.core.ModelObserver$commitObserver$1$1;

        $r20 = r0.<androidx.ui.core.ModelObserver$commitObserver$1: androidx.ui.core.ModelObserver $this>;

        specialinvoke $r19.<androidx.ui.core.ModelObserver$commitObserver$1$1: void <init>(androidx.ui.core.ModelObserver,java.util.List[])>($r20, r4);

        interfaceinvoke $r18.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r19);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.core.ModelObserver$commitObserver$1 r0;
        java.lang.Object r1, r2;
        androidx.compose.frames.Frame $r3;
        java.util.Set $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.ui.core.ModelObserver$commitObserver$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.util.Set) r1;

        $r3 = (androidx.compose.frames.Frame) r2;

        virtualinvoke r0.<androidx.ui.core.ModelObserver$commitObserver$1: void invoke(java.util.Set,androidx.compose.frames.Frame)>($r4, $r3);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

androidx.ui.core.ModelObserver$observeReads$1
<androidx.ui.core.ModelObserver$observeReads$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$observeReads$1: kotlin.jvm.functions.Function1 $onCommit>
<androidx.ui.core.ModelObserver$observeReads$1: java.lang.Object $target>
    void <init>(androidx.ui.core.ModelObserver, kotlin.jvm.functions.Function1, java.lang.Object)
    {
        androidx.ui.core.ModelObserver$observeReads$1 r0;
        androidx.ui.core.ModelObserver $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.ui.core.ModelObserver$observeReads$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 := @parameter2: java.lang.Object;

        r0.<androidx.ui.core.ModelObserver$observeReads$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$observeReads$1: kotlin.jvm.functions.Function1 $onCommit> = $r2;

        r0.<androidx.ui.core.ModelObserver$observeReads$1: java.lang.Object $target> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.compose.ObserverMap invoke()
    {
        androidx.ui.core.ModelObserver$observeReads$1 r0;
        androidx.compose.ObserverMap r1;
        java.lang.Object r2;
        boolean z0, z1;
        kotlin.jvm.functions.Function1 $r3;
        androidx.ui.core.ModelObserver $r4;

        r0 := @this: androidx.ui.core.ModelObserver$observeReads$1;

        $r4 = r0.<androidx.ui.core.ModelObserver$observeReads$1: androidx.ui.core.ModelObserver $this>;

        $r3 = r0.<androidx.ui.core.ModelObserver$observeReads$1: kotlin.jvm.functions.Function1 $onCommit>;

        r1 = staticinvoke <androidx.ui.core.ModelObserver: androidx.compose.ObserverMap access$ensureMap(androidx.ui.core.ModelObserver,kotlin.jvm.functions.Function1)>($r4, $r3);

        r2 = r0.<androidx.ui.core.ModelObserver$observeReads$1: java.lang.Object $target>;

        z0 = 0;

        z1 = 0;

        virtualinvoke r1.<androidx.compose.ObserverMap: void removeValue(java.lang.Object)>(r2);

        return r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$observeReads$1 r0;
        androidx.compose.ObserverMap $r1;

        r0 := @this: androidx.ui.core.ModelObserver$observeReads$1;

        $r1 = virtualinvoke r0.<androidx.ui.core.ModelObserver$observeReads$1: androidx.compose.ObserverMap invoke()>();

        return $r1;
    }

androidx.ui.core.ModelObserver$readObserver$1$1
<androidx.ui.core.ModelObserver$readObserver$1$1: androidx.ui.core.ModelObserver $this>
<androidx.ui.core.ModelObserver$readObserver$1$1: java.lang.Object $model>
    void <init>(androidx.ui.core.ModelObserver, java.lang.Object)
    {
        androidx.ui.core.ModelObserver$readObserver$1$1 r0;
        androidx.ui.core.ModelObserver $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        $r2 := @parameter1: java.lang.Object;

        r0.<androidx.ui.core.ModelObserver$readObserver$1$1: androidx.ui.core.ModelObserver $this> = $r1;

        r0.<androidx.ui.core.ModelObserver$readObserver$1$1: java.lang.Object $model> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.ui.core.ModelObserver$readObserver$1$1 r0;
        androidx.ui.core.ModelObserver $r1, $r2;
        java.lang.Object $r3, r5;
        androidx.compose.ObserverMap r4;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1$1;

        $r1 = r0.<androidx.ui.core.ModelObserver$readObserver$1$1: androidx.ui.core.ModelObserver $this>;

        r4 = staticinvoke <androidx.ui.core.ModelObserver: androidx.compose.ObserverMap access$getCurrentMap$p(androidx.ui.core.ModelObserver)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        $r3 = r0.<androidx.ui.core.ModelObserver$readObserver$1$1: java.lang.Object $model>;

        $r2 = r0.<androidx.ui.core.ModelObserver$readObserver$1$1: androidx.ui.core.ModelObserver $this>;

        r5 = staticinvoke <androidx.ui.core.ModelObserver: java.lang.Object access$getCurrentTarget$p(androidx.ui.core.ModelObserver)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        virtualinvoke r4.<androidx.compose.ObserverMap: void add(java.lang.Object,java.lang.Object)>($r3, r5);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.core.ModelObserver$readObserver$1$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1$1;

        virtualinvoke r0.<androidx.ui.core.ModelObserver$readObserver$1$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.ui.core.ModelObserver$readObserver$1
<androidx.ui.core.ModelObserver$readObserver$1: androidx.ui.core.ModelObserver $this>
    void <init>(androidx.ui.core.ModelObserver)
    {
        androidx.ui.core.ModelObserver$readObserver$1 r0;
        androidx.ui.core.ModelObserver $r1;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1;

        $r1 := @parameter0: androidx.ui.core.ModelObserver;

        r0.<androidx.ui.core.ModelObserver$readObserver$1: androidx.ui.core.ModelObserver $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Object)
    {
        androidx.ui.core.ModelObserver$readObserver$1 r0;
        java.lang.Object r1;
        androidx.ui.core.ModelObserver $r2, $r3, $r6;
        boolean $z0;
        java.util.List $r4;
        androidx.ui.core.ModelObserver$readObserver$1$1 $r5;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "model");

        $r2 = r0.<androidx.ui.core.ModelObserver$readObserver$1: androidx.ui.core.ModelObserver $this>;

        $z0 = staticinvoke <androidx.ui.core.ModelObserver: boolean access$isPaused$p(androidx.ui.core.ModelObserver)>($r2);

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.ui.core.ModelObserver$readObserver$1: androidx.ui.core.ModelObserver $this>;

        $r4 = staticinvoke <androidx.ui.core.ModelObserver: java.util.List access$getCommitMaps$p(androidx.ui.core.ModelObserver)>($r3);

        $r5 = new androidx.ui.core.ModelObserver$readObserver$1$1;

        $r6 = r0.<androidx.ui.core.ModelObserver$readObserver$1: androidx.ui.core.ModelObserver $this>;

        specialinvoke $r5.<androidx.ui.core.ModelObserver$readObserver$1$1: void <init>(androidx.ui.core.ModelObserver,java.lang.Object)>($r6, r1);

        $r7 = (kotlin.jvm.functions.Function0) $r5;

        staticinvoke <androidx.ui.util.SynchronizationHelperKt: java.lang.Object 'synchronized'(java.lang.Object,kotlin.jvm.functions.Function0)>($r4, $r7);

     label1:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.ModelObserver$readObserver$1 r0;
        java.lang.Object r1;
        kotlin.Unit $r2;

        r0 := @this: androidx.ui.core.ModelObserver$readObserver$1;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.ui.core.ModelObserver$readObserver$1: void invoke(java.lang.Object)>(r1);

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r2;
    }

