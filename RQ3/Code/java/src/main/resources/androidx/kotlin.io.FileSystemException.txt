kotlin.io.FileSystemException
<kotlin.io.FileSystemException: java.io.File file>
<kotlin.io.FileSystemException: java.io.File other>
<kotlin.io.FileSystemException: java.lang.String reason>
    public void <init>(java.io.File, java.io.File, java.lang.String)
    {
        kotlin.io.FileSystemException $r0;
        java.io.File $r1, $r2;
        java.lang.String $r3, $r4;

        $r0 := @this: kotlin.io.FileSystemException;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "file");

        $r4 = staticinvoke <kotlin.io.ExceptionsKt: java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String)>($r1, $r2, $r3);

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r4);

        $r0.<kotlin.io.FileSystemException: java.io.File file> = $r1;

        $r0.<kotlin.io.FileSystemException: java.io.File other> = $r2;

        $r0.<kotlin.io.FileSystemException: java.lang.String reason> = $r3;

        return;
    }

    public void <init>(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.io.FileSystemException $r0;
        java.io.File $r1, $r2;
        java.lang.String $r3;
        int $i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        $r0 := @this: kotlin.io.FileSystemException;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $r2 = null;

     label1:
        $i0 = $i0 & 4;

        if $i0 == 0 goto label2;

        $r3 = null;

     label2:
        specialinvoke $r0.<kotlin.io.FileSystemException: void <init>(java.io.File,java.io.File,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    public final java.io.File getFile()
    {
        kotlin.io.FileSystemException $r0;
        java.io.File r1;

        $r0 := @this: kotlin.io.FileSystemException;

        r1 = $r0.<kotlin.io.FileSystemException: java.io.File file>;

        return r1;
    }

    public final java.io.File getOther()
    {
        kotlin.io.FileSystemException $r0;
        java.io.File r1;

        $r0 := @this: kotlin.io.FileSystemException;

        r1 = $r0.<kotlin.io.FileSystemException: java.io.File other>;

        return r1;
    }

    public final java.lang.String getReason()
    {
        kotlin.io.FileSystemException $r0;
        java.lang.String r1;

        $r0 := @this: kotlin.io.FileSystemException;

        r1 = $r0.<kotlin.io.FileSystemException: java.lang.String reason>;

        return r1;
    }

