android.databinding.tool.BaseDataBinder
<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle>
<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>
    public final void generateAll(android.databinding.tool.writer.JavaFileWriter)
    {
        android.databinding.tool.BaseDataBinder r0;
        android.databinding.tool.writer.JavaFileWriter r1;
        android.databinding.tool.LibTypes r2, $r11;
        com.squareup.javapoet.TypeSpec $r3;
        java.util.Iterator $r4, r8, $r63, $r69, r79;
        java.lang.Object $r5, r9, $r24, $r27, $r30, $r32, $r38, $r40, $r45, $r47, $r53, $r56, $r57, r64, $r70, r74, $r76;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle $r6, $r33, $r41, $r48, r71;
        java.lang.Iterable $r7, $r62, r67, r86;
        android.databinding.tool.store.ResourceBundle$BindingTargetBundle r10;
        android.databinding.tool.store.LayoutInfoInput $r12, $r14, $r17, $r23;
        android.databinding.tool.store.LayoutInfoInput$Args $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r15, $r20, $r22;
        android.databinding.tool.store.LayoutInfoLog $r16, $r18;
        android.databinding.tool.store.ResourceBundle $r19;
        java.util.LinkedHashMap $r21;
        android.databinding.tool.writer.BaseLayoutBinderWriter $r25, r81;
        android.databinding.tool.writer.BaseLayoutModel $r26;
        java.util.List $r28, $r31, $r39, $r46, $r58, r77;
        java.lang.StringBuilder $r29, $r37, $r43, $r44, $r50, r82;
        com.squareup.javapoet.JavaFile$Builder $r34;
        com.squareup.javapoet.JavaFile $r35;
        java.lang.Appendable $r36;
        java.lang.String $r42, $r49, $r51, $r54, $r59, r65, r72, $r83, r84, $r85;
        android.databinding.tool.store.GenClassInfoLog $r52;
        android.databinding.tool.store.GenClassInfoLog$GenClass $r55;
        java.util.ArrayList $r60;
        java.util.Map r68, r78;
        java.util.Map$Entry $r80;

        r0 := @this: android.databinding.tool.BaseDataBinder;

        r1 := @parameter0: android.databinding.tool.writer.JavaFileWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "writer");

        $r11 = new android.databinding.tool.LibTypes;

        $r12 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r13 = virtualinvoke $r12.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args getArgs()>();

        $z0 = virtualinvoke $r13.<android.databinding.tool.store.LayoutInfoInput$Args: boolean getUseAndroidX()>();

        specialinvoke $r11.<android.databinding.tool.LibTypes: void <init>(boolean)>($z0);

        r2 = $r11;

        $r14 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r15 = virtualinvoke $r14.<android.databinding.tool.store.LayoutInfoInput: java.util.Set getInvalidatedClasses()>();

        $r62 = (java.lang.Iterable) $r15;

        $r63 = interfaceinvoke $r62.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r63.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        r64 = interfaceinvoke $r63.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.lang.String) r64;

        virtualinvoke r1.<android.databinding.tool.writer.JavaFileWriter: void deleteFile(java.lang.String)>(r65);

        goto label01;

     label02:
        $r16 = new android.databinding.tool.store.LayoutInfoLog;

        specialinvoke $r16.<android.databinding.tool.store.LayoutInfoLog: void <init>()>();

        $r17 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r18 = virtualinvoke $r17.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoLog getUnchangedLog()>();

        virtualinvoke $r16.<android.databinding.tool.store.LayoutInfoLog: void addAll(android.databinding.tool.store.LayoutInfoLog)>($r18);

        $r19 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle>;

        $r20 = virtualinvoke $r19.<android.databinding.tool.store.ResourceBundle: java.util.Set getLayoutFileBundlesInSource()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r20, "resourceBundle.layoutFileBundlesInSource");

        r67 = (java.lang.Iterable) $r20;

        $r21 = new java.util.LinkedHashMap;

        specialinvoke $r21.<java.util.LinkedHashMap: void <init>()>();

        r68 = (java.util.Map) $r21;

        $r69 = interfaceinvoke r67.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r69.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r70 = interfaceinvoke $r69.<java.util.Iterator: java.lang.Object next()>();

        r71 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r70;

        r72 = r71.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String mFileName>;

        r74 = interfaceinvoke r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r72);

        if r74 != null goto label04;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r72, $r60);

        $r76 = $r60;

        goto label05;

     label04:
        $r76 = r74;

     label05:
        r77 = (java.util.List) $r76;

        interfaceinvoke r77.<java.util.List: boolean add(java.lang.Object)>($r70);

        goto label03;

     label06:
        r78 = r68;

        $r22 = interfaceinvoke r78.<java.util.Map: java.util.Set entrySet()>();

        r79 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r79.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r24 = interfaceinvoke r79.<java.util.Iterator: java.lang.Object next()>();

        $r80 = (java.util.Map$Entry) $r24;

        $r25 = new android.databinding.tool.writer.BaseLayoutBinderWriter;

        $r26 = new android.databinding.tool.writer.BaseLayoutModel;

        $r27 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (java.util.List) $r27;

        specialinvoke $r26.<android.databinding.tool.writer.BaseLayoutModel: void <init>(java.util.List)>($r28);

        specialinvoke $r25.<android.databinding.tool.writer.BaseLayoutBinderWriter: void <init>(android.databinding.tool.writer.BaseLayoutModel,android.databinding.tool.LibTypes)>($r26, r2);

        r81 = $r25;

        $r3 = virtualinvoke r81.<android.databinding.tool.writer.BaseLayoutBinderWriter: com.squareup.javapoet.TypeSpec write()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        r82 = $r29;

        $r30 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (java.util.List) $r30;

        $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r32, "it.value[0]");

        $r33 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r32;

        $r83 = virtualinvoke $r33.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassPackage()>();

        $r34 = staticinvoke <com.squareup.javapoet.JavaFile: com.squareup.javapoet.JavaFile$Builder builder(java.lang.String,com.squareup.javapoet.TypeSpec)>($r83, $r3);

        $r35 = virtualinvoke $r34.<com.squareup.javapoet.JavaFile$Builder: com.squareup.javapoet.JavaFile build()>();

        $r36 = (java.lang.Appendable) r82;

        virtualinvoke $r35.<com.squareup.javapoet.JavaFile: void writeTo(java.lang.Appendable)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r39 = (java.util.List) $r38;

        $r40 = interfaceinvoke $r39.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r40, "it.value[0]");

        $r41 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r40;

        $r42 = virtualinvoke $r41.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassPackage()>();

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r45 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r46 = (java.util.List) $r45;

        $r47 = interfaceinvoke $r46.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r47, "it.value[0]");

        $r48 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r47;

        $r49 = virtualinvoke $r48.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.lang.String getBindingClassName()>();

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        r84 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = virtualinvoke r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>(r84, $r51);

        $r52 = virtualinvoke $r16.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog getClassInfoLog()>();

        $r53 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r53, "it.key");

        $r54 = (java.lang.String) $r53;

        $r55 = virtualinvoke r81.<android.databinding.tool.writer.BaseLayoutBinderWriter: android.databinding.tool.store.GenClassInfoLog$GenClass generateClassInfo()>();

        virtualinvoke $r52.<android.databinding.tool.store.GenClassInfoLog: void addMapping(java.lang.String,android.databinding.tool.store.GenClassInfoLog$GenClass)>($r54, $r55);

        $r56 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r85 = (java.lang.String) $r56;

        $r57 = interfaceinvoke $r80.<java.util.Map$Entry: java.lang.Object getValue()>();

        r86 = (java.lang.Iterable) $r57;

        $r4 = interfaceinvoke r86.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r6, "it");

        $r58 = virtualinvoke $r6.<android.databinding.tool.store.ResourceBundle$LayoutFileBundle: java.util.List getBindingTargetBundles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r58, "it.bindingTargetBundles");

        $r7 = (java.lang.Iterable) $r58;

        r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.databinding.tool.store.ResourceBundle$BindingTargetBundle) r9;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r10, "bundle");

        $z6 = virtualinvoke r10.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: boolean isBinder()>();

        if $z6 == 0 goto label10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r85, "layoutName");

        $r59 = virtualinvoke r10.<android.databinding.tool.store.ResourceBundle$BindingTargetBundle: java.lang.String getIncludedLayout()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r59, "bundle.includedLayout");

        virtualinvoke $r16.<android.databinding.tool.store.LayoutInfoLog: void addDependency(java.lang.String,java.lang.String)>($r85, $r59);

     label10:
        goto label09;

     label11:
        goto label08;

     label12:
        goto label07;

     label13:
        $r23 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        virtualinvoke $r23.<android.databinding.tool.store.LayoutInfoInput: void saveLog$compilerCommon(android.databinding.tool.store.LayoutInfoLog)>($r16);

        return;
    }

    public final android.databinding.tool.store.LayoutInfoInput getInput()
    {
        android.databinding.tool.BaseDataBinder r0;
        android.databinding.tool.store.LayoutInfoInput $r1;

        r0 := @this: android.databinding.tool.BaseDataBinder;

        $r1 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        return $r1;
    }

    public void <init>(android.databinding.tool.store.LayoutInfoInput)
    {
        android.databinding.tool.BaseDataBinder r0;
        android.databinding.tool.store.LayoutInfoInput r1, $r8, $r10, $r12;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.io.File r5, r21;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r6;
        android.databinding.tool.store.ResourceBundle $r7, $r13, $r15, $r18;
        java.lang.String $r9;
        java.util.Set $r11;
        boolean $z0;
        android.databinding.tool.store.GenClassInfoLog $r14;
        java.io.FileInputStream $r16, r24;
        java.io.InputStream $r17;
        java.lang.Throwable $r19, $r20, r23, r26, r27, r28;
        java.io.Closeable r22;
        kotlin.Unit r25;

        r0 := @this: android.databinding.tool.BaseDataBinder;

        r1 := @parameter0: android.databinding.tool.store.LayoutInfoInput;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "input");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input> = r1;

        $r7 = new android.databinding.tool.store.ResourceBundle;

        $r8 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r9 = virtualinvoke $r8.<android.databinding.tool.store.LayoutInfoInput: java.lang.String getPackageName()>();

        specialinvoke $r7.<android.databinding.tool.store.ResourceBundle: void <init>(java.lang.String)>($r9);

        r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle> = $r7;

        $r10 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r11 = virtualinvoke $r10.<android.databinding.tool.store.LayoutInfoInput: java.util.Set getFilesToConsider()>();

        $r2 = (java.lang.Iterable) $r11;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.io.File) r4;

        r21 = r5;

        $r16 = new java.io.FileInputStream;

        specialinvoke $r16.<java.io.FileInputStream: void <init>(java.io.File)>(r21);

        r22 = (java.io.Closeable) $r16;

        r23 = (java.lang.Throwable) null;

     label2:
        r24 = (java.io.FileInputStream) r22;

        $r17 = (java.io.InputStream) r24;

        r6 = staticinvoke <android.databinding.tool.store.ResourceBundle$LayoutFileBundle: android.databinding.tool.store.ResourceBundle$LayoutFileBundle fromXML(java.io.InputStream)>($r17);

        $r18 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle>;

        virtualinvoke $r18.<android.databinding.tool.store.ResourceBundle: void addLayoutBundle(android.databinding.tool.store.ResourceBundle$LayoutFileBundle,boolean)>(r6, 1);

        r25 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r22, r23);

        goto label7;

     label4:
        $r20 := @caughtexception;

        r26 = $r20;

        r27 = r26;

        throw r26;

     label5:
        $r19 := @caughtexception;

        r28 = $r19;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r22, r27);

        throw r28;

     label7:
        goto label1;

     label8:
        $r13 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle>;

        $r12 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.LayoutInfoInput input>;

        $r14 = virtualinvoke $r12.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.GenClassInfoLog getExistingBindingClasses()>();

        virtualinvoke $r13.<android.databinding.tool.store.ResourceBundle: void addDependencyLayouts(android.databinding.tool.store.GenClassInfoLog)>($r14);

        $r15 = r0.<android.databinding.tool.BaseDataBinder: android.databinding.tool.store.ResourceBundle resourceBundle>;

        virtualinvoke $r15.<android.databinding.tool.store.ResourceBundle: void validateMultiResLayouts()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

