androidx.test.espresso.remote.internal.deps.protobuf.Internal
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset US_ASCII>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset ISO_8859_1>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.ByteBuffer EMPTY_BYTE_BUFFER>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream EMPTY_CODED_INPUT_STREAM>
    public static int hashBoolean(boolean)
    {
        boolean z0;
        short s0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        s0 = 1231;

     label1:
        return s0;

     label2:
        s0 = 1237;

        goto label1;
    }

    public static int hashCode(byte[])
    {
        byte[] r0;
        int $i0, $i1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: int hashCode(byte[],int,int)>(r0, 0, $i0);

        return $i1;
    }

    static int hashCode(byte[], int, int)
    {
        int i0, i1, i2;
        byte[] r0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: int partialHash(int,byte[],int,int)>(i1, r0, i0, i1);

        if i2 != 0 goto label1;

        return 1;

     label1:
        return i2;
    }

    public static int hashLong(long)
    {
        long l0, $l1, $l2;
        int $i3;

        l0 := @parameter0: long;

        $l1 = l0 >>> 32;

        $l2 = l0 ^ $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    static int partialHash(int, byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i4, i5, i6;
        byte $b3;

        i5 := @parameter0: int;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i6 = i0;

     label1:
        $i2 = i0 + i1;

        if i6 >= $i2 goto label2;

        $i4 = i5 * 31;

        $b3 = r0[i6];

        i5 = $i4 + $b3;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.NullPointerException r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        r1 = new java.lang.NullPointerException;

        specialinvoke r1.<java.lang.NullPointerException: void <init>()>();

        throw r1;

     label1:
        return r0;
    }

    static java.lang.Object checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.String r0;
        java.lang.Object r1;
        java.lang.NullPointerException r2;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r0);

        throw r2;

     label1:
        return r1;
    }

    static java.lang.Object mergeMessage(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite $r2, $r4, $r6;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder $r3, $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) r0;

        $r3 = interfaceinvoke $r2.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder toBuilder()>();

        $r4 = (androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) r1;

        $r5 = interfaceinvoke $r3.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder mergeFrom(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>($r4);

        $r6 = interfaceinvoke $r5.<androidx.test.espresso.remote.internal.deps.protobuf.MessageLite$Builder: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite buildPartial()>();

        return $r6;
    }

    public static java.lang.String toStringUtf8(byte[])
    {
        byte[] r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;

        r0 := @parameter0: byte[];

        r1 = new java.lang.String;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r0, $r2);

        return r1;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r1, $r2;
        byte[] $r3, $r4, $r6;
        java.nio.ByteBuffer $r5;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r7;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset US_ASCII> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8> = $r1;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset ISO_8859_1> = $r2;

        $r3 = newarray (byte)[0];

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY> = $r3;

        $r4 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r4);

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.ByteBuffer EMPTY_BYTE_BUFFER> = $r5;

        $r6 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        $r7 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[])>($r6);

        <androidx.test.espresso.remote.internal.deps.protobuf.Internal: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream EMPTY_CODED_INPUT_STREAM> = $r7;

        return;
    }

    static boolean isProto1Group(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        boolean $z0, $z1, z2;
        androidx.test.espresso.remote.internal.deps.protobuf.AbstractMutableMessageLite $r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r1;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        $z0 = r1 instanceof androidx.test.espresso.remote.internal.deps.protobuf.AbstractMutableMessageLite;

        if $z0 == 0 goto label2;

        $r0 = (androidx.test.espresso.remote.internal.deps.protobuf.AbstractMutableMessageLite) r1;

        $z1 = virtualinvoke $r0.<androidx.test.espresso.remote.internal.deps.protobuf.AbstractMutableMessageLite: boolean isProto1Group()>();

        if $z1 == 0 goto label2;

        z2 = 1;

     label1:
        return z2;

     label2:
        z2 = 0;

        goto label1;
    }

    public static boolean isValidUtf8(byte[])
    {
        byte[] r0;
        boolean $z0;

        r0 := @parameter0: byte[];

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: boolean isValidUtf8(byte[])>(r0);

        return $z0;
    }

androidx.test.espresso.remote.internal.deps.protobuf.Internal$BooleanList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$BooleanList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$BooleanList mutableCopyWithCapacity(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$DoubleList mutableCopyWithCapacity(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLite
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLite: int getNumber()>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLiteMap
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLiteMap: androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumLite findValueByNumber(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumVerifier
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$EnumVerifier: boolean isInRange(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$FloatList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$FloatList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$FloatList mutableCopyWithCapacity(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$IntList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$IntList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$IntList mutableCopyWithCapacity(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$LongList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$LongList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$LongList mutableCopyWithCapacity(int)>
androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList: androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList mutableCopyWithCapacity(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList: void makeImmutable()>
<androidx.test.espresso.remote.internal.deps.protobuf.Internal$ProtobufList: boolean isModifiable()>
