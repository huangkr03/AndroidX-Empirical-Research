androidx.compose.animation.AnimatedEnterExitMeasurePolicy
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy: androidx.compose.animation.AnimatedVisibilityScopeImpl scope>
    public void <init>(androidx.compose.animation.AnimatedVisibilityScopeImpl)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.animation.AnimatedVisibilityScopeImpl r1;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        r1 := @parameter0: androidx.compose.animation.AnimatedVisibilityScopeImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy: androidx.compose.animation.AnimatedVisibilityScopeImpl scope> = r1;

        return;
    }

    public final androidx.compose.animation.AnimatedVisibilityScopeImpl getScope()
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.animation.AnimatedVisibilityScopeImpl $r1;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy: androidx.compose.animation.AnimatedVisibilityScopeImpl scope>;

        return $r1;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, java.util.List, long)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        java.util.List r2, r3, r26;
        long l0, $l2;
        java.util.Collection r4, r15;
        java.util.ArrayList $r5;
        int $i1, i3, i4, i5, i6, $i7, $i8, i9, i10, $i11, $i12, $i13;
        boolean $z1, $z2, $z3, z8, z9, z12;
        androidx.compose.animation.AnimatedVisibilityScopeImpl $r6;
        androidx.compose.runtime.MutableState $r7;
        androidx.compose.ui.unit.IntSize $r8;
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1 $r9;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.ui.layout.MeasureResult $r11;
        androidx.compose.ui.layout.Placeable $r12, $r13, r22, r24, $r25, r29, $r31;
        java.lang.Iterable $r14;
        java.util.Iterator r16;
        java.lang.Object r17, $r20, $r21, $r23, $r27, r28, r30;
        androidx.compose.ui.layout.Measurable r18;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r14 = (java.lang.Iterable) r2;

        $r5 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r14, 10);

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r15 = (java.util.Collection) $r5;

        r16 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (androidx.compose.ui.layout.Measurable) r17;

        r4 = r15;

        $r13 = interfaceinvoke r18.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        goto label01;

     label02:
        r3 = (java.util.List) r15;

        z8 = 0;

        $z2 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label03;

        $r20 = null;

        goto label07;

     label03:
        $r21 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r22 = (androidx.compose.ui.layout.Placeable) $r21;

        z9 = 0;

        i3 = virtualinvoke r22.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        i4 = 1;

        i5 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>(r3);

        if i4 > i5 goto label06;

     label04:
        $r23 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i4);

        r24 = (androidx.compose.ui.layout.Placeable) $r23;

        i6 = virtualinvoke r24.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        if i3 >= i6 goto label05;

        $r21 = $r23;

        i3 = i6;

     label05:
        if i4 == i5 goto label06;

        i4 = i4 + 1;

        goto label04;

     label06:
        $r20 = $r21;

     label07:
        $r25 = (androidx.compose.ui.layout.Placeable) $r20;

        if $r25 == null goto label08;

        $i7 = virtualinvoke $r25.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        goto label09;

     label08:
        $i7 = 0;

     label09:
        $i8 = $i7;

        r26 = r3;

        $z3 = interfaceinvoke r26.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label10;

        $r27 = null;

        goto label14;

     label10:
        r28 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(0);

        r29 = (androidx.compose.ui.layout.Placeable) r28;

        z12 = 0;

        i9 = virtualinvoke r29.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        i10 = 1;

        $i11 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>(r26);

        if i10 > $i11 goto label13;

     label11:
        r30 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(i10);

        $r12 = (androidx.compose.ui.layout.Placeable) r30;

        $i12 = virtualinvoke $r12.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        if i9 >= $i12 goto label12;

        r28 = r30;

        i9 = $i12;

     label12:
        if i10 == $i11 goto label13;

        i10 = i10 + 1;

        goto label11;

     label13:
        $r27 = r28;

     label14:
        $r31 = (androidx.compose.ui.layout.Placeable) $r27;

        if $r31 == null goto label15;

        $i13 = virtualinvoke $r31.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        goto label16;

     label15:
        $i13 = 0;

     label16:
        $r6 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy: androidx.compose.animation.AnimatedVisibilityScopeImpl scope>;

        $r7 = virtualinvoke $r6.<androidx.compose.animation.AnimatedVisibilityScopeImpl: androidx.compose.runtime.MutableState getTargetSize$animation_release()>();

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i8, $i13);

        $r8 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>($l2);

        interfaceinvoke $r7.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r8);

        $r9 = new androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1;

        specialinvoke $r9.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1: void <init>(java.util.List)>(r3);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r11 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i8, $i13, null, $r10, 4, null);

        return $r11;
    }

    public int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        java.lang.Iterable $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Comparable $r8;
        java.lang.Integer $r9;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = (java.lang.Iterable) r2;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)>($r3);

        $r5 = new androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1;

        specialinvoke $r5.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1: void <init>(int)>(i0);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)>($r7);

        $r9 = (java.lang.Integer) $r8;

        if $r9 == null goto label1;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1: int $width>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1: int $width> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1: int $width>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicHeight(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1: int $height>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1: int $height> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1: int $height>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicWidth(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$maxIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1: java.util.List $placeables>
    void <init>(java.util.List)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1 r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1;

        $r1 := @parameter0: java.util.List;

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1: java.util.List $placeables> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        java.util.List $r2;
        int i0, i1;
        java.lang.Object r3;
        androidx.compose.ui.layout.Placeable r4;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1: java.util.List $placeables>;

        i1 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.compose.ui.layout.Placeable) r3;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r1, r4, 0, 0, 0.0F, 4, null);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1: int $width>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1: int $width> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1: int $width>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicHeight(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1
<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1: int $height>
    void <init>(int)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1 r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1;

        $i0 := @parameter0: int;

        r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1: int $height> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int $i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $i0 = r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1: int $height>;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicWidth(int)>($i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.IntrinsicMeasurable $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedEnterExitMeasurePolicy$minIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable)>($r2);

        return $r3;
    }

