androidx.health.services.client.impl.ExerciseUpdateListenerStub
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion Companion>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.util.concurrent.Executor executor>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: kotlin.jvm.functions.Function0 requestedDataTypesProvider>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String TAG>
    public void <init>(androidx.health.services.client.ExerciseUpdateCallback, java.util.concurrent.Executor, kotlin.jvm.functions.Function0)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r0;
        androidx.health.services.client.ExerciseUpdateCallback r1, $r5;
        java.util.concurrent.Executor r2;
        kotlin.jvm.functions.Function0 r3;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r4;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        r1 := @parameter0: androidx.health.services.client.ExerciseUpdateCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "requestedDataTypesProvider");

        specialinvoke r0.<androidx.health.services.client.impl.IExerciseUpdateListener$Stub: void <init>()>();

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener> = r1;

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.util.concurrent.Executor executor> = r2;

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: kotlin.jvm.functions.Function0 requestedDataTypesProvider> = r3;

        $r4 = new androidx.health.services.client.impl.ipc.internal.ListenerKey;

        $r5 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener>;

        specialinvoke $r4.<androidx.health.services.client.impl.ipc.internal.ListenerKey: void <init>(java.lang.Object)>($r5);

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey> = $r4;

        return;
    }

    public final androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r0;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r1;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        $r1 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ipc.internal.ListenerKey listenerKey>;

        return $r1;
    }

    public void onExerciseUpdateListenerEvent(androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r0;
        androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        r1 := @parameter0: androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $r2 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.util.concurrent.Executor executor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.health.services.client.impl.ExerciseUpdateListenerStub,androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ExerciseUpdateListenerStub: void onExerciseUpdateListenerEvent$lambda$0(androidx.health.services.client.impl.ExerciseUpdateListenerStub,androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private final void triggerListener(androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r0;
        androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent r1;
        java.util.Set r2;
        java.util.List r3;
        androidx.health.services.client.data.DataType r4, r41;
        androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase $r5, $r30;
        int[] $r6;
        int $i0, $i3;
        kotlin.jvm.functions.Function0 $r7;
        java.lang.Object $r8, r36, $r40;
        boolean $z1, $z2, $z3, $z7, z9;
        java.util.ArrayList $r9;
        androidx.health.services.client.data.Availability$Companion $r10;
        androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse $r11, $r15;
        androidx.health.services.client.proto.DataProto$Availability $r12;
        androidx.health.services.client.ExerciseUpdateCallback $r13, $r20, $r24;
        java.lang.String $r14, $r17, $r18, $r28, $r32;
        androidx.health.services.client.proto.DataProto$DataType $r16;
        androidx.health.services.client.data.ExerciseLapSummary $r19;
        androidx.health.services.client.proto.ResponsesProto$ExerciseLapSummaryResponse $r21;
        androidx.health.services.client.proto.DataProto$ExerciseLapSummary $r22;
        androidx.health.services.client.data.ExerciseUpdate $r23;
        androidx.health.services.client.proto.ResponsesProto$ExerciseUpdateResponse $r25;
        androidx.health.services.client.proto.DataProto$ExerciseUpdate $r26;
        java.lang.StringBuilder $r27, $r29, $r31;
        java.lang.Iterable $r33, $r38;
        java.util.Collection r34;
        java.util.Iterator r35, r39;
        androidx.health.services.client.data.Availability $r37;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        r1 := @parameter0: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent;

        $r5 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase getEventCase()>();

        if $r5 != null goto label01;

        $i3 = -1;

        goto label02;

     label01:
        $r6 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r5.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: int ordinal()>();

        $i3 = $r6[$i0];

     label02:
        tableswitch($i3)
        {
            case -1: goto label11;
            case 0: goto label12;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label11;
            default: goto label12;
        };

     label03:
        $r24 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener>;

        $r23 = new androidx.health.services.client.data.ExerciseUpdate;

        $r25 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.ResponsesProto$ExerciseUpdateResponse getExerciseUpdateResponse()>();

        $r26 = virtualinvoke $r25.<androidx.health.services.client.proto.ResponsesProto$ExerciseUpdateResponse: androidx.health.services.client.proto.DataProto$ExerciseUpdate getExerciseUpdate()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "proto.exerciseUpdateResponse.exerciseUpdate");

        specialinvoke $r23.<androidx.health.services.client.data.ExerciseUpdate: void <init>(androidx.health.services.client.proto.DataProto$ExerciseUpdate)>($r26);

        interfaceinvoke $r24.<androidx.health.services.client.ExerciseUpdateCallback: void onExerciseUpdateReceived(androidx.health.services.client.data.ExerciseUpdate)>($r23);

        goto label12;

     label04:
        $r20 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener>;

        $r19 = new androidx.health.services.client.data.ExerciseLapSummary;

        $r21 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.ResponsesProto$ExerciseLapSummaryResponse getLapSummaryResponse()>();

        $r22 = virtualinvoke $r21.<androidx.health.services.client.proto.ResponsesProto$ExerciseLapSummaryResponse: androidx.health.services.client.proto.DataProto$ExerciseLapSummary getLapSummary()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "proto.lapSummaryResponse.lapSummary");

        specialinvoke $r19.<androidx.health.services.client.data.ExerciseLapSummary: void <init>(androidx.health.services.client.proto.DataProto$ExerciseLapSummary)>($r22);

        interfaceinvoke $r20.<androidx.health.services.client.ExerciseUpdateCallback: void onLapSummaryReceived(androidx.health.services.client.data.ExerciseLapSummary)>($r19);

        goto label12;

     label05:
        $r7 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: kotlin.jvm.functions.Function0 requestedDataTypesProvider>;

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r2 = (java.util.Set) $r8;

        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        $r18 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r18, "Availability received without any requested DataTypes");

        return;

     label06:
        $r33 = (java.lang.Iterable) r2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r34 = (java.util.Collection) $r9;

        r35 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z7 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label08;

        r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.health.services.client.data.DataType) r36;

        $r14 = virtualinvoke r4.<androidx.health.services.client.data.DataType: java.lang.String getName()>();

        $r15 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse getAvailabilityResponse()>();

        $r16 = virtualinvoke $r15.<androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse: androidx.health.services.client.proto.DataProto$DataType getDataType()>();

        $r17 = virtualinvoke $r16.<androidx.health.services.client.proto.DataProto$DataType: java.lang.String getName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r17);

        if $z3 == 0 goto label07;

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>(r36);

        goto label07;

     label08:
        r3 = (java.util.List) r34;

        $r10 = <androidx.health.services.client.data.Availability: androidx.health.services.client.data.Availability$Companion Companion>;

        $r11 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse getAvailabilityResponse()>();

        $r12 = virtualinvoke $r11.<androidx.health.services.client.proto.ResponsesProto$AvailabilityResponse: androidx.health.services.client.proto.DataProto$Availability getAvailability()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "proto.availabilityResponse.availability");

        $r37 = virtualinvoke $r10.<androidx.health.services.client.data.Availability$Companion: androidx.health.services.client.data.Availability fromProto(androidx.health.services.client.proto.DataProto$Availability)>($r12);

        $r38 = (java.lang.Iterable) r3;

        r39 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r40 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r41 = (androidx.health.services.client.data.DataType) $r40;

        z9 = 0;

        $r13 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.ExerciseUpdateCallback listener>;

        interfaceinvoke $r13.<androidx.health.services.client.ExerciseUpdateCallback: void onAvailabilityChanged(androidx.health.services.client.data.DataType,androidx.health.services.client.data.Availability)>(r41, $r37);

        goto label09;

     label10:
        goto label12;

     label11:
        $r28 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String TAG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received unknown event ");

        $r30 = virtualinvoke r1.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase getEventCase()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r28, $r32);

     label12:
        return;
    }

    private static final void onExerciseUpdateListenerEvent$lambda$0(androidx.health.services.client.impl.ExerciseUpdateListenerStub, androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r0;
        androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent $r1;
        androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent $r2;

        r0 := @parameter0: androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        $r1 := @parameter1: androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$event");

        $r2 = virtualinvoke $r1.<androidx.health.services.client.impl.event.ExerciseUpdateListenerEvent: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent getProto()>();

        specialinvoke r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: void triggerListener(androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent)>($r2);

        return;
    }

    public static final java.lang.String access$getTAG$cp()
    {
        java.lang.String $r0;

        $r0 = <androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion $r0;

        $r0 = new androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.ExerciseUpdateListenerStub: androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion Companion> = $r0;

        <androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String TAG> = "ExerciseUpdateListener";

        return;
    }

androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion
    private void <init>()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion r0;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.String getTAG()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion r0;
        java.lang.String $r1;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion;

        $r1 = staticinvoke <androidx.health.services.client.impl.ExerciseUpdateListenerStub: java.lang.String access$getTAG$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$Companion: void <init>()>();

        return;
    }

androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion
    private void <init>()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion r0;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion: void <init>()>();

        return;
    }

androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache
<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion Companion>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.lang.Object listenerLock>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.util.Map listeners>
<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache INSTANCE>
    private void <init>()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        java.util.Map $r3;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.lang.Object listenerLock> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.util.Map listeners> = $r3;

        return;
    }

    public final androidx.health.services.client.impl.ExerciseUpdateListenerStub getOrCreate(androidx.health.services.client.ExerciseUpdateCallback, java.util.concurrent.Executor, kotlin.jvm.functions.Function0)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache r0;
        androidx.health.services.client.ExerciseUpdateCallback r1;
        java.util.concurrent.Executor r2;
        kotlin.jvm.functions.Function0 r3;
        java.lang.Object r4, r6, $r12;
        java.util.Map $r5;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r7, r8, $r9;
        java.lang.Throwable $r11;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache;

        r1 := @parameter0: androidx.health.services.client.ExerciseUpdateCallback;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "requestedDataTypesProvider");

        r4 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.lang.Object listenerLock>;

        entermonitor r4;

     label1:
        $r5 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.util.Map listeners>;

        r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r6 != null goto label2;

        $r9 = new androidx.health.services.client.impl.ExerciseUpdateListenerStub;

        specialinvoke $r9.<androidx.health.services.client.impl.ExerciseUpdateListenerStub: void <init>(androidx.health.services.client.ExerciseUpdateCallback,java.util.concurrent.Executor,kotlin.jvm.functions.Function0)>(r1, r2, r3);

        r7 = $r9;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

        $r12 = r7;

        goto label3;

     label2:
        $r12 = r6;

     label3:
        r8 = (androidx.health.services.client.impl.ExerciseUpdateListenerStub) $r12;

     label4:
        exitmonitor r4;

        return r8;

     label5:
        $r11 := @caughtexception;

     label6:
        exitmonitor r4;

        throw $r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final androidx.health.services.client.impl.ExerciseUpdateListenerStub remove(androidx.health.services.client.ExerciseUpdateCallback)
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache r0;
        androidx.health.services.client.ExerciseUpdateCallback r1;
        java.lang.Object r2, $r5;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub r3;
        java.util.Map $r4;
        java.lang.Throwable $r6;

        r0 := @this: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache;

        r1 := @parameter0: androidx.health.services.client.ExerciseUpdateCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "exerciseUpdateCallback");

        r2 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.lang.Object listenerLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: java.util.Map listeners>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (androidx.health.services.client.impl.ExerciseUpdateListenerStub) $r5;

     label2:
        exitmonitor r2;

        return r3;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion $r0;
        androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache $r1;

        $r0 = new androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache$Companion Companion> = $r0;

        $r1 = new androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache;

        specialinvoke $r1.<androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: void <init>()>();

        <androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache: androidx.health.services.client.impl.ExerciseUpdateListenerStub$ExerciseUpdateListenerCache INSTANCE> = $r1;

        return;
    }

androidx.health.services.client.impl.ExerciseUpdateListenerStub$WhenMappings
<androidx.health.services.client.impl.ExerciseUpdateListenerStub$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, r10, r11, r12, r13;

        $r1 = staticinvoke <androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase EXERCISE_UPDATE_RESPONSE>;

        $i1 = virtualinvoke $r2.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r8 := @caughtexception;

        r10 = $r8;

     label04:
        $r3 = <androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase LAP_SUMMARY_RESPONSE>;

        $i2 = virtualinvoke $r3.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

        r11 = $r9;

     label07:
        $r4 = <androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase AVAILABILITY_RESPONSE>;

        $i3 = virtualinvoke $r4.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        r12 = $r7;

     label10:
        $r5 = <androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase EVENT_NOT_SET>;

        $i4 = virtualinvoke $r5.<androidx.health.services.client.proto.EventsProto$ExerciseUpdateListenerEvent$EventCase: int ordinal()>();

        r0[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r6 := @caughtexception;

        r13 = $r6;

     label13:
        <androidx.health.services.client.impl.ExerciseUpdateListenerStub$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
    }

