kotlinx.coroutines.JobKt
    public static final kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.CompletableJob $r0;
        kotlinx.coroutines.Job $r1;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r0 = staticinvoke <kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)>($r1);

        return $r0;
    }

    public static kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job, int, java.lang.Object)
    {
        int $i0;
        java.lang.Object $r0;
        kotlinx.coroutines.CompletableJob $r1;
        kotlinx.coroutines.Job $r2;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $i0 := @parameter1: int;

        $r0 := @parameter2: java.lang.Object;

        $r1 = staticinvoke <kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>($r2, $i0, $r0);

        return $r1;
    }

    public static final java.lang.Object cancelAndJoin(kotlinx.coroutines.Job, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0;
        java.lang.Object $r1;
        kotlinx.coroutines.Job $r2;

        $r2 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: kotlin.coroutines.Continuation;

        $r1 = staticinvoke <kotlinx.coroutines.JobKt__JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)>($r2, $r0);

        return $r1;
    }

    public static final kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job, kotlinx.coroutines.DisposableHandle)
    {
        kotlinx.coroutines.DisposableHandle $r0;
        kotlinx.coroutines.Job $r1;

        $r1 := @parameter0: kotlinx.coroutines.Job;

        $r0 := @parameter1: kotlinx.coroutines.DisposableHandle;

        $r0 = staticinvoke <kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)>($r1, $r0);

        return $r0;
    }

    public static final void ensureActive(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)>($r0);

        return;
    }

    public static final void ensureActive(kotlinx.coroutines.Job)
    {
        kotlinx.coroutines.Job $r0;

        $r0 := @parameter0: kotlinx.coroutines.Job;

        staticinvoke <kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)>($r0);

        return;
    }

