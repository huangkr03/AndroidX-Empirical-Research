androidx.appcompat.app.AppLocalesStorageHelper
<androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String APPLICATION_LOCALES_RECORD_FILE>
<androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String LOCALE_RECORD_ATTRIBUTE_TAG>
<androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String LOCALE_RECORD_FILE_TAG>
<androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String APP_LOCALES_META_DATA_HOLDER_SERVICE_NAME>
<androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String TAG>
    private void <init>()
    {
        androidx.appcompat.app.AppLocalesStorageHelper r0;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String readLocales(android.content.Context)
    {
        android.content.Context r0;
        java.io.FileInputStream r1;
        int i0, i1, $i3, $i6;
        java.lang.String r2, $r8, r15;
        java.lang.Throwable r3, r4, $r9, $r10, $r11, $r12, $r13, $r14, r16, r18, r19, r20;
        java.lang.StringBuilder $r5, $r6, $r7;
        boolean $z1, $z2;
        org.xmlpull.v1.XmlPullParser r17;

        r0 := @parameter0: android.content.Context;

        r15 = "";

     label01:
        r1 = virtualinvoke r0.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("androidx.appcompat.app.AppCompatDelegate.application_locales_record_file");

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

        r16 = $r12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppLocalesStorageHelper", "Reading app Locales : Locales record file not found: androidx.appcompat.app.AppCompatDelegate.application_locales_record_file");

        return r15;

     label04:
        r17 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

        i1 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label05:
        $i6 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i6;

        if $i6 == 1 goto label09;

        if i0 != 3 goto label06;

        $i3 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label09;

     label06:
        if i0 == 3 goto label05;

        if i0 != 4 goto label07;

        goto label05;

     label07:
        r2 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("locales");

        if $z1 == 0 goto label08;

        r15 = interfaceinvoke r17.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "application_locales");

        goto label09;

     label08:
        goto label05;

     label09:
        if r1 == null goto label24;

     label10:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label11:
        goto label24;

     label12:
        $r11 := @caughtexception;

        r18 = $r11;

        goto label24;

     label13:
        $r10 := @caughtexception;

        r19 = $r10;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppLocalesStorageHelper", "Reading app Locales : Unable to parse through file :androidx.appcompat.app.AppCompatDelegate.application_locales_record_file");

     label14:
        if r1 == null goto label24;

     label15:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label16:
        goto label24;

     label17:
        $r13 := @caughtexception;

        r20 = $r13;

        goto label24;

     label18:
        $r9 := @caughtexception;

        r3 = $r9;

     label19:
        if r1 == null goto label23;

     label20:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r14 := @caughtexception;

        r4 = $r14;

     label23:
        throw r3;

     label24:
        $z2 = virtualinvoke r15.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label25;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading app Locales : Locales read from file: androidx.appcompat.app.AppCompatDelegate.application_locales_record_file , appLocales: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppLocalesStorageHelper", $r8);

        goto label26;

     label25:
        virtualinvoke r0.<android.content.Context: boolean deleteFile(java.lang.String)>("androidx.appcompat.app.AppCompatDelegate.application_locales_record_file");

     label26:
        return r15;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label10 to label11 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label09 with label13;
        catch java.io.IOException from label04 to label09 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label04 to label09 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    static void persistLocales(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r13, $r19, $r25;
        java.io.FileOutputStream r2;
        java.lang.Throwable r3, r4, $r14, $r15, $r20, $r21, $r22, $r23, r26, r28, r29, r30;
        boolean $z0;
        java.lang.Boolean $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16, $r17, $r18;
        java.lang.Object[] $r24;
        org.xmlpull.v1.XmlSerializer r27;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label01;

        virtualinvoke r0.<android.content.Context: boolean deleteFile(java.lang.String)>("androidx.appcompat.app.AppCompatDelegate.application_locales_record_file");

        return;

     label01:
        r2 = virtualinvoke r0.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("androidx.appcompat.app.AppCompatDelegate.application_locales_record_file", 0);

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        r26 = $r23;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = "androidx.appcompat.app.AppCompatDelegate.application_locales_record_file";

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Storing App Locales : FileNotFoundException: Cannot open file %s for writing ", $r24);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppLocalesStorageHelper", $r25);

        return;

     label04:
        r27 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label05:
        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, null);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r5);

        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "locales");

        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "application_locales", r1);

        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "locales");

        interfaceinvoke r27.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing App Locales : app-locales: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" persisted successfully.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppLocalesStorageHelper", $r13);

     label06:
        if r2 == null goto label21;

     label07:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label08:
        goto label21;

     label09:
        $r22 := @caughtexception;

        r28 = $r22;

        goto label21;

     label10:
        $r15 := @caughtexception;

        r29 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing App Locales : Failed to persist app-locales: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppLocalesStorageHelper", $r19, r29);

     label11:
        if r2 == null goto label21;

     label12:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label13:
        goto label21;

     label14:
        $r14 := @caughtexception;

        r30 = $r14;

        goto label21;

     label15:
        $r21 := @caughtexception;

        r3 = $r21;

     label16:
        if r2 == null goto label20;

     label17:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r20 := @caughtexception;

        r4 = $r20;

     label20:
        throw r3;

     label21:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    static void syncLocalesToFramework(android.content.Context)
    {
        android.content.Context r0;
        android.content.ComponentName r1, $r4;
        java.lang.String r2;
        java.lang.Object r3;
        int $i0, $i1;
        android.content.pm.PackageManager $r5, $r8;
        androidx.core.os.LocaleListCompat $r6;
        boolean $z0;
        android.os.LocaleList $r7;

        r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label2;

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r0, "androidx.appcompat.app.AppLocalesMetadataHolderService");

        r1 = $r4;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = virtualinvoke $r5.<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>(r1);

        if $i1 == 1 goto label2;

        $r6 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat getApplicationLocales()>();

        $z0 = virtualinvoke $r6.<androidx.core.os.LocaleListCompat: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String readLocales(android.content.Context)>(r0);

        r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("locale");

        if r3 == null goto label1;

        $r7 = staticinvoke <androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)>(r2);

        staticinvoke <androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)>(r3, $r7);

     label1:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        virtualinvoke $r8.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>(r1, 1, 1);

     label2:
        return;
    }

androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor
<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Object mLock>
<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.Queue mTasks>
<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.concurrent.Executor mExecutor>
<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Runnable mActive>
    void <init>(java.util.concurrent.Executor)
    {
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor r0;
        java.util.concurrent.Executor r1;
        java.lang.Object $r2;
        java.util.ArrayDeque $r3;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor;

        r1 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Object mLock> = $r2;

        $r3 = new java.util.ArrayDeque;

        specialinvoke $r3.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.Queue mTasks> = $r3;

        r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.concurrent.Executor mExecutor> = r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor r0;
        java.lang.Runnable r1, $r6, $r7;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        java.util.Queue $r5;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r4 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.Queue mTasks>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor,java.lang.Runnable)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void lambda$execute$0(java.lang.Runnable)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Runnable mActive>;

        if $r7 != null goto label2;

        virtualinvoke r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void scheduleNext()>();

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void scheduleNext()
    {
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r9;
        java.util.Queue $r4;
        java.lang.Runnable $r6, $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor;

        $r3 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.Queue mTasks>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.lang.Object poll()>();

        $r6 = (java.lang.Runnable) $r5;

        r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Runnable mActive> = $r6;

        if $r6 == null goto label2;

        $r8 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.util.concurrent.Executor mExecutor>;

        $r7 = r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: java.lang.Runnable mActive>;

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void lambda$execute$0(java.lang.Runnable)
    {
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor r0;
        java.lang.Runnable r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor;

        r1 := @parameter0: java.lang.Runnable;

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        virtualinvoke r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void scheduleNext()>();

        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        virtualinvoke r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void scheduleNext()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor
    void <init>()
    {
        androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor r0;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor r0;
        java.lang.Runnable r1;
        java.lang.Thread $r2;

        r0 := @this: androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

