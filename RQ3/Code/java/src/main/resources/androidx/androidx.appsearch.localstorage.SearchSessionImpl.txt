androidx.appsearch.localstorage.SearchSessionImpl
<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String TAG>
<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>
<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>
<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures>
<androidx.appsearch.localstorage.SearchSessionImpl: android.content.Context mContext>
<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>
<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>
<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>
<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>
<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated>
<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>
    void <init>(androidx.appsearch.localstorage.AppSearchImpl, java.util.concurrent.Executor, androidx.appsearch.app.Features, android.content.Context, java.lang.String, androidx.appsearch.localstorage.AppSearchLogger)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.localstorage.AppSearchImpl r1, $r8;
        java.util.concurrent.Executor r2, $r10;
        androidx.appsearch.app.Features r3, $r12;
        android.content.Context r4, $r14, $r17;
        java.lang.String r5, $r16, $r18, $r20;
        androidx.appsearch.localstorage.AppSearchLogger r6;
        java.lang.Object $r7, $r9, $r11, $r13, $r15;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r19;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.AppSearchImpl;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.appsearch.app.Features;

        r4 := @parameter3: android.content.Context;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: androidx.appsearch.localstorage.AppSearchLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 0;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed> = 0;

        $r7 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = (androidx.appsearch.localstorage.AppSearchImpl) $r7;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl> = $r8;

        $r9 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r10 = (java.util.concurrent.Executor) $r9;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor> = $r10;

        $r11 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r12 = (androidx.appsearch.app.Features) $r11;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures> = $r12;

        $r13 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r14 = (android.content.Context) $r13;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: android.content.Context mContext> = $r14;

        $r15 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r16 = (java.lang.String) $r15;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName> = $r16;

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger> = r6;

        $r17 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: java.lang.String getPackageName()>();

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName> = $r18;

        $r19 = new androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        $r20 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        specialinvoke $r19.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: void <init>(java.lang.String)>($r20);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess> = $r19;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture setSchemaAsync(androidx.appsearch.app.SetSchemaRequest)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.SetSchemaRequest r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r4;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.SetSchemaRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,androidx.appsearch.app.SetSchemaRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.SetSchemaResponse lambda$setSchemaAsync$0(androidx.appsearch.app.SetSchemaRequest)>, methodtype: androidx.appsearch.app.SetSchemaResponse __METHODTYPE__());

        r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r4);

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void checkForOptimize()>();

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getSchemaAsync()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r1 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.GetSchemaResponse lambda$getSchemaAsync$1()>, methodtype: androidx.appsearch.app.GetSchemaResponse __METHODTYPE__());

        $r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getNamespacesAsync()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r1 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.util.Set lambda$getNamespacesAsync$2()>, methodtype: java.util.Set __METHODTYPE__());

        $r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture putAsync(androidx.appsearch.app.PutDocumentsRequest)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.PutDocumentsRequest r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r4;
        java.util.List $r5;
        int $i0;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.PutDocumentsRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,androidx.appsearch.app.PutDocumentsRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.AppSearchBatchResult lambda$putAsync$3(androidx.appsearch.app.PutDocumentsRequest)>, methodtype: androidx.appsearch.app.AppSearchBatchResult __METHODTYPE__());

        r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r4);

        $r5 = virtualinvoke r1.<androidx.appsearch.app.PutDocumentsRequest: java.util.List getGenericDocuments()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void checkForOptimize(int)>($i0);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getByDocumentIdAsync(androidx.appsearch.app.GetByDocumentIdRequest)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.GetByDocumentIdRequest r1;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.GetByDocumentIdRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r3 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,androidx.appsearch.app.GetByDocumentIdRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.AppSearchBatchResult lambda$getByDocumentIdAsync$4(androidx.appsearch.app.GetByDocumentIdRequest)>, methodtype: androidx.appsearch.app.AppSearchBatchResult __METHODTYPE__());

        $r4 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    public androidx.appsearch.app.SearchResults search(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String r1, $r7, $r8;
        androidx.appsearch.app.SearchSpec r2;
        boolean $z0, $z1;
        androidx.appsearch.localstorage.SearchResultsImpl $r5;
        androidx.appsearch.localstorage.AppSearchLogger $r6;
        java.util.concurrent.Executor $r9;
        androidx.appsearch.localstorage.AppSearchImpl $r10;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r5 = new androidx.appsearch.localstorage.SearchResultsImpl;

        $r10 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r9 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r8 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r7 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r6 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        specialinvoke $r5.<androidx.appsearch.localstorage.SearchResultsImpl: void <init>(androidx.appsearch.localstorage.AppSearchImpl,java.util.concurrent.Executor,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.app.SearchSpec,androidx.appsearch.localstorage.AppSearchLogger)>($r10, $r9, $r8, $r7, r1, r2, $r6);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture searchSuggestionAsync(java.lang.String, androidx.appsearch.app.SearchSuggestionSpec)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSuggestionSpec r2;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSuggestionSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r6 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,java.lang.String,androidx.appsearch.app.SearchSuggestionSpec)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.util.List lambda$searchSuggestionAsync$5(java.lang.String,androidx.appsearch.app.SearchSuggestionSpec)>, methodtype: java.util.List __METHODTYPE__());

        $r7 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r6);

        return $r7;
    }

    public com.google.common.util.concurrent.ListenableFuture reportUsageAsync(androidx.appsearch.app.ReportUsageRequest)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.ReportUsageRequest r1;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.ReportUsageRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r3 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,androidx.appsearch.app.ReportUsageRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.lang.Void lambda$reportUsageAsync$6(androidx.appsearch.app.ReportUsageRequest)>, methodtype: java.lang.Void __METHODTYPE__());

        $r4 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture removeAsync(androidx.appsearch.app.RemoveByDocumentIdRequest)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.RemoveByDocumentIdRequest r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r4;
        java.util.Set $r5;
        int $i0;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.RemoveByDocumentIdRequest;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,androidx.appsearch.app.RemoveByDocumentIdRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.AppSearchBatchResult lambda$removeAsync$7(androidx.appsearch.app.RemoveByDocumentIdRequest)>, methodtype: androidx.appsearch.app.AppSearchBatchResult __METHODTYPE__());

        r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r4);

        $r5 = virtualinvoke r1.<androidx.appsearch.app.RemoveByDocumentIdRequest: java.util.Set getIds()>();

        $i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void checkForOptimize(int)>($i0);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture removeAsync(java.lang.String, androidx.appsearch.app.SearchSpec)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String r1;
        androidx.appsearch.app.SearchSpec r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r6;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r6 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl,java.lang.String,androidx.appsearch.app.SearchSpec)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.lang.Void lambda$removeAsync$8(java.lang.String,androidx.appsearch.app.SearchSpec)>, methodtype: java.lang.Void __METHODTYPE__());

        r3 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r6);

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void checkForOptimize()>();

        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getStorageInfoAsync()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        boolean $z0, $z1;
        java.util.concurrent.Callable $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z1, "AppSearchSession has already been closed");

        $r1 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.StorageInfo lambda$getStorageInfoAsync$9()>, methodtype: androidx.appsearch.app.StorageInfo __METHODTYPE__());

        $r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture requestFlushAsync()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.util.concurrent.Callable $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r1 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.lang.Void lambda$requestFlushAsync$10()>, methodtype: java.lang.Void __METHODTYPE__());

        $r2 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)>($r1);

        return $r2;
    }

    public androidx.appsearch.app.Features getFeatures()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.Features $r1;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.Features mFeatures>;

        return $r1;
    }

    public void close()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        boolean $z0, $z1;
        java.util.concurrent.Executor $r1;
        java.util.concurrent.Callable $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $z0 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed>;

        if $z1 != 0 goto label1;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r2 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: java.lang.Object lambda$close$11()>, methodtype: java.lang.Object __METHODTYPE__());

        staticinvoke <androidx.appsearch.localstorage.util.FutureUtil: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r1, $r2);

     label1:
        return;
    }

    private com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Callable)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.Executor $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r3 = staticinvoke <androidx.appsearch.localstorage.util.FutureUtil: com.google.common.util.concurrent.ListenableFuture execute(java.util.concurrent.Executor,java.util.concurrent.Callable)>($r2, r1);

        return $r3;
    }

    private androidx.appsearch.app.SetSchemaResponse setSchemaNoMigrations(androidx.appsearch.app.SetSchemaRequest, java.util.List, androidx.appsearch.localstorage.stats.SetSchemaStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.SetSchemaRequest r1;
        java.util.List r2;
        androidx.appsearch.localstorage.stats.SetSchemaStats$Builder r3;
        androidx.appsearch.app.InternalSetSchemaResponse r4;
        java.util.ArrayList $r5;
        androidx.appsearch.localstorage.AppSearchImpl $r6;
        java.lang.String $r7, $r8, $r12;
        java.util.Set $r9;
        boolean $z0, $z1;
        int $i0;
        androidx.appsearch.app.SetSchemaResponse $r10;
        androidx.appsearch.exceptions.AppSearchException $r11;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.SetSchemaRequest;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder;

        $r6 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r7 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r8 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r5 = new java.util.ArrayList;

        $r9 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemas()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        $z0 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: boolean isForceOverride()>();

        $i0 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: int getVersion()>();

        r4 = virtualinvoke $r6.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse setSchema(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>($r7, $r8, $r5, r2, $z0, $i0, r3);

        $z1 = virtualinvoke r4.<androidx.appsearch.app.InternalSetSchemaResponse: boolean isSuccess()>();

        if $z1 != 0 goto label1;

        $r11 = new androidx.appsearch.exceptions.AppSearchException;

        $r12 = virtualinvoke r4.<androidx.appsearch.app.InternalSetSchemaResponse: java.lang.String getErrorMessage()>();

        specialinvoke $r11.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(7, $r12);

        throw $r11;

     label1:
        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        $r10 = virtualinvoke r4.<androidx.appsearch.app.InternalSetSchemaResponse: androidx.appsearch.app.SetSchemaResponse getSetSchemaResponse()>();

        return $r10;
    }

    private void dispatchChangeNotifications()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.localstorage.AppSearchImpl $r1;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        virtualinvoke $r1.<androidx.appsearch.localstorage.AppSearchImpl: void dispatchAndClearChangeNotifications()>();

        return;
    }

    private void checkForOptimize(int)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        int i0;
        java.util.concurrent.Executor $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.appsearch.localstorage.SearchSessionImpl,int)>(r0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: void lambda$checkForOptimize$12(int)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void checkForOptimize()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.util.concurrent.Executor $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.util.concurrent.Executor mExecutor>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.appsearch.localstorage.SearchSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.appsearch.localstorage.SearchSessionImpl: void lambda$checkForOptimize$13()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void lambda$checkForOptimize$13()
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        long l0, $l1, $l2, $l5, $l6, $l10, $l11;
        java.lang.Throwable r1, $r9, $r13, r19;
        androidx.appsearch.localstorage.stats.OptimizeStats r2, r18, r20;
        androidx.appsearch.localstorage.AppSearchLogger $r3, $r6, $r7, $r11, $r12, $r15, $r16;
        androidx.appsearch.localstorage.AppSearchImpl $r4;
        int $i3, $i4, $i7, $i8, $i12, $i13;
        androidx.appsearch.localstorage.stats.OptimizeStats$Builder $r5, $r8, $r10, $r14, r17;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r17 = null;

     label01:
        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r3 == null goto label02;

        $r8 = new androidx.appsearch.localstorage.stats.OptimizeStats$Builder;

        specialinvoke $r8.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: void <init>()>();

        r17 = $r8;

     label02:
        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        virtualinvoke $r4.<androidx.appsearch.localstorage.AppSearchImpl: void checkForOptimize(androidx.appsearch.localstorage.stats.OptimizeStats$Builder)>(r17);

     label03:
        if r17 == null goto label11;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 - l0;

        $i3 = (int) $l2;

        $r5 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i3);

        r18 = virtualinvoke $r5.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r6 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r6 == null goto label04;

        $i4 = virtualinvoke r18.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i4 <= 0 goto label04;

        $r7 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r7.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r18);

     label04:
        goto label11;

     label05:
        $r13 := @caughtexception;

        r19 = $r13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppSearchSessionImpl", "Error occurred when check for optimize", r19);

     label06:
        if r17 == null goto label11;

        $l10 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l11 = $l10 - l0;

        $i12 = (int) $l11;

        $r14 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i12);

        r20 = virtualinvoke $r14.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r15 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r15 == null goto label07;

        $i13 = virtualinvoke r20.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i13 <= 0 goto label07;

        $r16 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r16.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r20);

     label07:
        goto label11;

     label08:
        $r9 := @caughtexception;

        r1 = $r9;

     label09:
        if r17 == null goto label10;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        $r10 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i7);

        r2 = virtualinvoke $r10.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r11 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r11 == null goto label10;

        $i8 = virtualinvoke r2.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i8 <= 0 goto label10;

        $r12 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r12.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r2);

     label10:
        throw r1;

     label11:
        return;

        catch androidx.appsearch.exceptions.AppSearchException from label01 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void lambda$checkForOptimize$12(int)
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        int i0, $i4, $i5, $i8, $i9, $i13, $i14;
        long l1, $l2, $l3, $l6, $l7, $l11, $l12;
        java.lang.Throwable r1, $r9, $r13, r19;
        androidx.appsearch.localstorage.stats.OptimizeStats r2, r18, r20;
        androidx.appsearch.localstorage.AppSearchLogger $r3, $r6, $r7, $r11, $r12, $r15, $r16;
        androidx.appsearch.localstorage.AppSearchImpl $r4;
        androidx.appsearch.localstorage.stats.OptimizeStats$Builder $r5, $r8, $r10, $r14, r17;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r17 = null;

     label01:
        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r3 == null goto label02;

        $r8 = new androidx.appsearch.localstorage.stats.OptimizeStats$Builder;

        specialinvoke $r8.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: void <init>()>();

        r17 = $r8;

     label02:
        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        virtualinvoke $r4.<androidx.appsearch.localstorage.AppSearchImpl: void checkForOptimize(int,androidx.appsearch.localstorage.stats.OptimizeStats$Builder)>(i0, r17);

     label03:
        if r17 == null goto label11;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 - l1;

        $i4 = (int) $l3;

        $r5 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i4);

        r18 = virtualinvoke $r5.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r6 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r6 == null goto label04;

        $i5 = virtualinvoke r18.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i5 <= 0 goto label04;

        $r7 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r7.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r18);

     label04:
        goto label11;

     label05:
        $r13 := @caughtexception;

        r19 = $r13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppSearchSessionImpl", "Error occurred when check for optimize", r19);

     label06:
        if r17 == null goto label11;

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l11 - l1;

        $i13 = (int) $l12;

        $r14 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i13);

        r20 = virtualinvoke $r14.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r15 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r15 == null goto label07;

        $i14 = virtualinvoke r20.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i14 <= 0 goto label07;

        $r16 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r16.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r20);

     label07:
        goto label11;

     label08:
        $r9 := @caughtexception;

        r1 = $r9;

     label09:
        if r17 == null goto label10;

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = $l6 - l1;

        $i8 = (int) $l7;

        $r10 = virtualinvoke r17.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setTotalLatencyMillis(int)>($i8);

        r2 = virtualinvoke $r10.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats build()>();

        $r11 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r11 == null goto label10;

        $i9 = virtualinvoke r2.<androidx.appsearch.localstorage.stats.OptimizeStats: int getOriginalDocumentCount()>();

        if $i9 <= 0 goto label10;

        $r12 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        interfaceinvoke $r12.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.OptimizeStats)>(r2);

     label10:
        throw r1;

     label11:
        return;

        catch androidx.appsearch.exceptions.AppSearchException from label01 to label03 with label05;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private java.lang.Object lambda$close$11() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        com.google.android.icing.proto.PersistType$Code $r1;
        androidx.appsearch.localstorage.AppSearchImpl $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r1 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code FULL>;

        virtualinvoke $r2.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r1);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsClosed> = 1;

        return null;
    }

    private java.lang.Void lambda$requestFlushAsync$10() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        com.google.android.icing.proto.PersistType$Code $r1;
        androidx.appsearch.localstorage.AppSearchImpl $r2;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r1 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code FULL>;

        virtualinvoke $r2.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r1);

        return null;
    }

    private androidx.appsearch.app.StorageInfo lambda$getStorageInfoAsync$9() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String $r1, $r2;
        androidx.appsearch.localstorage.AppSearchImpl $r3;
        androidx.appsearch.app.StorageInfo $r4;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r4 = virtualinvoke $r3.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.StorageInfo getStorageInfoForDatabase(java.lang.String,java.lang.String)>($r2, $r1);

        return $r4;
    }

    private java.lang.Void lambda$removeAsync$8(java.lang.String, androidx.appsearch.app.SearchSpec) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String r1, $r4, $r5, $r13, $r14;
        androidx.appsearch.app.SearchSpec r2;
        androidx.appsearch.localstorage.AppSearchLogger $r3, $r9, $r10;
        androidx.appsearch.localstorage.AppSearchImpl $r6, $r8;
        com.google.android.icing.proto.PersistType$Code $r7;
        androidx.appsearch.localstorage.stats.RemoveStats $r11;
        androidx.appsearch.localstorage.stats.RemoveStats$Builder $r12, r15;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        r15 = null;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r3 == null goto label1;

        $r12 = new androidx.appsearch.localstorage.stats.RemoveStats$Builder;

        $r14 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r13 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        specialinvoke $r12.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        r15 = $r12;

     label1:
        $r6 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r5 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        virtualinvoke $r6.<androidx.appsearch.localstorage.AppSearchImpl: void removeByQuery(java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.app.SearchSpec,androidx.appsearch.localstorage.stats.RemoveStats$Builder)>($r5, $r4, r1, r2, r15);

        $r8 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r7 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code LITE>;

        virtualinvoke $r8.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r7);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void dispatchChangeNotifications()>();

        $r9 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r9 == null goto label2;

        $r10 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r11 = virtualinvoke r15.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats build()>();

        interfaceinvoke $r10.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.RemoveStats)>($r11);

     label2:
        return null;
    }

    private androidx.appsearch.app.AppSearchBatchResult lambda$removeAsync$7(androidx.appsearch.app.RemoveByDocumentIdRequest) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.RemoveByDocumentIdRequest r1;
        androidx.appsearch.app.AppSearchBatchResult$Builder r2, $r7;
        java.util.Iterator r3;
        java.lang.String r4, $r15, $r16, $r17, $r23, $r24;
        java.lang.Throwable r5, r6, $r25, $r31;
        java.util.Set $r8;
        boolean $z0;
        com.google.android.icing.proto.PersistType$Code $r9;
        androidx.appsearch.localstorage.AppSearchImpl $r10, $r14;
        androidx.appsearch.app.AppSearchBatchResult $r11;
        java.lang.Object $r12;
        androidx.appsearch.localstorage.AppSearchLogger $r13, $r19, $r20, $r28, $r29, $r32, $r33;
        androidx.appsearch.localstorage.stats.RemoveStats $r21, $r30, $r34;
        androidx.appsearch.localstorage.stats.RemoveStats$Builder $r22, r35;
        androidx.appsearch.app.AppSearchResult $r26;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.RemoveByDocumentIdRequest;

        $r7 = new androidx.appsearch.app.AppSearchBatchResult$Builder;

        specialinvoke $r7.<androidx.appsearch.app.AppSearchBatchResult$Builder: void <init>()>();

        r2 = $r7;

        $r8 = virtualinvoke r1.<androidx.appsearch.app.RemoveByDocumentIdRequest: java.util.Set getIds()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r12;

        r35 = null;

        $r13 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r13 == null goto label02;

        $r22 = new androidx.appsearch.localstorage.stats.RemoveStats$Builder;

        $r24 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r23 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        specialinvoke $r22.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: void <init>(java.lang.String,java.lang.String)>($r24, $r23);

        r35 = $r22;

     label02:
        $r14 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r15 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r16 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r17 = virtualinvoke r1.<androidx.appsearch.app.RemoveByDocumentIdRequest: java.lang.String getNamespace()>();

        virtualinvoke $r14.<androidx.appsearch.localstorage.AppSearchImpl: void remove(java.lang.String,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.stats.RemoveStats$Builder)>($r15, $r16, $r17, r4, r35);

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setSuccess(java.lang.Object,java.lang.Object)>(r4, null);

     label03:
        $r19 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r19 == null goto label09;

        $r20 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r21 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats build()>();

        interfaceinvoke $r20.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.RemoveStats)>($r21);

        goto label09;

     label04:
        $r25 := @caughtexception;

        r5 = $r25;

        $r26 = staticinvoke <androidx.appsearch.app.AppSearchResult: androidx.appsearch.app.AppSearchResult throwableToFailedResult(java.lang.Throwable)>(r5);

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setResult(java.lang.Object,androidx.appsearch.app.AppSearchResult)>(r4, $r26);

     label05:
        $r28 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r28 == null goto label09;

        $r29 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r30 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats build()>();

        interfaceinvoke $r29.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.RemoveStats)>($r30);

        goto label09;

     label06:
        $r31 := @caughtexception;

        r6 = $r31;

     label07:
        $r32 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r32 == null goto label08;

        $r33 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r34 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats build()>();

        interfaceinvoke $r33.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.RemoveStats)>($r34);

     label08:
        throw r6;

     label09:
        goto label01;

     label10:
        $r10 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r9 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code LITE>;

        virtualinvoke $r10.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r9);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void dispatchChangeNotifications()>();

        $r11 = virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult build()>();

        return $r11;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private java.lang.Void lambda$reportUsageAsync$6(androidx.appsearch.app.ReportUsageRequest) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.ReportUsageRequest r1;
        androidx.appsearch.localstorage.AppSearchImpl $r2;
        java.lang.String $r3, $r4, $r5, $r6;
        long $l0;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.ReportUsageRequest;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r5 = virtualinvoke r1.<androidx.appsearch.app.ReportUsageRequest: java.lang.String getNamespace()>();

        $r6 = virtualinvoke r1.<androidx.appsearch.app.ReportUsageRequest: java.lang.String getDocumentId()>();

        $l0 = virtualinvoke r1.<androidx.appsearch.app.ReportUsageRequest: long getUsageTimestampMillis()>();

        virtualinvoke $r2.<androidx.appsearch.localstorage.AppSearchImpl: void reportUsage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,boolean)>($r3, $r4, $r5, $r6, $l0, 0);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        return null;
    }

    private java.util.List lambda$searchSuggestionAsync$5(java.lang.String, androidx.appsearch.app.SearchSuggestionSpec) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.lang.String r1, $r3, $r4;
        androidx.appsearch.app.SearchSuggestionSpec r2;
        androidx.appsearch.localstorage.AppSearchImpl $r5;
        java.util.List $r6;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSuggestionSpec;

        $r5 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r6 = virtualinvoke $r5.<androidx.appsearch.localstorage.AppSearchImpl: java.util.List searchSuggestion(java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.app.SearchSuggestionSpec)>($r4, $r3, r1, r2);

        return $r6;
    }

    private androidx.appsearch.app.AppSearchBatchResult lambda$getByDocumentIdAsync$4(androidx.appsearch.app.GetByDocumentIdRequest) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.GetByDocumentIdRequest r1;
        androidx.appsearch.app.AppSearchBatchResult$Builder r2, $r6;
        java.util.Map r3;
        java.util.Iterator r4;
        java.lang.String r5, $r11, $r12, $r13;
        java.util.Set $r7;
        boolean $z0;
        androidx.appsearch.app.AppSearchBatchResult $r8;
        java.lang.Object $r9;
        androidx.appsearch.localstorage.AppSearchImpl $r10;
        java.lang.Throwable $r15, r19;
        androidx.appsearch.app.AppSearchResult $r16;
        androidx.appsearch.app.GenericDocument r18;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.GetByDocumentIdRequest;

        $r6 = new androidx.appsearch.app.AppSearchBatchResult$Builder;

        specialinvoke $r6.<androidx.appsearch.app.AppSearchBatchResult$Builder: void <init>()>();

        r2 = $r6;

        r3 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.util.Map getProjectionsInternal()>();

        $r7 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.util.Set getIds()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r9;

     label2:
        $r10 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r11 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r12 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r13 = virtualinvoke r1.<androidx.appsearch.app.GetByDocumentIdRequest: java.lang.String getNamespace()>();

        r18 = virtualinvoke $r10.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GenericDocument getDocument(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>($r11, $r12, $r13, r5, r3);

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setSuccess(java.lang.Object,java.lang.Object)>(r5, r18);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        r19 = $r15;

        $r16 = staticinvoke <androidx.appsearch.app.AppSearchResult: androidx.appsearch.app.AppSearchResult throwableToFailedResult(java.lang.Throwable)>(r19);

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setResult(java.lang.Object,androidx.appsearch.app.AppSearchResult)>(r5, $r16);

     label5:
        goto label1;

     label6:
        $r8 = virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult build()>();

        return $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private androidx.appsearch.app.AppSearchBatchResult lambda$putAsync$3(androidx.appsearch.app.PutDocumentsRequest) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.PutDocumentsRequest r1;
        androidx.appsearch.app.AppSearchBatchResult$Builder r2, $r5;
        androidx.appsearch.app.GenericDocument r3;
        java.lang.Throwable r4, $r18;
        java.util.List $r6, $r10;
        int $i0, i1;
        com.google.android.icing.proto.PersistType$Code $r7;
        androidx.appsearch.localstorage.AppSearchImpl $r8, $r15;
        androidx.appsearch.app.AppSearchBatchResult $r9;
        java.lang.Object $r11;
        androidx.appsearch.localstorage.AppSearchLogger $r12;
        java.lang.String $r13, $r14, $r16, $r19;
        androidx.appsearch.app.AppSearchResult $r20;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.PutDocumentsRequest;

        $r5 = new androidx.appsearch.app.AppSearchBatchResult$Builder;

        specialinvoke $r5.<androidx.appsearch.app.AppSearchBatchResult$Builder: void <init>()>();

        r2 = $r5;

        i1 = 0;

     label1:
        $r6 = virtualinvoke r1.<androidx.appsearch.app.PutDocumentsRequest: java.util.List getGenericDocuments()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i1 >= $i0 goto label6;

        $r10 = virtualinvoke r1.<androidx.appsearch.app.PutDocumentsRequest: java.util.List getGenericDocuments()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (androidx.appsearch.app.GenericDocument) $r11;

     label2:
        $r15 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r14 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r13 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r12 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        virtualinvoke $r15.<androidx.appsearch.localstorage.AppSearchImpl: void putDocument(java.lang.String,java.lang.String,androidx.appsearch.app.GenericDocument,boolean,androidx.appsearch.localstorage.AppSearchLogger)>($r14, $r13, r3, 1, $r12);

        $r16 = virtualinvoke r3.<androidx.appsearch.app.GenericDocument: java.lang.String getId()>();

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setSuccess(java.lang.Object,java.lang.Object)>($r16, null);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

        r4 = $r18;

        $r19 = virtualinvoke r3.<androidx.appsearch.app.GenericDocument: java.lang.String getId()>();

        $r20 = staticinvoke <androidx.appsearch.app.AppSearchResult: androidx.appsearch.app.AppSearchResult throwableToFailedResult(java.lang.Throwable)>(r4);

        virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult$Builder setResult(java.lang.Object,androidx.appsearch.app.AppSearchResult)>($r19, $r20);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $r8 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r7 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code LITE>;

        virtualinvoke $r8.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r7);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void dispatchChangeNotifications()>();

        $r9 = virtualinvoke r2.<androidx.appsearch.app.AppSearchBatchResult$Builder: androidx.appsearch.app.AppSearchBatchResult build()>();

        return $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private java.util.Set lambda$getNamespacesAsync$2() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        java.util.List r1;
        java.lang.String $r2, $r3;
        androidx.appsearch.localstorage.AppSearchImpl $r4;
        androidx.collection.ArraySet $r5;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        r1 = virtualinvoke $r4.<androidx.appsearch.localstorage.AppSearchImpl: java.util.List getNamespaces(java.lang.String,java.lang.String)>($r3, $r2);

        $r5 = new androidx.collection.ArraySet;

        specialinvoke $r5.<androidx.collection.ArraySet: void <init>(java.util.Collection)>(r1);

        return $r5;
    }

    private androidx.appsearch.app.GetSchemaResponse lambda$getSchemaAsync$1() throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r1;
        java.lang.String $r2, $r3;
        androidx.appsearch.localstorage.AppSearchImpl $r4;
        androidx.appsearch.app.GetSchemaResponse $r5;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        $r4 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r3 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r2 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r1 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>;

        $r5 = virtualinvoke $r4.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GetSchemaResponse getSchema(java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.CallerAccess)>($r3, $r2, $r1);

        return $r5;
    }

    private androidx.appsearch.app.SetSchemaResponse lambda$setSchemaAsync$0(androidx.appsearch.app.SetSchemaRequest) throws java.lang.Exception
    {
        androidx.appsearch.localstorage.SearchSessionImpl r0;
        androidx.appsearch.app.SetSchemaRequest r1;
        long l0, l3, l4, $l8, $l10, $l12, $l14, $l16, $l18, $l21, $l22, $l24, $l25, l27, l28, l29;
        java.util.List r2;
        java.util.Map r3, r4;
        int i1, i2, $i5, $i6, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i20, $i23, $i26;
        androidx.appsearch.localstorage.AppSearchMigrationHelper r5, $r21;
        java.lang.Throwable r6, $r56, $r57, r65;
        androidx.appsearch.app.SetSchemaResponse$Builder r7, $r27;
        androidx.appsearch.app.SetSchemaResponse r8, $r26, r59, r61, r64;
        androidx.appsearch.localstorage.AppSearchLogger $r9, $r37, $r48, $r51;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r10;
        java.lang.String $r11, $r12, $r17, $r18, $r23, $r24, $r41, $r42, $r45, $r54, $r55;
        androidx.appsearch.localstorage.AppSearchImpl $r13, $r16, $r22, $r40;
        java.util.Set $r14, $r19, $r20, $r25, $r28, $r43;
        java.util.ArrayList $r15, $r39;
        boolean $z0, $z1;
        androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder $r29, $r30, $r31, $r32, $r46, r63;
        androidx.appsearch.localstorage.stats.SchemaMigrationStats $r34;
        androidx.appsearch.localstorage.stats.SetSchemaStats$Builder $r35, $r53, r58;
        androidx.appsearch.localstorage.stats.SetSchemaStats $r38, $r49, $r52;
        androidx.appsearch.exceptions.AppSearchException $r44;
        androidx.appsearch.app.GetSchemaResponse r60;
        androidx.appsearch.app.InternalSetSchemaResponse r62;

        r0 := @this: androidx.appsearch.localstorage.SearchSessionImpl;

        r1 := @parameter0: androidx.appsearch.app.SetSchemaRequest;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r2 = staticinvoke <androidx.appsearch.app.VisibilityDocument: java.util.List toVisibilityDocuments(androidx.appsearch.app.SetSchemaRequest)>(r1);

        r58 = null;

        $r9 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        if $r9 == null goto label01;

        $r53 = new androidx.appsearch.localstorage.stats.SetSchemaStats$Builder;

        $r55 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r54 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        specialinvoke $r53.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: void <init>(java.lang.String,java.lang.String)>($r55, $r54);

        r58 = $r53;

     label01:
        r3 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: java.util.Map getMigrators()>();

        $i5 = interfaceinvoke r3.<java.util.Map: int size()>();

        if $i5 != 0 goto label03;

        r59 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.SetSchemaResponse setSchemaNoMigrations(androidx.appsearch.app.SetSchemaRequest,java.util.List,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r1, r2, r58);

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void dispatchChangeNotifications()>();

        if r58 == null goto label02;

        $l24 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l25 = $l24 - l0;

        $i26 = (int) $l25;

        virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder setTotalLatencyMillis(int)>($i26);

        $r51 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r52 = virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats build()>();

        interfaceinvoke $r51.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SetSchemaStats)>($r52);

     label02:
        return r59;

     label03:
        $r13 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r12 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r11 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r10 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.visibilitystore.CallerAccess mSelfCallerAccess>;

        r60 = virtualinvoke $r13.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GetSchemaResponse getSchema(java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.CallerAccess)>($r12, $r11, $r10);

        i1 = virtualinvoke r60.<androidx.appsearch.app.GetSchemaResponse: int getVersion()>();

        i2 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: int getVersion()>();

        $r14 = virtualinvoke r60.<androidx.appsearch.app.GetSchemaResponse: java.util.Set getSchemas()>();

        r4 = staticinvoke <androidx.appsearch.util.SchemaMigrationUtil: java.util.Map getActiveMigrators(java.util.Set,java.util.Map,int,int)>($r14, r3, i1, i2);

        $i6 = interfaceinvoke r4.<java.util.Map: int size()>();

        if $i6 != 0 goto label05;

        r61 = specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.app.SetSchemaResponse setSchemaNoMigrations(androidx.appsearch.app.SetSchemaRequest,java.util.List,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r1, r2, r58);

        if r58 == null goto label04;

        $l21 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l22 = $l21 - l0;

        $i23 = (int) $l22;

        virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder setTotalLatencyMillis(int)>($i23);

        $r48 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r49 = virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats build()>();

        interfaceinvoke $r48.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SetSchemaStats)>($r49);

     label04:
        return r61;

     label05:
        l27 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r16 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r17 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r18 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r15 = new java.util.ArrayList;

        $r19 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemas()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r19);

        $i7 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: int getVersion()>();

        r62 = virtualinvoke $r16.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse setSchema(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>($r17, $r18, $r15, r2, 0, $i7, r58);

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r20 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();

        staticinvoke <androidx.appsearch.util.SchemaMigrationUtil: void checkDeletedAndIncompatibleAfterMigration(androidx.appsearch.app.InternalSetSchemaResponse,java.util.Set)>(r62, $r20);

        r63 = null;

        if r58 == null goto label06;

        $r46 = new androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder;

        specialinvoke $r46.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: void <init>()>();

        r63 = $r46;

     label06:
        $r21 = new androidx.appsearch.localstorage.AppSearchMigrationHelper;

        $r22 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r23 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r24 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r25 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemas()>();

        specialinvoke $r21.<androidx.appsearch.localstorage.AppSearchMigrationHelper: void <init>(androidx.appsearch.localstorage.AppSearchImpl,java.lang.String,java.lang.String,java.util.Set)>($r22, $r23, $r24, $r25);

        r5 = $r21;

     label07:
        virtualinvoke r5.<androidx.appsearch.localstorage.AppSearchMigrationHelper: void queryAndTransform(java.util.Map,int,int,androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder)>(r4, i1, i2, r63);

        l28 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $z0 = virtualinvoke r62.<androidx.appsearch.app.InternalSetSchemaResponse: boolean isSuccess()>();

        if $z0 != 0 goto label08;

        $r40 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchImpl mAppSearchImpl>;

        $r41 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mPackageName>;

        $r42 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: java.lang.String mDatabaseName>;

        $r39 = new java.util.ArrayList;

        $r43 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: java.util.Set getSchemas()>();

        specialinvoke $r39.<java.util.ArrayList: void <init>(java.util.Collection)>($r43);

        $i20 = virtualinvoke r1.<androidx.appsearch.app.SetSchemaRequest: int getVersion()>();

        r62 = virtualinvoke $r40.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse setSchema(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>($r41, $r42, $r39, r2, 1, $i20, r58);

        $z1 = virtualinvoke r62.<androidx.appsearch.app.InternalSetSchemaResponse: boolean isSuccess()>();

        if $z1 != 0 goto label08;

        $r44 = new androidx.appsearch.exceptions.AppSearchException;

        $r45 = virtualinvoke r62.<androidx.appsearch.app.InternalSetSchemaResponse: java.lang.String getErrorMessage()>();

        specialinvoke $r44.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(2, $r45);

        throw $r44;

     label08:
        $r26 = virtualinvoke r62.<androidx.appsearch.app.InternalSetSchemaResponse: androidx.appsearch.app.SetSchemaResponse getSetSchemaResponse()>();

        $r27 = virtualinvoke $r26.<androidx.appsearch.app.SetSchemaResponse: androidx.appsearch.app.SetSchemaResponse$Builder toBuilder()>();

        $r28 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();

        r7 = virtualinvoke $r27.<androidx.appsearch.app.SetSchemaResponse$Builder: androidx.appsearch.app.SetSchemaResponse$Builder addMigratedTypes(java.util.Collection)>($r28);

        r0.<androidx.appsearch.localstorage.SearchSessionImpl: boolean mIsMutated> = 1;

        l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r8 = virtualinvoke r5.<androidx.appsearch.localstorage.AppSearchMigrationHelper: androidx.appsearch.app.SetSchemaResponse readAndPutDocuments(androidx.appsearch.app.SetSchemaResponse$Builder,androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder)>(r7, r63);

        specialinvoke r0.<androidx.appsearch.localstorage.SearchSessionImpl: void dispatchChangeNotifications()>();

        if r63 == null goto label09;

        l29 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = l29 - l4;

        $i9 = (int) $l8;

        $r29 = virtualinvoke r63.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder setSaveDocumentLatencyMillis(int)>($i9);

        $l10 = l27 - l0;

        $i11 = (int) $l10;

        $r30 = virtualinvoke $r29.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder setGetSchemaLatencyMillis(int)>($i11);

        $l12 = l3 - l27;

        $i13 = (int) $l12;

        $r31 = virtualinvoke $r30.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder setFirstSetSchemaLatencyMillis(int)>($i13);

        $l14 = l28 - l3;

        $i15 = (int) $l14;

        $r32 = virtualinvoke $r31.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder setQueryAndTransformLatencyMillis(int)>($i15);

        $l16 = l4 - l28;

        $i17 = (int) $l16;

        virtualinvoke $r32.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder setSecondSetSchemaLatencyMillis(int)>($i17);

        $r34 = virtualinvoke r63.<androidx.appsearch.localstorage.stats.SchemaMigrationStats$Builder: androidx.appsearch.localstorage.stats.SchemaMigrationStats build()>();

        $r35 = virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder setSchemaMigrationStats(androidx.appsearch.localstorage.stats.SchemaMigrationStats)>($r34);

        $l18 = l29 - l0;

        $i19 = (int) $l18;

        virtualinvoke $r35.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder setTotalLatencyMillis(int)>($i19);

        $r37 = r0.<androidx.appsearch.localstorage.SearchSessionImpl: androidx.appsearch.localstorage.AppSearchLogger mLogger>;

        $r38 = virtualinvoke r58.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats build()>();

        interfaceinvoke $r37.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SetSchemaStats)>($r38);

     label09:
        r64 = r8;

     label10:
        virtualinvoke r5.<androidx.appsearch.localstorage.AppSearchMigrationHelper: void close()>();

        return r64;

     label11:
        $r57 := @caughtexception;

        r65 = $r57;

     label12:
        virtualinvoke r5.<androidx.appsearch.localstorage.AppSearchMigrationHelper: void close()>();

     label13:
        goto label15;

     label14:
        $r56 := @caughtexception;

        r6 = $r56;

        virtualinvoke r65.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6);

     label15:
        throw r65;

        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

