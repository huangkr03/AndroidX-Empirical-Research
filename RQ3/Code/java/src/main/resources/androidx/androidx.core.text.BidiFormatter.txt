androidx.core.text.BidiFormatter
<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>
<androidx.core.text.BidiFormatter: char LRE>
<androidx.core.text.BidiFormatter: char RLE>
<androidx.core.text.BidiFormatter: char PDF>
<androidx.core.text.BidiFormatter: char LRM>
<androidx.core.text.BidiFormatter: char RLM>
<androidx.core.text.BidiFormatter: java.lang.String LRM_STRING>
<androidx.core.text.BidiFormatter: java.lang.String RLM_STRING>
<androidx.core.text.BidiFormatter: java.lang.String EMPTY_STRING>
<androidx.core.text.BidiFormatter: int FLAG_STEREO_RESET>
<androidx.core.text.BidiFormatter: int DEFAULT_FLAGS>
<androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE>
<androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE>
<androidx.core.text.BidiFormatter: boolean mIsRtlContext>
<androidx.core.text.BidiFormatter: int mFlags>
<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>
<androidx.core.text.BidiFormatter: int DIR_LTR>
<androidx.core.text.BidiFormatter: int DIR_UNKNOWN>
<androidx.core.text.BidiFormatter: int DIR_RTL>
    public static androidx.core.text.BidiFormatter getInstance()
    {
        androidx.core.text.BidiFormatter$Builder $r0;
        androidx.core.text.BidiFormatter $r1;

        $r0 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r0.<androidx.core.text.BidiFormatter$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r1;
    }

    public static androidx.core.text.BidiFormatter getInstance(boolean)
    {
        boolean z0;
        androidx.core.text.BidiFormatter$Builder $r0;
        androidx.core.text.BidiFormatter $r1;

        z0 := @parameter0: boolean;

        $r0 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r0.<androidx.core.text.BidiFormatter$Builder: void <init>(boolean)>(z0);

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r1;
    }

    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        androidx.core.text.BidiFormatter$Builder $r1;
        androidx.core.text.BidiFormatter $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$Builder: void <init>(java.util.Locale)>(r0);

        $r2 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r2;
    }

    void <init>(boolean, int, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter r0;
        boolean z0;
        int i0;
        androidx.core.text.TextDirectionHeuristicCompat r1;

        r0 := @this: androidx.core.text.BidiFormatter;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.core.text.TextDirectionHeuristicCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext> = z0;

        r0.<androidx.core.text.BidiFormatter: int mFlags> = i0;

        r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat> = r1;

        return;
    }

    public boolean isRtlContext()
    {
        androidx.core.text.BidiFormatter r0;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter;

        $z0 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        return $z0;
    }

    public boolean getStereoReset()
    {
        androidx.core.text.BidiFormatter r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter;

        $i0 = r0.<androidx.core.text.BidiFormatter: int mFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.String markAfter(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1;
        androidx.core.text.TextDirectionHeuristicCompat r2;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        z0 = interfaceinvoke r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        $z1 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        $i2 = staticinvoke <androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)>(r1);

        if $i2 != 1 goto label2;

     label1:
        $r4 = <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING>;

        return $r4;

     label2:
        $z2 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z2 == 0 goto label4;

        if z0 == 0 goto label3;

        $i1 = staticinvoke <androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)>(r1);

        if $i1 != -1 goto label4;

     label3:
        $r3 = <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING>;

        return $r3;

     label4:
        return "";
    }

    private java.lang.String markBefore(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1;
        androidx.core.text.TextDirectionHeuristicCompat r2;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        z0 = interfaceinvoke r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        $z1 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        $i2 = staticinvoke <androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)>(r1);

        if $i2 != 1 goto label2;

     label1:
        $r4 = <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING>;

        return $r4;

     label2:
        $z2 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z2 == 0 goto label4;

        if z0 == 0 goto label3;

        $i1 = staticinvoke <androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)>(r1);

        if $i1 != -1 goto label4;

     label3:
        $r3 = <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING>;

        return $r3;

     label4:
        return "";
    }

    public boolean isRtl(java.lang.String)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)>(r1);

        return $z0;
    }

    public boolean isRtl(java.lang.CharSequence)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $z0 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return $z0;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.String r1, $r4;
        androidx.core.text.TextDirectionHeuristicCompat r2;
        boolean z0;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        z0 := @parameter2: boolean;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, r2, z0);

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1;
        androidx.core.text.TextDirectionHeuristicCompat r2, $r20, $r21;
        boolean z0, z1, $z2, $z3;
        android.text.SpannableStringBuilder r3, $r4;
        int $i0;
        java.lang.String $r6, $r15;
        char $c1;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        z0 := @parameter2: boolean;

        if r1 != null goto label01;

        return null;

     label01:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        z1 = interfaceinvoke r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        $r4 = new android.text.SpannableStringBuilder;

        specialinvoke $r4.<android.text.SpannableStringBuilder: void <init>()>();

        r3 = $r4;

        $z2 = virtualinvoke r0.<androidx.core.text.BidiFormatter: boolean getStereoReset()>();

        if $z2 == 0 goto label04;

        if z0 == 0 goto label04;

        if z1 == 0 goto label02;

        $r20 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL>;

        goto label03;

     label02:
        $r20 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR>;

     label03:
        $r15 = specialinvoke r0.<androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>(r1, $r20);

        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r15);

     label04:
        $z3 = r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if z1 == $z3 goto label07;

        if z1 == 0 goto label05;

        $c1 = 8235;

        goto label06;

     label05:
        $c1 = 8234;

     label06:
        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>($c1);

        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(8236);

        goto label08;

     label07:
        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

     label08:
        if z0 == 0 goto label11;

        if z1 == 0 goto label09;

        $r21 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL>;

        goto label10;

     label09:
        $r21 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR>;

     label10:
        $r6 = specialinvoke r0.<androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>(r1, $r21);

        virtualinvoke r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r6);

     label11:
        return r3;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        androidx.core.text.TextDirectionHeuristicCompat r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, r2, 1);

        return $r3;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1, $r3;
        androidx.core.text.TextDirectionHeuristicCompat r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, r2, 1);

        return $r3;
    }

    public java.lang.String unicodeWrap(java.lang.String, boolean)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        boolean z0;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, $r2, z0);

        return $r3;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, boolean)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1, $r3;
        boolean z0;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, $r2, z0);

        return $r3;
    }

    public java.lang.String unicodeWrap(java.lang.String)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, $r2, 1);

        return $r3;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    {
        androidx.core.text.BidiFormatter r0;
        java.lang.CharSequence r1, $r3;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        r0 := @this: androidx.core.text.BidiFormatter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r3 = virtualinvoke r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>(r1, $r2, 1);

        return $r3;
    }

    static boolean isRtlLocale(java.util.Locale)
    {
        java.util.Locale r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        $i0 = staticinvoke <androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)>(r0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int getExitDir(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.CharSequence,boolean)>(r0, 0);

        $i0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()>();

        return $i0;
    }

    private static int getEntryDir(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.CharSequence,boolean)>(r0, 0);

        $i0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()>();

        return $i0;
    }

    static void <clinit>()
    {
        androidx.core.text.TextDirectionHeuristicCompat $r0, $r4, $r6;
        java.lang.String $r1, $r2;
        androidx.core.text.BidiFormatter $r3, $r5;

        $r0 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR>;

        <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC> = $r0;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8206);

        <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING> = $r1;

        $r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8207);

        <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING> = $r2;

        $r3 = new androidx.core.text.BidiFormatter;

        $r4 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r3.<androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>(0, 2, $r4);

        <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE> = $r3;

        $r5 = new androidx.core.text.BidiFormatter;

        $r6 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r5.<androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>(1, 2, $r6);

        <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE> = $r5;

        return;
    }

androidx.core.text.BidiFormatter$Builder
<androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext>
<androidx.core.text.BidiFormatter$Builder: int mFlags>
<androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat>
    public void <init>()
    {
        androidx.core.text.BidiFormatter$Builder r0;
        java.util.Locale $r1;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $z0 = staticinvoke <androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)>($r1);

        specialinvoke r0.<androidx.core.text.BidiFormatter$Builder: void initialize(boolean)>($z0);

        return;
    }

    public void <init>(boolean)
    {
        androidx.core.text.BidiFormatter$Builder r0;
        boolean z0;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<androidx.core.text.BidiFormatter$Builder: void initialize(boolean)>(z0);

        return;
    }

    public void <init>(java.util.Locale)
    {
        androidx.core.text.BidiFormatter$Builder r0;
        java.util.Locale r1;
        boolean $z0;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)>(r1);

        specialinvoke r0.<androidx.core.text.BidiFormatter$Builder: void initialize(boolean)>($z0);

        return;
    }

    private void initialize(boolean)
    {
        androidx.core.text.BidiFormatter$Builder r0;
        boolean z0;
        androidx.core.text.TextDirectionHeuristicCompat $r1;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext> = z0;

        $r1 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat> = $r1;

        r0.<androidx.core.text.BidiFormatter$Builder: int mFlags> = 2;

        return;
    }

    public androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
    {
        androidx.core.text.BidiFormatter$Builder r0;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<androidx.core.text.BidiFormatter$Builder: int mFlags>;

        $i3 = $i2 | 2;

        r0.<androidx.core.text.BidiFormatter$Builder: int mFlags> = $i3;

        goto label2;

     label1:
        $i0 = r0.<androidx.core.text.BidiFormatter$Builder: int mFlags>;

        $i1 = $i0 & -3;

        r0.<androidx.core.text.BidiFormatter$Builder: int mFlags> = $i1;

     label2:
        return r0;
    }

    public androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter$Builder r0;
        androidx.core.text.TextDirectionHeuristicCompat r1;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        r1 := @parameter0: androidx.core.text.TextDirectionHeuristicCompat;

        r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat> = r1;

        return r0;
    }

    private static androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)
    {
        boolean z0;
        androidx.core.text.BidiFormatter $r0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE>;

        goto label2;

     label1:
        $r0 = <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE>;

     label2:
        return $r0;
    }

    public androidx.core.text.BidiFormatter build()
    {
        androidx.core.text.BidiFormatter$Builder r0;
        int $i0, $i1;
        androidx.core.text.BidiFormatter $r1, $r5;
        androidx.core.text.TextDirectionHeuristicCompat $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.core.text.BidiFormatter$Builder;

        $i0 = r0.<androidx.core.text.BidiFormatter$Builder: int mFlags>;

        if $i0 != 2 goto label1;

        $r4 = r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat>;

        $r3 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        if $r4 != $r3 goto label1;

        $z1 = r0.<androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext>;

        $r5 = staticinvoke <androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)>($z1);

        return $r5;

     label1:
        $r1 = new androidx.core.text.BidiFormatter;

        $z0 = r0.<androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext>;

        $i1 = r0.<androidx.core.text.BidiFormatter$Builder: int mFlags>;

        $r2 = r0.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat>;

        specialinvoke $r1.<androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>($z0, $i1, $r2);

        return $r1;
    }

androidx.core.text.BidiFormatter$DirectionalityEstimator
<androidx.core.text.BidiFormatter$DirectionalityEstimator: int DIR_TYPE_CACHE_SIZE>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>
<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>
    void <init>(java.lang.CharSequence, boolean)
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        java.lang.CharSequence r1;
        boolean z0;
        int $i0;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text> = r1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml> = z0;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length> = $i0;

        return;
    }

    int getEntryDir()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int $i0, i3, i5, $i6, $i7;
        byte $b1, $b2, b4;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = 0;

        i3 = 0;

        b4 = 0;

        i5 = 0;

     label01:
        $i6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i7 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>;

        if $i6 >= $i7 goto label11;

        if i5 != 0 goto label11;

        $b2 = virtualinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()>();

        tableswitch($b2)
        {
            case 0: goto label06;
            case 1: goto label08;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label10;
            case 6: goto label10;
            case 7: goto label10;
            case 8: goto label10;
            case 9: goto label05;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label10;
            case 13: goto label10;
            case 14: goto label02;
            case 15: goto label02;
            case 16: goto label03;
            case 17: goto label03;
            case 18: goto label04;
            default: goto label10;
        };

     label02:
        i3 = i3 + 1;

        b4 = -1;

        goto label01;

     label03:
        i3 = i3 + 1;

        b4 = 1;

        goto label01;

     label04:
        i3 = i3 + -1;

        b4 = 0;

        goto label01;

     label05:
        goto label01;

     label06:
        if i3 != 0 goto label07;

        return -1;

     label07:
        i5 = i3;

        goto label01;

     label08:
        if i3 != 0 goto label09;

        return 1;

     label09:
        i5 = i3;

        goto label01;

     label10:
        i5 = i3;

        goto label01;

     label11:
        if i5 != 0 goto label12;

        return 0;

     label12:
        if b4 == 0 goto label13;

        return b4;

     label13:
        $i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        if $i0 <= 0 goto label20;

        $b1 = virtualinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()>();

        tableswitch($b1)
        {
            case 14: goto label14;
            case 15: goto label14;
            case 16: goto label16;
            case 17: goto label16;
            case 18: goto label18;
            default: goto label19;
        };

     label14:
        if i5 != i3 goto label15;

        return -1;

     label15:
        i3 = i3 + -1;

        goto label19;

     label16:
        if i5 != i3 goto label17;

        return 1;

     label17:
        i3 = i3 + -1;

        goto label19;

     label18:
        i3 = i3 + 1;

     label19:
        goto label13;

     label20:
        return 0;
    }

    int getExitDir()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int $i0, i2, i3, $i4;
        byte $b1;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        $i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i0;

        i2 = 0;

        i3 = 0;

     label01:
        $i4 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        if $i4 <= 0 goto label13;

        $b1 = virtualinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()>();

        tableswitch($b1)
        {
            case 0: goto label02;
            case 1: goto label06;
            case 2: goto label06;
            case 3: goto label12;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label12;
            case 7: goto label12;
            case 8: goto label12;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label04;
            case 15: goto label04;
            case 16: goto label08;
            case 17: goto label08;
            case 18: goto label10;
            default: goto label12;
        };

     label02:
        if i2 != 0 goto label03;

        return -1;

     label03:
        if i3 != 0 goto label01;

        i3 = i2;

        goto label01;

     label04:
        if i3 != i2 goto label05;

        return -1;

     label05:
        i2 = i2 + -1;

        goto label01;

     label06:
        if i2 != 0 goto label07;

        return 1;

     label07:
        if i3 != 0 goto label01;

        i3 = i2;

        goto label01;

     label08:
        if i3 != i2 goto label09;

        return 1;

     label09:
        i2 = i2 + -1;

        goto label01;

     label10:
        i2 = i2 + 1;

        goto label01;

     label11:
        goto label01;

     label12:
        if i3 != 0 goto label01;

        i3 = i2;

        goto label01;

     label13:
        return 0;
    }

    private static byte getCachedDirectionality(char)
    {
        char c0;
        byte[] $r0;
        byte $b1;

        c0 := @parameter0: char;

        if c0 >= 1792 goto label1;

        $r0 = <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE>;

        $b1 = $r0[c0];

        goto label2;

     label1:
        $b1 = staticinvoke <java.lang.Character: byte getDirectionality(char)>(c0);

     label2:
        return $b1;
    }

    byte dirTypeForward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int $i0, $i3, $i4, $i8, $i9, $i10, $i11, i13;
        java.lang.CharSequence $r1, $r2;
        char $c1, $c2, $c5, $c6, $c7;
        boolean $z0, $z1;
        byte $b12, b14;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c1;

        $c2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>($c2);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i8 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        i13 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>($r2, $i8);

        $i9 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i10 = staticinvoke <java.lang.Character: int charCount(int)>(i13);

        $i11 = $i9 + $i10;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i11;

        $b12 = staticinvoke <java.lang.Character: byte getDirectionality(int)>(i13);

        return $b12;

     label1:
        $i3 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i4 = $i3 + 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i4;

        $c5 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        b14 = staticinvoke <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)>($c5);

        $z1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml>;

        if $z1 == 0 goto label3;

        $c6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c6 != 60 goto label2;

        b14 = specialinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagForward()>();

        goto label3;

     label2:
        $c7 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c7 != 38 goto label3;

        b14 = specialinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityForward()>();

     label3:
        return b14;
    }

    byte dirTypeBackward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int $i0, $i1, $i4, $i5, $i9, $i10, $i11, $i12, i14;
        java.lang.CharSequence $r1, $r2;
        char $c2, $c3, $c6, $c7, $c8;
        boolean $z0, $z1;
        byte $b13, b15;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i1 = $i0 - 1;

        $c2 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i1);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c2;

        $c3 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        $z0 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>($c3);

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i9 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        i14 = staticinvoke <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>($r2, $i9);

        $i10 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i11 = staticinvoke <java.lang.Character: int charCount(int)>(i14);

        $i12 = $i10 - $i11;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i12;

        $b13 = staticinvoke <java.lang.Character: byte getDirectionality(int)>(i14);

        return $b13;

     label1:
        $i4 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i5 = $i4 - 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i5;

        $c6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        b15 = staticinvoke <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)>($c6);

        $z1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml>;

        if $z1 == 0 goto label3;

        $c7 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c7 != 62 goto label2;

        b15 = specialinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagBackward()>();

        goto label3;

     label2:
        $c8 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c8 != 59 goto label3;

        b15 = specialinvoke r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityBackward()>();

     label3:
        return b15;
    }

    private byte skipTagForward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int i0, $i2, $i3, $i7, $i8, $i11, $i12, $i13, $i14;
        char c1, $c4, $c5, $c6, $c9, $c10;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

     label1:
        $i11 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i12 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>;

        if $i11 >= $i12 goto label6;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i3 = $i2 + 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i3;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c4;

        $c5 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c5 != 62 goto label2;

        return 12;

     label2:
        $c6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c6 == 34 goto label3;

        $c10 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c10 != 39 goto label1;

     label3:
        c1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

     label4:
        $i13 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i14 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>;

        if $i13 >= $i14 goto label5;

        $r2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i7 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i8 = $i7 + 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i8;

        $c9 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i7);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c9;

        if $c9 == c1 goto label5;

        goto label4;

     label5:
        goto label1;

     label6:
        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = i0;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = 60;

        return 13;
    }

    private byte skipTagBackward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int i0, $i2, $i3, $i8, $i9, $i12, $i13;
        char c1, $c4, $c5, $c6, $c7, $c10, $c11;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

     label1:
        $i12 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        if $i12 <= 0 goto label7;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i3 = $i2 - 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i3;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c4;

        $c5 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c5 != 60 goto label2;

        return 12;

     label2:
        $c6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c6 != 62 goto label3;

        goto label7;

     label3:
        $c7 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c7 == 34 goto label4;

        $c11 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c11 != 39 goto label1;

     label4:
        c1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

     label5:
        $i13 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        if $i13 <= 0 goto label6;

        $r2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i8 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i9 = $i8 - 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i9;

        $c10 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i9);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c10;

        if $c10 == c1 goto label6;

        goto label5;

     label6:
        goto label1;

     label7:
        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = i0;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = 62;

        return 13;
    }

    private byte skipEntityForward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int $i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;
        char $c4;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

     label1:
        $i1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int length>;

        if $i1 >= $i0 goto label2;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i3 = $i2 + 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i3;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c4;

        if $c4 == 59 goto label2;

        goto label1;

     label2:
        return 12;
    }

    private byte skipEntityBackward()
    {
        androidx.core.text.BidiFormatter$DirectionalityEstimator r0;
        int i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;
        char $c4, $c5, $c6;

        r0 := @this: androidx.core.text.BidiFormatter$DirectionalityEstimator;

        i0 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

     label1:
        $i1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        if $i1 <= 0 goto label3;

        $r1 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text>;

        $i2 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex>;

        $i3 = $i2 - 1;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = $i3;

        $c4 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = $c4;

        $c5 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c5 != 38 goto label2;

        return 12;

     label2:
        $c6 = r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar>;

        if $c6 != 59 goto label1;

        goto label3;

     label3:
        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex> = i0;

        r0.<androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar> = 59;

        return 13;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;
        byte $b0;
        int i1;

        $r0 = newarray (byte)[1792];

        <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE> = $r0;

        i1 = 0;

     label1:
        if i1 >= 1792 goto label2;

        $r1 = <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE>;

        $b0 = staticinvoke <java.lang.Character: byte getDirectionality(int)>(i1);

        $r1[i1] = $b0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

