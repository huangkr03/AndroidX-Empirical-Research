androidx.paging.PagedStorage
<androidx.paging.PagedStorage: java.util.List pages>
<androidx.paging.PagedStorage: int placeholdersBefore>
<androidx.paging.PagedStorage: int placeholdersAfter>
<androidx.paging.PagedStorage: int positionOffset>
<androidx.paging.PagedStorage: boolean counted>
<androidx.paging.PagedStorage: int storageCount>
<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex>
    public final java.lang.Object getFirstLoadedItem$paging_common()
    {
        androidx.paging.PagedStorage r0;
        java.util.List $r1, $r4;
        java.lang.Object $r2, $r5;
        androidx.paging.PagingSource$LoadResult$Page $r3;

        r0 := @this: androidx.paging.PagedStorage;

        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r1);

        $r3 = (androidx.paging.PagingSource$LoadResult$Page) $r2;

        $r4 = virtualinvoke $r3.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r4);

        return $r5;
    }

    public final java.lang.Object getLastLoadedItem$paging_common()
    {
        androidx.paging.PagedStorage r0;
        java.util.List $r1, $r4;
        java.lang.Object $r2, $r5;
        androidx.paging.PagingSource$LoadResult$Page $r3;

        r0 := @this: androidx.paging.PagedStorage;

        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r1);

        $r3 = (androidx.paging.PagingSource$LoadResult$Page) $r2;

        $r4 = virtualinvoke $r3.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r4);

        return $r5;
    }

    public int getPlaceholdersBefore()
    {
        androidx.paging.PagedStorage r0;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = r0.<androidx.paging.PagedStorage: int placeholdersBefore>;

        return $i0;
    }

    public int getPlaceholdersAfter()
    {
        androidx.paging.PagedStorage r0;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = r0.<androidx.paging.PagedStorage: int placeholdersAfter>;

        return $i0;
    }

    public final int getPositionOffset()
    {
        androidx.paging.PagedStorage r0;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = r0.<androidx.paging.PagedStorage: int positionOffset>;

        return $i0;
    }

    public int getStorageCount()
    {
        androidx.paging.PagedStorage r0;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = r0.<androidx.paging.PagedStorage: int storageCount>;

        return $i0;
    }

    public final int getLastLoadAroundIndex()
    {
        androidx.paging.PagedStorage r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i1 = r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public final void setLastLoadAroundIndex(int)
    {
        androidx.paging.PagedStorage r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i2 = i0 - $i1;

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i4 = $i3 - 1;

        $i5 = staticinvoke <kotlin.ranges.RangesKt: int coerceIn(int,int,int)>($i2, 0, $i4);

        r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex> = $i5;

        return;
    }

    public final int getMiddleOfLoadedRange()
    {
        androidx.paging.PagedStorage r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i1 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i2 = $i1 / 2;

        $i3 = $i0 + $i2;

        return $i3;
    }

    public void <init>()
    {
        androidx.paging.PagedStorage r0;
        boolean z0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: androidx.paging.PagedStorage;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        z0 = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = (java.util.List) $r1;

        r0.<androidx.paging.PagedStorage: java.util.List pages> = $r2;

        r0.<androidx.paging.PagedStorage: boolean counted> = 1;

        return;
    }

    public void <init>(int, androidx.paging.PagingSource$LoadResult$Page, int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1;
        androidx.paging.PagingSource$LoadResult$Page r1;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "page");

        specialinvoke r0.<androidx.paging.PagedStorage: void <init>()>();

        specialinvoke r0.<androidx.paging.PagedStorage: void init(int,androidx.paging.PagingSource$LoadResult$Page,int,int,boolean)>(i0, r1, i1, 0, 1);

        return;
    }

    private void <init>(androidx.paging.PagedStorage)
    {
        androidx.paging.PagedStorage r0, r1;
        boolean z0, $z2;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4, $r6;
        java.util.Collection $r5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.paging.PagedStorage;

        r1 := @parameter0: androidx.paging.PagedStorage;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        z0 = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.paging.PagedStorage: java.util.List pages> = $r3;

        r0.<androidx.paging.PagedStorage: boolean counted> = 1;

        $r6 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r4 = r1.<androidx.paging.PagedStorage: java.util.List pages>;

        $r5 = (java.util.Collection) $r4;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $i0 = virtualinvoke r1.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        r0.<androidx.paging.PagedStorage: int placeholdersBefore> = $i0;

        $i1 = virtualinvoke r1.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        r0.<androidx.paging.PagedStorage: int placeholdersAfter> = $i1;

        $i2 = r1.<androidx.paging.PagedStorage: int positionOffset>;

        r0.<androidx.paging.PagedStorage: int positionOffset> = $i2;

        $z2 = r1.<androidx.paging.PagedStorage: boolean counted>;

        r0.<androidx.paging.PagedStorage: boolean counted> = $z2;

        $i3 = virtualinvoke r1.<androidx.paging.PagedStorage: int getStorageCount()>();

        r0.<androidx.paging.PagedStorage: int storageCount> = $i3;

        $i4 = r1.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex>;

        r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex> = $i4;

        return;
    }

    public final androidx.paging.PagedStorage snapshot()
    {
        androidx.paging.PagedStorage r0, $r1;

        r0 := @this: androidx.paging.PagedStorage;

        $r1 = new androidx.paging.PagedStorage;

        specialinvoke $r1.<androidx.paging.PagedStorage: void <init>(androidx.paging.PagedStorage)>(r0);

        return $r1;
    }

    private final void init(int, androidx.paging.PagingSource$LoadResult$Page, int, int, boolean)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, $i3, $i4, $i5;
        androidx.paging.PagingSource$LoadResult$Page r1;
        boolean z0;
        java.util.List $r2, $r3, $r4, $r5;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        r0.<androidx.paging.PagedStorage: int placeholdersBefore> = i0;

        $r2 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        r0.<androidx.paging.PagedStorage: int placeholdersAfter> = i1;

        r0.<androidx.paging.PagedStorage: int positionOffset> = i2;

        $r4 = virtualinvoke r1.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        r0.<androidx.paging.PagedStorage: int storageCount> = $i3;

        r0.<androidx.paging.PagedStorage: boolean counted> = z0;

        $r5 = virtualinvoke r1.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i5 = $i4 / 2;

        r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex> = $i5;

        return;
    }

    public final void init(int, androidx.paging.PagingSource$LoadResult$Page, int, int, androidx.paging.PagedStorage$Callback, boolean)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, $i3;
        androidx.paging.PagingSource$LoadResult$Page r1;
        androidx.paging.PagedStorage$Callback r2;
        boolean z0;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: androidx.paging.PagedStorage$Callback;

        z0 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "page");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        specialinvoke r0.<androidx.paging.PagedStorage: void init(int,androidx.paging.PagingSource$LoadResult$Page,int,int,boolean)>(i0, r1, i1, i2, z0);

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int size()>();

        interfaceinvoke r2.<androidx.paging.PagedStorage$Callback: void onInitialized(int)>($i3);

        return;
    }

    public static void init$default(androidx.paging.PagedStorage, int, androidx.paging.PagingSource$LoadResult$Page, int, int, androidx.paging.PagedStorage$Callback, boolean, int, java.lang.Object)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, i3, $i4;
        androidx.paging.PagingSource$LoadResult$Page r1;
        androidx.paging.PagedStorage$Callback r2;
        java.lang.Object r3;
        boolean z0;

        r0 := @parameter0: androidx.paging.PagedStorage;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.paging.PagingSource$LoadResult$Page;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: androidx.paging.PagedStorage$Callback;

        z0 := @parameter6: boolean;

        i3 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        $i4 = i3 & 32;

        if $i4 == 0 goto label1;

        z0 = 1;

     label1:
        virtualinvoke r0.<androidx.paging.PagedStorage: void init(int,androidx.paging.PagingSource$LoadResult$Page,int,int,androidx.paging.PagedStorage$Callback,boolean)>(i0, r1, i1, i2, r2, z0);

        return;
    }

    public java.lang.Object getPrevKey()
    {
        androidx.paging.PagedStorage r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2, $r4;
        androidx.paging.PagingSource$LoadResult$Page $r3;
        int $i0, $i1, $i2;

        r0 := @this: androidx.paging.PagedStorage;

        $z0 = r0.<androidx.paging.PagedStorage: boolean counted>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i1 = r0.<androidx.paging.PagedStorage: int positionOffset>;

        $i2 = $i0 + $i1;

        if $i2 <= 0 goto label2;

     label1:
        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r1);

        $r3 = (androidx.paging.PagingSource$LoadResult$Page) $r2;

        $r4 = virtualinvoke $r3.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    public java.lang.Object getNextKey()
    {
        androidx.paging.PagedStorage r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Object $r2, $r4;
        androidx.paging.PagingSource$LoadResult$Page $r3;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $z0 = r0.<androidx.paging.PagedStorage: boolean counted>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        if $i0 <= 0 goto label2;

     label1:
        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r1);

        $r3 = (androidx.paging.PagingSource$LoadResult$Page) $r2;

        $r4 = virtualinvoke $r3.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    private final java.lang.Object traversePages(int, kotlin.jvm.functions.Function2)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, i3, i4, i5;
        kotlin.jvm.functions.Function2 r1;
        java.util.List $r2, $r3, $r7, $r10;
        java.lang.Object $r4, $r6, $r8;
        java.lang.Integer $r5;
        androidx.paging.PagingSource$LoadResult$Page $r9;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        i4 = 0;

        i5 = i0;

        $r2 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r0);

        i1 = interfaceinvoke $r2.<java.util.List: int size()>();

     label1:
        if i4 >= i1 goto label3;

        $r7 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r0);

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i4);

        $r9 = (androidx.paging.PagingSource$LoadResult$Page) $r8;

        $r10 = virtualinvoke $r9.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i2 <= i5 goto label2;

        goto label3;

     label2:
        i5 = i5 - i2;

        i3 = i4;

        i4 = i3 + 1;

        goto label1;

     label3:
        $r3 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r0);

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r6;
    }

    public java.lang.Object getFromStorage(int)
    {
        androidx.paging.PagedStorage r0, r1;
        int i0, i1, i2, i3, i4, i5, i6;
        androidx.paging.PagingSource$LoadResult$Page r2, $r10;
        java.util.List $r3, $r4, $r6, $r8, $r11;
        java.lang.Object $r5, $r7, $r9;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        r1 = r0;

        i5 = 0;

        i6 = i0;

        $r3 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r1);

        i1 = interfaceinvoke $r3.<java.util.List: int size()>();

     label1:
        if i5 >= i1 goto label3;

        $r8 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r1);

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i5);

        $r10 = (androidx.paging.PagingSource$LoadResult$Page) $r9;

        $r11 = virtualinvoke $r10.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i2 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i2 <= i6 goto label2;

        goto label3;

     label2:
        i6 = i6 - i2;

        i3 = i5;

        i5 = i3 + 1;

        goto label1;

     label3:
        $r4 = staticinvoke <androidx.paging.PagedStorage: java.util.List access$getPages$p(androidx.paging.PagedStorage)>(r1);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5);

        i4 = i6;

        r2 = (androidx.paging.PagingSource$LoadResult$Page) $r5;

        $r6 = virtualinvoke r2.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i4);

        return $r7;
    }

    public final androidx.paging.PagingState getRefreshKeyInfo(androidx.paging.PagedList$Config)
    {
        androidx.paging.PagedStorage r0;
        androidx.paging.PagedList$Config r1;
        java.util.List $r2, $r4, $r6;
        boolean $z0, $z1;
        androidx.paging.PagingState $r3;
        java.lang.Iterable $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r7;
        androidx.paging.PagingConfig $r8;

        r0 := @this: androidx.paging.PagedStorage;

        r1 := @parameter0: androidx.paging.PagedList$Config;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        $r2 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = new androidx.paging.PagingState;

        $r4 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r5 = (java.lang.Iterable) $r4;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r5);

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getLastLoadAroundIndex()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8 = new androidx.paging.PagingConfig;

        $i4 = r1.<androidx.paging.PagedList$Config: int pageSize>;

        $i3 = r1.<androidx.paging.PagedList$Config: int prefetchDistance>;

        $z1 = r1.<androidx.paging.PagedList$Config: boolean enablePlaceholders>;

        $i2 = r1.<androidx.paging.PagedList$Config: int initialLoadSizeHint>;

        $i1 = r1.<androidx.paging.PagedList$Config: int maxSize>;

        specialinvoke $r8.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>($i4, $i3, $z1, $i2, $i1, 0, 32, null);

        $i5 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        specialinvoke $r3.<androidx.paging.PagingState: void <init>(java.util.List,java.lang.Integer,androidx.paging.PagingConfig,int)>($r6, $r7, $r8, $i5);

        return $r3;
    }

    public java.lang.Object get(int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        $i2 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        i1 = i0 - $i2;

        if i0 < 0 goto label1;

        $i4 = virtualinvoke r0.<androidx.paging.PagedStorage: int size()>();

        if i0 < $i4 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        if i1 < 0 goto label3;

        $i5 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        if i1 < $i5 goto label4;

     label3:
        $r8 = null;

        goto label5;

     label4:
        $r8 = virtualinvoke r0.<androidx.paging.PagedStorage: java.lang.Object getFromStorage(int)>(i1);

     label5:
        return $r8;
    }

    public int getSize()
    {
        androidx.paging.PagedStorage r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i1 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    private final boolean needsTrim(int, int, int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        androidx.paging.PagingSource$LoadResult$Page r1;
        java.util.List $r2, $r4, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r1 = (androidx.paging.PagingSource$LoadResult$Page) $r3;

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        if $i3 <= i0 goto label1;

        $r4 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i4 <= 2 goto label1;

        $i5 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $r5 = virtualinvoke r1.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i6 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i7 = $i5 - $i6;

        if $i7 < i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean needsTrimFromFront(int, int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<androidx.paging.PagedStorage: boolean needsTrim(int,int,int)>(i0, i1, 0);

        return $z0;
    }

    public final boolean needsTrimFromEnd(int, int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, $i2, $i3;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $z0 = specialinvoke r0.<androidx.paging.PagedStorage: boolean needsTrim(int,int,int)>(i0, i1, $i3);

        return $z0;
    }

    public final boolean shouldPreTrimNewPage(int, int, int)
    {
        androidx.paging.PagedStorage r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i4 = $i3 + i2;

        if $i4 <= i0 goto label1;

        $r1 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i5 <= 1 goto label1;

        $i6 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        if $i6 < i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean trimFromFront$paging_common(boolean, int, int, androidx.paging.PagedStorage$Callback)
    {
        androidx.paging.PagedStorage r0, r2, r7, r8;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        androidx.paging.PagedStorage$Callback r1;
        java.util.List $r3, $r5;
        java.lang.Object $r4;
        androidx.paging.PagingSource$LoadResult$Page r6;

        r0 := @this: androidx.paging.PagedStorage;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.paging.PagedStorage$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        i12 = 0;

     label1:
        $z1 = virtualinvoke r0.<androidx.paging.PagedStorage: boolean needsTrimFromFront(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        $r3 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

        r6 = (androidx.paging.PagingSource$LoadResult$Page) $r4;

        $r5 = virtualinvoke r6.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i13 = interfaceinvoke $r5.<java.util.List: int size()>();

        i12 = i12 + i13;

        r2 = r0;

        $i10 = virtualinvoke r2.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i11 = $i10 - i13;

        r2.<androidx.paging.PagedStorage: int storageCount> = $i11;

        goto label1;

     label2:
        $i2 = r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex>;

        $i3 = $i2 - i12;

        $i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i3, 0);

        r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex> = $i4;

        if i12 <= 0 goto label4;

        if z0 == 0 goto label3;

        i14 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        r7 = r0;

        $i8 = virtualinvoke r7.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i9 = $i8 + i12;

        r7.<androidx.paging.PagedStorage: int placeholdersBefore> = $i9;

        interfaceinvoke r1.<androidx.paging.PagedStorage$Callback: void onPagesSwappedToPlaceholder(int,int)>(i14, i12);

        goto label4;

     label3:
        r8 = r0;

        $i5 = r8.<androidx.paging.PagedStorage: int positionOffset>;

        $i6 = $i5 + i12;

        r8.<androidx.paging.PagedStorage: int positionOffset> = $i6;

        $i7 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        interfaceinvoke r1.<androidx.paging.PagedStorage$Callback: void onPagesRemoved(int,int)>($i7, i12);

     label4:
        if i12 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public final boolean trimFromEnd$paging_common(boolean, int, int, androidx.paging.PagedStorage$Callback)
    {
        androidx.paging.PagedStorage r0, r2, r8;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        androidx.paging.PagedStorage$Callback r1;
        java.util.List $r3, $r4, $r6;
        java.lang.Object $r5;
        androidx.paging.PagingSource$LoadResult$Page r7;

        r0 := @this: androidx.paging.PagedStorage;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.paging.PagedStorage$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        i14 = 0;

     label1:
        $z1 = virtualinvoke r0.<androidx.paging.PagedStorage: boolean needsTrimFromEnd(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        $r4 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r3 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $i10 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i11 = $i10 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>($i11);

        r7 = (androidx.paging.PagingSource$LoadResult$Page) $r5;

        $r6 = virtualinvoke r7.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i15 = interfaceinvoke $r6.<java.util.List: int size()>();

        i14 = i14 + i15;

        r2 = r0;

        $i12 = virtualinvoke r2.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i13 = $i12 - i15;

        r2.<androidx.paging.PagedStorage: int storageCount> = $i13;

        goto label1;

     label2:
        $i2 = r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex>;

        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i4 = $i3 - 1;

        $i5 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i2, $i4);

        r0.<androidx.paging.PagedStorage: int lastLoadAroundLocalIndex> = $i5;

        if i14 <= 0 goto label4;

        $i6 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i7 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        i16 = $i6 + $i7;

        if z0 == 0 goto label3;

        r8 = r0;

        $i8 = virtualinvoke r8.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        $i9 = $i8 + i14;

        r8.<androidx.paging.PagedStorage: int placeholdersAfter> = $i9;

        interfaceinvoke r1.<androidx.paging.PagedStorage$Callback: void onPagesSwappedToPlaceholder(int,int)>(i16, i14);

        goto label4;

     label3:
        interfaceinvoke r1.<androidx.paging.PagedStorage$Callback: void onPagesRemoved(int,int)>(i16, i14);

     label4:
        if i14 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public final void prependPage$paging_common(androidx.paging.PagingSource$LoadResult$Page, androidx.paging.PagedStorage$Callback)
    {
        androidx.paging.PagedStorage r0, r5, r6, r7;
        androidx.paging.PagingSource$LoadResult$Page r1;
        androidx.paging.PagedStorage$Callback r2, r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.util.List $r3, $r4;
        boolean z0;

        r0 := @this: androidx.paging.PagedStorage;

        r1 := @parameter0: androidx.paging.PagingSource$LoadResult$Page;

        r2 := @parameter1: androidx.paging.PagedStorage$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "page");

        $r3 = virtualinvoke r1.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(0, r1);

        r5 = r0;

        $i1 = virtualinvoke r5.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i2 = $i1 + i0;

        r5.<androidx.paging.PagedStorage: int storageCount> = $i2;

        i8 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        z0 = 0;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i8, i0);

        i10 = i0 - i9;

        if i9 == 0 goto label2;

        r6 = r0;

        $i6 = virtualinvoke r6.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i7 = $i6 - i9;

        r6.<androidx.paging.PagedStorage: int placeholdersBefore> = $i7;

     label2:
        r7 = r0;

        $i3 = r7.<androidx.paging.PagedStorage: int positionOffset>;

        $i4 = $i3 - i10;

        r7.<androidx.paging.PagedStorage: int positionOffset> = $i4;

        r8 = r2;

        if r8 != null goto label3;

        goto label4;

     label3:
        $i5 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        interfaceinvoke r8.<androidx.paging.PagedStorage$Callback: void onPagePrepended(int,int,int)>($i5, i9, i10);

     label4:
        return;
    }

    public static void prependPage$paging_common$default(androidx.paging.PagedStorage, androidx.paging.PagingSource$LoadResult$Page, androidx.paging.PagedStorage$Callback, int, java.lang.Object)
    {
        androidx.paging.PagedStorage r0;
        androidx.paging.PagingSource$LoadResult$Page r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.paging.PagedStorage$Callback r3;

        r0 := @parameter0: androidx.paging.PagedStorage;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        r3 := @parameter2: androidx.paging.PagedStorage$Callback;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        virtualinvoke r0.<androidx.paging.PagedStorage: void prependPage$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.PagedStorage$Callback)>(r1, r3);

        return;
    }

    public final void appendPage$paging_common(androidx.paging.PagingSource$LoadResult$Page, androidx.paging.PagedStorage$Callback)
    {
        androidx.paging.PagedStorage r0, r5, r6;
        androidx.paging.PagingSource$LoadResult$Page r1;
        androidx.paging.PagedStorage$Callback r2, r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        java.util.List $r3, $r4;
        boolean z1;

        r0 := @this: androidx.paging.PagedStorage;

        r1 := @parameter0: androidx.paging.PagingSource$LoadResult$Page;

        r2 := @parameter1: androidx.paging.PagedStorage$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "page");

        $r3 = virtualinvoke r1.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        r5 = r0;

        $i1 = virtualinvoke r5.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i2 = $i1 + i0;

        r5.<androidx.paging.PagedStorage: int storageCount> = $i2;

        i9 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        z1 = 0;

        i10 = staticinvoke <java.lang.Math: int min(int,int)>(i9, i0);

        i11 = i0 - i10;

        if i10 == 0 goto label2;

        r6 = r0;

        $i7 = virtualinvoke r6.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        $i8 = $i7 - i10;

        r6.<androidx.paging.PagedStorage: int placeholdersAfter> = $i8;

     label2:
        r7 = r2;

        if r7 != null goto label3;

        goto label4;

     label3:
        $i3 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $i4 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 - i0;

        interfaceinvoke r7.<androidx.paging.PagedStorage$Callback: void onPageAppended(int,int,int)>($i6, i10, i11);

     label4:
        return;
    }

    public static void appendPage$paging_common$default(androidx.paging.PagedStorage, androidx.paging.PagingSource$LoadResult$Page, androidx.paging.PagedStorage$Callback, int, java.lang.Object)
    {
        androidx.paging.PagedStorage r0;
        androidx.paging.PagingSource$LoadResult$Page r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.paging.PagedStorage$Callback r3;

        r0 := @parameter0: androidx.paging.PagedStorage;

        r1 := @parameter1: androidx.paging.PagingSource$LoadResult$Page;

        r3 := @parameter2: androidx.paging.PagedStorage$Callback;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        virtualinvoke r0.<androidx.paging.PagedStorage: void appendPage$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.PagedStorage$Callback)>(r1, r3);

        return;
    }

    public java.lang.String toString()
    {
        androidx.paging.PagedStorage r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13;
        int $i0, $i1, $i2;
        java.util.List $r9;
        java.lang.CharSequence $r10;
        java.lang.Iterable $r11;
        java.lang.String $r12, $r14;

        r0 := @this: androidx.paging.PagedStorage;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("leading ");

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersBefore()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", storage ");

        $i1 = virtualinvoke r0.<androidx.paging.PagedStorage: int getStorageCount()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trailing ");

        $i2 = virtualinvoke r0.<androidx.paging.PagedStorage: int getPlaceholdersAfter()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = r0.<androidx.paging.PagedStorage: java.util.List pages>;

        $r11 = (java.lang.Iterable) $r9;

        $r10 = (java.lang.CharSequence) " ";

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r11, $r10, null, null, 0, null, null, 62, null);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public final volatile int size()
    {
        androidx.paging.PagedStorage r0;
        int $i0;

        r0 := @this: androidx.paging.PagedStorage;

        $i0 = virtualinvoke r0.<androidx.paging.PagedStorage: int getSize()>();

        return $i0;
    }

    public volatile java.lang.Object removeAt(int)
    {
        androidx.paging.PagedStorage r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<java.util.AbstractList: java.lang.Object remove(int)>(i0);

        return $r1;
    }

    public final volatile java.lang.Object remove(int)
    {
        androidx.paging.PagedStorage r0;
        int i0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PagedStorage;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.paging.PagedStorage: java.lang.Object removeAt(int)>(i0);

        return $r1;
    }

    public static final java.util.List access$getPages$p(androidx.paging.PagedStorage)
    {
        androidx.paging.PagedStorage $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.paging.PagedStorage;

        $r1 = $r0.<androidx.paging.PagedStorage: java.util.List pages>;

        return $r1;
    }

androidx.paging.PagedStorage$Callback
<androidx.paging.PagedStorage$Callback: void onInitialized(int)>
<androidx.paging.PagedStorage$Callback: void onPagePrepended(int,int,int)>
<androidx.paging.PagedStorage$Callback: void onPageAppended(int,int,int)>
<androidx.paging.PagedStorage$Callback: void onPagesRemoved(int,int)>
<androidx.paging.PagedStorage$Callback: void onPagesSwappedToPlaceholder(int,int)>
