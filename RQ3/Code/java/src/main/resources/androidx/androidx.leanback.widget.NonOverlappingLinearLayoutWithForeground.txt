androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground
<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int VERSION_M>
<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>
<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged>
<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.Rect mSelfBounds>
    public void <init>(android.content.Context)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.content.Context r1;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        android.graphics.Rect $r5;
        android.content.pm.ApplicationInfo $r6;
        int[] $r7;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.Rect mSelfBounds> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r6.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i1 < 23 goto label1;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label1;

        goto label3;

     label1:
        $r7 = newarray (int)[1];

        $r7[0] = 16843017;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r7);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r4 == null goto label2;

        virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: void setForegroundCompat(android.graphics.drawable.Drawable)>(r4);

     label2:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

     label3:
        return;
    }

    public void setForegroundCompat(android.graphics.drawable.Drawable)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5;
        int $i0;
        boolean $z0;
        int[] $r6;
        android.view.View r7;
        android.graphics.drawable.Drawable$Callback r8;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        r7 = (android.view.View) r0;

        staticinvoke <androidx.leanback.widget.ForegroundHelper: void setForeground(android.view.View,android.graphics.drawable.Drawable)>(r7, r1);

        goto label2;

     label1:
        $r2 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        if $r2 == r1 goto label2;

        r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground> = r1;

        r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged> = 1;

        virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: void setWillNotDraw(boolean)>(0);

        $r3 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        r8 = (android.graphics.drawable.Drawable$Callback) r0;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r8);

        $r4 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        $r6 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int[] getDrawableState()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>($r6);

     label2:
        return;
    }

    public android.graphics.drawable.Drawable getForegroundCompat()
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        int $i0;
        android.graphics.drawable.Drawable $r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        r3 = (android.view.View) r0;

        $r2 = staticinvoke <androidx.leanback.widget.ForegroundHelper: android.graphics.drawable.Drawable getForeground(android.view.View)>(r3);

        return $r2;

     label1:
        $r1 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        return $r1;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, $r4;
        android.graphics.Rect r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.LinearLayout: void draw(android.graphics.Canvas)>(r1);

        $r4 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        if $r4 == null goto label2;

        r2 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        $z0 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged>;

        if $z0 == 0 goto label1;

        r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged> = 0;

        r3 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.Rect mSelfBounds>;

        $i2 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int getRight()>();

        $i3 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int getLeft()>();

        i0 = $i2 - $i3;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int getBottom()>();

        $i5 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int getTop()>();

        i1 = $i4 - $i5;

        virtualinvoke r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r3);

     label1:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $z1 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged>;

        $z2 = $z1 | z0;

        r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: boolean mForegroundBoundsChanged> = $z2;

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        if r1 != $r2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        specialinvoke r0.<android.widget.LinearLayout: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    protected void drawableStateChanged()
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean $z0;
        int[] $r4;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        specialinvoke r0.<android.widget.LinearLayout: void drawableStateChanged()>();

        $r1 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: android.graphics.drawable.Drawable mForeground>;

        $r4 = virtualinvoke r0.<androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground: int[] getDrawableState()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label1:
        return;
    }

    public boolean hasOverlappingRendering()
    {
        androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground r0;

        r0 := @this: androidx.leanback.widget.NonOverlappingLinearLayoutWithForeground;

        return 0;
    }

