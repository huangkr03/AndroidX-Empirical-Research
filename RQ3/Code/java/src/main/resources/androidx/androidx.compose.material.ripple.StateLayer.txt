androidx.compose.material.ripple.StateLayer
<androidx.compose.material.ripple.StateLayer: boolean bounded>
<androidx.compose.material.ripple.StateLayer: androidx.compose.runtime.State rippleAlpha>
<androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable animatedAlpha>
<androidx.compose.material.ripple.StateLayer: java.util.List interactions>
<androidx.compose.material.ripple.StateLayer: androidx.compose.foundation.interaction.Interaction currentInteraction>
    public void <init>(boolean, androidx.compose.runtime.State)
    {
        androidx.compose.material.ripple.StateLayer r0;
        boolean z0;
        androidx.compose.runtime.State r1;
        androidx.compose.animation.core.Animatable $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;

        r0 := @this: androidx.compose.material.ripple.StateLayer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.compose.runtime.State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rippleAlpha");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.ripple.StateLayer: boolean bounded> = z0;

        r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.runtime.State rippleAlpha> = r1;

        $r2 = staticinvoke <androidx.compose.animation.core.AnimatableKt: androidx.compose.animation.core.Animatable Animatable$default(float,float,int,java.lang.Object)>(0.0F, 0.0F, 2, null);

        r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable animatedAlpha> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.List) $r3;

        r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions> = $r4;

        return;
    }

    public final void handleInteraction(androidx.compose.foundation.interaction.Interaction, kotlinx.coroutines.CoroutineScope)
    {
        androidx.compose.material.ripple.StateLayer r0;
        androidx.compose.foundation.interaction.Interaction r1, $r6, r32, r35, $r36, r37;
        kotlinx.coroutines.CoroutineScope r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z17;
        androidx.compose.foundation.interaction.DragInteraction$Cancel $r3;
        java.util.List $r4, $r21, $r23, $r25, $r27, $r29, $r31, $r33;
        androidx.compose.foundation.interaction.DragInteraction$Start $r5, $r22;
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 $r7;
        kotlin.jvm.functions.Function2 $r8, $r40;
        androidx.compose.runtime.State $r11, $r14, $r17;
        java.lang.Object $r12, $r15, $r18, $r34;
        androidx.compose.material.ripple.RippleAlpha $r13, $r16, $r19;
        androidx.compose.foundation.interaction.DragInteraction$Stop $r20;
        androidx.compose.foundation.interaction.FocusInteraction$Unfocus $r24;
        androidx.compose.foundation.interaction.FocusInteraction$Focus $r26;
        androidx.compose.foundation.interaction.HoverInteraction$Exit $r28;
        androidx.compose.foundation.interaction.HoverInteraction$Enter $r30;
        float $f0, f1;
        androidx.compose.animation.core.AnimationSpec r38, r41;
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 $r39;

        r0 := @this: androidx.compose.material.ripple.StateLayer;

        r1 := @parameter0: androidx.compose.foundation.interaction.Interaction;

        r2 := @parameter1: kotlinx.coroutines.CoroutineScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        r32 = r1;

        $z0 = r32 instanceof androidx.compose.foundation.interaction.HoverInteraction$Enter;

        if $z0 == 0 goto label01;

        $r31 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label08;

     label01:
        $z1 = r32 instanceof androidx.compose.foundation.interaction.HoverInteraction$Exit;

        if $z1 == 0 goto label02;

        $r29 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        $r28 = (androidx.compose.foundation.interaction.HoverInteraction$Exit) r1;

        $r30 = virtualinvoke $r28.<androidx.compose.foundation.interaction.HoverInteraction$Exit: androidx.compose.foundation.interaction.HoverInteraction$Enter getEnter()>();

        interfaceinvoke $r29.<java.util.List: boolean remove(java.lang.Object)>($r30);

        goto label08;

     label02:
        $z2 = r32 instanceof androidx.compose.foundation.interaction.FocusInteraction$Focus;

        if $z2 == 0 goto label03;

        $r27 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label08;

     label03:
        $z3 = r32 instanceof androidx.compose.foundation.interaction.FocusInteraction$Unfocus;

        if $z3 == 0 goto label04;

        $r25 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        $r24 = (androidx.compose.foundation.interaction.FocusInteraction$Unfocus) r1;

        $r26 = virtualinvoke $r24.<androidx.compose.foundation.interaction.FocusInteraction$Unfocus: androidx.compose.foundation.interaction.FocusInteraction$Focus getFocus()>();

        interfaceinvoke $r25.<java.util.List: boolean remove(java.lang.Object)>($r26);

        goto label08;

     label04:
        $z4 = r32 instanceof androidx.compose.foundation.interaction.DragInteraction$Start;

        if $z4 == 0 goto label05;

        $r23 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r1);

        goto label08;

     label05:
        $z5 = r32 instanceof androidx.compose.foundation.interaction.DragInteraction$Stop;

        if $z5 == 0 goto label06;

        $r21 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        $r20 = (androidx.compose.foundation.interaction.DragInteraction$Stop) r1;

        $r22 = virtualinvoke $r20.<androidx.compose.foundation.interaction.DragInteraction$Stop: androidx.compose.foundation.interaction.DragInteraction$Start getStart()>();

        interfaceinvoke $r21.<java.util.List: boolean remove(java.lang.Object)>($r22);

        goto label08;

     label06:
        $z6 = r32 instanceof androidx.compose.foundation.interaction.DragInteraction$Cancel;

        if $z6 == 0 goto label07;

        $r4 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        $r3 = (androidx.compose.foundation.interaction.DragInteraction$Cancel) r1;

        $r5 = virtualinvoke $r3.<androidx.compose.foundation.interaction.DragInteraction$Cancel: androidx.compose.foundation.interaction.DragInteraction$Start getStart()>();

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r5);

        goto label08;

     label07:
        return;

     label08:
        $r33 = r0.<androidx.compose.material.ripple.StateLayer: java.util.List interactions>;

        $r34 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object lastOrNull(java.util.List)>($r33);

        r35 = (androidx.compose.foundation.interaction.Interaction) $r34;

        $r36 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.foundation.interaction.Interaction currentInteraction>;

        $z17 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r36, r35);

        if $z17 != 0 goto label15;

        if r35 == null goto label13;

        r37 = r1;

        $z8 = r37 instanceof androidx.compose.foundation.interaction.HoverInteraction$Enter;

        if $z8 == 0 goto label09;

        $r17 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.runtime.State rippleAlpha>;

        $r18 = interfaceinvoke $r17.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r19 = (androidx.compose.material.ripple.RippleAlpha) $r18;

        $f0 = virtualinvoke $r19.<androidx.compose.material.ripple.RippleAlpha: float getHoveredAlpha()>();

        goto label12;

     label09:
        $z9 = r37 instanceof androidx.compose.foundation.interaction.FocusInteraction$Focus;

        if $z9 == 0 goto label10;

        $r14 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.runtime.State rippleAlpha>;

        $r15 = interfaceinvoke $r14.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r16 = (androidx.compose.material.ripple.RippleAlpha) $r15;

        $f0 = virtualinvoke $r16.<androidx.compose.material.ripple.RippleAlpha: float getFocusedAlpha()>();

        goto label12;

     label10:
        $z10 = r37 instanceof androidx.compose.foundation.interaction.DragInteraction$Start;

        if $z10 == 0 goto label11;

        $r11 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.runtime.State rippleAlpha>;

        $r12 = interfaceinvoke $r11.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r13 = (androidx.compose.material.ripple.RippleAlpha) $r12;

        $f0 = virtualinvoke $r13.<androidx.compose.material.ripple.RippleAlpha: float getDraggedAlpha()>();

        goto label12;

     label11:
        $f0 = 0.0F;

     label12:
        f1 = $f0;

        r38 = staticinvoke <androidx.compose.material.ripple.RippleKt: androidx.compose.animation.core.AnimationSpec access$incomingStateLayerAnimationSpecFor(androidx.compose.foundation.interaction.Interaction)>(r35);

        $r39 = new androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        specialinvoke $r39.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: void <init>(androidx.compose.material.ripple.StateLayer,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(r0, f1, r38, null);

        $r40 = (kotlin.jvm.functions.Function2) $r39;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r2, null, null, $r40, 3, null);

        goto label14;

     label13:
        $r6 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.foundation.interaction.Interaction currentInteraction>;

        r41 = staticinvoke <androidx.compose.material.ripple.RippleKt: androidx.compose.animation.core.AnimationSpec access$outgoingStateLayerAnimationSpecFor(androidx.compose.foundation.interaction.Interaction)>($r6);

        $r7 = new androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        specialinvoke $r7.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: void <init>(androidx.compose.material.ripple.StateLayer,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(r0, r41, null);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>(r2, null, null, $r8, 3, null);

     label14:
        r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.foundation.interaction.Interaction currentInteraction> = r35;

     label15:
        return;
    }

    public final void drawStateLayer-H2RKhps(androidx.compose.ui.graphics.drawscope.DrawScope, float, long)
    {
        androidx.compose.material.ripple.StateLayer r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        float f0, f1, f2, f3, f4, f5, $f6, $f7;
        long l0, l2, $l4, $l5, $l6, $l7;
        int i1;
        androidx.compose.ui.graphics.drawscope.DrawContext $r4;
        androidx.compose.ui.graphics.drawscope.DrawTransform $r5;
        boolean $z5, $z6, $z7;
        androidx.compose.animation.core.Animatable $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        byte $b3;
        androidx.compose.ui.graphics.ClipOp$Companion $r9;
        androidx.compose.ui.graphics.Canvas $r10, $r11;
        androidx.compose.ui.unit.Density $r12;

        r0 := @this: androidx.compose.material.ripple.StateLayer;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$drawStateLayer");

        $z5 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z5 == 0 goto label1;

        $r12 = (androidx.compose.ui.unit.Density) $r1;

        $z7 = r0.<androidx.compose.material.ripple.StateLayer: boolean bounded>;

        $l6 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f6 = staticinvoke <androidx.compose.material.ripple.RippleAnimationKt: float getRippleEndRadius-cSwnlzA(androidx.compose.ui.unit.Density,boolean,long)>($r12, $z7, $l6);

        goto label2;

     label1:
        $f6 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: float toPx-0680j_4(float)>(f0);

     label2:
        f1 = $f6;

        $r6 = r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable animatedAlpha>;

        $r7 = virtualinvoke $r6.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f7 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $b3 = $f7 cmpl 0.0F;

        if $b3 <= 0 goto label4;

        $l7 = staticinvoke <androidx.compose.ui.graphics.Color: long copy-wmQWz5c$default(long,float,float,float,float,int,java.lang.Object)>(l0, $f7, 0.0F, 0.0F, 0.0F, 14, null);

        $z6 = r0.<androidx.compose.material.ripple.StateLayer: boolean bounded>;

        if $z6 == 0 goto label3;

        f2 = 0.0F;

        f3 = 0.0F;

        $l4 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        f4 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l4);

        $l5 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        f5 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l5);

        $r9 = <androidx.compose.ui.graphics.ClipOp: androidx.compose.ui.graphics.ClipOp$Companion Companion>;

        i1 = virtualinvoke $r9.<androidx.compose.ui.graphics.ClipOp$Companion: int getIntersect-rtfAjoo()>();

        $r4 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.graphics.drawscope.DrawContext getDrawContext()>();

        l2 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: long getSize-NH-jbRc()>();

        $r10 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r10.<androidx.compose.ui.graphics.Canvas: void save()>();

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r5.<androidx.compose.ui.graphics.drawscope.DrawTransform: void clipRect-N_I0leg(float,float,float,float,int)>(f2, f3, f4, f5, i1);

        staticinvoke <androidx.compose.ui.graphics.drawscope.DrawScope$DefaultImpls: void drawCircle-VaOC9Bg$default(androidx.compose.ui.graphics.drawscope.DrawScope,long,float,long,float,androidx.compose.ui.graphics.drawscope.DrawStyle,androidx.compose.ui.graphics.ColorFilter,int,int,java.lang.Object)>($r1, $l7, f1, 0L, 0.0F, null, null, 0, 124, null);

        $r11 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r11.<androidx.compose.ui.graphics.Canvas: void restore()>();

        interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: void setSize-uvyYCjk(long)>(l2);

        goto label4;

     label3:
        staticinvoke <androidx.compose.ui.graphics.drawscope.DrawScope$DefaultImpls: void drawCircle-VaOC9Bg$default(androidx.compose.ui.graphics.drawscope.DrawScope,long,float,long,float,androidx.compose.ui.graphics.drawscope.DrawStyle,androidx.compose.ui.graphics.ColorFilter,int,int,java.lang.Object)>($r1, $l7, f1, 0L, 0.0F, null, null, 0, 124, null);

     label4:
        return;
    }

    public static final androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.StateLayer)
    {
        androidx.compose.material.ripple.StateLayer $r0;
        androidx.compose.animation.core.Animatable $r1;

        $r0 := @parameter0: androidx.compose.material.ripple.StateLayer;

        $r1 = $r0.<androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable animatedAlpha>;

        return $r1;
    }

androidx.compose.material.ripple.StateLayer$handleInteraction$1
<androidx.compose.material.ripple.StateLayer$handleInteraction$1: int label>
<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.material.ripple.StateLayer this$0>
<androidx.compose.material.ripple.StateLayer$handleInteraction$1: float $targetAlpha>
<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.animation.core.AnimationSpec $incomingAnimationSpec>
    void <init>(androidx.compose.material.ripple.StateLayer, float, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 r0;
        androidx.compose.material.ripple.StateLayer $r1;
        float $f0;
        androidx.compose.animation.core.AnimationSpec $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        $r1 := @parameter0: androidx.compose.material.ripple.StateLayer;

        $f0 := @parameter1: float;

        $r2 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.material.ripple.StateLayer this$0> = $r1;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: float $targetAlpha> = $f0;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.animation.core.AnimationSpec $incomingAnimationSpec> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 r0;
        java.lang.Object $r1, r2, $r9;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.StateLayer $r4;
        androidx.compose.animation.core.Animatable $r5;
        float $f0;
        java.lang.Float $r6;
        androidx.compose.animation.core.AnimationSpec $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.material.ripple.StateLayer this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.StateLayer)>($r4);

        $f0 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: float $targetAlpha>;

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>($f0);

        $r7 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.animation.core.AnimationSpec $incomingAnimationSpec>;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: int label> = 1;

        $r9 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r7, null, null, $r8, 12, null);

        if $r9 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.animation.core.AnimationSpec $r4;
        float $f0;
        androidx.compose.material.ripple.StateLayer $r5;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        $r5 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.material.ripple.StateLayer this$0>;

        $f0 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: float $targetAlpha>;

        $r4 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: androidx.compose.animation.core.AnimationSpec $incomingAnimationSpec>;

        specialinvoke $r3.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: void <init>(androidx.compose.material.ripple.StateLayer,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r5, $f0, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.StateLayer$handleInteraction$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.StateLayer$handleInteraction$2
<androidx.compose.material.ripple.StateLayer$handleInteraction$2: int label>
<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.material.ripple.StateLayer this$0>
<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.animation.core.AnimationSpec $outgoingAnimationSpec>
    void <init>(androidx.compose.material.ripple.StateLayer, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 r0;
        androidx.compose.material.ripple.StateLayer $r1;
        androidx.compose.animation.core.AnimationSpec $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        $r1 := @parameter0: androidx.compose.material.ripple.StateLayer;

        $r2 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.material.ripple.StateLayer this$0> = $r1;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.animation.core.AnimationSpec $outgoingAnimationSpec> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 r0;
        java.lang.Object $r1, r2, $r9;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.StateLayer $r4;
        androidx.compose.animation.core.Animatable $r5;
        java.lang.Float $r6;
        androidx.compose.animation.core.AnimationSpec $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.material.ripple.StateLayer this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.StateLayer: androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.StateLayer)>($r4);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(0.0F);

        $r7 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.animation.core.AnimationSpec $outgoingAnimationSpec>;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: int label> = 1;

        $r9 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r7, null, null, $r8, 12, null);

        if $r9 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.animation.core.AnimationSpec $r4;
        androidx.compose.material.ripple.StateLayer $r5;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        $r5 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.material.ripple.StateLayer this$0>;

        $r4 = r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: androidx.compose.animation.core.AnimationSpec $outgoingAnimationSpec>;

        specialinvoke $r3.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: void <init>(androidx.compose.material.ripple.StateLayer,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.StateLayer$handleInteraction$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.StateLayer$handleInteraction$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.StateLayer$handleInteraction$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.StateLayer$handleInteraction$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

