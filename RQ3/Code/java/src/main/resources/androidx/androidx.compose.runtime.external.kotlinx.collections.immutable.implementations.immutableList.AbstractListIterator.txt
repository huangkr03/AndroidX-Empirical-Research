androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int size>
    public void <init>(int, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int i0, i1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index> = i0;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int size> = i1;

        return;
    }

    public final int getIndex()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>;

        return $i0;
    }

    public final void setIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index> = i0;

        return;
    }

    public final int getSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int size>;

        return $i0;
    }

    public final void setSize(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int size> = i0;

        return;
    }

    public boolean hasNext()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPrevious()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int nextIndex()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>;

        return $i0;
    }

    public int previousIndex()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: int index>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public final void checkHasNext$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public final void checkHasPrevious$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator: boolean hasPrevious()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public void add(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

    public void remove()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

    public void set(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.AbstractListIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r2;
    }

