androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage
<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.remote.EspressoRemoteMessage$From FROM>
<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion checkResultWebAssertion>
    public androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto toProto()
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage r0;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder r1;
        java.lang.Object r2;
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion $r3, $r12;
        boolean $z0, $z1;
        androidx.test.espresso.remote.internal.deps.protobuf.Any $r4, $r14;
        org.w3c.dom.Document $r7;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r8, $r10;
        androidx.test.espresso.web.assertion.WebAssertion $r13;
        androidx.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite $r15;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto $r16;

        r0 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage;

        r1 = staticinvoke <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder newBuilder()>();

        $r3 = r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion checkResultWebAssertion>;

        r2 = $r3.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: java.lang.Object result>;

        $z0 = r2 instanceof java.io.Serializable;

        if $z0 == 0 goto label2;

        $r10 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: androidx.test.espresso.remote.internal.deps.protobuf.ByteString typeToByteString(java.lang.Object)>(r2);

        virtualinvoke r1.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder setSerialisableResult(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r10);

     label1:
        $r12 = r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion checkResultWebAssertion>;

        $r13 = $r12.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: androidx.test.espresso.web.assertion.WebAssertion webAssertion>;

        $r14 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: androidx.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>($r13);

        virtualinvoke r1.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder setWebAssertion(androidx.test.espresso.remote.internal.deps.protobuf.Any)>($r14);

        $r15 = virtualinvoke r1.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder: androidx.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite build()>();

        $r16 = (androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto) $r15;

        return $r16;

     label2:
        $z1 = r2 instanceof org.w3c.dom.Document;

        if $z1 == 0 goto label3;

        $r7 = (org.w3c.dom.Document) r2;

        $r8 = staticinvoke <androidx.test.espresso.web.assertion.DocumentProtoConverters: androidx.test.espresso.remote.internal.deps.protobuf.ByteString documentToByteString(org.w3c.dom.Document)>($r7);

        virtualinvoke r1.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder setDocumentResult(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r8);

        goto label1;

     label3:
        $r4 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: androidx.test.espresso.remote.internal.deps.protobuf.Any typeToAny(java.lang.Object)>(r2);

        virtualinvoke r1.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$Builder setAnyResult(androidx.test.espresso.remote.internal.deps.protobuf.Any)>($r4);

        goto label1;
    }

    public volatile java.lang.Object toProto()
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage r0;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto $r1;

        r0 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage;

        $r1 = virtualinvoke r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto toProto()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1 r0;

        r0 = new androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1;

        specialinvoke r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1: void <init>()>();

        <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.remote.EspressoRemoteMessage$From FROM> = r0;

        return;
    }

    public void <init>(androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion)
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage r0;
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r1;

        r0 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage;

        r1 := @parameter0: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion checkResultWebAssertion> = r1;

        return;
    }

androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1
    public androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion fromProto(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)
    {
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion r0;
        int[] $r1;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase $r2;
        int $i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.Any $r3, r10;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r4, $r5;
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1 r6;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r7;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto r8;
        java.lang.Object r9, r11;
        androidx.test.espresso.web.assertion.WebAssertion r12;
        androidx.test.espresso.remote.RemoteProtocolException r13;

        r6 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1;

        r7 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite;

        r8 = (androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto) r7;

        $r1 = <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>;

        $r2 = virtualinvoke r8.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase getResultCase()>();

        $i0 = virtualinvoke $r2.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label1;
            default: goto label4;
        };

     label1:
        $r3 = virtualinvoke r8.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.remote.internal.deps.protobuf.Any getAnyResult()>();

        r9 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: java.lang.Object anyToType(androidx.test.espresso.remote.internal.deps.protobuf.Any)>($r3);

     label2:
        r10 = virtualinvoke r8.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.remote.internal.deps.protobuf.Any getWebAssertion()>();

        r11 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: java.lang.Object anyToType(androidx.test.espresso.remote.internal.deps.protobuf.Any)>(r10);

        r12 = (androidx.test.espresso.web.assertion.WebAssertion) r11;

        r0 = new androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion;

        specialinvoke r0.<androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion: void <init>(java.lang.Object,androidx.test.espresso.web.assertion.WebAssertion)>(r9, r12);

        return r0;

     label3:
        $r4 = virtualinvoke r8.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.remote.internal.deps.protobuf.ByteString getDocumentResult()>();

        r9 = staticinvoke <androidx.test.espresso.web.assertion.DocumentProtoConverters: org.w3c.dom.Document byteStringToDocument(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r4);

        goto label2;

     label4:
        r13 = new androidx.test.espresso.remote.RemoteProtocolException;

        specialinvoke r13.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>("Unable to deserialize CheckResultWebAssertion");

        throw r13;

     label5:
        $r5 = virtualinvoke r8.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto: androidx.test.espresso.remote.internal.deps.protobuf.ByteString getSerialisableResult()>();

        r9 = staticinvoke <androidx.test.espresso.remote.TypeProtoConverters: java.lang.Object byteStringToType(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r5);

        goto label2;
    }

    public volatile java.lang.Object fromProto(java.lang.Object)
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1 r0;
        java.lang.Object r1;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite $r2;
        androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion $r3;

        r0 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1: androidx.test.espresso.web.assertion.WebAssertion$CheckResultWebAssertion fromProto(androidx.test.espresso.remote.internal.deps.protobuf.MessageLite)>($r2);

        return $r3;
    }

    void <init>()
    {
        androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1 r0;

        r0 := @this: androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2
<androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>
    static void <clinit>()
    {
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase[] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r1, $r3, $r5, $r10, $r12;
        androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase $r2, $r4, $r11, $r13;
        java.lang.Throwable $r6, $r7, $r8, $r9;

        $r0 = staticinvoke <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase> = $r1;

     label1:
        $r3 = <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>;

        $r2 = <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase SERIALISABLERESULT>;

        $i1 = virtualinvoke $r2.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        $r5 = <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>;

        $r4 = <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase DOCUMENTRESULT>;

        $i2 = virtualinvoke $r4.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: int ordinal()>();

        $r5[$i2] = 2;

     label3:
        $r10 = <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>;

        $r11 = <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase ANYRESULT>;

        $i3 = virtualinvoke $r11.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: int ordinal()>();

        $r10[$i3] = 3;

     label4:
        $r12 = <androidx.test.espresso.web.assertion.CheckResultWebAssertionRemoteMessage$2: int[] $SwitchMap$androidx$test$espresso$web$proto$assertion$WebAssertions$CheckResultAssertionProto$ResultCase>;

        $r13 = <androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase RESULT_NOT_SET>;

        $i4 = virtualinvoke $r13.<androidx.test.espresso.web.proto.assertion.WebAssertions$CheckResultAssertionProto$ResultCase: int ordinal()>();

        $r12[$i4] = 4;

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        goto label2;

     label7:
        $r7 := @caughtexception;

        goto label3;

     label8:
        $r8 := @caughtexception;

        goto label4;

     label9:
        $r6 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label6;
        catch java.lang.NoSuchFieldError from label2 to label3 with label7;
        catch java.lang.NoSuchFieldError from label3 to label4 with label8;
        catch java.lang.NoSuchFieldError from label4 to label5 with label9;
    }

