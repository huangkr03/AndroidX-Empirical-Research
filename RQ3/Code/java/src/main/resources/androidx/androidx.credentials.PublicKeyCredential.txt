androidx.credentials.PublicKeyCredential
<androidx.credentials.PublicKeyCredential: androidx.credentials.PublicKeyCredential$Companion Companion>
<androidx.credentials.PublicKeyCredential: java.lang.String authenticationResponseJson>
<androidx.credentials.PublicKeyCredential: java.lang.String TYPE_PUBLIC_KEY_CREDENTIAL>
<androidx.credentials.PublicKeyCredential: java.lang.String BUNDLE_KEY_SUBTYPE>
<androidx.credentials.PublicKeyCredential: java.lang.String BUNDLE_KEY_AUTHENTICATION_RESPONSE_JSON>
    public void <init>(java.lang.String)
    {
        androidx.credentials.PublicKeyCredential r0;
        java.lang.String r1, $r4, $r7, $r8;
        androidx.credentials.PublicKeyCredential$Companion $r2;
        android.os.Bundle $r3;
        java.lang.CharSequence $r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;

        r0 := @this: androidx.credentials.PublicKeyCredential;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "authenticationResponseJson");

        $r2 = <androidx.credentials.PublicKeyCredential: androidx.credentials.PublicKeyCredential$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.PublicKeyCredential$Companion: android.os.Bundle toBundle$credentials_release(java.lang.String)>(r1);

        specialinvoke r0.<androidx.credentials.Credential: void <init>(java.lang.String,android.os.Bundle)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", $r3);

        r0.<androidx.credentials.PublicKeyCredential: java.lang.String authenticationResponseJson> = r1;

        $r4 = r0.<androidx.credentials.PublicKeyCredential: java.lang.String authenticationResponseJson>;

        $r5 = (java.lang.CharSequence) $r4;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r8 = "authentication response JSON must not be empty";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        return;
    }

    public final java.lang.String getAuthenticationResponseJson()
    {
        androidx.credentials.PublicKeyCredential r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.PublicKeyCredential;

        $r1 = r0.<androidx.credentials.PublicKeyCredential: java.lang.String authenticationResponseJson>;

        return $r1;
    }

    public static final android.os.Bundle toBundle$credentials_release(java.lang.String)
    {
        java.lang.String r0;
        androidx.credentials.PublicKeyCredential$Companion $r1;
        android.os.Bundle $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <androidx.credentials.PublicKeyCredential: androidx.credentials.PublicKeyCredential$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.PublicKeyCredential$Companion: android.os.Bundle toBundle$credentials_release(java.lang.String)>(r0);

        return $r2;
    }

    public static final androidx.credentials.PublicKeyCredential createFrom$credentials_release(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.credentials.PublicKeyCredential$Companion $r1;
        androidx.credentials.PublicKeyCredential $r2;

        r0 := @parameter0: android.os.Bundle;

        $r1 = <androidx.credentials.PublicKeyCredential: androidx.credentials.PublicKeyCredential$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.PublicKeyCredential$Companion: androidx.credentials.PublicKeyCredential createFrom$credentials_release(android.os.Bundle)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.credentials.PublicKeyCredential$Companion $r0;

        $r0 = new androidx.credentials.PublicKeyCredential$Companion;

        specialinvoke $r0.<androidx.credentials.PublicKeyCredential$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.PublicKeyCredential: androidx.credentials.PublicKeyCredential$Companion Companion> = $r0;

        return;
    }

androidx.credentials.PublicKeyCredential$Companion
    private void <init>()
    {
        androidx.credentials.PublicKeyCredential$Companion r0;

        r0 := @this: androidx.credentials.PublicKeyCredential$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getBUNDLE_KEY_AUTHENTICATION_RESPONSE_JSON$credentials_release$annotations()
    {
        return;
    }

    public final android.os.Bundle toBundle$credentials_release(java.lang.String)
    {
        androidx.credentials.PublicKeyCredential$Companion r0;
        java.lang.String r1;
        android.os.Bundle r2, $r3;

        r0 := @this: androidx.credentials.PublicKeyCredential$Companion;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "authenticationResponseJson");

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.credentials.BUNDLE_KEY_AUTHENTICATION_RESPONSE_JSON", r1);

        return r2;
    }

    public final androidx.credentials.PublicKeyCredential createFrom$credentials_release(android.os.Bundle)
    {
        androidx.credentials.PublicKeyCredential$Companion r0;
        android.os.Bundle r1;
        java.lang.Throwable $r3, r6, r9;
        java.lang.String r5;
        androidx.credentials.PublicKeyCredential r7;
        androidx.credentials.internal.FrameworkClassParsingException r8;

        r0 := @this: androidx.credentials.PublicKeyCredential$Companion;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

     label1:
        r5 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.BUNDLE_KEY_AUTHENTICATION_RESPONSE_JSON");

        r7 = new androidx.credentials.PublicKeyCredential;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        specialinvoke r7.<androidx.credentials.PublicKeyCredential: void <init>(java.lang.String)>(r5);

        return r7;

     label2:
        $r3 := @caughtexception;

        r6 = $r3;

        r8 = new androidx.credentials.internal.FrameworkClassParsingException;

        specialinvoke r8.<androidx.credentials.internal.FrameworkClassParsingException: void <init>()>();

        r9 = (java.lang.Throwable) r8;

        throw r9;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.PublicKeyCredential$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.PublicKeyCredential$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.PublicKeyCredential$Companion: void <init>()>();

        return;
    }

