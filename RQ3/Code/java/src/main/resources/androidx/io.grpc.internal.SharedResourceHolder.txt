io.grpc.internal.SharedResourceHolder
<io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder holder>
<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer>
<io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory destroyerFactory>
<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances>
    static void <clinit>()
    {
        io.grpc.internal.SharedResourceHolder $r0;
        io.grpc.internal.SharedResourceHolder$1 $r1;

        $r0 = new io.grpc.internal.SharedResourceHolder;

        $r1 = new io.grpc.internal.SharedResourceHolder$1;

        specialinvoke $r1.<io.grpc.internal.SharedResourceHolder$1: void <init>()>();

        specialinvoke $r0.<io.grpc.internal.SharedResourceHolder: void <init>(io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory)>($r1);

        <io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder holder> = $r0;

        return;
    }

    void <init>(io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory $r1;
        java.util.IdentityHashMap $r2;

        $r0 := @this: io.grpc.internal.SharedResourceHolder;

        $r1 := @parameter0: io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        $r0.<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances> = $r2;

        $r0.<io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory destroyerFactory> = $r1;

        return;
    }

    static java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        java.util.IdentityHashMap r1;

        $r0 := @parameter0: io.grpc.internal.SharedResourceHolder;

        r1 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances>;

        return r1;
    }

    static java.util.concurrent.ScheduledExecutorService access$100(io.grpc.internal.SharedResourceHolder)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        java.util.concurrent.ScheduledExecutorService r1;

        $r0 := @parameter0: io.grpc.internal.SharedResourceHolder;

        r1 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer>;

        return r1;
    }

    static java.util.concurrent.ScheduledExecutorService access$102(io.grpc.internal.SharedResourceHolder, java.util.concurrent.ScheduledExecutorService)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        $r0 := @parameter0: io.grpc.internal.SharedResourceHolder;

        $r1 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        $r0.<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer> = $r1;

        return $r1;
    }

    public static java.lang.Object get(io.grpc.internal.SharedResourceHolder$Resource)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        java.lang.Object $r1;
        io.grpc.internal.SharedResourceHolder$Resource $r2;

        $r2 := @parameter0: io.grpc.internal.SharedResourceHolder$Resource;

        $r0 = <io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder holder>;

        $r1 = virtualinvoke $r0.<io.grpc.internal.SharedResourceHolder: java.lang.Object getInternal(io.grpc.internal.SharedResourceHolder$Resource)>($r2);

        return $r1;
    }

    public static java.lang.Object release(io.grpc.internal.SharedResourceHolder$Resource, java.lang.Object)
    {
        java.lang.Object $r0;
        io.grpc.internal.SharedResourceHolder $r1;
        io.grpc.internal.SharedResourceHolder$Resource $r2;

        $r2 := @parameter0: io.grpc.internal.SharedResourceHolder$Resource;

        $r0 := @parameter1: java.lang.Object;

        $r1 = <io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder holder>;

        $r0 = virtualinvoke $r1.<io.grpc.internal.SharedResourceHolder: java.lang.Object releaseInternal(io.grpc.internal.SharedResourceHolder$Resource,java.lang.Object)>($r2, $r0);

        return $r0;
    }

    java.lang.Object getInternal(io.grpc.internal.SharedResourceHolder$Resource)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        io.grpc.internal.SharedResourceHolder$Resource $r1;
        java.util.IdentityHashMap $r2;
        java.lang.Object $r3;
        io.grpc.internal.SharedResourceHolder$Instance $r4;
        java.util.concurrent.ScheduledFuture $r5;
        int $i0;
        java.lang.Throwable $r6;

        $r0 := @this: io.grpc.internal.SharedResourceHolder;

        $r1 := @parameter0: io.grpc.internal.SharedResourceHolder$Resource;

        entermonitor $r0;

     label1:
        $r2 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances>;

        $r3 = virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (io.grpc.internal.SharedResourceHolder$Instance) $r3;

        if $r4 != null goto label2;

        $r4 = new io.grpc.internal.SharedResourceHolder$Instance;

        $r3 = interfaceinvoke $r1.<io.grpc.internal.SharedResourceHolder$Resource: java.lang.Object create()>();

        specialinvoke $r4.<io.grpc.internal.SharedResourceHolder$Instance: void <init>(java.lang.Object)>($r3);

        $r2 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances>;

        virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label2:
        $r5 = $r4.<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask>;

        if $r5 == null goto label3;

        $r5 = $r4.<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(0);

        $r4.<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask> = null;

     label3:
        $i0 = $r4.<io.grpc.internal.SharedResourceHolder$Instance: int refcount>;

        $i0 = $i0 + 1;

        $r4.<io.grpc.internal.SharedResourceHolder$Instance: int refcount> = $i0;

        $r3 = $r4.<io.grpc.internal.SharedResourceHolder$Instance: java.lang.Object payload>;

     label4:
        exitmonitor $r0;

        return $r3;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    java.lang.Object releaseInternal(io.grpc.internal.SharedResourceHolder$Resource, java.lang.Object)
    {
        io.grpc.internal.SharedResourceHolder $r0;
        io.grpc.internal.SharedResourceHolder$Resource $r1;
        java.lang.Object $r2, $r4;
        java.util.IdentityHashMap $r3;
        io.grpc.internal.SharedResourceHolder$Instance $r5;
        boolean $z0, $z1;
        int $i0;
        java.util.concurrent.ScheduledFuture $r6;
        java.util.concurrent.ScheduledExecutorService $r7;
        io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory $r8;
        io.grpc.internal.LogExceptionRunnable $r9;
        io.grpc.internal.SharedResourceHolder$2 $r10;
        java.util.concurrent.TimeUnit $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13;
        java.lang.String $r14;
        java.lang.Throwable $r15;

        $r0 := @this: io.grpc.internal.SharedResourceHolder;

        $r1 := @parameter0: io.grpc.internal.SharedResourceHolder$Resource;

        $r2 := @parameter1: java.lang.Object;

        entermonitor $r0;

     label01:
        $r3 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap instances>;

        $r4 = virtualinvoke $r3.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (io.grpc.internal.SharedResourceHolder$Instance) $r4;

        if $r5 == null goto label10;

        $r4 = $r5.<io.grpc.internal.SharedResourceHolder$Instance: java.lang.Object payload>;

        $z0 = 1;

        if $r2 != $r4 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "Releasing the wrong instance");

        $i0 = $r5.<io.grpc.internal.SharedResourceHolder$Instance: int refcount>;

        if $i0 <= 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Refcount has already reached zero");

        $i0 = $r5.<io.grpc.internal.SharedResourceHolder$Instance: int refcount>;

        $i0 = $i0 + -1;

        $r5.<io.grpc.internal.SharedResourceHolder$Instance: int refcount> = $i0;

        $i0 = $r5.<io.grpc.internal.SharedResourceHolder$Instance: int refcount>;

        if $i0 != 0 goto label09;

        $r6 = $r5.<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask>;

        if $r6 != null goto label06;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Destroy task already scheduled");

        $r7 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer>;

        if $r7 != null goto label08;

        $r8 = $r0.<io.grpc.internal.SharedResourceHolder: io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory destroyerFactory>;

        $r7 = interfaceinvoke $r8.<io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory: java.util.concurrent.ScheduledExecutorService createScheduledExecutor()>();

        $r0.<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer> = $r7;

     label08:
        $r7 = $r0.<io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService destroyer>;

        $r9 = new io.grpc.internal.LogExceptionRunnable;

        $r10 = new io.grpc.internal.SharedResourceHolder$2;

        specialinvoke $r10.<io.grpc.internal.SharedResourceHolder$2: void <init>(io.grpc.internal.SharedResourceHolder,io.grpc.internal.SharedResourceHolder$Instance,io.grpc.internal.SharedResourceHolder$Resource,java.lang.Object)>($r0, $r5, $r1, $r2);

        specialinvoke $r9.<io.grpc.internal.LogExceptionRunnable: void <init>(java.lang.Runnable)>($r10);

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r6 = interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r9, 1L, $r11);

        $r5.<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask> = $r6;

     label09:
        exitmonitor $r0;

        return null;

     label10:
        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No cached instance found for ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r12;

     label11:
        $r15 := @caughtexception;

        exitmonitor $r0;

        throw $r15;

        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

io.grpc.internal.SharedResourceHolder$1
    void <init>()
    {
        io.grpc.internal.SharedResourceHolder$1 $r0;

        $r0 := @this: io.grpc.internal.SharedResourceHolder$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.concurrent.ScheduledExecutorService createScheduledExecutor()
    {
        io.grpc.internal.SharedResourceHolder$1 $r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ScheduledExecutorService $r2;

        $r0 := @this: io.grpc.internal.SharedResourceHolder$1;

        $r1 = staticinvoke <io.grpc.internal.GrpcUtil: java.util.concurrent.ThreadFactory getThreadFactory(java.lang.String,boolean)>("grpc-shared-destroyer-%d", 1);

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>($r1);

        return $r2;
    }

io.grpc.internal.SharedResourceHolder$2
<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>
<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Instance val$cached>
<io.grpc.internal.SharedResourceHolder$2: java.lang.Object val$instance>
<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource>
    void <init>(io.grpc.internal.SharedResourceHolder, io.grpc.internal.SharedResourceHolder$Instance, io.grpc.internal.SharedResourceHolder$Resource, java.lang.Object)
    {
        io.grpc.internal.SharedResourceHolder$2 $r0;
        io.grpc.internal.SharedResourceHolder $r1;
        io.grpc.internal.SharedResourceHolder$Instance $r2;
        io.grpc.internal.SharedResourceHolder$Resource $r3;
        java.lang.Object $r4;

        $r0 := @this: io.grpc.internal.SharedResourceHolder$2;

        $r1 := @parameter0: io.grpc.internal.SharedResourceHolder;

        $r2 := @parameter1: io.grpc.internal.SharedResourceHolder$Instance;

        $r3 := @parameter2: io.grpc.internal.SharedResourceHolder$Resource;

        $r4 := @parameter3: java.lang.Object;

        $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0> = $r1;

        $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Instance val$cached> = $r2;

        $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource> = $r3;

        $r0.<io.grpc.internal.SharedResourceHolder$2: java.lang.Object val$instance> = $r4;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.SharedResourceHolder$2 $r0;
        io.grpc.internal.SharedResourceHolder $r1, $r5;
        io.grpc.internal.SharedResourceHolder$Resource $r2;
        io.grpc.internal.SharedResourceHolder$Instance $r3;
        int $i0;
        java.lang.Object $r4;
        java.util.IdentityHashMap $r6;
        boolean $z0;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.Throwable $r8, $r9;

        $r0 := @this: io.grpc.internal.SharedResourceHolder$2;

        $r1 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        entermonitor $r1;

     label01:
        $r3 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Instance val$cached>;

        $i0 = $r3.<io.grpc.internal.SharedResourceHolder$Instance: int refcount>;

     label02:
        if $i0 != 0 goto label08;

     label03:
        $r2 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource>;

        $r4 = $r0.<io.grpc.internal.SharedResourceHolder$2: java.lang.Object val$instance>;

        interfaceinvoke $r2.<io.grpc.internal.SharedResourceHolder$Resource: void close(java.lang.Object)>($r4);

     label04:
        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r6 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)>($r5);

        $r2 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource>;

        virtualinvoke $r6.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r6 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)>($r5);

        $z0 = virtualinvoke $r6.<java.util.IdentityHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r7 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$100(io.grpc.internal.SharedResourceHolder)>($r5);

        interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: void shutdown()>();

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$102(io.grpc.internal.SharedResourceHolder,java.util.concurrent.ScheduledExecutorService)>($r5, null);

        goto label08;

     label05:
        $r8 := @caughtexception;

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r6 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)>($r5);

        $r2 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder$Resource val$resource>;

        virtualinvoke $r6.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r6 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.IdentityHashMap access$000(io.grpc.internal.SharedResourceHolder)>($r5);

        $z0 = virtualinvoke $r6.<java.util.IdentityHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        goto label07;

     label06:
        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        $r7 = staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$100(io.grpc.internal.SharedResourceHolder)>($r5);

        interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: void shutdown()>();

        $r5 = $r0.<io.grpc.internal.SharedResourceHolder$2: io.grpc.internal.SharedResourceHolder this$0>;

        staticinvoke <io.grpc.internal.SharedResourceHolder: java.util.concurrent.ScheduledExecutorService access$102(io.grpc.internal.SharedResourceHolder,java.util.concurrent.ScheduledExecutorService)>($r5, null);

     label07:
        throw $r8;

     label08:
        exitmonitor $r1;

        return;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor $r1;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label04 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

io.grpc.internal.SharedResourceHolder$Instance
<io.grpc.internal.SharedResourceHolder$Instance: java.util.concurrent.ScheduledFuture destroyTask>
<io.grpc.internal.SharedResourceHolder$Instance: java.lang.Object payload>
<io.grpc.internal.SharedResourceHolder$Instance: int refcount>
    void <init>(java.lang.Object)
    {
        io.grpc.internal.SharedResourceHolder$Instance $r0;
        java.lang.Object $r1;

        $r0 := @this: io.grpc.internal.SharedResourceHolder$Instance;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.internal.SharedResourceHolder$Instance: java.lang.Object payload> = $r1;

        return;
    }

io.grpc.internal.SharedResourceHolder$Resource
<io.grpc.internal.SharedResourceHolder$Resource: void close(java.lang.Object)>
<io.grpc.internal.SharedResourceHolder$Resource: java.lang.Object create()>
io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory
<io.grpc.internal.SharedResourceHolder$ScheduledExecutorFactory: java.util.concurrent.ScheduledExecutorService createScheduledExecutor()>
