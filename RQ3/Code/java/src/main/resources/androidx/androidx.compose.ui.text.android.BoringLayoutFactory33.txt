androidx.compose.ui.text.android.BoringLayoutFactory33
<androidx.compose.ui.text.android.BoringLayoutFactory33: androidx.compose.ui.text.android.BoringLayoutFactory33 INSTANCE>
    private void <init>()
    {
        androidx.compose.ui.text.android.BoringLayoutFactory33 r0;

        r0 := @this: androidx.compose.ui.text.android.BoringLayoutFactory33;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence, android.text.TextPaint, android.text.TextDirectionHeuristic)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        android.text.TextDirectionHeuristic r2;
        android.text.BoringLayout$Metrics $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        r2 := @parameter2: android.text.TextDirectionHeuristic;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "text");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "textDir");

        $r3 = staticinvoke <android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,boolean,android.text.BoringLayout$Metrics)>(r0, r1, r2, 1, null);

        return $r3;
    }

    public static final android.text.BoringLayout create(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, boolean, android.text.TextUtils$TruncateAt, int)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        int i0, i1;
        android.text.Layout$Alignment r2;
        float f0, f1;
        android.text.BoringLayout$Metrics r3;
        boolean z0, z1;
        android.text.TextUtils$TruncateAt r4;
        android.text.BoringLayout $r5;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r2 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r3 := @parameter6: android.text.BoringLayout$Metrics;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        r4 := @parameter9: android.text.TextUtils$TruncateAt;

        i1 := @parameter10: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "text");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "alignment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metrics");

        $r5 = staticinvoke <androidx.compose.ui.text.android.BoringLayoutConstructor33: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int,boolean)>(r0, r1, i0, r2, f0, f1, r3, z0, r4, i1, z1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "create(\n            text\u2026backLineSpacing\n        )");

        return $r5;
    }

    public static android.text.BoringLayout create$default(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, android.text.BoringLayout$Metrics, boolean, boolean, android.text.TextUtils$TruncateAt, int, int, java.lang.Object)
    {
        java.lang.CharSequence r0;
        android.text.TextPaint r1;
        int i0, i1, $i2, $i3, i4;
        android.text.Layout$Alignment r2;
        float f0, f1;
        android.text.BoringLayout$Metrics r3;
        boolean z0, z1;
        java.lang.Object r4;
        android.text.BoringLayout $r5;
        android.text.TextUtils$TruncateAt r6;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r2 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        r3 := @parameter6: android.text.BoringLayout$Metrics;

        z0 := @parameter7: boolean;

        z1 := @parameter8: boolean;

        r6 := @parameter9: android.text.TextUtils$TruncateAt;

        i4 := @parameter10: int;

        i1 := @parameter11: int;

        r4 := @parameter12: java.lang.Object;

        $i2 = i1 & 512;

        if $i2 == 0 goto label1;

        r6 = null;

     label1:
        $i3 = i1 & 1024;

        if $i3 == 0 goto label2;

        i4 = i0;

     label2:
        $r5 = staticinvoke <androidx.compose.ui.text.android.BoringLayoutFactory33: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean,android.text.TextUtils$TruncateAt,int)>(r0, r1, i0, r2, f0, f1, r3, z0, z1, r6, i4);

        return $r5;
    }

    public final boolean isFallbackLineSpacingEnabled(android.text.BoringLayout)
    {
        androidx.compose.ui.text.android.BoringLayoutFactory33 r0;
        android.text.BoringLayout r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.android.BoringLayoutFactory33;

        r1 := @parameter0: android.text.BoringLayout;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layout");

        $z0 = virtualinvoke r1.<android.text.BoringLayout: boolean isFallbackLineSpacingEnabled()>();

        return $z0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.android.BoringLayoutFactory33 $r0;

        $r0 = new androidx.compose.ui.text.android.BoringLayoutFactory33;

        specialinvoke $r0.<androidx.compose.ui.text.android.BoringLayoutFactory33: void <init>()>();

        <androidx.compose.ui.text.android.BoringLayoutFactory33: androidx.compose.ui.text.android.BoringLayoutFactory33 INSTANCE> = $r0;

        return;
    }

