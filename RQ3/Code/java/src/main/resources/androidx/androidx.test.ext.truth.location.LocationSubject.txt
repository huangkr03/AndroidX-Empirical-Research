androidx.test.ext.truth.location.LocationSubject
<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>
    public static androidx.test.ext.truth.location.LocationSubject $r8$lambda$ribsJILQIuSiY5OSsFko7YPn_Dc(com.google.common.truth.FailureMetadata, android.location.Location)
    {
        com.google.common.truth.FailureMetadata r0;
        android.location.Location r1;
        androidx.test.ext.truth.location.LocationSubject $r2;

        r0 := @parameter0: com.google.common.truth.FailureMetadata;

        r1 := @parameter1: android.location.Location;

        $r2 = new androidx.test.ext.truth.location.LocationSubject;

        specialinvoke $r2.<androidx.test.ext.truth.location.LocationSubject: void <init>(com.google.common.truth.FailureMetadata,android.location.Location)>(r0, r1);

        return $r2;
    }

    public static androidx.test.ext.truth.location.LocationSubject assertThat(android.location.Location)
    {
        android.location.Location r0;
        com.google.common.truth.Subject$Factory $r1;
        com.google.common.truth.SimpleSubjectBuilder $r2;
        com.google.common.truth.Subject $r3;
        androidx.test.ext.truth.location.LocationSubject $r4;

        r0 := @parameter0: android.location.Location;

        $r1 = staticinvoke <androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.Subject$Factory locations()>();

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.SimpleSubjectBuilder assertAbout(com.google.common.truth.Subject$Factory)>($r1);

        $r3 = virtualinvoke $r2.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>(r0);

        $r4 = (androidx.test.ext.truth.location.LocationSubject) $r3;

        return $r4;
    }

    public final androidx.test.ext.truth.os.BundleSubject extras()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        com.google.common.truth.Subject$Factory $r3;
        com.google.common.truth.SimpleSubjectBuilder $r4;
        android.location.Location $r5;
        android.os.Bundle $r6;
        com.google.common.truth.Subject $r7;
        androidx.test.ext.truth.os.BundleSubject $r8;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getExtras()", $r1);

        $r3 = staticinvoke <androidx.test.ext.truth.os.BundleSubject: com.google.common.truth.Subject$Factory bundles()>();

        $r4 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.SimpleSubjectBuilder about(com.google.common.truth.Subject$Factory)>($r3);

        $r5 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $r6 = virtualinvoke $r5.<android.location.Location: android.os.Bundle getExtras()>();

        $r7 = virtualinvoke $r4.<com.google.common.truth.SimpleSubjectBuilder: com.google.common.truth.Subject that(java.lang.Object)>($r6);

        $r8 = (androidx.test.ext.truth.os.BundleSubject) $r7;

        return $r8;
    }

    public com.google.common.truth.DoubleSubject altitude()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        double $d0;
        java.lang.Double $r4;
        com.google.common.truth.DoubleSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getAltitude()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d0 = virtualinvoke $r3.<android.location.Location: double getAltitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject accuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getAccuracy()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getAccuracy()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject bearing()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getBearing()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getBearing()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject bearingAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getBearingAccuracyDegrees()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getBearingAccuracyDegrees()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject bearingTo(android.location.Location)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1, $r11;
        double d0, d1, $d2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object[] $r9;
        com.google.common.truth.StandardSubjectBuilder $r10;
        float $f0;
        java.lang.Float $r12;
        com.google.common.truth.FloatSubject $r13;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        $d2 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        d0 = $d2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bearingTo(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        $r10 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>($r8, $r9);

        $r11 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r11.<android.location.Location: float bearingTo(android.location.Location)>(r1);

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r13 = virtualinvoke $r10.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r12);

        return $r13;
    }

    public com.google.common.truth.FloatSubject bearingTo(double, double)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        double d0, d1;
        android.location.Location r1, $r2;
        com.google.common.truth.FloatSubject $r3;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r2 = new android.location.Location;

        specialinvoke $r2.<android.location.Location: void <init>(java.lang.String)>("");

        r1 = $r2;

        virtualinvoke r1.<android.location.Location: void setLatitude(double)>(d0);

        virtualinvoke r1.<android.location.Location: void setLongitude(double)>(d1);

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.FloatSubject bearingTo(android.location.Location)>(r1);

        return $r3;
    }

    public com.google.common.truth.FloatSubject distanceTo(android.location.Location)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1, $r11;
        double d0, d1, $d2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object[] $r9;
        com.google.common.truth.StandardSubjectBuilder $r10;
        float $f0;
        java.lang.Float $r12;
        com.google.common.truth.FloatSubject $r13;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        $d2 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        d0 = $d2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distanceTo(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        $r10 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>($r8, $r9);

        $r11 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r11.<android.location.Location: float distanceTo(android.location.Location)>(r1);

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r13 = virtualinvoke $r10.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r12);

        return $r13;
    }

    public com.google.common.truth.FloatSubject distanceTo(double, double)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        double d0, d1;
        android.location.Location r1, $r2;
        com.google.common.truth.FloatSubject $r3;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r2 = new android.location.Location;

        specialinvoke $r2.<android.location.Location: void <init>(java.lang.String)>("");

        r1 = $r2;

        virtualinvoke r1.<android.location.Location: void setLatitude(double)>(d0);

        virtualinvoke r1.<android.location.Location: void setLongitude(double)>(d1);

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.FloatSubject distanceTo(android.location.Location)>(r1);

        return $r3;
    }

    public com.google.common.truth.FloatSubject speed()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSpeed()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getSpeed()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject speedAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSpeedAccuracyMetersPerSecond()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getSpeedAccuracyMetersPerSecond()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.FloatSubject verticalAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        float $f0;
        java.lang.Float $r4;
        com.google.common.truth.FloatSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getVerticalAccuracyMeters()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r3.<android.location.Location: float getVerticalAccuracyMeters()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r4);

        return $r5;
    }

    public com.google.common.truth.LongSubject elapsedRealtimeMillis()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        java.util.concurrent.TimeUnit $r4;
        long $l0, $l1;
        java.lang.Long $r5;
        com.google.common.truth.LongSubject $r6;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getElapsedRealtimeMillis()", $r1);

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $l0 = virtualinvoke $r3.<android.location.Location: long getElapsedRealtimeNanos()>();

        $l1 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r6 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r5);

        return $r6;
    }

    public com.google.common.truth.LongSubject elapsedRealtimeNanos()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        long $l0;
        java.lang.Long $r4;
        com.google.common.truth.LongSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getElapsedRealtimeNanos()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $l0 = virtualinvoke $r3.<android.location.Location: long getElapsedRealtimeNanos()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r4);

        return $r5;
    }

    public com.google.common.truth.LongSubject time()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        long $l0;
        java.lang.Long $r4;
        com.google.common.truth.LongSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTime()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $l0 = virtualinvoke $r3.<android.location.Location: long getTime()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r4);

        return $r5;
    }

    public static com.google.common.truth.Subject$Factory locations()
    {
        androidx.test.ext.truth.location.LocationSubject$$ExternalSyntheticLambda0 $r0;

        $r0 = <androidx.test.ext.truth.location.LocationSubject$$ExternalSyntheticLambda0: androidx.test.ext.truth.location.LocationSubject$$ExternalSyntheticLambda0 INSTANCE>;

        return $r0;
    }

    private void <init>(com.google.common.truth.FailureMetadata, android.location.Location)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        com.google.common.truth.FailureMetadata r1;
        android.location.Location r2;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: com.google.common.truth.FailureMetadata;

        r2 := @parameter1: android.location.Location;

        specialinvoke r0.<com.google.common.truth.Subject: void <init>(com.google.common.truth.FailureMetadata,java.lang.Object)>(r1, r2);

        r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual> = r2;

        return;
    }

    public void doesNotHaveProvider(java.lang.String)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.location.Location $r4;
        com.google.common.truth.StringSubject $r6;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getProvider()", $r2);

        $r4 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $r5 = virtualinvoke $r4.<android.location.Location: java.lang.String getProvider()>();

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.StringSubject that(java.lang.String)>($r5);

        virtualinvoke $r6.<com.google.common.truth.StringSubject: void isNotEqualTo(java.lang.Object)>(r1);

        return;
    }

    public void hasAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasAccuracy()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasAccuracy()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasAltitude()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasAltitude()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasAltitude()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasBearing()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasBearing()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasBearing()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasBearingAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasBearingAccuracy()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasBearingAccuracy()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasProvider(java.lang.String)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        com.google.common.truth.StandardSubjectBuilder $r3;
        android.location.Location $r4;
        com.google.common.truth.StringSubject $r6;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getProvider()", $r2);

        $r4 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $r5 = virtualinvoke $r4.<android.location.Location: java.lang.String getProvider()>();

        $r6 = virtualinvoke $r3.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.StringSubject that(java.lang.String)>($r5);

        virtualinvoke $r6.<com.google.common.truth.StringSubject: void isEqualTo(java.lang.Object)>(r1);

        return;
    }

    public void hasSpeed()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasSpeed()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasSpeed()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasSpeedAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasSpeedAccuracy()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasSpeedAccuracy()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void hasVerticalAccuracy()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("hasVerticalAccuracy()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean hasVerticalAccuracy()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void isAt(android.location.Location)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1;
        double $d0, $d1;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: void isAt(double,double)>($d0, $d1);

        return;
    }

    public void isAt(double, double)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        double d0, d1, $d2, $d3;
        java.lang.Object[] $r1, $r7;
        com.google.common.truth.StandardSubjectBuilder $r2, $r8;
        android.location.Location $r3, $r9;
        java.lang.Double $r4, $r6, $r10, $r12;
        com.google.common.truth.DoubleSubject $r5, $r11;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLatitude()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d2 = virtualinvoke $r3.<android.location.Location: double getLatitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r4);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r5.<com.google.common.truth.DoubleSubject: void isEqualTo(java.lang.Object)>($r6);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLongitude()", $r7);

        $r9 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d3 = virtualinvoke $r9.<android.location.Location: double getLongitude()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r11 = virtualinvoke $r8.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r10);

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        virtualinvoke $r11.<com.google.common.truth.DoubleSubject: void isEqualTo(java.lang.Object)>($r12);

        return;
    }

    public void isEqualTo(java.lang.Object)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object r1;
        android.location.Location r2, $r3, $r6, $r12, $r18, $r24, $r30, $r36, $r42, $r48, $r54, $r60, $r66, $r72;
        int $i0, $i3, $i4;
        boolean $z0;
        java.lang.Object[] $r4, $r10, $r16, $r22, $r28, $r34, $r40, $r46, $r52, $r58, $r64, $r70;
        com.google.common.truth.StandardSubjectBuilder $r5, $r11, $r17, $r23, $r29, $r35, $r41, $r47, $r53, $r59, $r65, $r71;
        java.lang.String $r7, $r9;
        com.google.common.truth.StringSubject $r8;
        long $l1, $l2, $l5, $l6;
        java.lang.Long $r13, $r15, $r73, $r75;
        com.google.common.truth.LongSubject $r14, $r74;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Double $r19, $r21, $r25, $r27, $r31, $r33;
        com.google.common.truth.DoubleSubject $r20, $r26, $r32;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.Float $r37, $r39, $r43, $r45, $r49, $r51, $r55, $r57, $r61, $r63, $r67, $r69;
        com.google.common.truth.FloatSubject $r38, $r44, $r50, $r56, $r62, $r68;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: java.lang.Object;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 31 goto label1;

        specialinvoke r0.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r1);

        return;

     label1:
        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        if $r3 == null goto label2;

        $z0 = r1 instanceof android.location.Location;

        if $z0 != 0 goto label3;

     label2:
        specialinvoke r0.<com.google.common.truth.Subject: void isEqualTo(java.lang.Object)>(r1);

        return;

     label3:
        r2 = (android.location.Location) r1;

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getProvider()", $r4);

        $r6 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $r7 = virtualinvoke $r6.<android.location.Location: java.lang.String getProvider()>();

        $r8 = virtualinvoke $r5.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.StringSubject that(java.lang.String)>($r7);

        $r9 = virtualinvoke r2.<android.location.Location: java.lang.String getProvider()>();

        virtualinvoke $r8.<com.google.common.truth.StringSubject: void isEqualTo(java.lang.Object)>($r9);

        $r10 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getTime()", $r10);

        $r12 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $l1 = virtualinvoke $r12.<android.location.Location: long getTime()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r14 = virtualinvoke $r11.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r13);

        $l2 = virtualinvoke r2.<android.location.Location: long getTime()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r14.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r15);

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 17 goto label4;

        $r70 = newarray (java.lang.Object)[0];

        $r71 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getElapsedRealtimeNanos()", $r70);

        $r72 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $l5 = virtualinvoke $r72.<android.location.Location: long getElapsedRealtimeNanos()>();

        $r73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r74 = virtualinvoke $r71.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.LongSubject that(java.lang.Long)>($r73);

        $l6 = virtualinvoke r2.<android.location.Location: long getElapsedRealtimeNanos()>();

        $r75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke $r74.<com.google.common.truth.LongSubject: void isEqualTo(java.lang.Object)>($r75);

     label4:
        $r16 = newarray (java.lang.Object)[0];

        $r17 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLatitude()", $r16);

        $r18 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d0 = virtualinvoke $r18.<android.location.Location: double getLatitude()>();

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r20 = virtualinvoke $r17.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r19);

        $d1 = virtualinvoke r2.<android.location.Location: double getLatitude()>();

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke $r20.<com.google.common.truth.DoubleSubject: void isEqualTo(java.lang.Object)>($r21);

        $r22 = newarray (java.lang.Object)[0];

        $r23 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLongitude()", $r22);

        $r24 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d2 = virtualinvoke $r24.<android.location.Location: double getLongitude()>();

        $r25 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r26 = virtualinvoke $r23.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r25);

        $d3 = virtualinvoke r2.<android.location.Location: double getLongitude()>();

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        virtualinvoke $r26.<com.google.common.truth.DoubleSubject: void isEqualTo(java.lang.Object)>($r27);

        $r28 = newarray (java.lang.Object)[0];

        $r29 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getAltitude()", $r28);

        $r30 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d4 = virtualinvoke $r30.<android.location.Location: double getAltitude()>();

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r32 = virtualinvoke $r29.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r31);

        $d5 = virtualinvoke r2.<android.location.Location: double getAltitude()>();

        $r33 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        virtualinvoke $r32.<com.google.common.truth.DoubleSubject: void isEqualTo(java.lang.Object)>($r33);

        $r34 = newarray (java.lang.Object)[0];

        $r35 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSpeed()", $r34);

        $r36 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f0 = virtualinvoke $r36.<android.location.Location: float getSpeed()>();

        $r37 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r38 = virtualinvoke $r35.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r37);

        $f1 = virtualinvoke r2.<android.location.Location: float getSpeed()>();

        $r39 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r38.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r39);

        $r40 = newarray (java.lang.Object)[0];

        $r41 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getBearing()", $r40);

        $r42 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f2 = virtualinvoke $r42.<android.location.Location: float getBearing()>();

        $r43 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r44 = virtualinvoke $r41.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r43);

        $f3 = virtualinvoke r2.<android.location.Location: float getBearing()>();

        $r45 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        virtualinvoke $r44.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r45);

        $r46 = newarray (java.lang.Object)[0];

        $r47 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getAccuracy()", $r46);

        $r48 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f4 = virtualinvoke $r48.<android.location.Location: float getAccuracy()>();

        $r49 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r50 = virtualinvoke $r47.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r49);

        $f5 = virtualinvoke r2.<android.location.Location: float getAccuracy()>();

        $r51 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        virtualinvoke $r50.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r51);

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 26 goto label5;

        $r52 = newarray (java.lang.Object)[0];

        $r53 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getVerticalAccuracyMeters()", $r52);

        $r54 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f6 = virtualinvoke $r54.<android.location.Location: float getVerticalAccuracyMeters()>();

        $r55 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r56 = virtualinvoke $r53.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r55);

        $f7 = virtualinvoke r2.<android.location.Location: float getVerticalAccuracyMeters()>();

        $r57 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        virtualinvoke $r56.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r57);

        $r58 = newarray (java.lang.Object)[0];

        $r59 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getSpeedAccuracyMetersPerSecond()", $r58);

        $r60 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f8 = virtualinvoke $r60.<android.location.Location: float getSpeedAccuracyMetersPerSecond()>();

        $r61 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        $r62 = virtualinvoke $r59.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r61);

        $f9 = virtualinvoke r2.<android.location.Location: float getSpeedAccuracyMetersPerSecond()>();

        $r63 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

        virtualinvoke $r62.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r63);

        $r64 = newarray (java.lang.Object)[0];

        $r65 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getBearingAccuracyDegrees()", $r64);

        $r66 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $f10 = virtualinvoke $r66.<android.location.Location: float getBearingAccuracyDegrees()>();

        $r67 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        $r68 = virtualinvoke $r65.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.FloatSubject that(java.lang.Float)>($r67);

        $f11 = virtualinvoke r2.<android.location.Location: float getBearingAccuracyDegrees()>();

        $r69 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        virtualinvoke $r68.<com.google.common.truth.FloatSubject: void isEqualTo(java.lang.Object)>($r69);

     label5:
        return;
    }

    public void isFaraway(android.location.Location, float)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1;
        float f0;
        com.google.common.truth.FloatSubject $r2;
        java.lang.Float $r3;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.FloatSubject distanceTo(android.location.Location)>(r1);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r2.<com.google.common.truth.FloatSubject: void isAtLeast(java.lang.Comparable)>($r3);

        return;
    }

    public void isMock()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("isFromMockProvider()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean isFromMockProvider()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    public void isNearby(android.location.Location, float)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1;
        float f0;
        com.google.common.truth.FloatSubject $r2;
        java.lang.Float $r3;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.FloatSubject distanceTo(android.location.Location)>(r1);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r2.<com.google.common.truth.FloatSubject: void isAtMost(java.lang.Comparable)>($r3);

        return;
    }

    public void isNotAt(android.location.Location)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        android.location.Location r1;
        double $d0, $d1;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        r1 := @parameter0: android.location.Location;

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: void isNotAt(double,double)>($d0, $d1);

        return;
    }

    public void isNotAt(double, double)
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        double d0, d1, $d2, $d3;
        java.lang.Object[] $r1, $r7;
        com.google.common.truth.StandardSubjectBuilder $r2, $r8;
        android.location.Location $r3, $r9;
        java.lang.Double $r4, $r6, $r10, $r12;
        com.google.common.truth.DoubleSubject $r5, $r11;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLatitude()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d2 = virtualinvoke $r3.<android.location.Location: double getLatitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r4);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        virtualinvoke $r5.<com.google.common.truth.DoubleSubject: void isNotEqualTo(java.lang.Object)>($r6);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("getLongitude()", $r7);

        $r9 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $d3 = virtualinvoke $r9.<android.location.Location: double getLongitude()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r11 = virtualinvoke $r8.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.DoubleSubject that(java.lang.Double)>($r10);

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        virtualinvoke $r11.<com.google.common.truth.DoubleSubject: void isNotEqualTo(java.lang.Object)>($r12);

        return;
    }

    public void isNotMock()
    {
        androidx.test.ext.truth.location.LocationSubject r0;
        java.lang.Object[] $r1;
        com.google.common.truth.StandardSubjectBuilder $r2;
        android.location.Location $r3;
        boolean $z0;
        java.lang.Boolean $r4;
        com.google.common.truth.BooleanSubject $r5;

        r0 := @this: androidx.test.ext.truth.location.LocationSubject;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = virtualinvoke r0.<androidx.test.ext.truth.location.LocationSubject: com.google.common.truth.StandardSubjectBuilder check(java.lang.String,java.lang.Object[])>("isFromMockProvider()", $r1);

        $r3 = r0.<androidx.test.ext.truth.location.LocationSubject: android.location.Location actual>;

        $z0 = virtualinvoke $r3.<android.location.Location: boolean isFromMockProvider()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r2.<com.google.common.truth.StandardSubjectBuilder: com.google.common.truth.BooleanSubject that(java.lang.Boolean)>($r4);

        virtualinvoke $r5.<com.google.common.truth.BooleanSubject: void isFalse()>();

        return;
    }

