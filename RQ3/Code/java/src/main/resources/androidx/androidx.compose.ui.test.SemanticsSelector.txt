androidx.compose.ui.test.SemanticsSelector
<androidx.compose.ui.test.SemanticsSelector: java.lang.String description>
<androidx.compose.ui.test.SemanticsSelector: boolean requiresExactlyOneNode>
<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SemanticsSelector chainedInputSelector>
<androidx.compose.ui.test.SemanticsSelector: kotlin.jvm.functions.Function1 selector>
<androidx.compose.ui.test.SemanticsSelector: int $stable>
    public void <init>(java.lang.String, boolean, androidx.compose.ui.test.SemanticsSelector, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.test.SemanticsSelector r0, r2;
        java.lang.String r1;
        boolean z0;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.compose.ui.test.SemanticsSelector;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "description");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "selector");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String description> = r1;

        r0.<androidx.compose.ui.test.SemanticsSelector: boolean requiresExactlyOneNode> = z0;

        r0.<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SemanticsSelector chainedInputSelector> = r2;

        r0.<androidx.compose.ui.test.SemanticsSelector: kotlin.jvm.functions.Function1 selector> = r3;

        return;
    }

    public void <init>(java.lang.String, boolean, androidx.compose.ui.test.SemanticsSelector, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.test.SemanticsSelector r0, r4;
        java.lang.String r1;
        boolean z0;
        kotlin.jvm.functions.Function1 r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;

        r0 := @this: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r4 := @parameter2: androidx.compose.ui.test.SemanticsSelector;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        i0 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.compose.ui.test.SemanticsSelector: void <init>(java.lang.String,boolean,androidx.compose.ui.test.SemanticsSelector,kotlin.jvm.functions.Function1)>(r1, z0, r4, r2);

        return;
    }

    public final java.lang.String getDescription()
    {
        androidx.compose.ui.test.SemanticsSelector r0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.ui.test.SemanticsSelector;

        $r1 = r0.<androidx.compose.ui.test.SemanticsSelector: java.lang.String description>;

        return $r1;
    }

    public final androidx.compose.ui.test.SelectionResult map(java.lang.Iterable, java.lang.String)
    {
        androidx.compose.ui.test.SemanticsSelector r0, r6, $r7, $r18;
        java.lang.Iterable r1, r4, $r15;
        java.lang.String r2, $r11, $r17;
        androidx.compose.ui.test.SelectionResult r3, $r10, $r14;
        java.util.List r5, $r12;
        kotlin.jvm.functions.Function1 $r8;
        java.lang.Object $r9;
        int $i0;
        boolean $z0;
        java.lang.AssertionError $r16;

        r0 := @this: androidx.compose.ui.test.SemanticsSelector;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "nodes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "errorOnFail");

        $r7 = r0.<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SemanticsSelector chainedInputSelector>;

        if $r7 == null goto label1;

        $r14 = virtualinvoke $r7.<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SelectionResult map(java.lang.Iterable,java.lang.String)>(r1, r2);

        goto label2;

     label1:
        $r14 = null;

     label2:
        r3 = $r14;

        if r3 == null goto label3;

        $r12 = virtualinvoke r3.<androidx.compose.ui.test.SelectionResult: java.util.List getSelectedNodes()>();

        if $r12 == null goto label3;

        $r15 = (java.lang.Iterable) $r12;

        goto label4;

     label3:
        $r15 = r1;

     label4:
        r4 = $r15;

        $z0 = r0.<androidx.compose.ui.test.SemanticsSelector: boolean requiresExactlyOneNode>;

        if $z0 == 0 goto label8;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int count(java.lang.Iterable)>(r4);

        if $i0 == 1 goto label8;

        $r16 = new java.lang.AssertionError;

        if r3 == null goto label5;

        $r11 = virtualinvoke r3.<androidx.compose.ui.test.SelectionResult: java.lang.String getCustomErrorOnNoMatch()>();

        $r17 = $r11;

        if $r11 != null goto label7;

     label5:
        r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r4);

        $r18 = r0.<androidx.compose.ui.test.SemanticsSelector: androidx.compose.ui.test.SemanticsSelector chainedInputSelector>;

        if $r18 != null goto label6;

        $r18 = r0;

     label6:
        r6 = $r18;

        $r17 = staticinvoke <androidx.compose.ui.test.ErrorMessagesKt: java.lang.String buildErrorMessageForCountMismatch$default(java.lang.String,androidx.compose.ui.test.SemanticsSelector,java.util.List,int,java.util.List,int,java.lang.Object)>(r2, r6, r5, 1, null, 16, null);

     label7:
        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);

        throw $r16;

     label8:
        $r8 = r0.<androidx.compose.ui.test.SemanticsSelector: kotlin.jvm.functions.Function1 selector>;

        $r9 = interfaceinvoke $r8.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r10 = (androidx.compose.ui.test.SelectionResult) $r9;

        return $r10;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.test.SemanticsSelector: int $stable> = 8;

        return;
    }

