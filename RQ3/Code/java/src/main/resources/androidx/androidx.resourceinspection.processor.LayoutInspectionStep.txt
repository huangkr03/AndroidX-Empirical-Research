androidx.resourceinspection.processor.LayoutInspectionStep
<androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.LayoutInspectionStep$Companion Companion>
<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>
<androidx.resourceinspection.processor.LayoutInspectionStep: com.squareup.javapoet.AnnotationSpec generatedAnnotation>
<androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex ATTRIBUTE_VALUE>
<androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex RESOURCE_ID_ANNOTATION>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String ATTRIBUTE>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String APP_COMPAT_SHADOWED_ATTRIBUTES>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String COLOR>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String COLOR_INT>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String COLOR_LONG>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String GRAVITY_INT>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.lang.String VIEW>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List VIEW_INSPECTOR_CLASSES>
<androidx.resourceinspection.processor.LayoutInspectionStep: java.util.Map APP_COMPAT_INTERFACE_MAP>
    public void <init>(javax.'annotation'.processing.ProcessingEnvironment, java.lang.Class)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.'annotation'.processing.ProcessingEnvironment r1, $r3, $r5;
        java.lang.Class r2;
        javax.lang.model.util.Elements $r4;
        javax.lang.model.SourceVersion $r6;
        java.util.Optional $r7;
        java.lang.Object $r8;
        com.squareup.javapoet.AnnotationSpec $r9;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r2 := @parameter1: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "processingEnv");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "processorClass");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv> = r1;

        $r3 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r4 = interfaceinvoke $r3.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r5 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r6 = interfaceinvoke $r5.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.SourceVersion getSourceVersion()>();

        $r7 = staticinvoke <com.google.auto.common.GeneratedAnnotationSpecs: java.util.Optional generatedAnnotationSpec(javax.lang.model.util.Elements,javax.lang.model.SourceVersion,java.lang.Class)>($r4, $r6, r2);

        $r8 = virtualinvoke $r7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $r9 = (com.squareup.javapoet.AnnotationSpec) $r8;

        r0.<androidx.resourceinspection.processor.LayoutInspectionStep: com.squareup.javapoet.AnnotationSpec generatedAnnotation> = $r9;

        return;
    }

    public java.util.Set annotations()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.lang.String[] r1;
        java.util.Set $r2;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 = newarray (java.lang.String)[2];

        r1[0] = "androidx.resourceinspection.annotation.Attribute";

        r1[1] = "androidx.resourceinspection.annotation.AppCompatShadowedAttributes";

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object[])>(r1);

        return $r2;
    }

    public java.util.Set process(com.google.common.collect.ImmutableSetMultimap)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0, r21, r38;
        com.google.common.collect.ImmutableSetMultimap r1;
        java.util.List r2, $r28, r30, r31;
        javax.lang.model.element.TypeElement r3, r6, $r27;
        java.lang.Object r5, r25, $r29, $r40, $r47;
        boolean $z1, $z2, $z3, $z4, z14, z16;
        java.util.LinkedHashMap $r7;
        java.util.LinkedHashSet $r8;
        java.util.Set $r9, $r10, $r12, $r19;
        javax.'annotation'.processing.ProcessingEnvironment $r11;
        com.squareup.javapoet.AnnotationSpec $r13;
        com.squareup.javapoet.JavaFile $r14;
        javax.lang.model.element.Element $r15, $r18, r26, r41;
        java.util.ArrayList $r16;
        com.google.common.collect.ImmutableSet $r20, $r34;
        java.lang.Iterable $r22, $r35, $r45;
        java.util.Map r23, r33, r37;
        java.util.Iterator r24, r39, r46;
        javax.lang.model.element.ExecutableElement r32;
        java.util.Collection $r36, r42, r43;
        javax.'annotation'.processing.Filer $r44;
        androidx.resourceinspection.processor.View r48;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: com.google.common.collect.ImmutableSetMultimap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elementsByAnnotation");

        $z1 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isViewInspectorApiPresent()>();

        if $z1 != 0 goto label1;

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "View inspector (android.view.inspector) API is not present. Please ensure compile SDK is 29 or greater.", null, null, null, 14, null);

        $r19 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r19;

     label1:
        $r20 = virtualinvoke r1.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet get(java.lang.Object)>("androidx.resourceinspection.annotation.Attribute");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "elementsByAnnotation[ATTRIBUTE]");

        r21 = r0;

        $r22 = (java.lang.Iterable) $r20;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r23 = (java.util.Map) $r7;

        r24 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r26 = (javax.lang.model.element.Element) r25;

        $r15 = interfaceinvoke r26.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        $r27 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r15);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "asType(it.enclosingElement)");

        r3 = $r27;

        r5 = interfaceinvoke r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if r5 != null goto label3;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $r28 = (java.util.List) $r16;

        interfaceinvoke r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r28);

        $r29 = $r28;

        goto label4;

     label3:
        $r29 = r5;

     label4:
        r30 = (java.util.List) $r29;

        r31 = r30;

        $r18 = (javax.lang.model.element.Element) r25;

        r32 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.ExecutableElement asExecutable(javax.lang.model.element.Element)>($r18);

        interfaceinvoke r31.<java.util.List: boolean add(java.lang.Object)>(r32);

        goto label2;

     label5:
        r33 = r23;

        $r34 = virtualinvoke r1.<com.google.common.collect.ImmutableSetMultimap: com.google.common.collect.ImmutableSet get(java.lang.Object)>("androidx.resourceinspection.annotation.AppCompatShadowedAttributes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "elementsByAnnotation[APP\u2026MPAT_SHADOWED_ATTRIBUTES]");

        $r35 = (java.lang.Iterable) $r34;

        $r8 = new java.util.LinkedHashSet;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>()>();

        $r9 = (java.util.Set) $r8;

        $r36 = (java.util.Collection) $r9;

        r37 = r33;

        r38 = r21;

        r39 = interfaceinvoke $r35.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r40 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r41 = (javax.lang.model.element.Element) $r40;

        r42 = $r36;

        z14 = 0;

        r6 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>(r41);

        interfaceinvoke r42.<java.util.Collection: boolean add(java.lang.Object)>(r6);

        goto label6;

     label7:
        r43 = $r36;

        $r10 = (java.util.Set) r43;

        r2 = specialinvoke r38.<androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List mergeViews(java.util.Map,java.util.Set)>(r37, $r10);

        $r11 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r44 = interfaceinvoke $r11.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Filer getFiler()>();

        $r45 = (java.lang.Iterable) r2;

        r46 = interfaceinvoke $r45.<java.lang.Iterable: java.util.Iterator iterator()>();

     label8:
        $z4 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r48 = (androidx.resourceinspection.processor.View) $r47;

        z16 = 0;

        $r13 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: com.squareup.javapoet.AnnotationSpec generatedAnnotation>;

        $r14 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.JavaFile generateInspectionCompanion(androidx.resourceinspection.processor.View,com.squareup.javapoet.AnnotationSpec)>(r48, $r13);

        virtualinvoke $r14.<com.squareup.javapoet.JavaFile: void writeTo(javax.'annotation'.processing.Filer)>($r44);

        goto label8;

     label9:
        $r12 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r12;
    }

    private final boolean isViewInspectorApiPresent()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.lang.String r4;
        java.util.List $r5;
        boolean $z2, $z3, $z4, $z5, $z6;
        javax.'annotation'.processing.ProcessingEnvironment $r6;
        javax.lang.model.util.Elements $r7;
        java.lang.CharSequence $r8;
        javax.lang.model.element.TypeElement $r9;
        java.util.Collection $r10;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        $r5 = <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List VIEW_INSPECTOR_CLASSES>;

        $r1 = (java.lang.Iterable) $r5;

        $z2 = $r1 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r10 = (java.util.Collection) $r1;

        $z3 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label6;

     label1:
        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) r3;

        $r6 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r7 = interfaceinvoke $r6.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r8 = (java.lang.CharSequence) r4;

        $r9 = interfaceinvoke $r7.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r8);

        if $r9 == null goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        if $z6 != 0 goto label2;

        $z4 = 0;

        goto label6;

     label5:
        $z4 = 1;

     label6:
        return $z4;
    }

    private final java.util.List mergeViews(java.util.Map, java.util.Set)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.util.Map r1;
        java.util.Set r2, $r16, $r18;
        java.util.Collection r3, r11, $r23, $r25, $r27, r30;
        java.lang.Iterable $r4, $r17, $r24, $r29;
        java.util.Iterator r5, $r31;
        java.lang.Object r6, r7, r9, $r21;
        javax.lang.model.element.TypeElement r8;
        javax.lang.model.element.ExecutableElement r10;
        androidx.resourceinspection.processor.Attribute r12;
        java.util.List r13, $r20, $r26, $r28, $r32;
        androidx.resourceinspection.processor.View r14, r15, $r33;
        boolean z6, z7, $z9, $z10, $z16, z18;
        java.util.ArrayList $r19, $r22;
        int $i0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Set;

        $r16 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r17 = (java.lang.Iterable) r2;

        $r18 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>($r16, $r17);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r19;

        $r4 = (java.lang.Iterable) $r18;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z9 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = r6;

        r8 = (javax.lang.model.element.TypeElement) r7;

        $r21 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r28 = (java.util.List) $r21;

        if $r28 == null goto label02;

        goto label03;

     label02:
        $r28 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label03:
        $r29 = (java.lang.Iterable) $r28;

        $r22 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r29, 10);

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>($i0);

        r30 = (java.util.Collection) $r22;

        $r31 = interfaceinvoke $r29.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z16 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label05;

        r9 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r10 = (javax.lang.model.element.ExecutableElement) r9;

        r11 = r30;

        r12 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.Attribute parseGetter(javax.lang.model.element.ExecutableElement)>(r10);

        interfaceinvoke r11.<java.util.Collection: boolean add(java.lang.Object)>(r12);

        goto label04;

     label05:
        r13 = (java.util.List) r30;

        $z10 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r8);

        if $z10 == 0 goto label07;

        $r32 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List inferShadowedAttributes(javax.lang.model.element.TypeElement)>(r8);

        if $r32 != null goto label06;

        $r33 = null;

        goto label08;

     label06:
        z18 = 0;

        $r25 = (java.util.Collection) r13;

        $r24 = (java.lang.Iterable) $r32;

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r25, $r24);

        $r27 = (java.util.Collection) $r26;

        $r33 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.View createView(javax.lang.model.element.TypeElement,java.util.Collection)>(r8, $r27);

        goto label08;

     label07:
        $r23 = (java.util.Collection) r13;

        $r33 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.View createView(javax.lang.model.element.TypeElement,java.util.Collection)>(r8, $r23);

     label08:
        if $r33 == null goto label09;

        r14 = $r33;

        z6 = 0;

        z7 = 0;

        r15 = r14;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r15);

        goto label09;

     label09:
        goto label01;

     label10:
        $r20 = (java.util.List) r3;

        return $r20;
    }

    private final androidx.resourceinspection.processor.View createView(javax.lang.model.element.TypeElement, java.util.Collection)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.TypeElement r1;
        java.util.Collection r2, r5, $r13, $r22, r52;
        java.util.List r3, $r11, $r18, $r21, $r24, $r48, r50, r55, $r59;
        java.lang.Iterable $r4, $r10, $r15, $r17, $r27, $r40, $r51, $r56, r60, $r71, $r75;
        java.util.Iterator r6, $r42, $r53, $r57, $r61, $r72;
        java.lang.Object r7, r43, r47, $r49, r54, r58, r62, r73;
        androidx.resourceinspection.processor.Attribute r8, r44, $r63, $r74;
        java.lang.String r9, $r33, $r36, $r37, r45, r64;
        java.util.LinkedHashMap $r12;
        boolean $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z23, $z25, z28, $z30, $z31, $z33, $z34, $z36;
        java.util.ArrayList $r14, $r23, $r38;
        androidx.resourceinspection.processor.View $r16;
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1 $r19;
        java.util.Comparator $r20;
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 $r25;
        kotlin.jvm.functions.Function1 $r26;
        java.lang.StringBuilder $r28, $r29, $r30, $r31, $r32;
        javax.lang.model.element.Element $r34;
        int $i0;
        java.util.Map r41;
        androidx.resourceinspection.processor.GetterAttribute $r65, $r68;
        javax.lang.model.element.ExecutableElement $r67;
        javax.lang.model.element.AnnotationMirror $r70;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        r2 := @parameter1: java.util.Collection;

        $r10 = (java.lang.Iterable) r2;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List filterNotNull(java.lang.Iterable)>($r10);

        $r40 = (java.lang.Iterable) $r11;

        $r12 = new java.util.LinkedHashMap;

        specialinvoke $r12.<java.util.LinkedHashMap: void <init>()>();

        r41 = (java.util.Map) $r12;

        $r42 = interfaceinvoke $r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        r43 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r44 = (androidx.resourceinspection.processor.Attribute) r43;

        r45 = interfaceinvoke r44.<androidx.resourceinspection.processor.Attribute: java.lang.String getQualifiedName()>();

        r47 = interfaceinvoke r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r45);

        if r47 != null goto label02;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        $r48 = (java.util.List) $r38;

        interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r45, $r48);

        $r49 = $r48;

        goto label03;

     label02:
        $r49 = r47;

     label03:
        r50 = (java.util.List) $r49;

        interfaceinvoke r50.<java.util.List: boolean add(java.lang.Object)>(r43);

        goto label01;

     label04:
        $r13 = interfaceinvoke r41.<java.util.Map: java.util.Collection values()>();

        $r51 = (java.lang.Iterable) $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r52 = (java.util.Collection) $r14;

        $r53 = interfaceinvoke $r51.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z23 = interfaceinvoke $r53.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label08;

        r54 = interfaceinvoke $r53.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.List) r54;

        $i0 = interfaceinvoke r55.<java.util.List: int size()>();

        if $i0 <= 1 goto label06;

        $z25 = 1;

        goto label07;

     label06:
        $z25 = 0;

     label07:
        if $z25 == 0 goto label05;

        interfaceinvoke r52.<java.util.Collection: boolean add(java.lang.Object)>(r54);

        goto label05;

     label08:
        r3 = (java.util.List) r52;

        $r15 = (java.lang.Iterable) r3;

        $z4 = staticinvoke <kotlin.collections.CollectionsKt: boolean any(java.lang.Iterable)>($r15);

        if $z4 == 0 goto label25;

        $r56 = (java.lang.Iterable) r3;

        $r57 = interfaceinvoke $r56.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z8 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label24;

        r58 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $r59 = (java.util.List) r58;

        r60 = (java.lang.Iterable) $r59;

        z28 = 0;

        $r61 = interfaceinvoke r60.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z9 = interfaceinvoke $r61.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label23;

        r62 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();

        $r63 = (androidx.resourceinspection.processor.Attribute) r62;

        r64 = interfaceinvoke $r63.<androidx.resourceinspection.processor.Attribute: java.lang.String getQualifiedName()>();

        $r4 = (java.lang.Iterable) $r59;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r5 = (java.util.Collection) $r23;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z30 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z30 == 0 goto label14;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.resourceinspection.processor.Attribute) r7;

        $r36 = interfaceinvoke r8.<androidx.resourceinspection.processor.Attribute: java.lang.String getInvocation()>();

        $r37 = interfaceinvoke $r63.<androidx.resourceinspection.processor.Attribute: java.lang.String getInvocation()>();

        $z12 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r36, $r37);

        if $z12 != 0 goto label12;

        $z31 = 1;

        goto label13;

     label12:
        $z31 = 0;

     label13:
        if $z31 == 0 goto label11;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label11;

     label14:
        $r24 = (java.util.List) r5;

        $r27 = (java.lang.Iterable) $r24;

        $r25 = <androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 INSTANCE>;

        $r26 = (kotlin.jvm.functions.Function1) $r25;

        r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r27, null, null, null, 0, null, $r26, 31, null);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate attribute ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is also present on ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $z10 = $r63 instanceof androidx.resourceinspection.processor.GetterAttribute;

        if $z10 == 0 goto label15;

        $r65 = (androidx.resourceinspection.processor.GetterAttribute) $r63;

        goto label16;

     label15:
        $r65 = null;

     label16:
        if $r65 != null goto label17;

        $r67 = null;

        goto label18;

     label17:
        $r67 = virtualinvoke $r65.<androidx.resourceinspection.processor.GetterAttribute: javax.lang.model.element.ExecutableElement getGetter()>();

     label18:
        $r34 = (javax.lang.model.element.Element) $r67;

        $z11 = $r63 instanceof androidx.resourceinspection.processor.GetterAttribute;

        if $z11 == 0 goto label19;

        $r68 = (androidx.resourceinspection.processor.GetterAttribute) $r63;

        goto label20;

     label19:
        $r68 = null;

     label20:
        if $r68 != null goto label21;

        $r70 = null;

        goto label22;

     label21:
        $r70 = virtualinvoke $r68.<androidx.resourceinspection.processor.GetterAttribute: javax.lang.model.element.AnnotationMirror getAnnotation()>();

     label22:
        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, $r33, $r34, $r70, null, 8, null);

        goto label10;

     label23:
        goto label09;

     label24:
        return null;

     label25:
        $z5 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label32;

        $r71 = (java.lang.Iterable) r2;

        $z6 = $r71 instanceof java.util.Collection;

        if $z6 == 0 goto label26;

        $r22 = (java.util.Collection) $r71;

        $z7 = interfaceinvoke $r22.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label26;

        $z33 = 0;

        goto label31;

     label26:
        $r72 = interfaceinvoke $r71.<java.lang.Iterable: java.util.Iterator iterator()>();

     label27:
        $z34 = interfaceinvoke $r72.<java.util.Iterator: boolean hasNext()>();

        if $z34 == 0 goto label30;

        r73 = interfaceinvoke $r72.<java.util.Iterator: java.lang.Object next()>();

        $r74 = (androidx.resourceinspection.processor.Attribute) r73;

        if $r74 != null goto label28;

        $z36 = 1;

        goto label29;

     label28:
        $z36 = 0;

     label29:
        if $z36 == 0 goto label27;

        $z33 = 1;

        goto label31;

     label30:
        $z33 = 0;

     label31:
        if $z33 == 0 goto label33;

     label32:
        return null;

     label33:
        $r16 = new androidx.resourceinspection.processor.View;

        $r17 = (java.lang.Iterable) r2;

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List filterNotNull(java.lang.Iterable)>($r17);

        $r75 = (java.lang.Iterable) $r18;

        $r19 = new androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1;

        specialinvoke $r19.<androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1: void <init>()>();

        $r20 = (java.util.Comparator) $r19;

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r75, $r20);

        specialinvoke $r16.<androidx.resourceinspection.processor.View: void <init>(javax.lang.model.element.TypeElement,java.util.List)>(r1, $r21);

        return $r16;
    }

    private final androidx.resourceinspection.processor.Attribute parseGetter(javax.lang.model.element.ExecutableElement)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.ExecutableElement r1;
        javax.lang.model.element.AnnotationMirror r2, $r8;
        javax.lang.model.element.AnnotationValue r3;
        java.lang.String r4, r6, $r28, r50;
        kotlin.text.MatchResult$Destructured r5, r48, r49;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7, $z8, z9;
        javax.lang.model.element.Element $r7, $r9, $r10, $r11, $r29, $r31, $r32, $r33, $r34, $r42;
        java.lang.CharSequence $r12, $r30;
        kotlin.text.Regex $r13;
        kotlin.text.MatchResult $r14, $r17, r47;
        java.util.List $r15, $r18, r40, r46;
        java.lang.Object $r16, $r19, r39;
        androidx.resourceinspection.processor.GetterAttribute $r20;
        androidx.resourceinspection.processor.Attribute $r21;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r27;
        javax.lang.model.type.TypeMirror $r35, r45;
        javax.lang.model.type.TypeKind $r36, $r37;
        java.lang.NullPointerException $r38;
        java.util.Collection r41;
        com.google.auto.common.Visibility $r43, $r44;
        androidx.resourceinspection.processor.AttributeType r51;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.ExecutableElement;

        $r7 = (javax.lang.model.element.Element) r1;

        $r8 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element,java.lang.String)>($r7, "androidx.resourceinspection.annotation.Attribute");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

        r2 = $r8;

        r3 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r2, "value");

        r39 = interfaceinvoke r3.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if r39 != null goto label01;

        $r38 = new java.lang.NullPointerException;

        specialinvoke $r38.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.String");

        throw $r38;

     label01:
        r4 = (java.lang.String) r39;

        z6 = 0;

        r40 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: java.util.List getParameters()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r40, "getter.parameters");

        r41 = (java.util.Collection) r40;

        z7 = 0;

        $z1 = interfaceinvoke r41.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        if $z8 != 0 goto label04;

        $r35 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        $r36 = interfaceinvoke $r35.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        $r37 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind VOID>;

        if $r36 != $r37 goto label05;

     label04:
        $r9 = (javax.lang.model.element.Element) r1;

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@Attribute must annotate a getter", $r9, r2, null, 8, null);

        z6 = 1;

     label05:
        $r42 = (javax.lang.model.element.Element) r1;

        $r43 = staticinvoke <com.google.auto.common.Visibility: com.google.auto.common.Visibility effectiveVisibilityOfElement(javax.lang.model.element.Element)>($r42);

        $r44 = <com.google.auto.common.Visibility: com.google.auto.common.Visibility PUBLIC>;

        if $r43 == $r44 goto label06;

        $r34 = (javax.lang.model.element.Element) r1;

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@Attribute getter must be public", $r34, r2, null, 8, null);

        z6 = 1;

     label06:
        $r10 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Element getEnclosingElement()>();

        r45 = interfaceinvoke $r10.<javax.lang.model.element.Element: javax.lang.model.type.TypeMirror asType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r45, "getter.enclosingElement.asType()");

        $z2 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAssignableTo(javax.lang.model.type.TypeMirror,java.lang.String)>(r45, "android.view.View");

        if $z2 != 0 goto label07;

        $r33 = (javax.lang.model.element.Element) r1;

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@Attribute must be on a subclass of android.view.View", $r33, r2, null, 8, null);

        z6 = 1;

     label07:
        r46 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List parseIntMapping(javax.lang.model.element.AnnotationMirror)>(r2);

        $r11 = (javax.lang.model.element.Element) r1;

        $z3 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean validateIntMapping(javax.lang.model.element.Element,java.util.List)>($r11, r46);

        if $z3 != 0 goto label08;

        z6 = 1;

     label08:
        $r13 = <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex ATTRIBUTE_VALUE>;

        $r12 = (java.lang.CharSequence) r4;

        r47 = virtualinvoke $r13.<kotlin.text.Regex: kotlin.text.MatchResult matchEntire(java.lang.CharSequence)>($r12);

        if r47 != null goto label11;

        $r30 = (java.lang.CharSequence) r4;

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)>($r30, 58, 0, 2, null);

        if $z5 != 0 goto label09;

        $r32 = (javax.lang.model.element.Element) r1;

        specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: void printError(java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>("@Attribute must include namespace", $r32, r2, r3);

        goto label10;

     label09:
        $r31 = (javax.lang.model.element.Element) r1;

        specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: void printError(java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>("Invalid attribute name", $r31, r2, r3);

     label10:
        return null;

     label11:
        if z6 == 0 goto label12;

        return null;

     label12:
        r5 = interfaceinvoke r47.<kotlin.text.MatchResult: kotlin.text.MatchResult$Destructured getDestructured()>();

        r48 = r5;

        z9 = 0;

        $r14 = virtualinvoke r48.<kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult getMatch()>();

        $r15 = interfaceinvoke $r14.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(1);

        r6 = (java.lang.String) $r16;

        r49 = r5;

        z0 = 0;

        $r17 = virtualinvoke r49.<kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult getMatch()>();

        $r18 = interfaceinvoke $r17.<kotlin.text.MatchResult: java.util.List getGroupValues()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(2);

        r50 = (java.lang.String) $r19;

        r51 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.AttributeType inferAttributeType(javax.lang.model.element.ExecutableElement,java.util.List)>(r1, r46);

        $z4 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAttributeInRFile(java.lang.String,java.lang.String)>(r6, r50);

        if $z4 != 0 goto label13;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = (javax.lang.model.element.Element) r1;

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, $r28, $r29, r2, null, 8, null);

        return null;

     label13:
        $r20 = new androidx.resourceinspection.processor.GetterAttribute;

        specialinvoke $r20.<androidx.resourceinspection.processor.GetterAttribute: void <init>(javax.lang.model.element.ExecutableElement,javax.lang.model.element.AnnotationMirror,java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List)>(r1, r2, r6, r50, r51, r46);

        $r21 = (androidx.resourceinspection.processor.Attribute) $r20;

        return $r21;
    }

    private final java.util.List parseIntMapping(javax.lang.model.element.AnnotationMirror)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.AnnotationMirror r1, r6;
        java.util.Collection r2, r7;
        java.util.Iterator r3;
        java.lang.Object r4, r5, $r30, r32, r33, r34, r35;
        androidx.resourceinspection.processor.IntMap r8, $r17;
        javax.lang.model.element.AnnotationValue $r9, $r16, $r18, $r20, $r22;
        java.util.List $r10, $r12, $r15;
        java.util.ArrayList $r11;
        int $i0, $i1, $i2;
        boolean $z2;
        androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1 $r13;
        java.util.Comparator $r14;
        java.lang.String $r19;
        java.lang.Integer $r21, $r23;
        java.lang.NullPointerException $r24, $r25, $r26, $r27, $r28, $r29;
        java.lang.Iterable $r31, $r36;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.AnnotationMirror;

        $r9 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r1, "intMapping");

        $r30 = interfaceinvoke $r9.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if $r30 != null goto label1;

        $r29 = new java.lang.NullPointerException;

        specialinvoke $r29.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.collections.List<*>");

        throw $r29;

     label1:
        $r10 = (java.util.List) $r30;

        $r31 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r31, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r11;

        r3 = interfaceinvoke $r31.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        r7 = r2;

        if r5 != null goto label3;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type javax.lang.model.element.AnnotationValue");

        throw $r28;

     label3:
        $r16 = (javax.lang.model.element.AnnotationValue) r5;

        r32 = interfaceinvoke $r16.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if r32 != null goto label4;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type javax.lang.model.element.AnnotationMirror");

        throw $r27;

     label4:
        r6 = (javax.lang.model.element.AnnotationMirror) r32;

        $r17 = new androidx.resourceinspection.processor.IntMap;

        $r18 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r6, "name");

        r33 = interfaceinvoke $r18.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if r33 != null goto label5;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.String");

        throw $r26;

     label5:
        $r19 = (java.lang.String) r33;

        $r20 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r6, "value");

        r34 = interfaceinvoke $r20.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if r34 != null goto label6;

        $r25 = new java.lang.NullPointerException;

        specialinvoke $r25.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Int");

        throw $r25;

     label6:
        $r21 = (java.lang.Integer) r34;

        $i1 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r22 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r6, "mask");

        r35 = interfaceinvoke $r22.<javax.lang.model.element.AnnotationValue: java.lang.Object getValue()>();

        if r35 != null goto label7;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Int");

        throw $r24;

     label7:
        $r23 = (java.lang.Integer) r35;

        $i2 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        specialinvoke $r17.<androidx.resourceinspection.processor.IntMap: void <init>(java.lang.String,int,int,javax.lang.model.element.AnnotationMirror)>($r19, $i1, $i2, r6);

        r8 = $r17;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label2;

     label8:
        $r12 = (java.util.List) r2;

        $r36 = (java.lang.Iterable) $r12;

        $r13 = new androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1;

        specialinvoke $r13.<androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1: void <init>()>();

        $r14 = (java.util.Comparator) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r36, $r14);

        return $r15;
    }

    private final boolean validateIntMapping(javax.lang.model.element.Element, java.util.List)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0, r7, $r99, $r135;
        javax.lang.model.element.Element r1, r5, $r102, r107, $r137;
        java.util.List r2, $r12, $r17, $r37, $r51, $r62, $r86, r88, r93, $r94, $r118, $r124, $r125, $r129, $r154, $r160, $r161, $r165;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z13, $z14, $z15, $z16, $z21, z22, z23, $z25, $z26, $z28, $z31, $z37, $z39, z43, $z46, z47, z49, z50, z52, $z54, z55, $z56, z57, z58, z60, z61, z62, z63, $z64, z69, z71, z72, z74, $z76, z77, $z78, z79, z80, z82, z83, z84, z85, $z86;
        javax.lang.model.element.AnnotationMirror r3, r4, $r31, $r46, $r103, r104, r106, $r138, $r139;
        java.lang.String r6, $r23, $r26, $r30, $r40, $r43, $r45, $r67, r83, $r100, $r101, $r134, $r136, $r170;
        javax.lang.model.element.AnnotationValue r8, $r105, r108, $r140;
        java.util.Collection $r9, $r14, $r48, $r72, r90, $r109, $r121, $r141, $r157, $r171;
        java.util.ArrayList $r10, $r15, $r35, $r49, $r60, $r70;
        java.lang.Iterable $r11, $r16, $r20, $r50, $r54, $r73, r77, r89, $r95, r110, r120, $r126, r130, $r142, r146, r156, $r162, r166;
        java.util.LinkedHashMap $r13, $r47, $r78;
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 $r18;
        kotlin.jvm.functions.Function1 $r19, $r53;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i21, $i23, $i24;
        java.lang.StringBuilder $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r38, $r39, $r41, $r42, $r44, $r55, $r56, $r57, $r58, $r59, $r63, $r64, $r65, $r66, $r68, $r69;
        kotlin.Pair $r32;
        java.lang.Integer $r33, $r34, $r115;
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 $r52;
        java.util.Iterator $r74, $r80, $r91, r96, r112, r122, r127, r131, r143, r148, r158, r163, r167;
        java.lang.Object r75, r81, r85, $r87, r92, r97, r113, $r117, $r119, r123, $r128, $r132, r144, r149, $r153, $r155, r159, $r164, $r168;
        androidx.resourceinspection.processor.IntMap r76, r82, $r98, $r114, $r133, $r145, $r150, $r169;
        java.util.Map r79, $r111, $r147;
        byte b20, b22, b25, b26;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.util.List;

        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label01;

        return 1;

     label01:
        z22 = 0;

        z23 = 1;

        $r73 = (java.lang.Iterable) r2;

        $z3 = $r73 instanceof java.util.Collection;

        if $z3 == 0 goto label02;

        $r72 = (java.util.Collection) $r73;

        $z21 = interfaceinvoke $r72.<java.util.Collection: boolean isEmpty()>();

        if $z21 == 0 goto label02;

        $z25 = 1;

        goto label07;

     label02:
        $r74 = interfaceinvoke $r73.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z26 = interfaceinvoke $r74.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label06;

        r75 = interfaceinvoke $r74.<java.util.Iterator: java.lang.Object next()>();

        r76 = (androidx.resourceinspection.processor.IntMap) r75;

        $i18 = virtualinvoke r76.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        if $i18 != 0 goto label04;

        $z28 = 1;

        goto label05;

     label04:
        $z28 = 0;

     label05:
        if $z28 != 0 goto label03;

        $z25 = 0;

        goto label07;

     label06:
        $z25 = 1;

     label07:
        z0 = $z25;

        r77 = (java.lang.Iterable) r2;

        $r78 = new java.util.LinkedHashMap;

        specialinvoke $r78.<java.util.LinkedHashMap: void <init>()>();

        r79 = (java.util.Map) $r78;

        $r80 = interfaceinvoke r77.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z31 = interfaceinvoke $r80.<java.util.Iterator: boolean hasNext()>();

        if $z31 == 0 goto label11;

        r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();

        r82 = (androidx.resourceinspection.processor.IntMap) r81;

        r83 = virtualinvoke r82.<androidx.resourceinspection.processor.IntMap: java.lang.String getName()>();

        r85 = interfaceinvoke r79.<java.util.Map: java.lang.Object get(java.lang.Object)>(r83);

        if r85 != null goto label09;

        $r70 = new java.util.ArrayList;

        specialinvoke $r70.<java.util.ArrayList: void <init>()>();

        $r86 = (java.util.List) $r70;

        interfaceinvoke r79.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r83, $r86);

        $r87 = $r86;

        goto label10;

     label09:
        $r87 = r85;

     label10:
        r88 = (java.util.List) $r87;

        interfaceinvoke r88.<java.util.List: boolean add(java.lang.Object)>(r81);

        goto label08;

     label11:
        $r9 = interfaceinvoke r79.<java.util.Map: java.util.Collection values()>();

        r89 = (java.lang.Iterable) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r90 = (java.util.Collection) $r10;

        $r91 = interfaceinvoke r89.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z37 = interfaceinvoke $r91.<java.util.Iterator: boolean hasNext()>();

        if $z37 == 0 goto label15;

        r92 = interfaceinvoke $r91.<java.util.Iterator: java.lang.Object next()>();

        r93 = (java.util.List) r92;

        $i17 = interfaceinvoke r93.<java.util.List: int size()>();

        if $i17 <= 1 goto label13;

        $z39 = 1;

        goto label14;

     label13:
        $z39 = 0;

     label14:
        if $z39 == 0 goto label12;

        interfaceinvoke r90.<java.util.Collection: boolean add(java.lang.Object)>(r92);

        goto label12;

     label15:
        $r94 = (java.util.List) r90;

        $r11 = (java.lang.Iterable) $r94;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List flatten(java.lang.Iterable)>($r11);

        $r95 = (java.lang.Iterable) $r12;

        r96 = interfaceinvoke $r95.<java.lang.Iterable: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label21;

        r97 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        $r98 = (androidx.resourceinspection.processor.IntMap) r97;

        $r99 = r0;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate int ");

        if z0 == 0 goto label17;

        $r100 = "enum";

        goto label18;

     label17:
        $r100 = "flag";

     label18:
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entry name: \"");

        $r67 = virtualinvoke $r98.<androidx.resourceinspection.processor.IntMap: java.lang.String getName()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r101 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r102 = r1;

        $r103 = virtualinvoke $r98.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        r104 = virtualinvoke $r98.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        if r104 != null goto label19;

        $r105 = null;

        goto label20;

     label19:
        r106 = r104;

        z43 = 0;

        r107 = r1;

        r108 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r106, "name");

        $r99 = r0;

        $r102 = r107;

        $r105 = r108;

     label20:
        specialinvoke $r99.<androidx.resourceinspection.processor.LayoutInspectionStep: void printError(java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>($r101, $r102, $r103, $r105);

        goto label16;

     label21:
        $r109 = (java.util.Collection) $r94;

        $z5 = interfaceinvoke $r109.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label22;

        $z46 = 1;

        goto label23;

     label22:
        $z46 = 0;

     label23:
        if $z46 == 0 goto label24;

        z23 = 0;

     label24:
        if z0 == 0 goto label41;

        z47 = 0;

        r110 = (java.lang.Iterable) r2;

        $r47 = new java.util.LinkedHashMap;

        specialinvoke $r47.<java.util.LinkedHashMap: void <init>()>();

        $r111 = (java.util.Map) $r47;

        r112 = interfaceinvoke r110.<java.lang.Iterable: java.util.Iterator iterator()>();

     label25:
        $z13 = interfaceinvoke r112.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label28;

        r113 = interfaceinvoke r112.<java.util.Iterator: java.lang.Object next()>();

        $r114 = (androidx.resourceinspection.processor.IntMap) r113;

        z49 = 0;

        $i16 = virtualinvoke $r114.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $r115 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        z50 = 0;

        $r117 = interfaceinvoke $r111.<java.util.Map: java.lang.Object get(java.lang.Object)>($r115);

        if $r117 != null goto label26;

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        $r118 = (java.util.List) $r60;

        interfaceinvoke $r111.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r115, $r118);

        $r119 = $r118;

        goto label27;

     label26:
        $r119 = $r117;

     label27:
        $r62 = (java.util.List) $r119;

        interfaceinvoke $r62.<java.util.List: boolean add(java.lang.Object)>(r113);

        goto label25;

     label28:
        $r48 = interfaceinvoke $r111.<java.util.Map: java.util.Collection values()>();

        z52 = 0;

        r120 = (java.lang.Iterable) $r48;

        $r49 = new java.util.ArrayList;

        specialinvoke $r49.<java.util.ArrayList: void <init>()>();

        $r121 = (java.util.Collection) $r49;

        r122 = interfaceinvoke r120.<java.lang.Iterable: java.util.Iterator iterator()>();

     label29:
        $z54 = interfaceinvoke r122.<java.util.Iterator: boolean hasNext()>();

        if $z54 == 0 goto label32;

        r123 = interfaceinvoke r122.<java.util.Iterator: java.lang.Object next()>();

        $r124 = (java.util.List) r123;

        z55 = 0;

        $i15 = interfaceinvoke $r124.<java.util.List: int size()>();

        if $i15 <= 1 goto label30;

        $z56 = 1;

        goto label31;

     label30:
        $z56 = 0;

     label31:
        if $z56 == 0 goto label29;

        interfaceinvoke $r121.<java.util.Collection: boolean add(java.lang.Object)>(r123);

        goto label29;

     label32:
        $r125 = (java.util.List) $r121;

        $r126 = (java.lang.Iterable) $r125;

        z57 = 0;

        r127 = interfaceinvoke $r126.<java.lang.Iterable: java.util.Iterator iterator()>();

     label33:
        $z14 = interfaceinvoke r127.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label38;

        $r128 = interfaceinvoke r127.<java.util.Iterator: java.lang.Object next()>();

        $r129 = (java.util.List) $r128;

        z58 = 0;

        r130 = (java.lang.Iterable) $r129;

        r131 = interfaceinvoke r130.<java.lang.Iterable: java.util.Iterator iterator()>();

     label34:
        $z16 = interfaceinvoke r131.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label37;

        $r132 = interfaceinvoke r131.<java.util.Iterator: java.lang.Object next()>();

        $r133 = (androidx.resourceinspection.processor.IntMap) $r132;

        z60 = 0;

        $r50 = (java.lang.Iterable) $r129;

        $r51 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)>($r50, $r133);

        $r54 = (java.lang.Iterable) $r51;

        $r52 = <androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 INSTANCE>;

        $r53 = (kotlin.jvm.functions.Function1) $r52;

        $r134 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r54, null, null, null, 0, null, $r53, 31, null);

        $r135 = r0;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int enum value ");

        $i14 = virtualinvoke $r133.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is duplicated on entries ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r134);

        $r136 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        $r137 = r1;

        $r138 = virtualinvoke $r133.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        $r139 = virtualinvoke $r133.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        if $r139 != null goto label35;

        $r140 = null;

        goto label36;

     label35:
        z61 = 0;

        z62 = 0;

        r3 = $r139;

        r4 = $r138;

        r5 = r1;

        r6 = $r136;

        r7 = r0;

        r8 = staticinvoke <com.google.auto.common.AnnotationMirrors: javax.lang.model.element.AnnotationValue getAnnotationValue(javax.lang.model.element.AnnotationMirror,java.lang.String)>(r3, "value");

        $r135 = r7;

        $r136 = r6;

        $r137 = r5;

        $r138 = r4;

        $r140 = r8;

     label36:
        specialinvoke $r135.<androidx.resourceinspection.processor.LayoutInspectionStep: void printError(java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>($r136, $r137, $r138, $r140);

        goto label34;

     label37:
        goto label33;

     label38:
        $r141 = (java.util.Collection) $r125;

        z63 = 0;

        $z15 = interfaceinvoke $r141.<java.util.Collection: boolean isEmpty()>();

        if $z15 != 0 goto label39;

        $z64 = 1;

        goto label40;

     label39:
        $z64 = 0;

     label40:
        if $z64 == 0 goto label63;

        z23 = 0;

        goto label63;

     label41:
        $r142 = (java.lang.Iterable) r2;

        r143 = interfaceinvoke $r142.<java.lang.Iterable: java.util.Iterator iterator()>();

     label42:
        $z6 = interfaceinvoke r143.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label44;

        r144 = interfaceinvoke r143.<java.util.Iterator: java.lang.Object next()>();

        $r145 = (androidx.resourceinspection.processor.IntMap) r144;

        $i7 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        $i8 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $i9 = $i7 & $i8;

        $i10 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        if $i9 == $i10 goto label43;

        $i11 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        if $i11 == 0 goto label43;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int flag mask 0x");

        i19 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        b20 = 16;

        $i12 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(b20);

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i19, $i12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r40, "java.lang.Integer.toStri\u2026(this, checkRadix(radix))");

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not reveal value 0x");

        i21 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        b22 = 16;

        $i13 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(b22);

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(i21, $i13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r43, "java.lang.Integer.toStri\u2026(this, checkRadix(radix))");

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = virtualinvoke $r145.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, $r45, r1, $r46, null, 8, null);

        z23 = 0;

     label43:
        goto label42;

     label44:
        z69 = 0;

        r146 = (java.lang.Iterable) r2;

        $r13 = new java.util.LinkedHashMap;

        specialinvoke $r13.<java.util.LinkedHashMap: void <init>()>();

        $r147 = (java.util.Map) $r13;

        r148 = interfaceinvoke r146.<java.lang.Iterable: java.util.Iterator iterator()>();

     label45:
        $z7 = interfaceinvoke r148.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label50;

        r149 = interfaceinvoke r148.<java.util.Iterator: java.lang.Object next()>();

        $r150 = (androidx.resourceinspection.processor.IntMap) r149;

        z71 = 0;

        $r32 = new kotlin.Pair;

        $i5 = virtualinvoke $r150.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        if $i5 == 0 goto label46;

        $i23 = virtualinvoke $r150.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        goto label47;

     label46:
        $i23 = virtualinvoke $r150.<androidx.resourceinspection.processor.IntMap: int getValue()>();

     label47:
        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $i6 = virtualinvoke $r150.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        specialinvoke $r32.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r33, $r34);

        z72 = 0;

        $r153 = interfaceinvoke $r147.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32);

        if $r153 != null goto label48;

        $r35 = new java.util.ArrayList;

        specialinvoke $r35.<java.util.ArrayList: void <init>()>();

        $r154 = (java.util.List) $r35;

        interfaceinvoke $r147.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r154);

        $r155 = $r154;

        goto label49;

     label48:
        $r155 = $r153;

     label49:
        $r37 = (java.util.List) $r155;

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>(r149);

        goto label45;

     label50:
        $r14 = interfaceinvoke $r147.<java.util.Map: java.util.Collection values()>();

        z74 = 0;

        r156 = (java.lang.Iterable) $r14;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r157 = (java.util.Collection) $r15;

        r158 = interfaceinvoke r156.<java.lang.Iterable: java.util.Iterator iterator()>();

     label51:
        $z76 = interfaceinvoke r158.<java.util.Iterator: boolean hasNext()>();

        if $z76 == 0 goto label54;

        r159 = interfaceinvoke r158.<java.util.Iterator: java.lang.Object next()>();

        $r160 = (java.util.List) r159;

        z77 = 0;

        $i4 = interfaceinvoke $r160.<java.util.List: int size()>();

        if $i4 <= 1 goto label52;

        $z78 = 1;

        goto label53;

     label52:
        $z78 = 0;

     label53:
        if $z78 == 0 goto label51;

        interfaceinvoke $r157.<java.util.Collection: boolean add(java.lang.Object)>(r159);

        goto label51;

     label54:
        $r161 = (java.util.List) $r157;

        $r162 = (java.lang.Iterable) $r161;

        z79 = 0;

        r163 = interfaceinvoke $r162.<java.lang.Iterable: java.util.Iterator iterator()>();

     label55:
        $z8 = interfaceinvoke r163.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label60;

        $r164 = interfaceinvoke r163.<java.util.Iterator: java.lang.Object next()>();

        $r165 = (java.util.List) $r164;

        z80 = 0;

        r166 = (java.lang.Iterable) $r165;

        r167 = interfaceinvoke r166.<java.lang.Iterable: java.util.Iterator iterator()>();

     label56:
        $z10 = interfaceinvoke r167.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label59;

        $r168 = interfaceinvoke r167.<java.util.Iterator: java.lang.Object next()>();

        $r169 = (androidx.resourceinspection.processor.IntMap) $r168;

        z82 = 0;

        $r16 = (java.lang.Iterable) $r165;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)>($r16, $r169);

        $r20 = (java.lang.Iterable) $r17;

        $r18 = <androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 INSTANCE>;

        $r19 = (kotlin.jvm.functions.Function1) $r18;

        $r170 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r20, null, null, null, 0, null, $r19, 31, null);

        $i0 = virtualinvoke $r169.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        if $i0 == 0 goto label57;

        $i24 = virtualinvoke $r169.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        goto label58;

     label57:
        $i24 = virtualinvoke $r169.<androidx.resourceinspection.processor.IntMap: int getValue()>();

     label58:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int flag mask 0x");

        b25 = 16;

        z83 = 0;

        $i1 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(b25);

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i24, $i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "java.lang.Integer.toStri\u2026(this, checkRadix(radix))");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and value 0x");

        b26 = 16;

        z84 = 0;

        $i3 = virtualinvoke $r169.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $i2 = staticinvoke <kotlin.text.CharsKt: int checkRadix(int)>(b26);

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i3, $i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "java.lang.Integer.toStri\u2026(this, checkRadix(radix))");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is duplicated on entries ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r170);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = virtualinvoke $r169.<androidx.resourceinspection.processor.IntMap: javax.lang.model.element.AnnotationMirror getAnnotation()>();

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, $r30, r1, $r31, null, 8, null);

        goto label56;

     label59:
        goto label55;

     label60:
        $r171 = (java.util.Collection) $r161;

        z85 = 0;

        $z9 = interfaceinvoke $r171.<java.util.Collection: boolean isEmpty()>();

        if $z9 != 0 goto label61;

        $z86 = 1;

        goto label62;

     label61:
        $z86 = 0;

     label62:
        if $z86 == 0 goto label63;

        z23 = 0;

     label63:
        return z23;
    }

    private final androidx.resourceinspection.processor.AttributeType inferAttributeType(javax.lang.model.element.ExecutableElement, java.util.List)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.ExecutableElement r1;
        java.util.List r2;
        javax.lang.model.type.TypeKind r3;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r4;
        java.lang.Object r5;
        androidx.resourceinspection.processor.IntMap r6;
        javax.lang.model.type.TypeMirror $r7, $r18;
        int[] $r8;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z14;
        javax.lang.model.element.Element $r9, $r10, $r11, $r12;
        java.util.Collection $r13, $r17;
        java.lang.IllegalArgumentException $r14;
        androidx.resourceinspection.processor.AttributeType $r15;
        java.lang.Iterable $r16;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.ExecutableElement;

        r2 := @parameter1: java.util.List;

        $r7 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        r3 = interfaceinvoke $r7.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if r3 != null goto label01;

        $i3 = -1;

        goto label02;

     label01:
        $r8 = <androidx.resourceinspection.processor.LayoutInspectionStep$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r3.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i3 = $r8[$i1];

     label02:
        i0 = $i3;

        tableswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label23;
            case 9: goto label25;
            case 10: goto label25;
            default: goto label27;
        };

     label03:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType BOOLEAN>;

        goto label28;

     label04:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType BYTE>;

        goto label28;

     label05:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType CHAR>;

        goto label28;

     label06:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType DOUBLE>;

        goto label28;

     label07:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType FLOAT>;

        goto label28;

     label08:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType SHORT>;

        goto label28;

     label09:
        $r10 = (javax.lang.model.element.Element) r1;

        $z3 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAnnotationPresent(javax.lang.model.element.Element,java.lang.String)>($r10, "androidx.annotation.ColorInt");

        if $z3 == 0 goto label10;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType COLOR>;

        goto label28;

     label10:
        $r11 = (javax.lang.model.element.Element) r1;

        $z4 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAnnotationPresent(javax.lang.model.element.Element,java.lang.String)>($r11, "androidx.annotation.GravityInt");

        if $z4 == 0 goto label11;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType GRAVITY>;

        goto label28;

     label11:
        $r12 = (javax.lang.model.element.Element) r1;

        $z5 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean hasResourceIdAnnotation(javax.lang.model.element.Element)>($r12);

        if $z5 == 0 goto label12;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType RESOURCE_ID>;

        goto label28;

     label12:
        $r16 = (java.lang.Iterable) r2;

        $z6 = $r16 instanceof java.util.Collection;

        if $z6 == 0 goto label13;

        $r13 = (java.util.Collection) $r16;

        $z8 = interfaceinvoke $r13.<java.util.Collection: boolean isEmpty()>();

        if $z8 == 0 goto label13;

        $z10 = 0;

        goto label18;

     label13:
        r4 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z11 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label17;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.resourceinspection.processor.IntMap) r5;

        $i2 = virtualinvoke r6.<androidx.resourceinspection.processor.IntMap: int getMask()>();

        if $i2 == 0 goto label15;

        $z12 = 1;

        goto label16;

     label15:
        $z12 = 0;

     label16:
        if $z12 == 0 goto label14;

        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        if $z10 == 0 goto label19;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT_FLAG>;

        goto label28;

     label19:
        $r17 = (java.util.Collection) r2;

        $z7 = interfaceinvoke $r17.<java.util.Collection: boolean isEmpty()>();

        if $z7 != 0 goto label20;

        $z14 = 1;

        goto label21;

     label20:
        $z14 = 0;

     label21:
        if $z14 == 0 goto label22;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT_ENUM>;

        goto label28;

     label22:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT>;

        goto label28;

     label23:
        $r9 = (javax.lang.model.element.Element) r1;

        $z2 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAnnotationPresent(javax.lang.model.element.Element,java.lang.String)>($r9, "androidx.annotation.ColorLong");

        if $z2 == 0 goto label24;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType COLOR>;

        goto label28;

     label24:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType LONG>;

        goto label28;

     label25:
        $r18 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.type.TypeMirror getReturnType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "getter.returnType");

        $z1 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAssignableTo(javax.lang.model.type.TypeMirror,java.lang.String)>($r18, "android.graphics.Color");

        if $z1 == 0 goto label26;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType COLOR>;

        goto label28;

     label26:
        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType OBJECT>;

        goto label28;

     label27:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unexpected attribute type");

        throw $r14;

     label28:
        return $r15;
    }

    private final java.util.List inferShadowedAttributes(javax.lang.model.element.TypeElement)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.TypeElement r1;
        java.lang.Iterable $r2, r29;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.Object r5, $r17;
        java.util.List r6, $r26, $r28, r30;
        boolean z3, $z4, $z5, $z6, $z7;
        javax.lang.model.element.Element $r7, $r12, $r13, $r18, $r19, $r21, $r22;
        javax.lang.model.element.PackageElement $r8;
        java.lang.CharSequence $r9, $r10;
        java.util.ArrayList $r11;
        javax.lang.model.element.AnnotationMirror $r14, $r20, $r23;
        java.util.Map $r15;
        java.lang.String $r16;
        javax.lang.model.type.TypeMirror r24, r27;
        javax.lang.model.element.Name r25;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        r24 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r24, "viewType.asType()");

        $z4 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: boolean isAssignableTo(javax.lang.model.type.TypeMirror,java.lang.String)>(r24, "android.view.View");

        if $z4 != 0 goto label1;

        $r22 = (javax.lang.model.element.Element) r1;

        $r21 = (javax.lang.model.element.Element) r1;

        $r23 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element,java.lang.String)>($r21, "androidx.resourceinspection.annotation.AppCompatShadowedAttributes");

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@AppCompatShadowedAttributes must be on a subclass of android.view.View", $r22, $r23, null, 8, null);

        return null;

     label1:
        $r7 = (javax.lang.model.element.Element) r1;

        $r8 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.PackageElement getPackage(javax.lang.model.element.Element)>($r7);

        r25 = interfaceinvoke $r8.<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r25, "getPackage(viewType).qualifiedName");

        $r10 = (java.lang.CharSequence) r25;

        $r9 = (java.lang.CharSequence) "androidx.appcompat.";

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r10, $r9, 0, 2, null);

        if $z5 != 0 goto label2;

        $r19 = (javax.lang.model.element.Element) r1;

        $r18 = (javax.lang.model.element.Element) r1;

        $r20 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element,java.lang.String)>($r18, "androidx.resourceinspection.annotation.AppCompatShadowedAttributes");

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@AppCompatShadowedAttributes is only supported in the androidx.appcompat package", $r19, $r20, null, 8, null);

        return null;

     label2:
        $r26 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "viewType.interfaces");

        $r2 = (java.lang.Iterable) $r26;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.Collection) $r11;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r27 = (javax.lang.model.type.TypeMirror) r5;

        $r15 = <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.Map APP_COMPAT_INTERFACE_MAP>;

        $r16 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        r6 = (java.util.List) $r17;

        z3 = 0;

        $r28 = r6;

        if r6 == null goto label4;

        goto label5;

     label4:
        $r28 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label5:
        r29 = (java.lang.Iterable) $r28;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, r29);

        goto label3;

     label6:
        r30 = (java.util.List) r3;

        $z7 = interfaceinvoke r30.<java.util.List: boolean isEmpty()>();

        if $z7 == 0 goto label7;

        $r13 = (javax.lang.model.element.Element) r1;

        $r12 = (javax.lang.model.element.Element) r1;

        $r14 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element,java.lang.String)>($r12, "androidx.resourceinspection.annotation.AppCompatShadowedAttributes");

        staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep,java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue,int,java.lang.Object)>(r0, "@AppCompatShadowedAttributes is present on this view, but it does not implement any interfaces that indicate it has shadowed attributes.", $r13, $r14, null, 8, null);

        return null;

     label7:
        return r30;
    }

    private final boolean isAttributeInRFile(java.lang.String, java.lang.String)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.lang.String r1, r2, $r8;
        javax.lang.model.element.TypeElement r3;
        java.util.List r4, r21;
        javax.lang.model.element.Element r5, $r14, r19, $r26;
        javax.'annotation'.processing.ProcessingEnvironment $r6;
        javax.lang.model.util.Elements $r7;
        java.lang.CharSequence $r9, $r11, $r13;
        boolean $z1, $z2, $z3, $z4, z5, z6, z8, z9, $z10;
        javax.lang.model.element.Name $r10, $r12;
        java.lang.Iterable r15, r16, r22, r23;
        java.util.Iterator r17, r24;
        java.lang.Object r18, $r20, r25, $r27;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r7 = interfaceinvoke $r6.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r8 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r1, ".R");

        $r9 = (java.lang.CharSequence) $r8;

        r3 = interfaceinvoke $r7.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r9);

        if r3 != null goto label01;

        $r14 = null;

        goto label11;

     label01:
        r4 = interfaceinvoke r3.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        if r4 != null goto label02;

        $r14 = null;

        goto label11;

     label02:
        r15 = (java.lang.Iterable) r4;

        z5 = 0;

        r16 = r15;

        z6 = 0;

        r17 = interfaceinvoke r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (javax.lang.model.element.Element) r18;

        $r12 = interfaceinvoke r19.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r13 = (java.lang.CharSequence) "attr";

        $z4 = interfaceinvoke $r12.<javax.lang.model.element.Name: boolean contentEquals(java.lang.CharSequence)>($r13);

        if $z4 == 0 goto label03;

        $r20 = r18;

        goto label05;

     label04:
        $r20 = null;

     label05:
        r5 = (javax.lang.model.element.Element) $r20;

        if r5 != null goto label06;

        $r14 = null;

        goto label11;

     label06:
        r21 = interfaceinvoke r5.<javax.lang.model.element.Element: java.util.List getEnclosedElements()>();

        if r21 != null goto label07;

        $r14 = null;

        goto label11;

     label07:
        r22 = (java.lang.Iterable) r21;

        z8 = 0;

        r23 = r22;

        z9 = 0;

        r24 = interfaceinvoke r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (javax.lang.model.element.Element) r25;

        $r10 = interfaceinvoke $r26.<javax.lang.model.element.Element: javax.lang.model.element.Name getSimpleName()>();

        $r11 = (java.lang.CharSequence) r2;

        $z3 = interfaceinvoke $r10.<javax.lang.model.element.Name: boolean contentEquals(java.lang.CharSequence)>($r11);

        if $z3 == 0 goto label08;

        $r27 = r25;

        goto label10;

     label09:
        $r27 = null;

     label10:
        $r14 = (javax.lang.model.element.Element) $r27;

     label11:
        if $r14 == null goto label12;

        $z10 = 1;

        goto label13;

     label12:
        $z10 = 0;

     label13:
        return $z10;
    }

    private final boolean hasResourceIdAnnotation(javax.lang.model.element.Element)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.Element $r1, $r7;
        java.util.Iterator r2;
        java.lang.Object r3;
        javax.lang.model.element.AnnotationMirror r4;
        kotlin.text.Regex r5;
        boolean z2, $z3, $z4, $z5, $z6, $z7;
        javax.lang.model.type.DeclaredType $r6;
        javax.lang.model.element.TypeElement $r8;
        java.util.Collection $r9;
        java.util.List $r10;
        java.lang.Iterable $r11;
        javax.lang.model.element.Name r12;
        java.lang.CharSequence r13;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        $r1 := @parameter0: javax.lang.model.element.Element;

        $r10 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "this.annotationMirrors");

        $r11 = (java.lang.Iterable) $r10;

        $z3 = $r11 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r9 = (java.util.Collection) $r11;

        $z5 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 0;

        goto label4;

     label1:
        r2 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.lang.model.element.AnnotationMirror) r3;

        $r6 = interfaceinvoke r4.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();

        $r7 = interfaceinvoke $r6.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r8 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r7);

        r12 = interfaceinvoke $r8.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "asType(it.annotationType\u2026sElement()).qualifiedName");

        r13 = (java.lang.CharSequence) r12;

        r5 = <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex RESOURCE_ID_ANNOTATION>;

        z2 = 0;

        $z4 = virtualinvoke r5.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>(r13);

        if $z4 == 0 goto label2;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        return $z6;
    }

    private final boolean isAssignableTo(javax.lang.model.type.TypeMirror, java.lang.String)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.type.TypeMirror $r1, $r10;
        java.lang.String r2, $r16, r18;
        javax.lang.model.element.TypeElement r3, r4;
        boolean z0, $z2, z3;
        javax.'annotation'.processing.ProcessingEnvironment $r5, $r8;
        javax.lang.model.util.Elements $r6;
        java.lang.CharSequence $r7;
        javax.lang.model.util.Types $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.Throwable $r17;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        $r1 := @parameter0: javax.lang.model.type.TypeMirror;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r6 = interfaceinvoke $r5.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r7 = (java.lang.CharSequence) r2;

        r4 = interfaceinvoke $r6.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r7);

        z0 = 0;

        z3 = 0;

        if r4 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to exist");

        r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        $r17 = (java.lang.Throwable) $r15;

        throw $r17;

     label1:
        r3 = r4;

        $r8 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r9 = interfaceinvoke $r8.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        $r10 = interfaceinvoke r3.<javax.lang.model.element.TypeElement: javax.lang.model.type.TypeMirror asType()>();

        $z2 = interfaceinvoke $r9.<javax.lang.model.util.Types: boolean isAssignable(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r1, $r10);

        return $z2;
    }

    private final void printError(java.lang.String, javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.AnnotationValue)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.lang.String r1;
        javax.lang.model.element.Element r2;
        javax.lang.model.element.AnnotationMirror r3;
        javax.lang.model.element.AnnotationValue r4;
        javax.'annotation'.processing.ProcessingEnvironment $r5;
        javax.'annotation'.processing.Messager $r6;
        java.lang.CharSequence $r7;
        javax.tools.Diagnostic$Kind $r8;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.lang.model.element.Element;

        r3 := @parameter2: javax.lang.model.element.AnnotationMirror;

        r4 := @parameter3: javax.lang.model.element.AnnotationValue;

        $r5 = r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.'annotation'.processing.ProcessingEnvironment processingEnv>;

        $r6 = interfaceinvoke $r5.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        $r8 = <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind ERROR>;

        $r7 = (java.lang.CharSequence) r1;

        interfaceinvoke $r6.<javax.'annotation'.processing.Messager: void printMessage(javax.tools.Diagnostic$Kind,java.lang.CharSequence,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>($r8, $r7, r2, r3, r4);

        return;
    }

    static void printError$default(androidx.resourceinspection.processor.LayoutInspectionStep, java.lang.String, javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.AnnotationValue, int, java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        javax.lang.model.element.Element r3;
        javax.lang.model.element.AnnotationMirror r4;
        javax.lang.model.element.AnnotationValue r5;

        r0 := @parameter0: androidx.resourceinspection.processor.LayoutInspectionStep;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.lang.model.element.Element;

        r4 := @parameter3: javax.lang.model.element.AnnotationMirror;

        r5 := @parameter4: javax.lang.model.element.AnnotationValue;

        i0 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r5 = null;

     label3:
        specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: void printError(java.lang.String,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationValue)>(r1, r3, r4, r5);

        return;
    }

    private final javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element, java.lang.String)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.Element $r1, $r8;
        java.lang.String r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.element.AnnotationMirror r5, $r6, r14;
        boolean $z2, $z3;
        javax.lang.model.type.DeclaredType $r7;
        javax.lang.model.element.TypeElement $r9;
        javax.lang.model.element.Name $r10;
        java.lang.CharSequence $r11;
        java.util.List $r12;
        java.lang.Iterable $r13;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.lang.String;

        $r12 = interfaceinvoke $r1.<javax.lang.model.element.Element: java.util.List getAnnotationMirrors()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "this.annotationMirrors");

        $r13 = (java.lang.Iterable) $r12;

        r3 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.element.AnnotationMirror) r4;

        $r7 = interfaceinvoke r5.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();

        $r9 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.TypeElement asType(javax.lang.model.element.Element)>($r8);

        $r10 = interfaceinvoke $r9.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r11 = (java.lang.CharSequence) r2;

        $z3 = interfaceinvoke $r10.<javax.lang.model.element.Name: boolean contentEquals(java.lang.CharSequence)>($r11);

        if $z3 == 0 goto label1;

        r14 = (javax.lang.model.element.AnnotationMirror) r4;

        return r14;

     label2:
        $r6 = (javax.lang.model.element.AnnotationMirror) null;

        return $r6;
    }

    private final boolean isAnnotationPresent(javax.lang.model.element.Element, java.lang.String)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep r0;
        javax.lang.model.element.Element $r1;
        java.lang.String r2;
        javax.lang.model.element.AnnotationMirror $r3;
        boolean $z0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep;

        $r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep: javax.lang.model.element.AnnotationMirror getAnnotationMirror(javax.lang.model.element.Element,java.lang.String)>($r1, r2);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final kotlin.text.Regex access$getATTRIBUTE_VALUE$cp()
    {
        kotlin.text.Regex $r0;

        $r0 = <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex ATTRIBUTE_VALUE>;

        return $r0;
    }

    public static final kotlin.text.Regex access$getRESOURCE_ID_ANNOTATION$cp()
    {
        kotlin.text.Regex $r0;

        $r0 = <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex RESOURCE_ID_ANNOTATION>;

        return $r0;
    }

    public static final java.util.List access$getVIEW_INSPECTOR_CLASSES$cp()
    {
        java.util.List $r0;

        $r0 = <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List VIEW_INSPECTOR_CLASSES>;

        return $r0;
    }

    public static final java.util.Map access$getAPP_COMPAT_INTERFACE_MAP$cp()
    {
        java.util.Map $r0;

        $r0 = <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.Map APP_COMPAT_INTERFACE_MAP>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.resourceinspection.processor.IntMap[] r0;
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion $r1;
        kotlin.text.Regex $r2, $r3;
        java.util.List $r4, $r7, $r13, $r20, $r24, $r28, $r32, $r36;
        androidx.resourceinspection.processor.ShadowedAttribute $r5, $r6, $r9, $r14, $r16, $r18, $r22, $r23, $r26, $r27, $r30, $r31, $r34, $r35;
        kotlin.Pair $r8, $r21, $r25, $r29, $r33, $r37;
        androidx.resourceinspection.processor.IntMap $r10, $r12;
        androidx.resourceinspection.processor.AttributeType $r11, $r15, $r17, $r19;
        java.util.Map $r38;
        java.lang.String r39, r40;
        boolean z0, z1;
        java.lang.String[] r41;
        kotlin.Pair[] r42;
        androidx.resourceinspection.processor.ShadowedAttribute[] r43, r44, r45, r46, r47, r48;

        $r1 = new androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        specialinvoke $r1.<androidx.resourceinspection.processor.LayoutInspectionStep$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.resourceinspection.processor.LayoutInspectionStep: androidx.resourceinspection.processor.LayoutInspectionStep$Companion Companion> = $r1;

        r39 = "(\\w+(?:\\.\\w+)*):(\\w+)";

        z0 = 0;

        $r2 = new kotlin.text.Regex;

        specialinvoke $r2.<kotlin.text.Regex: void <init>(java.lang.String)>(r39);

        <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex ATTRIBUTE_VALUE> = $r2;

        r40 = "androidx?\\.annotation\\.[A-Z]\\w+Res";

        z1 = 0;

        $r3 = new kotlin.text.Regex;

        specialinvoke $r3.<kotlin.text.Regex: void <init>(java.lang.String)>(r40);

        <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex RESOURCE_ID_ANNOTATION> = $r3;

        r41 = newarray (java.lang.String)[3];

        r41[0] = "android.view.inspector.InspectionCompanion";

        r41[1] = "android.view.inspector.PropertyReader";

        r41[2] = "android.view.inspector.PropertyMapper";

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r41);

        <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List VIEW_INSPECTOR_CLASSES> = $r4;

        r42 = newarray (kotlin.Pair)[6];

        r43 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[2];

        $r5 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r5.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("backgroundTint", "getBackgroundTintList()", null, null, null, 28, null);

        r43[0] = $r5;

        $r6 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r6.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("backgroundTintMode", "getBackgroundTintMode()", null, null, null, 28, null);

        r43[1] = $r6;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r43);

        $r8 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.view.TintableBackgroundView", $r7);

        r42[0] = $r8;

        r44 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[4];

        $r9 = new androidx.resourceinspection.processor.ShadowedAttribute;

        $r11 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT_ENUM>;

        r0 = newarray (androidx.resourceinspection.processor.IntMap)[2];

        $r10 = new androidx.resourceinspection.processor.IntMap;

        specialinvoke $r10.<androidx.resourceinspection.processor.IntMap: void <init>(java.lang.String,int,int,javax.lang.model.element.AnnotationMirror,int,kotlin.jvm.internal.DefaultConstructorMarker)>("none", 0, 0, null, 12, null);

        r0[0] = $r10;

        $r12 = new androidx.resourceinspection.processor.IntMap;

        specialinvoke $r12.<androidx.resourceinspection.processor.IntMap: void <init>(java.lang.String,int,int,javax.lang.model.element.AnnotationMirror,int,kotlin.jvm.internal.DefaultConstructorMarker)>("uniform", 1, 0, null, 12, null);

        r0[1] = $r12;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r0);

        specialinvoke $r9.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("autoSizeTextType", "getAutoSizeTextType()", $r11, $r13, null, 16, null);

        r44[0] = $r9;

        $r14 = new androidx.resourceinspection.processor.ShadowedAttribute;

        $r15 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT>;

        specialinvoke $r14.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("autoSizeStepGranularity", "getAutoSizeStepGranularity()", $r15, null, null, 24, null);

        r44[1] = $r14;

        $r16 = new androidx.resourceinspection.processor.ShadowedAttribute;

        $r17 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT>;

        specialinvoke $r16.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("autoSizeMinTextSize", "getAutoSizeMinTextSize()", $r17, null, null, 24, null);

        r44[2] = $r16;

        $r18 = new androidx.resourceinspection.processor.ShadowedAttribute;

        $r19 = <androidx.resourceinspection.processor.AttributeType: androidx.resourceinspection.processor.AttributeType INT>;

        specialinvoke $r18.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("autoSizeMaxTextSize", "getAutoSizeMaxTextSize()", $r19, null, null, 24, null);

        r44[3] = $r18;

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r44);

        $r21 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.widget.AutoSizeableTextView", $r20);

        r42[1] = $r21;

        r45 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[2];

        $r22 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r22.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("checkMarkTint", "getCheckMarkTintList()", null, null, null, 28, null);

        r45[0] = $r22;

        $r23 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r23.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("checkMarkTintMode", "getCheckMarkTintMode()", null, null, null, 28, null);

        r45[1] = $r23;

        $r24 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r45);

        $r25 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.widget.TintableCheckedTextView", $r24);

        r42[2] = $r25;

        r46 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[2];

        $r26 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r26.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("buttonTint", "getButtonTintList()", null, null, null, 28, null);

        r46[0] = $r26;

        $r27 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r27.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("buttonTintMode", "getButtonTintMode()", null, null, null, 28, null);

        r46[1] = $r27;

        $r28 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r46);

        $r29 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.widget.TintableCompoundButton", $r28);

        r42[3] = $r29;

        r47 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[2];

        $r30 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r30.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("drawableTint", "getCompoundDrawableTintList()", null, null, null, 28, null);

        r47[0] = $r30;

        $r31 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r31.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("drawableTintMode", "getCompoundDrawableTintMode()", null, null, null, 28, null);

        r47[1] = $r31;

        $r32 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r47);

        $r33 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.widget.TintableCompoundDrawablesView", $r32);

        r42[4] = $r33;

        r48 = newarray (androidx.resourceinspection.processor.ShadowedAttribute)[2];

        $r34 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r34.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("tint", "getImageTintList()", null, null, null, 28, null);

        r48[0] = $r34;

        $r35 = new androidx.resourceinspection.processor.ShadowedAttribute;

        specialinvoke $r35.<androidx.resourceinspection.processor.ShadowedAttribute: void <init>(java.lang.String,java.lang.String,androidx.resourceinspection.processor.AttributeType,java.util.List,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)>("tintMode", "getImageTintMode()", null, null, null, 28, null);

        r48[1] = $r35;

        $r36 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r48);

        $r37 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>("androidx.core.widget.TintableImageSourceView", $r36);

        r42[5] = $r37;

        $r38 = staticinvoke <kotlin.collections.MapsKt: java.util.Map mapOf(kotlin.Pair[])>(r42);

        <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.Map APP_COMPAT_INTERFACE_MAP> = $r38;

        return;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$Companion
    private void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final kotlin.text.Regex getATTRIBUTE_VALUE()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;
        kotlin.text.Regex $r1;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        $r1 = staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex access$getATTRIBUTE_VALUE$cp()>();

        return $r1;
    }

    public final kotlin.text.Regex getRESOURCE_ID_ANNOTATION()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;
        kotlin.text.Regex $r1;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        $r1 = staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: kotlin.text.Regex access$getRESOURCE_ID_ANNOTATION$cp()>();

        return $r1;
    }

    public final java.util.List getVIEW_INSPECTOR_CLASSES()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;
        java.util.List $r1;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        $r1 = staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.List access$getVIEW_INSPECTOR_CLASSES$cp()>();

        return $r1;
    }

    public final java.util.Map getAPP_COMPAT_INTERFACE_MAP()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;
        java.util.Map $r1;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        $r1 = staticinvoke <androidx.resourceinspection.processor.LayoutInspectionStep: java.util.Map access$getAPP_COMPAT_INTERFACE_MAP$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep$Companion: void <init>()>();

        return;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1
    public void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1 r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2;
        boolean z0;
        java.lang.Comparable r3, $r6;
        java.lang.String r4, $r5;
        int $i0;
        androidx.resourceinspection.processor.Attribute r7, r8;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$createView$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        z0 = 0;

        r7 = (androidx.resourceinspection.processor.Attribute) r1;

        $r5 = interfaceinvoke r7.<androidx.resourceinspection.processor.Attribute: java.lang.String getQualifiedName()>();

        r8 = (androidx.resourceinspection.processor.Attribute) r2;

        r3 = (java.lang.Comparable) $r5;

        r4 = interfaceinvoke r8.<androidx.resourceinspection.processor.Attribute: java.lang.String getQualifiedName()>();

        $r6 = (java.lang.Comparable) r4;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r6);

        return $i0;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2
<androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 INSTANCE>
    void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.CharSequence invoke(androidx.resourceinspection.processor.Attribute)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 r0;
        androidx.resourceinspection.processor.Attribute r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2;

        r1 := @parameter0: androidx.resourceinspection.processor.Attribute;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = interfaceinvoke r1.<androidx.resourceinspection.processor.Attribute: java.lang.String getInvocation()>();

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 r0;
        java.lang.Object r1;
        androidx.resourceinspection.processor.Attribute $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.resourceinspection.processor.Attribute) r1;

        $r3 = virtualinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2: java.lang.CharSequence invoke(androidx.resourceinspection.processor.Attribute)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 $r0;

        $r0 = new androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2;

        specialinvoke $r0.<androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2: void <init>()>();

        <androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2: androidx.resourceinspection.processor.LayoutInspectionStep$createView$1$1$otherGetters$2 INSTANCE> = $r0;

        return;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1
    public void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1 r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2;
        boolean z0;
        java.lang.Comparable r3, $r6;
        java.lang.Integer r4, $r5;
        int $i0, $i1, $i2;
        androidx.resourceinspection.processor.IntMap r7, r8;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$parseIntMapping$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        z0 = 0;

        r7 = (androidx.resourceinspection.processor.IntMap) r1;

        $i0 = virtualinvoke r7.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r8 = (androidx.resourceinspection.processor.IntMap) r2;

        r3 = (java.lang.Comparable) $r5;

        $i1 = virtualinvoke r8.<androidx.resourceinspection.processor.IntMap: int getValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = (java.lang.Comparable) r4;

        $i2 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r6);

        return $i2;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1
<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 INSTANCE>
    void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.CharSequence invoke(androidx.resourceinspection.processor.IntMap)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 r0;
        androidx.resourceinspection.processor.IntMap r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        java.lang.CharSequence $r8;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1;

        r1 := @parameter0: androidx.resourceinspection.processor.IntMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r4 = virtualinvoke r1.<androidx.resourceinspection.processor.IntMap: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = (java.lang.CharSequence) $r7;

        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 r0;
        java.lang.Object r1;
        androidx.resourceinspection.processor.IntMap $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.resourceinspection.processor.IntMap) r1;

        $r3 = virtualinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1: java.lang.CharSequence invoke(androidx.resourceinspection.processor.IntMap)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 $r0;

        $r0 = new androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1;

        specialinvoke $r0.<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1: void <init>()>();

        <androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$2$1$others$1 INSTANCE> = $r0;

        return;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1
<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 INSTANCE>
    void <init>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 r0;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.CharSequence invoke(androidx.resourceinspection.processor.IntMap)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 r0;
        androidx.resourceinspection.processor.IntMap r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        java.lang.CharSequence $r8;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1;

        r1 := @parameter0: androidx.resourceinspection.processor.IntMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r4 = virtualinvoke r1.<androidx.resourceinspection.processor.IntMap: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = (java.lang.CharSequence) $r7;

        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 r0;
        java.lang.Object r1;
        androidx.resourceinspection.processor.IntMap $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.resourceinspection.processor.IntMap) r1;

        $r3 = virtualinvoke r0.<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1: java.lang.CharSequence invoke(androidx.resourceinspection.processor.IntMap)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 $r0;

        $r0 = new androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1;

        specialinvoke $r0.<androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1: void <init>()>();

        <androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1: androidx.resourceinspection.processor.LayoutInspectionStep$validateIntMapping$4$1$others$1 INSTANCE> = $r0;

        return;
    }

androidx.resourceinspection.processor.LayoutInspectionStep$WhenMappings
<androidx.resourceinspection.processor.LayoutInspectionStep$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        javax.lang.model.type.TypeKind[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        javax.lang.model.type.TypeKind $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r1 = staticinvoke <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BOOLEAN>;

        $i1 = virtualinvoke $r2.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind BYTE>;

        $i2 = virtualinvoke $r3.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind CHAR>;

        $i3 = virtualinvoke $r4.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DOUBLE>;

        $i4 = virtualinvoke $r5.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i4] = 4;

        $r6 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind FLOAT>;

        $i5 = virtualinvoke $r6.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i5] = 5;

        $r7 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind SHORT>;

        $i6 = virtualinvoke $r7.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i6] = 6;

        $r8 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind INT>;

        $i7 = virtualinvoke $r8.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i7] = 7;

        $r9 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind LONG>;

        $i8 = virtualinvoke $r9.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i8] = 8;

        $r10 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DECLARED>;

        $i9 = virtualinvoke $r10.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i9] = 9;

        $r11 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind ARRAY>;

        $i10 = virtualinvoke $r11.<javax.lang.model.type.TypeKind: int ordinal()>();

        r0[$i10] = 10;

        <androidx.resourceinspection.processor.LayoutInspectionStep$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

