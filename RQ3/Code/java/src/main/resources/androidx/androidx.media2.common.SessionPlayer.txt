androidx.media2.common.SessionPlayer
<androidx.media2.common.SessionPlayer: java.lang.String TAG>
<androidx.media2.common.SessionPlayer: int PLAYER_STATE_IDLE>
<androidx.media2.common.SessionPlayer: int PLAYER_STATE_PAUSED>
<androidx.media2.common.SessionPlayer: int PLAYER_STATE_PLAYING>
<androidx.media2.common.SessionPlayer: int PLAYER_STATE_ERROR>
<androidx.media2.common.SessionPlayer: int BUFFERING_STATE_UNKNOWN>
<androidx.media2.common.SessionPlayer: int BUFFERING_STATE_BUFFERING_AND_PLAYABLE>
<androidx.media2.common.SessionPlayer: int BUFFERING_STATE_BUFFERING_AND_STARVED>
<androidx.media2.common.SessionPlayer: int BUFFERING_STATE_COMPLETE>
<androidx.media2.common.SessionPlayer: int REPEAT_MODE_NONE>
<androidx.media2.common.SessionPlayer: int REPEAT_MODE_ONE>
<androidx.media2.common.SessionPlayer: int REPEAT_MODE_ALL>
<androidx.media2.common.SessionPlayer: int REPEAT_MODE_GROUP>
<androidx.media2.common.SessionPlayer: int SHUFFLE_MODE_NONE>
<androidx.media2.common.SessionPlayer: int SHUFFLE_MODE_ALL>
<androidx.media2.common.SessionPlayer: int SHUFFLE_MODE_GROUP>
<androidx.media2.common.SessionPlayer: long UNKNOWN_TIME>
<androidx.media2.common.SessionPlayer: int INVALID_ITEM_INDEX>
<androidx.media2.common.SessionPlayer: java.lang.Object mLock>
<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>
    public void <init>()
    {
        androidx.media2.common.SessionPlayer r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media2.common.SessionPlayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks> = $r2;

        return;
    }

<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture play()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture pause()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture prepare()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture seekTo(long)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setPlaybackSpeed(float)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setAudioAttributes(androidx.media.AudioAttributesCompat)>
<androidx.media2.common.SessionPlayer: int getPlayerState()>
<androidx.media2.common.SessionPlayer: long getCurrentPosition()>
<androidx.media2.common.SessionPlayer: long getDuration()>
<androidx.media2.common.SessionPlayer: long getBufferedPosition()>
<androidx.media2.common.SessionPlayer: int getBufferingState()>
<androidx.media2.common.SessionPlayer: float getPlaybackSpeed()>
    public androidx.media2.common.VideoSize getVideoSize()
    {
        androidx.media2.common.SessionPlayer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.media2.common.SessionPlayer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getVideoSize is not implemented");

        throw $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture setSurface(android.view.Surface)
    {
        androidx.media2.common.SessionPlayer r0;
        android.view.Surface r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media2.common.SessionPlayer;

        r1 := @parameter0: android.view.Surface;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setSurface is not implemented");

        throw $r2;
    }

<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setPlaylist(java.util.List,androidx.media2.common.MediaMetadata)>
<androidx.media2.common.SessionPlayer: androidx.media.AudioAttributesCompat getAudioAttributes()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setMediaItem(androidx.media2.common.MediaItem)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture addPlaylistItem(int,androidx.media2.common.MediaItem)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture removePlaylistItem(int)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture replacePlaylistItem(int,androidx.media2.common.MediaItem)>
    public com.google.common.util.concurrent.ListenableFuture movePlaylistItem(int, int)
    {
        androidx.media2.common.SessionPlayer r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.media2.common.SessionPlayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("movePlaylistItem is not implemented");

        throw $r1;
    }

<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToPreviousPlaylistItem()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToNextPlaylistItem()>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture skipToPlaylistItem(int)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture updatePlaylistMetadata(androidx.media2.common.MediaMetadata)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setRepeatMode(int)>
<androidx.media2.common.SessionPlayer: com.google.common.util.concurrent.ListenableFuture setShuffleMode(int)>
<androidx.media2.common.SessionPlayer: java.util.List getPlaylist()>
<androidx.media2.common.SessionPlayer: androidx.media2.common.MediaMetadata getPlaylistMetadata()>
<androidx.media2.common.SessionPlayer: int getRepeatMode()>
<androidx.media2.common.SessionPlayer: int getShuffleMode()>
<androidx.media2.common.SessionPlayer: androidx.media2.common.MediaItem getCurrentMediaItem()>
<androidx.media2.common.SessionPlayer: int getCurrentMediaItemIndex()>
<androidx.media2.common.SessionPlayer: int getPreviousMediaItemIndex()>
<androidx.media2.common.SessionPlayer: int getNextMediaItemIndex()>
    public final void registerPlayerCallback(java.util.concurrent.Executor, androidx.media2.common.SessionPlayer$PlayerCallback)
    {
        androidx.media2.common.SessionPlayer r0;
        java.util.concurrent.Executor r1;
        androidx.media2.common.SessionPlayer$PlayerCallback r2;
        java.lang.Object r3, $r7, $r11, $r12, $r13;
        java.util.Iterator r4;
        androidx.core.util.Pair r5, $r9;
        java.lang.Throwable r6, $r16;
        java.util.List $r8, $r10;
        boolean $z0;
        java.lang.NullPointerException $r14, $r15;

        r0 := @this: androidx.media2.common.SessionPlayer;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.media2.common.SessionPlayer$PlayerCallback;

        if r1 != null goto label01;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r15;

     label01:
        if r2 != null goto label02;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r14;

     label02:
        $r7 = r0.<androidx.media2.common.SessionPlayer: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.core.util.Pair) $r11;

        $r12 = r5.<androidx.core.util.Pair: java.lang.Object first>;

        if $r12 != r2 goto label06;

        $r13 = r5.<androidx.core.util.Pair: java.lang.Object second>;

        if $r13 == null goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SessionPlayer", "callback is already added. Ignoring.");

        exitmonitor r3;

     label05:
        return;

     label06:
        goto label04;

     label07:
        $r10 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        $r9 = new androidx.core.util.Pair;

        specialinvoke $r9.<androidx.core.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final void unregisterPlayerCallback(androidx.media2.common.SessionPlayer$PlayerCallback)
    {
        androidx.media2.common.SessionPlayer r0;
        androidx.media2.common.SessionPlayer$PlayerCallback r1;
        java.lang.Object r2, $r4, $r7, $r9;
        java.lang.Throwable r3, $r13;
        java.util.List $r5, $r6, $r10;
        int $i0, i1;
        androidx.core.util.Pair $r8;
        java.lang.NullPointerException $r12;

        r0 := @this: androidx.media2.common.SessionPlayer;

        r1 := @parameter0: androidx.media2.common.SessionPlayer$PlayerCallback;

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r12;

     label1:
        $r4 = r0.<androidx.media2.common.SessionPlayer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label5;

        $r6 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (androidx.core.util.Pair) $r7;

        $r9 = $r8.<androidx.core.util.Pair: java.lang.Object first>;

        if $r9 != r1 goto label4;

        $r10 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i1);

     label4:
        i1 = i1 + -1;

        goto label3;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected final java.util.List getCallbacks()
    {
        androidx.media2.common.SessionPlayer r0;
        java.util.ArrayList r1, $r4;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r7;
        java.util.List $r6;

        r0 := @this: androidx.media2.common.SessionPlayer;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.media2.common.SessionPlayer: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getTracks()
    {
        androidx.media2.common.SessionPlayer r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.media2.common.SessionPlayer;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getTracks is not implemented");

        throw $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture selectTrack(androidx.media2.common.SessionPlayer$TrackInfo)
    {
        androidx.media2.common.SessionPlayer r0;
        androidx.media2.common.SessionPlayer$TrackInfo r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media2.common.SessionPlayer;

        r1 := @parameter0: androidx.media2.common.SessionPlayer$TrackInfo;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("selectTrack is not implemented");

        throw $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture deselectTrack(androidx.media2.common.SessionPlayer$TrackInfo)
    {
        androidx.media2.common.SessionPlayer r0;
        androidx.media2.common.SessionPlayer$TrackInfo r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media2.common.SessionPlayer;

        r1 := @parameter0: androidx.media2.common.SessionPlayer$TrackInfo;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("deselectTrack is not implemented");

        throw $r2;
    }

    public androidx.media2.common.SessionPlayer$TrackInfo getSelectedTrack(int)
    {
        androidx.media2.common.SessionPlayer r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.media2.common.SessionPlayer;

        i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getSelectedTrack is not implemented");

        throw $r1;
    }

    public void close()
    {
        androidx.media2.common.SessionPlayer r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;

        r0 := @this: androidx.media2.common.SessionPlayer;

        $r3 = r0.<androidx.media2.common.SessionPlayer: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media2.common.SessionPlayer: java.util.List mCallbacks>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.media2.common.SessionPlayer$BuffState
androidx.media2.common.SessionPlayer$PlayerCallback
    public void <init>()
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onPlayerStateChanged(androidx.media2.common.SessionPlayer, int)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onBufferingStateChanged(androidx.media2.common.SessionPlayer, androidx.media2.common.MediaItem, int)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.MediaItem r2;
        int i0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.MediaItem;

        i0 := @parameter2: int;

        return;
    }

    public void onPlaybackSpeedChanged(androidx.media2.common.SessionPlayer, float)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        float f0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        f0 := @parameter1: float;

        return;
    }

    public void onSeekCompleted(androidx.media2.common.SessionPlayer, long)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        long l0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        l0 := @parameter1: long;

        return;
    }

    public void onPlaylistChanged(androidx.media2.common.SessionPlayer, java.util.List, androidx.media2.common.MediaMetadata)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        java.util.List r2;
        androidx.media2.common.MediaMetadata r3;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.media2.common.MediaMetadata;

        return;
    }

    public void onPlaylistMetadataChanged(androidx.media2.common.SessionPlayer, androidx.media2.common.MediaMetadata)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.MediaMetadata r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.MediaMetadata;

        return;
    }

    public void onShuffleModeChanged(androidx.media2.common.SessionPlayer, int)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onRepeatModeChanged(androidx.media2.common.SessionPlayer, int)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        i0 := @parameter1: int;

        return;
    }

    public void onCurrentMediaItemChanged(androidx.media2.common.SessionPlayer, androidx.media2.common.MediaItem)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.MediaItem r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.MediaItem;

        return;
    }

    public void onPlaybackCompleted(androidx.media2.common.SessionPlayer)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        return;
    }

    public void onAudioAttributesChanged(androidx.media2.common.SessionPlayer, androidx.media.AudioAttributesCompat)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media.AudioAttributesCompat r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media.AudioAttributesCompat;

        return;
    }

    public void onVideoSizeChanged(androidx.media2.common.SessionPlayer, androidx.media2.common.VideoSize)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.VideoSize r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.VideoSize;

        return;
    }

    public void onSubtitleData(androidx.media2.common.SessionPlayer, androidx.media2.common.MediaItem, androidx.media2.common.SessionPlayer$TrackInfo, androidx.media2.common.SubtitleData)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.MediaItem r2;
        androidx.media2.common.SessionPlayer$TrackInfo r3;
        androidx.media2.common.SubtitleData r4;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.MediaItem;

        r3 := @parameter2: androidx.media2.common.SessionPlayer$TrackInfo;

        r4 := @parameter3: androidx.media2.common.SubtitleData;

        return;
    }

    public void onTracksChanged(androidx.media2.common.SessionPlayer, java.util.List)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        java.util.List r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: java.util.List;

        return;
    }

    public void onTrackSelected(androidx.media2.common.SessionPlayer, androidx.media2.common.SessionPlayer$TrackInfo)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.SessionPlayer$TrackInfo r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.SessionPlayer$TrackInfo;

        return;
    }

    public void onTrackDeselected(androidx.media2.common.SessionPlayer, androidx.media2.common.SessionPlayer$TrackInfo)
    {
        androidx.media2.common.SessionPlayer$PlayerCallback r0;
        androidx.media2.common.SessionPlayer r1;
        androidx.media2.common.SessionPlayer$TrackInfo r2;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerCallback;

        r1 := @parameter0: androidx.media2.common.SessionPlayer;

        r2 := @parameter1: androidx.media2.common.SessionPlayer$TrackInfo;

        return;
    }

androidx.media2.common.SessionPlayer$PlayerResult$ResultCode
androidx.media2.common.SessionPlayer$PlayerResult
<androidx.media2.common.SessionPlayer$PlayerResult: int mResultCode>
<androidx.media2.common.SessionPlayer$PlayerResult: long mCompletionTime>
<androidx.media2.common.SessionPlayer$PlayerResult: androidx.media2.common.MediaItem mItem>
    public void <init>(int, androidx.media2.common.MediaItem)
    {
        androidx.media2.common.SessionPlayer$PlayerResult r0;
        int i0;
        androidx.media2.common.MediaItem r1;
        long $l1;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.common.MediaItem;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media2.common.SessionPlayer$PlayerResult: void <init>(int,androidx.media2.common.MediaItem,long)>(i0, r1, $l1);

        return;
    }

    private void <init>(int, androidx.media2.common.MediaItem, long)
    {
        androidx.media2.common.SessionPlayer$PlayerResult r0;
        int i0;
        androidx.media2.common.MediaItem r1;
        long l1;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.common.MediaItem;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer$PlayerResult: int mResultCode> = i0;

        r0.<androidx.media2.common.SessionPlayer$PlayerResult: androidx.media2.common.MediaItem mItem> = r1;

        r0.<androidx.media2.common.SessionPlayer$PlayerResult: long mCompletionTime> = l1;

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFuture(int)
    {
        int i0;
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.media2.common.SessionPlayer$PlayerResult $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r1 = new androidx.media2.common.SessionPlayer$PlayerResult;

        specialinvoke $r1.<androidx.media2.common.SessionPlayer$PlayerResult: void <init>(int,androidx.media2.common.MediaItem)>(i0, null);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r1);

        return r0;
    }

    public int getResultCode()
    {
        androidx.media2.common.SessionPlayer$PlayerResult r0;
        int $i0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerResult;

        $i0 = r0.<androidx.media2.common.SessionPlayer$PlayerResult: int mResultCode>;

        return $i0;
    }

    public long getCompletionTime()
    {
        androidx.media2.common.SessionPlayer$PlayerResult r0;
        long $l0;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerResult;

        $l0 = r0.<androidx.media2.common.SessionPlayer$PlayerResult: long mCompletionTime>;

        return $l0;
    }

    public androidx.media2.common.MediaItem getMediaItem()
    {
        androidx.media2.common.SessionPlayer$PlayerResult r0;
        androidx.media2.common.MediaItem $r1;

        r0 := @this: androidx.media2.common.SessionPlayer$PlayerResult;

        $r1 = r0.<androidx.media2.common.SessionPlayer$PlayerResult: androidx.media2.common.MediaItem mItem>;

        return $r1;
    }

androidx.media2.common.SessionPlayer$PlayerState
androidx.media2.common.SessionPlayer$RepeatMode
androidx.media2.common.SessionPlayer$ShuffleMode
androidx.media2.common.SessionPlayer$TrackInfo$MediaTrackType
androidx.media2.common.SessionPlayer$TrackInfo
<androidx.media2.common.SessionPlayer$TrackInfo: int MEDIA_TRACK_TYPE_UNKNOWN>
<androidx.media2.common.SessionPlayer$TrackInfo: int MEDIA_TRACK_TYPE_VIDEO>
<androidx.media2.common.SessionPlayer$TrackInfo: int MEDIA_TRACK_TYPE_AUDIO>
<androidx.media2.common.SessionPlayer$TrackInfo: int MEDIA_TRACK_TYPE_SUBTITLE>
<androidx.media2.common.SessionPlayer$TrackInfo: int MEDIA_TRACK_TYPE_METADATA>
<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.String KEY_IS_FORMAT_NULL>
<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.String KEY_IS_SELECTABLE>
<androidx.media2.common.SessionPlayer$TrackInfo: int mId>
<androidx.media2.common.SessionPlayer$TrackInfo: int mTrackType>
<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>
<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable>
<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>
<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.Object mLock>
    void <init>()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        java.lang.Object $r1;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.Object mLock> = $r1;

        return;
    }

    public void <init>(int, int, android.media.MediaFormat)
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        int i0, i1;
        android.media.MediaFormat r1;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.MediaFormat;

        specialinvoke r0.<androidx.media2.common.SessionPlayer$TrackInfo: void <init>(int,int,android.media.MediaFormat,boolean)>(i0, i1, r1, 0);

        return;
    }

    public void <init>(int, int, android.media.MediaFormat, boolean)
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        int i0, i1;
        android.media.MediaFormat r1;
        boolean z0;
        java.lang.Object $r2;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.MediaFormat;

        z0 := @parameter3: boolean;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.Object mLock> = $r2;

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mId> = i0;

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mTrackType> = i1;

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat> = r1;

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable> = z0;

        return;
    }

    public int getTrackType()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $i0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mTrackType>;

        return $i0;
    }

    public java.util.Locale getLanguage()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        android.media.MediaFormat $r1, $r3;
        java.util.Locale $r2;
        java.lang.String $r4, r5;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $r1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r4 = virtualinvoke $r3.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("language");

        goto label2;

     label1:
        $r4 = null;

     label2:
        r5 = $r4;

        if r5 != null goto label3;

        r5 = "und";

     label3:
        $r2 = new java.util.Locale;

        specialinvoke $r2.<java.util.Locale: void <init>(java.lang.String)>(r5);

        return $r2;
    }

    public android.media.MediaFormat getFormat()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        android.media.MediaFormat $r1;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $r1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        return $r1;
    }

    public int getId()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $i0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mId>;

        return $i0;
    }

    public boolean isSelectable()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        boolean $z0;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $z0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable>;

        return $z0;
    }

    public java.lang.String toString()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        java.lang.StringBuilder r1, $r2, $r6, $r17, $r19;
        java.lang.Class $r3;
        java.lang.String $r4, $r20;
        int $i0, $i1;
        android.media.MediaFormat $r18;
        boolean $z0;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $i0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mId>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $i1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mTrackType>;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VIDEO");

        goto label6;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AUDIO");

        goto label6;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUBTITLE");

        goto label6;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("METADATA");

        goto label6;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNKNOWN");

     label6:
        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isSelectable=");

        $z0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable>;

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r20 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public int hashCode()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $i0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mId>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.media2.common.SessionPlayer$TrackInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.media2.common.SessionPlayer$TrackInfo) r1;

        $i1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mId>;

        $i0 = r2.<androidx.media2.common.SessionPlayer$TrackInfo: int mId>;

        if $i1 != $i0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public void onPreParceling(boolean)
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r20;
        android.os.Bundle $r4, $r6, $r8, $r9, $r11, $r13, $r15, $r17;
        android.media.MediaFormat $r5, $r7, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        z0 := @parameter0: boolean;

        $r3 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras> = $r4;

        $r6 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        $r5 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        if $r5 != null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        virtualinvoke $r6.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.media2.common.SessionPlayer.TrackInfo.KEY_IS_FORMAT_NULL", $z2);

        $r7 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        if $r7 == null goto label4;

        $r10 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r9 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void putStringValueToBundle(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("language", $r10, $r9);

        $r12 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r11 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void putStringValueToBundle(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("mime", $r12, $r11);

        $r14 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r13 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void putIntValueToBundle(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-forced-subtitle", $r14, $r13);

        $r16 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r15 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void putIntValueToBundle(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-autoselect", $r16, $r15);

        $r18 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r17 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void putIntValueToBundle(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-default", $r18, $r17);

     label4:
        $r8 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        $z1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable>;

        virtualinvoke $r8.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("androidx.media2.common.SessionPlayer.TrackInfo.KEY_IS_SELECTABLE", $z1);

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r20 := @caughtexception;

        r2 = $r20;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onPostParceling()
    {
        androidx.media2.common.SessionPlayer$TrackInfo r0;
        android.os.Bundle $r1, $r3, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        android.media.MediaFormat $r6, $r8, $r10, $r12, $r14, $r16;

        r0 := @this: androidx.media2.common.SessionPlayer$TrackInfo;

        $r1 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        if $r1 == null goto label1;

        $r5 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        $z2 = virtualinvoke $r5.<android.os.Bundle: boolean getBoolean(java.lang.String)>("androidx.media2.common.SessionPlayer.TrackInfo.KEY_IS_FORMAT_NULL");

        if $z2 != 0 goto label1;

        $r6 = new android.media.MediaFormat;

        specialinvoke $r6.<android.media.MediaFormat: void <init>()>();

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat> = $r6;

        $r8 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r7 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void setStringValueToMediaFormat(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("language", $r8, $r7);

        $r10 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r9 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void setStringValueToMediaFormat(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("mime", $r10, $r9);

        $r12 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r11 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void setIntValueToMediaFormat(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-forced-subtitle", $r12, $r11);

        $r14 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r13 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void setIntValueToMediaFormat(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-autoselect", $r14, $r13);

        $r16 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.media.MediaFormat mFormat>;

        $r15 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        staticinvoke <androidx.media2.common.SessionPlayer$TrackInfo: void setIntValueToMediaFormat(java.lang.String,android.media.MediaFormat,android.os.Bundle)>("is-default", $r16, $r15);

     label1:
        $r17 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        if $r17 == null goto label2;

        $r3 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        $z0 = virtualinvoke $r3.<android.os.Bundle: boolean containsKey(java.lang.String)>("androidx.media2.common.SessionPlayer.TrackInfo.KEY_IS_SELECTABLE");

        if $z0 != 0 goto label5;

     label2:
        $i0 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: int mTrackType>;

        if $i0 == 1 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable> = $z3;

        goto label6;

     label5:
        $r4 = r0.<androidx.media2.common.SessionPlayer$TrackInfo: android.os.Bundle mParcelableExtras>;

        $z1 = virtualinvoke $r4.<android.os.Bundle: boolean getBoolean(java.lang.String)>("androidx.media2.common.SessionPlayer.TrackInfo.KEY_IS_SELECTABLE");

        r0.<androidx.media2.common.SessionPlayer$TrackInfo: boolean mIsSelectable> = $z1;

     label6:
        return;
    }

    private static void putIntValueToBundle(java.lang.String, android.media.MediaFormat, android.os.Bundle)
    {
        java.lang.String r0;
        android.media.MediaFormat r1;
        android.os.Bundle r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.MediaFormat;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.media.MediaFormat: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.media.MediaFormat: int getInteger(java.lang.String)>(r0);

        virtualinvoke r2.<android.os.Bundle: void putInt(java.lang.String,int)>(r0, $i0);

     label1:
        return;
    }

    private static void putStringValueToBundle(java.lang.String, android.media.MediaFormat, android.os.Bundle)
    {
        java.lang.String r0, $r3;
        android.media.MediaFormat r1;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.MediaFormat;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.media.MediaFormat: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>(r0);

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r0, $r3);

     label1:
        return;
    }

    private static void setIntValueToMediaFormat(java.lang.String, android.media.MediaFormat, android.os.Bundle)
    {
        java.lang.String r0;
        android.media.MediaFormat r1;
        android.os.Bundle r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.MediaFormat;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String)>(r0);

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>(r0, $i0);

     label1:
        return;
    }

    private static void setStringValueToMediaFormat(java.lang.String, android.media.MediaFormat, android.os.Bundle)
    {
        java.lang.String r0, $r3;
        android.media.MediaFormat r1;
        android.os.Bundle r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.media.MediaFormat;

        r2 := @parameter2: android.os.Bundle;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>(r0);

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>(r0, $r3);

     label1:
        return;
    }

