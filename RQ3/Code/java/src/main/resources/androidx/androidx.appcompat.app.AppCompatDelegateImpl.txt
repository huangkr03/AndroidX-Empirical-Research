androidx.appcompat.app.AppCompatDelegateImpl
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>
<androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler>
<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX>
<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>
<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>
<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>
<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>
<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>
<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>
<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>
<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>
<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>
<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>
<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration mEffectiveConfiguration>
<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>
<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>
<androidx.appcompat.app.AppCompatDelegateImpl: int mActivityHandlesConfigFlags>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesConfigFlagsChecked>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>
<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>
<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>
<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp>
<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>
<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>
<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector>
<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>
<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>
    void <init>(android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Activity r1;
        androidx.appcompat.app.AppCompatCallback r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>(r1, null, r2, r1);

        return;
    }

    void <init>(android.app.Dialog, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Dialog r1;
        androidx.appcompat.app.AppCompatCallback r2;
        android.content.Context $r3;
        android.view.Window $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.app.Dialog;

        r2 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        $r3 = virtualinvoke r1.<android.app.Dialog: android.content.Context getContext()>();

        $r4 = virtualinvoke r1.<android.app.Dialog: android.view.Window getWindow()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>($r3, $r4, r2, r1);

        return;
    }

    void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        android.view.Window r2;
        androidx.appcompat.app.AppCompatCallback r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Window;

        r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>(r1, r2, r3, r1);

        return;
    }

    void <init>(android.content.Context, android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        android.app.Activity r2;
        androidx.appcompat.app.AppCompatCallback r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)>(r1, null, r3, r2);

        return;
    }

    private void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback, java.lang.Object)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        android.view.Window r2;
        androidx.appcompat.app.AppCompatCallback r3;
        java.lang.Object r4, $r6, $r10, $r11, $r16;
        androidx.appcompat.app.AppCompatDelegateImpl$2 $r5;
        int $i0, $i1, $i2, $i3;
        androidx.collection.SimpleArrayMap $r7, $r12;
        java.lang.Class $r8, $r13;
        java.lang.String $r9, $r14;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegate $r17;
        androidx.appcompat.app.AppCompatActivity r18;
        java.lang.Integer r19;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Window;

        r3 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        r4 := @parameter3: java.lang.Object;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = 1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = -100;

        $r5 = new androidx.appcompat.app.AppCompatDelegateImpl$2;

        specialinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$2: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable> = $r5;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext> = r1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback> = r3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost> = r4;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i0 != -100 goto label1;

        $r16 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r16 instanceof android.app.Dialog;

        if $z0 == 0 goto label1;

        r18 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()>();

        if r18 == null goto label1;

        $r17 = virtualinvoke r18.<androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()>();

        $i2 = virtualinvoke $r17.<androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = $i2;

     label1:
        $i3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i3 != -100 goto label2;

        $r7 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r8 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r9);

        r19 = (java.lang.Integer) $r10;

        if r19 == null goto label2;

        $i1 = virtualinvoke r19.<java.lang.Integer: int intValue()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = $i1;

        $r12 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r13 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r12.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r14);

     label2:
        if r2 == null goto label3;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>(r2);

     label3:
        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void preload()>();

        return;
    }

    public void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.window.OnBackInvokedDispatcher r1, $r2, $r9, $r12;
        java.lang.Object $r3, $r4, $r7;
        boolean $z0;
        android.app.Activity $r5, $r8;
        android.view.Window $r6;
        android.window.OnBackInvokedCallback $r10, $r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.window.OnBackInvokedDispatcher;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)>(r1);

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        if $r2 == null goto label1;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>;

        if $r10 == null goto label1;

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)>($r12, $r11);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback> = null;

     label1:
        if r1 != null goto label2;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r3 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r5 = (android.app.Activity) $r4;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.view.Window getWindow()>();

        if $r6 == null goto label2;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r8 = (android.app.Activity) $r7;

        $r9 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)>($r8);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher> = $r9;

        goto label3;

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher> = r1;

     label3:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

        return;
    }

    void updateBackInvokedCallbackState()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0;
        int $i0;
        android.window.OnBackInvokedCallback $r1, $r2, $r4, $r6;
        android.window.OnBackInvokedDispatcher $r3, $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label2;

        z0 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldRegisterBackInvokedCallback()>();

        if z0 == 0 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>;

        if $r4 != null goto label1;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        $r6 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)>($r5, r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback> = $r6;

        goto label2;

     label1:
        if z0 != 0 goto label2;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>;

        if $r1 == null goto label2;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedCallback mBackCallback>;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)>($r3, $r2);

     label2:
        return;
    }

    public android.content.Context attachBaseContext2(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1, $r4, $r7, $r10, r30;
        int i0, $i1, $i2, $i3, $i4;
        androidx.core.os.LocaleListCompat r2;
        java.lang.Throwable r3, $r13, $r14, $r15, r17, r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.content.res.Resources$Theme $r5, $r27;
        android.content.res.Resources $r8, $r9;
        androidx.appcompat.view.ContextThemeWrapper $r11, r26, r29;
        android.view.ContextThemeWrapper $r12;
        android.content.res.Configuration r16, r18, r20, r21, r22, r23, r24, r28;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        $i1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        i0 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>(r1, $i1);

        $z0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: boolean isAutoStorageOptedIn(android.content.Context)>(r1);

        if $z0 == 0 goto label01;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void syncRequestedAndStoredLocales(android.content.Context)>(r1);

     label01:
        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat calculateApplicationLocales(android.content.Context)>(r1);

        $z1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration>;

        if $z1 == 0 goto label05;

        $z4 = r1 instanceof android.view.ContextThemeWrapper;

        if $z4 == 0 goto label05;

        r16 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean)>(r1, i0, r2, null, 0);

     label02:
        $r12 = (android.view.ContextThemeWrapper) r1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)>($r12, r16);

     label03:
        return r1;

     label04:
        $r14 := @caughtexception;

        r17 = $r14;

     label05:
        $z5 = r1 instanceof androidx.appcompat.view.ContextThemeWrapper;

        if $z5 == 0 goto label09;

        r18 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean)>(r1, i0, r2, null, 0);

     label06:
        $r11 = (androidx.appcompat.view.ContextThemeWrapper) r1;

        virtualinvoke $r11.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>(r18);

     label07:
        return r1;

     label08:
        $r15 := @caughtexception;

        r19 = $r15;

     label09:
        $z2 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if $z2 != 0 goto label10;

        $r10 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>(r1);

        return $r10;

     label10:
        r20 = null;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 17 goto label11;

        r28 = new android.content.res.Configuration;

        specialinvoke r28.<android.content.res.Configuration: void <init>()>();

        r21 = r28;

        r21.<android.content.res.Configuration: int uiMode> = -1;

        r21.<android.content.res.Configuration: float fontScale> = 0.0F;

        $r7 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration)>(r1, r21);

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r22 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r23 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i3 = r23.<android.content.res.Configuration: int uiMode>;

        r22.<android.content.res.Configuration: int uiMode> = $i3;

        $z3 = virtualinvoke r22.<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>(r23);

        if $z3 != 0 goto label11;

        r20 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)>(r22, r23);

     label11:
        r24 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean)>(r1, i0, r2, r20, 1);

        r29 = new androidx.appcompat.view.ContextThemeWrapper;

        $i4 = <androidx.appcompat.R$style: int Theme_AppCompat_Empty>;

        specialinvoke r29.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, $i4);

        r26 = r29;

        virtualinvoke r26.<androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>(r24);

     label12:
        $r27 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        if $r27 == null goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        z7 = $z6;

     label15:
        goto label17;

     label16:
        $r13 := @caughtexception;

        r3 = $r13;

        z7 = 0;

     label17:
        if z7 == 0 goto label18;

        $r5 = virtualinvoke r26.<androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>();

        staticinvoke <androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)>($r5);

     label18:
        r30 = (android.content.Context) r26;

        $r4 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)>(r30);

        return $r4;

        catch java.lang.IllegalStateException from label02 to label03 with label04;
        catch java.lang.IllegalStateException from label06 to label07 with label08;
        catch java.lang.NullPointerException from label12 to label15 with label16;
    }

    public void onCreate(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.os.Bundle r1;
        java.lang.Object $r2, $r3;
        boolean $z1;
        android.app.Activity $r4;
        java.lang.Throwable $r5, r7;
        java.lang.String r6;
        androidx.appcompat.app.ActionBar r8;
        android.content.res.Configuration $r9, $r12;
        android.content.Context $r10;
        android.content.res.Resources $r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.os.Bundle;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached> = 1;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean)>(0);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r2 instanceof android.app.Activity;

        if $z1 == 0 goto label7;

        r6 = null;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r4 = (android.app.Activity) $r3;

        r6 = staticinvoke <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

     label4:
        if r6 == null goto label6;

        r8 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if r8 != null goto label5;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp> = 1;

        goto label6;

     label5:
        virtualinvoke r8.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>(1);

     label6:
        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)>(r0);

     label7:
        $r9 = new android.content.res.Configuration;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r9.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r12);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration mEffectiveConfiguration> = $r9;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated> = 1;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void onPostCreate(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.os.Bundle r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        return;
    }

    public androidx.appcompat.app.ActionBar getSupportActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return $r1;
    }

    final androidx.appcompat.app.ActionBar peekSupportActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        return $r1;
    }

    final android.view.Window$Callback getWindowCallback()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window $r1;
        android.view.Window$Callback $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.Window$Callback getCallback()>();

        return $r2;
    }

    private void initWindowDecorActionBar()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.appcompat.app.ActionBar $r1, $r4, $r11;
        java.lang.Object $r2, $r3, $r6, $r9;
        androidx.appcompat.app.WindowDecorActionBar $r5, $r8;
        android.app.Dialog $r7;
        android.app.Activity $r10;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r1 == null goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r2 instanceof android.app.Activity;

        if $z1 == 0 goto label3;

        $r8 = new androidx.appcompat.app.WindowDecorActionBar;

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r10 = (android.app.Activity) $r9;

        $z4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        specialinvoke $r8.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Activity,boolean)>($r10, $z4);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $r8;

        goto label4;

     label3:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z2 = $r3 instanceof android.app.Dialog;

        if $z2 == 0 goto label4;

        $r5 = new androidx.appcompat.app.WindowDecorActionBar;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r7 = (android.app.Dialog) $r6;

        specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar: void <init>(android.app.Dialog)>($r7);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = $r5;

     label4:
        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r11 == null goto label5;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        $z3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp>;

        virtualinvoke $r4.<androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>($z3);

     label5:
        return;
    }

    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.Toolbar r1;
        androidx.appcompat.app.ActionBar r2;
        androidx.appcompat.app.ToolbarActionBar r3, $r6;
        java.lang.Object $r4;
        boolean $z0, $z1;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5, $r8, $r10;
        java.lang.CharSequence $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.widget.Toolbar;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r4 instanceof android.app.Activity;

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        $z1 = r2 instanceof androidx.appcompat.app.WindowDecorActionBar;

        if $z1 == 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.");

        throw $r11;

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = null;

        if r2 == null goto label3;

        virtualinvoke r2.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label3:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = null;

        if r1 == null goto label4;

        $r6 = new androidx.appcompat.app.ToolbarActionBar;

        $r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        specialinvoke $r6.<androidx.appcompat.app.ToolbarActionBar: void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)>(r1, $r7, $r8);

        r3 = $r6;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar> = r3;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r9 = r3.<androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mMenuCallback>;

        virtualinvoke $r10.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>($r9);

        virtualinvoke r1.<androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)>(1);

        goto label5;

     label4:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)>(null);

     label5:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()>();

        return;
    }

    final android.content.Context getActionBarThemedContext()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar r1;
        android.content.Context r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 = null;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

     label1:
        if r2 != null goto label2;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        return r2;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.MenuInflater $r1, $r7;
        androidx.appcompat.view.SupportMenuInflater $r2;
        androidx.appcompat.app.ActionBar $r3, $r4;
        android.content.Context $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        if $r1 != null goto label3;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()>();

        $r2 = new androidx.appcompat.view.SupportMenuInflater;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        $r6 = virtualinvoke $r4.<androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()>();

        goto label2;

     label1:
        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label2:
        specialinvoke $r2.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($r6);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater> = $r2;

     label3:
        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater>;

        return $r7;
    }

    public android.view.View findViewById(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration r1, $r5, $r8;
        androidx.appcompat.app.ActionBar r2;
        boolean $z0, $z2;
        androidx.appcompat.widget.AppCompatDrawableManager $r3;
        android.content.Context $r4, $r6;
        android.content.res.Resources $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.res.Configuration;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label1;

        $z2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z2 == 0 goto label1;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()>();

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        virtualinvoke $r3.<androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)>($r4);

        $r5 = new android.content.res.Configuration;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r5.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r8);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration mEffectiveConfiguration> = $r5;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean,boolean)>(0, 0);

        return;
    }

    public void onStart()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean,boolean)>(1, 0);

        return;
    }

    public void onStop()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(0);

     label1:
        return;
    }

    public void onPostResume()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)>(1);

     label1:
        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r4;
        android.view.ViewGroup r2, $r3;
        android.view.Window $r5;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r6;
        android.view.Window$Callback $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r4 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r2 = (android.view.ViewGroup) $r4;

        virtualinvoke r2.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View)>(r1);

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r7 = virtualinvoke $r5.<android.view.Window: android.view.Window$Callback getCallback()>();

        virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)>($r7);

        return;
    }

    public void setContentView(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        android.view.ViewGroup r1, $r2;
        android.view.View $r3;
        android.content.Context $r4;
        android.view.LayoutInflater $r5;
        android.view.Window $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r8;
        android.view.Window$Callback $r9;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r1 = (android.view.ViewGroup) $r3;

        virtualinvoke r1.<android.view.ViewGroup: void removeAllViews()>();

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4);

        virtualinvoke $r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i0, r1);

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r9 = virtualinvoke $r7.<android.view.Window: android.view.Window$Callback getCallback()>();

        virtualinvoke $r8.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)>($r9);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r5;
        android.view.ViewGroup$LayoutParams r2;
        android.view.ViewGroup r3, $r4;
        android.view.Window $r6;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r7;
        android.view.Window$Callback $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r3 = (android.view.ViewGroup) $r5;

        virtualinvoke r3.<android.view.ViewGroup: void removeAllViews()>();

        virtualinvoke r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r8 = virtualinvoke $r6.<android.view.Window: android.view.Window$Callback getCallback()>();

        virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)>($r8);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r5;
        android.view.ViewGroup$LayoutParams r2;
        android.view.ViewGroup r3, $r4;
        android.view.Window $r6;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r7;
        android.view.Window$Callback $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()>();

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r3 = (android.view.ViewGroup) $r5;

        virtualinvoke r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r8 = virtualinvoke $r6.<android.view.Window: android.view.Window$Callback getCallback()>();

        virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnContentChanged(android.view.Window$Callback)>($r8);

        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.os.Bundle r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.os.Bundle;

        return;
    }

    public void onDestroy()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r1, $r4, $r5, $r7, $r17;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        androidx.appcompat.app.ActionBar $r3, $r20;
        android.app.Activity $r6;
        androidx.collection.SimpleArrayMap $r8, $r16;
        java.lang.Class $r9, $r18;
        java.lang.String $r10, $r19;
        java.lang.Integer $r11;
        android.view.Window $r13;
        android.view.View $r14;
        java.lang.Runnable $r15;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)>(r0);

     label1:
        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z1 == 0 goto label2;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r14 = virtualinvoke $r13.<android.view.Window: android.view.View getDecorView()>();

        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $r14.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r15);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed> = 1;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i0 == -100 goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z2 = $r4 instanceof android.app.Activity;

        if $z2 == 0 goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r6 = (android.app.Activity) $r5;

        $z3 = virtualinvoke $r6.<android.app.Activity: boolean isChangingConfigurations()>();

        if $z3 == 0 goto label3;

        $r8 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r9 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r8.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label4;

     label3:
        $r16 = <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes>;

        $r17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r16.<androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>($r19);

     label4:
        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        if $r20 == null goto label5;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar>;

        virtualinvoke $r3.<androidx.appcompat.app.ActionBar: void onDestroy()>();

     label5:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()>();

        return;
    }

    private void cleanupAutoManagers()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r1, $r2, $r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r1 == null goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label2:
        return;
    }

    public void setTheme(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId> = i0;

        return;
    }

    private void ensureWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window $r1, $r6, $r7;
        java.lang.IllegalStateException $r2;
        java.lang.Object $r3, $r4;
        boolean $z0;
        android.app.Activity $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $r1 != null goto label1;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r3 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r5 = (android.app.Activity) $r4;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.view.Window getWindow()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)>($r6);

     label1:
        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $r7 != null goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We have not been given a Window");

        throw $r2;

     label2:
        return;
    }

    private void attachToWindow(android.view.Window)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window r1, $r5;
        android.view.Window$Callback r2;
        androidx.appcompat.widget.TintTypedArray r3;
        android.graphics.drawable.Drawable r4;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r6, $r7;
        int[] $r8;
        android.content.Context $r9;
        int $i0;
        android.window.OnBackInvokedDispatcher $r10;
        java.lang.IllegalStateException $r11, $r12;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.Window;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        if $r5 == null goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw $r12;

     label1:
        r2 = virtualinvoke r1.<android.view.Window: android.view.Window$Callback getCallback()>();

        $z0 = r2 instanceof androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        if $z0 == 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");

        throw $r11;

     label2:
        $r6 = new androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        specialinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)>(r0, r2);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback> = $r6;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        virtualinvoke r1.<android.view.Window: void setCallback(android.view.Window$Callback)>($r7);

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r8 = <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable>;

        r3 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>($r9, null, $r8);

        r4 = virtualinvoke r3.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)>(0);

        if r4 == null goto label3;

        virtualinvoke r1.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r4);

     label3:
        virtualinvoke r3.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow> = r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label4;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        if $r10 != null goto label4;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)>(null);

     label4:
        return;
    }

    private void ensureSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.CharSequence r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r2;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup $r3, $r11;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        androidx.appcompat.widget.DecorContentParent $r5, $r10;
        androidx.appcompat.app.ActionBar $r6, $r9;
        android.widget.TextView $r7, $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z0 != 0 goto label5;

        $r3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor> = $r3;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r5 == null goto label1;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r10.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>(r1);

        goto label3;

     label1:
        $r6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r6 == null goto label2;

        $r9 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $r9.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>(r1);

        goto label3;

     label2:
        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if $r7 == null goto label3;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        virtualinvoke $r8.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label3:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()>();

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)>($r11);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled> = 1;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        $z2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z2 != 0 goto label5;

        if r2 == null goto label4;

        $r4 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r4 != null goto label5;

     label4:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(108);

     label5:
        return;
    }

    private android.view.ViewGroup createSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.TypedArray r1;
        android.view.LayoutInflater r2, $r37;
        android.view.View r3, $r9, $r10, $r12, $r14, $r33, $r38, $r39, $r48, r67, r68, r69;
        int[] $r4;
        android.content.Context $r5, $r8, $r35, $r47, r66;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z25;
        android.view.Window $r6, $r11, $r56;
        android.widget.FrameLayout $r13;
        android.widget.TextView $r15;
        androidx.appcompat.widget.FitWindowsViewGroup $r17;
        java.lang.StringBuilder $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, r61;
        java.lang.String $r32;
        android.content.res.Resources$Theme $r36;
        androidx.appcompat.widget.DecorContentParent $r40, $r41, $r43, $r44, $r45, $r53;
        android.view.Window$Callback $r42;
        android.view.ViewGroup r50, r55;
        android.util.TypedValue r51, r59;
        java.lang.Object r52;
        androidx.appcompat.widget.ContentFrameLayout r54;
        java.lang.IllegalStateException r58;
        androidx.appcompat.view.ContextThemeWrapper r60;
        java.lang.IllegalArgumentException r62;
        androidx.appcompat.app.AppCompatDelegateImpl$3 r63;
        androidx.appcompat.app.AppCompatDelegateImpl$4 r64;
        androidx.appcompat.app.AppCompatDelegateImpl$5 r65;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        r1 = virtualinvoke $r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);

        $i0 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 != 0 goto label01;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        r58 = new java.lang.IllegalStateException;

        specialinvoke r58.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        throw r58;

     label01:
        $i1 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        if $z1 == 0 goto label02;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(1);

        goto label03;

     label02:
        $i2 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar>;

        $z2 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 0);

        if $z2 == 0 goto label03;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(108);

     label03:
        $i17 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay>;

        $z25 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i17, 0);

        if $z25 == 0 goto label04;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(109);

     label04:
        $i3 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay>;

        $z3 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i3, 0);

        if $z3 == 0 goto label05;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)>(10);

     label05:
        $i4 = <androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating>;

        $z4 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, 0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating> = $z4;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()>();

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r8);

        r50 = null;

        $z5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $z5 != 0 goto label12;

        $z14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if $z14 == 0 goto label06;

        $i16 = <androidx.appcompat.R$layout: int abc_dialog_title_material>;

        $r48 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i16, null);

        r50 = (android.view.ViewGroup) $r48;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

        goto label14;

     label06:
        $z15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z15 == 0 goto label14;

        r59 = new android.util.TypedValue;

        specialinvoke r59.<android.util.TypedValue: void <init>()>();

        r51 = r59;

        $r35 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r36 = virtualinvoke $r35.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i11 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke $r36.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i11, r51, 1);

        $i12 = r51.<android.util.TypedValue: int resourceId>;

        if $i12 == 0 goto label07;

        r60 = new androidx.appcompat.view.ContextThemeWrapper;

        $r47 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i15 = r51.<android.util.TypedValue: int resourceId>;

        specialinvoke r60.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r47, $i15);

        r52 = r60;

        goto label08;

     label07:
        r52 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label08:
        r66 = (android.content.Context) r52;

        $r37 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r66);

        $i13 = <androidx.appcompat.R$layout: int abc_screen_toolbar>;

        $r38 = virtualinvoke $r37.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i13, null);

        r50 = (android.view.ViewGroup) $r38;

        $i14 = <androidx.appcompat.R$id: int decor_content_parent>;

        $r39 = virtualinvoke r50.<android.view.ViewGroup: android.view.View findViewById(int)>($i14);

        $r40 = (androidx.appcompat.widget.DecorContentParent) $r39;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent> = $r40;

        $r41 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r42 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        interfaceinvoke $r41.<androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)>($r42);

        $z17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        if $z17 == 0 goto label09;

        $r45 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r45.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(109);

     label09:
        $z18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        if $z18 == 0 goto label10;

        $r44 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r44.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(2);

     label10:
        $z19 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        if $z19 == 0 goto label11;

        $r43 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r43.<androidx.appcompat.widget.DecorContentParent: void initFeature(int)>(5);

     label11:
        goto label14;

     label12:
        $z6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $z6 == 0 goto label13;

        $i10 = <androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode>;

        $r33 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i10, null);

        r50 = (android.view.ViewGroup) $r33;

        goto label14;

     label13:
        $i5 = <androidx.appcompat.R$layout: int abc_screen_simple>;

        $r9 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i5, null);

        r50 = (android.view.ViewGroup) $r9;

     label14:
        if r50 != null goto label15;

        r62 = new java.lang.IllegalArgumentException;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppCompat does not support the current theme features: { windowActionBar: ");

        $z9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionBarOverlay: ");

        $z10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", android:windowIsFloating: ");

        $z11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowActionModeOverlay: ");

        $z12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", windowNoTitle: ");

        $z13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r62.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw r62;

     label15:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label16;

        r63 = new androidx.appcompat.app.AppCompatDelegateImpl$3;

        specialinvoke r63.<androidx.appcompat.app.AppCompatDelegateImpl$3: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r67 = (android.view.View) r50;

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>(r67, r63);

        goto label17;

     label16:
        $z7 = r50 instanceof androidx.appcompat.widget.FitWindowsViewGroup;

        if $z7 == 0 goto label17;

        $r17 = (androidx.appcompat.widget.FitWindowsViewGroup) r50;

        r64 = new androidx.appcompat.app.AppCompatDelegateImpl$4;

        specialinvoke r64.<androidx.appcompat.app.AppCompatDelegateImpl$4: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        interfaceinvoke $r17.<androidx.appcompat.widget.FitWindowsViewGroup: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)>(r64);

     label17:
        $r53 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r53 != null goto label18;

        $i9 = <androidx.appcompat.R$id: int title>;

        $r14 = virtualinvoke r50.<android.view.ViewGroup: android.view.View findViewById(int)>($i9);

        $r15 = (android.widget.TextView) $r14;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView> = $r15;

     label18:
        r68 = (android.view.View) r50;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)>(r68);

        $i7 = <androidx.appcompat.R$id: int action_bar_activity_content>;

        $r10 = virtualinvoke r50.<android.view.ViewGroup: android.view.View findViewById(int)>($i7);

        r54 = (androidx.appcompat.widget.ContentFrameLayout) $r10;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r12 = virtualinvoke $r11.<android.view.Window: android.view.View findViewById(int)>(16908290);

        r55 = (android.view.ViewGroup) $r12;

        if r55 == null goto label21;

     label19:
        $i8 = virtualinvoke r55.<android.view.ViewGroup: int getChildCount()>();

        if $i8 <= 0 goto label20;

        r3 = virtualinvoke r55.<android.view.ViewGroup: android.view.View getChildAt(int)>(0);

        virtualinvoke r55.<android.view.ViewGroup: void removeViewAt(int)>(0);

        virtualinvoke r54.<androidx.appcompat.widget.ContentFrameLayout: void addView(android.view.View)>(r3);

        goto label19;

     label20:
        virtualinvoke r55.<android.view.ViewGroup: void setId(int)>(-1);

        virtualinvoke r54.<androidx.appcompat.widget.ContentFrameLayout: void setId(int)>(16908290);

        $z8 = r55 instanceof android.widget.FrameLayout;

        if $z8 == 0 goto label21;

        $r13 = (android.widget.FrameLayout) r55;

        virtualinvoke $r13.<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>(null);

     label21:
        $r56 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        r69 = (android.view.View) r50;

        virtualinvoke $r56.<android.view.Window: void setContentView(android.view.View)>(r69);

        r65 = new androidx.appcompat.app.AppCompatDelegateImpl$5;

        specialinvoke r65.<androidx.appcompat.app.AppCompatDelegateImpl$5: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        virtualinvoke r54.<androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)>(r65);

        return r50;
    }

    void onSubDecorInstalled(android.view.ViewGroup)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.ViewGroup;

        return;
    }

    private void applyFixedSizeWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.ContentFrameLayout r1;
        android.view.View r2, $r5;
        android.content.res.TypedArray r3;
        android.view.ViewGroup $r4;
        android.view.Window $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] $r7;
        android.content.Context $r8;
        android.util.TypedValue $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View findViewById(int)>(16908290);

        r1 = (androidx.appcompat.widget.ContentFrameLayout) $r5;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        r2 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        $i0 = virtualinvoke r2.<android.view.View: int getPaddingLeft()>();

        $i1 = virtualinvoke r2.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke r2.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke r2.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r7 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        r3 = virtualinvoke $r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r7);

        $i4 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor>;

        $r9 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i4, $r9);

        $i5 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor>;

        $r10 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i5, $r10);

        $i6 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i6);

        if $z2 == 0 goto label1;

        $i13 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor>;

        $r14 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i13, $r14);

     label1:
        $i7 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i7);

        if $z3 == 0 goto label2;

        $i12 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor>;

        $r13 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i12, $r13);

     label2:
        $i8 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i8);

        if $z4 == 0 goto label3;

        $i11 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor>;

        $r12 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i11, $r12);

     label3:
        $i9 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $z5 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>($i9);

        if $z5 == 0 goto label4;

        $i10 = <androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor>;

        $r11 = virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()>();

        virtualinvoke r3.<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>($i10, $r11);

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r1.<androidx.appcompat.widget.ContentFrameLayout: void requestLayout()>();

        return;
    }

    public boolean requestWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0, $z1, $z2;
        android.view.Window $r1;
        int i0, i1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        i1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>(i0);

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

        if $z0 == 0 goto label1;

        if i1 != 108 goto label1;

        return 0;

     label1:
        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z1 == 0 goto label2;

        if i1 != 1 goto label2;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 0;

     label2:
        lookupswitch(i1)
        {
            case 1: goto label8;
            case 2: goto label6;
            case 5: goto label7;
            case 10: goto label5;
            case 108: goto label3;
            case 109: goto label4;
            default: goto label9;
        };

     label3:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar> = 1;

        return 1;

     label4:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar> = 1;

        return 1;

     label5:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode> = 1;

        return 1;

     label6:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress> = 1;

        return 1;

     label7:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress> = 1;

        return 1;

     label8:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle> = 1;

        return 1;

     label9:
        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $z2 = virtualinvoke $r1.<android.view.Window: boolean requestFeature(int)>(i1);

        return $z2;
    }

    public boolean hasWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1;
        android.view.Window $r1;
        boolean $z0, z1, $z2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        z1 = 0;

        $i1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)>(i0);

        lookupswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label04;
            case 5: goto label05;
            case 10: goto label03;
            case 108: goto label01;
            case 109: goto label02;
            default: goto label07;
        };

     label01:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        goto label07;

     label02:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar>;

        goto label07;

     label03:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        goto label07;

     label04:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress>;

        goto label07;

     label05:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress>;

        goto label07;

     label06:
        z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle>;

     label07:
        if z1 != 0 goto label08;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $z0 = virtualinvoke $r1.<android.view.Window: boolean hasFeature(int)>(i0);

        if $z0 == 0 goto label09;

     label08:
        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        return $z2;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.CharSequence r1;
        androidx.appcompat.widget.DecorContentParent $r2, $r7;
        androidx.appcompat.app.ActionBar $r3, $r6;
        android.widget.TextView $r4, $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle> = r1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r2 == null goto label1;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r7.<androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>(r1);

        goto label3;

     label1:
        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r3 == null goto label2;

        $r6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        virtualinvoke $r6.<androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>(r1);

        goto label3;

     label2:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        if $r4 == null goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

     label3:
        return;
    }

    final java.lang.CharSequence getTitle()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r1, $r3;
        boolean $z0;
        java.lang.CharSequence $r2, $r5;
        android.app.Activity $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r4 = (android.app.Activity) $r3;

        $r5 = virtualinvoke $r4.<android.app.Activity: java.lang.CharSequence getTitle()>();

        return $r5;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle>;

        return $r2;
    }

    void onPanelClosed(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        boolean $z0;
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        if i0 != 108 goto label2;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(0);

     label1:
        goto label3;

     label2:
        if i0 != 0 goto label3;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(i0, 1);

        $z0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r2, 0);

     label3:
        return;
    }

    void onMenuOpened(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        androidx.appcompat.app.ActionBar r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        if i0 != 108 goto label1;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>(1);

     label1:
        return;
    }

    public boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r1, $r5;
        android.view.MenuItem r2;
        android.view.Window$Callback r3;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r4;
        boolean $z0, $z1;
        int $i0;
        android.view.Menu r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        r2 := @parameter1: android.view.MenuItem;

        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r3 == null goto label1;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r1.<androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()>();

        r6 = (android.view.Menu) $r5;

        r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)>(r6);

        if r4 == null goto label1;

        $i0 = r4.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $z1 = interfaceinvoke r3.<android.view.Window$Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>($i0, r2);

        return $z1;

     label1:
        return 0;
    }

    public void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)>(1);

        return;
    }

    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.ActionMode$Callback r1;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r2, $r5;
        androidx.appcompat.app.ActionBar r3;
        androidx.appcompat.view.ActionMode $r4, $r6, $r7, $r8, $r9, $r11, $r13, $r15;
        androidx.appcompat.app.AppCompatCallback $r10, $r12;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ActionMode callback can not be null.");

        throw $r14;

     label1:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r4 == null goto label2;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke $r13.<androidx.appcompat.view.ActionMode: void finish()>();

     label2:
        $r5 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(r0, r1);

        r2 = $r5;

        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r3 == null goto label3;

        $r8 = virtualinvoke r3.<androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)>(r2);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $r8;

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r9 == null goto label3;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $r10 == null goto label3;

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        interfaceinvoke $r12.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>($r11);

     label3:
        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r15 != null goto label4;

        $r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)>(r2);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = $r7;

     label4:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return $r6;
    }

    public void invalidateOptionsMenu()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.ActionBar $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)>(0);

        return;
    }

    androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Resources$Theme r1, $r48, $r58, r67;
        androidx.appcompat.view.ActionMode $r2, $r6, $r61, r64, $r73, $r74;
        boolean $z0, $z1, $z2, $z3, $z5, $z8, $z9;
        androidx.appcompat.app.AppCompatCallback $r3, $r5, $r7, $r59;
        androidx.appcompat.widget.ActionBarContextView $r4, $r8, $r10, $r13, $r15, $r16, $r17, $r18, $r23, $r26, $r27, $r39, $r45, $r51, $r70, r78;
        android.content.Context $r11, $r36, $r41, $r54, $r57, r83, r84, r85, r87, r88;
        android.widget.PopupWindow $r12, $r44, $r46, $r47, $r52, $r72, r79;
        android.view.Menu $r14;
        android.view.ViewParent $r19, $r24;
        android.view.Window $r20;
        android.view.View $r21, $r25, $r35, $r38, r86, r89;
        java.lang.Runnable $r22;
        androidx.core.view.ViewPropertyAnimatorCompat $r28, $r29, $r31;
        androidx.appcompat.view.ActionMode$Callback $r33, r63;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        android.view.ViewGroup $r34;
        android.view.LayoutInflater $r37;
        android.content.res.Resources $r49, $r55;
        android.util.DisplayMetrics $r50;
        java.lang.Throwable $r62, r65;
        android.util.TypedValue r66, r76;
        java.lang.Object r68;
        androidx.appcompat.widget.ViewStubCompat r69;
        androidx.appcompat.view.StandaloneActionMode r71, r81;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r75;
        androidx.appcompat.view.ContextThemeWrapper r77;
        androidx.appcompat.app.AppCompatDelegateImpl$6 r80;
        androidx.appcompat.app.AppCompatDelegateImpl$7 r82;
        androidx.core.view.ViewPropertyAnimatorListener r90;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r63 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r2 == null goto label01;

        $r61 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke $r61.<androidx.appcompat.view.ActionMode: void finish()>();

     label01:
        $z0 = r63 instanceof androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        if $z0 != 0 goto label02;

        r75 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke r75.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)>(r0, r63);

        r63 = r75;

     label02:
        r64 = null;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $r3 == null goto label06;

        $z8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z8 != 0 goto label06;

     label03:
        $r59 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        r64 = interfaceinvoke $r59.<androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)>(r63);

     label04:
        goto label06;

     label05:
        $r62 := @caughtexception;

        r65 = $r62;

     label06:
        if r64 == null goto label07;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = r64;

        goto label17;

     label07:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if $r4 != null goto label11;

        $z5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating>;

        if $z5 == 0 goto label10;

        r76 = new android.util.TypedValue;

        specialinvoke r76.<android.util.TypedValue: void <init>()>();

        r66 = r76;

        $r41 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r1 = virtualinvoke $r41.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i1 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke r1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i1, r66, 1);

        $i2 = r66.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label08;

        $r54 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r55 = virtualinvoke $r54.<android.content.Context: android.content.res.Resources getResources()>();

        r67 = virtualinvoke $r55.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke r67.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r1);

        $i6 = r66.<android.util.TypedValue: int resourceId>;

        virtualinvoke r67.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i6, 1);

        r77 = new androidx.appcompat.view.ContextThemeWrapper;

        $r57 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke r77.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r57, 0);

        r68 = r77;

        r83 = (android.content.Context) r68;

        $r58 = virtualinvoke r83.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r58.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r67);

        goto label09;

     label08:
        r68 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label09:
        r78 = new androidx.appcompat.widget.ActionBarContextView;

        r84 = (android.content.Context) r68;

        specialinvoke r78.<androidx.appcompat.widget.ActionBarContextView: void <init>(android.content.Context)>(r84);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = r78;

        r79 = new android.widget.PopupWindow;

        $i3 = <androidx.appcompat.R$attr: int actionModePopupWindowStyle>;

        r85 = (android.content.Context) r68;

        specialinvoke r79.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>(r85, null, $i3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = r79;

        $r44 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        staticinvoke <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>($r44, 2);

        $r46 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        $r45 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r86 = (android.view.View) $r45;

        virtualinvoke $r46.<android.widget.PopupWindow: void setContentView(android.view.View)>(r86);

        $r47 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r47.<android.widget.PopupWindow: void setWidth(int)>(-1);

        r87 = (android.content.Context) r68;

        $r48 = virtualinvoke r87.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i4 = <androidx.appcompat.R$attr: int actionBarSize>;

        virtualinvoke $r48.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i4, r66, 1);

        $i5 = r66.<android.util.TypedValue: int data>;

        r88 = (android.content.Context) r68;

        $r49 = virtualinvoke r88.<android.content.Context: android.content.res.Resources getResources()>();

        $r50 = virtualinvoke $r49.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i7 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i5, $r50);

        $r51 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r51.<androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)>(i7);

        $r52 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r52.<android.widget.PopupWindow: void setHeight(int)>(-2);

        r80 = new androidx.appcompat.app.AppCompatDelegateImpl$6;

        specialinvoke r80.<androidx.appcompat.app.AppCompatDelegateImpl$6: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup> = r80;

        goto label11;

     label10:
        $r34 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $i0 = <androidx.appcompat.R$id: int action_mode_bar_stub>;

        $r35 = virtualinvoke $r34.<android.view.ViewGroup: android.view.View findViewById(int)>($i0);

        r69 = (androidx.appcompat.widget.ViewStubCompat) $r35;

        if r69 == null goto label11;

        $r36 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        $r37 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r36);

        virtualinvoke r69.<androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)>($r37);

        $r38 = virtualinvoke r69.<androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()>();

        $r39 = (androidx.appcompat.widget.ActionBarContextView) $r38;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView> = $r39;

     label11:
        $r70 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if $r70 == null goto label17;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r8.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        r81 = new androidx.appcompat.view.StandaloneActionMode;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r11 = virtualinvoke $r10.<androidx.appcompat.widget.ActionBarContextView: android.content.Context getContext()>();

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r33 = r63;

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if $r12 != null goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        specialinvoke r81.<androidx.appcompat.view.StandaloneActionMode: void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)>($r11, $r13, $r33, $z9);

        r71 = r81;

        $r14 = virtualinvoke r71.<androidx.appcompat.view.ActionMode: android.view.Menu getMenu()>();

        $z1 = interfaceinvoke r63.<androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>(r71, $r14);

        if $z1 == 0 goto label16;

        virtualinvoke r71.<androidx.appcompat.view.ActionMode: void invalidate()>();

        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r15.<androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)>(r71);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = r71;

        $z2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()>();

        if $z2 == 0 goto label14;

        $r26 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r26.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(0.0F);

        $r27 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r89 = (android.view.View) $r27;

        $r28 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r89);

        $r29 = virtualinvoke $r28.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = $r29;

        $r31 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        r82 = new androidx.appcompat.app.AppCompatDelegateImpl$7;

        specialinvoke r82.<androidx.appcompat.app.AppCompatDelegateImpl$7: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r90 = (androidx.core.view.ViewPropertyAnimatorListener) r82;

        virtualinvoke $r31.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(r90);

        goto label15;

     label14:
        $r16 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r16.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        $r17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r17.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        $r18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r19 = virtualinvoke $r18.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $z3 = $r19 instanceof android.view.View;

        if $z3 == 0 goto label15;

        $r23 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r24 = virtualinvoke $r23.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $r25 = (android.view.View) $r24;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r25);

     label15:
        $r72 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if $r72 == null goto label17;

        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r21 = virtualinvoke $r20.<android.view.Window: android.view.View getDecorView()>();

        $r22 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $r21.<android.view.View: boolean post(java.lang.Runnable)>($r22);

        goto label17;

     label16:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = null;

     label17:
        $r73 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r73 == null goto label18;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $r5 == null goto label18;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        interfaceinvoke $r7.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)>($r6);

     label18:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

        $r74 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        return $r74;

        catch java.lang.AbstractMethodError from label03 to label04 with label05;
    }

    final boolean shouldAnimateActionModeView()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0, $z1, $z2;
        android.view.ViewGroup $r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r3 = (android.view.View) $r2;

        $z1 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>(r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setHandleNativeActionModesEnabled(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 := @parameter0: boolean;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes> = z0;

        return;
    }

    public boolean isHandleNativeActionModesEnabled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes>;

        return $z0;
    }

    void endOnGoingFadeAnimation()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1, $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        virtualinvoke $r2.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        return;
    }

    boolean shouldRegisterBackInvokedCallback()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        android.window.OnBackInvokedDispatcher $r2;
        androidx.appcompat.view.ActionMode $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.window.OnBackInvokedDispatcher mDispatcher>;

        if $r2 != null goto label1;

        return 0;

     label1:
        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if r1 == null goto label2;

        $z0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r3 == null goto label3;

        return 1;

     label3:
        return 0;
    }

    boolean onBackPressed()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0, $z1, $z2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        androidx.appcompat.app.ActionBar r2;
        androidx.appcompat.view.ActionMode $r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = 0;

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if r1 == null goto label2;

        $z2 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z2 == 0 goto label2;

        if z0 != 0 goto label1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r1, 1);

     label1:
        return 1;

     label2:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r3 == null goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        virtualinvoke $r4.<androidx.appcompat.view.ActionMode: void finish()>();

        return 1;

     label3:
        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r2 == null goto label4;

        $z1 = virtualinvoke r2.<androidx.appcompat.app.ActionBar: boolean collapseActionView()>();

        if $z1 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1, $i2;
        android.view.KeyEvent r1;
        androidx.appcompat.app.ActionBar r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z1, z2, z3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)>(i0, r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r4 == null goto label3;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>($r6, $i2, r1, 1);

        if z2 == 0 goto label3;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r7 == null goto label2;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        $r8.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 1;

     label2:
        return 1;

     label3:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r5 != null goto label4;

        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r3, r1);

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        z3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)>(r3, $i1, r1, 1);

        r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        if z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.KeyEvent r1;
        int i0, $i1, i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r2, $r7;
        android.view.Window $r3, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        android.view.Window$Callback $r6;
        android.view.View r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r2 instanceof androidx.core.view.KeyEventDispatcher$Component;

        if $z1 != 0 goto label1;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z4 = $r7 instanceof androidx.appcompat.app.AppCompatDialog;

        if $z4 == 0 goto label2;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        r8 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        if r8 == null goto label2;

        $z3 = staticinvoke <androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>(r8, r1);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 82 goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r6 = virtualinvoke $r4.<android.view.Window: android.view.Window$Callback getCallback()>();

        $z2 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean bypassDispatchKeyEvent(android.view.Window$Callback,android.view.KeyEvent)>($r6, r1);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if i0 != 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        z0 = $z5;

        if z0 == 0 goto label6;

        $z6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)>(i2, r1);

        goto label7;

     label6:
        $z6 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)>(i2, r1);

     label7:
        return $z6;
    }

    boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 4: goto label2;
            case 82: goto label1;
            default: goto label3;
        };

     label1:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)>(0, r1);

        return 1;

     label2:
        $z1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1, $i2;
        android.view.KeyEvent r1;
        boolean $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 4: goto label2;
            case 82: goto label1;
            default: goto label5;
        };

     label1:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)>(0, r1);

        return 1;

     label2:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getFlags()>();

        $i2 = $i1 & 128;

        if $i2 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown> = $z1;

     label5:
        return 0;
    }

    public android.view.View createView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r33;
        java.lang.String r2, r5, $r27;
        android.content.Context r3, $r13, $r14;
        android.util.AttributeSet r4;
        androidx.appcompat.app.AppCompatViewInflater $r6, $r20, $r21, $r28, $r32;
        androidx.appcompat.app.LayoutIncludeDetector $r7, $r8, $r11;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        android.view.ViewParent $r9;
        org.xmlpull.v1.XmlPullParser $r10;
        int $i0, $i1;
        int[] $r12;
        java.lang.ClassLoader $r15;
        java.lang.Class[] $r16;
        java.lang.reflect.Constructor $r17;
        java.lang.Object[] $r18;
        java.lang.Object $r19;
        java.lang.Throwable $r22, r31;
        java.lang.StringBuilder $r23, $r24, $r25, $r26;
        android.content.res.TypedArray r29;
        java.lang.Class r30;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        if $r6 != null goto label04;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r12 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        r29 = virtualinvoke $r13.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r12);

        $i1 = <androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass>;

        r5 = virtualinvoke r29.<android.content.res.TypedArray: java.lang.String getString(int)>($i1);

        if r5 != null goto label01;

        $r21 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke $r21.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = $r21;

        goto label04;

     label01:
        $r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        r30 = virtualinvoke $r15.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);

        $r16 = newarray (java.lang.Class)[0];

        $r17 = virtualinvoke r30.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r16);

        $r18 = newarray (java.lang.Object)[0];

        $r19 = virtualinvoke $r17.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r18);

        $r20 = (androidx.appcompat.app.AppCompatViewInflater) $r19;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = $r20;

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        r31 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to instantiate custom view inflater ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Falling back to default.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", $r27, r31);

        $r28 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke $r28.<androidx.appcompat.app.AppCompatViewInflater: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater> = $r28;

     label04:
        z2 = 0;

        $z3 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if $z3 == 0 goto label10;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector>;

        if $r7 != null goto label05;

        $r11 = new androidx.appcompat.app.LayoutIncludeDetector;

        specialinvoke $r11.<androidx.appcompat.app.LayoutIncludeDetector: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector> = $r11;

     label05:
        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector>;

        $z0 = virtualinvoke $r8.<androidx.appcompat.app.LayoutIncludeDetector: boolean detect(android.util.AttributeSet)>(r4);

        if $z0 == 0 goto label06;

        z2 = 1;

        goto label10;

     label06:
        $z1 = r4 instanceof org.xmlpull.v1.XmlPullParser;

        if $z1 == 0 goto label08;

        $r10 = (org.xmlpull.v1.XmlPullParser) r4;

        $i0 = interfaceinvoke $r10.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i0 <= 1 goto label07;

        $z4 = 1;

        goto label09;

     label07:
        $z4 = 0;

        goto label09;

     label08:
        $r9 = (android.view.ViewParent) r1;

        $z4 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)>($r9);

     label09:
        z2 = $z4;

     label10:
        $r32 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater>;

        $z5 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        $z6 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>();

        $r33 = virtualinvoke $r32.<androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)>(r1, r2, r3, r4, z2, $z5, 1, $z6);

        return $r33;

        catch java.lang.Throwable from label01 to label02 with label03;
    }

    private boolean shouldInheritContext(android.view.ViewParent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r3;
        android.view.Window $r2;
        boolean $z0, $z1;
        android.view.ViewParent r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r4 := @parameter0: android.view.ViewParent;

        if r4 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        r1 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

     label2:
        if r4 != null goto label3;

        return 1;

     label3:
        if r4 == r1 goto label4;

        $z0 = r4 instanceof android.view.View;

        if $z0 == 0 goto label4;

        $r3 = (android.view.View) r4;

        $z1 = staticinvoke <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>($r3);

        if $z1 == 0 goto label5;

     label4:
        return 0;

     label5:
        r4 = interfaceinvoke r4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;
    }

    public void installViewFactory()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.LayoutInflater r1;
        android.content.Context $r2;
        android.view.LayoutInflater$Factory $r3;
        android.view.LayoutInflater$Factory2 $r4;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $r3 = virtualinvoke r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>();

        if $r3 != null goto label1;

        staticinvoke <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>(r1, r0);

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>();

        $z0 = $r4 instanceof androidx.appcompat.app.AppCompatDelegateImpl;

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "The Activity\'s LayoutInflater already has a Factory installed so we can not install AppCompat\'s");

     label2:
        return;
    }

    public final android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1, $r5;
        java.lang.String r2;
        android.content.Context r3;
        android.util.AttributeSet r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.util.AttributeSet;

        $r5 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r3, r4);

        return $r5;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.String r1;
        android.content.Context r2;
        android.util.AttributeSet r3;
        android.view.View $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, r1, r2, r3);

        return $r4;
    }

    private androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0, $z1;
        android.content.ContextWrapper $r1;
        androidx.appcompat.app.AppCompatActivity $r2;
        android.content.Context r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

     label1:
        if r3 == null goto label4;

        $z0 = r3 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z0 == 0 goto label2;

        $r2 = (androidx.appcompat.app.AppCompatActivity) r3;

        return $r2;

     label2:
        $z1 = r3 instanceof android.content.ContextWrapper;

        if $z1 == 0 goto label3;

        $r1 = (android.content.ContextWrapper) r3;

        r3 = virtualinvoke $r1.<android.content.ContextWrapper: android.content.Context getBaseContext()>();

        goto label1;

     label3:
        return null;

     label4:
        return null;
    }

    private void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        android.view.KeyEvent r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        android.view.ViewParent r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, z12, $z13;
        android.content.Context $r4, $r24;
        java.lang.Object $r5;
        android.view.ViewGroup $r6, $r7, $r9, $r12, $r16, $r18, $r19, $r20, $r33;
        android.view.View $r8, $r10, $r11, $r13, $r14, $r15, $r21, $r22, r37;
        androidx.appcompat.view.menu.MenuBuilder $r23;
        android.content.res.Resources $r25;
        android.content.res.Configuration r26;
        android.view.Window$Callback r27;
        android.view.WindowManager r28;
        byte b7;
        android.view.ViewGroup$LayoutParams r29, r30, r34;
        android.view.WindowManager$LayoutParams r32, r35;
        android.view.Menu r36;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r2 := @parameter1: android.view.KeyEvent;

        $z0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 != 0 goto label01;

        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z1 == 0 goto label02;

     label01:
        return;

     label02:
        $i1 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i1 != 0 goto label05;

        $r24 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        r26 = virtualinvoke $r25.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i5 = r26.<android.content.res.Configuration: int screenLayout>;

        $i6 = $i5 & 15;

        if $i6 != 4 goto label03;

        $z11 = 1;

        goto label04;

     label03:
        $z11 = 0;

     label04:
        z12 = $z11;

        if z12 == 0 goto label05;

        return;

     label05:
        r27 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r27 == null goto label06;

        $i4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $r23 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r36 = (android.view.Menu) $r23;

        $z10 = interfaceinvoke r27.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>($i4, r36);

        if $z10 != 0 goto label06;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r1, 1);

        return;

     label06:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r28 = (android.view.WindowManager) $r5;

        if r28 != null goto label07;

        return;

     label07:
        $z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r1, r2);

        if $z2 != 0 goto label08;

        return;

     label08:
        b7 = -2;

        $r6 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $r6 == null goto label09;

        $z9 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if $z9 == 0 goto label18;

     label09:
        $r7 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $r7 != null goto label11;

        $z8 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>(r1);

        if $z8 == 0 goto label10;

        $r20 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $r20 != null goto label12;

     label10:
        return;

     label11:
        $z3 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>;

        if $z3 == 0 goto label12;

        $r18 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        $i2 = virtualinvoke $r18.<android.view.ViewGroup: int getChildCount()>();

        if $i2 <= 0 goto label12;

        $r19 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke $r19.<android.view.ViewGroup: void removeAllViews()>();

     label12:
        $z13 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>(r1);

        if $z13 == 0 goto label13;

        $z4 = virtualinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()>();

        if $z4 != 0 goto label14;

     label13:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        return;

     label14:
        $r8 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        r29 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r29 != null goto label15;

        r34 = new android.view.ViewGroup$LayoutParams;

        specialinvoke r34.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        r29 = r34;

     label15:
        i0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background>;

        $r9 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        virtualinvoke $r9.<android.view.ViewGroup: void setBackgroundResource(int)>(i0);

        $r10 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        r3 = virtualinvoke $r10.<android.view.View: android.view.ViewParent getParent()>();

        $z5 = r3 instanceof android.view.ViewGroup;

        if $z5 == 0 goto label16;

        $r16 = (android.view.ViewGroup) r3;

        $r15 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke $r16.<android.view.ViewGroup: void removeView(android.view.View)>($r15);

     label16:
        $r12 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        $r11 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke $r12.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r11, r29);

        $r13 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        $z6 = virtualinvoke $r13.<android.view.View: boolean hasFocus()>();

        if $z6 != 0 goto label17;

        $r14 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        virtualinvoke $r14.<android.view.View: boolean requestFocus()>();

     label17:
        goto label19;

     label18:
        $r21 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $r21 == null goto label19;

        $r22 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        r30 = virtualinvoke $r22.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r30 == null goto label19;

        $i3 = r30.<android.view.ViewGroup$LayoutParams: int width>;

        if $i3 != -1 goto label19;

        b7 = -1;

     label19:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        r35 = new android.view.WindowManager$LayoutParams;

        $i8 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x>;

        $i9 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y>;

        specialinvoke r35.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>(b7, -2, $i8, $i9, 1002, 8519680, -3);

        r32 = r35;

        $i10 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity>;

        r32.<android.view.WindowManager$LayoutParams: int gravity> = $i10;

        $i11 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations>;

        r32.<android.view.WindowManager$LayoutParams: int windowAnimations> = $i11;

        $r33 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        r37 = (android.view.View) $r33;

        interfaceinvoke r28.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r37, r32);

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 1;

        $i12 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i12 != 0 goto label20;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

     label20:
        return;
    }

    private boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        android.content.Context $r2, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        virtualinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)>($r2);

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        $r4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext>;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(r0, $r4);

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView> = $r3;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity> = 81;

        return 1;
    }

    private void reopenMenu(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z12, $z13;
        androidx.appcompat.widget.DecorContentParent $r1, $r2, $r5, $r9, $r14, $r16;
        android.content.Context $r3;
        android.view.ViewConfiguration $r4;
        androidx.appcompat.view.menu.MenuBuilder $r6, $r8, $r15, $r19;
        android.view.View $r7, $r11;
        int $i0, $i1;
        android.view.Window $r10;
        java.lang.Runnable $r12, $r13;
        android.view.Window$Callback r17;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r18, r20, r21;
        android.view.Menu r22, r23, r24;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r1 == null goto label7;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $z1 == 0 goto label7;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        $z2 = virtualinvoke $r4.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $z2 == 0 goto label1;

        $r16 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z13 = interfaceinvoke $r16.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()>();

        if $z13 == 0 goto label7;

     label1:
        r17 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z3 = interfaceinvoke $r5.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z3 == 0 goto label2;

        if z0 != 0 goto label5;

     label2:
        if r17 == null goto label6;

        $z4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z4 != 0 goto label6;

        $z5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z5 == 0 goto label3;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label3;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r11 = virtualinvoke $r10.<android.view.Window: android.view.View getDecorView()>();

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        virtualinvoke $r11.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r12);

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        interfaceinvoke $r13.<java.lang.Runnable: void run()>();

     label3:
        r18 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $r19 = r18.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r19 == null goto label4;

        $z6 = r18.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $z6 != 0 goto label4;

        $r7 = r18.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $r6 = r18.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r22 = (android.view.Menu) $r6;

        $z7 = interfaceinvoke r17.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $r7, r22);

        if $z7 == 0 goto label4;

        $r8 = r18.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r23 = (android.view.Menu) $r8;

        interfaceinvoke r17.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(108, r23);

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r9.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

     label4:
        goto label6;

     label5:
        $r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r14.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        $z12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z12 != 0 goto label6;

        r20 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        $r15 = r20.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r24 = (android.view.Menu) $r15;

        interfaceinvoke r17.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, r24);

     label6:
        return;

     label7:
        r21 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        r21.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r21, 0);

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r21, null);

        return;
    }

    private boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        android.content.res.Resources$Theme r2, $r6, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.appcompat.widget.DecorContentParent $r3;
        android.content.res.Resources $r7, $r8;
        java.lang.Object r9;
        android.util.TypedValue r10, r14;
        androidx.appcompat.view.menu.MenuBuilder r13, r16;
        androidx.appcompat.view.ContextThemeWrapper r15;
        android.content.Context r17, r18, r19, r20, r21, r22;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i0 == 0 goto label1;

        $i8 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i8 != 108 goto label6;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r3 == null goto label6;

        r14 = new android.util.TypedValue;

        specialinvoke r14.<android.util.TypedValue: void <init>()>();

        r10 = r14;

        r17 = (android.content.Context) r9;

        r2 = virtualinvoke r17.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i1 = <androidx.appcompat.R$attr: int actionBarTheme>;

        virtualinvoke r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i1, r10, 1);

        r11 = null;

        $i2 = r10.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label2;

        r18 = (android.content.Context) r9;

        $r8 = virtualinvoke r18.<android.content.Context: android.content.res.Resources getResources()>();

        r11 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke r11.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r2);

        $i6 = r10.<android.util.TypedValue: int resourceId>;

        virtualinvoke r11.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i6, 1);

        $i7 = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke r11.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i7, r10, 1);

        goto label3;

     label2:
        $i3 = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i3, r10, 1);

     label3:
        $i4 = r10.<android.util.TypedValue: int resourceId>;

        if $i4 == 0 goto label5;

        if r11 != null goto label4;

        r19 = (android.content.Context) r9;

        $r7 = virtualinvoke r19.<android.content.Context: android.content.res.Resources getResources()>();

        r11 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke r11.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r2);

     label4:
        $i5 = r10.<android.util.TypedValue: int resourceId>;

        virtualinvoke r11.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i5, 1);

     label5:
        if r11 == null goto label6;

        r15 = new androidx.appcompat.view.ContextThemeWrapper;

        r20 = (android.content.Context) r9;

        specialinvoke r15.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r20, 0);

        r9 = r15;

        r21 = (android.content.Context) r9;

        $r6 = virtualinvoke r21.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r6.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r11);

     label6:
        r16 = new androidx.appcompat.view.menu.MenuBuilder;

        r22 = (android.content.Context) r9;

        specialinvoke r16.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>(r22);

        r13 = r16;

        virtualinvoke r13.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>(r0);

        virtualinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(r13);

        return 1;
    }

    private boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        androidx.appcompat.view.menu.MenuView r2;
        android.view.View $r3, $r7, $r8, $r10;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback $r5, $r6, $r9;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r3 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $r3 == null goto label1;

        $r10 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = $r10;

        return 1;

     label1:
        $r4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r4 != null goto label2;

        return 0;

     label2:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        if $r5 != null goto label3;

        $r9 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        specialinvoke $r9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback> = $r9;

     label3:
        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback>;

        r2 = virtualinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)>($r6);

        $r7 = (android.view.View) r2;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = $r7;

        $r8 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        if $r8 == null goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1, $r5, $r34, $r35;
        android.view.KeyEvent r2;
        android.view.Window$Callback r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.view.KeyCharacterMap r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.appcompat.view.menu.MenuBuilder $r6, $r7, $r8, $r10, $r12, $r13, $r19, $r26, $r29, $r37, $r38, $r39;
        android.os.Bundle $r9, $r18;
        android.view.View $r11, $r33, $r36;
        androidx.appcompat.widget.DecorContentParent $r15, $r17, $r20, $r22, $r23, $r27, $r31, $r32;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback $r16, $r21, $r24, $r25, r40;
        androidx.appcompat.app.ActionBar $r30;
        android.view.Menu r41, r42, r43;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r2 := @parameter1: android.view.KeyEvent;

        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z1 == 0 goto label01;

        return 0;

     label01:
        $z2 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $z2 == 0 goto label02;

        return 1;

     label02:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r5 == null goto label03;

        $r34 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r34 == r1 goto label03;

        $r35 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r35, 0);

     label03:
        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r3 == null goto label04;

        $i3 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $r33 = interfaceinvoke r3.<android.view.Window$Callback: android.view.View onCreatePanelView(int)>($i3);

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView> = $r33;

     label04:
        $i0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i0 == 0 goto label05;

        $i2 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i2 != 108 goto label06;

     label05:
        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        z0 = $z8;

        if z0 == 0 goto label08;

        $r31 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r31 == null goto label08;

        $r32 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r32.<androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()>();

     label08:
        $r36 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $r36 != null goto label25;

        if z0 == 0 goto label09;

        $r30 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()>();

        $z7 = $r30 instanceof androidx.appcompat.app.ToolbarActionBar;

        if $z7 != 0 goto label25;

     label09:
        $r6 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r6 == null goto label10;

        $z6 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $z6 == 0 goto label17;

     label10:
        $r7 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r7 != null goto label12;

        $z5 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)>(r1);

        if $z5 == 0 goto label11;

        $r29 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r29 != null goto label12;

     label11:
        return 0;

     label12:
        if z0 == 0 goto label14;

        $r23 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r23 == null goto label14;

        $r24 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        if $r24 != null goto label13;

        r40 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        specialinvoke r40.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback> = r40;

     label13:
        $r27 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r26 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r25 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        r41 = (android.view.Menu) $r26;

        interfaceinvoke $r27.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(r41, $r25);

     label14:
        $r37 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r37.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $i4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        $r38 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r42 = (android.view.Menu) $r38;

        $z9 = interfaceinvoke r3.<android.view.Window$Callback: boolean onCreatePanelMenu(int,android.view.Menu)>($i4, r42);

        if $z9 != 0 goto label16;

        virtualinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)>(null);

        if z0 == 0 goto label15;

        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r20 == null goto label15;

        $r22 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r21 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke $r22.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $r21);

     label15:
        return 0;

     label16:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 0;

     label17:
        $r8 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r8.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r9 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        if $r9 == null goto label18;

        $r19 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r18 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>;

        virtualinvoke $r19.<androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>($r18);

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = null;

     label18:
        $r11 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        $r10 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r43 = (android.view.Menu) $r10;

        $z3 = interfaceinvoke r3.<android.view.Window$Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(0, $r11, r43);

        if $z3 != 0 goto label20;

        if z0 == 0 goto label19;

        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r15 == null goto label19;

        $r17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $r16 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback>;

        interfaceinvoke $r17.<androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>(null, $r16);

     label19:
        $r39 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r39.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

        return 0;

     label20:
        if r2 == null goto label21;

        $i5 = virtualinvoke r2.<android.view.KeyEvent: int getDeviceId()>();

        goto label22;

     label21:
        $i5 = -1;

     label22:
        r4 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>($i5);

        $i1 = virtualinvoke r4.<android.view.KeyCharacterMap: int getKeyboardType()>();

        if $i1 == 1 goto label23;

        $z10 = 1;

        goto label24;

     label23:
        $z10 = 0;

     label24:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode> = $z10;

        $r12 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $z4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode>;

        virtualinvoke $r12.<androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)>($z4);

        $r13 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r13.<androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()>();

     label25:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 1;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = r1;

        return 1;
    }

    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r1;
        android.view.Window$Callback r2;
        boolean $z0, $z1;
        androidx.appcompat.widget.DecorContentParent $r3;
        android.view.Menu r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 1;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r3.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r2 == null goto label2;

        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z1 != 0 goto label2;

        r4 = (android.view.Menu) r1;

        interfaceinvoke r2.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(108, r4);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu> = 0;

        return;
    }

    void closePanel(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(i0, 1);

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>($r1, 1);

        return;
    }

    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1, $r10;
        boolean z0, $z1, $z2;
        android.view.WindowManager r2;
        int $i0, $i1, $i2;
        android.view.ViewGroup $r3, $r4;
        androidx.appcompat.widget.DecorContentParent $r5, $r6;
        androidx.appcompat.view.menu.MenuBuilder $r7;
        android.content.Context $r8;
        java.lang.Object $r9;
        android.view.View r11;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i2 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i2 != 0 goto label1;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z2 = interfaceinvoke $r6.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z2 == 0 goto label1;

        $r7 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>($r7);

        return;

     label1:
        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r2 = (android.view.WindowManager) $r9;

        if r2 == null goto label2;

        $z1 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z1 == 0 goto label2;

        $r3 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        if $r3 == null goto label2;

        $r4 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        r11 = (android.view.View) $r4;

        interfaceinvoke r2.<android.view.WindowManager: void removeView(android.view.View)>(r11);

        if z0 == 0 goto label2;

        $i1 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>($i1, r1, null);

     label2:
        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled> = 0;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen> = 0;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = null;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel>;

        if $r10 != r1 goto label3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel> = null;

     label3:
        $i0 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        if $i0 != 0 goto label4;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

     label4:
        return;
    }

    private boolean onKeyDownPanel(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r2;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label1;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(i0, 1);

        $z0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r2, r1);

        return $z1;

     label1:
        return 0;
    }

    private boolean onKeyUpPanel(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;
        android.view.KeyEvent r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r2;
        androidx.appcompat.view.ActionMode $r3;
        android.content.Context $r4, $r5, $r9;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, z10;
        androidx.appcompat.widget.DecorContentParent $r7, $r8, $r11, $r12, $r13;
        android.view.ViewConfiguration $r10;
        android.media.AudioManager r14;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        if $r3 == null goto label1;

        return 0;

     label1:
        z8 = 0;

        r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(i0, 1);

        if i0 != 0 goto label3;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r7 == null goto label3;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z3 = interfaceinvoke $r8.<androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()>();

        if $z3 == 0 goto label3;

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r10 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r9);

        $z4 = virtualinvoke $r10.<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>();

        if $z4 != 0 goto label3;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        $z5 = interfaceinvoke $r11.<androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()>();

        if $z5 != 0 goto label2;

        $z6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z6 != 0 goto label7;

        $z7 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r2, r1);

        if $z7 == 0 goto label7;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        z8 = interfaceinvoke $r13.<androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()>();

        goto label7;

     label2:
        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        z8 = interfaceinvoke $r12.<androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()>();

        goto label7;

     label3:
        $z9 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z9 != 0 goto label4;

        $z0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled>;

        if $z0 == 0 goto label5;

     label4:
        z8 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r2, 1);

        goto label7;

     label5:
        $z1 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $z1 == 0 goto label7;

        z10 = 1;

        $z2 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>;

        if $z2 == 0 goto label6;

        r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        z10 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r2, r1);

     label6:
        if z10 == 0 goto label7;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r2, r1);

        z8 = 1;

     label7:
        if z8 == 0 goto label9;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.Context getApplicationContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        r14 = (android.media.AudioManager) $r6;

        if r14 == null goto label8;

        virtualinvoke r14.<android.media.AudioManager: void playSoundEffect(int)>(0);

        goto label9;

     label8:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppCompatDelegate", "Couldn\'t get audio manager");

     label9:
        return z8;
    }

    void callOnPanelClosed(int, androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.view.Window $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r2;
        android.view.Window$Callback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] $r4, $r5;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r6;
        java.lang.Object r7;
        android.view.Menu r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r6 := @parameter1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r7 := @parameter2: android.view.Menu;

        if r7 != null goto label2;

        if r6 != null goto label1;

        if i0 < 0 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label1;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        r6 = $r5[i0];

     label1:
        if r6 == null goto label2;

        r7 = r6.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

     label2:
        if r6 == null goto label3;

        $z1 = r6.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        if $z1 != 0 goto label3;

        return;

     label3:
        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z0 != 0 goto label4;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback>;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r3 = virtualinvoke $r1.<android.view.Window: android.view.Window$Callback getCallback()>();

        r8 = (android.view.Menu) r7;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void bypassOnPanelClosed(android.view.Window$Callback,int,android.view.Menu)>($r3, i0, r8);

     label4:
        return;
    }

    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Menu r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] r2;
        int i0, $i1, i2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        androidx.appcompat.view.menu.MenuBuilder $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.Menu;

        r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        if r2 == null goto label1;

        $i1 = lengthof r2;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        i0 = $i1;

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        r3 = r2[i2];

        if r3 == null goto label4;

        $r4 = r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r4 != r1 goto label4;

        return r3;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return null;
    }

    protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1, $i2, $i3;
        boolean z0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] $r1, r4, r5;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2, r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels>;

        r4 = $r1;

        if $r1 == null goto label1;

        $i3 = lengthof r4;

        if $i3 > i0 goto label3;

     label1:
        $i1 = i0 + 1;

        r5 = newarray (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)[$i1];

        if r4 == null goto label2;

        $i2 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r5, 0, $i2);

     label2:
        r4 = r5;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels> = r5;

     label3:
        r6 = r4[i0];

        if r6 != null goto label4;

        $r2 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        specialinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void <init>(int)>(i0);

        r6 = $r2;

        r4[i0] = $r2;

     label4:
        return r6;
    }

    private boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, int, android.view.KeyEvent, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1;
        int i0, i1, $i2;
        android.view.KeyEvent r2;
        boolean $z0, $z1, $z2, z3;
        androidx.appcompat.view.menu.MenuBuilder $r3, $r5;
        androidx.appcompat.widget.DecorContentParent $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.KeyEvent;

        i1 := @parameter3: int;

        $z0 = virtualinvoke r2.<android.view.KeyEvent: boolean isSystem()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        z3 = 0;

        $z1 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>;

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r1, r2);

        if $z2 == 0 goto label3;

     label2:
        $r3 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 == null goto label3;

        $r5 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        z3 = virtualinvoke $r5.<androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>(i0, r2, i1);

     label3:
        if z3 == 0 goto label4;

        $i2 = i1 & 1;

        if $i2 != 0 goto label4;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r4 != null goto label4;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r1, 1);

     label4:
        return z3;
    }

    private void invalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.Window $r1;
        android.view.View $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i1 = 1 << i0;

        $i3 = $i2 | $i1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures> = $i3;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted>;

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View getDecorView()>();

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable>;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r2, $r3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted> = 1;

     label1:
        return;
    }

    void doInvalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1;
        androidx.appcompat.view.menu.MenuBuilder $r1, $r4, $r5, $r6;
        androidx.appcompat.widget.DecorContentParent $r2;
        android.os.Bundle $r3, r8;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r7, r9;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r7 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(i0, 1);

        $r1 = r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r1 == null goto label2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r8 = $r3;

        $r4 = r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>(r8);

        $i1 = virtualinvoke r8.<android.os.Bundle: int size()>();

        if $i1 <= 0 goto label1;

        r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState> = r8;

     label1:
        $r5 = r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r5.<androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>();

        $r6 = r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r6.<androidx.appcompat.view.menu.MenuBuilder: void clear()>();

     label2:
        r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent> = 1;

        r7.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 1;

        if i0 == 108 goto label3;

        if i0 != 0 goto label4;

     label3:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r2 == null goto label4;

        r9 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if r9 == null goto label4;

        r9.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared> = 0;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)>(r9, null);

     label4:
        return;
    }

    final int updateStatusGuard(androidx.core.view.WindowInsetsCompat, android.graphics.Rect)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.core.view.WindowInsetsCompat r1, r6;
        android.graphics.Rect r2, r4, r5, $r14, r37, r38;
        android.view.ViewGroup$MarginLayoutParams r3, r33;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22;
        android.view.View $r7, $r17, $r18, $r19, $r20, $r22, $r25, $r27, $r34, $r35, $r36, r39, r41, r42;
        androidx.appcompat.widget.ActionBarContextView $r8, $r10, $r12, $r13, $r31;
        android.view.ViewGroup$LayoutParams $r9, $r11, $r21, r43, r44;
        boolean $z0, $z1, z2, z3, $z4, $z5;
        android.view.ViewGroup $r15, $r16, $r28;
        android.content.Context $r24;
        android.widget.FrameLayout$LayoutParams r32, r40;
        byte $b23;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        r2 := @parameter1: android.graphics.Rect;

        i19 = 0;

        if r1 == null goto label01;

        i19 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label02;

     label01:
        if r2 == null goto label02;

        i19 = r2.<android.graphics.Rect: int top>;

     label02:
        z2 = 0;

        $r31 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if $r31 == null goto label21;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r9 = virtualinvoke $r8.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r9 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label21;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r11 = virtualinvoke $r10.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r11;

        z3 = 0;

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $z1 = virtualinvoke $r12.<androidx.appcompat.widget.ActionBarContextView: boolean isShown()>();

        if $z1 == 0 goto label19;

        $r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        if $r14 != null goto label03;

        r37 = new android.graphics.Rect;

        specialinvoke r37.<android.graphics.Rect: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1> = r37;

        r38 = new android.graphics.Rect;

        specialinvoke r38.<android.graphics.Rect: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2> = r38;

     label03:
        r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1>;

        r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2>;

        if r1 != null goto label04;

        virtualinvoke r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r2);

        goto label05;

     label04:
        $i6 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i7 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $i8 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i9 = virtualinvoke r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        virtualinvoke r4.<android.graphics.Rect: void set(int,int,int,int)>($i6, $i7, $i8, $i9);

     label05:
        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r41 = (android.view.View) $r15;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)>(r41, r4, r5);

        i0 = r4.<android.graphics.Rect: int top>;

        i1 = r4.<android.graphics.Rect: int left>;

        i2 = r4.<android.graphics.Rect: int right>;

        $r16 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r42 = (android.view.View) $r16;

        r6 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>(r42);

        if r6 != null goto label06;

        $i20 = 0;

        goto label07;

     label06:
        $i20 = virtualinvoke r6.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

     label07:
        i3 = $i20;

        if r6 != null goto label08;

        $i21 = 0;

        goto label09;

     label08:
        $i21 = virtualinvoke r6.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

     label09:
        i4 = $i21;

        $i10 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i10 != i0 goto label10;

        $i17 = r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if $i17 != i1 goto label10;

        $i18 = r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if $i18 == i2 goto label11;

     label10:
        z3 = 1;

        r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = i0;

        r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = i1;

        r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = i2;

     label11:
        if i0 <= 0 goto label12;

        $r22 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if $r22 != null goto label12;

        r39 = new android.view.View;

        $r24 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke r39.<android.view.View: void <init>(android.content.Context)>($r24);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard> = r39;

        $r25 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke $r25.<android.view.View: void setVisibility(int)>(8);

        r40 = new android.widget.FrameLayout$LayoutParams;

        $i16 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        specialinvoke r40.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i16, 51);

        r32 = r40;

        r32.<android.widget.FrameLayout$LayoutParams: int leftMargin> = i3;

        r32.<android.widget.FrameLayout$LayoutParams: int rightMargin> = i4;

        $r28 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        $r27 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        virtualinvoke $r28.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r27, -1, r32);

        goto label14;

     label12:
        $r17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if $r17 == null goto label14;

        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        $r21 = virtualinvoke $r20.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r33 = (android.view.ViewGroup$MarginLayoutParams) $r21;

        $i13 = r33.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i12 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i13 != $i12 goto label13;

        $i14 = r33.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        if $i14 != i3 goto label13;

        $i15 = r33.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if $i15 == i4 goto label14;

     label13:
        $i22 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        r33.<android.view.ViewGroup$MarginLayoutParams: int height> = $i22;

        r33.<android.view.ViewGroup$MarginLayoutParams: int leftMargin> = i3;

        r33.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = i4;

        $r34 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        r43 = (android.view.ViewGroup$LayoutParams) r33;

        virtualinvoke $r34.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r43);

     label14:
        $r35 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if $r35 == null goto label15;

        $z4 = 1;

        goto label16;

     label15:
        $z4 = 0;

     label16:
        z2 = $z4;

        if z2 == 0 goto label17;

        $r18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        $i11 = virtualinvoke $r18.<android.view.View: int getVisibility()>();

        if $i11 == 0 goto label17;

        $r19 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)>($r19);

     label17:
        $z5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode>;

        if $z5 != 0 goto label18;

        if z2 == 0 goto label18;

        i19 = 0;

     label18:
        goto label20;

     label19:
        $i5 = r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i5 == 0 goto label20;

        z3 = 1;

        r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = 0;

     label20:
        if z3 == 0 goto label21;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r44 = (android.view.ViewGroup$LayoutParams) r3;

        virtualinvoke $r13.<androidx.appcompat.widget.ActionBarContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r44);

     label21:
        $r36 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if $r36 == null goto label24;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard>;

        if z2 == 0 goto label22;

        $b23 = 0;

        goto label23;

     label22:
        $b23 = 8;

     label23:
        virtualinvoke $r7.<android.view.View: void setVisibility(int)>($b23);

     label24:
        return i19;
    }

    private void updateStatusGuardColor(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View r1;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Context $r2, $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.view.View;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>(r1);

        $i1 = $i0 & 8192;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i3 = <androidx.appcompat.R$color: int abc_decor_view_status_guard_light>;

        $i4 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($r3, $i3);

        goto label4;

     label3:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i2 = <androidx.appcompat.R$color: int abc_decor_view_status_guard>;

        $i4 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($r2, $i2);

     label4:
        virtualinvoke r1.<android.view.View: void setBackgroundColor(int)>($i4);

        return;
    }

    private void throwFeatureRequestIfSubDecorInstalled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;
        android.util.AndroidRuntimeException $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled>;

        if $z0 == 0 goto label1;

        $r1 = new android.util.AndroidRuntimeException;

        specialinvoke $r1.<android.util.AndroidRuntimeException: void <init>(java.lang.String)>("Window feature must be requested before adding content");

        throw $r1;

     label1:
        return;
    }

    private int sanitizeWindowFeatureId(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        if i0 != 8 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");

        return 108;

     label1:
        if i0 != 9 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");

        return 109;

     label2:
        return i0;
    }

    android.view.ViewGroup getSubDecor()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        return $r1;
    }

    void dismissPopups()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.DecorContentParent $r1, $r10;
        android.widget.PopupWindow $r2, $r8, $r9;
        androidx.appcompat.view.menu.MenuBuilder $r3, $r4;
        android.view.Window $r5;
        android.view.View $r6;
        java.lang.Runnable $r7;
        boolean $z1;
        java.lang.Throwable $r11, r12;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r13;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        if $r1 == null goto label1;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent>;

        interfaceinvoke $r10.<androidx.appcompat.widget.DecorContentParent: void dismissPopups()>();

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if $r2 == null goto label6;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $r6.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r7);

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        $z1 = virtualinvoke $r8.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label5;

     label2:
        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r9.<android.widget.PopupWindow: void dismiss()>();

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r12 = $r11;

     label5:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup> = null;

     label6:
        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        r13 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 0);

        if r13 == null goto label7;

        $r3 = r13.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 == null goto label7;

        $r4 = r13.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void close()>();

     label7:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    public android.content.Context getContextForDelegate()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        return $r1;
    }

    public boolean applyDayNight()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean)>(1);

        return $z0;
    }

    boolean applyAppLocales()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context $r1, $r5;
        boolean $z0, $z1, $z2;
        androidx.core.os.LocaleListCompat $r2, $r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $z0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: boolean isAutoStorageOptedIn(android.content.Context)>($r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getRequestedAppLocales()>();

        if $r2 == null goto label1;

        $r3 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getRequestedAppLocales()>();

        $r4 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getStoredAppLocales()>();

        $z1 = virtualinvoke $r3.<androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label1;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void asyncExecuteSyncRequestedAndStoredLocales(android.content.Context)>($r5);

     label1:
        $z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean)>(1);

        return $z2;
    }

    private boolean applyApplicationSpecificConfig(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyApplicationSpecificConfig(boolean,boolean)>(z0, 1);

        return $z1;
    }

    private boolean applyApplicationSpecificConfig(boolean, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0, z1, z2, $z3;
        int i0, i1, $i2;
        android.content.Context $r1, $r5, $r8, $r10, $r13;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2, $r3, $r4, $r6, $r7, $r9;
        android.content.res.Resources $r11;
        android.content.res.Configuration $r12;
        androidx.core.os.LocaleListCompat r14;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z3 == 0 goto label1;

        return 0;

     label1:
        i0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()>();

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        i1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)>($r1, i0);

        r14 = null;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 33 goto label2;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r14 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat calculateApplicationLocales(android.content.Context)>($r13);

     label2:
        if z1 != 0 goto label3;

        if r14 == null goto label3;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $r12 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r14 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)>($r12);

     label3:
        z2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean updateAppConfiguration(int,androidx.core.os.LocaleListCompat,boolean)>(i1, r14, z0);

        if i0 != 0 goto label4;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r9 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r8);

        virtualinvoke $r9.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        goto label5;

     label4:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r2 == null goto label5;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label5:
        if i0 != 3 goto label6;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r6 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>($r5);

        virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()>();

        goto label7;

     label6:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r3 == null goto label7;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

     label7:
        return z2;
    }

    androidx.core.os.LocaleListCompat calculateApplicationLocales(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1, $r4;
        androidx.core.os.LocaleListCompat r2, r3, r9;
        int $i0, $i1;
        android.content.res.Resources $r5;
        android.content.res.Configuration $r6;
        boolean $z0, $z1;
        java.util.Locale $r7;
        java.lang.String $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label1;

        return null;

     label1:
        r2 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getRequestedAppLocales()>();

        if r2 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)>($r6);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label3;

        r9 = staticinvoke <androidx.appcompat.app.LocaleOverlayHelper: androidx.core.os.LocaleListCompat combineLocalesIfOverlayExists(androidx.core.os.LocaleListCompat,androidx.core.os.LocaleListCompat)>(r2, r3);

        goto label5;

     label3:
        $z0 = virtualinvoke r2.<androidx.core.os.LocaleListCompat: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        r9 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()>();

        goto label5;

     label4:
        $r7 = virtualinvoke r2.<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>(0);

        $r8 = virtualinvoke $r7.<java.util.Locale: java.lang.String toString()>();

        r9 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>($r8);

     label5:
        $z1 = virtualinvoke r9.<androidx.core.os.LocaleListCompat: boolean isEmpty()>();

        if $z1 == 0 goto label6;

        r9 = r3;

     label6:
        return r9;
    }

    public void setLocalNightMode(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i1 == i0 goto label1;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode> = i0;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

     label1:
        return;
    }

    public int getLocalNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        return $i0;
    }

    int mapNightMode(android.content.Context, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1, $r5;
        int i0, $i1, $i2, $i3, $i4;
        android.app.UiModeManager r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r3, $r4;
        java.lang.Object $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case -100: goto label5;
            case -1: goto label1;
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label4;
            default: goto label6;
        };

     label1:
        return i0;

     label2:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 23 goto label3;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("uimode");

        r2 = (android.app.UiModeManager) $r6;

        $i4 = virtualinvoke r2.<android.app.UiModeManager: int getNightMode()>();

        if $i4 != 0 goto label3;

        return -1;

     label3:
        $r4 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>(r1);

        $i3 = virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

        return $i3;

     label4:
        $r3 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)>(r1);

        $i1 = virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>();

        return $i1;

     label5:
        return -1;

     label6:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.");

        throw $r7;
    }

    private int calculateNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        if $i0 == -100 goto label1;

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode>;

        goto label2;

     label1:
        $i1 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl: int getDefaultNightMode()>();

     label2:
        return $i1;
    }

    void setConfigurationLocales(android.content.res.Configuration, androidx.core.os.LocaleListCompat)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration r1;
        androidx.core.os.LocaleListCompat r2;
        int $i0, $i1;
        java.util.Locale $r3, $r4, $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.res.Configuration;

        r2 := @parameter1: androidx.core.os.LocaleListCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)>(r1, r2);

        goto label3;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label2;

        $r4 = virtualinvoke r2.<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>(0);

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)>(r1, $r4);

        $r5 = virtualinvoke r2.<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>(0);

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)>(r1, $r5);

        goto label3;

     label2:
        $r3 = virtualinvoke r2.<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>(0);

        r1.<android.content.res.Configuration: java.util.Locale locale> = $r3;

     label3:
        return;
    }

    androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration r1;
        int $i0, $i1;
        java.util.Locale[] $r2;
        java.util.Locale $r3, $r5;
        androidx.core.os.LocaleListCompat $r4, $r7, $r8;
        java.lang.String $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.res.Configuration;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r8 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>(r1);

        return $r8;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label2;

        $r5 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r6 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)>($r5);

        $r7 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>($r6);

        return $r7;

     label2:
        $r2 = newarray (java.util.Locale)[1];

        $r3 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r2[0] = $r3;

        $r4 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>($r2);

        return $r4;
    }

    void setDefaultLocalesForLocaleList(androidx.core.os.LocaleListCompat)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.core.os.LocaleListCompat r1;
        int $i0;
        java.util.Locale $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: androidx.core.os.LocaleListCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)>(r1);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<androidx.core.os.LocaleListCompat: java.util.Locale get(int)>(0);

        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r2);

     label2:
        return;
    }

    private android.content.res.Configuration createOverrideAppConfiguration(android.content.Context, int, androidx.core.os.LocaleListCompat, android.content.res.Configuration, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1, $r4;
        int i0, $i1, $i2, $i3, $i4, i5;
        androidx.core.os.LocaleListCompat r2;
        android.content.res.Configuration r3, r6, $r7, r8;
        boolean z0;
        android.content.res.Resources $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.core.os.LocaleListCompat;

        r3 := @parameter3: android.content.res.Configuration;

        z0 := @parameter4: boolean;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        i5 = 32;

        goto label5;

     label2:
        i5 = 16;

        goto label5;

     label3:
        if z0 == 0 goto label4;

        i5 = 0;

        goto label5;

     label4:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r6 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i4 = r6.<android.content.res.Configuration: int uiMode>;

        i5 = $i4 & 48;

     label5:
        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r8 = $r7;

        r8.<android.content.res.Configuration: float fontScale> = 0.0F;

        if r3 == null goto label6;

        virtualinvoke r8.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r3);

     label6:
        $i1 = r8.<android.content.res.Configuration: int uiMode>;

        $i2 = $i1 & -49;

        $i3 = i5 | $i2;

        r8.<android.content.res.Configuration: int uiMode> = $i3;

        if r2 == null goto label7;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void setConfigurationLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)>(r8, r2);

     label7:
        return r8;
    }

    private boolean updateAppConfiguration(int, androidx.core.os.LocaleListCompat, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, i1, i2, i3, $i4, $i5, $i8, $i10, $i12, $i13;
        androidx.core.os.LocaleListCompat r1, r4, $r11, $r17, r27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9;
        android.content.res.Configuration r2, r3, $r7, $r10, $r26;
        android.content.Context $r5, $r6, $r8, $r24;
        android.content.res.Resources $r9, $r25;
        java.lang.Object $r12, $r13, $r15, $r19, $r20, $r22;
        short $s6, $s7, s11;
        androidx.appcompat.app.AppCompatActivity $r14, $r16;
        android.app.Activity $r21, $r23;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.core.os.LocaleListCompat;

        z0 := @parameter2: boolean;

        z8 = 0;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideAppConfiguration(android.content.Context,int,androidx.core.os.LocaleListCompat,android.content.res.Configuration,boolean)>($r5, i0, r1, null, 0);

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        i1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: int getActivityHandlesConfigChangesFlags(android.content.Context)>($r6);

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration mEffectiveConfiguration>;

        if $r7 != null goto label01;

        $r24 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        $r26 = virtualinvoke $r25.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        goto label02;

     label01:
        $r26 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration mEffectiveConfiguration>;

     label02:
        r3 = $r26;

        $i4 = r3.<android.content.res.Configuration: int uiMode>;

        i2 = $i4 & 48;

        $i5 = r2.<android.content.res.Configuration: int uiMode>;

        i3 = $i5 & 48;

        r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)>(r3);

        if r1 != null goto label03;

        r27 = null;

        goto label04;

     label03:
        r27 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)>(r2);

     label04:
        s11 = 0;

        if i2 == i3 goto label05;

        s11 = s11 | 512;

     label05:
        if r27 == null goto label06;

        $z7 = virtualinvoke r4.<androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)>(r27);

        if $z7 != 0 goto label06;

        s11 = s11 | 4;

        $i10 = <android.os.Build$VERSION: int SDK_INT>;

        if $i10 < 17 goto label06;

        s11 = s11 | 8192;

     label06:
        $i12 = i1 ^ -1;

        $i13 = $i12 & s11;

        if $i13 == 0 goto label08;

        if z0 == 0 goto label08;

        $z2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached>;

        if $z2 == 0 goto label08;

        $z3 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext>;

        if $z3 != 0 goto label07;

        $z6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated>;

        if $z6 == 0 goto label08;

     label07:
        $r19 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z4 = $r19 instanceof android.app.Activity;

        if $z4 == 0 goto label08;

        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r21 = (android.app.Activity) $r20;

        $z5 = virtualinvoke $r21.<android.app.Activity: boolean isChild()>();

        if $z5 != 0 goto label08;

        $r22 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r23 = (android.app.Activity) $r22;

        staticinvoke <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>($r23);

        z8 = 1;

     label08:
        if z8 != 0 goto label11;

        if s11 == 0 goto label11;

        $r17 = r27;

        $i8 = s11 & i1;

        if $i8 != s11 goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfiguration(int,androidx.core.os.LocaleListCompat,boolean,android.content.res.Configuration)>(i3, $r17, $z9, null);

        z8 = 1;

     label11:
        if z8 == 0 goto label13;

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r12 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z1 == 0 goto label13;

        $s6 = s11 & 512;

        if $s6 == 0 goto label12;

        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r16 = (androidx.appcompat.app.AppCompatActivity) $r15;

        virtualinvoke $r16.<androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)>(i0);

     label12:
        $s7 = s11 & 4;

        if $s7 == 0 goto label13;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r14 = (androidx.appcompat.app.AppCompatActivity) $r13;

        virtualinvoke $r14.<androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)>(r1);

     label13:
        if z8 == 0 goto label14;

        if r27 == null goto label14;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r11 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)>($r10);

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void setDefaultLocalesForLocaleList(androidx.core.os.LocaleListCompat)>($r11);

     label14:
        return z8;
    }

    private void updateResourcesConfiguration(int, androidx.core.os.LocaleListCompat, boolean, android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.core.os.LocaleListCompat r1;
        boolean z0, $z1;
        android.content.res.Configuration r2, r4, $r6, $r7, $r8;
        android.content.res.Resources r3;
        android.content.Context $r5, $r10, $r11;
        java.lang.Object $r9;
        android.content.res.Resources$Theme $r12;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.core.os.LocaleListCompat;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.content.res.Configuration;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        r3 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = new android.content.res.Configuration;

        $r7 = virtualinvoke r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r6.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r7);

        r4 = $r6;

        if r2 == null goto label1;

        virtualinvoke r4.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>(r2);

     label1:
        $r8 = virtualinvoke r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r8.<android.content.res.Configuration: int uiMode>;

        $i2 = $i1 & -49;

        $i3 = i0 | $i2;

        r4.<android.content.res.Configuration: int uiMode> = $i3;

        if r1 == null goto label2;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void setConfigurationLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)>(r4, r1);

     label2:
        virtualinvoke r3.<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>(r4, null);

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 >= 26 goto label3;

        staticinvoke <androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)>(r3);

     label3:
        $i5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        if $i5 == 0 goto label4;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $i6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        virtualinvoke $r10.<android.content.Context: void setTheme(int)>($i6);

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 23 goto label4;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId>;

        virtualinvoke $r12.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i8, 1);

     label4:
        if z0 == 0 goto label5;

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r9 instanceof android.app.Activity;

        if $z1 == 0 goto label5;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: void updateActivityConfiguration(android.content.res.Configuration)>(r4);

     label5:
        return;
    }

    private void updateActivityConfiguration(android.content.res.Configuration)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration r1;
        android.app.Activity r2;
        androidx.lifecycle.Lifecycle r3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2, $z3;
        androidx.lifecycle.LifecycleOwner $r5;
        androidx.lifecycle.Lifecycle$State $r6, $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.res.Configuration;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        r2 = (android.app.Activity) $r4;

        $z0 = r2 instanceof androidx.lifecycle.LifecycleOwner;

        if $z0 == 0 goto label2;

        $r5 = (androidx.lifecycle.LifecycleOwner) r2;

        r3 = interfaceinvoke $r5.<androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r6 = virtualinvoke r3.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r7 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        $z3 = virtualinvoke $r6.<androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)>($r7);

        if $z3 == 0 goto label1;

        virtualinvoke r2.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        goto label3;

     label2:
        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated>;

        if $z1 == 0 goto label3;

        $z2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z2 != 0 goto label3;

        virtualinvoke r2.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label3:
        return;
    }

    final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r2 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)>($r1);

        return $r2;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager $r4;
        androidx.appcompat.app.TwilightManager $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        if $r2 != null goto label1;

        $r4 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r5 = staticinvoke <androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)>(r1);

        specialinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)>(r0, $r5);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager> = $r4;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager>;

        return $r3;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        if $r2 != null goto label1;

        $r4 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        specialinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)>(r0, r1);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager> = $r4;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager>;

        return $r3;
    }

    private int getActivityHandlesConfigChangesFlags(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.Context r1;
        android.content.pm.PackageManager r2;
        android.content.pm.ActivityInfo r3;
        boolean $z0, $z1;
        java.lang.Object $r4, $r7;
        int $i0, $i1, $i2, i4, $i5;
        java.lang.Throwable $r5, r9;
        android.content.ComponentName $r6;
        java.lang.Class $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        r1 := @parameter0: android.content.Context;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesConfigFlagsChecked>;

        if $z0 != 0 goto label6;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $z1 = $r4 instanceof android.app.Activity;

        if $z1 == 0 goto label6;

        r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if r2 != null goto label1;

        return 0;

     label1:
        i4 = 0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 29 goto label2;

        i4 = 269221888;

        goto label3;

     label2:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 24 goto label3;

        i4 = 786432;

     label3:
        $r6 = new android.content.ComponentName;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r6.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r1, $r8);

        r3 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r6, i4);

        if r3 == null goto label4;

        $i2 = r3.<android.content.pm.ActivityInfo: int configChanges>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mActivityHandlesConfigFlags> = $i2;

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r9 = $r5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDelegate", "Exception while getting ActivityInfo", r9);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mActivityHandlesConfigFlags> = 0;

     label6:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesConfigFlagsChecked> = 1;

        $i5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl: int mActivityHandlesConfigFlags>;

        return $i5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label4 with label5;
    }

    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl;

        $r1 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r0);

        return $r1;
    }

    private static android.content.res.Configuration generateConfigDelta(android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration r0, r1, r2, $r3;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85;
        float $f0, $f1, $f2;
        byte $b1;
        java.util.Locale $r4, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.Configuration;

        $r3 = new android.content.res.Configuration;

        specialinvoke $r3.<android.content.res.Configuration: void <init>()>();

        r2 = $r3;

        r2.<android.content.res.Configuration: float fontScale> = 0.0F;

        if r1 == null goto label01;

        $i0 = virtualinvoke r0.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r1);

        if $i0 != 0 goto label02;

     label01:
        return r2;

     label02:
        $f1 = r0.<android.content.res.Configuration: float fontScale>;

        $f0 = r1.<android.content.res.Configuration: float fontScale>;

        $b1 = $f1 cmpl $f0;

        if $b1 == 0 goto label03;

        $f2 = r1.<android.content.res.Configuration: float fontScale>;

        r2.<android.content.res.Configuration: float fontScale> = $f2;

     label03:
        $i3 = r0.<android.content.res.Configuration: int mcc>;

        $i2 = r1.<android.content.res.Configuration: int mcc>;

        if $i3 == $i2 goto label04;

        $i83 = r1.<android.content.res.Configuration: int mcc>;

        r2.<android.content.res.Configuration: int mcc> = $i83;

     label04:
        $i5 = r0.<android.content.res.Configuration: int mnc>;

        $i4 = r1.<android.content.res.Configuration: int mnc>;

        if $i5 == $i4 goto label05;

        $i82 = r1.<android.content.res.Configuration: int mnc>;

        r2.<android.content.res.Configuration: int mnc> = $i82;

     label05:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 24 goto label06;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>(r0, r1, r2);

        goto label07;

     label06:
        $r5 = r0.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z0 != 0 goto label07;

        $r6 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        r2.<android.content.res.Configuration: java.util.Locale locale> = $r6;

     label07:
        $i84 = r0.<android.content.res.Configuration: int touchscreen>;

        $i85 = r1.<android.content.res.Configuration: int touchscreen>;

        if $i84 == $i85 goto label08;

        $i81 = r1.<android.content.res.Configuration: int touchscreen>;

        r2.<android.content.res.Configuration: int touchscreen> = $i81;

     label08:
        $i8 = r0.<android.content.res.Configuration: int keyboard>;

        $i7 = r1.<android.content.res.Configuration: int keyboard>;

        if $i8 == $i7 goto label09;

        $i80 = r1.<android.content.res.Configuration: int keyboard>;

        r2.<android.content.res.Configuration: int keyboard> = $i80;

     label09:
        $i10 = r0.<android.content.res.Configuration: int keyboardHidden>;

        $i9 = r1.<android.content.res.Configuration: int keyboardHidden>;

        if $i10 == $i9 goto label10;

        $i79 = r1.<android.content.res.Configuration: int keyboardHidden>;

        r2.<android.content.res.Configuration: int keyboardHidden> = $i79;

     label10:
        $i12 = r0.<android.content.res.Configuration: int navigation>;

        $i11 = r1.<android.content.res.Configuration: int navigation>;

        if $i12 == $i11 goto label11;

        $i78 = r1.<android.content.res.Configuration: int navigation>;

        r2.<android.content.res.Configuration: int navigation> = $i78;

     label11:
        $i14 = r0.<android.content.res.Configuration: int navigationHidden>;

        $i13 = r1.<android.content.res.Configuration: int navigationHidden>;

        if $i14 == $i13 goto label12;

        $i77 = r1.<android.content.res.Configuration: int navigationHidden>;

        r2.<android.content.res.Configuration: int navigationHidden> = $i77;

     label12:
        $i16 = r0.<android.content.res.Configuration: int orientation>;

        $i15 = r1.<android.content.res.Configuration: int orientation>;

        if $i16 == $i15 goto label13;

        $i76 = r1.<android.content.res.Configuration: int orientation>;

        r2.<android.content.res.Configuration: int orientation> = $i76;

     label13:
        $i17 = r0.<android.content.res.Configuration: int screenLayout>;

        $i20 = $i17 & 15;

        $i18 = r1.<android.content.res.Configuration: int screenLayout>;

        $i19 = $i18 & 15;

        if $i20 == $i19 goto label14;

        $i74 = r2.<android.content.res.Configuration: int screenLayout>;

        $i72 = r1.<android.content.res.Configuration: int screenLayout>;

        $i73 = $i72 & 15;

        $i75 = $i74 | $i73;

        r2.<android.content.res.Configuration: int screenLayout> = $i75;

     label14:
        $i21 = r0.<android.content.res.Configuration: int screenLayout>;

        $i24 = $i21 & 192;

        $i22 = r1.<android.content.res.Configuration: int screenLayout>;

        $i23 = $i22 & 192;

        if $i24 == $i23 goto label15;

        $i70 = r2.<android.content.res.Configuration: int screenLayout>;

        $i68 = r1.<android.content.res.Configuration: int screenLayout>;

        $i69 = $i68 & 192;

        $i71 = $i70 | $i69;

        r2.<android.content.res.Configuration: int screenLayout> = $i71;

     label15:
        $i25 = r0.<android.content.res.Configuration: int screenLayout>;

        $i28 = $i25 & 48;

        $i26 = r1.<android.content.res.Configuration: int screenLayout>;

        $i27 = $i26 & 48;

        if $i28 == $i27 goto label16;

        $i66 = r2.<android.content.res.Configuration: int screenLayout>;

        $i64 = r1.<android.content.res.Configuration: int screenLayout>;

        $i65 = $i64 & 48;

        $i67 = $i66 | $i65;

        r2.<android.content.res.Configuration: int screenLayout> = $i67;

     label16:
        $i29 = r0.<android.content.res.Configuration: int screenLayout>;

        $i32 = $i29 & 768;

        $i30 = r1.<android.content.res.Configuration: int screenLayout>;

        $i31 = $i30 & 768;

        if $i32 == $i31 goto label17;

        $i62 = r2.<android.content.res.Configuration: int screenLayout>;

        $i60 = r1.<android.content.res.Configuration: int screenLayout>;

        $i61 = $i60 & 768;

        $i63 = $i62 | $i61;

        r2.<android.content.res.Configuration: int screenLayout> = $i63;

     label17:
        $i33 = <android.os.Build$VERSION: int SDK_INT>;

        if $i33 < 26 goto label18;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>(r0, r1, r2);

     label18:
        $i34 = r0.<android.content.res.Configuration: int uiMode>;

        $i37 = $i34 & 15;

        $i35 = r1.<android.content.res.Configuration: int uiMode>;

        $i36 = $i35 & 15;

        if $i37 == $i36 goto label19;

        $i58 = r2.<android.content.res.Configuration: int uiMode>;

        $i56 = r1.<android.content.res.Configuration: int uiMode>;

        $i57 = $i56 & 15;

        $i59 = $i58 | $i57;

        r2.<android.content.res.Configuration: int uiMode> = $i59;

     label19:
        $i38 = r0.<android.content.res.Configuration: int uiMode>;

        $i41 = $i38 & 48;

        $i39 = r1.<android.content.res.Configuration: int uiMode>;

        $i40 = $i39 & 48;

        if $i41 == $i40 goto label20;

        $i54 = r2.<android.content.res.Configuration: int uiMode>;

        $i52 = r1.<android.content.res.Configuration: int uiMode>;

        $i53 = $i52 & 48;

        $i55 = $i54 | $i53;

        r2.<android.content.res.Configuration: int uiMode> = $i55;

     label20:
        $i43 = r0.<android.content.res.Configuration: int screenWidthDp>;

        $i42 = r1.<android.content.res.Configuration: int screenWidthDp>;

        if $i43 == $i42 goto label21;

        $i51 = r1.<android.content.res.Configuration: int screenWidthDp>;

        r2.<android.content.res.Configuration: int screenWidthDp> = $i51;

     label21:
        $i45 = r0.<android.content.res.Configuration: int screenHeightDp>;

        $i44 = r1.<android.content.res.Configuration: int screenHeightDp>;

        if $i45 == $i44 goto label22;

        $i50 = r1.<android.content.res.Configuration: int screenHeightDp>;

        r2.<android.content.res.Configuration: int screenHeightDp> = $i50;

     label22:
        $i47 = r0.<android.content.res.Configuration: int smallestScreenWidthDp>;

        $i46 = r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        if $i47 == $i46 goto label23;

        $i49 = r1.<android.content.res.Configuration: int smallestScreenWidthDp>;

        r2.<android.content.res.Configuration: int smallestScreenWidthDp> = $i49;

     label23:
        $i48 = <android.os.Build$VERSION: int SDK_INT>;

        if $i48 < 17 goto label24;

        staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)>(r0, r1, r2);

     label24:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Thread$UncaughtExceptionHandler r0;
        androidx.collection.SimpleArrayMap $r1;
        int $i0, $i1;
        int[] $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.appcompat.app.AppCompatDelegateImpl$1 $r5;

        $r1 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r1.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes> = $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP> = $z3;

        $r2 = newarray (int)[1];

        $r2[0] = 16842836;

        <androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable> = $r2;

        $r4 = "robolectric";

        $r3 = <android.os.Build: java.lang.String FINGERPRINT>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext> = $z4;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration> = $z5;

        $z1 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>;

        if $z1 == 0 goto label7;

        $z2 = <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler>;

        if $z2 != 0 goto label7;

        r0 = staticinvoke <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>();

        $r5 = new androidx.appcompat.app.AppCompatDelegateImpl$1;

        specialinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$1: void <init>(java.lang.Thread$UncaughtExceptionHandler)>(r0);

        staticinvoke <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>($r5);

        <androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler> = 1;

     label7:
        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$1
<androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler>
    void <init>(java.lang.Thread$UncaughtExceptionHandler)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.Thread$UncaughtExceptionHandler r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$1;

        r1 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.Thread r1;
        java.lang.Throwable r2, $r11;
        android.content.res.Resources$NotFoundException r3, $r5;
        boolean $z0;
        java.lang.Thread$UncaughtExceptionHandler $r4, $r14;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r7, $r10;
        java.lang.StackTraceElement[] $r13;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$1;

        r1 := @parameter0: java.lang.Thread;

        r2 := @parameter1: java.lang.Throwable;

        $z0 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)>(r2);

        if $z0 == 0 goto label1;

        $r5 = new android.content.res.Resources$NotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r10);

        r3 = $r5;

        $r11 = virtualinvoke r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        virtualinvoke r3.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>($r11);

        $r13 = virtualinvoke r2.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r3.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>($r13);

        $r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler>;

        interfaceinvoke $r14.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r1, r3);

        goto label2;

     label1:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler>;

        interfaceinvoke $r4.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>(r1, r2);

     label2:
        return;
    }

    private boolean shouldWrapException(java.lang.Throwable)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.Throwable r1;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$1;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = r1 instanceof android.content.res.Resources$NotFoundException;

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("drawable");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("Drawable");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

androidx.appcompat.app.AppCompatDelegateImpl$2
<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$2 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$2;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$2 r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$2;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $i0 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>(0);

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $i2 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures>;

        $i3 = $i2 & 4096;

        if $i3 == 0 goto label2;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)>(108);

     label2:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r3.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted> = 0;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4.<androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures> = 0;

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$3
<androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$3 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$3;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, androidx.core.view.WindowInsetsCompat)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$3 r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        androidx.core.view.WindowInsetsCompat $r3, r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$3;

        r1 := @parameter0: android.view.View;

        r4 := @parameter1: androidx.core.view.WindowInsetsCompat;

        i0 = virtualinvoke r4.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        i1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>(r4, null);

        if i0 == i1 goto label1;

        $i2 = virtualinvoke r4.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i3 = virtualinvoke r4.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i4 = virtualinvoke r4.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        r4 = virtualinvoke r4.<androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)>($i2, i1, $i3, $i4);

     label1:
        $r3 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>(r1, r4);

        return $r3;
    }

androidx.appcompat.app.AppCompatDelegateImpl$4
<androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$4 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$4;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFitSystemWindows(android.graphics.Rect)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$4 r0;
        android.graphics.Rect r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        int $i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$4;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>(null, r1);

        r1.<android.graphics.Rect: int top> = $i0;

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$5
<androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$5 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$5;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAttachedFromWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$5 r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$5;

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$5 r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$5;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()>();

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$6$1
<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$6$1 r0;
        androidx.appcompat.app.AppCompatDelegateImpl$6 r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$6$1;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$6;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1> = r1;

        specialinvoke r0.<androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationStart(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$6$1 r0;
        android.view.View r1;
        androidx.appcompat.app.AppCompatDelegateImpl$6 $r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;
        androidx.appcompat.widget.ActionBarContextView $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$6$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        return;
    }

    public void onAnimationEnd(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$6$1 r0;
        android.view.View r1;
        androidx.appcompat.app.AppCompatDelegateImpl$6 $r2, $r5, $r9;
        androidx.appcompat.app.AppCompatDelegateImpl $r3, $r6, $r10;
        androidx.appcompat.widget.ActionBarContextView $r4;
        androidx.core.view.ViewPropertyAnimatorCompat $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$6$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1>;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r7 = $r6.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        virtualinvoke $r7.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(null);

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1>;

        $r10 = $r9.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r10.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$6
<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$6 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$6;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$6 r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1, $r2, $r5, $r6, $r7, $r9, $r11, $r13, $r15, $r18;
        androidx.appcompat.widget.ActionBarContextView $r3, $r8, $r10, $r12, $r14;
        android.widget.PopupWindow $r4;
        boolean $z0;
        androidx.core.view.ViewPropertyAnimatorCompat $r16, $r17, $r20;
        androidx.appcompat.app.AppCompatDelegateImpl$6$1 r22;
        android.view.View r23, r24;
        androidx.core.view.ViewPropertyAnimatorListener r25;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$6;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r1.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r23 = (android.view.View) $r3;

        virtualinvoke $r4.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>(r23, 55, 0, 0);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z0 = virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r12 = $r11.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r12.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(0.0F);

        $r15 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r14 = $r13.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r24 = (android.view.View) $r14;

        $r16 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r24);

        $r17 = virtualinvoke $r16.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        $r15.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = $r17;

        $r18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r20 = $r18.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        r22 = new androidx.appcompat.app.AppCompatDelegateImpl$6$1;

        specialinvoke r22.<androidx.appcompat.app.AppCompatDelegateImpl$6$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6)>(r0);

        r25 = (androidx.core.view.ViewPropertyAnimatorListener) r22;

        virtualinvoke $r20.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(r25);

        goto label2;

     label1:
        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r8 = $r7.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r8.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r10 = $r9.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r10.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

     label2:
        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$7
<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$7 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$7;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationStart(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$7 r0;
        android.view.View r1, $r10;
        androidx.appcompat.app.AppCompatDelegateImpl $r2, $r4, $r7;
        androidx.appcompat.widget.ActionBarContextView $r3, $r5, $r8;
        android.view.ViewParent $r6, $r9;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$7;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r5 = $r4.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r6 = virtualinvoke $r5.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $z0 = $r6 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r8 = $r7.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r9 = virtualinvoke $r8.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $r10 = (android.view.View) $r9;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r10);

     label1:
        return;
    }

    public void onAnimationEnd(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$7 r0;
        android.view.View r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2, $r4, $r7;
        androidx.appcompat.widget.ActionBarContextView $r3;
        androidx.core.view.ViewPropertyAnimatorCompat $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$7;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: void setAlpha(float)>(1.0F);

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r5 = $r4.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        virtualinvoke $r5.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(null);

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r7.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable getThemeUpIndicator()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        androidx.appcompat.widget.TintTypedArray r1;
        android.graphics.drawable.Drawable r2;
        android.content.Context $r3;
        int[] $r4;
        int $i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: android.content.Context getActionBarThemedContext()>();

        $r4 = newarray (int)[1];

        $i0 = <androidx.appcompat.R$attr: int homeAsUpIndicator>;

        $r4[0] = $i0;

        r1 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])>($r3, null, $r4);

        r2 = virtualinvoke r1.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r1.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        return r2;
    }

    public android.content.Context getActionBarThemedContext()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1;
        android.content.Context $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()>();

        return $r2;
    }

    public boolean isNavigationVisible()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.appcompat.app.ActionBar: int getDisplayOptions()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setActionBarUpIndicator(android.graphics.drawable.Drawable, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        androidx.appcompat.app.ActionBar r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r2 = virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>(r1);

        virtualinvoke r2.<androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(int)>(i0);

     label1:
        return;
    }

    public void setActionBarDescription(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl r0;
        int i0;
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()>();

        if r1 == null goto label1;

        virtualinvoke r1.<androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(int)>(i0);

     label1:
        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback
<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback: boolean onPreparePanel(int)>
<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback: android.view.View onCreatePanelView(int)>
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback
<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback r0;
        androidx.appcompat.view.menu.MenuBuilder r1;
        android.view.Window$Callback r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;
        android.view.Menu r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r2 = virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r2 == null goto label1;

        r4 = (android.view.Menu) r1;

        interfaceinvoke r2.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(108, r4);

     label1:
        return 1;
    }

    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback r0;
        androidx.appcompat.view.menu.MenuBuilder r1;
        boolean z0;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)>(r1);

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1
<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 r0;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1> = r1;

        specialinvoke r0.<androidx.core.view.ViewPropertyAnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 r0;
        android.view.View r1, $r17, r32;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 $r2, $r5, $r8, $r13, $r18, $r21, $r24, $r27, $r29;
        androidx.appcompat.app.AppCompatDelegateImpl $r3, $r6, $r9, $r14, $r19, $r22, $r25, $r28, $r30;
        androidx.appcompat.widget.ActionBarContextView $r4, $r10, $r15, $r23;
        android.widget.PopupWindow $r7, $r20;
        android.view.ViewParent $r11, $r16;
        boolean $z0;
        androidx.core.view.ViewPropertyAnimatorCompat $r26;
        android.view.ViewGroup $r31;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r3 = $r2.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(8);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r7 = $r6.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if $r7 == null goto label1;

        $r18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r19 = $r18.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r20 = $r19.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r20.<android.widget.PopupWindow: void dismiss()>();

        goto label2;

     label1:
        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r9 = $r8.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r10 = $r9.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r11 = virtualinvoke $r10.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $z0 = $r11 instanceof android.view.View;

        if $z0 == 0 goto label2;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r14 = $r13.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r15 = $r14.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        $r16 = virtualinvoke $r15.<androidx.appcompat.widget.ActionBarContextView: android.view.ViewParent getParent()>();

        $r17 = (android.view.View) $r16;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r17);

     label2:
        $r21 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r22 = $r21.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r23 = $r22.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r23.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        $r24 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r25 = $r24.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r26 = $r25.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        virtualinvoke $r26.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(null);

        $r27 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r28 = $r27.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r28.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = null;

        $r29 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1>;

        $r30 = $r29.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r31 = $r30.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r32 = (android.view.View) $r31;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(r32);

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9
<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped>
<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    public void <init>(androidx.appcompat.app.AppCompatDelegateImpl, androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        androidx.appcompat.view.ActionMode$Callback r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 := @parameter1: androidx.appcompat.view.ActionMode$Callback;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped> = r2;

        return;
    }

    public boolean onCreateActionMode(androidx.appcompat.view.ActionMode, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r0;
        androidx.appcompat.view.ActionMode r1;
        android.view.Menu r2;
        androidx.appcompat.view.ActionMode$Callback $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r1 := @parameter0: androidx.appcompat.view.ActionMode;

        r2 := @parameter1: android.view.Menu;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped>;

        $z0 = interfaceinvoke $r3.<androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>(r1, r2);

        return $z0;
    }

    public boolean onPrepareActionMode(androidx.appcompat.view.ActionMode, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r0;
        androidx.appcompat.view.ActionMode r1;
        android.view.Menu r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;
        android.view.ViewGroup $r4;
        androidx.appcompat.view.ActionMode$Callback $r5;
        boolean $z0;
        android.view.View r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r1 := @parameter0: androidx.appcompat.view.ActionMode;

        r2 := @parameter1: android.view.Menu;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r6 = (android.view.View) $r4;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(r6);

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped>;

        $z0 = interfaceinvoke $r5.<androidx.appcompat.view.ActionMode$Callback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)>(r1, r2);

        return $z0;
    }

    public boolean onActionItemClicked(androidx.appcompat.view.ActionMode, android.view.MenuItem)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r0;
        androidx.appcompat.view.ActionMode r1;
        android.view.MenuItem r2;
        androidx.appcompat.view.ActionMode$Callback $r3;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r1 := @parameter0: androidx.appcompat.view.ActionMode;

        r2 := @parameter1: android.view.MenuItem;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped>;

        $z0 = interfaceinvoke $r3.<androidx.appcompat.view.ActionMode$Callback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)>(r1, r2);

        return $z0;
    }

    public void onDestroyActionMode(androidx.appcompat.view.ActionMode)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r0;
        androidx.appcompat.view.ActionMode r1, $r15;
        androidx.appcompat.view.ActionMode$Callback $r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r14, $r17, $r18, $r20, $r23, $r27, $r30;
        android.widget.PopupWindow $r4;
        androidx.appcompat.widget.ActionBarContextView $r6, $r19;
        androidx.appcompat.app.AppCompatCallback $r8, $r16;
        android.view.ViewGroup $r11;
        androidx.core.view.ViewPropertyAnimatorCompat $r21, $r22, $r25;
        android.view.Window $r28;
        android.view.View $r29, r33, r35;
        java.lang.Runnable $r31;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 r32;
        androidx.core.view.ViewPropertyAnimatorListener r34;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        r1 := @parameter0: androidx.appcompat.view.ActionMode;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped>;

        interfaceinvoke $r2.<androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>(r1);

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r4 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup>;

        if $r4 == null goto label1;

        $r27 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r28 = $r27.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow>;

        $r29 = virtualinvoke $r28.<android.view.Window: android.view.View getDecorView()>();

        $r30 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r31 = $r30.<androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke $r29.<android.view.View: boolean removeCallbacks(java.lang.Runnable)>($r31);

     label1:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        if $r6 == null goto label2;

        $r17 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r17.<androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()>();

        $r20 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r18 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r19 = $r18.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView>;

        r33 = (android.view.View) $r19;

        $r21 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r33);

        $r22 = virtualinvoke $r21.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        $r20.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim> = $r22;

        $r23 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r25 = $r23.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim>;

        r32 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1;

        specialinvoke r32.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)>(r0);

        r34 = (androidx.core.view.ViewPropertyAnimatorListener) r32;

        virtualinvoke $r25.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>(r34);

     label2:
        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r8 = $r7.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        if $r8 == null goto label3;

        $r13 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r16 = $r13.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback>;

        $r14 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r15 = $r14.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode>;

        interfaceinvoke $r16.<androidx.appcompat.app.AppCompatCallback: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)>($r15);

     label3:
        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r9.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode> = null;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r11 = $r10.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor>;

        r35 = (android.view.View) $r11;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>(r35);

        $r12 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r12.<androidx.appcompat.app.AppCompatDelegateImpl: void updateBackInvokedCallbackState()>();

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void generateConfigDelta_densityDpi(android.content.res.Configuration, android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration r0, r1, r2;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.Configuration;

        r2 := @parameter2: android.content.res.Configuration;

        $i1 = r0.<android.content.res.Configuration: int densityDpi>;

        $i0 = r1.<android.content.res.Configuration: int densityDpi>;

        if $i1 == $i0 goto label1;

        $i2 = r1.<android.content.res.Configuration: int densityDpi>;

        r2.<android.content.res.Configuration: int densityDpi> = $i2;

     label1:
        return;
    }

    static android.content.Context createConfigurationContext(android.content.Context, android.content.res.Configuration)
    {
        android.content.Context r0, $r2;
        android.content.res.Configuration r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.Configuration;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>(r1);

        return $r2;
    }

    static void setLayoutDirection(android.content.res.Configuration, java.util.Locale)
    {
        android.content.res.Configuration r0;
        java.util.Locale r1;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: java.util.Locale;

        virtualinvoke r0.<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>(r1);

        return;
    }

    static void setLocale(android.content.res.Configuration, java.util.Locale)
    {
        android.content.res.Configuration r0;
        java.util.Locale r1;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: java.util.Locale;

        virtualinvoke r0.<android.content.res.Configuration: void setLocale(java.util.Locale)>(r1);

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isPowerSaveMode(android.os.PowerManager)
    {
        android.os.PowerManager r0;
        boolean $z0;

        r0 := @parameter0: android.os.PowerManager;

        $z0 = virtualinvoke r0.<android.os.PowerManager: boolean isPowerSaveMode()>();

        return $z0;
    }

    static java.lang.String toLanguageTag(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke r0.<java.util.Locale: java.lang.String toLanguageTag()>();

        return $r1;
    }

androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void generateConfigDelta_locale(android.content.res.Configuration, android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration r0, r1, r2;
        android.os.LocaleList r3, r4;
        boolean $z0;
        java.util.Locale $r5;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.Configuration;

        r2 := @parameter2: android.content.res.Configuration;

        r3 = virtualinvoke r0.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        r4 = virtualinvoke r1.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $z0 = virtualinvoke r3.<android.os.LocaleList: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.content.res.Configuration: void setLocales(android.os.LocaleList)>(r4);

        $r5 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        r2.<android.content.res.Configuration: java.util.Locale locale> = $r5;

     label1:
        return;
    }

    static androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
    {
        android.content.res.Configuration r0;
        android.os.LocaleList $r1;
        java.lang.String $r2;
        androidx.core.os.LocaleListCompat $r3;

        r0 := @parameter0: android.content.res.Configuration;

        $r1 = virtualinvoke r0.<android.content.res.Configuration: android.os.LocaleList getLocales()>();

        $r2 = virtualinvoke $r1.<android.os.LocaleList: java.lang.String toLanguageTags()>();

        $r3 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>($r2);

        return $r3;
    }

    static void setLocales(android.content.res.Configuration, androidx.core.os.LocaleListCompat)
    {
        android.content.res.Configuration r0;
        androidx.core.os.LocaleListCompat r1;
        java.lang.String $r2;
        android.os.LocaleList $r3;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: androidx.core.os.LocaleListCompat;

        $r2 = virtualinvoke r1.<androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>();

        $r3 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>($r2);

        virtualinvoke r0.<android.content.res.Configuration: void setLocales(android.os.LocaleList)>($r3);

        return;
    }

    public static void setDefaultLocales(androidx.core.os.LocaleListCompat)
    {
        androidx.core.os.LocaleListCompat r0;
        java.lang.String $r1;
        android.os.LocaleList $r2;

        r0 := @parameter0: androidx.core.os.LocaleListCompat;

        $r1 = virtualinvoke r0.<androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>();

        $r2 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>($r1);

        staticinvoke <android.os.LocaleList: void setDefault(android.os.LocaleList)>($r2);

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void generateConfigDelta_colorMode(android.content.res.Configuration, android.content.res.Configuration, android.content.res.Configuration)
    {
        android.content.res.Configuration r0, r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @parameter0: android.content.res.Configuration;

        r1 := @parameter1: android.content.res.Configuration;

        r2 := @parameter2: android.content.res.Configuration;

        $i0 = r0.<android.content.res.Configuration: int colorMode>;

        $i3 = $i0 & 3;

        $i1 = r1.<android.content.res.Configuration: int colorMode>;

        $i2 = $i1 & 3;

        if $i3 == $i2 goto label1;

        $i14 = r2.<android.content.res.Configuration: int colorMode>;

        $i12 = r1.<android.content.res.Configuration: int colorMode>;

        $i13 = $i12 & 3;

        $i15 = $i14 | $i13;

        r2.<android.content.res.Configuration: int colorMode> = $i15;

     label1:
        $i4 = r0.<android.content.res.Configuration: int colorMode>;

        $i7 = $i4 & 12;

        $i5 = r1.<android.content.res.Configuration: int colorMode>;

        $i6 = $i5 & 12;

        if $i7 == $i6 goto label2;

        $i10 = r2.<android.content.res.Configuration: int colorMode>;

        $i8 = r1.<android.content.res.Configuration: int colorMode>;

        $i9 = $i8 & 12;

        $i11 = $i10 | $i9;

        r2.<android.content.res.Configuration: int colorMode> = $i11;

     label2:
        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object, androidx.appcompat.app.AppCompatDelegateImpl)
    {
        java.lang.Object r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        android.window.OnBackInvokedCallback r2;
        android.window.OnBackInvokedDispatcher r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.appcompat.app.AppCompatDelegateImpl;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r2 = dynamicinvoke "onBackInvoked" <android.window.OnBackInvokedCallback (androidx.appcompat.app.AppCompatDelegateImpl)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()>, methodtype: void __METHODTYPE__());

        r3 = (android.window.OnBackInvokedDispatcher) r0;

        interfaceinvoke r3.<android.window.OnBackInvokedDispatcher: void registerOnBackInvokedCallback(int,android.window.OnBackInvokedCallback)>(1000000, r2);

        return r2;
    }

    static void unregisterOnBackInvokedCallback(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.window.OnBackInvokedCallback r2;
        android.window.OnBackInvokedDispatcher r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 = (android.window.OnBackInvokedCallback) r1;

        r3 = (android.window.OnBackInvokedDispatcher) r0;

        interfaceinvoke r3.<android.window.OnBackInvokedDispatcher: void unregisterOnBackInvokedCallback(android.window.OnBackInvokedCallback)>(r2);

        return;
    }

    static android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
    {
        android.app.Activity r0;
        android.window.OnBackInvokedDispatcher $r1;

        r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher()>();

        return $r1;
    }

androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback
<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback>
<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnContentChangedBypassEnabled>
<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mDispatchKeyEventBypassEnabled>
<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnPanelClosedBypassEnabled>
<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl, android.view.Window$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        android.view.Window$Callback r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 := @parameter1: android.view.Window$Callback;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)>(r2);

        return;
    }

    void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback> = r1;

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        android.view.Window$Callback $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mDispatchKeyEventBypassEnabled>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        $z3 = interfaceinvoke $r3.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z3;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 != 0 goto label2;

        $z2 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z2 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        int $i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)>($i0, r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        int i0;
        android.view.Menu r1;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        if i0 != 0 goto label1;

        $z1 = r1 instanceof androidx.appcompat.view.menu.MenuBuilder;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)>(i0, r1);

        return $z0;
    }

    public android.view.View onCreatePanelView(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        int i0;
        android.view.View r1, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback $r2, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback>;

        r1 = interfaceinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback: android.view.View onCreatePanelView(int)>(i0);

        if r1 == null goto label1;

        return r1;

     label1:
        $r3 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)>(i0);

        return $r3;
    }

    public void onContentChanged()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        boolean $z0;
        android.view.Window$Callback $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnContentChangedBypassEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r1.<android.view.Window$Callback: void onContentChanged()>();

        return;

     label1:
        return;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;
        androidx.appcompat.view.menu.MenuBuilder r3, $r6;
        boolean $z0, $z1, z2;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback $r4, $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        $z0 = r2 instanceof androidx.appcompat.view.menu.MenuBuilder;

        if $z0 == 0 goto label1;

        $r6 = (androidx.appcompat.view.menu.MenuBuilder) r2;

        goto label2;

     label1:
        $r6 = null;

     label2:
        r3 = $r6;

        if i0 != 0 goto label3;

        if r3 != null goto label3;

        return 0;

     label3:
        if r3 == null goto label4;

        virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)>(1);

     label4:
        z2 = 0;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback>;

        if $r4 == null goto label5;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback mActionBarCallback>;

        $z1 = interfaceinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback: boolean onPreparePanel(int)>(i0);

        if $z1 == 0 goto label5;

        z2 = 1;

     label5:
        if z2 != 0 goto label6;

        z2 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)>(i0, r1, r2);

     label6:
        if r3 == null goto label7;

        virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)>(0);

     label7:
        return z2;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        int i0;
        android.view.Menu r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)>(i0, r1);

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)>(i0);

        return 1;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        int i0;
        android.view.Menu r1;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        android.view.Window$Callback $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnPanelClosedBypassEnabled>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.Window$Callback getWrapped()>();

        interfaceinvoke $r3.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(i0, r1);

        return;

     label1:
        specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)>(i0, r1);

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)>(i0);

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.ActionMode$Callback r1;
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        boolean $z0;
        android.view.ActionMode $r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;

     label2:
        $r3 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>(r1);

        return $r3;
    }

    final android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.ActionMode$Callback r1;
        androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper r2, $r4;
        androidx.appcompat.view.ActionMode r3;
        androidx.appcompat.app.AppCompatDelegateImpl $r5, $r7;
        android.content.Context $r6;
        android.view.ActionMode $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r4 = new androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r6 = $r5.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        specialinvoke $r4.<androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void <init>(android.content.Context,android.view.ActionMode$Callback)>($r6, r1);

        r2 = $r4;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r3 = virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)>(r2);

        if r3 == null goto label1;

        $r8 = virtualinvoke r2.<androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)>(r3);

        return $r8;

     label1:
        return null;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.ActionMode$Callback r1;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        boolean $z0;
        android.view.ActionMode $r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.ActionMode$Callback;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()>();

        if $z0 == 0 goto label2;

        lookupswitch(i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $r4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)>(r1);

        return $r4;

     label2:
        $r3 = specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)>(r1, i0);

        return $r3;
    }

    public void onProvideKeyboardShortcuts(java.util.List, android.view.Menu, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        java.util.List r1;
        android.view.Menu r2, r7;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        androidx.appcompat.app.AppCompatDelegateImpl $r4;
        androidx.appcompat.view.menu.MenuBuilder $r5, $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.Menu;

        i0 := @parameter2: int;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r3 = virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)>(0, 1);

        if r3 == null goto label1;

        $r5 = r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r5 == null goto label1;

        $r6 = r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        r7 = (android.view.Menu) $r6;

        specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)>(r1, r7, i0);

        goto label2;

     label1:
        specialinvoke r0.<androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)>(r1, r2, i0);

     label2:
        return;
    }

    public void bypassOnContentChanged(android.view.Window$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.Window$Callback r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.Window$Callback;

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnContentChangedBypassEnabled> = 1;

        interfaceinvoke r1.<android.view.Window$Callback: void onContentChanged()>();

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnContentChangedBypassEnabled> = 0;

        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnContentChangedBypassEnabled> = 0;

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean bypassDispatchKeyEvent(android.view.Window$Callback, android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.Window$Callback r1;
        android.view.KeyEvent r2;
        boolean z0;
        java.lang.Throwable r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.Window$Callback;

        r2 := @parameter1: android.view.KeyEvent;

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mDispatchKeyEventBypassEnabled> = 1;

        z0 = interfaceinvoke r1.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>(r2);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mDispatchKeyEventBypassEnabled> = 0;

        return z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mDispatchKeyEventBypassEnabled> = 0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void bypassOnPanelClosed(android.view.Window$Callback, int, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r0;
        android.view.Window$Callback r1;
        int i0;
        android.view.Menu r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        r1 := @parameter0: android.view.Window$Callback;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.Menu;

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnPanelClosedBypassEnabled> = 1;

        interfaceinvoke r1.<android.view.Window$Callback: void onPanelClosed(int,android.view.Menu)>(i0, r2);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnPanelClosedBypassEnabled> = 0;

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean mOnPanelClosedBypassEnabled> = 0;

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager
<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager>
<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl, android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        android.content.Context r2, $r3;
        java.lang.Object $r4;
        android.os.PowerManager $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 := @parameter1: android.content.Context;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r1);

        $r3 = virtualinvoke r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r5 = (android.os.PowerManager) $r4;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager> = $r5;

        return;
    }

    public int getApplyableNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager r0;
        int $i0;
        android.os.PowerManager $r1;
        boolean $z0;
        byte $b1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager>;

        $z0 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)>($r1);

        if $z0 == 0 goto label1;

        $b1 = 2;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        return $b1;

     label3:
        return 1;
    }

    public void onChange()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

        return;
    }

    android.content.IntentFilter createIntentFilterForBroadcastReceiver()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager r0;
        android.content.IntentFilter r1, $r2;
        int $i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        return r1;

     label1:
        return null;
    }

androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1
<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1>;

        virtualinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void onChange()>();

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>
<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()>
<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void onChange()>
    void setup()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager r0;
        android.content.IntentFilter r1;
        int $i0;
        android.content.BroadcastReceiver $r2, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;
        android.content.Context $r5;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 $r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()>();

        r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.IntentFilter: int countActions()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>;

        if $r2 != null goto label3;

        $r7 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1;

        specialinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)>(r0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver> = $r7;

     label3:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r5 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, r1);

        return;
    }

<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()>
    void cleanup()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager r0;
        java.lang.Throwable r1, $r6;
        android.content.BroadcastReceiver $r2, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;
        android.content.Context $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>;

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $r5 = $r3.<androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext>;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r5.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

     label4:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver> = null;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    boolean isListening()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager r0;
        android.content.BroadcastReceiver $r1;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager
<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager>
<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl, androidx.appcompat.app.TwilightManager)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        androidx.appcompat.app.TwilightManager r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 := @parameter1: androidx.appcompat.app.TwilightManager;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void <init>(androidx.appcompat.app.AppCompatDelegateImpl)>(r1);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager> = r2;

        return;
    }

    public int getApplyableNightMode()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager r0;
        androidx.appcompat.app.TwilightManager $r1;
        boolean $z0;
        byte $b0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.app.TwilightManager: boolean isNight()>();

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        return $b0;
    }

    public void onChange()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager r0;
        androidx.appcompat.app.AppCompatDelegateImpl $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r1.<androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()>();

        return;
    }

    android.content.IntentFilter createIntentFilterForBroadcastReceiver()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager r0;
        android.content.IntentFilter r1, $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        return r1;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void applyOverrideConfiguration(android.view.ContextThemeWrapper, android.content.res.Configuration)
    {
        android.view.ContextThemeWrapper r0;
        android.content.res.Configuration r1;

        r0 := @parameter0: android.view.ContextThemeWrapper;

        r1 := @parameter1: android.content.res.Configuration;

        virtualinvoke r0.<android.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>(r1);

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView
<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    public void <init>(androidx.appcompat.app.AppCompatDelegateImpl, android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;
        android.content.Context r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r2 := @parameter1: android.content.Context;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<androidx.appcompat.widget.ContentFrameLayout: void <init>(android.content.Context)>(r2);

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView r0;
        android.view.KeyEvent r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.appcompat.widget.ContentFrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        boolean $z0, $z1;
        float $f0, $f1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if i0 != 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f1;

        $z1 = specialinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)>(i1, i2);

        if $z1 == 0 goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)>(0);

        return 1;

     label1:
        $z0 = specialinvoke r0.<androidx.appcompat.widget.ContentFrameLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void setBackgroundResource(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    private boolean isOutOfBounds(int, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < -5 goto label1;

        if i1 < -5 goto label1;

        $i2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: int getWidth()>();

        $i3 = $i2 + 5;

        if i0 > $i3 goto label1;

        $i4 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: int getHeight()>();

        $i5 = $i4 + 5;

        if i1 <= $i5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
    void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        return $r3;
    }

    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = staticinvoke <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, null);

        return $r2;
    }

    public androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        android.os.Parcel r1;
        java.lang.ClassLoader r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.lang.ClassLoader;

        $r3 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] $r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR>
    void <init>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int describeContents()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r0;
        android.os.Parcel r1;
        int i0, $i1;
        boolean $z0, $z1;
        android.os.Bundle $r2;
        byte $b2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b2);

        $z1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen>;

        if $z1 == 0 goto label3;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r2);

     label3:
        return;
    }

    static androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r2, $r3;
        int $i0, $i1;
        boolean $z0, $z1;
        android.os.Bundle $r4;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: java.lang.ClassLoader;

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId> = $i0;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen> = $z1;

        $z0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen>;

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(r1);

        r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState> = $r4;

     label3:
        return r2;
    }

    static void <clinit>()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 r1;
        android.os.Parcelable$Creator r2;

        r1 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1;

        specialinvoke r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: void <init>()>();

        r2 = (android.os.Parcelable$Creator) r1;

        <androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR> = r2;

        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean wasLastOpen>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState>
<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState>
    void <init>(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        int i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId> = i0;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView> = 0;

        return;
    }

    public boolean hasPanelItems()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        android.view.View $r1, $r2;
        androidx.appcompat.view.menu.ListMenuPresenter $r3;
        android.widget.ListAdapter $r4;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView>;

        if $r2 == null goto label2;

        return 1;

     label2:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        $r4 = virtualinvoke $r3.<androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()>();

        $i0 = interfaceinvoke $r4.<android.widget.ListAdapter: int getCount()>();

        if $i0 <= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void clearMenuPresenters()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        androidx.appcompat.view.menu.MenuBuilder $r1, $r3;
        androidx.appcompat.view.menu.ListMenuPresenter $r2;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        virtualinvoke $r3.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r2);

     label1:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter> = null;

        return;
    }

    void setStyle(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        android.util.TypedValue r1, r12;
        android.content.res.Resources$Theme r2, $r6, $r8;
        android.content.res.TypedArray r3;
        android.content.res.Resources $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r9;
        android.content.Context r10, r14, r15, r16;
        androidx.appcompat.view.ContextThemeWrapper r11, r13;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r10 := @parameter0: android.content.Context;

        r12 = new android.util.TypedValue;

        specialinvoke r12.<android.util.TypedValue: void <init>()>();

        r1 = r12;

        $r5 = virtualinvoke r10.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        $r6 = virtualinvoke r10.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke r2.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>($r6);

        $i0 = <androidx.appcompat.R$attr: int actionBarPopupTheme>;

        virtualinvoke r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, r1, 1);

        $i1 = r1.<android.util.TypedValue: int resourceId>;

        if $i1 == 0 goto label1;

        $i10 = r1.<android.util.TypedValue: int resourceId>;

        virtualinvoke r2.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i10, 1);

     label1:
        $i2 = <androidx.appcompat.R$attr: int panelMenuListTheme>;

        virtualinvoke r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i2, r1, 1);

        $i3 = r1.<android.util.TypedValue: int resourceId>;

        if $i3 == 0 goto label2;

        $i9 = r1.<android.util.TypedValue: int resourceId>;

        virtualinvoke r2.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i9, 1);

        goto label3;

     label2:
        $i4 = <androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu>;

        virtualinvoke r2.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i4, 1);

     label3:
        r13 = new androidx.appcompat.view.ContextThemeWrapper;

        specialinvoke r13.<androidx.appcompat.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r10, 0);

        r11 = r13;

        r14 = (android.content.Context) r11;

        $r8 = virtualinvoke r14.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r8.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r2);

        r15 = (android.content.Context) r11;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext> = r15;

        $r9 = <androidx.appcompat.R$styleable: int[] AppCompatTheme>;

        r16 = (android.content.Context) r11;

        r3 = virtualinvoke r16.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r9);

        $i5 = <androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground>;

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i5, 0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background> = $i6;

        $i7 = <androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle>;

        $i8 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>($i7, 0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations> = $i8;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    void setMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        androidx.appcompat.view.menu.MenuBuilder r1, $r2, $r3, $r7;
        androidx.appcompat.view.menu.ListMenuPresenter $r4, $r5, $r6;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if r1 != $r2 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 == null goto label2;

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        virtualinvoke $r7.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r6);

     label2:
        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu> = r1;

        if r1 == null goto label3;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        if $r4 == null goto label3;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        virtualinvoke r1.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r5);

     label3:
        return;
    }

    androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        androidx.appcompat.view.menu.MenuPresenter$Callback r1;
        androidx.appcompat.view.menu.MenuView r2;
        androidx.appcompat.view.menu.MenuBuilder $r3, $r11;
        androidx.appcompat.view.menu.ListMenuPresenter $r4, $r6, $r7, $r9, $r10;
        android.view.ViewGroup $r5;
        int $i0;
        android.content.Context $r8;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuPresenter$Callback;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        if $r4 != null goto label2;

        $r7 = new androidx.appcompat.view.menu.ListMenuPresenter;

        $r8 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext>;

        $i0 = <androidx.appcompat.R$layout: int abc_list_menu_item_layout>;

        specialinvoke $r7.<androidx.appcompat.view.menu.ListMenuPresenter: void <init>(android.content.Context,int)>($r8, $i0);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter> = $r7;

        $r9 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        virtualinvoke $r9.<androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)>(r1);

        $r11 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r10 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        virtualinvoke $r11.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r10);

     label2:
        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter>;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView>;

        r2 = virtualinvoke $r6.<androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)>($r5);

        return r2;
    }

    android.os.Parcelable onSaveInstanceState()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r1, $r2;
        int $i0;
        boolean $z0;
        androidx.appcompat.view.menu.MenuBuilder $r3, $r6;
        android.os.Bundle $r4, $r5;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r2 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState;

        specialinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: void <init>()>();

        r1 = $r2;

        $i0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId> = $i0;

        $z0 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen>;

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen> = $z0;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r3 == null goto label1;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState> = $r4;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r5 = r1.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        virtualinvoke $r6.<androidx.appcompat.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)>($r5);

     label1:
        return r1;
    }

    void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        android.os.Parcelable r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState r2;
        int $i0;
        boolean $z0;
        android.os.Bundle $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState) r1;

        $i0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId> = $i0;

        $z0 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean wasLastOpen> = $z0;

        $r3 = r2.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState>;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState> = $r3;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView> = null;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView> = null;

        return;
    }

    void applyFrozenState()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r0;
        androidx.appcompat.view.menu.MenuBuilder $r1, $r4;
        android.os.Bundle $r2, $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        $r1 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu>;

        $r3 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)>($r3);

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState> = null;

     label1:
        return;
    }

androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback
<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>
    void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback r0;
        androidx.appcompat.app.AppCompatDelegateImpl r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.app.AppCompatDelegateImpl;

        r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback r0;
        androidx.appcompat.view.menu.MenuBuilder r1, r2, $r8;
        boolean z0, z1, $z2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        androidx.appcompat.app.AppCompatDelegateImpl $r4, $r5, $r6, $r7;
        int $i0;
        android.view.Menu r9, r10;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()>();

        if r2 == r1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        if z1 == 0 goto label3;

        $r8 = r2;

        goto label4;

     label3:
        $r8 = r1;

     label4:
        r9 = (android.view.Menu) $r8;

        r3 = virtualinvoke $r4.<androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)>(r9);

        if r3 == null goto label6;

        if z1 == 0 goto label5;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $i0 = r3.<androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId>;

        r10 = (android.view.Menu) r2;

        virtualinvoke $r6.<androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)>($i0, r3, r10);

        $r7 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r7.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r3, 1);

        goto label6;

     label5:
        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)>(r3, z0);

     label6:
        return;
    }

    public boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback r0;
        androidx.appcompat.view.menu.MenuBuilder r1, $r3;
        android.view.Window$Callback r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r4, $r5, $r6;
        boolean $z0, $z1;
        android.view.Menu r7;

        r0 := @this: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r3 = virtualinvoke r1.<androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()>();

        if r1 != $r3 goto label1;

        $r4 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z0 = $r4.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar>;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        r2 = virtualinvoke $r5.<androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()>();

        if r2 == null goto label1;

        $r6 = r0.<androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0>;

        $z1 = $r6.<androidx.appcompat.app.AppCompatDelegateImpl: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        r7 = (android.view.Menu) r1;

        interfaceinvoke r2.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(108, r7);

     label1:
        return 1;
    }

