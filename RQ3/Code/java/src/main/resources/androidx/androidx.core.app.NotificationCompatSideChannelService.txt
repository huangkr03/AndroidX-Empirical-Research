androidx.core.app.NotificationCompatSideChannelService
    public void <init>()
    {
        androidx.core.app.NotificationCompatSideChannelService r0;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        androidx.core.app.NotificationCompatSideChannelService r0;
        android.content.Intent r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub r4;
        android.os.IBinder r5;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");

        if $z0 == 0 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 19 goto label1;

        return null;

     label1:
        r4 = new androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub;

        specialinvoke r4.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void <init>(androidx.core.app.NotificationCompatSideChannelService)>(r0);

        r5 = (android.os.IBinder) r4;

        return r5;

     label2:
        return null;
    }

<androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
<androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)>
<androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)>
    void checkPermission(int, java.lang.String)
    {
        androidx.core.app.NotificationCompatSideChannelService r0;
        int i0, i1, i2;
        java.lang.String r1, r3, $r11;
        java.lang.String[] r2;
        android.content.pm.PackageManager $r4;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<androidx.core.app.NotificationCompatSideChannelService: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r3 = r2[i2];

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NotificationSideChannelService: Uid ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not authorized for package ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r5;
    }

androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>
    void <init>(androidx.core.app.NotificationCompatSideChannelService)
    {
        androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub r0;
        androidx.core.app.NotificationCompatSideChannelService r1;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub;

        r1 := @parameter0: androidx.core.app.NotificationCompatSideChannelService;

        r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0> = r1;

        specialinvoke r0.<android.support.v4.app.INotificationSideChannel$Stub: void <init>()>();

        return;
    }

    public void notify(java.lang.String, int, java.lang.String, android.app.Notification) throws android.os.RemoteException
    {
        androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub r0;
        java.lang.String r1, r2;
        int i0, $i2;
        android.app.Notification r3;
        long l1;
        java.lang.Throwable r4, $r7;
        androidx.core.app.NotificationCompatSideChannelService $r5, $r6;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.app.Notification;

        $r5 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        $i2 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: int getCallingUid()>();

        virtualinvoke $r5.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i2, r1);

        l1 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        virtualinvoke $r6.<androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>(r1, i0, r2, r3);

     label2:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void cancel(java.lang.String, int, java.lang.String) throws android.os.RemoteException
    {
        androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub r0;
        java.lang.String r1, r2;
        int i0, $i2;
        long l1;
        java.lang.Throwable r3, $r6;
        androidx.core.app.NotificationCompatSideChannelService $r4, $r5;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r4 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        $i2 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: int getCallingUid()>();

        virtualinvoke $r4.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i2, r1);

        l1 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: long clearCallingIdentity()>();

     label1:
        $r5 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        virtualinvoke $r5.<androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)>(r1, i0, r2);

     label2:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void cancelAll(java.lang.String)
    {
        androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub r0;
        java.lang.String r1;
        long l0;
        java.lang.Throwable r2, $r5;
        androidx.core.app.NotificationCompatSideChannelService $r3, $r4;
        int $i1;

        r0 := @this: androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        $i1 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: int getCallingUid()>();

        virtualinvoke $r3.<androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>($i1, r1);

        l0 = staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0>;

        virtualinvoke $r4.<androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)>(r1);

     label2:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        staticinvoke <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

