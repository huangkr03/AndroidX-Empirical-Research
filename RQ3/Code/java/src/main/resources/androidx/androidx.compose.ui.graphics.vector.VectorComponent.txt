androidx.compose.ui.graphics.vector.VectorComponent
<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>
<androidx.compose.ui.graphics.vector.VectorComponent: boolean isDirty>
<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.DrawCache cacheDrawScope>
<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function0 invalidateCallback>
<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.runtime.MutableState intrinsicColorFilter$delegate>
<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth>
<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight>
<androidx.compose.ui.graphics.vector.VectorComponent: long previousDrawSize>
<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function1 drawVectorBlock>
    public void <init>()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0, r3;
        androidx.compose.ui.graphics.vector.GroupComponent r1, $r4;
        androidx.compose.ui.graphics.vector.VectorComponent$root$1$1 $r5;
        kotlin.jvm.functions.Function0 $r6, $r9;
        androidx.compose.ui.graphics.vector.DrawCache $r7;
        androidx.compose.ui.graphics.vector.VectorComponent$invalidateCallback$1 $r8;
        androidx.compose.runtime.MutableState $r10;
        androidx.compose.ui.geometry.Size$Companion $r11;
        long $l0;
        androidx.compose.ui.graphics.vector.VectorComponent$drawVectorBlock$1 $r12;
        kotlin.jvm.functions.Function1 $r13;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        specialinvoke r0.<androidx.compose.ui.graphics.vector.VNode: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        $r4 = new androidx.compose.ui.graphics.vector.GroupComponent;

        specialinvoke $r4.<androidx.compose.ui.graphics.vector.GroupComponent: void <init>()>();

        r1 = $r4;

        r3 = r0;

        virtualinvoke r1.<androidx.compose.ui.graphics.vector.GroupComponent: void setPivotX(float)>(0.0F);

        virtualinvoke r1.<androidx.compose.ui.graphics.vector.GroupComponent: void setPivotY(float)>(0.0F);

        $r5 = new androidx.compose.ui.graphics.vector.VectorComponent$root$1$1;

        specialinvoke $r5.<androidx.compose.ui.graphics.vector.VectorComponent$root$1$1: void <init>(androidx.compose.ui.graphics.vector.VectorComponent)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        virtualinvoke r1.<androidx.compose.ui.graphics.vector.GroupComponent: void setInvalidateListener$ui_release(kotlin.jvm.functions.Function0)>($r6);

        r3.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root> = r1;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: boolean isDirty> = 1;

        $r7 = new androidx.compose.ui.graphics.vector.DrawCache;

        specialinvoke $r7.<androidx.compose.ui.graphics.vector.DrawCache: void <init>()>();

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.DrawCache cacheDrawScope> = $r7;

        $r8 = <androidx.compose.ui.graphics.vector.VectorComponent$invalidateCallback$1: androidx.compose.ui.graphics.vector.VectorComponent$invalidateCallback$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function0 invalidateCallback> = $r9;

        $r10 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.runtime.MutableState intrinsicColorFilter$delegate> = $r10;

        $r11 = <androidx.compose.ui.geometry.Size: androidx.compose.ui.geometry.Size$Companion Companion>;

        $l0 = virtualinvoke $r11.<androidx.compose.ui.geometry.Size$Companion: long getUnspecified-NH-jbRc()>();

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: long previousDrawSize> = $l0;

        $r12 = new androidx.compose.ui.graphics.vector.VectorComponent$drawVectorBlock$1;

        specialinvoke $r12.<androidx.compose.ui.graphics.vector.VectorComponent$drawVectorBlock$1: void <init>(androidx.compose.ui.graphics.vector.VectorComponent)>(r0);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function1 drawVectorBlock> = $r13;

        return;
    }

    public final androidx.compose.ui.graphics.vector.GroupComponent getRoot()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.ui.graphics.vector.GroupComponent $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>;

        return $r1;
    }

    public final java.lang.String getName()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.ui.graphics.vector.GroupComponent $r1;
        java.lang.String $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.graphics.vector.GroupComponent: java.lang.String getName()>();

        return $r2;
    }

    public final void setName(java.lang.String)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        java.lang.String r1;
        androidx.compose.ui.graphics.vector.GroupComponent $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>;

        virtualinvoke $r2.<androidx.compose.ui.graphics.vector.GroupComponent: void setName(java.lang.String)>(r1);

        return;
    }

    private final void doInvalidate()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: boolean isDirty> = 1;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function0 invalidateCallback>;

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

    public final kotlin.jvm.functions.Function0 getInvalidateCallback$ui_release()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function0 invalidateCallback>;

        return $r1;
    }

    public final void setInvalidateCallback$ui_release(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function0 invalidateCallback> = r1;

        return;
    }

    public final androidx.compose.ui.graphics.ColorFilter getIntrinsicColorFilter$ui_release()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.ui.graphics.ColorFilter $r4;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.runtime.MutableState intrinsicColorFilter$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.graphics.ColorFilter) $r3;

        return $r4;
    }

    public final void setIntrinsicColorFilter$ui_release(androidx.compose.ui.graphics.ColorFilter)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.ui.graphics.ColorFilter r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        r1 := @parameter0: androidx.compose.ui.graphics.ColorFilter;

        $r2 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.runtime.MutableState intrinsicColorFilter$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final float getViewportWidth()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth>;

        return $f0;
    }

    public final void setViewportWidth(float)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        float f0, $f1;
        byte $b0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        $f1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth>;

        $b0 = $f1 cmpg f0;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth> = f0;

        specialinvoke r0.<androidx.compose.ui.graphics.vector.VectorComponent: void doInvalidate()>();

     label3:
        return;
    }

    public final float getViewportHeight()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight>;

        return $f0;
    }

    public final void setViewportHeight(float)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        float f0, $f1;
        byte $b0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        $f1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight>;

        $b0 = $f1 cmpg f0;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight> = f0;

        specialinvoke r0.<androidx.compose.ui.graphics.vector.VectorComponent: void doInvalidate()>();

     label3:
        return;
    }

    public final void draw(androidx.compose.ui.graphics.drawscope.DrawScope, float, androidx.compose.ui.graphics.ColorFilter)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        androidx.compose.ui.graphics.ColorFilter r2, r3, $r10;
        boolean $z0, $z1;
        androidx.compose.ui.graphics.vector.GroupComponent $r4, $r5;
        long $l0, $l1, $l2, $l4, $l6, $l7, $l8, $l9;
        androidx.compose.ui.graphics.vector.DrawCache $r6, $r11;
        double $d0, $d1, $d2, $d3;
        int $i3, $i5;
        androidx.compose.ui.unit.Density $r7;
        androidx.compose.ui.unit.LayoutDirection $r8;
        kotlin.jvm.functions.Function1 $r9;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.compose.ui.graphics.ColorFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        if r2 == null goto label1;

        $r10 = r2;

        goto label2;

     label1:
        $r10 = virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.ColorFilter getIntrinsicColorFilter$ui_release()>();

     label2:
        r3 = $r10;

        $z0 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: boolean isDirty>;

        if $z0 != 0 goto label3;

        $l8 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: long previousDrawSize>;

        $l9 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $z1 = staticinvoke <androidx.compose.ui.geometry.Size: boolean equals-impl0(long,long)>($l8, $l9);

        if $z1 != 0 goto label4;

     label3:
        $r4 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>;

        $l0 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f1 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l0);

        $f2 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth>;

        $f3 = $f1 / $f2;

        virtualinvoke $r4.<androidx.compose.ui.graphics.vector.GroupComponent: void setScaleX(float)>($f3);

        $r5 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.GroupComponent root>;

        $l1 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f4 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l1);

        $f5 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight>;

        $f6 = $f4 / $f5;

        virtualinvoke $r5.<androidx.compose.ui.graphics.vector.GroupComponent: void setScaleY(float)>($f6);

        $r6 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.DrawCache cacheDrawScope>;

        $l2 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f7 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l2);

        $d0 = (double) $f7;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f8 = (float) $d1;

        $i3 = (int) $f8;

        $l4 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f9 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l4);

        $d2 = (double) $f9;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $f10 = (float) $d3;

        $i5 = (int) $f10;

        $l6 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i3, $i5);

        $r7 = (androidx.compose.ui.unit.Density) $r1;

        $r8 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        $r9 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: kotlin.jvm.functions.Function1 drawVectorBlock>;

        virtualinvoke $r6.<androidx.compose.ui.graphics.vector.DrawCache: void drawCachedImage-CJJAR-o(long,androidx.compose.ui.unit.Density,androidx.compose.ui.unit.LayoutDirection,kotlin.jvm.functions.Function1)>($l6, $r7, $r8, $r9);

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: boolean isDirty> = 0;

        $l7 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        r0.<androidx.compose.ui.graphics.vector.VectorComponent: long previousDrawSize> = $l7;

     label4:
        $r11 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: androidx.compose.ui.graphics.vector.DrawCache cacheDrawScope>;

        virtualinvoke $r11.<androidx.compose.ui.graphics.vector.DrawCache: void drawInto(androidx.compose.ui.graphics.drawscope.DrawScope,float,androidx.compose.ui.graphics.ColorFilter)>($r1, f0, r3);

        return;
    }

    public void draw(androidx.compose.ui.graphics.drawscope.DrawScope)
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorComponent: void draw(androidx.compose.ui.graphics.drawscope.DrawScope,float,androidx.compose.ui.graphics.ColorFilter)>($r1, 1.0F, null);

        return;
    }

    public java.lang.String toString()
    {
        androidx.compose.ui.graphics.vector.VectorComponent r0;
        java.lang.StringBuilder r1, $r3, $r5, $r7, $r9, $r10, $r12, $r13;
        java.lang.String $r6, $r15;
        float $f0, $f1;

        r0 := @this: androidx.compose.ui.graphics.vector.VectorComponent;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Params: ");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tname: ");

        $r6 = virtualinvoke r0.<androidx.compose.ui.graphics.vector.VectorComponent: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tviewportWidth: ");

        $f0 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportWidth>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tviewportHeight: ");

        $f1 = r0.<androidx.compose.ui.graphics.vector.VectorComponent: float viewportHeight>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "StringBuilder().apply(builderAction).toString()");

        return $r15;
    }

    public static final void access$doInvalidate(androidx.compose.ui.graphics.vector.VectorComponent)
    {
        androidx.compose.ui.graphics.vector.VectorComponent $r0;

        $r0 := @parameter0: androidx.compose.ui.graphics.vector.VectorComponent;

        specialinvoke $r0.<androidx.compose.ui.graphics.vector.VectorComponent: void doInvalidate()>();

        return;
    }

