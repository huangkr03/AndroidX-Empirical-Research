androidx.recyclerview.selection.EventRouter
<androidx.recyclerview.selection.EventRouter: androidx.recyclerview.selection.ToolHandlerRegistry mDelegates>
<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept>
    void <init>()
    {
        androidx.recyclerview.selection.EventRouter r0;
        androidx.recyclerview.selection.ToolHandlerRegistry $r1;
        androidx.recyclerview.selection.DummyOnItemTouchListener $r2;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.recyclerview.selection.ToolHandlerRegistry;

        $r2 = new androidx.recyclerview.selection.DummyOnItemTouchListener;

        specialinvoke $r2.<androidx.recyclerview.selection.DummyOnItemTouchListener: void <init>()>();

        specialinvoke $r1.<androidx.recyclerview.selection.ToolHandlerRegistry: void <init>(java.lang.Object)>($r2);

        r0.<androidx.recyclerview.selection.EventRouter: androidx.recyclerview.selection.ToolHandlerRegistry mDelegates> = $r1;

        return;
    }

    void set(int, androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    {
        androidx.recyclerview.selection.EventRouter r0;
        int i0;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener r1;
        androidx.recyclerview.selection.ToolHandlerRegistry $r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z0);

        $r2 = r0.<androidx.recyclerview.selection.EventRouter: androidx.recyclerview.selection.ToolHandlerRegistry mDelegates>;

        virtualinvoke $r2.<androidx.recyclerview.selection.ToolHandlerRegistry: void set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.EventRouter r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.selection.ToolHandlerRegistry $r3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener $r5;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        $z0 = r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept>;

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isActionDown(android.view.MotionEvent)>(r2);

        if $z2 == 0 goto label1;

        r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept> = 0;

     label1:
        $z3 = r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept>;

        if $z3 != 0 goto label2;

        $r3 = r0.<androidx.recyclerview.selection.EventRouter: androidx.recyclerview.selection.ToolHandlerRegistry mDelegates>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.selection.ToolHandlerRegistry: java.lang.Object get(android.view.MotionEvent)>(r2);

        $r5 = (androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) $r4;

        $z1 = interfaceinvoke $r5.<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r1, r2);

        if $z1 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.EventRouter r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;
        boolean $z0;
        androidx.recyclerview.selection.ToolHandlerRegistry $r3;
        java.lang.Object $r4;
        androidx.recyclerview.widget.RecyclerView$OnItemTouchListener $r5;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        $z0 = r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept>;

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.recyclerview.selection.EventRouter: androidx.recyclerview.selection.ToolHandlerRegistry mDelegates>;

        $r4 = virtualinvoke $r3.<androidx.recyclerview.selection.ToolHandlerRegistry: java.lang.Object get(android.view.MotionEvent)>(r2);

        $r5 = (androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) $r4;

        interfaceinvoke $r5.<androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>(r1, r2);

     label1:
        return;
    }

    public void onRequestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.selection.EventRouter r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept> = z0;

        return;
    }

    public boolean isResetRequired()
    {
        androidx.recyclerview.selection.EventRouter r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        $z0 = r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept>;

        return $z0;
    }

    public void reset()
    {
        androidx.recyclerview.selection.EventRouter r0;

        r0 := @this: androidx.recyclerview.selection.EventRouter;

        r0.<androidx.recyclerview.selection.EventRouter: boolean mDisallowIntercept> = 0;

        return;
    }

