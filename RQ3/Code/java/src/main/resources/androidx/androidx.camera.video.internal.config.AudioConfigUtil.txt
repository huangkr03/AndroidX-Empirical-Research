androidx.camera.video.internal.config.AudioConfigUtil
<androidx.camera.video.internal.config.AudioConfigUtil: java.lang.String TAG>
<androidx.camera.video.internal.config.AudioConfigUtil: int AUDIO_SAMPLE_RATE_DEFAULT>
<androidx.camera.video.internal.config.AudioConfigUtil: int AUDIO_CHANNEL_COUNT_DEFAULT>
<androidx.camera.video.internal.config.AudioConfigUtil: int AUDIO_SOURCE_FORMAT_DEFAULT>
<androidx.camera.video.internal.config.AudioConfigUtil: int AUDIO_SOURCE_DEFAULT>
    private void <init>()
    {
        androidx.camera.video.internal.config.AudioConfigUtil r0;

        r0 := @this: androidx.camera.video.internal.config.AudioConfigUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.video.internal.config.MimeInfo resolveAudioMimeInfo(androidx.camera.video.MediaSpec, androidx.camera.core.impl.CamcorderProfileProxy)
    {
        androidx.camera.video.MediaSpec r0;
        androidx.camera.core.impl.CamcorderProfileProxy r1;
        java.lang.String r2, $r15, $r22, $r29, $r36, r37, r38;
        int i0, i1, $i2, $i3, $i4, i5;
        androidx.camera.video.internal.config.MimeInfo $r3;
        boolean $z0, z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35;
        androidx.camera.video.internal.config.MimeInfo$Builder $r39, r40;

        r0 := @parameter0: androidx.camera.video.MediaSpec;

        r1 := @parameter1: androidx.camera.core.impl.CamcorderProfileProxy;

        $i2 = virtualinvoke r0.<androidx.camera.video.MediaSpec: int getOutputFormat()>();

        r2 = staticinvoke <androidx.camera.video.MediaSpec: java.lang.String outputFormatToAudioMime(int)>($i2);

        $i3 = virtualinvoke r0.<androidx.camera.video.MediaSpec: int getOutputFormat()>();

        i0 = staticinvoke <androidx.camera.video.MediaSpec: int outputFormatToAudioProfile(int)>($i3);

        r37 = r2;

        i5 = i0;

        z1 = 0;

        if r1 == null goto label4;

        r38 = virtualinvoke r1.<androidx.camera.core.impl.CamcorderProfileProxy: java.lang.String getAudioCodecMimeType()>();

        i1 = virtualinvoke r1.<androidx.camera.core.impl.CamcorderProfileProxy: int getRequiredAudioProfile()>();

        if r38 != null goto label1;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CamcorderProfile contains undefined AUDIO mime type so cannot be used. May rely on fallback defaults to derive settings [chosen mime type: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(profile: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r36);

        goto label4;

     label1:
        $i4 = virtualinvoke r0.<androidx.camera.video.MediaSpec: int getOutputFormat()>();

        if $i4 != -1 goto label2;

        z1 = 1;

        r37 = r38;

        i5 = i1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaSpec contains OUTPUT_FORMAT_AUTO. Using CamcorderProfile to derive AUDIO settings [mime type: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(profile: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r29);

        goto label4;

     label2:
        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r2, r38);

        if $z0 == 0 goto label3;

        if i0 != i1 goto label3;

        z1 = 1;

        r37 = r38;

        i5 = i1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaSpec audio mime/profile matches CamcorderProfile. Using CamcorderProfile to derive AUDIO settings [mime type: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(profile: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r22);

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaSpec audio mime or profile does not match CamcorderProfile, so CamcorderProfile settings cannot be used. May rely on fallback defaults to derive AUDIO settings [CamcorderProfile mime type: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(profile: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), chosen mime type: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(profile: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")]");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r15);

     label4:
        $r39 = staticinvoke <androidx.camera.video.internal.config.MimeInfo: androidx.camera.video.internal.config.MimeInfo$Builder builder(java.lang.String)>(r37);

        r40 = virtualinvoke $r39.<androidx.camera.video.internal.config.MimeInfo$Builder: androidx.camera.video.internal.config.MimeInfo$Builder setProfile(int)>(i5);

        if z1 == 0 goto label5;

        virtualinvoke r40.<androidx.camera.video.internal.config.MimeInfo$Builder: androidx.camera.video.internal.config.MimeInfo$Builder setCompatibleCamcorderProfile(androidx.camera.core.impl.CamcorderProfileProxy)>(r1);

     label5:
        $r3 = virtualinvoke r40.<androidx.camera.video.internal.config.MimeInfo$Builder: androidx.camera.video.internal.config.MimeInfo build()>();

        return $r3;
    }

    public static androidx.camera.video.internal.AudioSource$Settings resolveAudioSourceSettings(androidx.camera.video.internal.config.MimeInfo, androidx.camera.video.AudioSpec)
    {
        androidx.camera.video.internal.config.MimeInfo r0;
        androidx.camera.video.AudioSpec r1;
        androidx.camera.core.impl.CamcorderProfileProxy $r2, $r7;
        java.lang.Object $r4, r8;
        androidx.camera.video.internal.AudioSource$Settings $r5;
        androidx.camera.video.internal.config.AudioSourceSettingsCamcorderProfileResolver r9;
        androidx.camera.video.internal.config.AudioSourceSettingsDefaultResolver r10;
        androidx.core.util.Supplier r11;

        r0 := @parameter0: androidx.camera.video.internal.config.MimeInfo;

        r1 := @parameter1: androidx.camera.video.AudioSpec;

        $r2 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: androidx.camera.core.impl.CamcorderProfileProxy getCompatibleCamcorderProfile()>();

        if $r2 == null goto label1;

        r9 = new androidx.camera.video.internal.config.AudioSourceSettingsCamcorderProfileResolver;

        $r7 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: androidx.camera.core.impl.CamcorderProfileProxy getCompatibleCamcorderProfile()>();

        specialinvoke r9.<androidx.camera.video.internal.config.AudioSourceSettingsCamcorderProfileResolver: void <init>(androidx.camera.video.AudioSpec,androidx.camera.core.impl.CamcorderProfileProxy)>(r1, $r7);

        r8 = r9;

        goto label2;

     label1:
        r10 = new androidx.camera.video.internal.config.AudioSourceSettingsDefaultResolver;

        specialinvoke r10.<androidx.camera.video.internal.config.AudioSourceSettingsDefaultResolver: void <init>(androidx.camera.video.AudioSpec)>(r1);

        r8 = r10;

     label2:
        r11 = (androidx.core.util.Supplier) r8;

        $r4 = interfaceinvoke r11.<androidx.core.util.Supplier: java.lang.Object get()>();

        $r5 = (androidx.camera.video.internal.AudioSource$Settings) $r4;

        return $r5;
    }

    public static androidx.camera.video.internal.encoder.AudioEncoderConfig resolveAudioEncoderConfig(androidx.camera.video.internal.config.MimeInfo, androidx.camera.core.impl.Timebase, androidx.camera.video.internal.AudioSource$Settings, androidx.camera.video.AudioSpec)
    {
        androidx.camera.video.internal.config.MimeInfo r0;
        androidx.camera.core.impl.Timebase r1;
        androidx.camera.video.internal.AudioSource$Settings r2;
        androidx.camera.video.AudioSpec r3;
        androidx.camera.core.impl.CamcorderProfileProxy $r4, $r11;
        java.lang.String $r6, $r10;
        int $i0, $i1;
        java.lang.Object $r7, r12;
        androidx.camera.video.internal.encoder.AudioEncoderConfig $r8;
        androidx.camera.video.internal.config.AudioEncoderConfigCamcorderProfileResolver r13;
        androidx.camera.video.internal.config.AudioEncoderConfigDefaultResolver r14;
        androidx.core.util.Supplier r15;

        r0 := @parameter0: androidx.camera.video.internal.config.MimeInfo;

        r1 := @parameter1: androidx.camera.core.impl.Timebase;

        r2 := @parameter2: androidx.camera.video.internal.AudioSource$Settings;

        r3 := @parameter3: androidx.camera.video.AudioSpec;

        $r4 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: androidx.camera.core.impl.CamcorderProfileProxy getCompatibleCamcorderProfile()>();

        if $r4 == null goto label1;

        r13 = new androidx.camera.video.internal.config.AudioEncoderConfigCamcorderProfileResolver;

        $r10 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: java.lang.String getMimeType()>();

        $i1 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: int getProfile()>();

        $r11 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: androidx.camera.core.impl.CamcorderProfileProxy getCompatibleCamcorderProfile()>();

        specialinvoke r13.<androidx.camera.video.internal.config.AudioEncoderConfigCamcorderProfileResolver: void <init>(java.lang.String,int,androidx.camera.core.impl.Timebase,androidx.camera.video.AudioSpec,androidx.camera.video.internal.AudioSource$Settings,androidx.camera.core.impl.CamcorderProfileProxy)>($r10, $i1, r1, r3, r2, $r11);

        r12 = r13;

        goto label2;

     label1:
        r14 = new androidx.camera.video.internal.config.AudioEncoderConfigDefaultResolver;

        $r6 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: java.lang.String getMimeType()>();

        $i0 = virtualinvoke r0.<androidx.camera.video.internal.config.MimeInfo: int getProfile()>();

        specialinvoke r14.<androidx.camera.video.internal.config.AudioEncoderConfigDefaultResolver: void <init>(java.lang.String,int,androidx.camera.core.impl.Timebase,androidx.camera.video.AudioSpec,androidx.camera.video.internal.AudioSource$Settings)>($r6, $i0, r1, r3, r2);

        r12 = r14;

     label2:
        r15 = (androidx.core.util.Supplier) r12;

        $r7 = interfaceinvoke r15.<androidx.core.util.Supplier: java.lang.Object get()>();

        $r8 = (androidx.camera.video.internal.encoder.AudioEncoderConfig) $r7;

        return $r8;
    }

    static int resolveAudioSource(androidx.camera.video.AudioSpec)
    {
        androidx.camera.video.AudioSpec r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        int i0;

        r0 := @parameter0: androidx.camera.video.AudioSpec;

        i0 = virtualinvoke r0.<androidx.camera.video.AudioSpec: int getSource()>();

        if i0 != -1 goto label1;

        i0 = 5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using default AUDIO source: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r8);

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using provided AUDIO source: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r4);

     label2:
        return i0;
    }

    static int resolveAudioSourceFormat(androidx.camera.video.AudioSpec)
    {
        androidx.camera.video.AudioSpec r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        int i0;

        r0 := @parameter0: androidx.camera.video.AudioSpec;

        i0 = virtualinvoke r0.<androidx.camera.video.AudioSpec: int getSourceFormat()>();

        if i0 != -1 goto label1;

        i0 = 2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using default AUDIO source format: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r8);

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using provided AUDIO source format: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r4);

     label2:
        return i0;
    }

    static int selectSampleRateOrNearestSupported(android.util.Range, int, int, int)
    {
        android.util.Range r0;
        int i0, i1, i2, $i3, $i4, i5, i6;
        java.lang.Integer $r1, $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.String $r7, $r14, $r25;
        java.lang.Object $r8;
        java.util.ArrayList $r15, r26;
        java.util.List $r16;
        java.util.Comparator $r17;

        r0 := @parameter0: android.util.Range;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i5 = i2;

        r26 = null;

        i6 = 0;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $z0 = virtualinvoke r0.<android.util.Range: boolean contains(java.lang.Comparable)>($r1);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <androidx.camera.video.internal.AudioSource: boolean isSettingsSupported(int,int,int)>(i5, i0, i1);

        if $z1 == 0 goto label2;

        return i5;

     label2:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sample rate ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hz is not supported by audio source with channel count ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and source format ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r25);

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sample rate ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hz is not in target range ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r7);

     label4:
        if r26 != null goto label5;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying common sample rates in proximity order to target ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hz");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", $r14);

        $r15 = new java.util.ArrayList;

        $r16 = <androidx.camera.video.internal.AudioSource: java.util.List COMMON_SAMPLE_RATES>;

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

        r26 = $r15;

        $r17 = dynamicinvoke "compare" <java.util.Comparator (int)>(i2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.video.internal.config.AudioConfigUtil: int lambda$selectSampleRateOrNearestSupported$0(int,java.lang.Integer,java.lang.Integer)>, methodtype: int __METHODTYPE__(java.lang.Integer,java.lang.Integer));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r26, $r17);

     label5:
        $i3 = interfaceinvoke r26.<java.util.List: int size()>();

        if i6 >= $i3 goto label6;

        $i4 = i6;

        i6 = i6 + 1;

        $r8 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>($i4);

        $r9 = (java.lang.Integer) $r8;

        i5 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        goto label1;

     label6:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", "No sample rate found in target range or supported by audio source. Falling back to default sample rate of 44100Hz");

        return 44100;
    }

    static int scaleAndClampBitrate(int, int, int, int, int, android.util.Range)
    {
        int i0, i1, i2, i3, i4, i5;
        android.util.Range r0, $r5;
        android.util.Rational r1, r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r6, $r8, $r12, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Comparable $r7;
        java.lang.StringBuilder $r9, $r10, $r14;
        java.lang.Object[] $r11, $r15;
        java.lang.String $r13, r22;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r0 := @parameter5: android.util.Range;

        $r3 = new android.util.Rational;

        specialinvoke $r3.<android.util.Rational: void <init>(int,int)>(i1, i2);

        r1 = $r3;

        $r4 = new android.util.Rational;

        specialinvoke $r4.<android.util.Rational: void <init>(int,int)>(i3, i4);

        r2 = $r4;

        $d0 = (double) i0;

        $d1 = virtualinvoke r1.<android.util.Rational: double doubleValue()>();

        $d2 = $d0 * $d1;

        $d3 = virtualinvoke r2.<android.util.Rational: double doubleValue()>();

        $d4 = $d2 * $d3;

        i5 = (int) $d4;

        r22 = "";

        $z0 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("AudioConfigUtil");

        if $z0 == 0 goto label1;

        $r15 = newarray (java.lang.Object)[6];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15[0] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15[1] = $r17;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r15[2] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r15[3] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r15[4] = $r20;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r15[5] = $r21;

        r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Base Bitrate(%dbps) * Channel Count Ratio(%d / %d) * Sample Rate Ratio(%d / %d) = %d", $r15);

     label1:
        $r5 = <androidx.camera.video.AudioSpec: android.util.Range BITRATE_RANGE_AUTO>;

        $z1 = virtualinvoke $r5.<android.util.Range: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r7 = virtualinvoke r0.<android.util.Range: java.lang.Comparable clamp(java.lang.Comparable)>($r6);

        $r8 = (java.lang.Integer) $r7;

        i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $z2 = staticinvoke <androidx.camera.core.Logger: boolean isDebugEnabled(java.lang.String)>("AudioConfigUtil");

        if $z2 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r0;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r11[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nClamped to range %s -> %dbps", $r11);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r22 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("AudioConfigUtil", r22);

        return i5;
    }

    private static int lambda$selectSampleRateOrNearestSupported$0(int, java.lang.Integer, java.lang.Integer)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.Integer r0, r1;
        float $f0, $f1, $f2, $f3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Integer;

        r1 := @parameter2: java.lang.Integer;

        $i2 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i3 = $i2 - i0;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i5 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i6 = $i5 - i0;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        i1 = $i4 - $i7;

        if i1 != 0 goto label1;

        $i9 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i10 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i11 = $i9 - $i10;

        $f2 = (float) $i11;

        $f3 = staticinvoke <java.lang.Math: float signum(float)>($f2);

        $i12 = (int) $f3;

        return $i12;

     label1:
        $f0 = (float) i1;

        $f1 = staticinvoke <java.lang.Math: float signum(float)>($f0);

        $i8 = (int) $f1;

        return $i8;
    }

