androidx.media3.test.utils.DefaultRenderersFactoryAsserts
    public void <init>()
    {
        androidx.media3.test.utils.DefaultRenderersFactoryAsserts r0;

        r0 := @this: androidx.media3.test.utils.DefaultRenderersFactoryAsserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void assertExtensionRendererCreated(java.lang.Class, int)
    {
        java.lang.Class r0;
        int i0, $i1, $i2, i3, i4, i5, i6, i7, i8;
        java.lang.Boolean $r1, $r3;
        com.google.common.truth.BooleanSubject $r2, $r4;
        com.google.common.truth.Subject $r5, $r12;
        boolean $z0, $z1, z2, z3;
        java.lang.Integer $r6, $r8, $r9, $r11;
        com.google.common.truth.IntegerSubject $r7, $r10;
        androidx.media3.exoplayer.Renderer[] r13, r14, r16, r17, r19, r20;
        androidx.media3.exoplayer.Renderer r15, r18, r21;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        r13 = staticinvoke <androidx.media3.test.utils.DefaultRenderersFactoryAsserts: androidx.media3.exoplayer.Renderer[] createRenderers(int)>(0);

        r14 = r13;

        i3 = lengthof r14;

        i4 = 0;

     label01:
        if i4 >= i3 goto label02;

        r15 = r14[i4];

        $r12 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r15);

        virtualinvoke $r12.<com.google.common.truth.Subject: void isNotInstanceOf(java.lang.Class)>(r0);

        i4 = i4 + 1;

        goto label01;

     label02:
        r16 = staticinvoke <androidx.media3.test.utils.DefaultRenderersFactoryAsserts: androidx.media3.exoplayer.Renderer[] createRenderers(int)>(1);

        z2 = 0;

        r17 = r16;

        i5 = lengthof r17;

        i6 = 0;

     label03:
        if i6 >= i5 goto label06;

        r18 = r17[i6];

        if z2 != 0 goto label04;

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r18);

        if $z1 == 0 goto label05;

        z2 = 1;

        goto label05;

     label04:
        $i2 = interfaceinvoke r18.<androidx.media3.exoplayer.Renderer: int getTrackType()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r10 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r9);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r10.<com.google.common.truth.IntegerSubject: void isNotEqualTo(java.lang.Object)>($r11);

     label05:
        i6 = i6 + 1;

        goto label03;

     label06:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r2 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r1);

        virtualinvoke $r2.<com.google.common.truth.BooleanSubject: void isTrue()>();

        r19 = staticinvoke <androidx.media3.test.utils.DefaultRenderersFactoryAsserts: androidx.media3.exoplayer.Renderer[] createRenderers(int)>(2);

        z3 = 0;

        r20 = r19;

        i7 = lengthof r20;

        i8 = 0;

     label07:
        if i8 >= i7 goto label11;

        r21 = r20[i8];

        if z3 != 0 goto label09;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r21);

        if $z0 == 0 goto label08;

        z3 = 1;

        goto label10;

     label08:
        $i1 = interfaceinvoke r21.<androidx.media3.exoplayer.Renderer: int getTrackType()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r7 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.IntegerSubject assertThat(java.lang.Integer)>($r6);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<com.google.common.truth.IntegerSubject: void isNotEqualTo(java.lang.Object)>($r8);

        goto label10;

     label09:
        $r5 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.Subject assertThat(java.lang.Object)>(r21);

        virtualinvoke $r5.<com.google.common.truth.Subject: void isNotInstanceOf(java.lang.Class)>(r0);

     label10:
        i8 = i8 + 1;

        goto label07;

     label11:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        $r4 = staticinvoke <com.google.common.truth.Truth: com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean)>($r3);

        virtualinvoke $r4.<com.google.common.truth.BooleanSubject: void isTrue()>();

        return;
    }

    private static androidx.media3.exoplayer.Renderer[] createRenderers(int)
    {
        int i0;
        androidx.media3.exoplayer.DefaultRenderersFactory r0, $r1;
        android.content.Context $r2;
        android.os.Handler $r3;
        android.os.Looper $r4;
        androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1 $r5;
        androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2 $r6;
        androidx.media3.exoplayer.text.TextOutput $r7;
        androidx.media3.exoplayer.metadata.MetadataOutput $r8;
        androidx.media3.exoplayer.Renderer[] $r9;

        i0 := @parameter0: int;

        $r1 = new androidx.media3.exoplayer.DefaultRenderersFactory;

        $r2 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<androidx.media3.exoplayer.DefaultRenderersFactory: void <init>(android.content.Context)>($r2);

        r0 = virtualinvoke $r1.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.DefaultRenderersFactory setExtensionRendererMode(int)>(i0);

        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r5 = new androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1;

        specialinvoke $r5.<androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1: void <init>()>();

        $r6 = new androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2;

        specialinvoke $r6.<androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2: void <init>()>();

        $r7 = dynamicinvoke "onCues" <androidx.media3.exoplayer.text.TextOutput ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.common.text.CueGroup), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.test.utils.DefaultRenderersFactoryAsserts: void lambda$createRenderers$0(androidx.media3.common.text.CueGroup)>, methodtype: void __METHODTYPE__(androidx.media3.common.text.CueGroup));

        $r8 = dynamicinvoke "onMetadata" <androidx.media3.exoplayer.metadata.MetadataOutput ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.common.Metadata), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.test.utils.DefaultRenderersFactoryAsserts: void lambda$createRenderers$1(androidx.media3.common.Metadata)>, methodtype: void __METHODTYPE__(androidx.media3.common.Metadata));

        $r9 = virtualinvoke r0.<androidx.media3.exoplayer.DefaultRenderersFactory: androidx.media3.exoplayer.Renderer[] createRenderers(android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.text.TextOutput,androidx.media3.exoplayer.metadata.MetadataOutput)>($r3, $r5, $r6, $r7, $r8);

        return $r9;
    }

    private static void lambda$createRenderers$1(androidx.media3.common.Metadata)
    {
        androidx.media3.common.Metadata r0;

        r0 := @parameter0: androidx.media3.common.Metadata;

        return;
    }

    private static void lambda$createRenderers$0(androidx.media3.common.text.CueGroup)
    {
        androidx.media3.common.text.CueGroup r0;

        r0 := @parameter0: androidx.media3.common.text.CueGroup;

        return;
    }

androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1
    void <init>()
    {
        androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1 r0;

        r0 := @this: androidx.media3.test.utils.DefaultRenderersFactoryAsserts$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2
    void <init>()
    {
        androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2 r0;

        r0 := @this: androidx.media3.test.utils.DefaultRenderersFactoryAsserts$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

