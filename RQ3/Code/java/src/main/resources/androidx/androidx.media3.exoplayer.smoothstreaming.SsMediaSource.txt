androidx.media3.exoplayer.smoothstreaming.SsMediaSource
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long DEFAULT_LIVE_PRESENTATION_DELAY_MS>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: int MINIMUM_MANIFEST_REFRESH_PERIOD_MS>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long MIN_LIVE_DEFAULT_START_POSITION_US>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: boolean sideloadedManifest>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.net.Uri manifestUri>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long livePresentationDelayMs>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource manifestDataSource>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long manifestLoadStartTimestamp>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler>
    private void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest, androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory, androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, long)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r2;
        androidx.media3.datasource.DataSource$Factory r3;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r4;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory r5;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r6;
        androidx.media3.exoplayer.drm.DrmSessionManager r7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r8;
        long l0;
        androidx.media3.common.MediaItem$LocalConfiguration $r9, $r11, $r12, $r15;
        java.lang.Object $r10;
        android.net.Uri $r13, $r14, $r16, $r21;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r17;
        java.util.ArrayList $r18;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        r3 := @parameter2: androidx.media3.datasource.DataSource$Factory;

        r4 := @parameter3: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r5 := @parameter4: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory;

        r6 := @parameter5: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r7 := @parameter6: androidx.media3.exoplayer.drm.DrmSessionManager;

        r8 := @parameter7: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        l0 := @parameter8: long;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        if r2 == null goto label1;

        $z1 = r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem> = r1;

        $r9 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (androidx.media3.common.MediaItem$LocalConfiguration) $r10;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration> = $r11;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest> = r2;

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r14 = $r12.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r13 = <android.net.Uri: android.net.Uri EMPTY>;

        $z0 = virtualinvoke $r14.<android.net.Uri: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label4;

        $r21 = null;

        goto label5;

     label4:
        $r15 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r16 = $r15.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        $r21 = staticinvoke <androidx.media3.common.util.Util: android.net.Uri fixSmoothStreamingIsmManifestUri(android.net.Uri)>($r16);

     label5:
        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.net.Uri manifestUri> = $r21;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory> = r3;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser> = r4;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory> = r5;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = r6;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager> = r7;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r8;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long livePresentationDelayMs> = l0;

        $r17 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(null);

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher> = $r17;

        if r2 == null goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: boolean sideloadedManifest> = $z3;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods> = $r18;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        return $r1;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.exoplayer.drm.DrmSessionManager $r2, $r3;
        android.os.Looper $r4;
        androidx.media3.exoplayer.analytics.PlayerId $r5;
        boolean $z0;
        androidx.media3.datasource.DataSource$Factory $r6;
        androidx.media3.datasource.DataSource $r7;
        androidx.media3.exoplayer.upstream.Loader $r8, $r9;
        android.os.Handler $r10;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower$Dummy $r11;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener> = r1;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionManager: void prepare()>();

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r5 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        interfaceinvoke $r3.<androidx.media3.exoplayer.drm.DrmSessionManager: void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId)>($r4, $r5);

        $z0 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: boolean sideloadedManifest>;

        if $z0 == 0 goto label1;

        $r11 = new androidx.media3.exoplayer.upstream.LoaderErrorThrower$Dummy;

        specialinvoke $r11.<androidx.media3.exoplayer.upstream.LoaderErrorThrower$Dummy: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower> = $r11;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void processManifest()>();

        goto label2;

     label1:
        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory>;

        $r7 = interfaceinvoke $r6.<androidx.media3.datasource.DataSource$Factory: androidx.media3.datasource.DataSource createDataSource()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource manifestDataSource> = $r7;

        $r8 = new androidx.media3.exoplayer.upstream.Loader;

        specialinvoke $r8.<androidx.media3.exoplayer.upstream.Loader: void <init>(java.lang.String)>("SsMediaSource");

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader> = $r8;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower> = $r9;

        $r10 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentLooper()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler> = $r10;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void startLoadingManifest()>();

     label2:
        return;
    }

    public void maybeThrowSourceInfoRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower $r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.upstream.LoaderErrorThrower: void maybeThrowError()>();

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r4;
        androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod r5, $r6;
        androidx.media3.exoplayer.upstream.LoaderErrorThrower $r7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r8;
        androidx.media3.exoplayer.drm.DrmSessionManager $r9;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r10;
        androidx.media3.datasource.TransferListener $r11;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory $r12;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r13;
        java.util.ArrayList $r14;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        r4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        $r6 = new androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod;

        $r13 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory>;

        $r11 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>;

        $r10 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower>;

        specialinvoke $r6.<androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod: void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.upstream.Allocator)>($r13, $r12, $r11, $r10, $r9, r4, $r8, r3, $r7, r2);

        r5 = $r6;

        $r14 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        return r5;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod $r2;
        java.util.ArrayList $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = (androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod) r1;

        virtualinvoke $r2.<androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod: void release()>();

        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        boolean $z0;
        androidx.media3.exoplayer.upstream.Loader $r1, $r5;
        android.os.Handler $r2, $r4;
        androidx.media3.exoplayer.drm.DrmSessionManager $r3;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r7;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $z0 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: boolean sideloadedManifest>;

        if $z0 == 0 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        goto label2;

     label1:
        $r7 = null;

     label2:
        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest> = $r7;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource manifestDataSource> = null;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long manifestLoadStartTimestamp> = 0L;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>;

        if $r1 == null goto label3;

        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>;

        virtualinvoke $r5.<androidx.media3.exoplayer.upstream.Loader: void release()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader> = null;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler>;

        if $r2 == null goto label4;

        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler> = null;

     label4:
        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.drm.DrmSessionManager: void release()>();

        return;
    }

    public void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4, $l6;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r3;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7;
        int $i5;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r8;
        java.lang.Object $r9;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r10;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r3 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r3.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r4, $r5, $r6, l0, l1, $l3);

        r2 = $r3;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher>;

        $i5 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r8.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r2, $i5);

        $r9 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.lang.Object getResult()>();

        $r10 = (androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest) $r9;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest> = $r10;

        $l6 = l0 - l1;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long manifestLoadStartTimestamp> = $l6;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void processManifest()>();

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void scheduleManifestRefresh()>();

        return;
    }

    public void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, boolean)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, $l2, $l3, $l4;
        boolean z0;
        androidx.media3.exoplayer.source.LoadEventInfo r2, $r3;
        androidx.media3.datasource.DataSpec $r4;
        android.net.Uri $r5;
        java.util.Map $r6;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7;
        int $i5;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r8;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r3 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l2 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r6 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r3.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l2, $r4, $r5, $r6, l0, l1, $l3);

        r2 = $r3;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l4);

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher>;

        $i5 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r8.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int)>(r2, $i5);

        return;
    }

    public androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1;
        long l0, l1, l3, $l4, $l5, $l9;
        java.io.IOException r2;
        int i2, $i6, $i8;
        androidx.media3.exoplayer.source.LoadEventInfo r3, $r6;
        androidx.media3.exoplayer.source.MediaLoadData r4, $r10;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction r5, $r15;
        boolean z0, $z1, $z2;
        androidx.media3.datasource.DataSpec $r7;
        android.net.Uri $r8;
        java.util.Map $r9;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo $r11;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r12, $r14;
        byte $b7;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r13;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r6 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r7 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        $r8 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: android.net.Uri getUri()>();

        $r9 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: java.util.Map getResponseHeaders()>();

        $l5 = virtualinvoke r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long bytesLoaded()>();

        specialinvoke $r6.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long)>($l4, $r7, $r8, $r9, l0, l1, $l5);

        r3 = $r6;

        $r10 = new androidx.media3.exoplayer.source.MediaLoadData;

        $i6 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        specialinvoke $r10.<androidx.media3.exoplayer.source.MediaLoadData: void <init>(int)>($i6);

        r4 = $r10;

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r11 = new androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo;

        specialinvoke $r11.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo: void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int)>(r3, r4, r2, i2);

        l3 = interfaceinvoke $r12.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo)>($r11);

        $b7 = l3 cmp -9223372036854775807L;

        if $b7 != 0 goto label1;

        $r15 = <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL>;

        goto label2;

     label1:
        $r15 = staticinvoke <androidx.media3.exoplayer.upstream.Loader: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction createRetryAction(boolean,long)>(0, l3);

     label2:
        r5 = $r15;

        $z1 = virtualinvoke r5.<androidx.media3.exoplayer.upstream.Loader$LoadErrorAction: boolean isRetry()>();

        if $z1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $r13 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher>;

        $i8 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r13.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean)>(r3, $i8, r2, z0);

        if z0 == 0 goto label5;

        $r14 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l9 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        interfaceinvoke $r14.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: void onLoadTaskConcluded(long)>($l9);

     label5:
        return r5;
    }

    private void processManifest()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        java.util.ArrayList $r1, $r21;
        int $i0, $i12, $i14, $i15, $i17, $i18, i21, i24, i25;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r2, $r3, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r23;
        byte $b1, $b3, $b6, $b9, $b32;
        boolean $z0, $z1, $z2, $z3;
        long $l2, $l4, $l5, $l7, $l8, $l10, $l11, $l13, $l16, $l19, $l20, l22, l23, $l26, l27, l28, $l29, $l30, l31, $l33, l34;
        androidx.media3.exoplayer.source.SinglePeriodTimeline $r5, $r10, $r16, r27;
        androidx.media3.common.MediaItem $r6, $r11, $r19;
        java.lang.Object $r22;
        androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod $r24;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] r25;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement r26;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        i21 = 0;

     label01:
        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i21 >= $i0 goto label02;

        $r21 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: java.util.ArrayList mediaPeriods>;

        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        $r24 = (androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod) $r22;

        $r23 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        virtualinvoke $r24.<androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod: void updateManifest(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest)>($r23);

        i21 = i21 + 1;

        goto label01;

     label02:
        l22 = 9223372036854775807L;

        l23 = -9223372036854775808L;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        r25 = $r2.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements>;

        i24 = lengthof r25;

        i25 = 0;

     label03:
        if i25 >= i24 goto label05;

        r26 = r25[i25];

        $i12 = r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        if $i12 <= 0 goto label04;

        $l13 = virtualinvoke r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>(0);

        l22 = staticinvoke <java.lang.Math: long min(long,long)>(l22, $l13);

        $i14 = r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        $i15 = $i14 - 1;

        $l16 = virtualinvoke r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getStartTimeUs(int)>($i15);

        $i17 = r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: int chunkCount>;

        $i18 = $i17 - 1;

        $l19 = virtualinvoke r26.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement: long getChunkDurationUs(int)>($i18);

        $l20 = $l16 + $l19;

        l23 = staticinvoke <java.lang.Math: long max(long,long)>(l23, $l20);

     label04:
        i25 = i25 + 1;

        goto label03;

     label05:
        $b1 = l22 cmp 9223372036854775807L;

        if $b1 != 0 goto label08;

        $r15 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z1 = $r15.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z1 == 0 goto label06;

        $l26 = -9223372036854775807L;

        goto label07;

     label06:
        $l26 = 0L;

     label07:
        l27 = $l26;

        $r16 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $r17 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z3 = $r17.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        $r18 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z2 = $r18.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        $r20 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r19 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r16.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>(l27, 0L, 0L, 0L, 1, $z3, $z2, $r20, $r19);

        r27 = $r16;

        goto label14;

     label08:
        $r3 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z0 = $r3.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z0 == 0 goto label11;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $l5 = $r9.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long dvrWindowLengthUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 == 0 goto label09;

        $r13 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $l8 = $r13.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long dvrWindowLengthUs>;

        $b9 = $l8 cmp 0L;

        if $b9 <= 0 goto label09;

        $r14 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $l10 = $r14.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long dvrWindowLengthUs>;

        $l11 = l23 - $l10;

        l22 = staticinvoke <java.lang.Math: long max(long,long)>(l22, $l11);

     label09:
        l28 = l23 - l22;

        $l29 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long livePresentationDelayMs>;

        $l30 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l29);

        l31 = l28 - $l30;

        $b32 = l31 cmp 5000000L;

        if $b32 >= 0 goto label10;

        $l7 = l28 / 2L;

        l31 = staticinvoke <java.lang.Math: long min(long,long)>(5000000L, $l7);

     label10:
        $r10 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r11 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r10.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>(-9223372036854775807L, l28, l22, l31, 1, 1, 1, $r12, $r11);

        r27 = $r10;

        goto label14;

     label11:
        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $l2 = $r4.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long durationUs>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 == 0 goto label12;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $l33 = $r8.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: long durationUs>;

        goto label13;

     label12:
        $l33 = l23 - l22;

     label13:
        l34 = $l33;

        $r5 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l4 = l22 + l34;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r5.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem)>($l4, l34, l22, 0L, 1, 0, 0, $r7, $r6);

        r27 = $r5;

     label14:
        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>(r27);

        return;
    }

    private void scheduleManifestRefresh()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        long l0, l1, $l2, $l3, $l4;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest $r1;
        boolean $z0;
        android.os.Handler $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest>;

        $z0 = $r1.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: long manifestLoadStartTimestamp>;

        l0 = $l2 + 5000L;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = l0 - $l3;

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l4);

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.os.Handler manifestRefreshHandler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.smoothstreaming.SsMediaSource)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void startLoadingManifest()>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, l1);

        return;
    }

    private void startLoadingManifest()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable r1, $r3;
        long l0, $l3;
        androidx.media3.exoplayer.upstream.Loader $r2, $r8;
        boolean $z0;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser $r4;
        android.net.Uri $r5;
        androidx.media3.datasource.DataSource $r6;
        int $i1, $i2, $i4;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r7;
        androidx.media3.exoplayer.source.LoadEventInfo $r9;
        androidx.media3.datasource.DataSpec $r10;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r11;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r2 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>;

        $z0 = virtualinvoke $r2.<androidx.media3.exoplayer.upstream.Loader: boolean hasFatalError()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new androidx.media3.exoplayer.upstream.ParsingLoadable;

        $r6 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.datasource.DataSource manifestDataSource>;

        $r5 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: android.net.Uri manifestUri>;

        $r4 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>;

        specialinvoke $r3.<androidx.media3.exoplayer.upstream.ParsingLoadable: void <init>(androidx.media3.datasource.DataSource,android.net.Uri,int,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser)>($r6, $r5, 4, $r4);

        r1 = $r3;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader manifestLoader>;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $i1 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        $i2 = interfaceinvoke $r7.<androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)>($i1);

        l0 = virtualinvoke $r8.<androidx.media3.exoplayer.upstream.Loader: long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int)>(r1, r0, $i2);

        $r11 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher>;

        $r9 = new androidx.media3.exoplayer.source.LoadEventInfo;

        $l3 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: long loadTaskId>;

        $r10 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: androidx.media3.datasource.DataSpec dataSpec>;

        specialinvoke $r9.<androidx.media3.exoplayer.source.LoadEventInfo: void <init>(long,androidx.media3.datasource.DataSpec,long)>($l3, $r10, l0);

        $i4 = r1.<androidx.media3.exoplayer.upstream.ParsingLoadable: int type>;

        virtualinvoke $r11.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int)>($r9, $i4);

        return;
    }

    public volatile androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, java.io.IOException, int)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        java.io.IOException r2;
        int i2;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r3;
        androidx.media3.exoplayer.upstream.Loader$LoadErrorAction $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.IOException;

        i2 := @parameter4: int;

        $r3 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int)>($r3, l0, l1, r2, i2);

        return $r4;
    }

    public volatile void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long, boolean)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        boolean z0;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean)>($r2, l0, l1, z0);

        return;
    }

    public volatile void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable, long, long)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.exoplayer.upstream.Loader$Loadable r1;
        long l0, l1;
        androidx.media3.exoplayer.upstream.ParsingLoadable $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Loader$Loadable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = (androidx.media3.exoplayer.upstream.ParsingLoadable) r1;

        virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long)>($r2, l0, l1);

        return;
    }

    void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest, androidx.media3.datasource.DataSource$Factory, androidx.media3.exoplayer.upstream.ParsingLoadable$Parser, androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory, androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, long, androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r2;
        androidx.media3.datasource.DataSource$Factory r3;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r4;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory r5;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r6;
        androidx.media3.exoplayer.drm.DrmSessionManager r7;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r8;
        long l0;
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1 r9;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        r3 := @parameter2: androidx.media3.datasource.DataSource$Factory;

        r4 := @parameter3: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r5 := @parameter4: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory;

        r6 := @parameter5: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r7 := @parameter6: androidx.media3.exoplayer.drm.DrmSessionManager;

        r8 := @parameter7: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        l0 := @parameter8: long;

        r9 := @parameter9: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1;

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long)>(r1, r2, r3, r4, r5, r6, r7, r8, l0);

        return;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.exoplayer.smoothstreaming");

        return;
    }

androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs>
<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>
    public void <init>(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = new androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory;

        specialinvoke $r2.<androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory: void <init>(androidx.media3.datasource.DataSource$Factory)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: void <init>(androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.datasource.DataSource$Factory)>($r2, r1);

        return;
    }

    public void <init>(androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory, androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory r1, $r4;
        androidx.media3.datasource.DataSource$Factory r2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider $r5;
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy $r6;
        androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory $r7;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory;

        r2 := @parameter1: androidx.media3.datasource.DataSource$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory) $r3;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory> = $r4;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory> = r2;

        $r5 = new androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider;

        specialinvoke $r5.<androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = $r5;

        $r6 = new androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        specialinvoke $r6.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r6;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs> = 30000L;

        $r7 = new androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory;

        specialinvoke $r7.<androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory: void <init>()>();

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = $r7;

        return;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setLoadErrorHandlingPolicy no longer handles null by instantiating a new DefaultLoadErrorHandlingPolicy. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) $r2;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setLivePresentationDelayMs(long)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setManifestParser(androidx.media3.exoplayer.upstream.ParsingLoadable$Parser)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setCompositeSequenceableLoaderFactory(androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "SsMediaSource.Factory#setCompositeSequenceableLoaderFactory no longer handles null by instantiating a new DefaultCompositeSequenceableLoaderFactory. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory) $r2;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setDrmSessionManagerProvider no longer handles null by instantiating a new DefaultDrmSessionManagerProvider. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.drm.DrmSessionManagerProvider) $r2;

        r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r1;
        android.net.Uri $r2;
        androidx.media3.common.MediaItem $r3;
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource $r4;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        $r2 = <android.net.Uri: android.net.Uri EMPTY>;

        $r3 = staticinvoke <androidx.media3.common.MediaItem: androidx.media3.common.MediaItem fromUri(android.net.Uri)>($r2);

        $r4 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.common.MediaItem)>(r1, $r3);

        return $r4;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest, androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        java.lang.Object r1, $r17;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.media3.common.MediaItem$LocalConfiguration $r2, $r3, $r13, $r14;
        androidx.media3.common.MediaItem$Builder $r4, $r5, $r6;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider $r8;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory $r9;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r10;
        androidx.media3.exoplayer.drm.DrmSessionManager $r11;
        long $l0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r12;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest r15;
        androidx.media3.common.MediaItem r16, r19;
        android.net.Uri $r18;
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r20;
        java.util.List r21, r22;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r15 := @parameter0: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest;

        r16 := @parameter1: androidx.media3.common.MediaItem;

        $z1 = r15.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: boolean isLive>;

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        $r2 = r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r2 == null goto label3;

        $r14 = r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r17 = $r14.<androidx.media3.common.MediaItem$LocalConfiguration: java.util.List streamKeys>;

        goto label4;

     label3:
        $r17 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

     label4:
        r1 = $r17;

        r21 = (java.util.List) r1;

        $z2 = interfaceinvoke r21.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label5;

        r22 = (java.util.List) r1;

        r15 = virtualinvoke r15.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest: androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest copy(java.util.List)>(r22);

     label5:
        $r3 = r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        if $r3 == null goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        z0 = $z4;

        $r4 = virtualinvoke r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$Builder buildUpon()>();

        $r5 = virtualinvoke $r4.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setMimeType(java.lang.String)>("application/vnd.ms-sstr+xml");

        if z0 == 0 goto label8;

        $r13 = r16.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r18 = $r13.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        goto label9;

     label8:
        $r18 = <android.net.Uri: android.net.Uri EMPTY>;

     label9:
        $r6 = virtualinvoke $r5.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem$Builder setUri(android.net.Uri)>($r18);

        r19 = virtualinvoke $r6.<androidx.media3.common.MediaItem$Builder: androidx.media3.common.MediaItem build()>();

        r20 = new androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory>;

        $r10 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        $r11 = interfaceinvoke $r8.<androidx.media3.exoplayer.drm.DrmSessionManagerProvider: androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem)>(r19);

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l0 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs>;

        specialinvoke r20.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1)>(r19, r15, null, null, $r9, $r10, $r11, $r12, $l0, null);

        return r20;
    }

    public androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        java.util.List r2;
        androidx.media3.common.MediaItem$LocalConfiguration $r3, $r5;
        boolean $z0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider $r7;
        androidx.media3.datasource.DataSource$Factory $r8;
        androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory $r9;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r10;
        androidx.media3.exoplayer.drm.DrmSessionManager $r11;
        long $l0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r12;
        java.lang.Object r15;
        androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser r16;
        androidx.media3.exoplayer.offline.FilteringManifestParser r17;
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource r18;
        androidx.media3.exoplayer.upstream.ParsingLoadable$Parser r19, r20;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r3 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r15 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser>;

        if r15 != null goto label1;

        r16 = new androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser;

        specialinvoke r16.<androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser: void <init>()>();

        r15 = r16;

     label1:
        $r5 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        r2 = $r5.<androidx.media3.common.MediaItem$LocalConfiguration: java.util.List streamKeys>;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r17 = new androidx.media3.exoplayer.offline.FilteringManifestParser;

        r19 = (androidx.media3.exoplayer.upstream.ParsingLoadable$Parser) r15;

        specialinvoke r17.<androidx.media3.exoplayer.offline.FilteringManifestParser: void <init>(androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,java.util.List)>(r19, r2);

        r15 = r17;

     label2:
        r18 = new androidx.media3.exoplayer.smoothstreaming.SsMediaSource;

        $r8 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory>;

        $r9 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory>;

        $r10 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r7 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        $r11 = interfaceinvoke $r7.<androidx.media3.exoplayer.drm.DrmSessionManagerProvider: androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem)>(r1);

        $r12 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $l0 = r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs>;

        r20 = (androidx.media3.exoplayer.upstream.ParsingLoadable$Parser) r15;

        specialinvoke r18.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1)>(r1, null, $r8, r20, $r9, $r10, $r11, $r12, $l0, null);

        return r18;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        $r1 = newarray (int)[1];

        $r1[0] = 1;

        return $r1;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource $r2;
        androidx.media3.exoplayer.source.MediaSource r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.common.MediaItem)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory: androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

