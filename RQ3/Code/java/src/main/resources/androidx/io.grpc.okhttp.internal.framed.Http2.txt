io.grpc.okhttp.internal.framed.Http2
<io.grpc.okhttp.internal.framed.Http2: okio.ByteString CONNECTION_PREFACE>
<io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger logger>
    static volatile okio.ByteString '-$$Nest$sfgetCONNECTION_PREFACE'()
    {
        okio.ByteString r0;

        r0 = <io.grpc.okhttp.internal.framed.Http2: okio.ByteString CONNECTION_PREFACE>;

        return r0;
    }

    static volatile java.util.logging.Logger '-$$Nest$sfgetlogger'()
    {
        java.util.logging.Logger r0;

        r0 = <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger logger>;

        return r0;
    }

    static volatile java.lang.IllegalArgumentException '-$$Nest$smillegalArgument'(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])>($r2, $r0);

        return $r1;
    }

    static volatile java.io.IOException '-$$Nest$smioException'(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.io.IOException $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])>($r2, $r0);

        return $r1;
    }

    static volatile int '-$$Nest$smlengthWithoutPadding'(int, byte, short)
    {
        byte $b0;
        short $s1;
        int $i2;

        $i2 := @parameter0: int;

        $b0 := @parameter1: byte;

        $s1 := @parameter2: short;

        $i2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int lengthWithoutPadding(int,byte,short)>($i2, $b0, $s1);

        return $i2;
    }

    static volatile int '-$$Nest$smreadMedium'(okio.BufferedSource)
    {
        int $i0;
        okio.BufferedSource $r0;

        $r0 := @parameter0: okio.BufferedSource;

        $i0 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int readMedium(okio.BufferedSource)>($r0);

        return $i0;
    }

    static volatile void '-$$Nest$smwriteMedium'(okio.BufferedSink, int)
    {
        okio.BufferedSink $r0;
        int $i0;

        $r0 := @parameter0: okio.BufferedSink;

        $i0 := @parameter1: int;

        staticinvoke <io.grpc.okhttp.internal.framed.Http2: void writeMedium(okio.BufferedSink,int)>($r0, $i0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        okio.ByteString $r3;

        $r0 = class "Lio/grpc/okhttp/internal/framed/Http2$FrameLogger;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger logger> = $r2;

        $r3 = staticinvoke <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>("PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n");

        <io.grpc.okhttp.internal.framed.Http2: okio.ByteString CONNECTION_PREFACE> = $r3;

        return;
    }

    public void <init>()
    {
        io.grpc.okhttp.internal.framed.Http2 $r0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static transient java.lang.IllegalArgumentException illegalArgument(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.IllegalArgumentException $r1;
        java.util.Locale $r2;
        java.lang.String $r3;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, $r3, $r0);

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;
    }

    private static transient java.io.IOException ioException(java.lang.String, java.lang.Object[]) throws java.io.IOException
    {
        java.lang.Object[] $r0;
        java.util.Locale $r1;
        java.lang.String $r2;
        java.io.IOException r3;
        java.lang.Throwable r4;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.Object[];

        r3 = new java.io.IOException;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, $r2, $r0);

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>($r2);

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    private static int lengthWithoutPadding(int, byte, short) throws java.io.IOException
    {
        int $i0;
        byte $b1;
        short $s2;
        java.lang.Object[] $r0;
        java.lang.Short $r1;
        java.lang.Integer $r2;
        java.io.IOException $r3;
        java.lang.Throwable r4;

        $i0 := @parameter0: int;

        $b1 := @parameter1: byte;

        $s2 := @parameter2: short;

        $b1 = $b1 & 8;

        if $b1 == 0 goto label1;

        $i0 = $i0 + -1;

     label1:
        if $s2 > $i0 goto label2;

        $i0 = $i0 - $s2;

        $s2 = (short) $i0;

        return $s2;

     label2:
        $r0 = newarray (java.lang.Object)[2];

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r2;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR padding %s > remaining length %s", $r0);

        r4 = (java.lang.Throwable) $r3;

        throw r4;
    }

    private static int readMedium(okio.BufferedSource) throws java.io.IOException
    {
        okio.BufferedSource $r0;
        byte $b0;
        short $s1;
        int $i2, $i3;

        $r0 := @parameter0: okio.BufferedSource;

        $b0 = interfaceinvoke $r0.<okio.BufferedSource: byte readByte()>();

        $s1 = $b0 & 255;

        $i2 = $s1 << 16;

        $b0 = interfaceinvoke $r0.<okio.BufferedSource: byte readByte()>();

        $s1 = $b0 & 255;

        $i3 = $s1 << 8;

        $i2 = $i2 | $i3;

        $b0 = interfaceinvoke $r0.<okio.BufferedSource: byte readByte()>();

        $s1 = $b0 & 255;

        $i2 = $s1 | $i2;

        return $i2;
    }

    private static void writeMedium(okio.BufferedSink, int) throws java.io.IOException
    {
        okio.BufferedSink $r0;
        int $i0, $i1;

        $r0 := @parameter0: okio.BufferedSink;

        $i0 := @parameter1: int;

        $i1 = $i0 >>> 16;

        $i1 = $i1 & 255;

        interfaceinvoke $r0.<okio.BufferedSink: okio.BufferedSink writeByte(int)>($i1);

        $i1 = $i0 >>> 8;

        $i1 = $i1 & 255;

        interfaceinvoke $r0.<okio.BufferedSink: okio.BufferedSink writeByte(int)>($i1);

        $i0 = $i0 & 255;

        interfaceinvoke $r0.<okio.BufferedSink: okio.BufferedSink writeByte(int)>($i0);

        return;
    }

    public io.grpc.okhttp.internal.framed.FrameReader newReader(okio.BufferedSource, boolean)
    {
        io.grpc.okhttp.internal.framed.Http2 $r0;
        okio.BufferedSource $r1;
        boolean $z0;
        io.grpc.okhttp.internal.framed.Http2$Reader $r2;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2;

        $r1 := @parameter0: okio.BufferedSource;

        $z0 := @parameter1: boolean;

        $r2 = new io.grpc.okhttp.internal.framed.Http2$Reader;

        specialinvoke $r2.<io.grpc.okhttp.internal.framed.Http2$Reader: void <init>(okio.BufferedSource,int,boolean)>($r1, 4096, $z0);

        return $r2;
    }

    public io.grpc.okhttp.internal.framed.FrameWriter newWriter(okio.BufferedSink, boolean)
    {
        io.grpc.okhttp.internal.framed.Http2 $r0;
        okio.BufferedSink $r1;
        boolean $z0;
        io.grpc.okhttp.internal.framed.Http2$Writer $r2;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2;

        $r1 := @parameter0: okio.BufferedSink;

        $z0 := @parameter1: boolean;

        $r2 = new io.grpc.okhttp.internal.framed.Http2$Writer;

        specialinvoke $r2.<io.grpc.okhttp.internal.framed.Http2$Writer: void <init>(okio.BufferedSink,boolean)>($r1, $z0);

        return $r2;
    }

io.grpc.okhttp.internal.framed.Http2$ContinuationSource
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags>
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left>
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int length>
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: short padding>
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>
<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId>
    public void <init>(okio.BufferedSource)
    {
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r0;
        okio.BufferedSource $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$ContinuationSource;

        $r1 := @parameter0: okio.BufferedSource;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source> = $r1;

        return;
    }

    private void readContinuationHeader() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r0;
        int $i0, $i1, $i5;
        okio.BufferedSource $r1;
        byte $b2, $b4;
        short $s3;
        java.util.logging.Logger $r2;
        java.util.logging.Level $r3;
        boolean $z0;
        java.lang.String $r4;
        java.lang.Object[] $r5;
        java.io.IOException $r6;
        java.lang.Byte $r7;
        java.lang.Throwable r8;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$ContinuationSource;

        $i0 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId>;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $i1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int '-$$Nest$smreadMedium'(okio.BufferedSource)>($r1);

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left> = $i1;

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int length> = $i1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $b2 = interfaceinvoke $r1.<okio.BufferedSource: byte readByte()>();

        $s3 = $b2 & 255;

        $b2 = (byte) $s3;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $b4 = interfaceinvoke $r1.<okio.BufferedSource: byte readByte()>();

        $s3 = $b4 & 255;

        $b4 = (byte) $s3;

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags> = $b4;

        $r2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r3);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r3 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $i1 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId>;

        $i5 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int length>;

        $b4 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags>;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatHeader(boolean,int,int,byte,byte)>(1, $i1, $i5, $b2, $b4);

        virtualinvoke $r2.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r3, "io.grpc.okhttp.internal.framed.Http2$ContinuationSource", "readContinuationHeader", $r4);

     label1:
        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $i1 = interfaceinvoke $r1.<okio.BufferedSource: int readInt()>();

        $i1 = $i1 & 2147483647;

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId> = $i1;

        if $b2 != 9 goto label3;

        if $i1 != $i0 goto label2;

        return;

     label2:
        $r5 = newarray (java.lang.Object)[0];

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_CONTINUATION streamId changed", $r5);

        r8 = (java.lang.Throwable) $r6;

        throw r8;

     label3:
        $r5 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5[0] = $r7;

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("%s != TYPE_CONTINUATION", $r5);

        r8 = (java.lang.Throwable) $r6;

        throw r8;
    }

    public void close() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$ContinuationSource;

        return;
    }

    public long read(okio.Buffer, long) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r0;
        long $l0, $l1;
        okio.Buffer $r1;
        int $i2, $i5;
        okio.BufferedSource $r2;
        short $s3;
        byte $b4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$ContinuationSource;

        $r1 := @parameter0: okio.Buffer;

        $l1 := @parameter1: long;

     label1:
        $i2 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left>;

        if $i2 != 0 goto label3;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $s3 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: short padding>;

        $l0 = (long) $s3;

        interfaceinvoke $r2.<okio.BufferedSource: void skip(long)>($l0);

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: short padding> = 0;

        $b4 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags>;

        $b4 = $b4 & 4;

        if $b4 == 0 goto label2;

        return -1L;

     label2:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: void readContinuationHeader()>();

        goto label1;

     label3:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: okio.BufferedSource source>;

        $l0 = (long) $i2;

        $l1 = staticinvoke <java.lang.Math: long min(long,long)>($l1, $l0);

        $l1 = interfaceinvoke $r2.<okio.BufferedSource: long read(okio.Buffer,long)>($r1, $l1);

        $b4 = $l1 cmp -1L;

        if $b4 != 0 goto label4;

        return -1L;

     label4:
        $i2 = $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left>;

        $i5 = (int) $l1;

        $i2 = $i2 - $i5;

        $r0.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left> = $i2;

        return $l1;
    }

io.grpc.okhttp.internal.framed.Http2$FrameLogger
<io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>
<io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>
<io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] TYPES>
    static void <clinit>()
    {
        java.lang.String[] $r0, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r6;
        int[] $r3, $r5;
        java.lang.StringBuilder $r4;

        $r0 = newarray (java.lang.String)[10];

        $i0 = 0;

        $r0[0] = "DATA";

        $r0[1] = "HEADERS";

        $r0[2] = "PRIORITY";

        $r0[3] = "RST_STREAM";

        $r0[4] = "SETTINGS";

        $r0[5] = "PUSH_PROMISE";

        $r0[6] = "PING";

        $r0[7] = "GOAWAY";

        $r0[8] = "WINDOW_UPDATE";

        $r0[9] = "CONTINUATION";

        <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] TYPES> = $r0;

        $r0 = newarray (java.lang.String)[64];

        <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS> = $r0;

        $r0 = newarray (java.lang.String)[256];

        <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY> = $r0;

        $i1 = 0;

     label01:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>;

        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label02;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>($i1);

        $r1[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%8s", $r1);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(32, 48);

        $r0[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label01;

     label02:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $r0[0] = "";

        $r0[1] = "END_STREAM";

        $r3 = newarray (int)[1];

        $r3[0] = 1;

        $r0[8] = "PADDED";

        $i1 = 0;

     label03:
        if $i1 > 0 goto label04;

        $i2 = $r3[$i1];

        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $r2 = $r0[$i2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i2 = $i2 | 8;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|PADDED");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[$i2] = $r2;

        $i1 = $i1 + 1;

        goto label03;

     label04:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $r0[4] = "END_HEADERS";

        $r0[32] = "PRIORITY";

        $r0[36] = "END_HEADERS|PRIORITY";

        $r5 = newarray (int)[3];

        $r5[0] = 4;

        $r5[1] = 32;

        $r5[2] = 36;

        $i1 = 0;

     label05:
        if $i1 >= 3 goto label08;

        $i2 = $r5[$i1];

        $i3 = 0;

     label06:
        if $i3 > 0 goto label07;

        $i4 = $r3[$i3];

        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $r2 = $r0[$i4];

        $r6 = $r0[$i2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i5 = $i4 | $i2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[$i5] = $r2;

        $r2 = $r0[$i4];

        $r6 = $r0[$i2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i4 = $i5 | 8;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|PADDED");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[$i4] = $r2;

        $i3 = $i3 + 1;

        goto label06;

     label07:
        $i1 = $i1 + 1;

        goto label05;

     label08:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label10;

        $r2 = $r0[$i0];

        if $r2 != null goto label09;

        $r7 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>;

        $r2 = $r7[$i0];

        $r0[$i0] = $r2;

     label09:
        $i0 = $i0 + 1;

        goto label08;

     label10:
        return;
    }

    void <init>()
    {
        io.grpc.okhttp.internal.framed.Http2$FrameLogger $r0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$FrameLogger;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String formatFlags(byte, byte)
    {
        byte $b0, $b1, $b3;
        java.lang.String[] $r0;
        int $i2;
        java.lang.String $r1;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        if $b1 != 0 goto label1;

        return "";

     label1:
        lookupswitch($b0)
        {
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label5;
            case 8: goto label5;
            default: goto label2;
        };

     label2:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] FLAGS>;

        $i2 = lengthof $r0;

        if $b1 >= $i2 goto label6;

        $r1 = $r0[$b1];

        goto label7;

     label3:
        if $b1 != 1 goto label4;

        return "ACK";

     label4:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>;

        $r1 = $r0[$b1];

        return $r1;

     label5:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>;

        $r1 = $r0[$b1];

        return $r1;

     label6:
        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] BINARY>;

        $r1 = $r0[$b1];

     label7:
        if $b0 != 5 goto label8;

        $b3 = $b1 & 4;

        if $b3 == 0 goto label8;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("HEADERS", "PUSH_PROMISE");

        return $r1;

     label8:
        if $b0 != 0 goto label9;

        $b0 = $b1 & 32;

        if $b0 == 0 goto label9;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("PRIORITY", "COMPRESSED");

     label9:
        return $r1;
    }

    static java.lang.String formatHeader(boolean, int, int, byte, byte)
    {
        int $i0, $i1, $i4;
        boolean $z0;
        byte $b2, $b3;
        java.lang.String[] $r0;
        java.lang.String $r1, $r4, $r6;
        java.lang.Object[] $r2;
        java.lang.Byte $r3;
        java.util.Locale $r5;
        java.lang.Integer $r7;

        $z0 := @parameter0: boolean;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $b2 := @parameter3: byte;

        $b3 := @parameter4: byte;

        $r0 = <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String[] TYPES>;

        $i4 = lengthof $r0;

        if $b2 >= $i4 goto label1;

        $r1 = $r0[$b2];

        goto label2;

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r2[0] = $r3;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%02x", $r2);

     label2:
        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatFlags(byte,byte)>($b2, $b3);

        $r5 = <java.util.Locale: java.util.Locale US>;

        $r2 = newarray (java.lang.Object)[5];

        if $z0 == 0 goto label3;

        $r6 = "<<";

        goto label4;

     label3:
        $r6 = ">>";

     label4:
        $r2[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[1] = $r7;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[2] = $r7;

        $r2[3] = $r1;

        $r2[4] = $r4;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r5, "%s 0x%08x %5d %-13s %s", $r2);

        return $r1;
    }

io.grpc.okhttp.internal.framed.Http2$Reader
<io.grpc.okhttp.internal.framed.Http2$Reader: boolean client>
<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation>
<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader>
<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>
    void <init>(okio.BufferedSource, int, boolean)
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        int $i0;
        okio.BufferedSource $r1;
        boolean $z0;
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r2;
        io.grpc.okhttp.internal.framed.Hpack$Reader $r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: okio.BufferedSource;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source> = $r1;

        $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: boolean client> = $z0;

        $r2 = new io.grpc.okhttp.internal.framed.Http2$ContinuationSource;

        specialinvoke $r2.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: void <init>(okio.BufferedSource)>($r1);

        $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation> = $r2;

        $r3 = new io.grpc.okhttp.internal.framed.Hpack$Reader;

        specialinvoke $r3.<io.grpc.okhttp.internal.framed.Hpack$Reader: void <init>(int,okio.Source)>($i0, $r2);

        $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader> = $r3;

        return;
    }

    private void readData(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        int $i0, $i2;
        byte $b1, $b3;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        short $s4, $s5;
        boolean $z0, $z1;
        okio.BufferedSource $r2;
        long $l6;
        java.lang.Object[] $r3;
        java.io.IOException $r4;
        java.lang.Throwable r5;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i2 := @parameter1: int;

        $b3 := @parameter2: byte;

        $i0 := @parameter3: int;

        $b1 = $b3 & 1;

        $s4 = 0;

        $z0 = 1;

        if $b1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b1 = $b3 & 32;

        if $b1 == 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 != 0 goto label6;

        $b1 = $b3 & 8;

        if $b1 == 0 goto label5;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b1 = interfaceinvoke $r2.<okio.BufferedSource: byte readByte()>();

        $s4 = $b1 & 255;

        goto label5;

     label5:
        $s5 = $s4;

        $i2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int '-$$Nest$smlengthWithoutPadding'(int,byte,short)>($i2, $b3, $s5);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void data(boolean,int,okio.BufferedSource,int)>($z1, $i0, $r2, $i2);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $l6 = (long) $s4;

        interfaceinvoke $r2.<okio.BufferedSource: void skip(long)>($l6);

        return;

     label6:
        $r3 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA", $r3);

        r5 = (java.lang.Throwable) $r4;

        throw r5;
    }

    private void readGoAway(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        int $i0, $i2, $i3;
        byte $b1;
        okio.BufferedSource $r2;
        io.grpc.okhttp.internal.framed.ErrorCode $r3;
        okio.ByteString $r4;
        long $l4;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.io.IOException $r7;
        java.lang.Throwable r8;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i0 := @parameter1: int;

        $b1 := @parameter2: byte;

        $i2 := @parameter3: int;

        if $i0 < 8 goto label4;

        if $i2 != 0 goto label3;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i2 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i3 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $i0 = $i0 + -8;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode fromHttp2(int)>($i3);

        if $r3 == null goto label2;

        $r4 = <okio.ByteString: okio.ByteString EMPTY>;

        if $i0 <= 0 goto label1;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $l4 = (long) $i0;

        $r4 = interfaceinvoke $r2.<okio.BufferedSource: okio.ByteString readByteString(long)>($l4);

        goto label1;

     label1:
        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void goAway(int,io.grpc.okhttp.internal.framed.ErrorCode,okio.ByteString)>($i2, $r3, $r4);

        return;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[0] = $r6;

        $r7 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_GOAWAY unexpected error code: %d", $r5);

        r8 = (java.lang.Throwable) $r7;

        throw r8;

     label3:
        $r5 = newarray (java.lang.Object)[0];

        $r7 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_GOAWAY streamId != 0", $r5);

        r8 = (java.lang.Throwable) $r7;

        throw r8;

     label4:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_GOAWAY length < 8: %s", $r5);

        r8 = (java.lang.Throwable) $r7;

        throw r8;
    }

    private java.util.List readHeaderBlock(int, short, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        short $s0;
        byte $b1;
        int $i2, $i3;
        io.grpc.okhttp.internal.framed.Http2$ContinuationSource $r1;
        java.util.List $r2;
        io.grpc.okhttp.internal.framed.Hpack$Reader $r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $i3 := @parameter0: int;

        $s0 := @parameter1: short;

        $b1 := @parameter2: byte;

        $i2 := @parameter3: int;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation>;

        $r1.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int left> = $i3;

        $r1.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int length> = $i3;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation>;

        $r1.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: short padding> = $s0;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation>;

        $r1.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: byte flags> = $b1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Http2$ContinuationSource continuation>;

        $r1.<io.grpc.okhttp.internal.framed.Http2$ContinuationSource: int streamId> = $i2;

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader>;

        virtualinvoke $r3.<io.grpc.okhttp.internal.framed.Hpack$Reader: void readHeaders()>();

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader>;

        $r2 = virtualinvoke $r3.<io.grpc.okhttp.internal.framed.Hpack$Reader: java.util.List getAndResetHeaderList()>();

        return $r2;
    }

    private void readHeaders(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        byte $b0, $b4;
        int $i1, $i2;
        io.grpc.okhttp.internal.framed.HeadersMode $r1;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r2;
        short $s3;
        boolean $z0;
        okio.BufferedSource $r3;
        java.util.List $r4;
        java.lang.Object[] $r5;
        java.io.IOException $r6;
        java.lang.Throwable r7;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r2 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i2 := @parameter1: int;

        $b0 := @parameter2: byte;

        $i1 := @parameter3: int;

        $s3 = 0;

        if $i1 == 0 goto label5;

        $b4 = $b0 & 1;

        if $b4 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $b4 = $b0 & 8;

        if $b4 == 0 goto label3;

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b4 = interfaceinvoke $r3.<okio.BufferedSource: byte readByte()>();

        $s3 = $b4 & 255;

        goto label3;

     label3:
        $b4 = $b0 & 32;

        if $b4 == 0 goto label4;

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler,int)>($r2, $i1);

        $i2 = $i2 + -5;

     label4:
        $i2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int '-$$Nest$smlengthWithoutPadding'(int,byte,short)>($i2, $b0, $s3);

        $r4 = specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: java.util.List readHeaderBlock(int,short,byte,int)>($i2, $s3, $b0, $i1);

        $r1 = <io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode HTTP_20_HEADERS>;

        interfaceinvoke $r2.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void headers(boolean,boolean,int,int,java.util.List,io.grpc.okhttp.internal.framed.HeadersMode)>(0, $z0, $i1, -1, $r4, $r1);

        return;

     label5:
        $r5 = newarray (java.lang.Object)[0];

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR: TYPE_HEADERS streamId == 0", $r5);

        r7 = (java.lang.Throwable) $r6;

        throw r7;
    }

    private void readPing(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        int $i0, $i2;
        byte $b1;
        boolean $z0;
        okio.BufferedSource $r2;
        java.lang.Object[] $r3;
        java.io.IOException $r4;
        java.lang.Integer $r5;
        java.lang.Throwable r6;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i0 := @parameter1: int;

        $b1 := @parameter2: byte;

        $i2 := @parameter3: int;

        $z0 = 0;

        if $i0 != 8 goto label3;

        if $i2 != 0 goto label2;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i0 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i2 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $b1 = $b1 & 1;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label1;

     label1:
        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void ping(boolean,int,int)>($z0, $i0, $i2);

        return;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_PING streamId != 0", $r3);

        r6 = (java.lang.Throwable) $r4;

        throw r6;

     label3:
        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[0] = $r5;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_PING length != 8: %s", $r3);

        r6 = (java.lang.Throwable) $r4;

        throw r6;
    }

    private void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        int $i0, $i1, $i2;
        okio.BufferedSource $r2;
        boolean $z0;
        byte $b3;
        short $s4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i0 := @parameter1: int;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i1 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $i2 = -2147483648 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = $i1 & 2147483647;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b3 = interfaceinvoke $r2.<okio.BufferedSource: byte readByte()>();

        $s4 = $b3 & 255;

        $i2 = $s4 + 1;

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void priority(int,int,int,boolean)>($i0, $i1, $i2, $z0);

        return;
    }

    private void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        int $i0, $i1;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        byte $b2;
        java.lang.Object[] $r2;
        java.io.IOException $r3;
        java.lang.Integer $r4;
        java.lang.Throwable r5;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i1 := @parameter1: int;

        $b2 := @parameter2: byte;

        $i0 := @parameter3: int;

        if $i1 != 5 goto label2;

        if $i0 == 0 goto label1;

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler,int)>($r1, $i0);

        return;

     label1:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_PRIORITY streamId == 0", $r2);

        r5 = (java.lang.Throwable) $r3;

        throw r5;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2[0] = $r4;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_PRIORITY length: %d != 5", $r2);

        r5 = (java.lang.Throwable) $r3;

        throw r5;
    }

    private void readPushPromise(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        byte $b0, $b4;
        int $i1, $i2, $i5;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        short $s3;
        okio.BufferedSource $r2;
        java.util.List $r3;
        java.lang.Object[] $r4;
        java.io.IOException $r5;
        java.lang.Throwable r6;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i2 := @parameter1: int;

        $b0 := @parameter2: byte;

        $i1 := @parameter3: int;

        $s3 = 0;

        if $i1 == 0 goto label2;

        $b4 = $b0 & 8;

        if $b4 == 0 goto label1;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b4 = interfaceinvoke $r2.<okio.BufferedSource: byte readByte()>();

        $s3 = $b4 & 255;

        goto label1;

     label1:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i5 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $i5 = $i5 & 2147483647;

        $i2 = $i2 + -4;

        $i2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int '-$$Nest$smlengthWithoutPadding'(int,byte,short)>($i2, $b0, $s3);

        $r3 = specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: java.util.List readHeaderBlock(int,short,byte,int)>($i2, $s3, $b0, $i1);

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void pushPromise(int,int,java.util.List)>($i1, $i5, $r3);

        return;

     label2:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0", $r4);

        r6 = (java.lang.Throwable) $r5;

        throw r6;
    }

    private void readRstStream(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        int $i0, $i1;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        byte $b2;
        okio.BufferedSource $r2;
        io.grpc.okhttp.internal.framed.ErrorCode $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.io.IOException $r6;
        java.lang.Throwable r7;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i1 := @parameter1: int;

        $b2 := @parameter2: byte;

        $i0 := @parameter3: int;

        if $i1 != 4 goto label3;

        if $i0 == 0 goto label2;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i1 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode fromHttp2(int)>($i1);

        if $r3 == null goto label1;

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void rstStream(int,io.grpc.okhttp.internal.framed.ErrorCode)>($i0, $r3);

        return;

     label1:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_RST_STREAM unexpected error code: %d", $r4);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

     label2:
        $r4 = newarray (java.lang.Object)[0];

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_RST_STREAM streamId == 0", $r4);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

     label3:
        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $r6 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_RST_STREAM length: %d != 4", $r4);

        r7 = (java.lang.Throwable) $r6;

        throw r7;
    }

    private void readSettings(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        int $i0, $i2, $i5;
        byte $b1;
        java.lang.Object[] $r2;
        java.io.IOException $r3;
        io.grpc.okhttp.internal.framed.Settings $r4, r8;
        okio.BufferedSource $r5;
        short $s3, $s4;
        java.lang.Integer $r6;
        io.grpc.okhttp.internal.framed.Hpack$Reader $r7;
        java.lang.Throwable r9;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i0 := @parameter1: int;

        $b1 := @parameter2: byte;

        $i2 := @parameter3: int;

        if $i2 != 0 goto label16;

        $b1 = $b1 & 1;

        if $b1 == 0 goto label02;

        if $i0 != 0 goto label01;

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void ackSettings()>();

        return;

     label01:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("FRAME_SIZE_ERROR ack frame should be empty!", $r2);

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label02:
        $i2 = $i0 % 6;

        if $i2 != 0 goto label15;

        r8 = new io.grpc.okhttp.internal.framed.Settings;

        $r4 = r8;

        specialinvoke r8.<io.grpc.okhttp.internal.framed.Settings: void <init>()>();

        $i2 = 0;

     label03:
        if $i2 >= $i0 goto label14;

        $r5 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $s3 = interfaceinvoke $r5.<okio.BufferedSource: short readShort()>();

        $s4 = $s3;

        $r5 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i5 = interfaceinvoke $r5.<okio.BufferedSource: int readInt()>();

        lookupswitch($s3)
        {
            case 1: goto label12;
            case 2: goto label10;
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label05;
            case 6: goto label12;
            default: goto label04;
        };

     label04:
        goto label13;

     label05:
        if $i5 < 16384 goto label06;

        if $i5 > 16777215 goto label06;

        goto label12;

     label06:
        $r2 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r2[0] = $r6;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", $r2);

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label07:
        if $i5 < 0 goto label08;

        $s4 = 7;

        goto label12;

     label08:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", $r2);

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label09:
        $s4 = 4;

        goto label12;

     label10:
        if $i5 == 0 goto label12;

        if $i5 != 1 goto label11;

        goto label12;

     label11:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", $r2);

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label12:
        virtualinvoke $r4.<io.grpc.okhttp.internal.framed.Settings: io.grpc.okhttp.internal.framed.Settings set(int,int,int)>($s4, 0, $i5);

     label13:
        $i2 = $i2 + 6;

        goto label03;

     label14:
        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void settings(boolean,io.grpc.okhttp.internal.framed.Settings)>(0, $r4);

        $i0 = virtualinvoke $r4.<io.grpc.okhttp.internal.framed.Settings: int getHeaderTableSize()>();

        if $i0 < 0 goto label18;

        $r7 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: io.grpc.okhttp.internal.framed.Hpack$Reader hpackReader>;

        $i0 = virtualinvoke $r4.<io.grpc.okhttp.internal.framed.Settings: int getHeaderTableSize()>();

        virtualinvoke $r7.<io.grpc.okhttp.internal.framed.Hpack$Reader: void headerTableSizeSetting(int)>($i0);

        return;

     label15:
        $r2 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[0] = $r6;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_SETTINGS length %% 6 != 0: %s", $r2);

        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label16:
        $r2 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_SETTINGS streamId != 0", $r2);

        goto label17;

     label17:
        r9 = (java.lang.Throwable) $r3;

        throw r9;

     label18:
        return;
    }

    private void readWindowUpdate(io.grpc.okhttp.internal.framed.FrameReader$Handler, int, byte, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        int $i0, $i2;
        byte $b1;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        okio.BufferedSource $r2;
        long $l3;
        java.lang.Object[] $r3;
        java.io.IOException $r4;
        java.lang.Integer $r5;
        java.lang.Throwable r6;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $i2 := @parameter1: int;

        $b1 := @parameter2: byte;

        $i0 := @parameter3: int;

        if $i2 != 4 goto label2;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i2 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $l3 = (long) $i2;

        $l3 = $l3 & 2147483647L;

        $b1 = $l3 cmp 0L;

        if $b1 == 0 goto label1;

        interfaceinvoke $r1.<io.grpc.okhttp.internal.framed.FrameReader$Handler: void windowUpdate(int,long)>($i0, $l3);

        return;

     label1:
        $r3 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("windowSizeIncrement was 0", $r3);

        r6 = (java.lang.Throwable) $r4;

        throw r6;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3[0] = $r5;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("TYPE_WINDOW_UPDATE length !=4: %s", $r3);

        r6 = (java.lang.Throwable) $r4;

        throw r6;
    }

    public void close() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        okio.BufferedSource $r1;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        interfaceinvoke $r1.<okio.BufferedSource: void close()>();

        return;
    }

    public boolean nextFrame(io.grpc.okhttp.internal.framed.FrameReader$Handler) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Reader $r0;
        io.grpc.okhttp.internal.framed.FrameReader$Handler $r1;
        okio.BufferedSource $r2;
        int $i0, $i4;
        byte $b1, $b3;
        short $s2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        boolean $z0;
        java.lang.String $r5;
        long $l5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        java.io.IOException $r8;
        java.lang.Throwable $r9;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Reader;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.FrameReader$Handler;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

     label01:
        interfaceinvoke $r2.<okio.BufferedSource: void require(long)>(9L);

     label02:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i0 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: int '-$$Nest$smreadMedium'(okio.BufferedSource)>($r2);

        if $i0 < 0 goto label14;

        if $i0 > 16384 goto label14;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b1 = interfaceinvoke $r2.<okio.BufferedSource: byte readByte()>();

        $s2 = $b1 & 255;

        $b1 = (byte) $s2;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $b3 = interfaceinvoke $r2.<okio.BufferedSource: byte readByte()>();

        $s2 = $b3 & 255;

        $b3 = (byte) $s2;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $i4 = interfaceinvoke $r2.<okio.BufferedSource: int readInt()>();

        $i4 = $i4 & 2147483647;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r4);

        if $z0 == 0 goto label03;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r5 = staticinvoke <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatHeader(boolean,int,int,byte,byte)>(1, $i4, $i0, $b1, $b3);

        virtualinvoke $r3.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r4, "io.grpc.okhttp.internal.framed.Http2$Reader", "nextFrame", $r5);

     label03:
        lookupswitch($b1)
        {
            case 0: goto label13;
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label07;
            case 7: goto label06;
            case 8: goto label05;
            default: goto label04;
        };

     label04:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: okio.BufferedSource source>;

        $l5 = (long) $i0;

        interfaceinvoke $r2.<okio.BufferedSource: void skip(long)>($l5);

        return 1;

     label05:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readWindowUpdate(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label06:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readGoAway(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label07:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readPing(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label08:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readPushPromise(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label09:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readSettings(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label10:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readRstStream(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label11:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readPriority(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label12:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readHeaders(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label13:
        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Reader: void readData(io.grpc.okhttp.internal.framed.FrameReader$Handler,int,byte,int)>($r1, $i0, $b3, $i4);

        return 1;

     label14:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.io.IOException '-$$Nest$smioException'(java.lang.String,java.lang.Object[])>("FRAME_SIZE_ERROR: %s", $r6);

        $r9 = (java.lang.Throwable) $r8;

        throw $r9;

     label15:
        $r9 := @caughtexception;

        return 0;

        catch java.io.IOException from label01 to label02 with label15;
    }

io.grpc.okhttp.internal.framed.Http2$Writer
<io.grpc.okhttp.internal.framed.Http2$Writer: boolean client>
<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>
<io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer>
<io.grpc.okhttp.internal.framed.Http2$Writer: io.grpc.okhttp.internal.framed.Hpack$Writer hpackWriter>
<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>
<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>
    void <init>(okio.BufferedSink, boolean)
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        okio.BufferedSink $r1;
        boolean $z0;
        okio.Buffer $r2;
        io.grpc.okhttp.internal.framed.Hpack$Writer $r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $r1 := @parameter0: okio.BufferedSink;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink> = $r1;

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean client> = $z0;

        $r2 = new okio.Buffer;

        specialinvoke $r2.<okio.Buffer: void <init>()>();

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer> = $r2;

        $r3 = new io.grpc.okhttp.internal.framed.Hpack$Writer;

        specialinvoke $r3.<io.grpc.okhttp.internal.framed.Hpack$Writer: void <init>(okio.Buffer)>($r2);

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: io.grpc.okhttp.internal.framed.Hpack$Writer hpackWriter> = $r3;

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize> = 16384;

        return;
    }

    private void writeContinuationFrames(int, long) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0, $i1;
        long $l2, $l3;
        byte $b4;
        okio.BufferedSink $r1;
        okio.Buffer $r2;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i0 := @parameter0: int;

        $l3 := @parameter1: long;

     label1:
        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label4;

        $i1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>;

        $l2 = (long) $i1;

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>($l2, $l3);

        $i1 = (int) $l2;

        $l2 = (long) $i1;

        $l3 = $l3 - $l2;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $b4 = 4;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>($i0, $i1, 9, $b4);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer>;

        interfaceinvoke $r1.<okio.BufferedSink: void write(okio.Buffer,long)>($r2, $l2);

        goto label1;

     label4:
        return;
    }

    public void ackSettings(io.grpc.okhttp.internal.framed.Settings) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0;
        io.grpc.okhttp.internal.framed.Settings $r1;
        boolean $z0;
        okio.BufferedSink $r2;
        java.lang.Throwable $r3;
        java.io.IOException r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.Settings;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label3;

        $i0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>;

        $i0 = virtualinvoke $r1.<io.grpc.okhttp.internal.framed.Settings: int getMaxFrameSize(int)>($i0);

        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize> = $i0;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>(0, 0, 4, 1);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r2.<okio.BufferedSink: void flush()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        r4 = new java.io.IOException;

        specialinvoke r4.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r3 = (java.lang.Throwable) r4;

        throw $r3;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    public void close() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        okio.BufferedSink $r1;
        java.lang.Throwable $r2;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        entermonitor $r0;

     label1:
        $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed> = 1;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: void close()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void connectionPreface() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        boolean $z0;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        java.lang.Object[] $r3;
        okio.ByteString $r4;
        java.lang.String $r5;
        okio.BufferedSink $r6;
        byte[] $r7;
        java.lang.Throwable $r8;
        java.io.IOException r9;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label6;

        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean client>;

     label2:
        if $z0 != 0 goto label3;

        exitmonitor $r0;

        return;

     label3:
        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label4;

        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: okio.ByteString '-$$Nest$sfgetCONNECTION_PREFACE'()>();

        $r5 = virtualinvoke $r4.<okio.ByteString: java.lang.String hex()>();

        $r3[0] = $r5;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(">> CONNECTION %s", $r3);

        virtualinvoke $r1.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r2, "io.grpc.okhttp.internal.framed.Http2$Writer", "connectionPreface", $r5);

     label4:
        $r6 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: okio.ByteString '-$$Nest$sfgetCONNECTION_PREFACE'()>();

        $r7 = virtualinvoke $r4.<okio.ByteString: byte[] toByteArray()>();

        interfaceinvoke $r6.<okio.BufferedSink: okio.BufferedSink write(byte[])>($r7);

        $r6 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r6.<okio.BufferedSink: void flush()>();

     label5:
        exitmonitor $r0;

        return;

     label6:
        r9 = new java.io.IOException;

        specialinvoke r9.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r8 = (java.lang.Throwable) r9;

        throw $r8;

     label7:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
    }

    public void data(boolean, int, okio.Buffer, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        okio.Buffer $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        byte $b2;
        java.lang.Throwable $r2;
        java.io.IOException r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $z1 := @parameter0: boolean;

        $i1 := @parameter1: int;

        $r1 := @parameter2: okio.Buffer;

        $i0 := @parameter3: int;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label5;

        if $z1 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void dataFrame(int,byte,okio.Buffer,int)>($i1, $b2, $r1, $i0);

     label4:
        exitmonitor $r0;

        return;

     label5:
        r3 = new java.io.IOException;

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r2 = (java.lang.Throwable) r3;

        throw $r2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    void dataFrame(int, byte, okio.Buffer, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        byte $b0;
        okio.Buffer $r1;
        int $i1, $i2;
        okio.BufferedSink $r2;
        long $l3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i2 := @parameter0: int;

        $b0 := @parameter1: byte;

        $r1 := @parameter2: okio.Buffer;

        $i1 := @parameter3: int;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>($i2, $i1, 0, $b0);

        if $i1 <= 0 goto label1;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $l3 = (long) $i1;

        interfaceinvoke $r2.<okio.BufferedSink: void write(okio.Buffer,long)>($r1, $l3);

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        boolean $z0;
        okio.BufferedSink $r1;
        java.lang.Throwable $r2;
        java.io.IOException r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label3;

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: void flush()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        r3 = new java.io.IOException;

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r2 = (java.lang.Throwable) r3;

        throw $r2;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
    }

    void frameHeader(int, int, byte, byte) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        byte $b0, $b3;
        int $i1, $i2, $i4;
        java.util.logging.Logger $r1;
        java.util.logging.Level $r2;
        boolean $z0;
        java.lang.String $r3;
        okio.BufferedSink $r4;
        short $s5;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        java.lang.IllegalArgumentException $r7;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $b3 := @parameter2: byte;

        $b0 := @parameter3: byte;

        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.util.logging.Logger '-$$Nest$sfgetlogger'()>();

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r3 = staticinvoke <io.grpc.okhttp.internal.framed.Http2$FrameLogger: java.lang.String formatHeader(boolean,int,int,byte,byte)>(0, $i1, $i2, $b3, $b0);

        virtualinvoke $r1.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>($r2, "io.grpc.okhttp.internal.framed.Http2$Writer", "frameHeader", $r3);

     label1:
        $i4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>;

        if $i2 > $i4 goto label3;

        $i4 = -2147483648 & $i1;

        if $i4 != 0 goto label2;

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        staticinvoke <io.grpc.okhttp.internal.framed.Http2: void '-$$Nest$smwriteMedium'(okio.BufferedSink,int)>($r4, $i2);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $s5 = $b3 & 255;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>($s5);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $s5 = $b0 & 255;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeByte(int)>($s5);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $i1 = $i1 & 2147483647;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i1);

        return;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $r7 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException '-$$Nest$smillegalArgument'(java.lang.String,java.lang.Object[])>("reserved bit set: %s", $r5);

        throw $r7;

     label3:
        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[1] = $r6;

        $r7 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException '-$$Nest$smillegalArgument'(java.lang.String,java.lang.Object[])>("FRAME_SIZE_ERROR length > %d: %d", $r5);

        throw $r7;
    }

    public void goAway(int, io.grpc.okhttp.internal.framed.ErrorCode, byte[]) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1;
        io.grpc.okhttp.internal.framed.ErrorCode $r3;
        boolean $z0;
        okio.BufferedSink $r4;
        java.lang.Object[] $r5;
        java.lang.Throwable $r6;
        java.io.IOException r7;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i0 := @parameter0: int;

        $r3 := @parameter1: io.grpc.okhttp.internal.framed.ErrorCode;

        $r1 := @parameter2: byte[];

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label5;

        $i1 = $r3.<io.grpc.okhttp.internal.framed.ErrorCode: int httpCode>;

        if $i1 == -1 goto label4;

        $i1 = lengthof $r1;

        $i1 = $i1 + 8;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>(0, $i1, 7, 0);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $i0 = $r3.<io.grpc.okhttp.internal.framed.ErrorCode: int httpCode>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label2;

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: okio.BufferedSink write(byte[])>($r1);

     label2:
        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r4.<okio.BufferedSink: void flush()>();

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r5 = newarray (java.lang.Object)[0];

        $r2 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException '-$$Nest$smillegalArgument'(java.lang.String,java.lang.Object[])>("errorCode.httpCode == -1", $r5);

        throw $r2;

     label5:
        r7 = new java.io.IOException;

        specialinvoke r7.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r6 = (java.lang.Throwable) r7;

        throw $r6;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label6 with label6;
    }

    void headers(boolean, int, java.util.List) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        boolean $z0, $z1;
        int $i0, $i2;
        java.util.List $r1;
        io.grpc.okhttp.internal.framed.Hpack$Writer $r2;
        okio.Buffer $r3;
        long $l1, $l3;
        byte $b4;
        okio.BufferedSink $r4;
        java.io.IOException r5;
        java.lang.Throwable r6;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.List;

        $z1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z1 != 0 goto label4;

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: io.grpc.okhttp.internal.framed.Hpack$Writer hpackWriter>;

        virtualinvoke $r2.<io.grpc.okhttp.internal.framed.Hpack$Writer: void writeHeaders(java.util.List)>($r1);

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer>;

        $l1 = virtualinvoke $r3.<okio.Buffer: long size()>();

        $i2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>;

        $l3 = (long) $i2;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>($l3, $l1);

        $i2 = (int) $l3;

        $l3 = (long) $i2;

        $b4 = $l1 cmp $l3;

        if $b4 != 0 goto label1;

        $b4 = 4;

        goto label2;

     label1:
        $b4 = 0;

     label2:
        if $z0 == 0 goto label3;

        $b4 = $b4 | 1;

        goto label3;

     label3:
        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>($i0, $i2, 1, $b4);

        $r4 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $r3 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.Buffer hpackBuffer>;

        interfaceinvoke $r4.<okio.BufferedSink: void write(okio.Buffer,long)>($r3, $l3);

        $b4 = $l1 cmp $l3;

        if $b4 <= 0 goto label5;

        $l1 = $l1 - $l3;

        specialinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void writeContinuationFrames(int,long)>($i0, $l1);

        return;

     label4:
        r5 = new java.io.IOException;

        specialinvoke r5.<java.io.IOException: void <init>(java.lang.String)>("closed");

        r6 = (java.lang.Throwable) r5;

        throw r6;

     label5:
        return;
    }

    public int maxDataLength()
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int i0;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        i0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: int maxFrameSize>;

        return i0;
    }

    public void ping(boolean, int, int) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        byte $b2;
        okio.BufferedSink $r1;
        java.lang.Throwable $r2;
        java.io.IOException r3;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $z0 := @parameter0: boolean;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label1:
        $z1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z1 != 0 goto label5;

        if $z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>(0, 8, 6, $b2);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i1);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: void flush()>();

     label4:
        exitmonitor $r0;

        return;

     label5:
        r3 = new java.io.IOException;

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r2 = (java.lang.Throwable) r3;

        throw $r2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public void rstStream(int, io.grpc.okhttp.internal.framed.ErrorCode) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0, $i1;
        io.grpc.okhttp.internal.framed.ErrorCode $r1;
        boolean $z0;
        okio.BufferedSink $r2;
        java.lang.Throwable $r3;
        java.lang.IllegalArgumentException r4;
        java.io.IOException r5;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i0 := @parameter0: int;

        $r1 := @parameter1: io.grpc.okhttp.internal.framed.ErrorCode;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label4;

        $i1 = $r1.<io.grpc.okhttp.internal.framed.ErrorCode: int httpCode>;

        if $i1 == -1 goto label3;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>($i0, 4, 3, 0);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $i0 = $r1.<io.grpc.okhttp.internal.framed.ErrorCode: int httpCode>;

        interfaceinvoke $r2.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r2.<okio.BufferedSink: void flush()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw r4;

     label4:
        r5 = new java.io.IOException;

        specialinvoke r5.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r3 = (java.lang.Throwable) r5;

        throw $r3;

     label5:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label5 with label5;
    }

    public void settings(io.grpc.okhttp.internal.framed.Settings) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        io.grpc.okhttp.internal.framed.Settings $r1;
        boolean $z0;
        int $i0, $i1;
        okio.BufferedSink $r2;
        java.lang.Throwable $r3;
        java.io.IOException r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $r1 := @parameter0: io.grpc.okhttp.internal.framed.Settings;

        entermonitor $r0;

     label01:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label10;

        $i0 = virtualinvoke $r1.<io.grpc.okhttp.internal.framed.Settings: int size()>();

        $i1 = $i0 * 6;

        $i0 = 0;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>(0, $i1, 4, 0);

     label02:
        if $i0 >= 10 goto label08;

        $z0 = virtualinvoke $r1.<io.grpc.okhttp.internal.framed.Settings: boolean isSet(int)>($i0);

        if $z0 != 0 goto label03;

        goto label07;

     label03:
        if $i0 != 4 goto label04;

        $i1 = 3;

        goto label06;

     label04:
        if $i0 != 7 goto label05;

        $i1 = 4;

        goto label06;

     label05:
        $i1 = $i0;

     label06:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r2.<okio.BufferedSink: okio.BufferedSink writeShort(int)>($i1);

        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $i1 = virtualinvoke $r1.<io.grpc.okhttp.internal.framed.Settings: int get(int)>($i0);

        interfaceinvoke $r2.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i1);

     label07:
        $i0 = $i0 + 1;

        goto label02;

     label08:
        $r2 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r2.<okio.BufferedSink: void flush()>();

     label09:
        exitmonitor $r0;

        return;

     label10:
        r4 = new java.io.IOException;

        specialinvoke r4.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r3 = (java.lang.Throwable) r4;

        throw $r3;

     label11:
        $r3 := @caughtexception;

        exitmonitor $r0;

        goto label12;

     label12:
        throw $r3;

        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public void synStream(boolean, boolean, int, int, java.util.List) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0, $i1;
        java.util.List $r1;
        boolean $z0, $z1;
        java.lang.Throwable $r2;
        java.io.IOException r3;
        java.lang.UnsupportedOperationException r4;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r1 := @parameter4: java.util.List;

        entermonitor $r0;

        if $z1 != 0 goto label5;

     label1:
        $z1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z1 != 0 goto label3;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void headers(boolean,int,java.util.List)>($z0, $i0, $r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        r3 = new java.io.IOException;

        specialinvoke r3.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r2 = (java.lang.Throwable) r3;

        throw $r2;

     label4:
        $r2 := @caughtexception;

        goto label6;

     label5:
        r4 = new java.lang.UnsupportedOperationException;

        specialinvoke r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw r4;

     label6:
        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label6 with label4;
    }

    public void windowUpdate(int, long) throws java.io.IOException
    {
        io.grpc.okhttp.internal.framed.Http2$Writer $r0;
        int $i0;
        long $l1;
        boolean $z0;
        byte $b2;
        okio.BufferedSink $r1;
        java.lang.Object[] $r2;
        java.lang.Long $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Throwable $r5;
        java.io.IOException r6;

        $r0 := @this: io.grpc.okhttp.internal.framed.Http2$Writer;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: boolean closed>;

        if $z0 != 0 goto label4;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $b2 = $l1 cmp 2147483647L;

        if $b2 > 0 goto label3;

        virtualinvoke $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: void frameHeader(int,int,byte,byte)>($i0, 4, 8, 0);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        $i0 = (int) $l1;

        interfaceinvoke $r1.<okio.BufferedSink: okio.BufferedSink writeInt(int)>($i0);

        $r1 = $r0.<io.grpc.okhttp.internal.framed.Http2$Writer: okio.BufferedSink sink>;

        interfaceinvoke $r1.<okio.BufferedSink: void flush()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2[0] = $r3;

        $r4 = staticinvoke <io.grpc.okhttp.internal.framed.Http2: java.lang.IllegalArgumentException '-$$Nest$smillegalArgument'(java.lang.String,java.lang.Object[])>("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s", $r2);

        throw $r4;

     label4:
        r6 = new java.io.IOException;

        specialinvoke r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        $r5 = (java.lang.Throwable) r6;

        throw $r5;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label5 with label5;
    }

