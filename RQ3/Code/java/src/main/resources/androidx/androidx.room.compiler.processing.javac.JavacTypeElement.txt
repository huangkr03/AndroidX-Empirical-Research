androidx.room.compiler.processing.javac.JavacTypeElement
<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacTypeElement$Companion Companion>
<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement element>
<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy kotlinMetadata$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy qualifiedName$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy className$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy xClassName$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy typeParameters$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingTypeElement$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredFields$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods>
<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredMethods$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy type$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superTypes$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superClass$delegate>
<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superInterfaces$delegate>
    private void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.element.TypeElement)
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.element.TypeElement r2;
        javax.lang.model.element.Element $r3, $r5;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r4;
        androidx.room.compiler.processing.javac.JavacTypeElement$kotlinMetadata$2 $r6;
        kotlin.jvm.functions.Function0 $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r32, $r35, $r37, $r40, $r43, $r46, $r49;
        kotlin.Lazy $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r38, $r41, $r44, $r47, $r50;
        androidx.room.compiler.processing.javac.JavacTypeElement$qualifiedName$2 $r9;
        androidx.room.compiler.processing.javac.JavacTypeElement$className$2 $r12;
        androidx.room.compiler.processing.javac.JavacTypeElement$xClassName$2 $r15;
        androidx.room.compiler.processing.javac.JavacTypeElement$enclosingElement$2 $r18;
        androidx.room.compiler.processing.javac.JavacTypeElement$typeParameters$2 $r21;
        androidx.room.compiler.processing.javac.JavacTypeElement$enclosingTypeElement$2 $r24;
        androidx.room.compiler.processing.javac.JavacTypeElement$_declaredFields$2 $r27;
        androidx.room.compiler.processing.util.MemoizedSequence $r30, $r33;
        androidx.room.compiler.processing.javac.JavacTypeElement$allMethods$1 $r31;
        androidx.room.compiler.processing.javac.JavacTypeElement$allFieldsIncludingPrivateSupers$1 $r34;
        androidx.room.compiler.processing.javac.JavacTypeElement$_declaredMethods$2 $r36;
        androidx.room.compiler.processing.javac.JavacTypeElement$type$2 $r39;
        androidx.room.compiler.processing.javac.JavacTypeElement$superTypes$2 $r42;
        androidx.room.compiler.processing.javac.JavacTypeElement$superClass$2 $r45;
        androidx.room.compiler.processing.javac.JavacTypeElement$superInterfaces$2 $r48;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.element.TypeElement;

        $r3 = (javax.lang.model.element.Element) r2;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.Element)>(r1, $r3);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement element> = r2;

        $r4 = new androidx.room.compiler.processing.javac.JavacHasModifiers;

        $r5 = (javax.lang.model.element.Element) r2;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacHasModifiers: void <init>(javax.lang.model.element.Element)>($r5);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0> = $r4;

        $r6 = new androidx.room.compiler.processing.javac.JavacTypeElement$kotlinMetadata$2;

        specialinvoke $r6.<androidx.room.compiler.processing.javac.JavacTypeElement$kotlinMetadata$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy kotlinMetadata$delegate> = $r8;

        $r9 = new androidx.room.compiler.processing.javac.JavacTypeElement$qualifiedName$2;

        specialinvoke $r9.<androidx.room.compiler.processing.javac.JavacTypeElement$qualifiedName$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r10);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy qualifiedName$delegate> = $r11;

        $r12 = new androidx.room.compiler.processing.javac.JavacTypeElement$className$2;

        specialinvoke $r12.<androidx.room.compiler.processing.javac.JavacTypeElement$className$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        $r14 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r13);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy className$delegate> = $r14;

        $r15 = new androidx.room.compiler.processing.javac.JavacTypeElement$xClassName$2;

        specialinvoke $r15.<androidx.room.compiler.processing.javac.JavacTypeElement$xClassName$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r16 = (kotlin.jvm.functions.Function0) $r15;

        $r17 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r16);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy xClassName$delegate> = $r17;

        $r18 = new androidx.room.compiler.processing.javac.JavacTypeElement$enclosingElement$2;

        specialinvoke $r18.<androidx.room.compiler.processing.javac.JavacTypeElement$enclosingElement$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r19 = (kotlin.jvm.functions.Function0) $r18;

        $r20 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r19);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingElement$delegate> = $r20;

        $r21 = new androidx.room.compiler.processing.javac.JavacTypeElement$typeParameters$2;

        specialinvoke $r21.<androidx.room.compiler.processing.javac.JavacTypeElement$typeParameters$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r22 = (kotlin.jvm.functions.Function0) $r21;

        $r23 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r22);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy typeParameters$delegate> = $r23;

        $r24 = new androidx.room.compiler.processing.javac.JavacTypeElement$enclosingTypeElement$2;

        specialinvoke $r24.<androidx.room.compiler.processing.javac.JavacTypeElement$enclosingTypeElement$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r25 = (kotlin.jvm.functions.Function0) $r24;

        $r26 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r25);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingTypeElement$delegate> = $r26;

        $r27 = new androidx.room.compiler.processing.javac.JavacTypeElement$_declaredFields$2;

        specialinvoke $r27.<androidx.room.compiler.processing.javac.JavacTypeElement$_declaredFields$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r28 = (kotlin.jvm.functions.Function0) $r27;

        $r29 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r28);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredFields$delegate> = $r29;

        $r30 = new androidx.room.compiler.processing.util.MemoizedSequence;

        $r31 = new androidx.room.compiler.processing.javac.JavacTypeElement$allMethods$1;

        specialinvoke $r31.<androidx.room.compiler.processing.javac.JavacTypeElement$allMethods$1: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r32 = (kotlin.jvm.functions.Function0) $r31;

        specialinvoke $r30.<androidx.room.compiler.processing.util.MemoizedSequence: void <init>(kotlin.jvm.functions.Function0)>($r32);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods> = $r30;

        $r33 = new androidx.room.compiler.processing.util.MemoizedSequence;

        $r34 = new androidx.room.compiler.processing.javac.JavacTypeElement$allFieldsIncludingPrivateSupers$1;

        specialinvoke $r34.<androidx.room.compiler.processing.javac.JavacTypeElement$allFieldsIncludingPrivateSupers$1: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement)>(r0);

        $r35 = (kotlin.jvm.functions.Function0) $r34;

        specialinvoke $r33.<androidx.room.compiler.processing.util.MemoizedSequence: void <init>(kotlin.jvm.functions.Function0)>($r35);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers> = $r33;

        $r36 = new androidx.room.compiler.processing.javac.JavacTypeElement$_declaredMethods$2;

        specialinvoke $r36.<androidx.room.compiler.processing.javac.JavacTypeElement$_declaredMethods$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r37 = (kotlin.jvm.functions.Function0) $r36;

        $r38 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r37);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredMethods$delegate> = $r38;

        $r39 = new androidx.room.compiler.processing.javac.JavacTypeElement$type$2;

        specialinvoke $r39.<androidx.room.compiler.processing.javac.JavacTypeElement$type$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacTypeElement)>(r1, r0);

        $r40 = (kotlin.jvm.functions.Function0) $r39;

        $r41 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r40);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy type$delegate> = $r41;

        $r42 = new androidx.room.compiler.processing.javac.JavacTypeElement$superTypes$2;

        specialinvoke $r42.<androidx.room.compiler.processing.javac.JavacTypeElement$superTypes$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r43 = (kotlin.jvm.functions.Function0) $r42;

        $r44 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r43);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superTypes$delegate> = $r44;

        $r45 = new androidx.room.compiler.processing.javac.JavacTypeElement$superClass$2;

        specialinvoke $r45.<androidx.room.compiler.processing.javac.JavacTypeElement$superClass$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r46 = (kotlin.jvm.functions.Function0) $r45;

        $r47 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r46);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superClass$delegate> = $r47;

        $r48 = new androidx.room.compiler.processing.javac.JavacTypeElement$superInterfaces$2;

        specialinvoke $r48.<androidx.room.compiler.processing.javac.JavacTypeElement$superInterfaces$2: void <init>(androidx.room.compiler.processing.javac.JavacTypeElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r49 = (kotlin.jvm.functions.Function0) $r48;

        $r50 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r49);

        r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superInterfaces$delegate> = $r50;

        return;
    }

    public javax.lang.model.element.TypeElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        javax.lang.model.element.TypeElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement element>;

        return $r1;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isAbstract()>();

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isFinal()>();

        return $z0;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isPrivate()>();

        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isProtected()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isPublic()>();

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isStatic()>();

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isTransient()>();

        return $z0;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        javax.lang.model.element.TypeElement $r1;
        javax.lang.model.element.Name $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getPackageName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        javax.lang.model.element.TypeElement $r1;
        javax.lang.model.element.Element $r2;
        javax.lang.model.element.PackageElement $r3;
        javax.lang.model.element.Name $r4;
        java.lang.String $r5;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r2 = (javax.lang.model.element.Element) $r1;

        $r3 = staticinvoke <com.google.auto.common.MoreElements: javax.lang.model.element.PackageElement getPackage(javax.lang.model.element.Element)>($r2);

        $r4 = interfaceinvoke $r3.<javax.lang.model.element.PackageElement: javax.lang.model.element.Name getQualifiedName()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        return $r5;
    }

    public static void getPackageName$annotations()
    {
        return;
    }

    public final androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy kotlinMetadata$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement) $r2;

        return $r3;
    }

    public java.lang.String getQualifiedName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy qualifiedName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public com.squareup.javapoet.ClassName getClassName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.squareup.javapoet.ClassName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy className$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.squareup.javapoet.ClassName) $r2;

        return $r3;
    }

    private final androidx.room.compiler.codegen.XClassName getXClassName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.codegen.XClassName $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy xClassName$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.codegen.XClassName) $r2;

        return $r3;
    }

    public androidx.room.compiler.codegen.XClassName asClassName()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.codegen.XClassName $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    public androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XMemberContainer $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XMemberContainer) $r2;

        return $r3;
    }

    public java.util.List getTypeParameters()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy typeParameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacTypeElement getClosestMemberContainer()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        return r0;
    }

    public androidx.room.compiler.processing.XTypeElement getEnclosingTypeElement()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy enclosingTypeElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XTypeElement) $r2;

        return $r3;
    }

    private final java.util.List get_declaredFields()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredFields$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public kotlin.sequences.Sequence getAllMethods()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;
        kotlin.sequences.Sequence $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allMethods>;

        $r2 = (kotlin.sequences.Sequence) $r1;

        return $r2;
    }

    public androidx.room.compiler.processing.util.MemoizedSequence getAllFieldsIncludingPrivateSupers()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence allFieldsIncludingPrivateSupers>;

        return $r1;
    }

    public java.util.List getDeclaredFields()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: java.util.List get_declaredFields()>();

        return $r1;
    }

    public boolean isKotlinObject()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isObject()>();

        if $z1 != 1 goto label1;

        $z2 = 1;

        goto label3;

     label1:
        $z2 = 0;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 != 0 goto label7;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r2 == null goto label5;

        $z0 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isCompanionObject()>();

        if $z0 != 1 goto label4;

        $z3 = 1;

        goto label6;

     label4:
        $z3 = 0;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 == 0 goto label8;

     label7:
        $z4 = 1;

        goto label9;

     label8:
        $z4 = 0;

     label9:
        return $z4;
    }

    public boolean isCompanionObject()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isCompanionObject()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isDataClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isDataClass()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isValueClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isValueClass()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isFunctionalInterface()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isFunctionalInterface()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isExpect()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isExpect()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isAnnotationClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        javax.lang.model.element.TypeElement $r2;
        javax.lang.model.element.ElementKind $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isAnnotationClass()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r3 = interfaceinvoke $r2.<javax.lang.model.element.TypeElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind ANNOTATION_TYPE>;

        if $r3 != $r4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        javax.lang.model.element.TypeElement $r2;
        javax.lang.model.element.ElementKind $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isClass()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r3 = interfaceinvoke $r2.<javax.lang.model.element.TypeElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CLASS>;

        if $r3 != $r4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isNested()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0, $r4;
        javax.lang.model.element.TypeElement $r1;
        javax.lang.model.element.Element $r2;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r2 = (javax.lang.model.element.Element) $r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r4 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.javac.JavacTypeElement enclosingType(javax.lang.model.element.Element,androidx.room.compiler.processing.javac.JavacProcessingEnv)>($r2, $r3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInterface()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r1;
        javax.lang.model.element.TypeElement $r2;
        javax.lang.model.element.ElementKind $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: boolean isInterface()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r3 = interfaceinvoke $r2.<javax.lang.model.element.TypeElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind INTERFACE>;

        if $r3 != $r4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public androidx.room.compiler.processing.javac.JavacConstructorElement findPrimaryConstructor()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        java.lang.String r1, $r7, $r10;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.room.compiler.processing.javac.JavacConstructorElement r5, $r9, r11;
        androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement $r6;
        java.util.List $r8;
        boolean $z2, $z3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement getKotlinMetadata()>();

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r6.<androidx.room.compiler.processing.javac.kotlin.KotlinMetadataElement: java.lang.String findPrimaryConstructorSignature()>();

        if $r7 != null goto label2;

     label1:
        return null;

     label2:
        r1 = $r7;

        $r8 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: java.util.List getConstructors()>();

        $r2 = (java.lang.Iterable) $r8;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.javac.JavacConstructorElement) r4;

        $r10 = virtualinvoke r5.<androidx.room.compiler.processing.javac.JavacConstructorElement: java.lang.String getDescriptor()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r10);

        if $z3 == 0 goto label3;

        r11 = (androidx.room.compiler.processing.javac.JavacConstructorElement) r4;

        return r11;

     label4:
        $r9 = (androidx.room.compiler.processing.javac.JavacConstructorElement) null;

        return $r9;
    }

    private final java.util.List get_declaredMethods()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy _declaredMethods$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List getDeclaredMethods()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: java.util.List get_declaredMethods()>();

        return $r1;
    }

    public java.util.List getConstructors()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        java.lang.Iterable $r1, $r9;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.element.ExecutableElement r5;
        javax.lang.model.element.TypeElement $r7;
        java.util.List $r8, $r10, $r12;
        java.util.ArrayList $r11;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.javac.JavacConstructorElement $r13;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r14;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <javax.lang.model.util.ElementFilter: java.util.List constructorsIn(java.lang.Iterable)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "constructorsIn(element.enclosedElements)");

        $r1 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r11;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.element.ExecutableElement) r4;

        r6 = r2;

        $r13 = new androidx.room.compiler.processing.javac.JavacConstructorElement;

        $r14 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "it");

        specialinvoke $r13.<androidx.room.compiler.processing.javac.JavacConstructorElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement)>($r14, r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r12 = (java.util.List) r2;

        return $r12;
    }

    public java.util.List getSuperInterfaceElements()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0, $r13;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.type.TypeMirror r5;
        javax.lang.model.element.TypeElement $r7, $r12;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r11;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.element.TypeElement: java.util.List getInterfaces()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "element.interfaces");

        $r1 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r9;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.type.TypeMirror) r4;

        r6 = r2;

        $r11 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.element.TypeElement asTypeElement(javax.lang.model.type.TypeMirror)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "asTypeElement(it)");

        $r13 = virtualinvoke $r11.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>($r12);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r10 = (java.util.List) r2;

        return $r10;
    }

    public java.util.List getEnclosedTypeElements()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0, $r14;
        java.lang.Iterable $r1, $r9;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.element.TypeElement r5, $r7;
        java.util.List $r8, $r10, $r12;
        java.util.ArrayList $r11;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r13;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.element.TypeElement: java.util.List getEnclosedElements()>();

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <javax.lang.model.util.ElementFilter: java.util.List typesIn(java.lang.Iterable)>($r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "typesIn(element.enclosedElements)");

        $r1 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r11;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.element.TypeElement) r4;

        r6 = r2;

        $r13 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "it");

        $r14 = virtualinvoke $r13.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>(r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $r12 = (java.util.List) r2;

        return $r12;
    }

    public androidx.room.compiler.processing.javac.JavacDeclaredType getType()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy type$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacDeclaredType) $r2;

        return $r3;
    }

    public java.util.List getSuperTypes()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacType getSuperClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superClass$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacType) $r2;

        return $r3;
    }

    public java.util.List getSuperInterfaces()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacTypeElement: kotlin.Lazy superInterfaces$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public volatile javax.lang.model.element.Element getElement()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        javax.lang.model.element.TypeElement $r1;
        javax.lang.model.element.Element $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r2 = (javax.lang.model.element.Element) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.XMemberContainer $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.XMemberContainer getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0, $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacTypeElement getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XTypeElement getClosestMemberContainer()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0, $r1;
        androidx.room.compiler.processing.XTypeElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacTypeElement getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XTypeElement) $r1;

        return $r2;
    }

    public volatile kotlin.sequences.Sequence getAllFieldsIncludingPrivateSupers()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.util.MemoizedSequence $r1;
        kotlin.sequences.Sequence $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.util.MemoizedSequence getAllFieldsIncludingPrivateSupers()>();

        $r2 = (kotlin.sequences.Sequence) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XConstructorElement findPrimaryConstructor()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacConstructorElement $r1;
        androidx.room.compiler.processing.XConstructorElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacConstructorElement findPrimaryConstructor()>();

        $r2 = (androidx.room.compiler.processing.XConstructorElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacDeclaredType getType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getSuperClass()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacType getSuperClass()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.element.TypeElement, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.javac.JavacTypeElement r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.element.TypeElement r2;
        kotlin.jvm.internal.DefaultConstructorMarker $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacTypeElement;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.element.TypeElement;

        $r3 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacTypeElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.TypeElement)>(r1, r2);

        return;
    }

    public static final androidx.room.compiler.codegen.XClassName access$getXClassName(androidx.room.compiler.processing.javac.JavacTypeElement)
    {
        androidx.room.compiler.processing.javac.JavacTypeElement $r0;
        androidx.room.compiler.codegen.XClassName $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.JavacTypeElement;

        $r1 = specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.codegen.XClassName getXClassName()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.javac.JavacTypeElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.javac.JavacTypeElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacTypeElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacTypeElement$Companion Companion> = $r0;

        return;
    }

