androidx.ui.core.gesture.TapGestureFilter
<androidx.ui.core.gesture.TapGestureFilter: kotlin.jvm.functions.Function0 onTap>
<androidx.ui.core.gesture.TapGestureFilter: boolean consumeDownOnStart>
<androidx.ui.core.gesture.TapGestureFilter: boolean active>
    public void <init>()
    {
        androidx.ui.core.gesture.TapGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        r0.<androidx.ui.core.gesture.TapGestureFilter: boolean consumeDownOnStart> = 1;

        return;
    }

    public final kotlin.jvm.functions.Function0 getOnTap()
    {
        androidx.ui.core.gesture.TapGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        r1 = r0.<androidx.ui.core.gesture.TapGestureFilter: kotlin.jvm.functions.Function0 onTap>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("onTap");

        throw null;
    }

    public final void setOnTap(kotlin.jvm.functions.Function0)
    {
        androidx.ui.core.gesture.TapGestureFilter r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.TapGestureFilter: kotlin.jvm.functions.Function0 onTap> = r1;

        return;
    }

    public final boolean getConsumeDownOnStart()
    {
        androidx.ui.core.gesture.TapGestureFilter r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        $z0 = r0.<androidx.ui.core.gesture.TapGestureFilter: boolean consumeDownOnStart>;

        return $z0;
    }

    public final void setConsumeDownOnStart(boolean)
    {
        androidx.ui.core.gesture.TapGestureFilter r0;
        boolean z0;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.gesture.TapGestureFilter: boolean consumeDownOnStart> = z0;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntPxSize)
    {
        androidx.ui.core.gesture.TapGestureFilter r0;
        java.util.List r1, r13, $r37;
        androidx.ui.core.PointerEventPass r2, $r5, $r36;
        androidx.ui.unit.IntPxSize r3;
        androidx.ui.core.PointerInputChange r4, r17, r21, r26, r28, r33, r35;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z13, $z14, $z15, $z16, $z18, $z19, $z22, $z23, z26, $z28, z30, $z32, z34, $z36;
        java.util.Collection $r6, $r11, $r12, r23, r27, r30, r34;
        java.util.ArrayList $r7, $r8;
        int $i0, $i1, i2, $i3;
        kotlin.jvm.functions.Function0 $r9;
        java.lang.Iterable $r14, $r18, $r22, $r29;
        java.util.Iterator $r15, $r19, $r24, $r31;
        java.lang.Object r16, r20, r25, r32, r38, r39;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntPxSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r13 = r1;

        $r5 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostUp>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z1 == 0 goto label16;

        $r14 = (java.lang.Iterable) r13;

        $z4 = $r14 instanceof java.util.Collection;

        if $z4 == 0 goto label01;

        $r12 = (java.util.Collection) $r14;

        $z16 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z16 == 0 goto label01;

        $z18 = 1;

        goto label04;

     label01:
        $r15 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z19 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label03;

        r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (androidx.ui.core.PointerInputChange) r16;

        $z15 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDown(androidx.ui.core.PointerInputChange)>(r17);

        if $z15 != 0 goto label02;

        $z18 = 0;

        goto label04;

     label03:
        $z18 = 1;

     label04:
        if $z18 == 0 goto label05;

        r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active> = 1;

        goto label13;

     label05:
        $z5 = r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active>;

        if $z5 == 0 goto label12;

        $r18 = (java.lang.Iterable) r13;

        $z10 = $r18 instanceof java.util.Collection;

        if $z10 == 0 goto label06;

        $r11 = (java.util.Collection) $r18;

        $z14 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>();

        if $z14 == 0 goto label06;

        $z22 = 1;

        goto label09;

     label06:
        $r19 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z23 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label08;

        r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (androidx.ui.core.PointerInputChange) r20;

        $z13 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUp(androidx.ui.core.PointerInputChange)>(r21);

        if $z13 != 0 goto label07;

        $z22 = 0;

        goto label09;

     label08:
        $z22 = 1;

     label09:
        if $z22 == 0 goto label12;

        r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active> = 0;

        $r22 = (java.lang.Iterable) r13;

        $r8 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r22, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r23 = (java.util.Collection) $r8;

        z26 = 0;

        $r24 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z11 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label11;

        r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r26 = (androidx.ui.core.PointerInputChange) r25;

        r27 = r23;

        r28 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r26);

        interfaceinvoke r27.<java.util.Collection: boolean add(java.lang.Object)>(r28);

        goto label10;

     label11:
        r13 = (java.util.List) r23;

        $r9 = virtualinvoke r0.<androidx.ui.core.gesture.TapGestureFilter: kotlin.jvm.functions.Function0 getOnTap()>();

        interfaceinvoke $r9.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label13;

     label12:
        $z6 = staticinvoke <androidx.ui.core.gesture.GestureUtilsKt: boolean anyPointersInBounds(java.util.List,androidx.ui.unit.IntPxSize)>(r13, r3);

        if $z6 != 0 goto label13;

        specialinvoke r0.<androidx.ui.core.gesture.TapGestureFilter: void reset()>();

     label13:
        $z28 = r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active>;

        if $z28 == 0 goto label16;

        $z7 = virtualinvoke r0.<androidx.ui.core.gesture.TapGestureFilter: boolean getConsumeDownOnStart()>();

        if $z7 == 0 goto label16;

        $r29 = (java.lang.Iterable) r13;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r29, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r30 = (java.util.Collection) $r7;

        z30 = 0;

        $r31 = interfaceinvoke $r29.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (androidx.ui.core.PointerInputChange) r32;

        r34 = r30;

        r35 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeDownChange(androidx.ui.core.PointerInputChange)>(r33);

        interfaceinvoke r34.<java.util.Collection: boolean add(java.lang.Object)>(r35);

        goto label14;

     label15:
        r13 = (java.util.List) r30;

     label16:
        $r36 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z32 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r36);

        if $z32 == 0 goto label21;

        $z2 = r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active>;

        if $z2 == 0 goto label21;

        $r37 = r13;

        z34 = 0;

        i2 = 0;

        $r6 = (java.util.Collection) r13;

        $i3 = interfaceinvoke $r6.<java.util.Collection: int size()>();

     label17:
        if i2 >= $i3 goto label19;

        r38 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(i2);

        r39 = r38;

        r4 = (androidx.ui.core.PointerInputChange) r39;

        $z3 = staticinvoke <androidx.ui.core.PointerInputKt: boolean anyPositionChangeConsumed(androidx.ui.core.PointerInputChange)>(r4);

        if $z3 == 0 goto label18;

        $z36 = 1;

        goto label20;

     label18:
        i2 = i2 + 1;

        goto label17;

     label19:
        $z36 = 0;

     label20:
        if $z36 == 0 goto label21;

        specialinvoke r0.<androidx.ui.core.gesture.TapGestureFilter: void reset()>();

     label21:
        return r13;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.TapGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        specialinvoke r0.<androidx.ui.core.gesture.TapGestureFilter: void reset()>();

        return;
    }

    private final void reset()
    {
        androidx.ui.core.gesture.TapGestureFilter r0;

        r0 := @this: androidx.ui.core.gesture.TapGestureFilter;

        r0.<androidx.ui.core.gesture.TapGestureFilter: boolean active> = 0;

        return;
    }

