androidx.paging.PageFetcherSnapshot
<androidx.paging.PageFetcherSnapshot: java.lang.Object initialKey>
<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource pagingSource>
<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>
<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow retryFlow>
<androidx.paging.PageFetcherSnapshot: boolean triggerRemoteRefresh>
<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection remoteMediatorConnection>
<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingState previousPagingState>
<androidx.paging.PageFetcherSnapshot: kotlin.jvm.functions.Function0 invalidate>
<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>
<androidx.paging.PageFetcherSnapshot: java.util.concurrent.atomic.AtomicBoolean pageEventChCollected>
<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>
<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>
<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.CompletableJob pageEventChannelFlowJob>
<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow pageEventFlow>
    public void <init>(java.lang.Object, androidx.paging.PagingSource, androidx.paging.PagingConfig, kotlinx.coroutines.flow.Flow, boolean, androidx.paging.RemoteMediatorConnection, androidx.paging.PagingState, kotlin.jvm.functions.Function0)
    {
        androidx.paging.PageFetcherSnapshot r0;
        java.lang.Object r1;
        androidx.paging.PagingSource r2, $r26;
        androidx.paging.PagingConfig r3, $r8, $r13;
        kotlinx.coroutines.flow.Flow r4, $r19, $r22;
        boolean z0, z1, z2, $z4, $z5, z6;
        androidx.paging.RemoteMediatorConnection r5;
        androidx.paging.PagingState r6;
        kotlin.jvm.functions.Function0 r7;
        int $i0;
        androidx.paging.HintHandler $r9;
        java.util.concurrent.atomic.AtomicBoolean $r10;
        kotlinx.coroutines.channels.Channel $r11;
        androidx.paging.PageFetcherSnapshotState$Holder $r12;
        kotlinx.coroutines.CompletableJob $r14, $r15;
        androidx.paging.PageFetcherSnapshot$pageEventFlow$1 $r16;
        kotlinx.coroutines.Job $r17;
        kotlin.jvm.functions.Function2 $r18, $r21;
        androidx.paging.PageFetcherSnapshot$pageEventFlow$2 $r20;
        java.lang.IllegalArgumentException $r23;
        java.lang.String $r24, r27;
        java.lang.Throwable $r25;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.paging.PagingSource;

        r3 := @parameter2: androidx.paging.PagingConfig;

        r4 := @parameter3: kotlinx.coroutines.flow.Flow;

        z0 := @parameter4: boolean;

        r5 := @parameter5: androidx.paging.RemoteMediatorConnection;

        r6 := @parameter6: androidx.paging.PagingState;

        r7 := @parameter7: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingSource");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "retryFlow");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "invalidate");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object initialKey> = r1;

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource pagingSource> = r2;

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config> = r3;

        r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow retryFlow> = r4;

        r0.<androidx.paging.PageFetcherSnapshot: boolean triggerRemoteRefresh> = z0;

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection remoteMediatorConnection> = r5;

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingState previousPagingState> = r6;

        r0.<androidx.paging.PageFetcherSnapshot: kotlin.jvm.functions.Function0 invalidate> = r7;

        $r8 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i0 = $r8.<androidx.paging.PagingConfig: int jumpThreshold>;

        if $i0 == -2147483648 goto label1;

        $r26 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource pagingSource>;

        $z4 = virtualinvoke $r26.<androidx.paging.PagingSource: boolean getJumpingSupported()>();

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z1 = $z5;

        z2 = 0;

        z6 = 0;

        if z1 != 0 goto label4;

        r27 = "PagingConfig.jumpThreshold was set, but the associated PagingSource has not marked support for jumps by overriding PagingSource.jumpingSupported to true.";

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        $r25 = (java.lang.Throwable) $r23;

        throw $r25;

     label4:
        $r9 = new androidx.paging.HintHandler;

        specialinvoke $r9.<androidx.paging.HintHandler: void <init>()>();

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler> = $r9;

        $r10 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r10.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.paging.PageFetcherSnapshot: java.util.concurrent.atomic.AtomicBoolean pageEventChCollected> = $r10;

        $r11 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(-2, null, null, 6, null);

        r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh> = $r11;

        $r12 = new androidx.paging.PageFetcherSnapshotState$Holder;

        $r13 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        specialinvoke $r12.<androidx.paging.PageFetcherSnapshotState$Holder: void <init>(androidx.paging.PagingConfig)>($r13);

        r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder> = $r12;

        $r14 = staticinvoke <kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.CompletableJob pageEventChannelFlowJob> = $r14;

        $r15 = r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.CompletableJob pageEventChannelFlowJob>;

        $r17 = (kotlinx.coroutines.Job) $r15;

        $r16 = new androidx.paging.PageFetcherSnapshot$pageEventFlow$1;

        specialinvoke $r16.<androidx.paging.PageFetcherSnapshot$pageEventFlow$1: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r0, null);

        $r18 = (kotlin.jvm.functions.Function2) $r16;

        $r19 = staticinvoke <androidx.paging.CancelableChannelFlowKt: kotlinx.coroutines.flow.Flow cancelableChannelFlow(kotlinx.coroutines.Job,kotlin.jvm.functions.Function2)>($r17, $r18);

        $r20 = new androidx.paging.PageFetcherSnapshot$pageEventFlow$2;

        specialinvoke $r20.<androidx.paging.PageFetcherSnapshot$pageEventFlow$2: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r0, null);

        $r21 = (kotlin.jvm.functions.Function2) $r20;

        $r22 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r19, $r21);

        r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow pageEventFlow> = $r22;

        return;
    }

    public void <init>(java.lang.Object, androidx.paging.PagingSource, androidx.paging.PagingConfig, kotlinx.coroutines.flow.Flow, boolean, androidx.paging.RemoteMediatorConnection, androidx.paging.PagingState, kotlin.jvm.functions.Function0, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PageFetcherSnapshot r0;
        java.lang.Object r1;
        androidx.paging.PagingSource r2;
        androidx.paging.PagingConfig r3;
        kotlinx.coroutines.flow.Flow r4;
        int i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.internal.DefaultConstructorMarker r5;
        androidx.paging.PageFetcherSnapshot$1 $r6;
        boolean z0;
        androidx.paging.RemoteMediatorConnection r7;
        androidx.paging.PagingState r8;
        kotlin.jvm.functions.Function0 r9;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.paging.PagingSource;

        r3 := @parameter2: androidx.paging.PagingConfig;

        r4 := @parameter3: kotlinx.coroutines.flow.Flow;

        z0 := @parameter4: boolean;

        r7 := @parameter5: androidx.paging.RemoteMediatorConnection;

        r8 := @parameter6: androidx.paging.PagingState;

        r9 := @parameter7: kotlin.jvm.functions.Function0;

        i0 := @parameter8: int;

        r5 := @parameter9: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 32;

        if $i2 == 0 goto label2;

        r7 = null;

     label2:
        $i3 = i0 & 64;

        if $i3 == 0 goto label3;

        r8 = null;

     label3:
        $i4 = i0 & 128;

        if $i4 == 0 goto label4;

        $r6 = <androidx.paging.PageFetcherSnapshot$1: androidx.paging.PageFetcherSnapshot$1 INSTANCE>;

        r9 = (kotlin.jvm.functions.Function0) $r6;

     label4:
        specialinvoke r0.<androidx.paging.PageFetcherSnapshot: void <init>(java.lang.Object,androidx.paging.PagingSource,androidx.paging.PagingConfig,kotlinx.coroutines.flow.Flow,boolean,androidx.paging.RemoteMediatorConnection,androidx.paging.PagingState,kotlin.jvm.functions.Function0)>(r1, r2, r3, r4, z0, r7, r8, r9);

        return;
    }

    public final java.lang.Object getInitialKey$paging_common()
    {
        androidx.paging.PageFetcherSnapshot r0;
        java.lang.Object $r1;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object initialKey>;

        return $r1;
    }

    public final androidx.paging.PagingSource getPagingSource$paging_common()
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.PagingSource $r1;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource pagingSource>;

        return $r1;
    }

    public final androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.RemoteMediatorConnection $r1;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection remoteMediatorConnection>;

        return $r1;
    }

    public final kotlinx.coroutines.flow.Flow getPageEventFlow()
    {
        androidx.paging.PageFetcherSnapshot r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow pageEventFlow>;

        return $r1;
    }

    private final java.lang.Object retryLoadError(androidx.paging.LoadType, androidx.paging.ViewportHint, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.LoadType r1, r4;
        androidx.paging.ViewportHint r2;
        kotlin.coroutines.Continuation $r3;
        int i0, $i1;
        boolean z0, z1, $z3, z4;
        int[] $r5;
        androidx.paging.HintHandler $r6;
        kotlin.Unit $r7, $r13;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9, r14;
        java.lang.Throwable $r10;
        java.lang.Object $r11, $r12;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: androidx.paging.ViewportHint;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r4 = r1;

        $r5 = <androidx.paging.PageFetcherSnapshot$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r4.<androidx.paging.LoadType: int ordinal()>();

        i0 = $r5[$i1];

        if i0 != 1 goto label2;

        $r11 = specialinvoke r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object doInitialLoad(kotlin.coroutines.Continuation)>($r3);

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label1;

        return $r11;

     label1:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;

     label2:
        if r2 == null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label5;

        r14 = "Cannot retry APPEND / PREPEND load on PagingSource without ViewportHint";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label5:
        $r6 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        virtualinvoke $r6.<androidx.paging.HintHandler: void forceSetHint(androidx.paging.LoadType,androidx.paging.ViewportHint)>(r1, r2);

        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public final void accessHint(androidx.paging.ViewportHint)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.ViewportHint r1;
        androidx.paging.HintHandler $r2;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter0: androidx.paging.ViewportHint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "viewportHint");

        $r2 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        virtualinvoke $r2.<androidx.paging.HintHandler: void processHint(androidx.paging.ViewportHint)>(r1);

        return;
    }

    public final void close()
    {
        androidx.paging.PageFetcherSnapshot r0;
        kotlinx.coroutines.CompletableJob $r1;
        kotlinx.coroutines.Job $r2;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.CompletableJob pageEventChannelFlowJob>;

        $r2 = (kotlinx.coroutines.Job) $r1;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

        return;
    }

    public final java.lang.Object currentPagingState(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r21;
        androidx.paging.PageFetcherSnapshotState r1;
        java.lang.Object $r2, r3, $r5, $r6, $r7, $r10;
        boolean $z0;
        androidx.paging.HintHandler $r8;
        androidx.paging.ViewportHint$Access $r9;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable $r12, r18;
        androidx.paging.PageFetcherSnapshot r13;
        androidx.paging.PageFetcherSnapshot$currentPagingState$1 $r14, r19;
        androidx.paging.PageFetcherSnapshotState$Holder r15;
        kotlinx.coroutines.sync.Mutex $r16;
        androidx.paging.PagingState r17;
        java.lang.IllegalStateException r20;

        r13 := @this: androidx.paging.PageFetcherSnapshot;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.paging.PageFetcherSnapshot$currentPagingState$1;

        if $z0 == 0 goto label01;

        $r14 = (androidx.paging.PageFetcherSnapshot$currentPagingState$1) r0;

        $i0 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: int label>;

        $i3 = $i2 - -2147483648;

        $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: int label> = $i3;

        goto label02;

     label01:
        r19 = new androidx.paging.PageFetcherSnapshot$currentPagingState$1;

        specialinvoke r19.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r13, r0);

        $r14 = r19;

     label02:
        $r2 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        r15 = r13.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r16 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r15);

        $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$0> = r13;

        $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$1> = r15;

        $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$2> = $r16;

        $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: int label> = 1;

        r21 = (kotlin.coroutines.Continuation) $r14;

        $r10 = interfaceinvoke $r16.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r21);

        if $r10 != r3 goto label05;

        return r3;

     label04:
        $r5 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$2>;

        $r16 = (kotlinx.coroutines.sync.Mutex) $r5;

        $r6 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$1>;

        r15 = (androidx.paging.PageFetcherSnapshotState$Holder) $r6;

        $r7 = $r14.<androidx.paging.PageFetcherSnapshot$currentPagingState$1: java.lang.Object L$0>;

        r13 = (androidx.paging.PageFetcherSnapshot) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label05:
        r1 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r15);

        $r8 = r13.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        $r9 = virtualinvoke $r8.<androidx.paging.HintHandler: androidx.paging.ViewportHint$Access getLastAccessHint()>();

        r17 = virtualinvoke r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PagingState currentPagingState$paging_common(androidx.paging.ViewportHint$Access)>($r9);

     label06:
        interfaceinvoke $r16.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label09;

     label07:
        $r12 := @caughtexception;

        r18 = $r12;

     label08:
        interfaceinvoke $r16.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r18;

     label09:
        return r17;

     label10:
        r20 = new java.lang.IllegalStateException;

        specialinvoke r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r20;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private final void startConsumingHints(kotlinx.coroutines.CoroutineScope)
    {
        androidx.paging.PageFetcherSnapshot r0;
        kotlinx.coroutines.CoroutineScope $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.paging.LoadType r4, $r12, $r13;
        androidx.paging.PagingConfig $r5;
        int $i0;
        androidx.paging.PageFetcherSnapshot$startConsumingHints$2 $r6;
        kotlin.jvm.functions.Function2 $r7, $r10, $r16;
        androidx.paging.PageFetcherSnapshot$startConsumingHints$3 $r9;
        java.util.List $r14;
        boolean $z2;
        androidx.paging.PageFetcherSnapshot$startConsumingHints$1$1 $r15;
        androidx.paging.LoadType[] $r18;
        java.lang.Iterable $r19;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r5 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i0 = $r5.<androidx.paging.PagingConfig: int jumpThreshold>;

        if $i0 == -2147483648 goto label2;

        $r18 = newarray (androidx.paging.LoadType)[2];

        $r12 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r18[0] = $r12;

        $r13 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r18[1] = $r13;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r18);

        $r19 = (java.lang.Iterable) $r14;

        r2 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.paging.LoadType) r3;

        $r15 = new androidx.paging.PageFetcherSnapshot$startConsumingHints$1$1;

        specialinvoke $r15.<androidx.paging.PageFetcherSnapshot$startConsumingHints$1$1: void <init>(androidx.paging.PageFetcherSnapshot,androidx.paging.LoadType,kotlin.coroutines.Continuation)>(r0, r4, null);

        $r16 = (kotlin.jvm.functions.Function2) $r15;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, null, null, $r16, 3, null);

        goto label1;

     label2:
        $r6 = new androidx.paging.PageFetcherSnapshot$startConsumingHints$2;

        specialinvoke $r6.<androidx.paging.PageFetcherSnapshot$startConsumingHints$2: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r0, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, null, null, $r7, 3, null);

        $r9 = new androidx.paging.PageFetcherSnapshot$startConsumingHints$3;

        specialinvoke $r9.<androidx.paging.PageFetcherSnapshot$startConsumingHints$3: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r0, null);

        $r10 = (kotlin.jvm.functions.Function2) $r9;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, null, null, $r10, 3, null);

        return;
    }

    private final java.lang.Object collectAsGenerationalViewportHints(kotlinx.coroutines.flow.Flow, androidx.paging.LoadType, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot r0;
        kotlinx.coroutines.flow.Flow $r1, $r6, $r9, $r15;
        androidx.paging.LoadType r2;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$simpleFlatMapLatest$1 $r4;
        kotlin.jvm.functions.Function3 $r5, $r8;
        androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$3 $r7;
        androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$collect$1 $r10;
        kotlinx.coroutines.flow.FlowCollector $r11;
        java.lang.Object $r12, $r13;
        kotlin.Unit $r14;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r2 := @parameter1: androidx.paging.LoadType;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$simpleFlatMapLatest$1;

        specialinvoke $r4.<androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$simpleFlatMapLatest$1: void <init>(kotlin.coroutines.Continuation,androidx.paging.PageFetcherSnapshot,androidx.paging.LoadType)>(null, r0, r2);

        $r5 = (kotlin.jvm.functions.Function3) $r4;

        $r6 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleTransformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r1, $r5);

        $r7 = new androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$3;

        specialinvoke $r7.<androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$3: void <init>(androidx.paging.LoadType,kotlin.coroutines.Continuation)>(r2, null);

        $r8 = (kotlin.jvm.functions.Function3) $r7;

        $r9 = staticinvoke <androidx.paging.FlowExtKt: kotlinx.coroutines.flow.Flow simpleRunningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r6, $r8);

        $r15 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)>($r9);

        $r10 = new androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$collect$1;

        specialinvoke $r10.<androidx.paging.PageFetcherSnapshot$collectAsGenerationalViewportHints$$inlined$collect$1: void <init>(androidx.paging.PageFetcherSnapshot,androidx.paging.LoadType)>(r0, r2);

        $r11 = (kotlinx.coroutines.flow.FlowCollector) $r10;

        $r12 = interfaceinvoke $r15.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r11, $r3);

        $r13 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r12 != $r13 goto label1;

        return $r12;

     label1:
        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r14;
    }

    private final androidx.paging.PagingSource$LoadParams loadParams(androidx.paging.LoadType, java.lang.Object)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.LoadType r1, $r3;
        java.lang.Object r2;
        androidx.paging.PagingConfig $r4, $r5, $r8;
        boolean $z0;
        androidx.paging.PagingSource$LoadParams$Companion $r6;
        androidx.paging.PagingSource$LoadParams $r7;
        int $i0;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter0: androidx.paging.LoadType;

        r2 := @parameter1: java.lang.Object;

        $r6 = <androidx.paging.PagingSource$LoadParams: androidx.paging.PagingSource$LoadParams$Companion Companion>;

        $r3 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if r1 != $r3 goto label1;

        $r8 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i0 = $r8.<androidx.paging.PagingConfig: int initialLoadSize>;

        goto label2;

     label1:
        $r4 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i0 = $r4.<androidx.paging.PagingConfig: int pageSize>;

     label2:
        $r5 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $z0 = $r5.<androidx.paging.PagingConfig: boolean enablePlaceholders>;

        $r7 = virtualinvoke $r6.<androidx.paging.PagingSource$LoadParams$Companion: androidx.paging.PagingSource$LoadParams create(androidx.paging.LoadType,java.lang.Object,int,boolean)>(r1, r2, $i0, $z0);

        return $r7;
    }

    private final java.lang.Object doInitialLoad(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r128, r129, r130, r131, r132, r133, r134, r135, r136;
        java.lang.Object $r1, r2, $r4, $r6, $r7, $r8, $r9, $r14, $r15, $r16, $r17, $r18, $r22, $r24, $r29, $r30, $r31, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r46, $r47, $r48, $r49, $r50, $r59, $r61, $r62, $r73, $r74, $r75, $r76, $r77, $r79, $r81, $r82, $r83, $r85, $r86, $r101;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        kotlin.Unit $r5, $r98, $r110, r122, $r124;
        androidx.paging.PagingSource$LoadResult$Error $r11;
        java.lang.Throwable $r12, $r88, $r89, $r90, $r91, $r92, r116, r123;
        androidx.paging.LoadType $r13, $r26, $r28, $r42, $r52, $r55, $r65, $r70, $r78, $r84;
        androidx.paging.HintHandler $r19;
        androidx.paging.ViewportHint$Access $r20;
        androidx.paging.PagingSource$LoadResult$Page $r21, $r23, $r33, $r36, $r43, $r51, $r58, $r60;
        androidx.paging.RemoteMediatorConnection $r25, $r27, $r32;
        kotlinx.coroutines.channels.Channel $r44;
        androidx.paging.PageEvent $r45;
        androidx.paging.MutableLoadStateCollection $r53, $r63, $r68;
        androidx.paging.LoadState$NotLoading$Companion $r54, $r64, $r69;
        androidx.paging.LoadState$NotLoading $r56, $r66, $r71;
        androidx.paging.LoadState $r57, $r67, $r72;
        androidx.paging.PagingSource $r80;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.paging.PageFetcherSnapshot r93;
        androidx.paging.PageFetcherSnapshot$doInitialLoad$1 $r94, r125;
        androidx.paging.PageFetcherSnapshotState$Holder r95, r103, r107, r112, $r118;
        kotlinx.coroutines.sync.Mutex $r96, $r104, $r108, r113, r119;
        androidx.paging.PageFetcherSnapshotState r97, r105, r109, r114, r120;
        androidx.paging.PagingSource$LoadParams r100;
        androidx.paging.PagingSource$LoadResult r102;
        androidx.paging.PagingState r115, r117;
        androidx.paging.LoadState$Error r121, r126;
        java.lang.IllegalStateException r127;

        r93 := @this: androidx.paging.PageFetcherSnapshot;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.paging.PageFetcherSnapshot$doInitialLoad$1;

        if $z0 == 0 goto label01;

        $r94 = (androidx.paging.PageFetcherSnapshot$doInitialLoad$1) r0;

        $i0 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label>;

        $i3 = $i2 - -2147483648;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = $i3;

        goto label02;

     label01:
        r125 = new androidx.paging.PageFetcherSnapshot$doInitialLoad$1;

        specialinvoke r125.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r93, r0);

        $r94 = r125;

     label02:
        $r1 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label14;
            case 4: goto label16;
            case 5: goto label25;
            case 6: goto label28;
            case 7: goto label36;
            case 8: goto label44;
            case 9: goto label47;
            default: goto label56;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r95 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r96 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r95);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r95;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = $r96;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 1;

        r128 = (kotlin.coroutines.Continuation) $r94;

        $r86 = interfaceinvoke $r96.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r128);

        if $r86 != r2 goto label05;

        return r2;

     label04:
        $r81 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        $r96 = (kotlinx.coroutines.sync.Mutex) $r81;

        $r82 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r95 = (androidx.paging.PageFetcherSnapshotState$Holder) $r82;

        $r83 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r83;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label05:
        r97 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r95);

        $r84 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = $r96;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 2;

        r129 = (kotlin.coroutines.Continuation) $r94;

        $r85 = specialinvoke r93.<androidx.paging.PageFetcherSnapshot: java.lang.Object setLoading(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,kotlin.coroutines.Continuation)>(r97, $r84, r129);

     label06:
        if $r85 != r2 goto label09;

        return r2;

     label07:
        $r76 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        $r96 = (kotlinx.coroutines.sync.Mutex) $r76;

        $r77 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r77;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        $r98 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label10:
        interfaceinvoke $r96.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label13;

     label11:
        $r89 := @caughtexception;

     label12:
        interfaceinvoke $r96.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw $r89;

     label13:
        $r78 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r79 = virtualinvoke r93.<androidx.paging.PageFetcherSnapshot: java.lang.Object getInitialKey$paging_common()>();

        r100 = specialinvoke r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource$LoadParams loadParams(androidx.paging.LoadType,java.lang.Object)>($r78, $r79);

        $r80 = virtualinvoke r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource getPagingSource$paging_common()>();

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 3;

        r130 = (kotlin.coroutines.Continuation) $r94;

        $r101 = virtualinvoke $r80.<androidx.paging.PagingSource: java.lang.Object load(androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>(r100, r130);

        if $r101 != r2 goto label15;

        return r2;

     label14:
        $r73 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r73;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r101 = $r1;

     label15:
        r102 = (androidx.paging.PagingSource$LoadResult) $r101;

        $z1 = r102 instanceof androidx.paging.PagingSource$LoadResult$Page;

        if $z1 == 0 goto label43;

        r103 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r104 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r103);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r102;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = r103;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = $r104;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 4;

        r131 = (kotlin.coroutines.Continuation) $r94;

        $r75 = interfaceinvoke $r104.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r131);

        if $r75 != r2 goto label17;

        return r2;

     label16:
        $r47 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3>;

        $r104 = (kotlinx.coroutines.sync.Mutex) $r47;

        $r48 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        r103 = (androidx.paging.PageFetcherSnapshotState$Holder) $r48;

        $r49 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r102 = (androidx.paging.PagingSource$LoadResult) $r49;

        $r50 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r50;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label17:
        r105 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r103);

        $r52 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r51 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        z4 = virtualinvoke r105.<androidx.paging.PageFetcherSnapshotState: boolean insert(int,androidx.paging.LoadType,androidx.paging.PagingSource$LoadResult$Page)>(0, $r52, $r51);

        $r53 = virtualinvoke r105.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r55 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r54 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r56 = virtualinvoke $r54.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

        $r57 = (androidx.paging.LoadState) $r56;

        virtualinvoke $r53.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>($r55, $r57);

        $r58 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r59 = virtualinvoke $r58.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if $r59 != null goto label18;

        $r68 = virtualinvoke r105.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r70 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        $r69 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r71 = virtualinvoke $r69.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getComplete$paging_common()>();

        $r72 = (androidx.paging.LoadState) $r71;

        virtualinvoke $r68.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>($r70, $r72);

     label18:
        $r60 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r61 = virtualinvoke $r60.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        if $r61 != null goto label19;

        $r63 = virtualinvoke r105.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r65 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        $r64 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r66 = virtualinvoke $r64.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getComplete$paging_common()>();

        $r67 = (androidx.paging.LoadState) $r66;

        virtualinvoke $r63.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>($r65, $r67);

     label19:
        if z4 == 0 goto label20;

        $z5 = 1;

        goto label21;

     label20:
        $z5 = 0;

     label21:
        interfaceinvoke $r104.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label24;

     label22:
        $r92 := @caughtexception;

     label23:
        interfaceinvoke $r104.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw $r92;

     label24:
        if $z5 == 0 goto label34;

        r107 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r108 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r107);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r102;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = r107;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = $r108;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 5;

        r132 = (kotlin.coroutines.Continuation) $r94;

        $r62 = interfaceinvoke $r108.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r132);

        if $r62 != r2 goto label26;

        return r2;

     label25:
        $r38 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3>;

        $r108 = (kotlinx.coroutines.sync.Mutex) $r38;

        $r39 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        r107 = (androidx.paging.PageFetcherSnapshotState$Holder) $r39;

        $r40 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r102 = (androidx.paging.PagingSource$LoadResult) $r40;

        $r41 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r41;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label26:
        r109 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r107);

        $r44 = r93.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        $r43 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r42 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r45 = virtualinvoke r109.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PageEvent toPageEvent$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.LoadType)>($r43, $r42);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r102;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = $r108;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 6;

        r133 = (kotlin.coroutines.Continuation) $r94;

        $r46 = interfaceinvoke $r44.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>($r45, r133);

     label27:
        if $r46 != r2 goto label30;

        return r2;

     label28:
        $r29 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        $r108 = (kotlinx.coroutines.sync.Mutex) $r29;

        $r30 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r102 = (androidx.paging.PagingSource$LoadResult) $r30;

        $r31 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r31;

     label29:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label30:
        $r110 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label31:
        interfaceinvoke $r108.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label34;

     label32:
        $r91 := @caughtexception;

     label33:
        interfaceinvoke $r108.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw $r91;

     label34:
        $r32 = virtualinvoke r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        if $r32 == null goto label55;

        $r33 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r34 = virtualinvoke $r33.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if $r34 == null goto label35;

        $r36 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r37 = virtualinvoke $r36.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        if $r37 != null goto label55;

     label35:
        r112 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r113 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r112);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r102;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = r112;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = r113;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 7;

        r134 = (kotlin.coroutines.Continuation) $r94;

        $r35 = interfaceinvoke r113.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r134);

        if $r35 != r2 goto label37;

        return r2;

     label36:
        $r15 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3>;

        r113 = (kotlinx.coroutines.sync.Mutex) $r15;

        $r16 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        r112 = (androidx.paging.PageFetcherSnapshotState$Holder) $r16;

        $r17 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r102 = (androidx.paging.PagingSource$LoadResult) $r17;

        $r18 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r18;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label37:
        r114 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r112);

        $r19 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        $r20 = virtualinvoke $r19.<androidx.paging.HintHandler: androidx.paging.ViewportHint$Access getLastAccessHint()>();

        r115 = virtualinvoke r114.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PagingState currentPagingState$paging_common(androidx.paging.ViewportHint$Access)>($r20);

     label38:
        interfaceinvoke r113.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label41;

     label39:
        $r88 := @caughtexception;

        r116 = $r88;

     label40:
        interfaceinvoke r113.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r116;

     label41:
        r117 = r115;

        $r21 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r22 = virtualinvoke $r21.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if $r22 != null goto label42;

        $r27 = virtualinvoke r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        $r28 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        interfaceinvoke $r27.<androidx.paging.RemoteMediatorConnection: void requestLoad(androidx.paging.LoadType,androidx.paging.PagingState)>($r28, r117);

     label42:
        $r23 = (androidx.paging.PagingSource$LoadResult$Page) r102;

        $r24 = virtualinvoke $r23.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        if $r24 != null goto label55;

        $r25 = virtualinvoke r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        $r26 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        interfaceinvoke $r25.<androidx.paging.RemoteMediatorConnection: void requestLoad(androidx.paging.LoadType,androidx.paging.PagingState)>($r26, r117);

        goto label55;

     label43:
        $z2 = r102 instanceof androidx.paging.PagingSource$LoadResult$Error;

        if $z2 == 0 goto label54;

        $r118 = r93.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r119 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>($r118);

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r93;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = r102;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = $r118;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = r119;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 8;

        r135 = (kotlin.coroutines.Continuation) $r94;

        $r74 = interfaceinvoke r119.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r135);

        if $r74 != r2 goto label45;

        return r2;

     label44:
        $r6 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3>;

        r119 = (kotlinx.coroutines.sync.Mutex) $r6;

        $r7 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2>;

        $r118 = (androidx.paging.PageFetcherSnapshotState$Holder) $r7;

        $r8 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1>;

        r102 = (androidx.paging.PagingSource$LoadResult) $r8;

        $r9 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r93 = (androidx.paging.PageFetcherSnapshot) $r9;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label45:
        r120 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>($r118);

        r126 = new androidx.paging.LoadState$Error;

        $r11 = (androidx.paging.PagingSource$LoadResult$Error) r102;

        $r12 = virtualinvoke $r11.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable getThrowable()>();

        specialinvoke r126.<androidx.paging.LoadState$Error: void <init>(java.lang.Throwable)>($r12);

        r121 = r126;

        $r13 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0> = r119;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$1> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$2> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$3> = null;

        $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: int label> = 9;

        r136 = (kotlin.coroutines.Continuation) $r94;

        $r14 = specialinvoke r93.<androidx.paging.PageFetcherSnapshot: java.lang.Object setError(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,androidx.paging.LoadState$Error,kotlin.coroutines.Continuation)>(r120, $r13, r121, r136);

     label46:
        if $r14 != r2 goto label49;

        return r2;

     label47:
        $r4 = $r94.<androidx.paging.PageFetcherSnapshot$doInitialLoad$1: java.lang.Object L$0>;

        r119 = (kotlinx.coroutines.sync.Mutex) $r4;

     label48:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label49:
        r122 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label50:
        interfaceinvoke r119.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label53;

     label51:
        $r90 := @caughtexception;

        r123 = $r90;

     label52:
        interfaceinvoke r119.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r123;

     label53:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;

     label54:
        $z3 = r102 instanceof androidx.paging.PagingSource$LoadResult$Invalid;

        if $z3 == 0 goto label55;

        specialinvoke r93.<androidx.paging.PageFetcherSnapshot: void onInvalidLoad()>();

     label55:
        $r124 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r124;

     label56:
        r127 = new java.lang.IllegalStateException;

        specialinvoke r127.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r127;

        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label17 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label26 to label27 with label32;
        catch java.lang.Throwable from label29 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.Throwable from label45 to label46 with label51;
        catch java.lang.Throwable from label48 to label50 with label51;
        catch java.lang.Throwable from label51 to label52 with label51;
    }

    private final java.lang.Object doLoad(androidx.paging.LoadType, androidx.paging.GenerationalViewportHint, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r271, r272, r273, r274, r275, r276, r277, r278, r279, r280, r281;
        java.lang.Object r1, $r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r18, $r21, $r23, $r25, $r27, $r36, $r40, $r45, $r52, $r54, $r58, $r67, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r160, $r162, $r169, $r178, r205, $r206, r207, r208, $r211, $r213, $r217, r218, $r244, $r245, $r250;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12, z13, z14, $z15;
        androidx.paging.HintHandler $r13;
        androidx.paging.ViewportHint$Access $r14;
        kotlin.Unit $r15, $r22, $r35, $r41, r198, r231, r251;
        androidx.paging.PagingSource $r17, $r44;
        androidx.paging.ViewportHint $r19, $r108, $r148, $r157, $r166, $r243;
        kotlinx.coroutines.channels.Channel $r20, $r249;
        androidx.paging.PagingSource$LoadResult$Page $r24, $r26, $r43, $r46, $r47, $r51, $r53, $r68, $r163, $r170, $r247;
        androidx.paging.MutableLoadStateCollection $r28, $r30;
        androidx.paging.LoadState $r29, $r32;
        androidx.paging.LoadState$NotLoading$Companion $r31, $r33;
        androidx.paging.LoadType $r34, $r49, $r50, $r55, $r71, $r73, $r176, r190, r216, r233, $r235, r236;
        androidx.paging.PagingSource$LoadResult$Error $r38;
        java.lang.Throwable $r39, $r66, $r181, $r183, $r184, $r185, $r186, $r187, $r188, r199, r209, r225, r232, r252, r258;
        int[] $r42, $r156, $r234;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i48, i49, $i50, $i51, $i52, $i53, i55, i57;
        java.util.List $r48, $r158, $r161, $r164, $r167, $r168, $r171, $r173, $r174;
        java.lang.StringBuilder $r57, $r59, $r60, $r61, $r62, r267;
        java.lang.String $r63, $r65, $r180, r193, $r219, r220, r221;
        androidx.paging.RemoteMediatorConnection $r70, $r72, $r253;
        androidx.paging.PagingConfig $r165, $r172;
        androidx.paging.PageFetcherSnapshot r189;
        androidx.paging.GenerationalViewportHint r191;
        androidx.paging.PageFetcherSnapshot$doLoad$1 $r192, r260;
        kotlin.jvm.internal.Ref$IntRef r194, r262;
        androidx.paging.PageFetcherSnapshotState$Holder r195, r201, r222, r226, r237, r254;
        kotlinx.coroutines.sync.Mutex $r196, r203, $r223, r227, r238, r255;
        androidx.paging.PageFetcherSnapshotState r197, r204, r224, r228, r239, r256;
        kotlin.jvm.internal.Ref$ObjectRef r200, r202, r264;
        kotlin.jvm.internal.Ref$BooleanRef r210, r265;
        androidx.paging.PagingSource$LoadParams $r212;
        androidx.paging.PagingSource$LoadResult r214, r215;
        androidx.paging.LoadState$Error r229, r269;
        java.util.Map r230;
        androidx.paging.PageEvent$Drop r240, r241, r242;
        androidx.paging.LoadState$NotLoading $r246;
        androidx.paging.PageEvent r248;
        byte $b54, $b56;
        androidx.paging.PagingState r257, r259;
        java.lang.IllegalArgumentException r261, r266;
        java.lang.IllegalStateException r263, r268, r270;

        r189 := @this: androidx.paging.PageFetcherSnapshot;

        r190 := @parameter0: androidx.paging.LoadType;

        r191 := @parameter1: androidx.paging.GenerationalViewportHint;

        r0 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.paging.PageFetcherSnapshot$doLoad$1;

        if $z0 == 0 goto label001;

        $r192 = (androidx.paging.PageFetcherSnapshot$doLoad$1) r0;

        $i34 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label>;

        $i35 = $i34 & -2147483648;

        if $i35 == 0 goto label001;

        $i36 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label>;

        $i37 = $i36 - -2147483648;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = $i37;

        goto label002;

     label001:
        r260 = new androidx.paging.PageFetcherSnapshot$doLoad$1;

        specialinvoke r260.<androidx.paging.PageFetcherSnapshot$doLoad$1: void <init>(androidx.paging.PageFetcherSnapshot,kotlin.coroutines.Continuation)>(r189, r0);

        $r192 = r260;

     label002:
        $r2 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i38 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label>;

        tableswitch($i38)
        {
            case 0: goto label003;
            case 1: goto label007;
            case 2: goto label021;
            case 3: goto label025;
            case 4: goto label034;
            case 5: goto label046;
            case 6: goto label056;
            case 7: goto label059;
            case 8: goto label070;
            case 9: goto label074;
            case 10: goto label082;
            case 11: goto label094;
            default: goto label102;
        };

     label003:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r176 = <androidx.paging.LoadType: androidx.paging.LoadType REFRESH>;

        if r190 == $r176 goto label004;

        $z9 = 1;

        goto label005;

     label004:
        $z9 = 0;

     label005:
        z10 = $z9;

        if z10 != 0 goto label006;

        r193 = "Use doInitialLoad for LoadType == REFRESH";

        r261 = new java.lang.IllegalArgumentException;

        $r180 = virtualinvoke r193.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r261.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r180);

        $r181 = (java.lang.Throwable) r261;

        throw $r181;

     label006:
        r262 = new kotlin.jvm.internal.Ref$IntRef;

        specialinvoke r262.<kotlin.jvm.internal.Ref$IntRef: void <init>()>();

        r194 = r262;

        r195 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r196 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r195);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r195;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = $r196;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 1;

        r271 = (kotlin.coroutines.Continuation) $r192;

        $r178 = interfaceinvoke $r196.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r271);

        if $r178 != r3 goto label008;

        return r3;

     label007:
        $r150 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        $r196 = (kotlinx.coroutines.sync.Mutex) $r150;

        $r151 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r195 = (androidx.paging.PageFetcherSnapshotState$Holder) $r151;

        $r152 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r152;

        $r153 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r153;

        $r154 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r154;

        $r155 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r155;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label008:
        r197 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r195);

        $r156 = <androidx.paging.PageFetcherSnapshot$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i9 = virtualinvoke r190.<androidx.paging.LoadType: int ordinal()>();

        i39 = $r156[$i9];

        tableswitch(i39)
        {
            case 1: goto label015;
            case 2: goto label009;
            case 3: goto label012;
            default: goto label016;
        };

     label009:
        $i21 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: int getInitialPageIndex$paging_common()>();

        $r166 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $i22 = virtualinvoke $r166.<androidx.paging.ViewportHint: int getOriginalPageOffsetFirst()>();

        $i23 = $i21 + $i22;

        i40 = $i23 - 1;

        $r167 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $i24 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r167);

        if i40 <= $i24 goto label010;

        $i28 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r172 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i29 = $r172.<androidx.paging.PagingConfig: int pageSize>;

        $r173 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $i30 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r173);

        $i31 = i40 - $i30;

        $i32 = $i29 * $i31;

        $i33 = $i28 + $i32;

        r194.<kotlin.jvm.internal.Ref$IntRef: int element> = $i33;

        $r174 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        i40 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r174);

     label010:
        i41 = 0;

        if 0 > i40 goto label016;

     label011:
        i42 = i41;

        i41 = i41 + 1;

        $i25 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r168 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $r169 = interfaceinvoke $r168.<java.util.List: java.lang.Object get(int)>(i42);

        $r170 = (androidx.paging.PagingSource$LoadResult$Page) $r169;

        $r171 = virtualinvoke $r170.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i26 = interfaceinvoke $r171.<java.util.List: int size()>();

        $i27 = $i25 + $i26;

        r194.<kotlin.jvm.internal.Ref$IntRef: int element> = $i27;

        if i42 != i40 goto label011;

        goto label016;

     label012:
        $i10 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: int getInitialPageIndex$paging_common()>();

        $r157 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $i11 = virtualinvoke $r157.<androidx.paging.ViewportHint: int getOriginalPageOffsetLast()>();

        $i12 = $i10 + $i11;

        i43 = $i12 + 1;

        if i43 >= 0 goto label013;

        $i19 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r165 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i17 = $r165.<androidx.paging.PagingConfig: int pageSize>;

        $i16 = neg i43;

        $i18 = $i17 * $i16;

        $i20 = $i19 + $i18;

        r194.<kotlin.jvm.internal.Ref$IntRef: int element> = $i20;

        i43 = 0;

     label013:
        i44 = i43;

        $r158 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        i45 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r158);

        if i44 > i45 goto label016;

     label014:
        i46 = i44;

        i44 = i44 + 1;

        $i13 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r161 = virtualinvoke r197.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $r162 = interfaceinvoke $r161.<java.util.List: java.lang.Object get(int)>(i46);

        $r163 = (androidx.paging.PagingSource$LoadResult$Page) $r162;

        $r164 = virtualinvoke $r163.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i14 = interfaceinvoke $r164.<java.util.List: int size()>();

        $i15 = $i13 + $i14;

        r194.<kotlin.jvm.internal.Ref$IntRef: int element> = $i15;

        if i46 != i45 goto label014;

        goto label016;

     label015:
        r263 = new java.lang.IllegalStateException;

        specialinvoke r263.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Use doInitialLoad for LoadType == REFRESH");

        throw r263;

     label016:
        r198 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label017:
        interfaceinvoke $r196.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label020;

     label018:
        $r188 := @caughtexception;

        r199 = $r188;

     label019:
        interfaceinvoke $r196.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r199;

     label020:
        r264 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r264.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r200 = r264;

        r201 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r202 = r200;

        r203 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r201);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r201;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = r203;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r202;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 2;

        r272 = (kotlin.coroutines.Continuation) $r192;

        $r160 = interfaceinvoke r203.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r272);

        if $r160 != r3 goto label022;

        return r3;

     label021:
        $r140 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r202 = (kotlin.jvm.internal.Ref$ObjectRef) $r140;

        $r141 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        r203 = (kotlinx.coroutines.sync.Mutex) $r141;

        $r142 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r201 = (androidx.paging.PageFetcherSnapshotState$Holder) $r142;

        $r143 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r143;

        $r144 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r144;

        $r145 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r145;

        $r146 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r146;

        $r147 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r147;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label022:
        r204 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r201);

        $i5 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        $r148 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $i6 = virtualinvoke $r148.<androidx.paging.ViewportHint: int presentedItemsBeyondAnchor$paging_common(androidx.paging.LoadType)>(r190);

        $i7 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i8 = $i6 + $i7;

        r205 = specialinvoke r189.<androidx.paging.PageFetcherSnapshot: java.lang.Object nextLoadKeyOrNull(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,int,int)>(r204, r190, $i5, $i8);

        if r205 != null goto label023;

        $r206 = null;

        goto label028;

     label023:
        r207 = r205;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r203;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = r207;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r202;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 3;

        r273 = (kotlin.coroutines.Continuation) $r192;

        $r149 = specialinvoke r189.<androidx.paging.PageFetcherSnapshot: java.lang.Object setLoading(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,kotlin.coroutines.Continuation)>(r204, r190, r273);

     label024:
        if $r149 != r3 goto label027;

        return r3;

     label025:
        $r132 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r202 = (kotlin.jvm.internal.Ref$ObjectRef) $r132;

        r207 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r133 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r203 = (kotlinx.coroutines.sync.Mutex) $r133;

        $r134 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r134;

        $r135 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r135;

        $r136 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r136;

        $r137 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r137;

        $r138 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r138;

     label026:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label027:
        $r206 = r207;

     label028:
        r208 = $r206;

     label029:
        interfaceinvoke r203.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label032;

     label030:
        $r185 := @caughtexception;

        r209 = $r185;

     label031:
        interfaceinvoke r203.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r209;

     label032:
        r1 = r208;

        r202.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r1;

        r265 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke r265.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r210 = r265;

     label033:
        $r211 = r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r211 == null goto label101;

        $r16 = r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r212 = specialinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource$LoadParams loadParams(androidx.paging.LoadType,java.lang.Object)>(r190, $r16);

        $r17 = virtualinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource getPagingSource$paging_common()>();

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = $r212;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 4;

        r274 = (kotlin.coroutines.Continuation) $r192;

        $r213 = virtualinvoke $r17.<androidx.paging.PagingSource: java.lang.Object load(androidx.paging.PagingSource$LoadParams,kotlin.coroutines.Continuation)>($r212, r274);

        if $r213 != r3 goto label035;

        return r3;

     label034:
        $r125 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r212 = (androidx.paging.PagingSource$LoadParams) $r125;

        $r126 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r126;

        $r127 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r127;

        $r128 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r128;

        $r129 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r129;

        $r130 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r130;

        $r131 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r131;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r213 = $r2;

     label035:
        r214 = (androidx.paging.PagingSource$LoadResult) $r213;

        r215 = r214;

        $z1 = r215 instanceof androidx.paging.PagingSource$LoadResult$Page;

        if $z1 == 0 goto label055;

        r216 = r190;

        $r42 = <androidx.paging.PageFetcherSnapshot$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r216.<androidx.paging.LoadType: int ordinal()>();

        i47 = $r42[$i0];

        tableswitch(i47)
        {
            case 2: goto label036;
            case 3: goto label037;
            default: goto label038;
        };

     label036:
        $r68 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r217 = virtualinvoke $r68.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        goto label039;

     label037:
        $r43 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r217 = virtualinvoke $r43.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        goto label039;

     label038:
        r266 = new java.lang.IllegalArgumentException;

        specialinvoke r266.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use doInitialLoad for LoadType == REFRESH");

        throw r266;

     label039:
        r218 = $r217;

        $r44 = virtualinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource getPagingSource$paging_common()>();

        $z7 = virtualinvoke $r44.<androidx.paging.PagingSource: boolean getKeyReuseSupported()>();

        if $z7 != 0 goto label040;

        $r67 = r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r218, $r67);

        if $z8 != 0 goto label041;

     label040:
        $z11 = 1;

        goto label042;

     label041:
        $z11 = 0;

     label042:
        z12 = $z11;

        if z12 != 0 goto label045;

        $r55 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if r190 != $r55 goto label043;

        $r219 = "prevKey";

        goto label044;

     label043:
        $r219 = "nextKey";

     label044:
        r220 = $r219;

        r267 = new java.lang.StringBuilder;

        specialinvoke r267.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The same value, ");

        $r58 = r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", was passed as the ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r220);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in two\n                            | sequential Pages loaded from a PagingSource. Re-using load keys in\n                            | PagingSource is often an error, and must be explicitly enabled by\n                            | overriding PagingSource.keyReuseSupported.\n                            ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        r221 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)>($r63, null, 1, null);

        r268 = new java.lang.IllegalStateException;

        $r65 = virtualinvoke r221.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r268.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r65);

        $r66 = (java.lang.Throwable) r268;

        throw $r66;

     label045:
        r222 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        $r223 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r222);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = $r212;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r214;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = r222;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9> = $r223;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 5;

        r275 = (kotlin.coroutines.Continuation) $r192;

        $r45 = interfaceinvoke $r223.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r275);

        if $r45 != r3 goto label047;

        return r3;

     label046:
        $r115 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9>;

        $r223 = (kotlinx.coroutines.sync.Mutex) $r115;

        $r116 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8>;

        r222 = (androidx.paging.PageFetcherSnapshotState$Holder) $r116;

        $r117 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r214 = (androidx.paging.PagingSource$LoadResult) $r117;

        $r118 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r212 = (androidx.paging.PagingSource$LoadParams) $r118;

        $r119 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r119;

        $r120 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r120;

        $r121 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r121;

        $r122 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r122;

        $r123 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r123;

        $r124 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r124;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label047:
        r224 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r222);

        $i1 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        $r46 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        z13 = virtualinvoke r224.<androidx.paging.PageFetcherSnapshotState: boolean insert(int,androidx.paging.LoadType,androidx.paging.PagingSource$LoadResult$Page)>($i1, r190, $r46);

     label048:
        interfaceinvoke $r223.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label051;

     label049:
        $r186 := @caughtexception;

        r225 = $r186;

     label050:
        interfaceinvoke $r223.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r225;

     label051:
        z14 = z13;

        if z14 != 0 goto label052;

        goto label101;

     label052:
        $i2 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $r47 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r48 = virtualinvoke $r47.<androidx.paging.PagingSource$LoadResult$Page: java.util.List getData()>();

        $i3 = interfaceinvoke $r48.<java.util.List: int size()>();

        $i4 = $i2 + $i3;

        r194.<kotlin.jvm.internal.Ref$IntRef: int element> = $i4;

        $r49 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if r190 != $r49 goto label053;

        $r53 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r54 = virtualinvoke $r53.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if $r54 == null goto label054;

     label053:
        $r50 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        if r190 != $r50 goto label067;

        $r51 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r52 = virtualinvoke $r51.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        if $r52 != null goto label067;

     label054:
        r210.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

        goto label067;

     label055:
        $z2 = r215 instanceof androidx.paging.PagingSource$LoadResult$Error;

        if $z2 == 0 goto label066;

        r226 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r227 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r226);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r214;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r226;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r227;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 6;

        r276 = (kotlin.coroutines.Continuation) $r192;

        $r36 = interfaceinvoke r227.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r276);

        if $r36 != r3 goto label057;

        return r3;

     label056:
        $r109 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r227 = (kotlinx.coroutines.sync.Mutex) $r109;

        $r110 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r226 = (androidx.paging.PageFetcherSnapshotState$Holder) $r110;

        $r111 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r214 = (androidx.paging.PagingSource$LoadResult) $r111;

        $r112 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r112;

        $r113 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r113;

        $r114 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r114;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label057:
        r228 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r226);

        r269 = new androidx.paging.LoadState$Error;

        $r38 = (androidx.paging.PagingSource$LoadResult$Error) r214;

        $r39 = virtualinvoke $r38.<androidx.paging.PagingSource$LoadResult$Error: java.lang.Throwable getThrowable()>();

        specialinvoke r269.<androidx.paging.LoadState$Error: void <init>(java.lang.Throwable)>($r39);

        r229 = r269;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r227;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r228;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 7;

        r277 = (kotlin.coroutines.Continuation) $r192;

        $r40 = specialinvoke r189.<androidx.paging.PageFetcherSnapshot: java.lang.Object setError(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,androidx.paging.LoadState$Error,kotlin.coroutines.Continuation)>(r228, r190, r229, r277);

     label058:
        if $r40 != r3 goto label061;

        return r3;

     label059:
        $r104 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r228 = (androidx.paging.PageFetcherSnapshotState) $r104;

        $r105 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r227 = (kotlinx.coroutines.sync.Mutex) $r105;

        $r106 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r191 = (androidx.paging.GenerationalViewportHint) $r106;

        $r107 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r190 = (androidx.paging.LoadType) $r107;

     label060:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label061:
        r230 = virtualinvoke r228.<androidx.paging.PageFetcherSnapshotState: java.util.Map getFailedHintsByLoadType$paging_common()>();

        $r108 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        interfaceinvoke r230.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r190, $r108);

        r231 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label062:
        interfaceinvoke r227.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label065;

     label063:
        $r187 := @caughtexception;

        r232 = $r187;

     label064:
        interfaceinvoke r227.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r232;

     label065:
        $r41 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r41;

     label066:
        $z3 = r215 instanceof androidx.paging.PagingSource$LoadResult$Invalid;

        if $z3 == 0 goto label067;

        specialinvoke r189.<androidx.paging.PageFetcherSnapshot: void onInvalidLoad()>();

        $r35 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r35;

     label067:
        r233 = r190;

        $r234 = <androidx.paging.PageFetcherSnapshot$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i48 = virtualinvoke r233.<androidx.paging.LoadType: int ordinal()>();

        i49 = $r234[$i48];

        if i49 != 2 goto label068;

        $r235 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        goto label069;

     label068:
        $r235 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

     label069:
        r236 = $r235;

        r237 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r238 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r237);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = $r212;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r214;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = r236;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9> = r237;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$10> = r238;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 8;

        r278 = (kotlin.coroutines.Continuation) $r192;

        $r18 = interfaceinvoke r238.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r278);

        if $r18 != r3 goto label071;

        return r3;

     label070:
        $r93 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$10>;

        r238 = (kotlinx.coroutines.sync.Mutex) $r93;

        $r94 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9>;

        r237 = (androidx.paging.PageFetcherSnapshotState$Holder) $r94;

        $r95 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8>;

        r236 = (androidx.paging.LoadType) $r95;

        $r96 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r214 = (androidx.paging.PagingSource$LoadResult) $r96;

        $r97 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r212 = (androidx.paging.PagingSource$LoadParams) $r97;

        $r98 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r98;

        $r99 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r99;

        $r100 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r100;

        $r101 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r101;

        $r102 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r102;

        $r103 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r103;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label071:
        r239 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r237);

        $r19 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        r240 = virtualinvoke r239.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PageEvent$Drop dropEventOrNull(androidx.paging.LoadType,androidx.paging.ViewportHint)>(r236, $r19);

        if r240 != null goto label072;

        goto label077;

     label072:
        r241 = r240;

        r242 = r241;

        virtualinvoke r239.<androidx.paging.PageFetcherSnapshotState: void drop(androidx.paging.PageEvent$Drop)>(r242);

        $r20 = r189.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = $r212;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r214;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = r238;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9> = r239;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$10> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 9;

        r279 = (kotlin.coroutines.Continuation) $r192;

        $r21 = interfaceinvoke $r20.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r242, r279);

     label073:
        if $r21 != r3 goto label076;

        return r3;

     label074:
        $r83 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9>;

        r239 = (androidx.paging.PageFetcherSnapshotState) $r83;

        $r84 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8>;

        r238 = (kotlinx.coroutines.sync.Mutex) $r84;

        $r85 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r214 = (androidx.paging.PagingSource$LoadResult) $r85;

        $r86 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r212 = (androidx.paging.PagingSource$LoadParams) $r86;

        $r87 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r87;

        $r88 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r88;

        $r89 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r89;

        $r90 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r90;

        $r91 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r91;

        $r92 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r92;

     label075:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label076:
        $r22 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label077:
        $i50 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: int getGenerationId()>();

        $r243 = virtualinvoke r191.<androidx.paging.GenerationalViewportHint: androidx.paging.ViewportHint getHint()>();

        $i51 = virtualinvoke $r243.<androidx.paging.ViewportHint: int presentedItemsBeyondAnchor$paging_common(androidx.paging.LoadType)>(r190);

        $i52 = r194.<kotlin.jvm.internal.Ref$IntRef: int element>;

        $i53 = $i51 + $i52;

        $r244 = specialinvoke r189.<androidx.paging.PageFetcherSnapshot: java.lang.Object nextLoadKeyOrNull(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,int,int)>(r239, r190, $i50, $i53);

        r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r244;

        $r245 = r200.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r245 != null goto label080;

        $r28 = virtualinvoke r239.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r29 = virtualinvoke $r28.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadState get(androidx.paging.LoadType)>(r190);

        $z5 = $r29 instanceof androidx.paging.LoadState$Error;

        if $z5 != 0 goto label080;

        $r30 = virtualinvoke r239.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r34 = r190;

        $z6 = r210.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z6 == 0 goto label078;

        $r33 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r246 = virtualinvoke $r33.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getComplete$paging_common()>();

        goto label079;

     label078:
        $r31 = <androidx.paging.LoadState$NotLoading: androidx.paging.LoadState$NotLoading$Companion Companion>;

        $r246 = virtualinvoke $r31.<androidx.paging.LoadState$NotLoading$Companion: androidx.paging.LoadState$NotLoading getIncomplete$paging_common()>();

     label079:
        $r32 = (androidx.paging.LoadState) $r246;

        virtualinvoke $r30.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>($r34, $r32);

     label080:
        $r247 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        r248 = virtualinvoke r239.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PageEvent toPageEvent$paging_common(androidx.paging.PagingSource$LoadResult$Page,androidx.paging.LoadType)>($r247, r190);

        $r249 = r189.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = $r212;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r214;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = r238;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$9> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$10> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 10;

        r280 = (kotlin.coroutines.Continuation) $r192;

        $r250 = interfaceinvoke $r249.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r248, r280);

     label081:
        if $r250 != r3 goto label084;

        return r3;

     label082:
        $r74 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8>;

        r238 = (kotlinx.coroutines.sync.Mutex) $r74;

        $r75 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r214 = (androidx.paging.PagingSource$LoadResult) $r75;

        $r76 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        $r212 = (androidx.paging.PagingSource$LoadParams) $r76;

        $r77 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r77;

        $r78 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r78;

        $r79 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r79;

        $r80 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r80;

        $r81 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r81;

        $r82 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r82;

     label083:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label084:
        r251 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label085:
        interfaceinvoke r238.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label088;

     label086:
        $r183 := @caughtexception;

        r252 = $r183;

     label087:
        interfaceinvoke r238.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r252;

     label088:
        $z4 = $r212 instanceof androidx.paging.PagingSource$LoadParams$Prepend;

        if $z4 == 0 goto label089;

        $r26 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r27 = virtualinvoke $r26.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        if $r27 != null goto label089;

        $b54 = 1;

        goto label090;

     label089:
        $b54 = 0;

     label090:
        i55 = $b54;

        $z15 = $r212 instanceof androidx.paging.PagingSource$LoadParams$Append;

        if $z15 == 0 goto label091;

        $r24 = (androidx.paging.PagingSource$LoadResult$Page) r214;

        $r25 = virtualinvoke $r24.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

        if $r25 != null goto label091;

        $b56 = 1;

        goto label092;

     label091:
        $b56 = 0;

     label092:
        i57 = $b56;

        $r253 = virtualinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        if $r253 == null goto label033;

        if i55 != 0 goto label093;

        if i57 == 0 goto label033;

     label093:
        r254 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        r255 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: kotlinx.coroutines.sync.Mutex access$getLock$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r254);

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0> = r189;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1> = r190;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2> = r191;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3> = r194;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4> = r200;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5> = r210;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6> = r254;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7> = r255;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$8> = null;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int I$0> = i55;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int I$1> = i57;

        $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int label> = 11;

        r281 = (kotlin.coroutines.Continuation) $r192;

        $r23 = interfaceinvoke r255.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r281);

        if $r23 != r3 goto label095;

        return r3;

     label094:
        i57 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int I$1>;

        i55 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: int I$0>;

        $r5 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$7>;

        r255 = (kotlinx.coroutines.sync.Mutex) $r5;

        $r6 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$6>;

        r254 = (androidx.paging.PageFetcherSnapshotState$Holder) $r6;

        $r7 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$5>;

        r210 = (kotlin.jvm.internal.Ref$BooleanRef) $r7;

        $r8 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$4>;

        r200 = (kotlin.jvm.internal.Ref$ObjectRef) $r8;

        $r9 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$3>;

        r194 = (kotlin.jvm.internal.Ref$IntRef) $r9;

        $r10 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$2>;

        r191 = (androidx.paging.GenerationalViewportHint) $r10;

        $r11 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$1>;

        r190 = (androidx.paging.LoadType) $r11;

        $r12 = $r192.<androidx.paging.PageFetcherSnapshot$doLoad$1: java.lang.Object L$0>;

        r189 = (androidx.paging.PageFetcherSnapshot) $r12;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label095:
        r256 = staticinvoke <androidx.paging.PageFetcherSnapshotState$Holder: androidx.paging.PageFetcherSnapshotState access$getState$p(androidx.paging.PageFetcherSnapshotState$Holder)>(r254);

        $r13 = r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        $r14 = virtualinvoke $r13.<androidx.paging.HintHandler: androidx.paging.ViewportHint$Access getLastAccessHint()>();

        r257 = virtualinvoke r256.<androidx.paging.PageFetcherSnapshotState: androidx.paging.PagingState currentPagingState$paging_common(androidx.paging.ViewportHint$Access)>($r14);

     label096:
        interfaceinvoke r255.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label099;

     label097:
        $r184 := @caughtexception;

        r258 = $r184;

     label098:
        interfaceinvoke r255.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r258;

     label099:
        r259 = r257;

        if i55 == 0 goto label100;

        $r72 = virtualinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        $r73 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        interfaceinvoke $r72.<androidx.paging.RemoteMediatorConnection: void requestLoad(androidx.paging.LoadType,androidx.paging.PagingState)>($r73, r259);

     label100:
        if i57 == 0 goto label033;

        $r70 = virtualinvoke r189.<androidx.paging.PageFetcherSnapshot: androidx.paging.RemoteMediatorConnection getRemoteMediatorConnection()>();

        $r71 = <androidx.paging.LoadType: androidx.paging.LoadType APPEND>;

        interfaceinvoke $r70.<androidx.paging.RemoteMediatorConnection: void requestLoad(androidx.paging.LoadType,androidx.paging.PagingState)>($r71, r259);

        goto label033;

     label101:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r15;

     label102:
        r270 = new java.lang.IllegalStateException;

        specialinvoke r270.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r270;

        catch java.lang.Throwable from label008 to label017 with label018;
        catch java.lang.Throwable from label018 to label019 with label018;
        catch java.lang.Throwable from label022 to label024 with label030;
        catch java.lang.Throwable from label026 to label029 with label030;
        catch java.lang.Throwable from label030 to label031 with label030;
        catch java.lang.Throwable from label047 to label048 with label049;
        catch java.lang.Throwable from label049 to label050 with label049;
        catch java.lang.Throwable from label057 to label058 with label063;
        catch java.lang.Throwable from label060 to label062 with label063;
        catch java.lang.Throwable from label063 to label064 with label063;
        catch java.lang.Throwable from label071 to label073 with label086;
        catch java.lang.Throwable from label075 to label081 with label086;
        catch java.lang.Throwable from label083 to label085 with label086;
        catch java.lang.Throwable from label086 to label087 with label086;
        catch java.lang.Throwable from label095 to label096 with label097;
        catch java.lang.Throwable from label097 to label098 with label097;
    }

    private final java.lang.Object setLoading(androidx.paging.PageFetcherSnapshotState, androidx.paging.LoadType, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.PageFetcherSnapshotState $r1;
        androidx.paging.LoadType r2;
        kotlin.coroutines.Continuation $r3;
        androidx.paging.MutableLoadStateCollection $r4, $r8, $r13;
        androidx.paging.LoadState $r5, $r10;
        androidx.paging.LoadState$Loading $r6, $r9;
        boolean $z0;
        kotlin.Unit $r7, $r17;
        androidx.paging.PageEvent$LoadStateUpdate $r11;
        kotlinx.coroutines.channels.Channel $r12;
        androidx.paging.LoadStates $r14;
        java.lang.Object $r15, $r16;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter0: androidx.paging.PageFetcherSnapshotState;

        r2 := @parameter1: androidx.paging.LoadType;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r5 = virtualinvoke $r4.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadState get(androidx.paging.LoadType)>(r2);

        $r6 = <androidx.paging.LoadState$Loading: androidx.paging.LoadState$Loading INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label2;

        $r8 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r9 = <androidx.paging.LoadState$Loading: androidx.paging.LoadState$Loading INSTANCE>;

        $r10 = (androidx.paging.LoadState) $r9;

        virtualinvoke $r8.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>(r2, $r10);

        $r12 = r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        $r11 = new androidx.paging.PageEvent$LoadStateUpdate;

        $r13 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r14 = virtualinvoke $r13.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadStates snapshot()>();

        specialinvoke $r11.<androidx.paging.PageEvent$LoadStateUpdate: void <init>(androidx.paging.LoadStates,androidx.paging.LoadStates)>($r14, null);

        $r15 = interfaceinvoke $r12.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>($r11, $r3);

        $r16 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r15 != $r16 goto label1;

        return $r15;

     label1:
        $r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r17;

     label2:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    private final java.lang.Object setError(androidx.paging.PageFetcherSnapshotState, androidx.paging.LoadType, androidx.paging.LoadState$Error, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.PageFetcherSnapshotState $r1;
        androidx.paging.LoadType r2;
        androidx.paging.LoadState$Error r3;
        kotlin.coroutines.Continuation $r4;
        androidx.paging.MutableLoadStateCollection $r5, $r8, $r12;
        androidx.paging.LoadState $r6, $r9;
        boolean $z0;
        kotlin.Unit $r7, $r16;
        androidx.paging.PageEvent$LoadStateUpdate $r10;
        kotlinx.coroutines.channels.Channel $r11;
        androidx.paging.LoadStates $r13;
        java.lang.Object $r14, $r15;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter0: androidx.paging.PageFetcherSnapshotState;

        r2 := @parameter1: androidx.paging.LoadType;

        r3 := @parameter2: androidx.paging.LoadState$Error;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        $r5 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r6 = virtualinvoke $r5.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadState get(androidx.paging.LoadType)>(r2);

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r3);

        if $z0 != 0 goto label2;

        $r8 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r9 = (androidx.paging.LoadState) r3;

        virtualinvoke $r8.<androidx.paging.MutableLoadStateCollection: void set(androidx.paging.LoadType,androidx.paging.LoadState)>(r2, $r9);

        $r11 = r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        $r10 = new androidx.paging.PageEvent$LoadStateUpdate;

        $r12 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r13 = virtualinvoke $r12.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadStates snapshot()>();

        specialinvoke $r10.<androidx.paging.PageEvent$LoadStateUpdate: void <init>(androidx.paging.LoadStates,androidx.paging.LoadStates)>($r13, null);

        $r14 = interfaceinvoke $r11.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>($r10, $r4);

        $r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r14 != $r15 goto label1;

        return $r14;

     label1:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r16;

     label2:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    private final java.lang.Object nextLoadKeyOrNull(androidx.paging.PageFetcherSnapshotState, androidx.paging.LoadType, int, int)
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.PageFetcherSnapshotState $r1;
        androidx.paging.LoadType r2, $r6;
        int i0, i1, $i2, $i3;
        androidx.paging.MutableLoadStateCollection $r3;
        androidx.paging.LoadState $r4;
        boolean $z0;
        androidx.paging.PagingConfig $r5;
        java.util.List $r7, $r10;
        java.lang.Object $r8, $r11, $r13;
        androidx.paging.PagingSource$LoadResult$Page $r9, $r12;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter0: androidx.paging.PageFetcherSnapshotState;

        r2 := @parameter1: androidx.paging.LoadType;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: int generationId$paging_common(androidx.paging.LoadType)>(r2);

        if i0 == $i2 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: androidx.paging.MutableLoadStateCollection getSourceLoadStates$paging_common()>();

        $r4 = virtualinvoke $r3.<androidx.paging.MutableLoadStateCollection: androidx.paging.LoadState get(androidx.paging.LoadType)>(r2);

        $z0 = $r4 instanceof androidx.paging.LoadState$Error;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r5 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        $i3 = $r5.<androidx.paging.PagingConfig: int prefetchDistance>;

        if i1 < $i3 goto label3;

        return null;

     label3:
        $r6 = <androidx.paging.LoadType: androidx.paging.LoadType PREPEND>;

        if r2 != $r6 goto label4;

        $r10 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r10);

        $r12 = (androidx.paging.PagingSource$LoadResult$Page) $r11;

        $r13 = virtualinvoke $r12.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getPrevKey()>();

        goto label5;

     label4:
        $r7 = virtualinvoke $r1.<androidx.paging.PageFetcherSnapshotState: java.util.List getPages$paging_common()>();

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r7);

        $r9 = (androidx.paging.PagingSource$LoadResult$Page) $r8;

        $r13 = virtualinvoke $r9.<androidx.paging.PagingSource$LoadResult$Page: java.lang.Object getNextKey()>();

     label5:
        return $r13;
    }

    private final void onInvalidLoad()
    {
        androidx.paging.PageFetcherSnapshot r0;
        androidx.paging.PagingSource $r1;

        r0 := @this: androidx.paging.PageFetcherSnapshot;

        virtualinvoke r0.<androidx.paging.PageFetcherSnapshot: void close()>();

        $r1 = r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingSource pagingSource>;

        virtualinvoke $r1.<androidx.paging.PagingSource: void invalidate()>();

        return;
    }

    public static final java.lang.Object access$retryLoadError(androidx.paging.PageFetcherSnapshot, androidx.paging.LoadType, androidx.paging.ViewportHint, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.LoadType r1;
        androidx.paging.ViewportHint r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter1: androidx.paging.LoadType;

        r2 := @parameter2: androidx.paging.ViewportHint;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object retryLoadError(androidx.paging.LoadType,androidx.paging.ViewportHint,kotlin.coroutines.Continuation)>(r1, r2, $r3);

        return $r4;
    }

    public static final java.lang.Object access$collectAsGenerationalViewportHints(androidx.paging.PageFetcherSnapshot, kotlinx.coroutines.flow.Flow, androidx.paging.LoadType, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlinx.coroutines.flow.Flow $r1;
        androidx.paging.LoadType r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter1: kotlinx.coroutines.flow.Flow;

        r2 := @parameter2: androidx.paging.LoadType;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object collectAsGenerationalViewportHints(kotlinx.coroutines.flow.Flow,androidx.paging.LoadType,kotlin.coroutines.Continuation)>($r1, r2, $r3);

        return $r4;
    }

    public static final androidx.paging.PageFetcherSnapshotState$Holder access$getStateHolder$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.PageFetcherSnapshotState$Holder $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PageFetcherSnapshotState$Holder stateHolder>;

        return $r1;
    }

    public static final java.lang.Object access$doInitialLoad(androidx.paging.PageFetcherSnapshot, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object doInitialLoad(kotlin.coroutines.Continuation)>($r1);

        return $r2;
    }

    public static final java.lang.Object access$doLoad(androidx.paging.PageFetcherSnapshot, androidx.paging.LoadType, androidx.paging.GenerationalViewportHint, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.LoadType r1;
        androidx.paging.GenerationalViewportHint r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        r1 := @parameter1: androidx.paging.LoadType;

        r2 := @parameter2: androidx.paging.GenerationalViewportHint;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object doLoad(androidx.paging.LoadType,androidx.paging.GenerationalViewportHint,kotlin.coroutines.Continuation)>(r1, r2, $r3);

        return $r4;
    }

    public static final java.lang.Object access$setLoading(androidx.paging.PageFetcherSnapshot, androidx.paging.PageFetcherSnapshotState, androidx.paging.LoadType, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.PageFetcherSnapshotState $r1;
        androidx.paging.LoadType r2;
        kotlin.coroutines.Continuation $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter1: androidx.paging.PageFetcherSnapshotState;

        r2 := @parameter2: androidx.paging.LoadType;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r4 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object setLoading(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,kotlin.coroutines.Continuation)>($r1, r2, $r3);

        return $r4;
    }

    public static final java.lang.Object access$setError(androidx.paging.PageFetcherSnapshot, androidx.paging.PageFetcherSnapshotState, androidx.paging.LoadType, androidx.paging.LoadState$Error, kotlin.coroutines.Continuation)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.PageFetcherSnapshotState $r1;
        androidx.paging.LoadType r2;
        androidx.paging.LoadState$Error r3;
        kotlin.coroutines.Continuation $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter1: androidx.paging.PageFetcherSnapshotState;

        r2 := @parameter2: androidx.paging.LoadType;

        r3 := @parameter3: androidx.paging.LoadState$Error;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        $r5 = specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: java.lang.Object setError(androidx.paging.PageFetcherSnapshotState,androidx.paging.LoadType,androidx.paging.LoadState$Error,kotlin.coroutines.Continuation)>($r1, r2, r3, $r4);

        return $r5;
    }

    public static final androidx.paging.HintHandler access$getHintHandler$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.HintHandler $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.HintHandler hintHandler>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getInvalidate$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: kotlin.jvm.functions.Function0 invalidate>;

        return $r1;
    }

    public static final androidx.paging.PagingConfig access$getConfig$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.PagingConfig $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingConfig config>;

        return $r1;
    }

    public static final java.util.concurrent.atomic.AtomicBoolean access$getPageEventChCollected$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: java.util.concurrent.atomic.AtomicBoolean pageEventChCollected>;

        return $r1;
    }

    public static final kotlinx.coroutines.channels.Channel access$getPageEventCh$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlinx.coroutines.channels.Channel $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.channels.Channel pageEventCh>;

        return $r1;
    }

    public static final kotlinx.coroutines.flow.Flow access$getRetryFlow$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlinx.coroutines.flow.Flow $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: kotlinx.coroutines.flow.Flow retryFlow>;

        return $r1;
    }

    public static final void access$startConsumingHints(androidx.paging.PageFetcherSnapshot, kotlinx.coroutines.CoroutineScope)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 := @parameter1: kotlinx.coroutines.CoroutineScope;

        specialinvoke $r0.<androidx.paging.PageFetcherSnapshot: void startConsumingHints(kotlinx.coroutines.CoroutineScope)>($r1);

        return;
    }

    public static final boolean access$getTriggerRemoteRefresh$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $z0 = $r0.<androidx.paging.PageFetcherSnapshot: boolean triggerRemoteRefresh>;

        return $z0;
    }

    public static final androidx.paging.PagingState access$getPreviousPagingState$p(androidx.paging.PageFetcherSnapshot)
    {
        androidx.paging.PageFetcherSnapshot $r0;
        androidx.paging.PagingState $r1;

        $r0 := @parameter0: androidx.paging.PageFetcherSnapshot;

        $r1 = $r0.<androidx.paging.PageFetcherSnapshot: androidx.paging.PagingState previousPagingState>;

        return $r1;
    }

