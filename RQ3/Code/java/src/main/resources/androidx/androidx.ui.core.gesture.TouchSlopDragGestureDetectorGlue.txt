androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue
<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver touchSlopDragObserver>
<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean started>
<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean enabled>
<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver rawDragObserver>
    public void <init>()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 $r1;
        androidx.ui.core.gesture.DragObserver $r2;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        specialinvoke $r1.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: void <init>(androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue)>(r0);

        $r2 = (androidx.ui.core.gesture.DragObserver) $r1;

        r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver rawDragObserver> = $r2;

        return;
    }

    public final androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.DragObserver r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        r1 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver touchSlopDragObserver>;

        if r1 == null goto label1;

        return r1;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("touchSlopDragObserver");

        throw null;
    }

    public final void setTouchSlopDragObserver(androidx.ui.core.gesture.DragObserver)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.DragObserver r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        r1 := @parameter0: androidx.ui.core.gesture.DragObserver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver touchSlopDragObserver> = r1;

        return;
    }

    public final boolean getStarted()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        $z0 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean started>;

        return $z0;
    }

    public final void setStarted(boolean)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        boolean z0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean started> = z0;

        return;
    }

    public final boolean getEnabled()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        boolean $z0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        $z0 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean enabled>;

        return $z0;
    }

    public final void setEnabled(boolean)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        boolean z0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        z0 := @parameter0: boolean;

        r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean enabled> = z0;

        return;
    }

    public final boolean getEnabledOrStarted()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        $z0 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean getStarted()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean getEnabled()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public final void enableDrag()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setEnabled(boolean)>(1);

        return;
    }

    public final void startDrag(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.DragObserver $r2;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "downPosition");

        virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setStarted(boolean)>(1);

        $r2 = virtualinvoke r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()>();

        interfaceinvoke $r2.<androidx.ui.core.gesture.DragObserver: void onStart(androidx.ui.unit.PxPosition)>(r1);

        return;
    }

    public final androidx.ui.core.gesture.DragObserver getRawDragObserver()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue r0;
        androidx.ui.core.gesture.DragObserver $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        $r1 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver rawDragObserver>;

        return $r1;
    }

androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1
<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>
    void <init>(androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 r0;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $r1;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        $r1 := @parameter0: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue;

        r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onStart(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $r2, $r3;
        boolean $z0;
        androidx.ui.core.gesture.DragObserver $r4;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "downPosition");

        $r2 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        $z0 = virtualinvoke $r2.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: boolean getStarted()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()>();

        interfaceinvoke $r4.<androidx.ui.core.gesture.DragObserver: void onStart(androidx.ui.unit.PxPosition)>(r1);

     label1:
        return;
    }

    public androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1, $r4;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $r2;
        androidx.ui.core.gesture.DragObserver $r3;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dragDistance");

        $r2 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()>();

        $r4 = interfaceinvoke $r3.<androidx.ui.core.gesture.DragObserver: androidx.ui.unit.PxPosition onDrag(androidx.ui.unit.PxPosition)>(r1);

        return $r4;
    }

    public void onStop(androidx.ui.unit.PxPosition)
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 r0;
        androidx.ui.unit.PxPosition r1;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $r2, $r3, $r4;
        androidx.ui.core.gesture.DragObserver $r5;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        r1 := @parameter0: androidx.ui.unit.PxPosition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "velocity");

        $r2 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        virtualinvoke $r2.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setStarted(boolean)>(0);

        $r3 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        virtualinvoke $r3.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setEnabled(boolean)>(0);

        $r4 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        $r5 = virtualinvoke $r4.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()>();

        interfaceinvoke $r5.<androidx.ui.core.gesture.DragObserver: void onStop(androidx.ui.unit.PxPosition)>(r1);

        return;
    }

    public void onCancel()
    {
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1 r0;
        androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $r1, $r2, $r3;
        androidx.ui.core.gesture.DragObserver $r4;

        r0 := @this: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1;

        $r1 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        virtualinvoke $r1.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setStarted(boolean)>(0);

        $r2 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        virtualinvoke $r2.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: void setEnabled(boolean)>(0);

        $r3 = r0.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue$rawDragObserver$1: androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue $this>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.gesture.TouchSlopDragGestureDetectorGlue: androidx.ui.core.gesture.DragObserver getTouchSlopDragObserver()>();

        interfaceinvoke $r4.<androidx.ui.core.gesture.DragObserver: void onCancel()>();

        return;
    }

