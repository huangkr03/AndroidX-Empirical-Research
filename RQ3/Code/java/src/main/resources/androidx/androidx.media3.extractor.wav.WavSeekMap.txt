androidx.media3.extractor.wav.WavSeekMap
<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat>
<androidx.media3.extractor.wav.WavSeekMap: int framesPerBlock>
<androidx.media3.extractor.wav.WavSeekMap: long firstBlockPosition>
<androidx.media3.extractor.wav.WavSeekMap: long blockCount>
<androidx.media3.extractor.wav.WavSeekMap: long durationUs>
    public void <init>(androidx.media3.extractor.wav.WavFormat, int, long, long)
    {
        androidx.media3.extractor.wav.WavSeekMap r0;
        androidx.media3.extractor.wav.WavFormat r1;
        int i0, $i3;
        long l1, l2, $l4, $l5, $l6, $l7, $l8;

        r0 := @this: androidx.media3.extractor.wav.WavSeekMap;

        r1 := @parameter0: androidx.media3.extractor.wav.WavFormat;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat> = r1;

        r0.<androidx.media3.extractor.wav.WavSeekMap: int framesPerBlock> = i0;

        r0.<androidx.media3.extractor.wav.WavSeekMap: long firstBlockPosition> = l1;

        $l5 = l2 - l1;

        $i3 = r1.<androidx.media3.extractor.wav.WavFormat: int blockSize>;

        $l4 = (long) $i3;

        $l6 = $l5 / $l4;

        r0.<androidx.media3.extractor.wav.WavSeekMap: long blockCount> = $l6;

        $l7 = r0.<androidx.media3.extractor.wav.WavSeekMap: long blockCount>;

        $l8 = specialinvoke r0.<androidx.media3.extractor.wav.WavSeekMap: long blockIndexToTimeUs(long)>($l7);

        r0.<androidx.media3.extractor.wav.WavSeekMap: long durationUs> = $l8;

        return;
    }

    public boolean isSeekable()
    {
        androidx.media3.extractor.wav.WavSeekMap r0;

        r0 := @this: androidx.media3.extractor.wav.WavSeekMap;

        return 1;
    }

    public long getDurationUs()
    {
        androidx.media3.extractor.wav.WavSeekMap r0;
        long $l0;

        r0 := @this: androidx.media3.extractor.wav.WavSeekMap;

        $l0 = r0.<androidx.media3.extractor.wav.WavSeekMap: long durationUs>;

        return $l0;
    }

    public androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long)
    {
        androidx.media3.extractor.wav.WavSeekMap r0;
        long l0, l1, l2, l3, l4, l5, $l7, $l9, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l19, $l20, $l23, $l24, $l25, l26, l27;
        androidx.media3.extractor.SeekPoint r1, r2, $r5, $r8;
        androidx.media3.extractor.wav.WavFormat $r3, $r4, $r7;
        int $i6, $i8, $i14, $i22;
        byte $b18, $b21;
        androidx.media3.extractor.SeekMap$SeekPoints $r6, $r9;

        r0 := @this: androidx.media3.extractor.wav.WavSeekMap;

        l0 := @parameter0: long;

        $r3 = r0.<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat>;

        $i6 = $r3.<androidx.media3.extractor.wav.WavFormat: int frameRateHz>;

        $l7 = (long) $i6;

        $l11 = l0 * $l7;

        $i8 = r0.<androidx.media3.extractor.wav.WavSeekMap: int framesPerBlock>;

        $l9 = (long) $i8;

        $l10 = 1000000L * $l9;

        l26 = $l11 / $l10;

        $l12 = r0.<androidx.media3.extractor.wav.WavSeekMap: long blockCount>;

        $l13 = $l12 - 1L;

        l27 = staticinvoke <androidx.media3.common.util.Util: long constrainValue(long,long,long)>(l26, 0L, $l13);

        $l17 = r0.<androidx.media3.extractor.wav.WavSeekMap: long firstBlockPosition>;

        $r4 = r0.<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat>;

        $i14 = $r4.<androidx.media3.extractor.wav.WavFormat: int blockSize>;

        $l15 = (long) $i14;

        $l16 = l27 * $l15;

        l1 = $l17 + $l16;

        l2 = specialinvoke r0.<androidx.media3.extractor.wav.WavSeekMap: long blockIndexToTimeUs(long)>(l27);

        $r5 = new androidx.media3.extractor.SeekPoint;

        specialinvoke $r5.<androidx.media3.extractor.SeekPoint: void <init>(long,long)>(l2, l1);

        r1 = $r5;

        $b18 = l2 cmp l0;

        if $b18 >= 0 goto label1;

        $l19 = r0.<androidx.media3.extractor.wav.WavSeekMap: long blockCount>;

        $l20 = $l19 - 1L;

        $b21 = l27 cmp $l20;

        if $b21 != 0 goto label2;

     label1:
        $r6 = new androidx.media3.extractor.SeekMap$SeekPoints;

        specialinvoke $r6.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint)>(r1);

        return $r6;

     label2:
        l3 = l27 + 1L;

        $l25 = r0.<androidx.media3.extractor.wav.WavSeekMap: long firstBlockPosition>;

        $r7 = r0.<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat>;

        $i22 = $r7.<androidx.media3.extractor.wav.WavFormat: int blockSize>;

        $l23 = (long) $i22;

        $l24 = l3 * $l23;

        l4 = $l25 + $l24;

        l5 = specialinvoke r0.<androidx.media3.extractor.wav.WavSeekMap: long blockIndexToTimeUs(long)>(l3);

        $r8 = new androidx.media3.extractor.SeekPoint;

        specialinvoke $r8.<androidx.media3.extractor.SeekPoint: void <init>(long,long)>(l5, l4);

        r2 = $r8;

        $r9 = new androidx.media3.extractor.SeekMap$SeekPoints;

        specialinvoke $r9.<androidx.media3.extractor.SeekMap$SeekPoints: void <init>(androidx.media3.extractor.SeekPoint,androidx.media3.extractor.SeekPoint)>(r1, r2);

        return $r9;
    }

    private long blockIndexToTimeUs(long)
    {
        androidx.media3.extractor.wav.WavSeekMap r0;
        long l0, $l2, $l4, $l5, $l6;
        int $i1, $i3;
        androidx.media3.extractor.wav.WavFormat $r1;

        r0 := @this: androidx.media3.extractor.wav.WavSeekMap;

        l0 := @parameter0: long;

        $i1 = r0.<androidx.media3.extractor.wav.WavSeekMap: int framesPerBlock>;

        $l2 = (long) $i1;

        $l5 = l0 * $l2;

        $r1 = r0.<androidx.media3.extractor.wav.WavSeekMap: androidx.media3.extractor.wav.WavFormat wavFormat>;

        $i3 = $r1.<androidx.media3.extractor.wav.WavFormat: int frameRateHz>;

        $l4 = (long) $i3;

        $l6 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>($l5, 1000000L, $l4);

        return $l6;
    }

