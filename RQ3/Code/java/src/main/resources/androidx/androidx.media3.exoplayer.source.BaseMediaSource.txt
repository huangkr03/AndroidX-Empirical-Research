androidx.media3.exoplayer.source.BaseMediaSource
<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers>
<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>
<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>
<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>
<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper>
<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.common.Timeline timeline>
<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.analytics.PlayerId playerId>
    public void <init>()
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        java.util.ArrayList $r1;
        java.util.HashSet $r2;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r4;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(int)>(1);

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers> = $r2;

        $r3 = new androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher;

        specialinvoke $r3.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void <init>()>();

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher> = $r3;

        $r4 = new androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher;

        specialinvoke $r4.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void <init>()>();

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher> = $r4;

        return;
    }

<androidx.media3.exoplayer.source.BaseMediaSource: void prepareSourceInternal(androidx.media3.datasource.TransferListener)>
    protected void enableInternal()
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        return;
    }

    protected void disableInternal()
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        return;
    }

<androidx.media3.exoplayer.source.BaseMediaSource: void releaseSourceInternal()>
    protected final void refreshSourceInfo(androidx.media3.common.Timeline)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.common.Timeline r1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.common.Timeline;

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.common.Timeline timeline> = r1;

        $r4 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller) $r5;

        interfaceinvoke r3.<androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller: void onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    protected final androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long)>(0, r1, 0L);

        return $r3;
    }

    protected final androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, long)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        l0 := @parameter1: long;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        $r4 = virtualinvoke $r3.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long)>(0, r1, l0);

        return $r4;
    }

    protected final androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, long)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        long l1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        l1 := @parameter2: long;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long)>(i0, r1, l1);

        return $r3;
    }

    protected final androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(0, r1);

        return $r3;
    }

    protected final androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(int, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        int i0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2, $r3;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(i0, r1);

        return $r3;
    }

    protected final boolean isEnabled()
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        java.util.HashSet $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected final androidx.media3.exoplayer.analytics.PlayerId getPlayerId()
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.analytics.PlayerId $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.analytics.PlayerId playerId>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.analytics.PlayerId) $r2;

        return $r3;
    }

    public final void addEventListener(android.os.Handler, androidx.media3.exoplayer.source.MediaSourceEventListener)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener r2;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r5;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.source.MediaSourceEventListener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r5.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener)>(r1, r2);

        return;
    }

    public final void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSourceEventListener r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSourceEventListener;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher: void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener)>(r1);

        return;
    }

    public final void addDrmEventListener(android.os.Handler, androidx.media3.exoplayer.drm.DrmSessionEventListener)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        android.os.Handler r1;
        androidx.media3.exoplayer.drm.DrmSessionEventListener r2;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r5;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: androidx.media3.exoplayer.drm.DrmSessionEventListener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r5.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void addEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener)>(r1, r2);

        return;
    }

    public final void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.drm.DrmSessionEventListener r1;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher $r2;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionEventListener;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher>;

        virtualinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher: void removeEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener)>(r1);

        return;
    }

    public final void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller, androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        androidx.media3.datasource.TransferListener r2;
        androidx.media3.exoplayer.analytics.PlayerId $r3;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        r2 := @parameter1: androidx.media3.datasource.TransferListener;

        $r3 = <androidx.media3.exoplayer.analytics.PlayerId: androidx.media3.exoplayer.analytics.PlayerId UNSET>;

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId)>(r1, r2, $r3);

        return;
    }

    public final void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller, androidx.media3.datasource.TransferListener, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        androidx.media3.datasource.TransferListener r2;
        androidx.media3.exoplayer.analytics.PlayerId r3;
        android.os.Looper r4, $r6, $r8, $r10;
        androidx.media3.common.Timeline r5;
        java.util.ArrayList $r7;
        java.util.HashSet $r9;
        boolean $z2;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        r2 := @parameter1: androidx.media3.datasource.TransferListener;

        r3 := @parameter2: androidx.media3.exoplayer.analytics.PlayerId;

        r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r6 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper>;

        if $r6 == null goto label1;

        $r10 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper>;

        if $r10 != r4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.analytics.PlayerId playerId> = r3;

        r5 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.common.Timeline timeline>;

        $r7 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r8 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper>;

        if $r8 != null goto label4;

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper> = r4;

        $r9 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void prepareSourceInternal(androidx.media3.datasource.TransferListener)>(r2);

        goto label5;

     label4:
        if r5 == null goto label5;

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>(r1);

        interfaceinvoke r1.<androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller: void onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline)>(r0, r5);

     label5:
        return;
    }

    public final void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        boolean z0;
        android.os.Looper $r2;
        java.util.HashSet $r4, $r5;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        z0 = virtualinvoke $r4.<java.util.HashSet: boolean isEmpty()>();

        $r5 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        virtualinvoke $r5.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void enableInternal()>();

     label1:
        return;
    }

    public final void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        boolean z0, $z1, $z3, $z4;
        java.util.HashSet $r2, $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        $z1 = virtualinvoke $r2.<java.util.HashSet: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r3 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        if z0 == 0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        $z3 = virtualinvoke $r4.<java.util.HashSet: boolean isEmpty()>();

        if $z3 == 0 goto label3;

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void disableInternal()>();

     label3:
        return;
    }

    public final void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)
    {
        androidx.media3.exoplayer.source.BaseMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller r1;
        java.util.ArrayList $r2, $r3;
        boolean $z1;
        java.util.HashSet $r4;

        r0 := @this: androidx.media3.exoplayer.source.BaseMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller;

        $r2 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: android.os.Looper looper> = null;

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.common.Timeline timeline> = null;

        r0.<androidx.media3.exoplayer.source.BaseMediaSource: androidx.media3.exoplayer.analytics.PlayerId playerId> = null;

        $r4 = r0.<androidx.media3.exoplayer.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers>;

        virtualinvoke $r4.<java.util.HashSet: void clear()>();

        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void releaseSourceInternal()>();

        goto label2;

     label1:
        virtualinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller)>(r1);

     label2:
        return;
    }

