androidx.paging.LivePagedList
<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineScope coroutineScope>
<androidx.paging.LivePagedList: androidx.paging.PagedList$Config config>
<androidx.paging.LivePagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>
<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 pagingSourceFactory>
<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>
<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>
<androidx.paging.LivePagedList: androidx.paging.PagedList currentData>
<androidx.paging.LivePagedList: kotlinx.coroutines.Job currentJob>
<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 callback>
<androidx.paging.LivePagedList: java.lang.Runnable refreshRetryCallback>
    public void <init>(kotlinx.coroutines.CoroutineScope, java.lang.Object, androidx.paging.PagedList$Config, androidx.paging.PagedList$BoundaryCallback, kotlin.jvm.functions.Function0, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.LivePagedList r0;
        kotlinx.coroutines.CoroutineScope r1;
        java.lang.Object r2, r8, $r14;
        androidx.paging.PagedList$Config r3;
        androidx.paging.PagedList$BoundaryCallback r4;
        kotlin.jvm.functions.Function0 r5, $r11;
        kotlinx.coroutines.CoroutineDispatcher r6, r7;
        androidx.paging.InitialPagedList $r9;
        androidx.paging.LivePagedList$callback$1 $r10;
        androidx.paging.LivePagedList$refreshRetryCallback$1 $r12;
        java.lang.Runnable $r13, $r16;
        androidx.paging.PagedList $r15, $r17;

        r0 := @this: androidx.paging.LivePagedList;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: androidx.paging.PagedList$Config;

        r4 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter4: kotlin.jvm.functions.Function0;

        r6 := @parameter5: kotlinx.coroutines.CoroutineDispatcher;

        r7 := @parameter6: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "pagingSourceFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "notifyDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "fetchDispatcher");

        $r9 = new androidx.paging.InitialPagedList;

        specialinvoke $r9.<androidx.paging.InitialPagedList: void <init>(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,androidx.paging.PagedList$Config,java.lang.Object)>(r1, r6, r7, r3, r2);

        specialinvoke r0.<androidx.lifecycle.LiveData: void <init>(java.lang.Object)>($r9);

        r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineScope coroutineScope> = r1;

        r0.<androidx.paging.LivePagedList: androidx.paging.PagedList$Config config> = r3;

        r0.<androidx.paging.LivePagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback> = r4;

        r0.<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 pagingSourceFactory> = r5;

        r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher> = r6;

        r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher> = r7;

        $r10 = new androidx.paging.LivePagedList$callback$1;

        specialinvoke $r10.<androidx.paging.LivePagedList$callback$1: void <init>(androidx.paging.LivePagedList)>(r0);

        $r11 = (kotlin.jvm.functions.Function0) $r10;

        r0.<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 callback> = $r11;

        $r12 = new androidx.paging.LivePagedList$refreshRetryCallback$1;

        specialinvoke $r12.<androidx.paging.LivePagedList$refreshRetryCallback$1: void <init>(androidx.paging.LivePagedList)>(r0);

        $r13 = (java.lang.Runnable) $r12;

        r0.<androidx.paging.LivePagedList: java.lang.Runnable refreshRetryCallback> = $r13;

        $r14 = virtualinvoke r0.<androidx.paging.LivePagedList: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r14);

        r8 = $r14;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r8, "value!!");

        $r15 = (androidx.paging.PagedList) r8;

        r0.<androidx.paging.LivePagedList: androidx.paging.PagedList currentData> = $r15;

        $r17 = r0.<androidx.paging.LivePagedList: androidx.paging.PagedList currentData>;

        $r16 = r0.<androidx.paging.LivePagedList: java.lang.Runnable refreshRetryCallback>;

        virtualinvoke $r17.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>($r16);

        return;
    }

    protected void onActive()
    {
        androidx.paging.LivePagedList r0;

        r0 := @this: androidx.paging.LivePagedList;

        specialinvoke r0.<androidx.lifecycle.LiveData: void onActive()>();

        specialinvoke r0.<androidx.paging.LivePagedList: void invalidate(boolean)>(0);

        return;
    }

    private final void invalidate(boolean)
    {
        androidx.paging.LivePagedList r0;
        boolean z0;
        kotlinx.coroutines.Job r1, $r2, $r8;
        kotlinx.coroutines.CoroutineDispatcher $r3;
        androidx.paging.LivePagedList$invalidate$1 $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlin.coroutines.CoroutineContext $r6;
        kotlin.jvm.functions.Function2 $r7;

        r0 := @this: androidx.paging.LivePagedList;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.paging.LivePagedList: kotlinx.coroutines.Job currentJob>;

        if $r2 == null goto label1;

        if z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<androidx.paging.LivePagedList: kotlinx.coroutines.Job currentJob>;

        if r1 != null goto label2;

        goto label3;

     label2:
        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>(r1, null, 1, null);

     label3:
        $r5 = r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r3 = r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        $r6 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.paging.LivePagedList$invalidate$1;

        specialinvoke $r4.<androidx.paging.LivePagedList$invalidate$1: void <init>(androidx.paging.LivePagedList,kotlin.coroutines.Continuation)>(r0, null);

        $r7 = (kotlin.jvm.functions.Function2) $r4;

        $r8 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, $r6, null, $r7, 2, null);

        r0.<androidx.paging.LivePagedList: kotlinx.coroutines.Job currentJob> = $r8;

        return;
    }

    private final void onItemUpdate(androidx.paging.PagedList, androidx.paging.PagedList)
    {
        androidx.paging.LivePagedList r0;
        androidx.paging.PagedList r1, r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.paging.LivePagedList;

        r1 := @parameter0: androidx.paging.PagedList;

        r2 := @parameter1: androidx.paging.PagedList;

        virtualinvoke r1.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>(null);

        $r3 = r0.<androidx.paging.LivePagedList: java.lang.Runnable refreshRetryCallback>;

        virtualinvoke r2.<androidx.paging.PagedList: void setRetryCallback(java.lang.Runnable)>($r3);

        return;
    }

    public static final androidx.paging.PagedList access$getCurrentData$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: androidx.paging.PagedList currentData>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getCallback$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 callback>;

        return $r1;
    }

    public static final kotlin.jvm.functions.Function0 access$getPagingSourceFactory$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        kotlin.jvm.functions.Function0 $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: kotlin.jvm.functions.Function0 pagingSourceFactory>;

        return $r1;
    }

    public static final androidx.paging.PagedList$Config access$getConfig$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList$Config $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: androidx.paging.PagedList$Config config>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher access$getNotifyDispatcher$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher notifyDispatcher>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineScope access$getCoroutineScope$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        kotlinx.coroutines.CoroutineScope $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineScope coroutineScope>;

        return $r1;
    }

    public static final kotlinx.coroutines.CoroutineDispatcher access$getFetchDispatcher$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        kotlinx.coroutines.CoroutineDispatcher $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: kotlinx.coroutines.CoroutineDispatcher fetchDispatcher>;

        return $r1;
    }

    public static final androidx.paging.PagedList$BoundaryCallback access$getBoundaryCallback$p(androidx.paging.LivePagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList$BoundaryCallback $r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        $r1 = $r0.<androidx.paging.LivePagedList: androidx.paging.PagedList$BoundaryCallback boundaryCallback>;

        return $r1;
    }

    public static final void access$onItemUpdate(androidx.paging.LivePagedList, androidx.paging.PagedList, androidx.paging.PagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList r1, r2;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        r1 := @parameter1: androidx.paging.PagedList;

        r2 := @parameter2: androidx.paging.PagedList;

        specialinvoke $r0.<androidx.paging.LivePagedList: void onItemUpdate(androidx.paging.PagedList,androidx.paging.PagedList)>(r1, r2);

        return;
    }

    public static final void access$setCurrentData$p(androidx.paging.LivePagedList, androidx.paging.PagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        r1 := @parameter1: androidx.paging.PagedList;

        $r0.<androidx.paging.LivePagedList: androidx.paging.PagedList currentData> = r1;

        return;
    }

    public static final void access$postValue(androidx.paging.LivePagedList, androidx.paging.PagedList)
    {
        androidx.paging.LivePagedList $r0;
        androidx.paging.PagedList r1;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        r1 := @parameter1: androidx.paging.PagedList;

        virtualinvoke $r0.<androidx.paging.LivePagedList: void postValue(java.lang.Object)>(r1);

        return;
    }

    public static final void access$invalidate(androidx.paging.LivePagedList, boolean)
    {
        androidx.paging.LivePagedList $r0;
        boolean z0;

        $r0 := @parameter0: androidx.paging.LivePagedList;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.paging.LivePagedList: void invalidate(boolean)>(z0);

        return;
    }

