androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int STATE_CREATED>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int STATE_INITIALIZED>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int STATE_SHUT_DOWN>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean synchronizeCodecInteractionsWithQueueing>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean codecReleased>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int state>
    private void <init>(android.media.MediaCodec, android.os.HandlerThread, android.os.HandlerThread, boolean)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaCodec r1;
        android.os.HandlerThread r2, r3;
        boolean z0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r4;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.os.HandlerThread;

        r3 := @parameter2: android.os.HandlerThread;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec> = r1;

        $r4 = new androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback;

        specialinvoke $r4.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void <init>(android.os.HandlerThread)>(r2);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback> = $r4;

        $r5 = new androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        specialinvoke $r5.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void <init>(android.media.MediaCodec,android.os.HandlerThread)>(r1, r3);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer> = $r5;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean synchronizeCodecInteractionsWithQueueing> = z0;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int state> = 0;

        return;
    }

    private void initialize(android.media.MediaFormat, android.view.Surface, android.media.MediaCrypto, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaFormat r1;
        android.view.Surface r2;
        android.media.MediaCrypto r3;
        int i0;
        android.media.MediaCodec $r4, $r6, $r8;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r5;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r7;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaFormat;

        r2 := @parameter1: android.view.Surface;

        r3 := @parameter2: android.media.MediaCrypto;

        i0 := @parameter3: int;

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r5.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void initialize(android.media.MediaCodec)>($r4);

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("configureCodec");

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r6.<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>(r1, r2, r3, i0);

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        $r7 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r7.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void start()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>("startCodec");

        $r8 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r8.<android.media.MediaCodec: void start()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int state> = 1;

        return;
    }

    public boolean needsReconfiguration()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        return 0;
    }

    public void queueInputBuffer(int, int, int, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0, i1, i2, i4;
        long l3;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void queueInputBuffer(int,int,int,long,int)>(i0, i1, i2, l3, i4);

        return;
    }

    public void queueSecureInputBuffer(int, int, androidx.media3.decoder.CryptoInfo, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0, i1, i3;
        androidx.media3.decoder.CryptoInfo r1;
        long l2;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.decoder.CryptoInfo;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int)>(i0, i1, r1, l2, i3);

        return;
    }

    public void releaseOutputBuffer(int, boolean)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0;
        boolean z0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>(i0, z0);

        return;
    }

    public void releaseOutputBuffer(int, long)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0;
        long l1;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void releaseOutputBuffer(int,long)>(i0, l1);

        return;
    }

    public int dequeueInputBufferIndex()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r1;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void maybeThrowException()>();

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $i0 = virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: int dequeueInputBufferIndex()>();

        return $i0;
    }

    public int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaCodec$BufferInfo r1;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r2;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r3;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec$BufferInfo;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void maybeThrowException()>();

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $i0 = virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo)>(r1);

        return $i0;
    }

    public android.media.MediaFormat getOutputFormat()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r1;
        android.media.MediaFormat $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: android.media.MediaFormat getOutputFormat()>();

        return $r2;
    }

    public java.nio.ByteBuffer getInputBuffer(int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0;
        android.media.MediaCodec $r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>(i0);

        return $r2;
    }

    public java.nio.ByteBuffer getOutputBuffer(int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0;
        android.media.MediaCodec $r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>(i0);

        return $r2;
    }

    public void flush()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r1;
        android.media.MediaCodec $r2, $r4;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r1.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void flush()>();

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void flush()>();

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void flush()>();

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r4.<android.media.MediaCodec: void start()>();

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        java.lang.Throwable r1, $r5;
        int $i0;
        boolean $z0, $z1;
        android.media.MediaCodec $r2, $r6;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r3;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

     label1:
        $i0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int state>;

        if $i0 != 1 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void shutdown()>();

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        virtualinvoke $r4.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void shutdown()>();

     label2:
        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: int state> = 2;

     label3:
        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean codecReleased>;

        if $z0 != 0 goto label6;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void release()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean codecReleased> = 1;

        goto label6;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        $z1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean codecReleased>;

        if $z1 != 0 goto label5;

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r6.<android.media.MediaCodec: void release()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean codecReleased> = 1;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void setOnFrameRenderedListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener, android.os.Handler)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener r1;
        android.os.Handler r2;
        android.media.MediaCodec $r3;
        android.media.MediaCodec$OnFrameRenderedListener $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void maybeBlockOnQueueing()>();

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r4 = dynamicinvoke "onFrameRendered" <android.media.MediaCodec$OnFrameRenderedListener (androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.media.MediaCodec,long,long), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long)>, methodtype: void __METHODTYPE__(android.media.MediaCodec,long,long));

        virtualinvoke $r3.<android.media.MediaCodec: void setOnFrameRenderedListener(android.media.MediaCodec$OnFrameRenderedListener,android.os.Handler)>($r4, r2);

        return;
    }

    public void setOutputSurface(android.view.Surface)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.view.Surface r1;
        android.media.MediaCodec $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.view.Surface;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void maybeBlockOnQueueing()>();

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void setOutputSurface(android.view.Surface)>(r1);

        return;
    }

    public void setParameters(android.os.Bundle)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.os.Bundle r1;
        android.media.MediaCodec $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void maybeBlockOnQueueing()>();

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void setParameters(android.os.Bundle)>(r1);

        return;
    }

    public void setVideoScalingMode(int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        int i0;
        android.media.MediaCodec $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void maybeBlockOnQueueing()>();

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r1.<android.media.MediaCodec: void setVideoScalingMode(int)>(i0);

        return;
    }

    public android.os.PersistableBundle getMetrics()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaCodec $r1;
        android.os.PersistableBundle $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void maybeBlockOnQueueing()>();

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        $r2 = virtualinvoke $r1.<android.media.MediaCodec: android.os.PersistableBundle getMetrics()>();

        return $r2;
    }

    void onError(android.media.MediaCodec$CodecException)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaCodec$CodecException r1;
        android.media.MediaCodec $r2;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec$CodecException;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void onError(android.media.MediaCodec,android.media.MediaCodec$CodecException)>($r2, r1);

        return;
    }

    void onOutputFormatChanged(android.media.MediaFormat)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaFormat r1;
        android.media.MediaCodec $r2;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaFormat;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback>;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: android.media.MediaCodec codec>;

        virtualinvoke $r3.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)>($r2, r1);

        return;
    }

    private void maybeBlockOnQueueing()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r2;
        java.lang.Thread $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: boolean synchronizeCodecInteractionsWithQueueing>;

        if $z0 == 0 goto label4;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer bufferEnqueuer>;

        virtualinvoke $r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void waitUntilQueueingComplete()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private static java.lang.String createCallbackThreadLabel(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String createThreadLabel(int,java.lang.String)>(i0, "ExoPlayer:MediaCodecAsyncAdapter:");

        return $r0;
    }

    private static java.lang.String createQueueingThreadLabel(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String createThreadLabel(int,java.lang.String)>(i0, "ExoPlayer:MediaCodecQueueingThread:");

        return $r0;
    }

    private static java.lang.String createThreadLabel(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r8;
        java.lang.StringBuilder r1, $r2, $r3, $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        if i0 != 1 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Audio");

        goto label3;

     label1:
        if i0 != 2 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Video");

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener, android.media.MediaCodec, long, long)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener r1;
        android.media.MediaCodec r2;
        long l0, l1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener;

        r2 := @parameter1: android.media.MediaCodec;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        interfaceinvoke r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener: void onFrameRendered(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,long,long)>(r0, l0, l1);

        return;
    }

    void <init>(android.media.MediaCodec, android.os.HandlerThread, android.os.HandlerThread, boolean, androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaCodec r1;
        android.os.HandlerThread r2, r3;
        boolean z0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1 r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.os.HandlerThread;

        r3 := @parameter2: android.os.HandlerThread;

        z0 := @parameter3: boolean;

        r4 := @parameter4: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void <init>(android.media.MediaCodec,android.os.HandlerThread,android.os.HandlerThread,boolean)>(r1, r2, r3, z0);

        return;
    }

    static void access$100(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter, android.media.MediaFormat, android.view.Surface, android.media.MediaCrypto, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter r0;
        android.media.MediaFormat r1;
        android.view.Surface r2;
        android.media.MediaCrypto r3;
        int i0;

        r0 := @parameter0: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        r1 := @parameter1: android.media.MediaFormat;

        r2 := @parameter2: android.view.Surface;

        r3 := @parameter3: android.media.MediaCrypto;

        i0 := @parameter4: int;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void initialize(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>(r1, r2, r3, i0);

        return;
    }

    static java.lang.String access$200(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String createQueueingThreadLabel(int)>(i0);

        return $r0;
    }

    static java.lang.String access$300(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String createCallbackThreadLabel(int)>(i0);

        return $r0;
    }

androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier callbackThreadSupplier>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier queueingThreadSupplier>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: boolean synchronizeCodecInteractionsWithQueueing>
    public void <init>(int, boolean)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory r0;
        int i0;
        boolean z0;
        com.google.common.base.Supplier $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = dynamicinvoke "get" <com.google.common.base.Supplier (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: android.os.HandlerThread lambda$new$0(int)>, methodtype: android.os.HandlerThread __METHODTYPE__());

        $r2 = dynamicinvoke "get" <com.google.common.base.Supplier (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: android.os.HandlerThread lambda$new$1(int)>, methodtype: android.os.HandlerThread __METHODTYPE__());

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier,boolean)>($r1, $r2, z0);

        return;
    }

    void <init>(com.google.common.base.Supplier, com.google.common.base.Supplier, boolean)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory r0;
        com.google.common.base.Supplier r1, r2;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory;

        r1 := @parameter0: com.google.common.base.Supplier;

        r2 := @parameter1: com.google.common.base.Supplier;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier callbackThreadSupplier> = r1;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier queueingThreadSupplier> = r2;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: boolean synchronizeCodecInteractionsWithQueueing> = z0;

        return;
    }

    public androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration) throws java.io.IOException
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration r1;
        java.lang.String r2, $r8;
        java.lang.Throwable r3, $r19;
        androidx.media3.exoplayer.mediacodec.MediaCodecInfo $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter $r9, r20;
        com.google.common.base.Supplier $r10, $r12;
        java.lang.Object $r11, $r14;
        android.os.HandlerThread $r13, $r15;
        boolean $z0;
        int $i0;
        android.media.MediaCrypto $r16;
        android.view.Surface $r17;
        android.media.MediaFormat $r18;
        android.media.MediaCodec r21;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration;

        $r4 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo>;

        r2 = $r4.<androidx.media3.exoplayer.mediacodec.MediaCodecInfo: java.lang.String name>;

        r20 = null;

        r21 = null;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createCodec:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.TraceUtil: void beginSection(java.lang.String)>($r8);

        r21 = staticinvoke <android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>(r2);

        $r9 = new androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter;

        $r10 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier callbackThreadSupplier>;

        $r11 = interfaceinvoke $r10.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r13 = (android.os.HandlerThread) $r11;

        $r12 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: com.google.common.base.Supplier queueingThreadSupplier>;

        $r14 = interfaceinvoke $r12.<com.google.common.base.Supplier: java.lang.Object get()>();

        $r15 = (android.os.HandlerThread) $r14;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: boolean synchronizeCodecInteractionsWithQueueing>;

        specialinvoke $r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void <init>(android.media.MediaCodec,android.os.HandlerThread,android.os.HandlerThread,boolean,androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1)>(r21, $r13, $r15, $z0, null);

        r20 = $r9;

        staticinvoke <androidx.media3.common.util.TraceUtil: void endSection()>();

        $r18 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.media.MediaFormat mediaFormat>;

        $r17 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.view.Surface surface>;

        $r16 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: android.media.MediaCrypto crypto>;

        $i0 = r1.<androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration: int flags>;

        staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void access$100(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter,android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>(r20, $r18, $r17, $r16, $i0);

     label2:
        return r20;

     label3:
        $r19 := @caughtexception;

        r3 = $r19;

        if r20 == null goto label4;

        virtualinvoke r20.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: void release()>();

        goto label5;

     label4:
        if r21 == null goto label5;

        virtualinvoke r21.<android.media.MediaCodec: void release()>();

     label5:
        throw r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration) throws java.io.IOException
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory r0;
        androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration r1;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration)>(r1);

        return $r2;
    }

    private static android.os.HandlerThread lambda$new$1(int)
    {
        int i0;
        android.os.HandlerThread $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new android.os.HandlerThread;

        $r1 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String access$200(int)>(i0);

        specialinvoke $r0.<android.os.HandlerThread: void <init>(java.lang.String)>($r1);

        return $r0;
    }

    private static android.os.HandlerThread lambda$new$0(int)
    {
        int i0;
        android.os.HandlerThread $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = new android.os.HandlerThread;

        $r1 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter: java.lang.String access$300(int)>(i0);

        specialinvoke $r0.<android.os.HandlerThread: void <init>(java.lang.String)>($r1);

        return $r0;
    }

