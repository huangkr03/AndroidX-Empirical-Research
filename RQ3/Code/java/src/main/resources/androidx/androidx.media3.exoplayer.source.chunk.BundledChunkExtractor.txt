androidx.media3.exoplayer.source.chunk.BundledChunkExtractor
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory FACTORY>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: int primaryTrackType>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format primaryTrackManifestFormat>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: boolean extractorInitialized>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider trackOutputProvider>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: long endTimeUs>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.SeekMap seekMap>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format[] sampleFormats>
    public void <init>(androidx.media3.extractor.Extractor, int, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.extractor.Extractor r1;
        int i0;
        androidx.media3.common.Format r2;
        android.util.SparseArray $r3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.Extractor;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.common.Format;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor> = r1;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: int primaryTrackType> = i0;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format primaryTrackManifestFormat> = r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs> = $r3;

        return;
    }

    public androidx.media3.extractor.ChunkIndex getChunkIndex()
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.extractor.SeekMap $r1, $r2;
        boolean $z0;
        androidx.media3.extractor.ChunkIndex $r3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.SeekMap seekMap>;

        $z0 = $r1 instanceof androidx.media3.extractor.ChunkIndex;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.SeekMap seekMap>;

        $r3 = (androidx.media3.extractor.ChunkIndex) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public androidx.media3.common.Format[] getSampleFormats()
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.common.Format[] $r1;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format[] sampleFormats>;

        return $r1;
    }

    public void init(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider, long, long)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider r1;
        long l0, l1, $l5;
        boolean $z0;
        byte $b2, $b4;
        androidx.media3.extractor.Extractor $r2, $r6, $r7;
        android.util.SparseArray $r3, $r8;
        java.lang.Object $r4;
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput $r5;
        int i6, $i7;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider trackOutputProvider> = r1;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: long endTimeUs> = l1;

        $z0 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: boolean extractorInitialized>;

        if $z0 != 0 goto label2;

        $r6 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        interfaceinvoke $r6.<androidx.media3.extractor.Extractor: void init(androidx.media3.extractor.ExtractorOutput)>(r0);

        $b4 = l0 cmp -9223372036854775807L;

        if $b4 == 0 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        interfaceinvoke $r7.<androidx.media3.extractor.Extractor: void seek(long,long)>(0L, l0);

     label1:
        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: boolean extractorInitialized> = 1;

        goto label6;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $b2 = l0 cmp -9223372036854775807L;

        if $b2 != 0 goto label3;

        $l5 = 0L;

        goto label4;

     label3:
        $l5 = l0;

     label4:
        interfaceinvoke $r2.<androidx.media3.extractor.Extractor: void seek(long,long)>(0L, $l5);

        i6 = 0;

     label5:
        $r8 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $i7 = virtualinvoke $r8.<android.util.SparseArray: int size()>();

        if i6 >= $i7 goto label6;

        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i6);

        $r5 = (androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput) $r4;

        virtualinvoke $r5.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: void bind(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long)>(r1, l1);

        i6 = i6 + 1;

        goto label5;

     label6:
        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.extractor.Extractor $r1;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        interfaceinvoke $r1.<androidx.media3.extractor.Extractor: void release()>();

        return;
    }

    public boolean read(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0;
        androidx.media3.extractor.PositionHolder $r2;
        androidx.media3.extractor.Extractor $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.Extractor extractor>;

        $r2 = <androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER>;

        i0 = interfaceinvoke $r3.<androidx.media3.extractor.Extractor: int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder)>(r1, $r2);

        if i0 == 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        if i0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public androidx.media3.extractor.TrackOutput track(int, int)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        int i0, i1, $i2;
        android.util.SparseArray $r1, $r6;
        java.lang.Object $r2;
        androidx.media3.common.Format[] $r3;
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput $r4, r7;
        long $l3;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider $r5;
        boolean $z0;
        androidx.media3.common.Format $r8;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r7 = (androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput) $r2;

        if r7 != null goto label5;

        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format[] sampleFormats>;

        if $r3 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r4 = new androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        $i2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: int primaryTrackType>;

        if i1 != $i2 goto label3;

        $r8 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format primaryTrackManifestFormat>;

        goto label4;

     label3:
        $r8 = null;

     label4:
        specialinvoke $r4.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: void <init>(int,int,androidx.media3.common.Format)>(i0, i1, $r8);

        r7 = $r4;

        $r5 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider trackOutputProvider>;

        $l3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: long endTimeUs>;

        virtualinvoke r7.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: void bind(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long)>($r5, $l3);

        $r6 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

     label5:
        return r7;
    }

    public void endTracks()
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.common.Format[] r1;
        android.util.SparseArray $r2, $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5, $r8;
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput $r6;
        androidx.media3.common.Format $r7, $r9;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        r1 = newarray (androidx.media3.common.Format)[$i0];

        i2 = 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i2 >= $i1 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: android.util.SparseArray bindingTrackOutputs>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        $r6 = (androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput) $r5;

        $r7 = $r6.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat>;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.common.Format) $r8;

        r1[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.common.Format[] sampleFormats> = r1;

        return;
    }

    public void seekMap(androidx.media3.extractor.SeekMap)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r0;
        androidx.media3.extractor.SeekMap r1;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        r1 := @parameter0: androidx.media3.extractor.SeekMap;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.SeekMap seekMap> = r1;

        return;
    }

    private static androidx.media3.exoplayer.source.chunk.ChunkExtractor lambda$static$0(int, androidx.media3.common.Format, boolean, java.util.List, androidx.media3.extractor.TrackOutput, androidx.media3.exoplayer.analytics.PlayerId)
    {
        int i0;
        androidx.media3.common.Format r0;
        boolean z0, $z1, $z2;
        java.util.List r1;
        androidx.media3.extractor.TrackOutput r2;
        androidx.media3.exoplayer.analytics.PlayerId r3;
        java.lang.String r4;
        java.lang.Object r7;
        byte b1;
        androidx.media3.extractor.mkv.MatroskaExtractor r9;
        androidx.media3.extractor.mp4.FragmentedMp4Extractor r10;
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor r11;
        androidx.media3.extractor.Extractor r12;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.common.Format;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: androidx.media3.extractor.TrackOutput;

        r3 := @parameter5: androidx.media3.exoplayer.analytics.PlayerId;

        r4 = r0.<androidx.media3.common.Format: java.lang.String containerMimeType>;

        $z1 = staticinvoke <androidx.media3.common.MimeTypes: boolean isText(java.lang.String)>(r4);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $z2 = staticinvoke <androidx.media3.common.MimeTypes: boolean isMatroska(java.lang.String)>(r4);

        if $z2 == 0 goto label2;

        r9 = new androidx.media3.extractor.mkv.MatroskaExtractor;

        specialinvoke r9.<androidx.media3.extractor.mkv.MatroskaExtractor: void <init>(int)>(1);

        r7 = r9;

        goto label4;

     label2:
        b1 = 0;

        if z0 == 0 goto label3;

        b1 = b1 | 4;

     label3:
        r10 = new androidx.media3.extractor.mp4.FragmentedMp4Extractor;

        specialinvoke r10.<androidx.media3.extractor.mp4.FragmentedMp4Extractor: void <init>(int,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.mp4.Track,java.util.List,androidx.media3.extractor.TrackOutput)>(b1, null, null, r1, r2);

        r7 = r10;

     label4:
        r11 = new androidx.media3.exoplayer.source.chunk.BundledChunkExtractor;

        r12 = (androidx.media3.extractor.Extractor) r7;

        specialinvoke r11.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: void <init>(androidx.media3.extractor.Extractor,int,androidx.media3.common.Format)>(r12, i0, r0);

        return r11;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory $r0;
        androidx.media3.extractor.PositionHolder $r1;

        $r0 = dynamicinvoke "createProgressiveMediaExtractor" <androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.exoplayer.source.chunk.ChunkExtractor __METHODTYPE__(int,androidx.media3.common.Format,boolean,java.util.List,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.analytics.PlayerId), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor lambda$static$0(int,androidx.media3.common.Format,boolean,java.util.List,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.analytics.PlayerId)>, methodtype: androidx.media3.exoplayer.source.chunk.ChunkExtractor __METHODTYPE__(int,androidx.media3.common.Format,boolean,java.util.List,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.analytics.PlayerId));

        <androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory FACTORY> = $r0;

        $r1 = new androidx.media3.extractor.PositionHolder;

        specialinvoke $r1.<androidx.media3.extractor.PositionHolder: void <init>()>();

        <androidx.media3.exoplayer.source.chunk.BundledChunkExtractor: androidx.media3.extractor.PositionHolder POSITION_HOLDER> = $r1;

        return;
    }

androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int id>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int type>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format manifestFormat>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.DummyTrackOutput fakeTrackOutput>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>
<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: long endTimeUs>
    public void <init>(int, int, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        int i0, i1;
        androidx.media3.common.Format r1;
        androidx.media3.extractor.DummyTrackOutput $r2;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.Format;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int id> = i0;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int type> = i1;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format manifestFormat> = r1;

        $r2 = new androidx.media3.extractor.DummyTrackOutput;

        specialinvoke $r2.<androidx.media3.extractor.DummyTrackOutput: void <init>()>();

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.DummyTrackOutput fakeTrackOutput> = $r2;

        return;
    }

    public void bind(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider, long)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider r1;
        long l0;
        int $i1, $i2;
        androidx.media3.extractor.TrackOutput $r2, $r5, r7;
        androidx.media3.common.Format $r3, $r4;
        androidx.media3.extractor.DummyTrackOutput $r6;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider;

        l0 := @parameter1: long;

        if r1 != null goto label1;

        $r6 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.DummyTrackOutput fakeTrackOutput>;

        r7 = (androidx.media3.extractor.TrackOutput) $r6;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput> = r7;

        return;

     label1:
        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: long endTimeUs> = l0;

        $i2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int id>;

        $i1 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: int type>;

        $r2 = interfaceinvoke r1.<androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider: androidx.media3.extractor.TrackOutput track(int,int)>($i2, $i1);

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput> = $r2;

        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat>;

        if $r3 == null goto label2;

        $r5 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>;

        $r4 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat>;

        interfaceinvoke $r5.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r4);

     label2:
        return;
    }

    public void format(androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        androidx.media3.common.Format r1, $r2, $r5, $r7, $r9;
        androidx.media3.extractor.TrackOutput $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format manifestFormat>;

        if $r2 == null goto label1;

        $r7 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format manifestFormat>;

        $r9 = virtualinvoke r1.<androidx.media3.common.Format: androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format)>($r7);

        goto label2;

     label1:
        $r9 = r1;

     label2:
        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat> = $r9;

        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r6 = (androidx.media3.extractor.TrackOutput) $r4;

        $r5 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.common.Format sampleFormat>;

        interfaceinvoke $r6.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r5);

        return;
    }

    public int sampleData(androidx.media3.common.DataReader, int, boolean, int) throws java.io.IOException
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        androidx.media3.common.DataReader r1;
        int i0, i1, $i2;
        boolean z0;
        androidx.media3.extractor.TrackOutput $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        r1 := @parameter0: androidx.media3.common.DataReader;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.extractor.TrackOutput) $r3;

        $i2 = interfaceinvoke $r4.<androidx.media3.extractor.TrackOutput: int sampleData(androidx.media3.common.DataReader,int,boolean)>(r1, i0, z0);

        return $i2;
    }

    public void sampleData(androidx.media3.common.util.ParsableByteArray, int, int)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1;
        androidx.media3.extractor.TrackOutput $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (androidx.media3.extractor.TrackOutput) $r3;

        interfaceinvoke $r4.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, i0);

        return;
    }

    public void sampleMetadata(long, int, int, int, androidx.media3.extractor.TrackOutput$CryptoData)
    {
        androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput r0;
        long l0, $l4, $l6;
        int i1, i2, i3;
        androidx.media3.extractor.TrackOutput$CryptoData r1;
        byte $b5, $b7;
        androidx.media3.extractor.DummyTrackOutput $r2;
        androidx.media3.extractor.TrackOutput $r3, $r5, r6;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: androidx.media3.extractor.TrackOutput$CryptoData;

        $l4 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: long endTimeUs>;

        $b5 = $l4 cmp -9223372036854775807L;

        if $b5 == 0 goto label1;

        $l6 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: long endTimeUs>;

        $b7 = l0 cmp $l6;

        if $b7 < 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.DummyTrackOutput fakeTrackOutput>;

        r6 = (androidx.media3.extractor.TrackOutput) $r2;

        r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput> = r6;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput: androidx.media3.extractor.TrackOutput trackOutput>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.extractor.TrackOutput) $r4;

        interfaceinvoke $r5.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>(l0, i1, i2, i3, r1);

        return;
    }

