androidx.car.app.testing.TestAppManager
<androidx.car.app.testing.TestAppManager: java.util.List mToastsShown>
<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>
<androidx.car.app.testing.TestAppManager: androidx.car.app.SurfaceCallback mSurfaceCallback>
    public void reset()
    {
        androidx.car.app.testing.TestAppManager r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r0.<androidx.car.app.testing.TestAppManager: androidx.car.app.SurfaceCallback mSurfaceCallback> = null;

        $r1 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mToastsShown>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public androidx.car.app.SurfaceCallback getSurfaceCallback()
    {
        androidx.car.app.testing.TestAppManager r0;
        androidx.car.app.SurfaceCallback $r1;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        $r1 = r0.<androidx.car.app.testing.TestAppManager: androidx.car.app.SurfaceCallback mSurfaceCallback>;

        return $r1;
    }

    public java.util.List getToastsShown()
    {
        androidx.car.app.testing.TestAppManager r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        $r1 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mToastsShown>;

        $r2 = staticinvoke <androidx.car.app.utils.CollectionUtils: java.util.List unmodifiableCopy(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getTemplatesReturned()
    {
        androidx.car.app.testing.TestAppManager r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        $r1 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        $r2 = staticinvoke <androidx.car.app.utils.CollectionUtils: java.util.List unmodifiableCopy(java.util.List)>($r1);

        return $r2;
    }

    public void setSurfaceCallback(androidx.car.app.SurfaceCallback)
    {
        androidx.car.app.testing.TestAppManager r0;
        androidx.car.app.SurfaceCallback r1;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r1 := @parameter0: androidx.car.app.SurfaceCallback;

        r0.<androidx.car.app.testing.TestAppManager: androidx.car.app.SurfaceCallback mSurfaceCallback> = r1;

        return;
    }

    public void showToast(java.lang.CharSequence, int)
    {
        androidx.car.app.testing.TestAppManager r0;
        java.lang.CharSequence r1, $r4;
        int i0;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mToastsShown>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (java.lang.CharSequence) $r3;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    void resetTemplatesStoredForScreen(androidx.car.app.Screen)
    {
        androidx.car.app.testing.TestAppManager r0;
        androidx.car.app.Screen r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        android.util.Pair r4;
        java.util.List $r6, $r7, $r8;
        boolean $z0;
        java.lang.Object $r9, $r10;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r1 := @parameter0: androidx.car.app.Screen;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r9;

        $r10 = r4.<android.util.Pair: java.lang.Object first>;

        if $r10 == r1 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        $r7 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

        $r8 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    void addTemplateReturned(androidx.car.app.Screen, androidx.car.app.model.Template)
    {
        androidx.car.app.testing.TestAppManager r0;
        androidx.car.app.Screen r1;
        androidx.car.app.model.Template r2;
        java.util.List $r3;
        android.util.Pair $r4;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r1 := @parameter0: androidx.car.app.Screen;

        r2 := @parameter1: androidx.car.app.model.Template;

        $r3 = r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned>;

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r1, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    void <init>(androidx.car.app.testing.TestCarContext, androidx.car.app.HostDispatcher)
    {
        androidx.car.app.testing.TestAppManager r0;
        androidx.car.app.testing.TestCarContext r1;
        androidx.car.app.HostDispatcher r2;
        androidx.car.app.testing.TestLifecycleOwner $r3;
        androidx.lifecycle.LifecycleRegistry $r4;
        java.util.ArrayList $r5, $r6;

        r0 := @this: androidx.car.app.testing.TestAppManager;

        r1 := @parameter0: androidx.car.app.testing.TestCarContext;

        r2 := @parameter1: androidx.car.app.HostDispatcher;

        $r3 = virtualinvoke r1.<androidx.car.app.testing.TestCarContext: androidx.car.app.testing.TestLifecycleOwner getLifecycleOwner()>();

        $r4 = $r3.<androidx.car.app.testing.TestLifecycleOwner: androidx.lifecycle.LifecycleRegistry mRegistry>;

        specialinvoke r0.<androidx.car.app.AppManager: void <init>(androidx.car.app.CarContext,androidx.car.app.HostDispatcher,androidx.lifecycle.Lifecycle)>(r1, r2, $r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.car.app.testing.TestAppManager: java.util.List mToastsShown> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.car.app.testing.TestAppManager: java.util.List mTemplatesReturned> = $r6;

        return;
    }

