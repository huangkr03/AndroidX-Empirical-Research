androidx.compose.ActualJvmKt
<androidx.compose.ActualJvmKt: kotlinx.collections.immutable.PersistentMap emptyPersistentMap>
    public static final int identityHashCode(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        return $i0;
    }

    public static final java.lang.Object 'synchronized'(java.lang.Object, kotlin.jvm.functions.Function0)
    {
        java.lang.Object r0, r2;
        kotlin.jvm.functions.Function0 r1;
        boolean z1, z3;
        java.lang.Throwable $r3, r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "lock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        z1 = 0;

        z3 = 0;

        entermonitor r0;

     label1:
        r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(2);

        exitmonitor r0;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(2);

        return r2;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r0;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.BuildableMap buildableMapOf()
    {
        androidx.compose.BuildableMap $r0;
        kotlinx.collections.immutable.PersistentMap $r1;

        $r0 = new androidx.compose.BuildableMap;

        $r1 = <androidx.compose.ActualJvmKt: kotlinx.collections.immutable.PersistentMap emptyPersistentMap>;

        specialinvoke $r0.<androidx.compose.BuildableMap: void <init>(kotlinx.collections.immutable.PersistentMap)>($r1);

        return $r0;
    }

    public static final void <clinit>()
    {
        kotlin.Pair[] $r0;
        kotlinx.collections.immutable.PersistentMap $r1;

        $r0 = newarray (kotlin.Pair)[0];

        $r1 = staticinvoke <kotlinx.collections.immutable.ExtensionsKt: kotlinx.collections.immutable.PersistentMap persistentHashMapOf(kotlin.Pair[])>($r0);

        <androidx.compose.ActualJvmKt: kotlinx.collections.immutable.PersistentMap emptyPersistentMap> = $r1;

        return;
    }

