androidx.mediarouter.media.MediaRouteDescriptor
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_ID>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_GROUP_MEMBER_IDS>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_NAME>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_DESCRIPTION>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_ICON_URI>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_ENABLED>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String IS_DYNAMIC_GROUP_ROUTE>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_CONNECTING>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_CONNECTION_STATE>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_CONTROL_FILTERS>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_PLAYBACK_TYPE>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_PLAYBACK_STREAM>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_DEVICE_TYPE>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_VOLUME>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_VOLUME_MAX>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_VOLUME_HANDLING>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_PRESENTATION_DISPLAY_ID>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_EXTRAS>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_CAN_DISCONNECT>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_SETTINGS_INTENT>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_MIN_CLIENT_VERSION>
<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String KEY_MAX_CLIENT_VERSION>
<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>
<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds>
<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>
    void <init>(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle> = r1;

        return;
    }

    public java.lang.String getId()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("id");

        return $r2;
    }

    public java.util.List getGroupMemberIds()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.util.List $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: void ensureGroupMemberIds()>();

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds>;

        return $r1;
    }

    void ensureGroupMemberIds()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.util.List $r1, $r4, $r5;
        android.os.Bundle $r2;
        java.util.ArrayList $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds>;

        if $r1 != null goto label1;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>("groupMemberIds");

        r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds> = $r3;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds>;

        if $r4 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mGroupMemberIds> = $r5;

     label1:
        return;
    }

    public java.lang.String getName()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("name");

        return $r2;
    }

    public java.lang.String getDescription()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("status");

        return $r2;
    }

    public android.net.Uri getIconUri()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.lang.String r1;
        android.os.Bundle $r2;
        android.net.Uri $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        r1 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("iconUri");

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

     label2:
        return $r3;
    }

    public boolean isEnabled()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("enabled", 1);

        return $z0;
    }

    public boolean isDynamicGroupRoute()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("isDynamicGroupRoute", 0);

        return $z0;
    }

    public boolean isConnecting()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("connecting", 0);

        return $z0;
    }

    public int getConnectionState()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("connectionState", 0);

        return $i0;
    }

    public boolean canDisconnectAndKeepPlaying()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("canDisconnect", 0);

        return $z0;
    }

    public android.content.IntentSender getSettingsActivity()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;
        android.content.IntentSender $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("settingsIntent");

        $r3 = (android.content.IntentSender) $r2;

        return $r3;
    }

    public java.util.List getControlFilters()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.util.List $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: void ensureControlFilters()>();

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>;

        return $r1;
    }

    void ensureControlFilters()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.util.List $r1, $r4, $r5;
        android.os.Bundle $r2;
        java.util.ArrayList $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>;

        if $r1 != null goto label1;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>("controlFilters");

        r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters> = $r3;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>;

        if $r4 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters> = $r5;

     label1:
        return;
    }

    public int getPlaybackType()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("playbackType", 1);

        return $i0;
    }

    public int getPlaybackStream()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("playbackStream", -1);

        return $i0;
    }

    public int getDeviceType()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("deviceType");

        return $i0;
    }

    public int getVolume()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("volume");

        return $i0;
    }

    public int getVolumeMax()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("volumeMax");

        return $i0;
    }

    public int getVolumeHandling()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("volumeHandling", 0);

        return $i0;
    }

    public int getPresentationDisplayId()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("presentationDisplayId", -1);

        return $i0;
    }

    public android.os.Bundle getExtras()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("extras");

        return $r2;
    }

    public int getMinClientVersion()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("minClientVersion", 1);

        return $i0;
    }

    public int getMaxClientVersion()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("maxClientVersion", 2147483647);

        return $i0;
    }

    public boolean isValid()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;
        java.util.List $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: void ensureControlFilters()>();

        $r1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>;

        $z2 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z2 == 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.String toString()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        java.lang.StringBuilder r1, $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r21, $r23, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r45, $r47, $r49;
        java.lang.String $r5, $r11, $r14, $r26, $r52;
        java.util.List $r8, $r24;
        android.net.Uri $r17;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object[] $r25;
        android.os.Bundle $r43;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaRouteDescriptor{ ");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $r5 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupMemberIds=");

        $r8 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");

        $r11 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");

        $r14 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getDescription()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", iconUri=");

        $r17 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.net.Uri getIconUri()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isEnabled=");

        $z0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: boolean isEnabled()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connectionState=");

        $i0 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getConnectionState()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", controlFilters=");

        $r24 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object[] toArray()>();

        $r26 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r25);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", playbackType=");

        $i1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getPlaybackType()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", playbackStream=");

        $i2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getPlaybackStream()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceType=");

        $i3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getDeviceType()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r34 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", volume=");

        $i4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolume()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r36 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", volumeMax=");

        $i5 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeMax()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r38 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", volumeHandling=");

        $i6 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeHandling()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r40 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", presentationDisplayId=");

        $i7 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getPresentationDisplayId()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r42 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", extras=");

        $r43 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle getExtras()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isValid=");

        $z1 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: boolean isValid()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r47 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minClientVersion=");

        $i8 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getMinClientVersion()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r49 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxClientVersion=");

        $i9 = virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor: int getMaxClientVersion()>();

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r52 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r52;
    }

    public android.os.Bundle asBundle()
    {
        androidx.mediarouter.media.MediaRouteDescriptor r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        return $r1;
    }

    public static androidx.mediarouter.media.MediaRouteDescriptor fromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        androidx.mediarouter.media.MediaRouteDescriptor $r1;

        r0 := @parameter0: android.os.Bundle;

        if r0 == null goto label1;

        $r1 = new androidx.mediarouter.media.MediaRouteDescriptor;

        specialinvoke $r1.<androidx.mediarouter.media.MediaRouteDescriptor: void <init>(android.os.Bundle)>(r0);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

androidx.mediarouter.media.MediaRouteDescriptor$Builder
<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>
<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>
<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>
    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1, r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle> = $r3;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setId(java.lang.String)>(r1);

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setName(java.lang.String)>(r2);

        return;
    }

    public void <init>(androidx.mediarouter.media.MediaRouteDescriptor)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;
        android.os.Bundle $r2, $r3;
        java.util.List $r4, $r5, $r7, $r9;
        boolean $z0, $z1;
        java.util.ArrayList $r6, $r8;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("descriptor must not be null");

        throw $r10;

     label1:
        $r2 = new android.os.Bundle;

        $r3 = r1.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle mBundle>;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r3);

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle> = $r2;

        $r4 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r8 = new java.util.ArrayList;

        $r9 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds> = $r8;

     label2:
        $r5 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r6 = new java.util.ArrayList;

        $r7 = r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List mControlFilters>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters> = $r6;

     label3:
        return;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1;
        android.os.Bundle $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("id must not be null");

        throw $r3;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("id", r1);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder clearGroupMemberIds()
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds> = $r3;

        goto label2;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label2:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder addGroupMemberId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("groupMemberId must not be empty");

        throw $r6;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds> = $r5;

     label2:
        $r3 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label3;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder addGroupMemberIds(java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.String r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("groupMemberIds must not be null");

        throw $r6;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r4;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder addGroupMemberId(java.lang.String)>(r3);

        goto label2;

     label3:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder removeGroupMemberId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1;
        boolean $z0;
        java.util.ArrayList $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("memberRouteId must not be empty");

        throw $r4;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label2:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setName(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1;
        android.os.Bundle $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name must not be null");

        throw $r3;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("name", r1);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setDescription(java.lang.String)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.lang.String r1;
        android.os.Bundle $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("status", r1);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setIconUri(android.net.Uri)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        android.net.Uri r1;
        android.os.Bundle $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iconUri must not be null");

        throw $r4;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("iconUri", $r3);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setEnabled(boolean)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        boolean z0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabled", z0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setIsDynamicGroupRoute(boolean)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        boolean z0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isDynamicGroupRoute", z0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setConnecting(boolean)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        boolean z0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("connecting", z0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setConnectionState(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("connectionState", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setCanDisconnect(boolean)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        boolean z0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("canDisconnect", z0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setSettingsActivity(android.content.IntentSender)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        android.content.IntentSender r1;
        android.os.Bundle $r2;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: android.content.IntentSender;

        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("settingsIntent", r1);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder addControlFilter(android.content.IntentFilter)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        android.content.IntentFilter r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: android.content.IntentFilter;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filter must not be null");

        throw $r6;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters> = $r5;

     label2:
        $r3 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder addControlFilters(java.util.Collection)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        android.content.IntentFilter r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("filters must not be null");

        throw $r6;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.IntentFilter) $r4;

        if r3 == null goto label3;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder addControlFilter(android.content.IntentFilter)>(r3);

     label3:
        goto label2;

     label4:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setPlaybackType(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("playbackType", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setPlaybackStream(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("playbackStream", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setDeviceType(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("deviceType", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolume(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("volume", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeMax(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("volumeMax", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeHandling(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("volumeHandling", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setPresentationDisplayId(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("presentationDisplayId", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setExtras(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        android.os.Bundle r1, $r2, $r3, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r4.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", null);

        goto label2;

     label1:
        $r3 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        virtualinvoke $r3.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("extras", $r2);

     label2:
        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setMinClientVersion(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("minClientVersion", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor$Builder setMaxClientVersion(int)
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        int i0;
        android.os.Bundle $r1;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("maxClientVersion", i0);

        return r0;
    }

    public androidx.mediarouter.media.MediaRouteDescriptor build()
    {
        androidx.mediarouter.media.MediaRouteDescriptor$Builder r0;
        java.util.ArrayList $r1, $r2, $r5, $r7;
        androidx.mediarouter.media.MediaRouteDescriptor $r3;
        android.os.Bundle $r4, $r6, $r8;

        r0 := @this: androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        $r1 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>;

        if $r1 == null goto label1;

        $r8 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        $r7 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mControlFilters>;

        virtualinvoke $r8.<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>("controlFilters", $r7);

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        if $r2 == null goto label2;

        $r6 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        $r5 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: java.util.ArrayList mGroupMemberIds>;

        virtualinvoke $r6.<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>("groupMemberIds", $r5);

     label2:
        $r3 = new androidx.mediarouter.media.MediaRouteDescriptor;

        $r4 = r0.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: android.os.Bundle mBundle>;

        specialinvoke $r3.<androidx.mediarouter.media.MediaRouteDescriptor: void <init>(android.os.Bundle)>($r4);

        return $r3;
    }

