kotlin.collections.MovingSubList
<kotlin.collections.MovingSubList: int _size>
<kotlin.collections.MovingSubList: int fromIndex>
<kotlin.collections.MovingSubList: java.util.List list>
    public void <init>(java.util.List)
    {
        kotlin.collections.MovingSubList $r0;
        java.util.List $r1;

        $r0 := @this: kotlin.collections.MovingSubList;

        $r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "list");

        specialinvoke $r0.<kotlin.collections.AbstractList: void <init>()>();

        $r0.<kotlin.collections.MovingSubList: java.util.List list> = $r1;

        return;
    }

    public java.lang.Object get(int)
    {
        kotlin.collections.MovingSubList $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        kotlin.collections.AbstractList$Companion $r2;
        java.util.List $r3;

        $r0 := @this: kotlin.collections.MovingSubList;

        $i0 := @parameter0: int;

        $r2 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i1 = $r0.<kotlin.collections.MovingSubList: int _size>;

        virtualinvoke $r2.<kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)>($i0, $i1);

        $r3 = $r0.<kotlin.collections.MovingSubList: java.util.List list>;

        $i1 = $r0.<kotlin.collections.MovingSubList: int fromIndex>;

        $i0 = $i1 + $i0;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        return $r1;
    }

    public int getSize()
    {
        kotlin.collections.MovingSubList $r0;
        int i0;

        $r0 := @this: kotlin.collections.MovingSubList;

        i0 = $r0.<kotlin.collections.MovingSubList: int _size>;

        return i0;
    }

    public final void move(int, int)
    {
        kotlin.collections.MovingSubList $r0;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;
        java.util.List $r2;

        $r0 := @this: kotlin.collections.MovingSubList;

        $i0 := @parameter0: int;

        $i2 := @parameter1: int;

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $r2 = $r0.<kotlin.collections.MovingSubList: java.util.List list>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i2, $i1);

        $r0.<kotlin.collections.MovingSubList: int fromIndex> = $i0;

        $i0 = $i2 - $i0;

        $r0.<kotlin.collections.MovingSubList: int _size> = $i0;

        return;
    }

