org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil
    public void <init>()
    {
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil r0;

        r0 := @this: org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.reflect.Method dupeMethod(java.lang.reflect.Method, java.lang.ClassLoader) throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException
    {
        java.lang.reflect.Method r0, $r7;
        java.lang.ClassLoader r1;
        java.lang.Class r2, $r4;
        java.lang.Class[] r3;
        java.lang.String $r5, $r6;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.ClassLoader;

        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r5, 1, r1);

        r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r6 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r6, r3);

        return $r7;
    }

    public static java.lang.Object castToSuppLibClass(java.lang.Class, java.lang.reflect.InvocationHandler)
    {
        java.lang.Class r0, $r2;
        java.lang.reflect.InvocationHandler r1;
        java.lang.ClassLoader $r3;
        java.lang.Class[] $r4;
        java.lang.Object $r5, $r6;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.reflect.InvocationHandler;

        $r2 = class "Lorg/chromium/support_lib_boundary/util/BoundaryInterfaceReflectionUtil;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = r0;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r3, $r4, r1);

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r5);

        return $r6;
    }

    public static java.lang.reflect.InvocationHandler createInvocationHandlerFor(java.lang.Object)
    {
        java.lang.Object r0;
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter;

        specialinvoke $r1.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.lang.Object getDelegateFromInvocationHandler(java.lang.reflect.InvocationHandler)
    {
        java.lang.reflect.InvocationHandler r0;
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.reflect.InvocationHandler;

        r1 = (org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter) r0;

        $r2 = virtualinvoke r1.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object getDelegate()>();

        return $r2;
    }

    public static boolean containsFeature(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter
<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object mDelegate>
    public void <init>(java.lang.Object)
    {
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter r0;
        java.lang.Object r1;

        r0 := @this: org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object mDelegate> = r1;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter r0;
        java.lang.Object r1, $r5, $r8, $r9;
        java.lang.reflect.Method r2, $r7;
        java.lang.Object[] r3;
        java.lang.ClassLoader r4;
        java.lang.Class $r6;
        java.lang.Throwable $r10, $r16, $r17, r18, r19;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        $r5 = r0.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object mDelegate>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        $r7 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.reflect.Method dupeMethod(java.lang.reflect.Method,java.lang.ClassLoader)>(r2, r4);

        $r8 = r0.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object mDelegate>;

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r8, r3);

     label2:
        return $r9;

     label3:
        $r16 := @caughtexception;

        r18 = $r16;

        $r17 = virtualinvoke r18.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        throw $r17;

     label4:
        $r10 := @caughtexception;

        r19 = $r10;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reflection failed for method ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r19);

        throw $r11;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.ReflectiveOperationException from label1 to label2 with label4;
    }

    public java.lang.Object getDelegate()
    {
        org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter r0;
        java.lang.Object $r1;

        r0 := @this: org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter;

        $r1 = r0.<org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil$InvocationHandlerWithDelegateGetter: java.lang.Object mDelegate>;

        return $r1;
    }

