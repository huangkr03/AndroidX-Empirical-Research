androidx.room.compiler.processing.util.TestUiltsKt
    public static final java.util.Set getSystemClasspathFiles()
    {
        java.lang.Iterable $r0, $r9;
        java.util.Collection r1, r5;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.lang.String r4;
        java.util.Set $r6, $r10;
        java.util.ArrayList $r7;
        int $i0;
        boolean $z3;
        java.util.List $r8;
        java.io.File $r11;

        $r6 = staticinvoke <androidx.room.compiler.processing.util.TestUiltsKt: java.util.Set getSystemClasspaths()>();

        $r0 = (java.lang.Iterable) $r6;

        $r7 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r0, 10);

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r1 = (java.util.Collection) $r7;

        r2 = interfaceinvoke $r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) r3;

        r5 = r1;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r4);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r8 = (java.util.List) r1;

        $r9 = (java.lang.Iterable) $r8;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r9);

        return $r10;
    }

    public static final java.util.Set getSystemClasspaths()
    {
        java.lang.String r0, $r2, $r3;
        java.lang.String[] r1;
        java.lang.CharSequence $r4;
        java.util.List $r5;
        java.lang.Iterable $r6;
        java.util.Set $r7;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("path.separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r2);

        r0 = $r2;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.class.path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $r4 = (java.lang.CharSequence) $r3;

        r1 = newarray (java.lang.String)[1];

        r1[0] = r0;

        $r5 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r4, r1, 0, 0, 6, null);

        $r6 = (java.lang.Iterable) $r5;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r6);

        return $r7;
    }

    public static final java.util.List toDiagnosticMessages(java.util.List, java.util.Map)
    {
        java.util.List $r0, $r11;
        java.util.Map r1;
        java.lang.Iterable $r2;
        java.util.Collection r3, r9;
        java.util.Iterator r4;
        java.lang.Object r5, $r12, $r17;
        javax.tools.Diagnostic r6;
        javax.tools.JavaFileObject r7, r18;
        androidx.room.compiler.processing.util.Source r8, $r19;
        java.util.ArrayList $r10;
        int $i0, $i2;
        boolean $z4;
        long $l1;
        androidx.room.compiler.processing.util.DiagnosticMessage $r13;
        javax.tools.Diagnostic$Kind $r14;
        java.util.Locale $r15;
        java.lang.String $r16;
        androidx.room.compiler.processing.util.DiagnosticLocation $r20, r21;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "javaSources");

        $r2 = (java.lang.Iterable) $r0;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r3 = (java.util.Collection) $r10;

        r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.tools.Diagnostic) r5;

        r9 = r3;

        $r12 = interfaceinvoke r6.<javax.tools.Diagnostic: java.lang.Object getSource()>();

        r18 = (javax.tools.JavaFileObject) $r12;

        if r18 == null goto label2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r18, "source");

        r7 = r18;

        $r17 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r19 = (androidx.room.compiler.processing.util.Source) $r17;

        goto label3;

     label2:
        $r19 = null;

     label3:
        r8 = $r19;

        if r8 != null goto label4;

        $r20 = (androidx.room.compiler.processing.util.DiagnosticLocation) null;

        goto label5;

     label4:
        $r20 = new androidx.room.compiler.processing.util.DiagnosticLocation;

        $l1 = interfaceinvoke r6.<javax.tools.Diagnostic: long getLineNumber()>();

        $i2 = (int) $l1;

        specialinvoke $r20.<androidx.room.compiler.processing.util.DiagnosticLocation: void <init>(androidx.room.compiler.processing.util.Source,int)>(r8, $i2);

     label5:
        r21 = $r20;

        $r13 = new androidx.room.compiler.processing.util.DiagnosticMessage;

        $r14 = interfaceinvoke r6.<javax.tools.Diagnostic: javax.tools.Diagnostic$Kind getKind()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "diagnostic.kind");

        $r15 = <java.util.Locale: java.util.Locale US>;

        $r16 = interfaceinvoke r6.<javax.tools.Diagnostic: java.lang.String getMessage(java.util.Locale)>($r15);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "diagnostic.getMessage(Locale.US)");

        specialinvoke $r13.<androidx.room.compiler.processing.util.DiagnosticMessage: void <init>(javax.tools.Diagnostic$Kind,java.lang.String,androidx.room.compiler.processing.util.DiagnosticLocation)>($r14, $r16, r21);

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        goto label1;

     label6:
        $r11 = (java.util.List) r3;

        return $r11;
    }

