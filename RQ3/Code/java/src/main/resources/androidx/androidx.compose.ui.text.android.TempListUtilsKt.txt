androidx.compose.ui.text.android.TempListUtilsKt
    public static final void fastForEach(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1;
        java.lang.Object r2;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "action");

        i1 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final java.util.Collection fastMapTo(java.util.List, java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        java.util.Collection r1;
        kotlin.jvm.functions.Function1 r2;
        int i0, i1;
        java.lang.Object r4, r5, $r6;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Collection;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "transform");

        i1 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = r4;

        $r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static final java.util.List fastZipWithNext(java.util.List, kotlin.jvm.functions.Function2)
    {
        java.util.List $r0, r2, $r4;
        kotlin.jvm.functions.Function2 r1;
        int i0, $i1, $i2, $i3, i4;
        java.lang.Object r3, $r6, r7;
        java.util.ArrayList $r5;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 == 0 goto label1;

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i2 != 1 goto label2;

     label1:
        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r5;

        r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        i4 = 0;

        i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

     label3:
        if i4 >= i0 goto label4;

        $i3 = i4 + 1;

        r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i3);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r7, r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        r7 = r3;

        i4 = i4 + 1;

        goto label3;

     label4:
        return r2;
    }

