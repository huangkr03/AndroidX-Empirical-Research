androidx.media3.session.MediaSession
<androidx.media3.session.MediaSession: java.lang.Object STATIC_LOCK>
<androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP>
<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>
    void <init>(android.content.Context, java.lang.String, androidx.media3.common.Player, android.app.PendingIntent, androidx.media3.session.MediaSession$Callback, android.os.Bundle, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSession r0;
        android.content.Context r1;
        java.lang.String r2, $r19;
        androidx.media3.common.Player r3;
        android.app.PendingIntent r4;
        androidx.media3.session.MediaSession$Callback r5;
        android.os.Bundle r6;
        androidx.media3.session.BitmapLoader r7;
        java.lang.Object r8, $r10;
        java.lang.Throwable r9, $r20;
        java.util.HashMap $r11, $r12;
        boolean $z0;
        androidx.media3.session.MediaSessionImpl $r14;
        java.lang.IllegalStateException $r15;
        java.lang.StringBuilder $r16, $r17, $r18;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.common.Player;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: androidx.media3.session.MediaSession$Callback;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = <androidx.media3.session.MediaSession: java.lang.Object STATIC_LOCK>;

        r8 = $r10;

        entermonitor $r10;

     label1:
        $r11 = <androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP>;

        $z0 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session ID must be unique. ID=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label2:
        $r12 = <androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        exitmonitor r8;

     label3:
        goto label6;

     label4:
        $r20 := @caughtexception;

        r9 = $r20;

        exitmonitor r8;

     label5:
        throw r9;

     label6:
        $r14 = virtualinvoke r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl createImpl(android.content.Context,java.lang.String,androidx.media3.common.Player,android.app.PendingIntent,androidx.media3.session.MediaSession$Callback,android.os.Bundle,androidx.media3.session.BitmapLoader)>(r1, r2, r3, r4, r5, r6, r7);

        r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl> = $r14;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    androidx.media3.session.MediaSessionImpl createImpl(android.content.Context, java.lang.String, androidx.media3.common.Player, android.app.PendingIntent, androidx.media3.session.MediaSession$Callback, android.os.Bundle, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSession r0;
        android.content.Context r1;
        java.lang.String r2;
        androidx.media3.common.Player r3;
        android.app.PendingIntent r4;
        androidx.media3.session.MediaSession$Callback r5;
        android.os.Bundle r6;
        androidx.media3.session.BitmapLoader r7;
        androidx.media3.session.MediaSessionImpl $r8;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.common.Player;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: androidx.media3.session.MediaSession$Callback;

        r6 := @parameter5: android.os.Bundle;

        r7 := @parameter6: androidx.media3.session.BitmapLoader;

        $r8 = new androidx.media3.session.MediaSessionImpl;

        specialinvoke $r8.<androidx.media3.session.MediaSessionImpl: void <init>(androidx.media3.session.MediaSession,android.content.Context,java.lang.String,androidx.media3.common.Player,android.app.PendingIntent,androidx.media3.session.MediaSession$Callback,android.os.Bundle,androidx.media3.session.BitmapLoader)>(r0, r1, r2, r3, r4, r5, r6, r7);

        return $r8;
    }

    androidx.media3.session.MediaSessionImpl getImpl()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        return $r1;
    }

    static androidx.media3.session.MediaSession getSession(android.net.Uri)
    {
        android.net.Uri r0, $r9;
        java.lang.Object r1, $r5, $r8;
        java.util.Iterator r2;
        androidx.media3.session.MediaSession r3;
        java.lang.Throwable r4, $r10;
        java.util.HashMap $r6;
        java.util.Collection $r7;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        $r5 = <androidx.media3.session.MediaSession: java.lang.Object STATIC_LOCK>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = <androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.session.MediaSession) $r8;

        $r9 = specialinvoke r3.<androidx.media3.session.MediaSession: android.net.Uri getUri()>();

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, r0);

        if $z1 == 0 goto label4;

        exitmonitor r1;

     label3:
        return r3;

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        android.app.PendingIntent $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent getSessionActivity()>();

        return $r2;
    }

    public void setPlayer(androidx.media3.common.Player)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.common.Player r1, $r4;
        boolean $z0, $z1, $z2;
        android.os.Looper $r3, $r5, $r6, $r7;
        androidx.media3.session.MediaSessionImpl $r8;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.common.Player;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = interfaceinvoke r1.<androidx.media3.common.Player: boolean canAdvertiseSession()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $r3 = interfaceinvoke r1.<androidx.media3.common.Player: android.os.Looper getApplicationLooper()>();

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaSession: androidx.media3.common.Player getPlayer()>();

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Player: android.os.Looper getApplicationLooper()>();

        if $r3 != $r5 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        $r6 = interfaceinvoke r1.<androidx.media3.common.Player: android.os.Looper getApplicationLooper()>();

        $r7 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r6 != $r7 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $r8 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl: void setPlayer(androidx.media3.common.Player)>(r1);

        return;
    }

    public void release()
    {
        androidx.media3.session.MediaSession r0;
        java.lang.Throwable r1, $r8, $r9, r11;
        java.lang.Object $r2, r10;
        androidx.media3.session.MediaSessionImpl $r3, $r7;
        java.util.HashMap $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.session.MediaSession;

     label1:
        $r2 = <androidx.media3.session.MediaSession: java.lang.Object STATIC_LOCK>;

        r10 = $r2;

        entermonitor $r2;

     label2:
        $r4 = <androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP>;

        $r3 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r5 = virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: java.lang.String getId()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

        exitmonitor r10;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r10;

     label5:
        throw r1;

     label6:
        $r7 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: void release()>();

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        r11 = $r8;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label7 with label8;
    }

    boolean isReleased()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $z0 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        return $z0;
    }

    public androidx.media3.common.Player getPlayer()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        androidx.media3.session.PlayerWrapper $r2;
        androidx.media3.common.Player $r3;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r3 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player getWrappedPlayer()>();

        return $r3;
    }

    public java.lang.String getId()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: java.lang.String getId()>();

        return $r2;
    }

    public androidx.media3.session.SessionToken getToken()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        androidx.media3.session.SessionToken $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken getToken()>();

        return $r2;
    }

    public java.util.List getConnectedControllers()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: java.util.List getConnectedControllers()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;
        androidx.media3.session.MediaSessionImpl $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.util.List;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "controller must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "layout must not be null");

        $r5 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r1, r2);

        return $r6;
    }

    public void setCustomLayout(java.util.List)
    {
        androidx.media3.session.MediaSession r0;
        java.util.List r1;
        androidx.media3.session.MediaSessionImpl $r3;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: java.util.List;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "layout must not be null");

        $r3 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: void setCustomLayout(java.util.List)>(r1);

        return;
    }

    public void setAvailableCommands(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommands r2;
        androidx.media3.common.Player$Commands r3;
        androidx.media3.session.MediaSessionImpl $r7;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommands;

        r3 := @parameter2: androidx.media3.common.Player$Commands;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "controller must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "sessionCommands must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "playerCommands must not be null");

        $r7 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: void setAvailableCommands(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r1, r2, r3);

        return;
    }

    public void broadcastCustomCommand(androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        int $i0;
        androidx.media3.session.MediaSessionImpl $r5;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $i0 = r1.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "command must be a custom command");

        $r5 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: void broadcastCustomCommand(androidx.media3.session.SessionCommand,android.os.Bundle)>(r1, r2);

        return;
    }

    public void setSessionExtras(android.os.Bundle)
    {
        androidx.media3.session.MediaSession r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSessionImpl $r3;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r3.<androidx.media3.session.MediaSessionImpl: void setSessionExtras(android.os.Bundle)>(r1);

        return;
    }

    public void setSessionExtras(androidx.media3.session.MediaSession$ControllerInfo, android.os.Bundle)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        android.os.Bundle r2;
        androidx.media3.session.MediaSessionImpl $r5;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "controller must not be null");

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl: void setSessionExtras(androidx.media3.session.MediaSession$ControllerInfo,android.os.Bundle)>(r1, r2);

        return;
    }

    public androidx.media3.session.BitmapLoader getBitmapLoader()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        androidx.media3.session.BitmapLoader $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader getBitmapLoader()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommand r2;
        android.os.Bundle r3;
        int $i0;
        androidx.media3.session.MediaSessionImpl $r7;
        com.google.common.util.concurrent.ListenableFuture $r8;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $i0 = r2.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "command must be a custom command");

        $r7 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,android.os.Bundle)>(r1, r2, r3);

        return $r8;
    }

    android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        return $r2;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionCompatToken()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        android.support.v4.media.session.MediaSessionCompat$Token $r3;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r3 = virtualinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        return $r3;
    }

    void setLegacyControllerConnectionTimeoutMs(long)
    {
        androidx.media3.session.MediaSession r0;
        long l0;
        androidx.media3.session.MediaSessionImpl $r1;

        r0 := @this: androidx.media3.session.MediaSession;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: void setLegacyControllerConnectionTimeoutMs(long)>(l0);

        return;
    }

    void handleControllerConnectionFromService(androidx.media3.session.IMediaController, int, int, java.lang.String, int, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2, i3;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaSessionImpl $r4;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        $r4 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r4.<androidx.media3.session.MediaSessionImpl: void connectFromService(androidx.media3.session.IMediaController,int,int,java.lang.String,int,int,android.os.Bundle)>(r1, i0, i1, r2, i2, i3, r3);

        return;
    }

    android.os.IBinder getLegacyBrowserServiceBinder()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        android.os.IBinder $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: android.os.IBinder getLegacyBrowserServiceBinder()>();

        return $r2;
    }

    void setSessionPositionUpdateDelayMs(long)
    {
        androidx.media3.session.MediaSession r0;
        long l0;
        androidx.media3.session.MediaSessionImpl $r1;

        r0 := @this: androidx.media3.session.MediaSession;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: void setSessionPositionUpdateDelayMsOnHandler(long)>(l0);

        return;
    }

    void setListener(androidx.media3.session.MediaSession$Listener)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSession$Listener r1;
        androidx.media3.session.MediaSessionImpl $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        r1 := @parameter0: androidx.media3.session.MediaSession$Listener;

        $r2 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl: void setMediaSessionListener(androidx.media3.session.MediaSession$Listener)>(r1);

        return;
    }

    void clearListener()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: void clearMediaSessionListener()>();

        return;
    }

    private android.net.Uri getUri()
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.session.MediaSessionImpl $r1;
        android.net.Uri $r2;

        r0 := @this: androidx.media3.session.MediaSession;

        $r1 = r0.<androidx.media3.session.MediaSession: androidx.media3.session.MediaSessionImpl impl>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionImpl: android.net.Uri getUri()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.HashMap $r1;

        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.session");

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.media3.session.MediaSession: java.lang.Object STATIC_LOCK> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <androidx.media3.session.MediaSession: java.util.HashMap SESSION_ID_TO_SESSION_MAP> = $r1;

        return;
    }

androidx.media3.session.MediaSession$Builder$1
    void <init>()
    {
        androidx.media3.session.MediaSession$Builder$1 r0;

        r0 := @this: androidx.media3.session.MediaSession$Builder$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.session.MediaSession$Builder
    public void <init>(android.content.Context, androidx.media3.common.Player)
    {
        androidx.media3.session.MediaSession$Builder r0;
        android.content.Context r1;
        androidx.media3.common.Player r2;
        androidx.media3.session.MediaSession$Builder$1 $r3;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.common.Player;

        $r3 = new androidx.media3.session.MediaSession$Builder$1;

        specialinvoke $r3.<androidx.media3.session.MediaSession$Builder$1: void <init>()>();

        specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: void <init>(android.content.Context,androidx.media3.common.Player,androidx.media3.session.MediaSession$Callback)>(r1, r2, $r3);

        return;
    }

    public androidx.media3.session.MediaSession$Builder setSessionActivity(android.app.PendingIntent)
    {
        androidx.media3.session.MediaSession$Builder r0, $r3;
        android.app.PendingIntent r1;
        androidx.media3.session.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media3.session.MediaSession$Builder setId(java.lang.String)
    {
        androidx.media3.session.MediaSession$Builder r0, $r3;
        java.lang.String r1;
        androidx.media3.session.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$BuilderBase setId(java.lang.String)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media3.session.MediaSession$Builder setCallback(androidx.media3.session.MediaSession$Callback)
    {
        androidx.media3.session.MediaSession$Builder r0, $r3;
        androidx.media3.session.MediaSession$Callback r1;
        androidx.media3.session.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: androidx.media3.session.MediaSession$Callback;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$BuilderBase setCallback(androidx.media3.session.MediaSession$Callback)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media3.session.MediaSession$Builder setExtras(android.os.Bundle)
    {
        androidx.media3.session.MediaSession$Builder r0, $r3;
        android.os.Bundle r1;
        androidx.media3.session.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$BuilderBase setExtras(android.os.Bundle)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media3.session.MediaSession$Builder setBitmapLoader(androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSession$Builder r0, $r3;
        androidx.media3.session.BitmapLoader r1;
        androidx.media3.session.MediaSession$BuilderBase $r2;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: androidx.media3.session.BitmapLoader;

        $r2 = specialinvoke r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$BuilderBase setBitmapLoader(androidx.media3.session.BitmapLoader)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Builder) $r2;

        return $r3;
    }

    public androidx.media3.session.MediaSession build()
    {
        androidx.media3.session.MediaSession$Builder r0;
        androidx.media3.session.BitmapLoader $r1, $r3, $r11;
        androidx.media3.session.MediaSession $r2;
        android.content.Context $r4;
        java.lang.String $r5;
        androidx.media3.common.Player $r6;
        android.app.PendingIntent $r7;
        androidx.media3.session.MediaSession$Callback $r8;
        android.os.Bundle $r9;
        java.lang.Object $r10;
        androidx.media3.session.CacheBitmapLoader $r12;
        androidx.media3.session.SimpleBitmapLoader $r13;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        $r1 = r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        if $r1 != null goto label1;

        $r12 = new androidx.media3.session.CacheBitmapLoader;

        $r13 = new androidx.media3.session.SimpleBitmapLoader;

        specialinvoke $r13.<androidx.media3.session.SimpleBitmapLoader: void <init>()>();

        specialinvoke $r12.<androidx.media3.session.CacheBitmapLoader: void <init>(androidx.media3.session.BitmapLoader)>($r13);

        r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.BitmapLoader bitmapLoader> = $r12;

     label1:
        $r2 = new androidx.media3.session.MediaSession;

        $r4 = r0.<androidx.media3.session.MediaSession$Builder: android.content.Context context>;

        $r5 = r0.<androidx.media3.session.MediaSession$Builder: java.lang.String id>;

        $r6 = r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.common.Player player>;

        $r7 = r0.<androidx.media3.session.MediaSession$Builder: android.app.PendingIntent sessionActivity>;

        $r8 = r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Callback callback>;

        $r9 = r0.<androidx.media3.session.MediaSession$Builder: android.os.Bundle extras>;

        $r3 = r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r11 = (androidx.media3.session.BitmapLoader) $r10;

        specialinvoke $r2.<androidx.media3.session.MediaSession: void <init>(android.content.Context,java.lang.String,androidx.media3.common.Player,android.app.PendingIntent,androidx.media3.session.MediaSession$Callback,android.os.Bundle,androidx.media3.session.BitmapLoader)>($r4, $r5, $r6, $r7, $r8, $r9, $r11);

        return $r2;
    }

    public volatile androidx.media3.session.MediaSession$BuilderBase setBitmapLoader(androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSession$Builder r0, $r2;
        androidx.media3.session.BitmapLoader r1;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: androidx.media3.session.BitmapLoader;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Builder setBitmapLoader(androidx.media3.session.BitmapLoader)>(r1);

        return $r2;
    }

    public volatile androidx.media3.session.MediaSession$BuilderBase setExtras(android.os.Bundle)
    {
        androidx.media3.session.MediaSession$Builder r0, $r2;
        android.os.Bundle r1;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Builder setExtras(android.os.Bundle)>(r1);

        return $r2;
    }

    public volatile androidx.media3.session.MediaSession$BuilderBase setCallback(androidx.media3.session.MediaSession$Callback)
    {
        androidx.media3.session.MediaSession$Builder r0, $r2;
        androidx.media3.session.MediaSession$Callback r1;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: androidx.media3.session.MediaSession$Callback;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Builder setCallback(androidx.media3.session.MediaSession$Callback)>(r1);

        return $r2;
    }

    public volatile androidx.media3.session.MediaSession$BuilderBase setId(java.lang.String)
    {
        androidx.media3.session.MediaSession$Builder r0, $r2;
        java.lang.String r1;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Builder setId(java.lang.String)>(r1);

        return $r2;
    }

    public volatile androidx.media3.session.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        androidx.media3.session.MediaSession$Builder r0, $r2;
        android.app.PendingIntent r1;

        r0 := @this: androidx.media3.session.MediaSession$Builder;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSession$Builder: androidx.media3.session.MediaSession$Builder setSessionActivity(android.app.PendingIntent)>(r1);

        return $r2;
    }

androidx.media3.session.MediaSession$BuilderBase
<androidx.media3.session.MediaSession$BuilderBase: android.content.Context context>
<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.common.Player player>
<androidx.media3.session.MediaSession$BuilderBase: java.lang.String id>
<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$Callback callback>
<androidx.media3.session.MediaSession$BuilderBase: android.app.PendingIntent sessionActivity>
<androidx.media3.session.MediaSession$BuilderBase: android.os.Bundle extras>
<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.BitmapLoader bitmapLoader>
    public void <init>(android.content.Context, androidx.media3.common.Player, androidx.media3.session.MediaSession$Callback)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        android.content.Context r1, $r5;
        androidx.media3.common.Player r2, $r7;
        androidx.media3.session.MediaSession$Callback r3;
        java.lang.Object $r4, $r6;
        boolean $z0;
        android.os.Bundle $r8;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.common.Player;

        r3 := @parameter2: androidx.media3.session.MediaSession$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (android.content.Context) $r4;

        r0.<androidx.media3.session.MediaSession$BuilderBase: android.content.Context context> = $r5;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r7 = (androidx.media3.common.Player) $r6;

        r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.common.Player player> = $r7;

        $z0 = interfaceinvoke r2.<androidx.media3.common.Player: boolean canAdvertiseSession()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.session.MediaSession$BuilderBase: java.lang.String id> = "";

        r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$Callback callback> = r3;

        $r8 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<androidx.media3.session.MediaSession$BuilderBase: android.os.Bundle extras> = $r8;

        return;
    }

    public androidx.media3.session.MediaSession$BuilderBase setSessionActivity(android.app.PendingIntent)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        android.app.PendingIntent r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: android.app.PendingIntent;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.app.PendingIntent) $r2;

        r0.<androidx.media3.session.MediaSession$BuilderBase: android.app.PendingIntent sessionActivity> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaSession$BuilderBase setId(java.lang.String)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        java.lang.String r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<androidx.media3.session.MediaSession$BuilderBase: java.lang.String id> = $r3;

        return r0;
    }

    androidx.media3.session.MediaSession$BuilderBase setCallback(androidx.media3.session.MediaSession$Callback)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        androidx.media3.session.MediaSession$Callback r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: androidx.media3.session.MediaSession$Callback;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.session.MediaSession$Callback) $r2;

        r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession$Callback callback> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaSession$BuilderBase setExtras(android.os.Bundle)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        android.os.Bundle r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.os.Bundle) $r3;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r0.<androidx.media3.session.MediaSession$BuilderBase: android.os.Bundle extras> = $r2;

        return r0;
    }

    public androidx.media3.session.MediaSession$BuilderBase setBitmapLoader(androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSession$BuilderBase r0;
        androidx.media3.session.BitmapLoader r1;

        r0 := @this: androidx.media3.session.MediaSession$BuilderBase;

        r1 := @parameter0: androidx.media3.session.BitmapLoader;

        r0.<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.BitmapLoader bitmapLoader> = r1;

        return r0;
    }

<androidx.media3.session.MediaSession$BuilderBase: androidx.media3.session.MediaSession build()>
androidx.media3.session.MediaSession$Callback
    public androidx.media3.session.MediaSession$ConnectionResult onConnect(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        androidx.media3.session.SessionCommands r3;
        androidx.media3.common.Player$Commands r4;
        androidx.media3.session.SessionCommands$Builder $r5, $r6;
        androidx.media3.common.Player$Commands$Builder $r7, $r8;
        androidx.media3.session.MediaSession$ConnectionResult $r9;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        $r5 = new androidx.media3.session.SessionCommands$Builder;

        specialinvoke $r5.<androidx.media3.session.SessionCommands$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<androidx.media3.session.SessionCommands$Builder: androidx.media3.session.SessionCommands$Builder addAllSessionCommands()>();

        r3 = virtualinvoke $r6.<androidx.media3.session.SessionCommands$Builder: androidx.media3.session.SessionCommands build()>();

        $r7 = new androidx.media3.common.Player$Commands$Builder;

        specialinvoke $r7.<androidx.media3.common.Player$Commands$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands$Builder addAllCommands()>();

        r4 = virtualinvoke $r8.<androidx.media3.common.Player$Commands$Builder: androidx.media3.common.Player$Commands build()>();

        $r9 = staticinvoke <androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.MediaSession$ConnectionResult accept(androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r3, r4);

        return $r9;
    }

    public void onPostConnect(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        return;
    }

    public void onDisconnected(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        return;
    }

    public int onPlayerCommandRequest(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter2: int;

        return 0;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetRating(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.lang.String r3;
        androidx.media3.common.Rating r4;
        androidx.media3.session.SessionResult $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.media3.common.Rating;

        $r5 = new androidx.media3.session.SessionResult;

        specialinvoke $r5.<androidx.media3.session.SessionResult: void <init>(int)>(-6);

        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r5);

        return $r6;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetRating(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        androidx.media3.common.Rating r3;
        androidx.media3.session.SessionResult $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: androidx.media3.common.Rating;

        $r4 = new androidx.media3.session.SessionResult;

        specialinvoke $r4.<androidx.media3.session.SessionResult: void <init>(int)>(-6);

        $r5 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r4);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        androidx.media3.session.SessionCommand r3;
        android.os.Bundle r4;
        androidx.media3.session.SessionResult $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: androidx.media3.session.SessionCommand;

        r4 := @parameter3: android.os.Bundle;

        $r5 = new androidx.media3.session.SessionResult;

        specialinvoke $r5.<androidx.media3.session.SessionResult: void <init>(int)>(-6);

        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r5);

        return $r6;
    }

    public com.google.common.util.concurrent.ListenableFuture onAddMediaItems(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;
        java.lang.UnsupportedOperationException $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: java.util.List;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        $r5 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>($r4);

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetMediaItems(androidx.media3.session.MediaSession, androidx.media3.session.MediaSession$ControllerInfo, java.util.List, int, long)
    {
        androidx.media3.session.MediaSession$Callback r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;
        int i0;
        long l1;
        com.google.common.util.concurrent.ListenableFuture $r4, $r6;
        com.google.common.util.concurrent.AsyncFunction $r5;

        r0 := @this: androidx.media3.session.MediaSession$Callback;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter2: java.util.List;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        $r4 = interfaceinvoke r0.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onAddMediaItems(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r1, r2, r3);

        $r5 = dynamicinvoke "apply" <com.google.common.util.concurrent.AsyncFunction (int,long)>(i0, l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture lambda$onSetMediaItems$0(int,long,java.util.List)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.util.List));

        $r6 = staticinvoke <androidx.media3.common.util.Util: com.google.common.util.concurrent.ListenableFuture transformFutureAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction)>($r4, $r5);

        return $r6;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$onSetMediaItems$0(int, long, java.util.List) throws java.lang.Exception
    {
        int i0;
        long l1;
        java.util.List r0;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r0 := @parameter2: java.util.List;

        $r1 = new androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        specialinvoke $r1.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: void <init>(java.util.List,int,long)>(r0, i0, l1);

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r1);

        return $r2;
    }

androidx.media3.session.MediaSession$ConnectionResult
<androidx.media3.session.MediaSession$ConnectionResult: boolean isAccepted>
<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.SessionCommands availableSessionCommands>
<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.common.Player$Commands availablePlayerCommands>
    private void <init>(boolean, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaSession$ConnectionResult r0;
        boolean z0;
        androidx.media3.session.SessionCommands r1, $r4;
        androidx.media3.common.Player$Commands r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.media3.session.MediaSession$ConnectionResult;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.media3.session.SessionCommands;

        r2 := @parameter2: androidx.media3.common.Player$Commands;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaSession$ConnectionResult: boolean isAccepted> = z0;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.media3.session.SessionCommands) $r3;

        r0.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.SessionCommands availableSessionCommands> = $r4;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (androidx.media3.common.Player$Commands) $r5;

        r0.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.common.Player$Commands availablePlayerCommands> = $r6;

        return;
    }

    public static androidx.media3.session.MediaSession$ConnectionResult accept(androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.SessionCommands r0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.MediaSession$ConnectionResult $r2;

        r0 := @parameter0: androidx.media3.session.SessionCommands;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        $r2 = new androidx.media3.session.MediaSession$ConnectionResult;

        specialinvoke $r2.<androidx.media3.session.MediaSession$ConnectionResult: void <init>(boolean,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(1, r0, r1);

        return $r2;
    }

    public static androidx.media3.session.MediaSession$ConnectionResult reject()
    {
        androidx.media3.session.MediaSession$ConnectionResult $r0;
        androidx.media3.common.Player$Commands $r1;
        androidx.media3.session.SessionCommands $r2;

        $r0 = new androidx.media3.session.MediaSession$ConnectionResult;

        $r2 = <androidx.media3.session.SessionCommands: androidx.media3.session.SessionCommands EMPTY>;

        $r1 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        specialinvoke $r0.<androidx.media3.session.MediaSession$ConnectionResult: void <init>(boolean,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(0, $r2, $r1);

        return $r0;
    }

androidx.media3.session.MediaSession$ControllerCb
    public void onSessionResult(int, androidx.media3.session.SessionResult) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.SessionResult r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionResult;

        return;
    }

    public void onLibraryResult(int, androidx.media3.session.LibraryResult) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.LibraryResult r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.LibraryResult;

        return;
    }

    public void onPlayerChanged(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.PlayerWrapper) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.PlayerWrapper r1, r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.PlayerWrapper;

        return;
    }

    public void onPlayerInfoChanged(int, androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Commands, boolean, boolean, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        androidx.media3.session.PlayerInfo r1;
        androidx.media3.common.Player$Commands r2;
        boolean z0, z1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerInfo;

        r2 := @parameter2: androidx.media3.common.Player$Commands;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        return;
    }

    public void onPeriodicSessionPositionInfoChanged(int, androidx.media3.session.SessionPositionInfo, boolean, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.SessionPositionInfo r1;
        boolean z0, z1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionPositionInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        return;
    }

    public void onDisconnected(int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        return;
    }

    public void setCustomLayout(int, java.util.List) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        java.util.List r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        return;
    }

    public void onSessionExtrasChanged(int, android.os.Bundle) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        android.os.Bundle r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        return;
    }

    public void sendCustomCommand(int, androidx.media3.session.SessionCommand, android.os.Bundle) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommand;

        r2 := @parameter2: android.os.Bundle;

        return;
    }

    public void onAvailableCommandsChangedFromSession(int, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.session.SessionCommands r1;
        androidx.media3.common.Player$Commands r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommands;

        r2 := @parameter2: androidx.media3.common.Player$Commands;

        return;
    }

    public void onAvailableCommandsChangedFromPlayer(int, androidx.media3.common.Player$Commands) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.Player$Commands r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        return;
    }

    public void onChildrenChanged(int, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        return;
    }

    public void onSearchResultChanged(int, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        return;
    }

    public void onPlayerError(int, androidx.media3.common.PlaybackException) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.PlaybackException r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.PlaybackException;

        return;
    }

    public void onPlayWhenReadyChanged(int, boolean, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        return;
    }

    public void onPlaybackSuppressionReasonChanged(int, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onPlaybackStateChanged(int, int, androidx.media3.common.PlaybackException) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        androidx.media3.common.PlaybackException r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.common.PlaybackException;

        return;
    }

    public void onIsPlayingChanged(int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void onIsLoadingChanged(int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void onTracksChanged(int, androidx.media3.common.Tracks) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.Tracks r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Tracks;

        return;
    }

    public void onTrackSelectionParametersChanged(int, androidx.media3.common.TrackSelectionParameters) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.TrackSelectionParameters;

        return;
    }

    public void onPlaybackParametersChanged(int, androidx.media3.common.PlaybackParameters) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.PlaybackParameters r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.PlaybackParameters;

        return;
    }

    public void onPositionDiscontinuity(int, androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        androidx.media3.common.Player$PositionInfo r1, r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$PositionInfo;

        r2 := @parameter2: androidx.media3.common.Player$PositionInfo;

        i1 := @parameter3: int;

        return;
    }

    public void onMediaItemTransition(int, androidx.media3.common.MediaItem, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        androidx.media3.common.MediaItem r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaItem;

        i1 := @parameter2: int;

        return;
    }

    public void onTimelineChanged(int, androidx.media3.common.Timeline, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        androidx.media3.common.Timeline r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Timeline;

        i1 := @parameter2: int;

        return;
    }

    public void onPlaylistMetadataChanged(int, androidx.media3.common.MediaMetadata) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.MediaMetadata r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaMetadata;

        return;
    }

    public void onShuffleModeEnabledChanged(int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    public void onRepeatModeChanged(int, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onSeekBackIncrementChanged(int, long) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        return;
    }

    public void onSeekForwardIncrementChanged(int, long) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        long l1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        return;
    }

    public void onVideoSizeChanged(int, androidx.media3.common.VideoSize) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.VideoSize r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.VideoSize;

        return;
    }

    public void onVolumeChanged(int, float) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        float f0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        return;
    }

    public void onAudioAttributesChanged(int, androidx.media3.common.AudioAttributes) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.AudioAttributes r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.AudioAttributes;

        return;
    }

    public void onDeviceInfoChanged(int, androidx.media3.common.DeviceInfo) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.DeviceInfo r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.DeviceInfo;

        return;
    }

    public void onDeviceVolumeChanged(int, int, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        return;
    }

    public void onMediaMetadataChanged(int, androidx.media3.common.MediaMetadata) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;
        androidx.media3.common.MediaMetadata r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.MediaMetadata;

        return;
    }

    public void onRenderedFirstFrame(int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter0: int;

        return;
    }

androidx.media3.session.MediaSession$ControllerInfo
<androidx.media3.session.MediaSession$ControllerInfo: int LEGACY_CONTROLLER_VERSION>
<androidx.media3.session.MediaSession$ControllerInfo: int LEGACY_CONTROLLER_INTERFACE_VERSION>
<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>
<androidx.media3.session.MediaSession$ControllerInfo: int libraryVersion>
<androidx.media3.session.MediaSession$ControllerInfo: int interfaceVersion>
<androidx.media3.session.MediaSession$ControllerInfo: boolean isTrusted>
<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>
<androidx.media3.session.MediaSession$ControllerInfo: android.os.Bundle connectionHints>
    void <init>(androidx.media.MediaSessionManager$RemoteUserInfo, int, int, boolean, androidx.media3.session.MediaSession$ControllerCb, android.os.Bundle)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        int i0, i1;
        boolean z0;
        androidx.media3.session.MediaSession$ControllerCb r2;
        android.os.Bundle r3;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.media3.session.MediaSession$ControllerCb;

        r3 := @parameter5: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo> = r1;

        r0.<androidx.media3.session.MediaSession$ControllerInfo: int libraryVersion> = i0;

        r0.<androidx.media3.session.MediaSession$ControllerInfo: int interfaceVersion> = i1;

        r0.<androidx.media3.session.MediaSession$ControllerInfo: boolean isTrusted> = z0;

        r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb> = r2;

        r0.<androidx.media3.session.MediaSession$ControllerInfo: android.os.Bundle connectionHints> = r3;

        return;
    }

    androidx.media.MediaSessionManager$RemoteUserInfo getRemoteUserInfo()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        return $r1;
    }

    public int getControllerVersion()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $i0 = r0.<androidx.media3.session.MediaSession$ControllerInfo: int libraryVersion>;

        return $i0;
    }

    public int getInterfaceVersion()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $i0 = r0.<androidx.media3.session.MediaSession$ControllerInfo: int interfaceVersion>;

        return $i0;
    }

    public java.lang.String getPackageName()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r2 = virtualinvoke $r1.<androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        return $r2;
    }

    public int getUid()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        androidx.media.MediaSessionManager$RemoteUserInfo $r1;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $i0 = virtualinvoke $r1.<androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        return $i0;
    }

    public android.os.Bundle getConnectionHints()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        android.os.Bundle $r1, $r2;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = new android.os.Bundle;

        $r2 = r0.<androidx.media3.session.MediaSession$ControllerInfo: android.os.Bundle connectionHints>;

        specialinvoke $r1.<android.os.Bundle: void <init>(android.os.Bundle)>($r2);

        return $r1;
    }

    boolean isTrusted()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $z0 = r0.<androidx.media3.session.MediaSession$ControllerInfo: boolean isTrusted>;

        return $z0;
    }

    public int hashCode()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        java.lang.Object[] $r1;
        androidx.media3.session.MediaSession$ControllerCb $r2;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        $r1[0] = $r2;

        $r3 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r1[1] = $r3;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaSession$ControllerCb $r3, $r4, $r5, $r6;
        androidx.media.MediaSessionManager$RemoteUserInfo $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media3.session.MediaSession$ControllerInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        r2 = (androidx.media3.session.MediaSession$ControllerInfo) r1;

        $r3 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        if $r3 != null goto label3;

        $r6 = r2.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        if $r6 == null goto label4;

     label3:
        $r5 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        $r4 = r2.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r4);

        return $z1;

     label4:
        $r8 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r7 = r2.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $z2 = virtualinvoke $r8.<androidx.media.MediaSessionManager$RemoteUserInfo: boolean equals(java.lang.Object)>($r7);

        return $z2;
    }

    public java.lang.String toString()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        androidx.media.MediaSessionManager$RemoteUserInfo $r3, $r7;
        java.lang.String $r4, $r10;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ControllerInfo {pkg=");

        $r3 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $r4 = virtualinvoke $r3.<androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $r7 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media.MediaSessionManager$RemoteUserInfo remoteUserInfo>;

        $i0 = virtualinvoke $r7.<androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    androidx.media3.session.MediaSession$ControllerCb getControllerCb()
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        androidx.media3.session.MediaSession$ControllerCb $r1;

        r0 := @this: androidx.media3.session.MediaSession$ControllerInfo;

        $r1 = r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb controllerCb>;

        return $r1;
    }

    static androidx.media3.session.MediaSession$ControllerInfo createLegacyControllerInfo()
    {
        androidx.media.MediaSessionManager$RemoteUserInfo r0, $r1;
        androidx.media3.session.MediaSession$ControllerInfo $r2;
        android.os.Bundle $r3;

        $r1 = new androidx.media.MediaSessionManager$RemoteUserInfo;

        specialinvoke $r1.<androidx.media.MediaSessionManager$RemoteUserInfo: void <init>(java.lang.String,int,int)>("android.media.session.MediaController", -1, -1);

        r0 = $r1;

        $r2 = new androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r2.<androidx.media3.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,int,boolean,androidx.media3.session.MediaSession$ControllerCb,android.os.Bundle)>(r0, 0, 0, 0, null, $r3);

        return $r2;
    }

    public static androidx.media3.session.MediaSession$ControllerInfo createTestOnlyControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo, int, int, boolean, android.os.Bundle)
    {
        androidx.media.MediaSessionManager$RemoteUserInfo r0;
        int i0, i1;
        boolean z0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSession$ControllerInfo $r2;

        r0 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.os.Bundle;

        $r2 = new androidx.media3.session.MediaSession$ControllerInfo;

        specialinvoke $r2.<androidx.media3.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,int,boolean,androidx.media3.session.MediaSession$ControllerCb,android.os.Bundle)>(r0, i0, i1, z0, null, r1);

        return $r2;
    }

androidx.media3.session.MediaSession$Listener
<androidx.media3.session.MediaSession$Listener: void onNotificationRefreshRequired(androidx.media3.session.MediaSession)>
<androidx.media3.session.MediaSession$Listener: boolean onPlayRequested(androidx.media3.session.MediaSession)>
androidx.media3.session.MediaSession$MediaItemsWithStartPosition
<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: com.google.common.collect.ImmutableList mediaItems>
<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: int startIndex>
<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: long startPositionMs>
    public void <init>(java.util.List, int, long)
    {
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r0;
        java.util.List r1;
        int i0;
        long l1;
        com.google.common.collect.ImmutableList $r2;

        r0 := @this: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r1);

        r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: com.google.common.collect.ImmutableList mediaItems> = $r2;

        r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: int startIndex> = i0;

        r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: long startPositionMs> = l1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.google.common.collect.ImmutableList $r3, $r4;
        int $i0, $i1;
        java.lang.Integer $r5, $r6;
        long $l2, $l3;
        java.lang.Long $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.media3.session.MediaSession$MediaItemsWithStartPosition) r1;

        $r4 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: com.google.common.collect.ImmutableList mediaItems>;

        $r3 = r2.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: com.google.common.collect.ImmutableList mediaItems>;

        $z1 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $i0 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: int startIndex>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r2.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: int startIndex>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z2 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label3;

        $l2 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: long startPositionMs>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $l3 = r2.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: long startPositionMs>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $z3 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public int hashCode()
    {
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r0;
        com.google.common.collect.ImmutableList $r1;
        int $i0, $i1, $i3, $i4, i5, i6, i7;
        long $l2;

        r0 := @this: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        $r1 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: com.google.common.collect.ImmutableList mediaItems>;

        i5 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int hashCode()>();

        $i1 = 31 * i5;

        $i0 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: int startIndex>;

        i6 = $i1 + $i0;

        $i3 = 31 * i6;

        $l2 = r0.<androidx.media3.session.MediaSession$MediaItemsWithStartPosition: long startPositionMs>;

        $i4 = staticinvoke <com.google.common.primitives.Longs: int hashCode(long)>($l2);

        i7 = $i3 + $i4;

        return i7;
    }

