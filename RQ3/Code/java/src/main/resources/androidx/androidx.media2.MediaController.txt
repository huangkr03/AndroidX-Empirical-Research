androidx.media2.MediaController
<androidx.media2.MediaController: java.lang.Object mLock>
<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl mImpl>
<androidx.media2.MediaController: boolean mClosed>
<androidx.media2.MediaController: java.lang.Long mTimeDiff>
    public void <init>(android.content.Context, androidx.media2.SessionToken, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaController r0;
        android.content.Context r1;
        androidx.media2.SessionToken r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;
        java.lang.Object r5, $r7, $r8;
        java.lang.Throwable r6, $r14;
        androidx.media2.MediaController$MediaControllerImpl $r9;
        java.lang.IllegalArgumentException $r10, $r11, $r12, $r13;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionToken;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.lang.Object;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaController: java.lang.Object mLock> = $r7;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r13;

     label1:
        if r2 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token shouldn\'t be null");

        throw $r12;

     label2:
        if r4 != null goto label3;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r11;

     label3:
        if r3 != null goto label4;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r10;

     label4:
        $r8 = r0.<androidx.media2.MediaController: java.lang.Object mLock>;

        r5 = $r8;

        entermonitor $r8;

     label5:
        $r9 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl createImpl(android.content.Context,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r1, r2, r3, r4);

        r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl mImpl> = $r9;

        exitmonitor r5;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r5;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$Token, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaController r0;
        android.content.Context r1;
        android.support.v4.media.session.MediaSessionCompat$Token r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;
        java.lang.Object $r5;
        androidx.media2.MediaController$1 $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9, $r10;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$Token;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaController: java.lang.Object mLock> = $r5;

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context shouldn\'t be null");

        throw $r10;

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token shouldn\'t be null");

        throw $r9;

     label2:
        if r4 != null goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback shouldn\'t be null");

        throw $r8;

     label3:
        if r3 != null goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("executor shouldn\'t be null");

        throw $r7;

     label4:
        $r6 = new androidx.media2.MediaController$1;

        specialinvoke $r6.<androidx.media2.MediaController$1: void <init>(androidx.media2.MediaController,android.content.Context,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r0, r1, r3, r4);

        staticinvoke <androidx.media2.SessionToken: void createSessionToken(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token,java.util.concurrent.Executor,androidx.media2.SessionToken$OnSessionTokenCreatedListener)>(r1, r2, r3, $r6);

        return;
    }

    androidx.media2.MediaController$MediaControllerImpl createImpl(android.content.Context, androidx.media2.SessionToken, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaController r0;
        android.content.Context r1;
        androidx.media2.SessionToken r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;
        boolean $z0;
        androidx.media2.MediaControllerImplBase $r5;
        androidx.media2.MediaControllerImplLegacy $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionToken;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        $z0 = virtualinvoke r2.<androidx.media2.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r6 = new androidx.media2.MediaControllerImplLegacy;

        specialinvoke $r6.<androidx.media2.MediaControllerImplLegacy: void <init>(android.content.Context,androidx.media2.MediaController,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r1, r0, r2, r3, r4);

        return $r6;

     label1:
        $r5 = new androidx.media2.MediaControllerImplBase;

        specialinvoke $r5.<androidx.media2.MediaControllerImplBase: void <init>(android.content.Context,androidx.media2.MediaController,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r1, r0, r2, r3, r4);

        return $r5;
    }

    androidx.media2.MediaController$MediaControllerImpl getImpl()
    {
        androidx.media2.MediaController r0;
        java.lang.Object r1, $r2;
        androidx.media2.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media2.MediaController;

        $r2 = r0.<androidx.media2.MediaController: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl mImpl>;

        exitmonitor r1;

        return $r3;
    }

    public void close()
    {
        androidx.media2.MediaController r0;
        java.lang.Object r1, $r2;
        boolean $z0;
        java.lang.Throwable $r3, r5;
        androidx.media2.MediaController$MediaControllerImpl r4;

        r0 := @this: androidx.media2.MediaController;

     label1:
        $r2 = r0.<androidx.media2.MediaController: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        $z0 = r0.<androidx.media2.MediaController: boolean mClosed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<androidx.media2.MediaController: boolean mClosed> = 1;

        r4 = r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl mImpl>;

        exitmonitor r1;

        goto label4;

     label4:
        if r4 == null goto label5;

        interfaceinvoke r4.<androidx.media2.MediaController$MediaControllerImpl: void close()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        r5 = $r3;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label5 with label6;
    }

    public androidx.media2.SessionToken getConnectedSessionToken()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.SessionToken $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.SessionToken getConnectedSessionToken()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public boolean isConnected()
    {
        androidx.media2.MediaController r0;
        androidx.media2.MediaController$MediaControllerImpl r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.MediaController;

        r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<androidx.media2.MediaController$MediaControllerImpl: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public com.google.common.util.concurrent.ListenableFuture play()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture play()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture pause()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture pause()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture prepare()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepare()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture fastForward()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture fastForward()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture rewind()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture rewind()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture skipForward()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipForward()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture skipBackward()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipBackward()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture seekTo(long)
    {
        androidx.media2.MediaController r0;
        long l0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture seekTo(long)>(l0);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture playFromMediaId(java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture playFromSearch(java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture playFromUri(android.net.Uri, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri shouldn\'t be null");

        throw $r6;

     label1:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromUri(android.net.Uri,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture prepareFromMediaId(java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromMediaId(java.lang.String,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture prepareFromSearch(java.lang.String, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromSearch(java.lang.String,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture prepareFromUri(android.net.Uri, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri shouldn\'t be null");

        throw $r6;

     label1:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromUri(android.net.Uri,android.os.Bundle)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture setVolumeTo(int, int)
    {
        androidx.media2.MediaController r0;
        int i0, i1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setVolumeTo(int,int)>(i0, i1);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture adjustVolume(int, int)
    {
        androidx.media2.MediaController r0;
        int i0, i1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture adjustVolume(int,int)>(i0, i1);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public android.app.PendingIntent getSessionActivity()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        android.app.PendingIntent $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public int getPlayerState()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getPlayerState()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public long getDuration()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $l0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: long getDuration()>();

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getCurrentPosition()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $l0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: long getCurrentPosition()>();

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public float getPlaybackSpeed()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        float $f0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $f0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: float getPlaybackSpeed()>();

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        return $f0;
    }

    public com.google.common.util.concurrent.ListenableFuture setPlaybackSpeed(float)
    {
        androidx.media2.MediaController r0;
        float f0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        f0 := @parameter0: float;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setPlaybackSpeed(float)>(f0);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public int getBufferingState()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getBufferingState()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public long getBufferedPosition()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        long $l0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $l0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: long getBufferedPosition()>();

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public androidx.media2.MediaController$PlaybackInfo getPlaybackInfo()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.MediaController$PlaybackInfo $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaController$PlaybackInfo getPlaybackInfo()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String, androidx.media2.Rating)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        androidx.media2.Rating r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media2.Rating;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rating shouldn\'t be null");

        throw $r6;

     label2:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label3;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String,androidx.media2.Rating)>(r1, r2);

        return $r5;

     label3:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.SessionCommand, android.os.Bundle)
    {
        androidx.media2.MediaController r0;
        androidx.media2.SessionCommand r1;
        android.os.Bundle r2;
        int $i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: androidx.media2.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command shouldn\'t be null");

        throw $r7;

     label1:
        $i0 = virtualinvoke r1.<androidx.media2.SessionCommand: int getCommandCode()>();

        if $i0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("command should be a custom command");

        throw $r6;

     label2:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.SessionCommand,android.os.Bundle)>(r1, r2);

        return $r5;

     label3:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public java.util.List getPlaylist()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        java.util.List $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: java.util.List getPlaylist()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture setPlaylist(java.util.List, androidx.media2.MediaMetadata)
    {
        androidx.media2.MediaController r0;
        java.util.List r1;
        androidx.media2.MediaMetadata r2;
        int $i0, i1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaController$MediaControllerImpl $r4;
        java.lang.Object $r6;
        java.lang.CharSequence $r7;
        java.lang.IllegalArgumentException $r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.media2.MediaMetadata;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("list shouldn\'t be null");

        throw $r13;

     label1:
        i1 = 0;

     label2:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (java.lang.CharSequence) $r6;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z1 == 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list shouldn\'t contain empty id, index=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label5;

        $r4 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setPlaylist(java.util.List,androidx.media2.MediaMetadata)>(r1, r2);

        return $r5;

     label5:
        $r3 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture setMediaItem(java.lang.String)
    {
        androidx.media2.MediaController r0;
        java.lang.String r1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r2;
        androidx.media2.MediaController$MediaControllerImpl $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        interfaceinvoke $r3.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setMediaItem(java.lang.String)>(r1);

     label2:
        $r2 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture updatePlaylistMetadata(androidx.media2.MediaMetadata)
    {
        androidx.media2.MediaController r0;
        androidx.media2.MediaMetadata r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaController$MediaControllerImpl $r3;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: androidx.media2.MediaMetadata;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture updatePlaylistMetadata(androidx.media2.MediaMetadata)>(r1);

        return $r4;

     label1:
        $r2 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public androidx.media2.MediaMetadata getPlaylistMetadata()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.MediaMetadata $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaMetadata getPlaylistMetadata()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture addPlaylistItem(int, java.lang.String)
    {
        androidx.media2.MediaController r0;
        int i0;
        java.lang.String r1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaController$MediaControllerImpl $r3;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r6;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r5;

     label2:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture addPlaylistItem(int,java.lang.String)>(i0, r1);

        return $r4;

     label3:
        $r2 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture removePlaylistItem(int)
    {
        androidx.media2.MediaController r0;
        int i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r4;

     label1:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture removePlaylistItem(int)>(i0);

        return $r3;

     label2:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture replacePlaylistItem(int, java.lang.String)
    {
        androidx.media2.MediaController r0;
        int i0;
        java.lang.String r1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaController$MediaControllerImpl $r3;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r6;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r5;

     label2:
        $z1 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture replacePlaylistItem(int,java.lang.String)>(i0, r1);

        return $r4;

     label3:
        $r2 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public androidx.media2.MediaItem getCurrentMediaItem()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.MediaItem $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaItem getCurrentMediaItem()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public int getCurrentMediaItemIndex()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getCurrentMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getPreviousMediaItemIndex()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getPreviousMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public int getNextMediaItemIndex()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getNextMediaItemIndex()>();

        goto label2;

     label1:
        $i0 = -1;

     label2:
        return $i0;
    }

    public com.google.common.util.concurrent.ListenableFuture skipToPreviousPlaylistItem()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToPreviousItem()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture skipToNextPlaylistItem()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToNextItem()>();

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture skipToPlaylistItem(int)
    {
        androidx.media2.MediaController r0;
        int i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("index shouldn\'t be negative");

        throw $r4;

     label1:
        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToPlaylistItem(int)>(i0);

        return $r3;

     label2:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public int getRepeatMode()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getRepeatMode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public com.google.common.util.concurrent.ListenableFuture setRepeatMode(int)
    {
        androidx.media2.MediaController r0;
        int i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRepeatMode(int)>(i0);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public int getShuffleMode()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        int $i0;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $i0 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: int getShuffleMode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public com.google.common.util.concurrent.ListenableFuture setShuffleMode(int)
    {
        androidx.media2.MediaController r0;
        int i0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r3;
        androidx.media2.MediaController$MediaControllerImpl $r2;

        r0 := @this: androidx.media2.MediaController;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r3 = interfaceinvoke $r2.<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setShuffleMode(int)>(i0);

        return $r3;

     label1:
        $r1 = staticinvoke <androidx.media2.MediaController: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r1;
    }

    public void setTimeDiff(java.lang.Long)
    {
        androidx.media2.MediaController r0;
        java.lang.Long r1;

        r0 := @this: androidx.media2.MediaController;

        r1 := @parameter0: java.lang.Long;

        r0.<androidx.media2.MediaController: java.lang.Long mTimeDiff> = r1;

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()
    {
        com.google.common.util.concurrent.ListenableFuture $r0;

        $r0 = staticinvoke <androidx.media2.MediaController$ControllerResult: com.google.common.util.concurrent.ListenableFuture createFutureWithResult(int)>(-100);

        return $r0;
    }

    androidx.media2.MediaController$ControllerCallback getCallback()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.MediaController$ControllerCallback $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaController$ControllerCallback getCallback()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    java.util.concurrent.Executor getCallbackExecutor()
    {
        androidx.media2.MediaController r0;
        boolean $z0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: androidx.media2.MediaController;

        $z0 = virtualinvoke r0.<androidx.media2.MediaController: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = interfaceinvoke $r1.<androidx.media2.MediaController$MediaControllerImpl: java.util.concurrent.Executor getCallbackExecutor()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

androidx.media2.MediaController$1$1
<androidx.media2.MediaController$1$1: androidx.media2.MediaController$1 this$1>
    void <init>(androidx.media2.MediaController$1)
    {
        androidx.media2.MediaController$1$1 r0;
        androidx.media2.MediaController$1 r1;

        r0 := @this: androidx.media2.MediaController$1$1;

        r1 := @parameter0: androidx.media2.MediaController$1;

        r0.<androidx.media2.MediaController$1$1: androidx.media2.MediaController$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.media2.MediaController$1$1 r0;
        androidx.media2.MediaController$1 $r1, $r2;
        androidx.media2.MediaController $r3;
        androidx.media2.MediaController$ControllerCallback $r4;

        r0 := @this: androidx.media2.MediaController$1$1;

        $r1 = r0.<androidx.media2.MediaController$1$1: androidx.media2.MediaController$1 this$1>;

        $r4 = $r1.<androidx.media2.MediaController$1: androidx.media2.MediaController$ControllerCallback val$callback>;

        $r2 = r0.<androidx.media2.MediaController$1$1: androidx.media2.MediaController$1 this$1>;

        $r3 = $r2.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>;

        virtualinvoke $r4.<androidx.media2.MediaController$ControllerCallback: void onDisconnected(androidx.media2.MediaController)>($r3);

        return;
    }

androidx.media2.MediaController$1
<androidx.media2.MediaController$1: android.content.Context val$context>
<androidx.media2.MediaController$1: java.util.concurrent.Executor val$executor>
<androidx.media2.MediaController$1: androidx.media2.MediaController$ControllerCallback val$callback>
<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>
    void <init>(androidx.media2.MediaController, android.content.Context, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaController$1 r0;
        androidx.media2.MediaController r1;
        android.content.Context r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;

        r0 := @this: androidx.media2.MediaController$1;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        r0.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0> = r1;

        r0.<androidx.media2.MediaController$1: android.content.Context val$context> = r2;

        r0.<androidx.media2.MediaController$1: java.util.concurrent.Executor val$executor> = r3;

        r0.<androidx.media2.MediaController$1: androidx.media2.MediaController$ControllerCallback val$callback> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSessionTokenCreated(android.support.v4.media.session.MediaSessionCompat$Token, androidx.media2.SessionToken)
    {
        androidx.media2.MediaController$1 r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        androidx.media2.SessionToken r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r16;
        androidx.media2.MediaController $r5, $r7, $r13, $r14;
        boolean $z0;
        androidx.media2.MediaController$1$1 $r8;
        java.util.concurrent.Executor $r9, $r11;
        androidx.media2.MediaController$ControllerCallback $r10;
        android.content.Context $r12;
        androidx.media2.MediaController$MediaControllerImpl $r15;

        r0 := @this: androidx.media2.MediaController$1;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        r2 := @parameter1: androidx.media2.SessionToken;

        $r5 = r0.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>;

        $r6 = $r5.<androidx.media2.MediaController: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>;

        $z0 = $r7.<androidx.media2.MediaController: boolean mClosed>;

        if $z0 != 0 goto label2;

        $r14 = r0.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>;

        $r13 = r0.<androidx.media2.MediaController$1: androidx.media2.MediaController this$0>;

        $r12 = r0.<androidx.media2.MediaController$1: android.content.Context val$context>;

        $r11 = r0.<androidx.media2.MediaController$1: java.util.concurrent.Executor val$executor>;

        $r10 = r0.<androidx.media2.MediaController$1: androidx.media2.MediaController$ControllerCallback val$callback>;

        $r15 = virtualinvoke $r13.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl createImpl(android.content.Context,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>($r12, r2, $r11, $r10);

        $r14.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl mImpl> = $r15;

        goto label3;

     label2:
        $r9 = r0.<androidx.media2.MediaController$1: java.util.concurrent.Executor val$executor>;

        $r8 = new androidx.media2.MediaController$1$1;

        specialinvoke $r8.<androidx.media2.MediaController$1$1: void <init>(androidx.media2.MediaController$1)>(r0);

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

androidx.media2.MediaController$ControllerCallback
    public void <init>()
    {
        androidx.media2.MediaController$ControllerCallback r0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onConnected(androidx.media2.MediaController, androidx.media2.SessionCommandGroup)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.SessionCommandGroup r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.SessionCommandGroup;

        return;
    }

    public void onDisconnected(androidx.media2.MediaController)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        return;
    }

    public int onSetCustomLayout(androidx.media2.MediaController, java.util.List)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        java.util.List r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: java.util.List;

        return -6;
    }

    public void onPlaybackInfoChanged(androidx.media2.MediaController, androidx.media2.MediaController$PlaybackInfo)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.MediaController$PlaybackInfo r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.MediaController$PlaybackInfo;

        return;
    }

    public void onAllowedCommandsChanged(androidx.media2.MediaController, androidx.media2.SessionCommandGroup)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.SessionCommandGroup r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.SessionCommandGroup;

        return;
    }

    public androidx.media2.MediaController$ControllerResult onCustomCommand(androidx.media2.MediaController, androidx.media2.SessionCommand, android.os.Bundle)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.SessionCommand r2;
        android.os.Bundle r3;
        androidx.media2.MediaController$ControllerResult $r4;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        $r4 = new androidx.media2.MediaController$ControllerResult;

        specialinvoke $r4.<androidx.media2.MediaController$ControllerResult: void <init>(int)>(-6);

        return $r4;
    }

    public void onPlayerStateChanged(androidx.media2.MediaController, int)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        int i0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        i0 := @parameter1: int;

        return;
    }

    public void onPlaybackSpeedChanged(androidx.media2.MediaController, float)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        float f0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        f0 := @parameter1: float;

        return;
    }

    public void onBufferingStateChanged(androidx.media2.MediaController, androidx.media2.MediaItem, int)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.MediaItem r2;
        int i0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.MediaItem;

        i0 := @parameter2: int;

        return;
    }

    public void onSeekCompleted(androidx.media2.MediaController, long)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        long l0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        l0 := @parameter1: long;

        return;
    }

    public void onCurrentMediaItemChanged(androidx.media2.MediaController, androidx.media2.MediaItem)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.MediaItem r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.MediaItem;

        return;
    }

    public void onPlaylistChanged(androidx.media2.MediaController, java.util.List, androidx.media2.MediaMetadata)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        java.util.List r2;
        androidx.media2.MediaMetadata r3;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.media2.MediaMetadata;

        return;
    }

    public void onPlaylistMetadataChanged(androidx.media2.MediaController, androidx.media2.MediaMetadata)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        androidx.media2.MediaMetadata r2;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        r2 := @parameter1: androidx.media2.MediaMetadata;

        return;
    }

    public void onShuffleModeChanged(androidx.media2.MediaController, int)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        int i0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        i0 := @parameter1: int;

        return;
    }

    public void onRepeatModeChanged(androidx.media2.MediaController, int)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;
        int i0;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        i0 := @parameter1: int;

        return;
    }

    public void onPlaybackCompleted(androidx.media2.MediaController)
    {
        androidx.media2.MediaController$ControllerCallback r0;
        androidx.media2.MediaController r1;

        r0 := @this: androidx.media2.MediaController$ControllerCallback;

        r1 := @parameter0: androidx.media2.MediaController;

        return;
    }

androidx.media2.MediaController$ControllerResult$ResultCode
androidx.media2.MediaController$ControllerResult
<androidx.media2.MediaController$ControllerResult: int RESULT_CODE_SUCCESS>
<androidx.media2.MediaController$ControllerResult: int mResultCode>
<androidx.media2.MediaController$ControllerResult: long mCompletionTime>
<androidx.media2.MediaController$ControllerResult: android.os.Bundle mCustomCommandResult>
<androidx.media2.MediaController$ControllerResult: androidx.media2.MediaItem mItem>
    public void <init>(int, android.os.Bundle)
    {
        androidx.media2.MediaController$ControllerResult r0;
        int i0;
        android.os.Bundle r1;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        specialinvoke r0.<androidx.media2.MediaController$ControllerResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem)>(i0, r1, null);

        return;
    }

    void <init>()
    {
        androidx.media2.MediaController$ControllerResult r0;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(int)
    {
        androidx.media2.MediaController$ControllerResult r0;
        int i0;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media2.MediaController$ControllerResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem)>(i0, null, null);

        return;
    }

    void <init>(int, android.os.Bundle, androidx.media2.MediaItem)
    {
        androidx.media2.MediaController$ControllerResult r0;
        int i0;
        android.os.Bundle r1;
        androidx.media2.MediaItem r2;
        long $l1;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media2.MediaItem;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media2.MediaController$ControllerResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem,long)>(i0, r1, r2, $l1);

        return;
    }

    void <init>(int, android.os.Bundle, androidx.media2.MediaItem, long)
    {
        androidx.media2.MediaController$ControllerResult r0;
        int i0;
        android.os.Bundle r1;
        androidx.media2.MediaItem r2;
        long l1;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media2.MediaItem;

        l1 := @parameter3: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaController$ControllerResult: int mResultCode> = i0;

        r0.<androidx.media2.MediaController$ControllerResult: android.os.Bundle mCustomCommandResult> = r1;

        r0.<androidx.media2.MediaController$ControllerResult: androidx.media2.MediaItem mItem> = r2;

        r0.<androidx.media2.MediaController$ControllerResult: long mCompletionTime> = l1;

        return;
    }

    static com.google.common.util.concurrent.ListenableFuture createFutureWithResult(int)
    {
        int i0;
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.media2.MediaController$ControllerResult $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r1 = new androidx.media2.MediaController$ControllerResult;

        specialinvoke $r1.<androidx.media2.MediaController$ControllerResult: void <init>(int)>(i0);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r1);

        return r0;
    }

    static androidx.media2.MediaController$ControllerResult 'from'(androidx.media2.MediaSession$SessionResult)
    {
        androidx.media2.MediaSession$SessionResult r0;
        androidx.media2.MediaController$ControllerResult $r1;
        int $i0;
        android.os.Bundle $r2;
        androidx.media2.MediaItem $r3;
        long $l1;

        r0 := @parameter0: androidx.media2.MediaSession$SessionResult;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new androidx.media2.MediaController$ControllerResult;

        $i0 = virtualinvoke r0.<androidx.media2.MediaSession$SessionResult: int getResultCode()>();

        $r2 = virtualinvoke r0.<androidx.media2.MediaSession$SessionResult: android.os.Bundle getCustomCommandResult()>();

        $r3 = virtualinvoke r0.<androidx.media2.MediaSession$SessionResult: androidx.media2.MediaItem getMediaItem()>();

        $l1 = virtualinvoke r0.<androidx.media2.MediaSession$SessionResult: long getCompletionTime()>();

        specialinvoke $r1.<androidx.media2.MediaController$ControllerResult: void <init>(int,android.os.Bundle,androidx.media2.MediaItem,long)>($i0, $r2, $r3, $l1);

        return $r1;
    }

    public int getResultCode()
    {
        androidx.media2.MediaController$ControllerResult r0;
        int $i0;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        $i0 = r0.<androidx.media2.MediaController$ControllerResult: int mResultCode>;

        return $i0;
    }

    public long getCompletionTime()
    {
        androidx.media2.MediaController$ControllerResult r0;
        long $l0;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        $l0 = r0.<androidx.media2.MediaController$ControllerResult: long mCompletionTime>;

        return $l0;
    }

    public android.os.Bundle getCustomCommandResult()
    {
        androidx.media2.MediaController$ControllerResult r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        $r1 = r0.<androidx.media2.MediaController$ControllerResult: android.os.Bundle mCustomCommandResult>;

        return $r1;
    }

    public androidx.media2.MediaItem getMediaItem()
    {
        androidx.media2.MediaController$ControllerResult r0;
        androidx.media2.MediaItem $r1;

        r0 := @this: androidx.media2.MediaController$ControllerResult;

        $r1 = r0.<androidx.media2.MediaController$ControllerResult: androidx.media2.MediaItem mItem>;

        return $r1;
    }

androidx.media2.MediaController$MediaControllerImpl
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.SessionToken getConnectedSessionToken()>
<androidx.media2.MediaController$MediaControllerImpl: boolean isConnected()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture play()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture pause()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepare()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture fastForward()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture rewind()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture seekTo(long)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipForward()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipBackward()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromMediaId(java.lang.String,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromSearch(java.lang.String,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture playFromUri(android.net.Uri,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromMediaId(java.lang.String,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromSearch(java.lang.String,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture prepareFromUri(android.net.Uri,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setVolumeTo(int,int)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture adjustVolume(int,int)>
<androidx.media2.MediaController$MediaControllerImpl: android.app.PendingIntent getSessionActivity()>
<androidx.media2.MediaController$MediaControllerImpl: int getPlayerState()>
<androidx.media2.MediaController$MediaControllerImpl: long getDuration()>
<androidx.media2.MediaController$MediaControllerImpl: long getCurrentPosition()>
<androidx.media2.MediaController$MediaControllerImpl: float getPlaybackSpeed()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setPlaybackSpeed(float)>
<androidx.media2.MediaController$MediaControllerImpl: int getBufferingState()>
<androidx.media2.MediaController$MediaControllerImpl: long getBufferedPosition()>
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaController$PlaybackInfo getPlaybackInfo()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRating(java.lang.String,androidx.media2.Rating)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media2.SessionCommand,android.os.Bundle)>
<androidx.media2.MediaController$MediaControllerImpl: java.util.List getPlaylist()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setPlaylist(java.util.List,androidx.media2.MediaMetadata)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setMediaItem(java.lang.String)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture updatePlaylistMetadata(androidx.media2.MediaMetadata)>
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaMetadata getPlaylistMetadata()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture addPlaylistItem(int,java.lang.String)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture removePlaylistItem(int)>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture replacePlaylistItem(int,java.lang.String)>
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaItem getCurrentMediaItem()>
<androidx.media2.MediaController$MediaControllerImpl: int getCurrentMediaItemIndex()>
<androidx.media2.MediaController$MediaControllerImpl: int getPreviousMediaItemIndex()>
<androidx.media2.MediaController$MediaControllerImpl: int getNextMediaItemIndex()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToPreviousItem()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToNextItem()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture skipToPlaylistItem(int)>
<androidx.media2.MediaController$MediaControllerImpl: int getRepeatMode()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setRepeatMode(int)>
<androidx.media2.MediaController$MediaControllerImpl: int getShuffleMode()>
<androidx.media2.MediaController$MediaControllerImpl: com.google.common.util.concurrent.ListenableFuture setShuffleMode(int)>
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaController getInstance()>
<androidx.media2.MediaController$MediaControllerImpl: android.content.Context getContext()>
<androidx.media2.MediaController$MediaControllerImpl: androidx.media2.MediaController$ControllerCallback getCallback()>
<androidx.media2.MediaController$MediaControllerImpl: java.util.concurrent.Executor getCallbackExecutor()>
<androidx.media2.MediaController$MediaControllerImpl: android.support.v4.media.MediaBrowserCompat getBrowserCompat()>
androidx.media2.MediaController$PlaybackInfo
<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType>
<androidx.media2.MediaController$PlaybackInfo: int mControlType>
<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume>
<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume>
<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat>
<androidx.media2.MediaController$PlaybackInfo: int PLAYBACK_TYPE_LOCAL>
<androidx.media2.MediaController$PlaybackInfo: int PLAYBACK_TYPE_REMOTE>
    void <init>()
    {
        androidx.media2.MediaController$PlaybackInfo r0;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(int, androidx.media.AudioAttributesCompat, int, int, int)
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        int i0, i1, i2, i3;
        androidx.media.AudioAttributesCompat r1;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media.AudioAttributesCompat;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType> = i0;

        r0.<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat> = r1;

        r0.<androidx.media2.MediaController$PlaybackInfo: int mControlType> = i1;

        r0.<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume> = i2;

        r0.<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume> = i3;

        return;
    }

    public int getPlaybackType()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $i0 = r0.<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType>;

        return $i0;
    }

    public androidx.media.AudioAttributesCompat getAudioAttributes()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        androidx.media.AudioAttributesCompat $r1;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $r1 = r0.<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat>;

        return $r1;
    }

    public int getControlType()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $i0 = r0.<androidx.media2.MediaController$PlaybackInfo: int mControlType>;

        return $i0;
    }

    public int getMaxVolume()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $i0 = r0.<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume>;

        return $i0;
    }

    public int getCurrentVolume()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        int $i0;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $i0 = r0.<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume>;

        return $i0;
    }

    public int hashCode()
    {
        androidx.media2.MediaController$PlaybackInfo r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r2, $r3, $r4, $r5;
        androidx.media.AudioAttributesCompat $r6;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        $r1 = newarray (java.lang.Object)[5];

        $i0 = r0.<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<androidx.media2.MediaController$PlaybackInfo: int mControlType>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $i3 = r0.<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r5;

        $r6 = r0.<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat>;

        $r1[4] = $r6;

        $i4 = staticinvoke <androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])>($r1);

        return $i4;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media2.MediaController$PlaybackInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.media.AudioAttributesCompat $r3, $r4;

        r0 := @this: androidx.media2.MediaController$PlaybackInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof androidx.media2.MediaController$PlaybackInfo;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.media2.MediaController$PlaybackInfo) r1;

        $i1 = r0.<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType>;

        $i0 = r2.<androidx.media2.MediaController$PlaybackInfo: int mPlaybackType>;

        if $i1 != $i0 goto label2;

        $i3 = r0.<androidx.media2.MediaController$PlaybackInfo: int mControlType>;

        $i2 = r2.<androidx.media2.MediaController$PlaybackInfo: int mControlType>;

        if $i3 != $i2 goto label2;

        $i5 = r0.<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume>;

        $i4 = r2.<androidx.media2.MediaController$PlaybackInfo: int mMaxVolume>;

        if $i5 != $i4 goto label2;

        $i7 = r0.<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume>;

        $i6 = r2.<androidx.media2.MediaController$PlaybackInfo: int mCurrentVolume>;

        if $i7 != $i6 goto label2;

        $r4 = r0.<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat>;

        $r3 = r2.<androidx.media2.MediaController$PlaybackInfo: androidx.media.AudioAttributesCompat mAudioAttrsCompat>;

        $z1 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static androidx.media2.MediaController$PlaybackInfo createPlaybackInfo(int, androidx.media.AudioAttributesCompat, int, int, int)
    {
        int i0, i1, i2, i3;
        androidx.media.AudioAttributesCompat r0;
        androidx.media2.MediaController$PlaybackInfo $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media.AudioAttributesCompat;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = new androidx.media2.MediaController$PlaybackInfo;

        specialinvoke $r1.<androidx.media2.MediaController$PlaybackInfo: void <init>(int,androidx.media.AudioAttributesCompat,int,int,int)>(i0, r0, i1, i2, i3);

        return $r1;
    }

androidx.media2.MediaController$VolumeDirection
androidx.media2.MediaController$VolumeFlags
