androidx.benchmark.gradle.BenchmarkReportTask
<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>
<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.provider.Property adbPath>
    public void <init>()
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        java.io.File $r1, $r4, $r9;
        java.lang.StringBuilder $r2, $r5, $r6;
        org.gradle.api.Project $r3, $r13;
        java.lang.String $r7;
        org.gradle.api.internal.TaskOutputsInternal $r8, $r11;
        org.gradle.api.specs.Spec $r12;
        org.gradle.api.provider.Property $r14;
        org.gradle.api.model.ObjectFactory $r15;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        specialinvoke r0.<org.gradle.api.DefaultTask: void <init>()>();

        virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: void setGroup(java.lang.String)>("Android");

        virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: void setDescription(java.lang.String)>("Run benchmarks found in the current project and output reports to the benchmark_reports folder under the project\'s build directory.");

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.Project getProject()>();

        $r4 = interfaceinvoke $r3.<org.gradle.api.Project: java.io.File getBuildDir()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/outputs");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, "connected_android_test_additional_output");

        r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir> = $r1;

        $r8 = virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.internal.TaskOutputsInternal getOutputs()>();

        $r9 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        interfaceinvoke $r8.<org.gradle.api.internal.TaskOutputsInternal: org.gradle.api.tasks.TaskOutputFilePropertyBuilder dir(java.lang.Object)>($r9);

        $r11 = virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.internal.TaskOutputsInternal getOutputs()>();

        $r12 = dynamicinvoke "isSatisfiedBy" <org.gradle.api.specs.Spec ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.benchmark.gradle.BenchmarkReportTask: boolean _init_$lambda-0(org.gradle.api.Task)>, methodtype: boolean __METHODTYPE__(org.gradle.api.Task));

        interfaceinvoke $r11.<org.gradle.api.internal.TaskOutputsInternal: void upToDateWhen(org.gradle.api.specs.Spec)>($r12);

        $r13 = virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.Project getProject()>();

        $r15 = interfaceinvoke $r13.<org.gradle.api.Project: org.gradle.api.model.ObjectFactory getObjects()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "project.objects");

        $r14 = interfaceinvoke $r15.<org.gradle.api.model.ObjectFactory: org.gradle.api.provider.Property property(java.lang.Class)>(class "Ljava/lang/String;");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "property(T::class.java)");

        r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.provider.Property adbPath> = $r14;

        return;
    }

    public final org.gradle.api.provider.Property getAdbPath()
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        org.gradle.api.provider.Property $r1;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        $r1 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.provider.Property adbPath>;

        return $r1;
    }

    public final void exec()
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        androidx.benchmark.gradle.Adb $r1;
        org.gradle.api.provider.Property $r2;
        java.lang.String $r3;
        java.lang.Object r4;
        org.gradle.api.logging.Logger r5;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        $r1 = new androidx.benchmark.gradle.Adb;

        $r2 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.provider.Property adbPath>;

        r4 = interfaceinvoke $r2.<org.gradle.api.provider.Property: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "adbPath.get()");

        $r3 = (java.lang.String) r4;

        r5 = virtualinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: org.gradle.api.logging.Logger getLogger()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "logger");

        specialinvoke $r1.<androidx.benchmark.gradle.Adb: void <init>(java.lang.String,org.gradle.api.logging.Logger)>($r3, r5);

        specialinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: void getReportsForDevices(androidx.benchmark.gradle.Adb)>($r1);

        return;
    }

    private final void getReportsForDevices(androidx.benchmark.gradle.Adb)
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        androidx.benchmark.gradle.Adb r1;
        java.util.List r2, $r11, $r13, $r15, $r17, $r31;
        java.lang.CharSequence r3, $r10, $r20, $r29, $r34, $r35, $r38, $r39;
        kotlin.text.Regex r4, $r30;
        byte b0;
        java.util.Collection r5, r43, r48, r53;
        java.io.File $r6, $r7, $r21, $r22, $r23, $r40, r60;
        boolean $z0, $z2, $z3, $z4, $z6, $z9, $z14, $z16, $z22, $z24;
        androidx.benchmark.gradle.Adb$ProcessResult $r8;
        java.lang.String $r9, $r25, $r26, $r28, $r33, $r36, r46, r51, r56, $r58, $r59;
        java.lang.Iterable $r12, $r41, $r47, $r52;
        java.util.ArrayList $r14, $r16, $r18;
        int $i1;
        java.lang.Object $r19, $r32, r45, r50, r55;
        com.android.ddmlib.Log$LogLevel $r24;
        org.gradle.api.tasks.StopExecutionException $r27;
        java.lang.NullPointerException $r37;
        java.lang.String[] $r42;
        java.util.Iterator r44, r49, r54, $r57;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        r1 := @parameter0: androidx.benchmark.gradle.Adb;

        $r6 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $r40 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>($r40);

     label01:
        $r7 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

        $r8 = staticinvoke <androidx.benchmark.gradle.Adb: androidx.benchmark.gradle.Adb$ProcessResult execSync$default(androidx.benchmark.gradle.Adb,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.Object)>(r1, "devices -l", null, 0, 0, 14, null);

        $r9 = virtualinvoke $r8.<androidx.benchmark.gradle.Adb$ProcessResult: java.lang.String getStdout()>();

        $r10 = (java.lang.CharSequence) $r9;

        $r42 = newarray (java.lang.String)[1];

        $r42[0] = "\n";

        $r11 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r10, $r42, 0, 0, 6, null);

        $r12 = (java.lang.Iterable) $r11;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r12, 1);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r43 = (java.util.Collection) $r14;

        $r41 = (java.lang.Iterable) $r13;

        r44 = interfaceinvoke $r41.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z14 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label05;

        r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) r45;

        $r39 = (java.lang.CharSequence) r46;

        $r38 = (java.lang.CharSequence) "unauthorized";

        $z9 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r39, $r38, 0, 2, null);

        if $z9 != 0 goto label03;

        $z16 = 1;

        goto label04;

     label03:
        $z16 = 0;

     label04:
        if $z16 == 0 goto label02;

        interfaceinvoke r43.<java.util.Collection: boolean add(java.lang.Object)>(r45);

        goto label02;

     label05:
        $r15 = (java.util.List) r43;

        $r47 = (java.lang.Iterable) $r15;

        $r16 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r47, 10);

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i1);

        r48 = (java.util.Collection) $r16;

        r49 = interfaceinvoke $r47.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        r50 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r51 = (java.lang.String) r50;

        r5 = r48;

        r3 = (java.lang.CharSequence) r51;

        $r30 = new kotlin.text.Regex;

        specialinvoke $r30.<kotlin.text.Regex: void <init>(java.lang.String)>("\\s+");

        r4 = $r30;

        b0 = 0;

        $r31 = virtualinvoke r4.<kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)>(r3, b0);

        $r32 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r31);

        $r33 = (java.lang.String) $r32;

        if $r33 != null goto label07;

        $r37 = new java.lang.NullPointerException;

        specialinvoke $r37.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r37;

     label07:
        $r34 = (java.lang.CharSequence) $r33;

        $r35 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r36);

        goto label06;

     label08:
        $r17 = (java.util.List) r48;

        $r52 = (java.lang.Iterable) $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r53 = (java.util.Collection) $r18;

        r54 = interfaceinvoke $r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z22 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label12;

        r55 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r56 = (java.lang.String) r55;

        $r29 = (java.lang.CharSequence) r56;

        $z6 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r29);

        if $z6 != 0 goto label10;

        $z24 = 1;

        goto label11;

     label10:
        $z24 = 0;

     label11:
        if $z24 == 0 goto label09;

        interfaceinvoke r53.<java.util.Collection: boolean add(java.lang.Object)>(r55);

        goto label09;

     label12:
        r2 = (java.util.List) r53;

        $r57 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r57.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r19 = interfaceinvoke $r57.<java.util.Iterator: java.lang.Object next()>();

        $r58 = (java.lang.String) $r19;

        $r59 = specialinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.lang.String getReportDirForDevice(androidx.benchmark.gradle.Adb,java.lang.String)>(r1, $r58);

        $r20 = (java.lang.CharSequence) $r59;

        $z4 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r20);

        if $z4 == 0 goto label14;

        $r27 = new org.gradle.api.tasks.StopExecutionException;

        $r28 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Failed to find benchmark report on device: ", $r58);

        specialinvoke $r27.<org.gradle.api.tasks.StopExecutionException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label14:
        $r21 = new java.io.File;

        $r22 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r22, $r58);

        r60 = $r21;

        virtualinvoke r60.<java.io.File: boolean mkdirs()>();

        specialinvoke r0.<androidx.benchmark.gradle.BenchmarkReportTask: void getReportsForDevice(androidx.benchmark.gradle.Adb,java.io.File,java.lang.String,java.lang.String)>(r1, r60, $r59, $r58);

        $r24 = <com.android.ddmlib.Log$LogLevel: com.android.ddmlib.Log$LogLevel INFO>;

        $r23 = r0.<androidx.benchmark.gradle.BenchmarkReportTask: java.io.File benchmarkReportDir>;

        $r25 = virtualinvoke $r23.<java.io.File: java.lang.String getAbsolutePath()>();

        $r26 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Benchmark report files generated at ", $r25);

        staticinvoke <com.android.ddmlib.Log: void logAndDisplay(com.android.ddmlib.Log$LogLevel,java.lang.String,java.lang.String)>($r24, "Benchmark", $r26);

        goto label13;

     label15:
        return;
    }

    private final void getReportsForDevice(androidx.benchmark.gradle.Adb, java.io.File, java.lang.String, java.lang.String)
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        androidx.benchmark.gradle.Adb r1;
        java.io.File r2;
        java.lang.String r3, r4, $r7, $r9, $r27, $r29, $r34, r41, r46, $r50, r51;
        java.lang.CharSequence r5, $r10, $r32, $r33;
        java.util.Collection r6, r38, r43;
        androidx.benchmark.gradle.Adb$ProcessResult $r8;
        java.util.List $r11, $r13, $r15;
        java.util.ArrayList $r12, $r14;
        int $i0;
        boolean $z0, $z1, $z2, $z10;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        kotlin.text.Regex $r31;
        java.lang.NullPointerException $r35;
        java.lang.String[] $r36;
        java.lang.Iterable $r37, $r42, $r47;
        java.util.Iterator $r39, $r44, $r48;
        java.lang.Object r40, r45, r49;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        r1 := @parameter0: androidx.benchmark.gradle.Adb;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("shell ls ", r3);

        $r8 = staticinvoke <androidx.benchmark.gradle.Adb: androidx.benchmark.gradle.Adb$ProcessResult execSync$default(androidx.benchmark.gradle.Adb,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.Object)>(r1, $r7, r4, 0, 0, 12, null);

        $r9 = virtualinvoke $r8.<androidx.benchmark.gradle.Adb$ProcessResult: java.lang.String getStdout()>();

        $r10 = (java.lang.CharSequence) $r9;

        $r36 = newarray (java.lang.String)[1];

        $r36[0] = "\n";

        $r11 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r10, $r36, 0, 0, 6, null);

        $r37 = (java.lang.Iterable) $r11;

        $r12 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r37, 10);

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i0);

        r38 = (java.util.Collection) $r12;

        $r39 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r40 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.lang.String) r40;

        r6 = r38;

        if r41 != null goto label2;

        $r35 = new java.lang.NullPointerException;

        specialinvoke $r35.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r35;

     label2:
        $r32 = (java.lang.CharSequence) r41;

        $r33 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r34);

        goto label1;

     label3:
        $r13 = (java.util.List) r38;

        $r42 = (java.lang.Iterable) $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r43 = (java.util.Collection) $r14;

        $r44 = interfaceinvoke $r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z10 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label5;

        r45 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r46 = (java.lang.String) r45;

        r5 = (java.lang.CharSequence) r46;

        $r31 = new kotlin.text.Regex;

        specialinvoke $r31.<kotlin.text.Regex: void <init>(java.lang.String)>(".*benchmarkData[.](?:xml|json)$");

        $z2 = virtualinvoke $r31.<kotlin.text.Regex: boolean matches(java.lang.CharSequence)>(r5);

        if $z2 == 0 goto label4;

        interfaceinvoke r43.<java.util.Collection: boolean add(java.lang.Object)>(r45);

        goto label4;

     label5:
        $r15 = (java.util.List) r43;

        $r47 = (java.lang.Iterable) $r15;

        $r48 = interfaceinvoke $r47.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (java.lang.String) r49;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        r51 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pull ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.benchmark.gradle.Adb: androidx.benchmark.gradle.Adb$ProcessResult execSync$default(androidx.benchmark.gradle.Adb,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.Object)>(r1, $r27, r4, 0, 0, 12, null);

        $r29 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("shell rm ", r51);

        staticinvoke <androidx.benchmark.gradle.Adb: androidx.benchmark.gradle.Adb$ProcessResult execSync$default(androidx.benchmark.gradle.Adb,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.Object)>(r1, $r29, r4, 0, 0, 12, null);

        goto label6;

     label7:
        return;
    }

    private final java.lang.String getReportDirForDevice(androidx.benchmark.gradle.Adb, java.lang.String)
    {
        androidx.benchmark.gradle.BenchmarkReportTask r0;
        androidx.benchmark.gradle.Adb r1;
        java.lang.String r2, r3, $r6, $r10, $r13, $r20, $r23;
        kotlin.text.Regex r4, $r14;
        byte b0;
        androidx.benchmark.gradle.Adb$ProcessResult $r5;
        java.lang.CharSequence $r7, $r11, $r12, $r17, $r21, $r22, r27;
        java.util.List $r8, $r15, $r18;
        java.lang.Object $r9, $r16, $r19;
        java.lang.NullPointerException $r24, $r25;
        java.lang.String[] r26, r28;

        r0 := @this: androidx.benchmark.gradle.BenchmarkReportTask;

        r1 := @parameter0: androidx.benchmark.gradle.Adb;

        r2 := @parameter1: java.lang.String;

        r3 = "shell content query --uri content://media/external/file --projection _data --where \"_data LIKE \'%/Download\' AND _data NOT LIKE \'%files/Download\'\"";

        $r5 = staticinvoke <androidx.benchmark.gradle.Adb: androidx.benchmark.gradle.Adb$ProcessResult execSync$default(androidx.benchmark.gradle.Adb,java.lang.String,java.lang.String,boolean,boolean,int,java.lang.Object)>(r1, r3, r2, 0, 0, 12, null);

        $r6 = virtualinvoke $r5.<androidx.benchmark.gradle.Adb$ProcessResult: java.lang.String getStdout()>();

        $r7 = (java.lang.CharSequence) $r6;

        r26 = newarray (java.lang.String)[1];

        r26[0] = "\n";

        $r8 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r7, r26, 0, 0, 6, null);

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r8);

        $r10 = (java.lang.String) $r9;

        if $r10 != null goto label1;

        $r25 = new java.lang.NullPointerException;

        specialinvoke $r25.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r25;

     label1:
        $r11 = (java.lang.CharSequence) $r10;

        $r12 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        r27 = (java.lang.CharSequence) $r13;

        $r14 = new kotlin.text.Regex;

        specialinvoke $r14.<kotlin.text.Regex: void <init>(java.lang.String)>("\\s+");

        r4 = $r14;

        b0 = 0;

        $r15 = virtualinvoke r4.<kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)>(r27, b0);

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r15);

        $r17 = (java.lang.CharSequence) $r16;

        r28 = newarray (java.lang.String)[1];

        r28[0] = "=";

        $r18 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r17, r28, 0, 0, 6, null);

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r18);

        $r20 = (java.lang.String) $r19;

        if $r20 != null goto label2;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r24;

     label2:
        $r21 = (java.lang.CharSequence) $r20;

        $r22 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        return $r23;
    }

    private static final boolean _init_$lambda-0(org.gradle.api.Task)
    {
        org.gradle.api.Task r0;

        r0 := @parameter0: org.gradle.api.Task;

        return 0;
    }

