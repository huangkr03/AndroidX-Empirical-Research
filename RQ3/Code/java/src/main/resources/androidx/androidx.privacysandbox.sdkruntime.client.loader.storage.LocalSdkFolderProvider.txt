androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider
<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion Companion>
<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.io.File sdkRootFolder>
<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.lang.String SDK_ROOT_FOLDER>
<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.lang.String VERSION_FILE_NAME>
    private void <init>(java.io.File)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r0;
        java.io.File r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.io.File sdkRootFolder> = r1;

        return;
    }

    public final java.io.File dexFolderFor(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r0;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig r1;
        java.io.File r2, $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        r1 := @parameter0: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sdkConfig");

        $r3 = new java.io.File;

        $r4 = r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: java.io.File sdkRootFolder>;

        $r5 = virtualinvoke r1.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig: java.lang.String getPackageName()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        r2 = $r3;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

     label1:
        return r2;
    }

    public void <init>(java.io.File, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider r0;
        java.io.File r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        r1 := @parameter0: java.io.File;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: void <init>(java.io.File)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl
<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl INSTANCE>
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long getLastUpdateTime(android.content.Context)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl r0;
        android.content.Context r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageManager$PackageInfoFlags $r4;
        android.content.pm.PackageInfo $r5;
        long $l0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = staticinvoke <android.content.pm.PackageManager$PackageInfoFlags: android.content.pm.PackageManager$PackageInfoFlags of(long)>(0L);

        $r5 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,android.content.pm.PackageManager$PackageInfoFlags)>($r3, $r4);

        $l0 = $r5.<android.content.pm.PackageInfo: long lastUpdateTime>;

        return $l0;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl: void <init>()>();

        <androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl INSTANCE> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider create(android.content.Context)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;
        android.content.Context r1;
        java.io.File r2;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider $r3;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        r2 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: java.io.File createSdkRootFolder(android.content.Context)>(r1);

        $r3 = new androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider;

        specialinvoke $r3.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider: void <init>(java.io.File,kotlin.jvm.internal.DefaultConstructorMarker)>(r2, null);

        return $r3;
    }

    private final java.io.File createSdkRootFolder(android.content.Context)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;
        android.content.Context r1;
        java.io.File r2, r3, $r7, $r8, $r9;
        java.lang.Long r4;
        long l0, $l1;
        java.io.Closeable r5, r6;
        byte $b2;
        boolean $z0;
        java.io.FileOutputStream $r10, r17;
        java.io.DataOutputStream $r11, r18;
        java.io.OutputStream $r12;
        java.lang.Throwable $r13, $r14, $r15, $r16, r20, r21, r22, r24, r25, r26;
        kotlin.Unit r19, r23;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        r1 := @parameter0: android.content.Context;

        $r7 = new java.io.File;

        $r8 = virtualinvoke r1.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "RuntimeEnabledSdk");

        r2 = $r7;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "Folder.version");

        r3 = $r9;

        r4 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: java.lang.Long readVersion(java.io.File)>(r3);

        l0 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: long appLastUpdateTime(android.content.Context)>(r1);

        if r4 != null goto label01;

        goto label02;

     label01:
        $l1 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label15;

     label02:
        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label03;

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r2);

     label03:
        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r5 = (java.io.Closeable) $r10;

     label04:
        r17 = (java.io.FileOutputStream) r5;

        $r11 = new java.io.DataOutputStream;

        $r12 = (java.io.OutputStream) r17;

        specialinvoke $r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r12);

        r6 = (java.io.Closeable) $r11;

     label05:
        r18 = (java.io.DataOutputStream) r6;

        virtualinvoke r18.<java.io.DataOutputStream: void writeLong(long)>(l0);

        r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label06:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r6, null);

        goto label10;

     label07:
        $r13 := @caughtexception;

        r20 = $r13;

        r21 = r20;

        throw r20;

     label08:
        $r14 := @caughtexception;

        r22 = $r14;

     label09:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r6, r21);

        throw r22;

     label10:
        r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label11:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r5, null);

        goto label15;

     label12:
        $r16 := @caughtexception;

        r24 = $r16;

        r25 = r24;

        throw r24;

     label13:
        $r15 := @caughtexception;

        r26 = $r15;

     label14:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r5, r25);

        throw r26;

     label15:
        return r2;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private final long appLastUpdateTime(android.content.Context)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;
        android.content.Context r1;
        android.content.pm.PackageInfo r2;
        int $i0;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4;
        long $l1, $l2;
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl $r5;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label1;

        $r5 = <androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl INSTANCE>;

        $l2 = virtualinvoke $r5.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Api33Impl: long getLastUpdateTime(android.content.Context)>(r1);

        return $l2;

     label1:
        $r3 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

        $l1 = r2.<android.content.pm.PackageInfo: long lastUpdateTime>;

        return $l1;
    }

    private final java.lang.Long readVersion(java.io.File)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;
        java.io.File r1;
        java.io.Closeable r2, r13;
        java.lang.Long r3, r4;
        boolean $z0;
        java.io.FileInputStream $r5, r14;
        java.io.DataInputStream $r6, r15;
        java.io.InputStream $r7;
        long $l0;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, r16, r17, r18, r19, r20, r21;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r13 = (java.io.Closeable) $r5;

     label02:
        r14 = (java.io.FileInputStream) r13;

        $r6 = new java.io.DataInputStream;

        $r7 = (java.io.InputStream) r14;

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r7);

        r2 = (java.io.Closeable) $r6;

     label03:
        r15 = (java.io.DataInputStream) r2;

        $l0 = virtualinvoke r15.<java.io.DataInputStream: long readLong()>();

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label04:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, null);

        r4 = r3;

     label05:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r13, null);

        return r4;

     label06:
        $r9 := @caughtexception;

        r16 = $r9;

        r17 = r16;

        throw r16;

     label07:
        $r10 := @caughtexception;

        r18 = $r10;

     label08:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r17);

        throw r18;

     label09:
        $r12 := @caughtexception;

        r19 = $r12;

        r20 = r19;

        throw r19;

     label10:
        $r11 := @caughtexception;

        r21 = $r11;

     label11:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r13, r20);

        throw r21;

     label12:
        $r8 := @caughtexception;

        return null;

        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label09 with label09;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Exception from label01 to label12 with label12;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.loader.storage.LocalSdkFolderProvider$Companion: void <init>()>();

        return;
    }

