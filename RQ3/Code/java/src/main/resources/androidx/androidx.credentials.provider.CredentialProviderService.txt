androidx.credentials.provider.CredentialProviderService
<androidx.credentials.provider.CredentialProviderService: androidx.credentials.provider.CredentialProviderService$Companion Companion>
<androidx.credentials.provider.CredentialProviderService: java.lang.String TAG>
    public void <init>()
    {
        androidx.credentials.provider.CredentialProviderService r0;

        r0 := @this: androidx.credentials.provider.CredentialProviderService;

        specialinvoke r0.<android.service.credentials.CredentialProviderService: void <init>()>();

        return;
    }

    public final void onBeginGetCredential(android.service.credentials.BeginGetCredentialRequest, android.os.CancellationSignal, android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService r0;
        android.service.credentials.BeginGetCredentialRequest r1, r4;
        android.os.CancellationSignal r2;
        android.os.OutcomeReceiver r3, $r8;
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r5, $r7;
        androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion $r6;

        r0 := @this: androidx.credentials.provider.CredentialProviderService;

        r1 := @parameter0: android.service.credentials.BeginGetCredentialRequest;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: android.os.OutcomeReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "cancellationSignal");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r6 = <androidx.credentials.provider.utils.BeginGetCredentialUtil: androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion Companion>;

        r4 = virtualinvoke $r6.<androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion: android.service.credentials.BeginGetCredentialRequest convertToStructuredRequest$credentials_release(android.service.credentials.BeginGetCredentialRequest)>(r1);

        $r7 = new androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        specialinvoke $r7.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: void <init>(android.os.OutcomeReceiver)>(r3);

        r5 = $r7;

        $r8 = (android.os.OutcomeReceiver) r5;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService: void onBeginGetCredentialRequest(android.service.credentials.BeginGetCredentialRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>(r4, r2, $r8);

        return;
    }

    public final void onBeginCreateCredential(android.service.credentials.BeginCreateCredentialRequest, android.os.CancellationSignal, android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService r0;
        android.service.credentials.BeginCreateCredentialRequest r1, $r7;
        android.os.CancellationSignal r2;
        android.os.OutcomeReceiver r3, $r8;
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r4, $r5;
        androidx.credentials.provider.utils.BeginCreateCredentialUtil$Companion $r6;

        r0 := @this: androidx.credentials.provider.CredentialProviderService;

        r1 := @parameter0: android.service.credentials.BeginCreateCredentialRequest;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: android.os.OutcomeReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "cancellationSignal");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r5 = new androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        specialinvoke $r5.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: void <init>(android.os.OutcomeReceiver)>(r3);

        r4 = $r5;

        $r6 = <androidx.credentials.provider.utils.BeginCreateCredentialUtil: androidx.credentials.provider.utils.BeginCreateCredentialUtil$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.credentials.provider.utils.BeginCreateCredentialUtil$Companion: android.service.credentials.BeginCreateCredentialRequest convertToStructuredRequest$credentials_release(android.service.credentials.BeginCreateCredentialRequest)>(r1);

        $r8 = (android.os.OutcomeReceiver) r4;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService: void onBeginCreateCredentialRequest(android.service.credentials.BeginCreateCredentialRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>($r7, r2, $r8);

        return;
    }

    public final void onClearCredentialState(android.service.credentials.ClearCredentialStateRequest, android.os.CancellationSignal, android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService r0;
        android.service.credentials.ClearCredentialStateRequest r1;
        android.os.CancellationSignal r2;
        android.os.OutcomeReceiver r3, $r6;
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r4, $r5;

        r0 := @this: androidx.credentials.provider.CredentialProviderService;

        r1 := @parameter0: android.service.credentials.ClearCredentialStateRequest;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: android.os.OutcomeReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "cancellationSignal");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r5 = new androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        specialinvoke $r5.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: void <init>(android.os.OutcomeReceiver)>(r3);

        r4 = $r5;

        $r6 = (android.os.OutcomeReceiver) r4;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService: void onClearCredentialStateRequest(android.service.credentials.ClearCredentialStateRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>(r1, r2, $r6);

        return;
    }

<androidx.credentials.provider.CredentialProviderService: void onClearCredentialStateRequest(android.service.credentials.ClearCredentialStateRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>
<androidx.credentials.provider.CredentialProviderService: void onBeginGetCredentialRequest(android.service.credentials.BeginGetCredentialRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>
<androidx.credentials.provider.CredentialProviderService: void onBeginCreateCredentialRequest(android.service.credentials.BeginCreateCredentialRequest,android.os.CancellationSignal,android.os.OutcomeReceiver)>
    static void <clinit>()
    {
        androidx.credentials.provider.CredentialProviderService$Companion $r0;

        $r0 = new androidx.credentials.provider.CredentialProviderService$Companion;

        specialinvoke $r0.<androidx.credentials.provider.CredentialProviderService$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.CredentialProviderService: androidx.credentials.provider.CredentialProviderService$Companion Companion> = $r0;

        return;
    }

androidx.credentials.provider.CredentialProviderService$Companion
    private void <init>()
    {
        androidx.credentials.provider.CredentialProviderService$Companion r0;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.CredentialProviderService$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.CredentialProviderService$Companion: void <init>()>();

        return;
    }

androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1
<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: android.os.OutcomeReceiver $callback>
    void <init>(android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r0;
        android.os.OutcomeReceiver $r1;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        $r1 := @parameter0: android.os.OutcomeReceiver;

        r0.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: android.os.OutcomeReceiver $callback> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(android.service.credentials.BeginCreateCredentialResponse)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r0;
        android.service.credentials.BeginCreateCredentialResponse r1;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.util.List $r3;
        int $i1;
        java.lang.Integer $r6;
        java.lang.String $r8;
        android.os.OutcomeReceiver $r9;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        r1 := @parameter0: android.service.credentials.BeginCreateCredentialResponse;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateCredential result returned from provider to jetpack library with credential entries size: ");

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.service.credentials.BeginCreateCredentialResponse: java.util.List getCreateEntries()>();

        if $r3 == null goto label1;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", $r8);

        $r9 = r0.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: android.os.OutcomeReceiver $callback>;

        interfaceinvoke $r9.<android.os.OutcomeReceiver: void onResult(java.lang.Object)>(r1);

        return;
    }

    public void onError(androidx.credentials.exceptions.CreateCredentialException)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r0;
        androidx.credentials.exceptions.CreateCredentialException r1;
        java.lang.Throwable $r2, $r7;
        android.credentials.CreateCredentialException $r3;
        android.os.OutcomeReceiver $r4;
        java.lang.String $r5, $r6;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        r1 := @parameter0: androidx.credentials.exceptions.CreateCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "error");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", "onCreateCredential result returned from provider to jetpack");

        $r2 = (java.lang.Throwable) r1;

        specialinvoke r0.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r2);

        $r4 = r0.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: android.os.OutcomeReceiver $callback>;

        $r3 = new android.credentials.CreateCredentialException;

        $r5 = virtualinvoke r1.<androidx.credentials.exceptions.CreateCredentialException: java.lang.String getType()>();

        $r6 = virtualinvoke r1.<androidx.credentials.exceptions.CreateCredentialException: java.lang.String getMessage()>();

        specialinvoke $r3.<android.credentials.CreateCredentialException: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $r7 = (java.lang.Throwable) $r3;

        interfaceinvoke $r4.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r0;
        java.lang.Object r1;
        android.service.credentials.BeginCreateCredentialResponse $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.service.credentials.BeginCreateCredentialResponse) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: void onResult(android.service.credentials.BeginCreateCredentialResponse)>($r2);

        return;
    }

    public volatile void onError(java.lang.Throwable)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1 r0;
        java.lang.Throwable r1;
        androidx.credentials.exceptions.CreateCredentialException $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = (androidx.credentials.exceptions.CreateCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onBeginCreateCredential$outcome$1: void onError(androidx.credentials.exceptions.CreateCredentialException)>($r2);

        return;
    }

androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1
<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: android.os.OutcomeReceiver $callback>
    void <init>(android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r0;
        android.os.OutcomeReceiver $r1;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        $r1 := @parameter0: android.os.OutcomeReceiver;

        r0.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: android.os.OutcomeReceiver $callback> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(android.service.credentials.BeginGetCredentialResponse)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r0;
        android.service.credentials.BeginGetCredentialResponse r1;
        android.os.OutcomeReceiver $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        r1 := @parameter0: android.service.credentials.BeginGetCredentialResponse;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", "onGetCredentials response returned from provider to jetpack library");

        $r2 = r0.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: android.os.OutcomeReceiver $callback>;

        interfaceinvoke $r2.<android.os.OutcomeReceiver: void onResult(java.lang.Object)>(r1);

        return;
    }

    public void onError(androidx.credentials.exceptions.GetCredentialException)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r0;
        androidx.credentials.exceptions.GetCredentialException r1;
        java.lang.Throwable $r2, $r7;
        android.credentials.GetCredentialException $r3;
        android.os.OutcomeReceiver $r4;
        java.lang.String $r5, $r6;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        r1 := @parameter0: androidx.credentials.exceptions.GetCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "error");

        $r2 = (java.lang.Throwable) r1;

        specialinvoke r0.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", "onGetCredentials error returned from provider to jetpack library");

        $r4 = r0.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: android.os.OutcomeReceiver $callback>;

        $r3 = new android.credentials.GetCredentialException;

        $r5 = virtualinvoke r1.<androidx.credentials.exceptions.GetCredentialException: java.lang.String getType()>();

        $r6 = virtualinvoke r1.<androidx.credentials.exceptions.GetCredentialException: java.lang.String getMessage()>();

        specialinvoke $r3.<android.credentials.GetCredentialException: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $r7 = (java.lang.Throwable) $r3;

        interfaceinvoke $r4.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r0;
        java.lang.Object r1;
        android.service.credentials.BeginGetCredentialResponse $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.service.credentials.BeginGetCredentialResponse) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: void onResult(android.service.credentials.BeginGetCredentialResponse)>($r2);

        return;
    }

    public volatile void onError(java.lang.Throwable)
    {
        androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1 r0;
        java.lang.Throwable r1;
        androidx.credentials.exceptions.GetCredentialException $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = (androidx.credentials.exceptions.GetCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onBeginGetCredential$outcome$1: void onError(androidx.credentials.exceptions.GetCredentialException)>($r2);

        return;
    }

androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1
<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: android.os.OutcomeReceiver $callback>
    void <init>(android.os.OutcomeReceiver)
    {
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r0;
        android.os.OutcomeReceiver $r1;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        $r1 := @parameter0: android.os.OutcomeReceiver;

        r0.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: android.os.OutcomeReceiver $callback> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onResult(java.lang.Void)
    {
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r0;
        java.lang.Void r1;
        android.os.OutcomeReceiver $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        r1 := @parameter0: java.lang.Void;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", "onClearCredentialState result returned from provider to jetpack ");

        $r2 = r0.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: android.os.OutcomeReceiver $callback>;

        interfaceinvoke $r2.<android.os.OutcomeReceiver: void onResult(java.lang.Object)>(r1);

        return;
    }

    public void onError(androidx.credentials.exceptions.ClearCredentialException)
    {
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r0;
        androidx.credentials.exceptions.ClearCredentialException r1;
        java.lang.Throwable $r2, $r7;
        android.credentials.ClearCredentialStateException $r3;
        android.os.OutcomeReceiver $r4;
        java.lang.String $r5, $r6;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        r1 := @parameter0: androidx.credentials.exceptions.ClearCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "error");

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("BaseService", "onClearCredentialState result returned from provider to jetpack");

        $r2 = (java.lang.Throwable) r1;

        specialinvoke r0.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r2);

        $r4 = r0.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: android.os.OutcomeReceiver $callback>;

        $r3 = new android.credentials.ClearCredentialStateException;

        $r5 = virtualinvoke r1.<androidx.credentials.exceptions.ClearCredentialException: java.lang.String getType()>();

        $r6 = virtualinvoke r1.<androidx.credentials.exceptions.ClearCredentialException: java.lang.String getMessage()>();

        specialinvoke $r3.<android.credentials.ClearCredentialStateException: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        $r7 = (java.lang.Throwable) $r3;

        interfaceinvoke $r4.<android.os.OutcomeReceiver: void onError(java.lang.Throwable)>($r7);

        return;
    }

    public volatile void onResult(java.lang.Object)
    {
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: void onResult(java.lang.Void)>($r2);

        return;
    }

    public volatile void onError(java.lang.Throwable)
    {
        androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1 r0;
        java.lang.Throwable r1;
        androidx.credentials.exceptions.ClearCredentialException $r2;

        r0 := @this: androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = (androidx.credentials.exceptions.ClearCredentialException) r1;

        virtualinvoke r0.<androidx.credentials.provider.CredentialProviderService$onClearCredentialState$outcome$1: void onError(androidx.credentials.exceptions.ClearCredentialException)>($r2);

        return;
    }

