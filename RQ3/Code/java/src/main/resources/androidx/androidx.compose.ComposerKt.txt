androidx.compose.ComposerKt
<androidx.compose.ComposerKt: androidx.compose.Composer currentComposerInternal>
<androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance>
<androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 skipToEndGroupInstance>
<androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance>
<androidx.compose.ComposerKt: int rootKey>
<androidx.compose.ComposerKt: int nodeKey>
<androidx.compose.ComposerKt: int invocationKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey invocation>
<androidx.compose.ComposerKt: int providerKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey provider>
<androidx.compose.ComposerKt: int ambientMapKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey ambientMap>
<androidx.compose.ComposerKt: int providerValuesKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerValues>
<androidx.compose.ComposerKt: int providerMapsKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerMaps>
<androidx.compose.ComposerKt: int referenceKey>
<androidx.compose.ComposerKt: androidx.compose.OpaqueKey reference>
    public static final androidx.compose.Composer getComposer()
    {
        java.lang.String r0, $r2;
        boolean z0;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r3;

        r0 = "This property should not be called directly. It is only used by the compiler.";

        z0 = 0;

        $r1 = new java.lang.IllegalStateException;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;
    }

    public static void getComposer$annotations()
    {
        return;
    }

    public static final boolean contains(androidx.compose.BuildableMap, androidx.compose.Ambient)
    {
        androidx.compose.BuildableMap $r0;
        androidx.compose.Ambient r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.BuildableMap;

        r1 := @parameter1: androidx.compose.Ambient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $z0 = virtualinvoke $r0.<androidx.compose.BuildableMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public static final java.lang.Object getValueOf(androidx.compose.BuildableMap, androidx.compose.Ambient)
    {
        androidx.compose.BuildableMap $r0;
        androidx.compose.Ambient r1;
        androidx.compose.State r2;
        java.lang.Object $r3, $r4;

        $r0 := @parameter0: androidx.compose.BuildableMap;

        r1 := @parameter1: androidx.compose.Ambient;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = virtualinvoke $r0.<androidx.compose.BuildableMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.compose.State) $r3;

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r2.<androidx.compose.State: java.lang.Object getValue()>();

     label2:
        return $r4;
    }

    private static final androidx.compose.BuildableMap ambientMapOf(androidx.compose.ProvidedValue[], androidx.compose.Composer, int, int)
    {
        androidx.compose.ProvidedValue[] r0, r7;
        androidx.compose.Composer $r1;
        int $i0, $i1, i2, i3;
        androidx.compose.BuildableMap r2, r3, r4;
        androidx.compose.BuildableMapBuilder r5;
        boolean z1, z2, z4;
        java.util.Map r6, r9;
        androidx.compose.ProvidedValue r8;
        androidx.compose.Ambient r10, $r12;
        androidx.compose.State r11;
        java.lang.Object $r13;

        r0 := @parameter0: androidx.compose.ProvidedValue[];

        $r1 := @parameter1: androidx.compose.Composer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        virtualinvoke $r1.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        r2 = staticinvoke <androidx.compose.ActualJvmKt: androidx.compose.BuildableMap buildableMapOf()>();

        r5 = virtualinvoke r2.<androidx.compose.BuildableMap: androidx.compose.BuildableMapBuilder builder$compose_runtime_release()>();

        z1 = 0;

        z2 = 0;

        r6 = (java.util.Map) r5;

        r7 = r0;

        i3 = 0;

        i2 = lengthof r7;

     label1:
        if i3 >= i2 goto label2;

        r8 = r7[i3];

        i3 = i3 + 1;

        r9 = r6;

        r10 = virtualinvoke r8.<androidx.compose.ProvidedValue: androidx.compose.Ambient getAmbient()>();

        $r12 = virtualinvoke r8.<androidx.compose.ProvidedValue: androidx.compose.Ambient getAmbient()>();

        $r13 = virtualinvoke r8.<androidx.compose.ProvidedValue: java.lang.Object getValue()>();

        r11 = virtualinvoke $r12.<androidx.compose.Ambient: androidx.compose.State provided$compose_runtime_release(java.lang.Object,androidx.compose.Composer,int,int)>($r13, $r1, 243812656, 0);

        z4 = 0;

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r11);

        goto label1;

     label2:
        r4 = virtualinvoke r5.<androidx.compose.BuildableMapBuilder: androidx.compose.BuildableMap build()>();

        r3 = r4;

        virtualinvoke $r1.<androidx.compose.Composer: void endReplaceableGroup()>();

        return r3;
    }

    public static final java.lang.Object cache(androidx.compose.Composer, boolean, kotlin.jvm.functions.Function0)
    {
        androidx.compose.Composer $r0;
        boolean z0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object r2, $r4, r5;
        androidx.compose.SlotTable$Companion $r3;

        $r0 := @parameter0: androidx.compose.Composer;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        r5 = virtualinvoke $r0.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r3 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r5 == $r4 goto label1;

        if z0 != 0 goto label2;

     label1:
        r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        virtualinvoke $r0.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r2);

        r5 = r2;

     label2:
        return r5;
    }

    public static java.lang.Object cache$default(androidx.compose.Composer, boolean, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.compose.Composer $r0;
        kotlin.jvm.functions.Function0 r1;
        int i0, $i1;
        java.lang.Object r2, r4, $r6, r7;
        androidx.compose.SlotTable$Companion $r5;
        boolean z1;

        $r0 := @parameter0: androidx.compose.Composer;

        z1 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z1 = 1;

     label1:
        r7 = virtualinvoke $r0.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r5 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r7 == $r6 goto label2;

        if z1 != 0 goto label3;

     label2:
        r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        virtualinvoke $r0.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r4);

        r7 = r4;

     label3:
        return r7;
    }

    private static final void removeCurrentGroup(androidx.compose.SlotWriter, androidx.compose.LifeCycleManager)
    {
        androidx.compose.SlotWriter r0;
        androidx.compose.LifeCycleManager r1;
        androidx.compose.IntStack r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        androidx.compose.FrameManager $r4;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6, r15;
        java.lang.Throwable $r7;
        androidx.compose.RecomposeScope $r8;
        androidx.compose.Group $r9;
        int $i0, i1, i2, i3;
        androidx.compose.CompositionLifecycleObserver $r10;
        java.util.Iterator r11, r12;
        java.lang.Object r13, r14;

        r0 := @parameter0: androidx.compose.SlotWriter;

        r1 := @parameter1: androidx.compose.LifeCycleManager;

        i1 = 2147483647;

        i2 = 0;

        $r3 = new androidx.compose.IntStack;

        specialinvoke $r3.<androidx.compose.IntStack: void <init>()>();

        r2 = $r3;

        r11 = virtualinvoke r0.<androidx.compose.SlotWriter: java.util.Iterator groupSlots()>();

        z6 = 0;

        r12 = r11;

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = r13;

        $z3 = r14 instanceof androidx.compose.CompositionLifecycleObserver;

        if $z3 == 0 goto label2;

        $r10 = (androidx.compose.CompositionLifecycleObserver) r13;

        interfaceinvoke r1.<androidx.compose.LifeCycleManager: void leaving(androidx.compose.CompositionLifecycleObserver)>($r10);

        goto label4;

     label2:
        $z4 = r14 instanceof androidx.compose.Group;

        if $z4 == 0 goto label3;

        virtualinvoke r2.<androidx.compose.IntStack: void push(int)>(i1);

        $r9 = (androidx.compose.Group) r13;

        $i0 = virtualinvoke $r9.<androidx.compose.Group: int getSlots()>();

        i1 = i2 + $i0;

        goto label4;

     label3:
        $z5 = r14 instanceof androidx.compose.RecomposeScope;

        if $z5 == 0 goto label4;

        $r8 = (androidx.compose.RecomposeScope) r13;

        virtualinvoke $r8.<androidx.compose.RecomposeScope: void setInTable(boolean)>(0);

     label4:
        i3 = i2;

        i2 = i3 + 1;

     label5:
        if i2 < i1 goto label1;

        i1 = virtualinvoke r2.<androidx.compose.IntStack: int pop()>();

        goto label5;

     label6:
        $z1 = virtualinvoke r2.<androidx.compose.IntStack: boolean isNotEmpty()>();

        if $z1 == 0 goto label7;

        r15 = "Invalid slot structure";

        z7 = 0;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label7:
        $z2 = virtualinvoke r0.<androidx.compose.SlotWriter: boolean removeGroup()>();

        if $z2 == 0 goto label8;

        $r4 = <androidx.compose.FrameManager: androidx.compose.FrameManager INSTANCE>;

        virtualinvoke $r4.<androidx.compose.FrameManager: void scheduleCleanup$compose_runtime_release()>();

     label8:
        return;
    }

    private static final java.util.HashMap multiMap()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    private static final boolean put(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, r4, $r9;
        java.util.Map $r3;
        java.util.LinkedHashSet $r5, $r6;
        boolean $z1;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = (java.util.Map) $r0;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label1;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        $r9 = $r6;

        goto label2;

     label1:
        $r9 = r4;

     label2:
        $r5 = (java.util.LinkedHashSet) $r9;

        $z1 = virtualinvoke $r5.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r2);

        return $z1;
    }

    private static final kotlin.Unit remove(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, $r5, $r6;
        java.util.LinkedHashSet r3, r4, $r7, r9, r10;
        boolean z0, z1, $z4;
        kotlin.Unit $r8;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r5 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.LinkedHashSet) $r5;

        if r3 != null goto label1;

        $r8 = null;

        goto label3;

     label1:
        r9 = r3;

        r10 = r9;

        z0 = 0;

        z1 = 0;

        r4 = r10;

        virtualinvoke r4.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r2);

        $z4 = virtualinvoke r4.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z4 == 0 goto label2;

        $r6 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = (java.util.LinkedHashSet) $r6;

     label2:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        return $r8;
    }

    private static final java.lang.Object pop(java.util.HashMap, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2, r3, $r4, $r8, $r10, r11;
        boolean z0, z2;
        java.lang.Iterable $r5;
        java.util.LinkedHashSet r7, r9;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        $r4 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.LinkedHashSet) $r4;

        if r7 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        r9 = r7;

        $r5 = (java.lang.Iterable) r9;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r5);

     label2:
        r2 = $r8;

        if r2 != null goto label3;

        $r10 = null;

        goto label4;

     label3:
        r11 = r2;

        z2 = 0;

        z0 = 0;

        r3 = r11;

        staticinvoke <androidx.compose.ComposerKt: kotlin.Unit remove(java.util.HashMap,java.lang.Object,java.lang.Object)>($r0, r1, r3);

        $r10 = r11;

     label4:
        return $r10;
    }

    private static final java.lang.Object getKey(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, r5, $r6, $r7, $r8, $r9, r10, $r12;
        androidx.compose.JoinedKey r3, r4, $r11, r13;
        boolean z0, z1, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r10 = r0;

        $z3 = r10 instanceof androidx.compose.JoinedKey;

        if $z3 == 0 goto label1;

        $r11 = (androidx.compose.JoinedKey) r10;

        goto label2;

     label1:
        $r11 = null;

     label2:
        r3 = $r11;

        if r3 != null goto label3;

        $r12 = null;

        goto label6;

     label3:
        r13 = r3;

        z0 = 0;

        z1 = 0;

        r4 = r13;

        $r6 = virtualinvoke r4.<androidx.compose.JoinedKey: java.lang.Object getLeft()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r1);

        if $z4 == 0 goto label4;

        $r9 = virtualinvoke r4.<androidx.compose.JoinedKey: java.lang.Object getRight()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, r2);

        if $z5 == 0 goto label4;

        $r12 = r0;

        goto label6;

     label4:
        $r7 = virtualinvoke r4.<androidx.compose.JoinedKey: java.lang.Object getLeft()>();

        r5 = staticinvoke <androidx.compose.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r7, r1, r2);

        if r5 != null goto label5;

        $r8 = virtualinvoke r4.<androidx.compose.JoinedKey: java.lang.Object getRight()>();

        $r12 = staticinvoke <androidx.compose.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>($r8, r1, r2);

        goto label6;

     label5:
        $r12 = r5;

     label6:
        return $r12;
    }

    private static final int findLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        androidx.compose.Invalidation r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i8 = 0;

        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        i9 = $i3 - 1;

     label1:
        if i8 > i9 goto label4;

        $i6 = i8 + i9;

        i1 = $i6 >>> 1;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (androidx.compose.Invalidation) $r2;

        $i7 = virtualinvoke r1.<androidx.compose.Invalidation: int getLocation()>();

        i2 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($i7, i0);

        if i2 >= 0 goto label2;

        i8 = i1 + 1;

        goto label1;

     label2:
        if i2 <= 0 goto label3;

        i9 = i1 - 1;

        goto label1;

     label3:
        return i1;

     label4:
        $i4 = i8 + 1;

        $i5 = neg $i4;

        return $i5;
    }

    private static final void insertIfMissing(java.util.List, int, androidx.compose.RecomposeScope)
    {
        java.util.List $r0;
        int i0, i1, $i2, $i3;
        androidx.compose.RecomposeScope r1;
        androidx.compose.Invalidation $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.RecomposeScope;

        i1 = staticinvoke <androidx.compose.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        if i1 >= 0 goto label1;

        $i2 = i1 + 1;

        $i3 = neg $i2;

        $r2 = new androidx.compose.Invalidation;

        specialinvoke $r2.<androidx.compose.Invalidation: void <init>(androidx.compose.RecomposeScope,int)>(r1, i0);

        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>($i3, $r2);

     label1:
        return;
    }

    private static final androidx.compose.Invalidation firstInRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, $i8;
        boolean z0, z1;
        androidx.compose.Invalidation $r1, r3;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i7 = staticinvoke <androidx.compose.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        z0 = 0;

        z1 = 0;

        i3 = i7;

        if i3 >= 0 goto label1;

        $i6 = i3 + 1;

        $i8 = neg $i6;

        goto label2;

     label1:
        $i8 = i3;

     label2:
        i2 = $i8;

        $i4 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i2 >= $i4 goto label3;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (androidx.compose.Invalidation) $r2;

        $i5 = virtualinvoke r3.<androidx.compose.Invalidation: int getLocation()>();

        if $i5 > i1 goto label3;

        return r3;

     label3:
        $r1 = (androidx.compose.Invalidation) null;

        return $r1;
    }

    private static final androidx.compose.Invalidation removeLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0, i1;
        java.lang.Object $r1;
        androidx.compose.Invalidation $r2;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 = staticinvoke <androidx.compose.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        if i1 < 0 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(i1);

        $r2 = (androidx.compose.Invalidation) $r1;

        goto label2;

     label1:
        $r2 = (androidx.compose.Invalidation) null;

     label2:
        return $r2;
    }

    private static final void removeRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, $i8;
        boolean z0, z1;
        java.lang.Object $r1, $r2;
        androidx.compose.Invalidation $r3, r4;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i6 = staticinvoke <androidx.compose.ComposerKt: int findLocation(java.util.List,int)>($r0, i0);

        z0 = 0;

        z1 = 0;

        i3 = i6;

        if i3 >= 0 goto label1;

        $i5 = i3 + 1;

        $i7 = neg $i5;

        goto label2;

     label1:
        $i7 = i3;

     label2:
        i2 = $i7;

     label3:
        $i8 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i2 >= $i8 goto label5;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (androidx.compose.Invalidation) $r1;

        $i4 = virtualinvoke r4.<androidx.compose.Invalidation: int getLocation()>();

        if $i4 > i1 goto label4;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(i2);

        $r3 = (androidx.compose.Invalidation) $r2;

        goto label3;

     label4:
        goto label5;

     label5:
        return;
    }

    private static final int asInt(boolean)
    {
        boolean $z0;
        byte $b0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        return $b0;
    }

    private static final boolean asBool(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final java.lang.Object escapeCompose(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.NullCompilationScope $r1;
        java.lang.Object $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "block");

        $r1 = <androidx.compose.NullCompilationScope: androidx.compose.NullCompilationScope INSTANCE>;

        $r2 = interfaceinvoke r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        return $r2;
    }

    public static final androidx.compose.Composer getCurrentComposer(androidx.compose.Composer, int, int)
    {
        androidx.compose.Composer $r0;
        int $i0, $i1;
        kotlin.NotImplementedError $r1;

        $r0 := @parameter0: androidx.compose.Composer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.compose.Composer: void startReplaceableGroup(int)>($i0);

        $r1 = new kotlin.NotImplementedError;

        specialinvoke $r1.<kotlin.NotImplementedError: void <init>(java.lang.String)>("Implemented as an intrinsic");

        throw $r1;
    }

    public static void getCurrentComposer$annotations()
    {
        return;
    }

    public static final androidx.compose.Composer getCurrentComposerInternal()
    {
        androidx.compose.Composer $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.Composer currentComposerInternal>;

        return $r0;
    }

    public static final void setCurrentComposerInternal(androidx.compose.Composer)
    {
        androidx.compose.Composer r0;

        r0 := @parameter0: androidx.compose.Composer;

        <androidx.compose.ComposerKt: androidx.compose.Composer currentComposerInternal> = r0;

        return;
    }

    public static final void invokeComposable(androidx.compose.Composer, kotlin.jvm.functions.Function3)
    {
        androidx.compose.Composer r0;
        kotlin.jvm.functions.Function3 r1, r2;
        java.lang.Integer $r3, $r4;

        r0 := @parameter0: androidx.compose.Composer;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composable");

        r2 = r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r3, $r4);

        return;
    }

    public static final java.lang.Object invokeComposableForResult(androidx.compose.Composer, kotlin.jvm.functions.Function3)
    {
        androidx.compose.Composer r0;
        kotlin.jvm.functions.Function3 r1, r2;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;

        r0 := @parameter0: androidx.compose.Composer;

        r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "composable");

        r2 = r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r5 = interfaceinvoke r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, $r3, $r4);

        return $r5;
    }

    private static final int distanceFrom(androidx.compose.Group, androidx.compose.Group)
    {
        androidx.compose.Group $r0, r1, r2;
        int i0, i1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.Group;

        r1 := @parameter1: androidx.compose.Group;

        i1 = 0;

        r2 = $r0;

     label1:
        if r2 == null goto label2;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r1);

        if $z0 != 0 goto label2;

        r2 = virtualinvoke r2.<androidx.compose.Group: androidx.compose.Group getParent()>();

        i0 = i1;

        i1 = i0 + 1;

        goto label1;

     label2:
        return i1;
    }

    private static final androidx.compose.Group nearestCommonRootOf(androidx.compose.Group, androidx.compose.Group, androidx.compose.Group)
    {
        androidx.compose.Group r0, r1, r2, $r5, $r6, $r7, $r8, $r13, $r14, $r16, $r25, r26, $r27, r28, $r29, r30, $r31, r32, $r33;
        kotlin.jvm.internal.Ref$ObjectRef r3, r4, $r9, $r10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z10, z11;
        java.lang.Object $r11, $r12, $r15, $r17, $r18, $r21, $r23;

        r0 := @parameter0: androidx.compose.Group;

        r1 := @parameter1: androidx.compose.Group;

        r2 := @parameter2: androidx.compose.Group;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 == 0 goto label01;

        return r0;

     label01:
        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r2);

        if $z1 != 0 goto label02;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z2 == 0 goto label03;

     label02:
        return r2;

     label03:
        $r5 = virtualinvoke r0.<androidx.compose.Group: androidx.compose.Group getParent()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z3 == 0 goto label04;

        return r1;

     label04:
        $r6 = virtualinvoke r1.<androidx.compose.Group: androidx.compose.Group getParent()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, r0);

        if $z4 == 0 goto label05;

        return r0;

     label05:
        $r7 = virtualinvoke r0.<androidx.compose.Group: androidx.compose.Group getParent()>();

        $r8 = virtualinvoke r1.<androidx.compose.Group: androidx.compose.Group getParent()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z5 == 0 goto label06;

        $r25 = virtualinvoke r0.<androidx.compose.Group: androidx.compose.Group getParent()>();

        return $r25;

     label06:
        $r9 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r9.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r3 = $r9;

        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r0;

        $r10 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r10.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r4 = $r10;

        r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r1;

        i0 = staticinvoke <androidx.compose.ComposerKt: int distanceFrom(androidx.compose.Group,androidx.compose.Group)>(r0, r2);

        i1 = staticinvoke <androidx.compose.ComposerKt: int distanceFrom(androidx.compose.Group,androidx.compose.Group)>(r1, r2);

        i2 = i0 - i1;

        z7 = 0;

        z8 = 0;

        i3 = 0;

        i4 = i2;

     label07:
        if i3 >= i4 goto label10;

        i5 = i3;

        $r23 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r26 = (androidx.compose.Group) $r23;

        if r26 != null goto label08;

        $r27 = (androidx.compose.Group) null;

        goto label09;

     label08:
        $r27 = virtualinvoke r26.<androidx.compose.Group: androidx.compose.Group getParent()>();

     label09:
        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r27;

        i3 = i3 + 1;

        goto label07;

     label10:
        i6 = i1 - i0;

        z10 = 0;

        z11 = 0;

        i7 = 0;

        i8 = i6;

     label11:
        if i7 >= i8 goto label14;

        i9 = i7;

        $r21 = r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r28 = (androidx.compose.Group) $r21;

        if r28 != null goto label12;

        $r29 = (androidx.compose.Group) null;

        goto label13;

     label12:
        $r29 = virtualinvoke r28.<androidx.compose.Group: androidx.compose.Group getParent()>();

     label13:
        r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r29;

        i7 = i7 + 1;

        goto label11;

     label14:
        $r11 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r14 = (androidx.compose.Group) $r11;

        $r12 = r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r13 = (androidx.compose.Group) $r12;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z6 != 0 goto label19;

        $r17 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r30 = (androidx.compose.Group) $r17;

        if r30 != null goto label15;

        $r31 = (androidx.compose.Group) null;

        goto label16;

     label15:
        $r31 = virtualinvoke r30.<androidx.compose.Group: androidx.compose.Group getParent()>();

     label16:
        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r31;

        $r18 = r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        r32 = (androidx.compose.Group) $r18;

        if r32 != null goto label17;

        $r33 = (androidx.compose.Group) null;

        goto label18;

     label17:
        $r33 = virtualinvoke r32.<androidx.compose.Group: androidx.compose.Group getParent()>();

     label18:
        r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r33;

        goto label14;

     label19:
        $r15 = r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r16 = (androidx.compose.Group) $r15;

        return $r16;
    }

    private static final java.lang.Object getJoinedKey(androidx.compose.KeyInfo)
    {
        androidx.compose.KeyInfo $r0;
        java.lang.Object $r1, $r3, $r4;
        int $i0, $i1;
        java.lang.Integer $r2;
        androidx.compose.JoinedKey r5;

        $r0 := @parameter0: androidx.compose.KeyInfo;

        $r1 = virtualinvoke $r0.<androidx.compose.KeyInfo: java.lang.Object getDataKey()>();

        if $r1 == null goto label1;

        r5 = new androidx.compose.JoinedKey;

        $r4 = r5;

        $i1 = virtualinvoke $r0.<androidx.compose.KeyInfo: int getKey()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke $r0.<androidx.compose.KeyInfo: java.lang.Object getDataKey()>();

        specialinvoke r5.<androidx.compose.JoinedKey: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<androidx.compose.KeyInfo: int getKey()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r4;
    }

    public static void getInvocationKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getInvocation()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey invocation>;

        return $r0;
    }

    public static void getInvocation$annotations()
    {
        return;
    }

    public static void getProviderKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getProvider()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey provider>;

        return $r0;
    }

    public static void getProvider$annotations()
    {
        return;
    }

    public static void getAmbientMapKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getAmbientMap()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey ambientMap>;

        return $r0;
    }

    public static void getAmbientMap$annotations()
    {
        return;
    }

    public static void getProviderValuesKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getProviderValues()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerValues>;

        return $r0;
    }

    public static void getProviderValues$annotations()
    {
        return;
    }

    public static void getProviderMapsKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getProviderMaps()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerMaps>;

        return $r0;
    }

    public static void getProviderMaps$annotations()
    {
        return;
    }

    public static void getReferenceKey$annotations()
    {
        return;
    }

    public static final androidx.compose.OpaqueKey getReference()
    {
        androidx.compose.OpaqueKey $r0;

        $r0 = <androidx.compose.ComposerKt: androidx.compose.OpaqueKey reference>;

        return $r0;
    }

    public static void getReference$annotations()
    {
        return;
    }

    public static final java.lang.Object access$pop(java.util.HashMap, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, $r2;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <androidx.compose.ComposerKt: java.lang.Object pop(java.util.HashMap,java.lang.Object)>($r0, r1);

        return $r2;
    }

    public static final java.util.HashMap access$multiMap()
    {
        java.util.HashMap $r0;

        $r0 = staticinvoke <androidx.compose.ComposerKt: java.util.HashMap multiMap()>();

        return $r0;
    }

    public static final boolean access$put(java.util.HashMap, java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r0;
        java.lang.Object r1, r2;
        boolean $z0;

        $r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <androidx.compose.ComposerKt: boolean put(java.util.HashMap,java.lang.Object,java.lang.Object)>($r0, r1, r2);

        return $z0;
    }

    public static final java.lang.Object access$getJoinedKey(androidx.compose.KeyInfo)
    {
        androidx.compose.KeyInfo $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: androidx.compose.KeyInfo;

        $r1 = staticinvoke <androidx.compose.ComposerKt: java.lang.Object getJoinedKey(androidx.compose.KeyInfo)>($r0);

        return $r1;
    }

    public static final java.lang.Object access$getKey(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <androidx.compose.ComposerKt: java.lang.Object getKey(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        return $r3;
    }

    public static final androidx.compose.BuildableMap access$ambientMapOf(androidx.compose.ProvidedValue[], androidx.compose.Composer, int, int)
    {
        androidx.compose.ProvidedValue[] r0;
        androidx.compose.Composer r1;
        int i0, i1;
        androidx.compose.BuildableMap $r2;

        r0 := @parameter0: androidx.compose.ProvidedValue[];

        r1 := @parameter1: androidx.compose.Composer;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.BuildableMap ambientMapOf(androidx.compose.ProvidedValue[],androidx.compose.Composer,int,int)>(r0, r1, i0, i1);

        return $r2;
    }

    public static final int access$asInt(boolean)
    {
        boolean $z0;
        int $i0;

        $z0 := @parameter0: boolean;

        $i0 = staticinvoke <androidx.compose.ComposerKt: int asInt(boolean)>($z0);

        return $i0;
    }

    public static final boolean access$asBool(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <androidx.compose.ComposerKt: boolean asBool(int)>($i0);

        return $z0;
    }

    public static final void access$removeRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <androidx.compose.ComposerKt: void removeRange(java.util.List,int,int)>($r0, i0, i1);

        return;
    }

    public static final androidx.compose.Invalidation access$firstInRange(java.util.List, int, int)
    {
        java.util.List $r0;
        int i0, i1;
        androidx.compose.Invalidation $r1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.Invalidation firstInRange(java.util.List,int,int)>($r0, i0, i1);

        return $r1;
    }

    public static final androidx.compose.Invalidation access$removeLocation(java.util.List, int)
    {
        java.util.List $r0;
        int i0;
        androidx.compose.Invalidation $r1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.Invalidation removeLocation(java.util.List,int)>($r0, i0);

        return $r1;
    }

    public static final androidx.compose.Group access$nearestCommonRootOf(androidx.compose.Group, androidx.compose.Group, androidx.compose.Group)
    {
        androidx.compose.Group r0, r1, r2, $r3;

        r0 := @parameter0: androidx.compose.Group;

        r1 := @parameter1: androidx.compose.Group;

        r2 := @parameter2: androidx.compose.Group;

        $r3 = staticinvoke <androidx.compose.ComposerKt: androidx.compose.Group nearestCommonRootOf(androidx.compose.Group,androidx.compose.Group,androidx.compose.Group)>(r0, r1, r2);

        return $r3;
    }

    public static final void access$insertIfMissing(java.util.List, int, androidx.compose.RecomposeScope)
    {
        java.util.List $r0;
        int i0;
        androidx.compose.RecomposeScope r1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.RecomposeScope;

        staticinvoke <androidx.compose.ComposerKt: void insertIfMissing(java.util.List,int,androidx.compose.RecomposeScope)>($r0, i0, r1);

        return;
    }

    public static final kotlin.jvm.functions.Function3 access$getRemoveCurrentGroupInstance$cp$s1550638793()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance>;

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getSkipToEndGroupInstance$cp$s1550638793()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 skipToEndGroupInstance>;

        return $r0;
    }

    public static final kotlin.jvm.functions.Function3 access$getEndGroupInstance$cp$s1550638793()
    {
        kotlin.jvm.functions.Function3 $r0;

        $r0 = <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance>;

        return $r0;
    }

    public static final void access$removeCurrentGroup(androidx.compose.SlotWriter, androidx.compose.LifeCycleManager)
    {
        androidx.compose.SlotWriter r0;
        androidx.compose.LifeCycleManager r1;

        r0 := @parameter0: androidx.compose.SlotWriter;

        r1 := @parameter1: androidx.compose.LifeCycleManager;

        staticinvoke <androidx.compose.ComposerKt: void removeCurrentGroup(androidx.compose.SlotWriter,androidx.compose.LifeCycleManager)>(r0, r1);

        return;
    }

    public static final void <clinit>()
    {
        androidx.compose.ComposerKt$removeCurrentGroupInstance$1 $r0;
        kotlin.jvm.functions.Function3 $r1, $r3, $r5;
        androidx.compose.ComposerKt$skipToEndGroupInstance$1 $r2;
        androidx.compose.ComposerKt$endGroupInstance$1 $r4;
        androidx.compose.OpaqueKey $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = new androidx.compose.ComposerKt$removeCurrentGroupInstance$1;

        specialinvoke $r0.<androidx.compose.ComposerKt$removeCurrentGroupInstance$1: void <init>()>();

        $r1 = (kotlin.jvm.functions.Function3) $r0;

        <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 removeCurrentGroupInstance> = $r1;

        $r2 = new androidx.compose.ComposerKt$skipToEndGroupInstance$1;

        specialinvoke $r2.<androidx.compose.ComposerKt$skipToEndGroupInstance$1: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function3) $r2;

        <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 skipToEndGroupInstance> = $r3;

        $r4 = new androidx.compose.ComposerKt$endGroupInstance$1;

        specialinvoke $r4.<androidx.compose.ComposerKt$endGroupInstance$1: void <init>()>();

        $r5 = (kotlin.jvm.functions.Function3) $r4;

        <androidx.compose.ComposerKt: kotlin.jvm.functions.Function3 endGroupInstance> = $r5;

        $r6 = new androidx.compose.OpaqueKey;

        specialinvoke $r6.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("provider");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey invocation> = $r6;

        $r7 = new androidx.compose.OpaqueKey;

        specialinvoke $r7.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("provider");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey provider> = $r7;

        $r8 = new androidx.compose.OpaqueKey;

        specialinvoke $r8.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("ambientMap");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey ambientMap> = $r8;

        $r9 = new androidx.compose.OpaqueKey;

        specialinvoke $r9.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("providerValues");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerValues> = $r9;

        $r10 = new androidx.compose.OpaqueKey;

        specialinvoke $r10.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("providers");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey providerMaps> = $r10;

        $r11 = new androidx.compose.OpaqueKey;

        specialinvoke $r11.<androidx.compose.OpaqueKey: void <init>(java.lang.String)>("reference");

        <androidx.compose.ComposerKt: androidx.compose.OpaqueKey reference> = $r11;

        return;
    }

