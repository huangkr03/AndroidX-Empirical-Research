androidx.test.espresso.matcher.HasBackgroundMatcher
<androidx.test.espresso.matcher.HasBackgroundMatcher: java.lang.String TAG>
<androidx.test.espresso.matcher.HasBackgroundMatcher: int drawableId>
    public void <init>(int)
    {
        androidx.test.espresso.matcher.HasBackgroundMatcher r0;
        int i0;

        r0 := @this: androidx.test.espresso.matcher.HasBackgroundMatcher;

        i0 := @parameter0: int;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        r0.<androidx.test.espresso.matcher.HasBackgroundMatcher: int drawableId> = i0;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.Description r0;
        java.lang.StringBuilder r1, $r2, $r3;
        java.lang.String $r4;
        androidx.test.espresso.matcher.HasBackgroundMatcher r6;
        int i0;

        r6 := @this: androidx.test.espresso.matcher.HasBackgroundMatcher;

        r0 := @parameter0: org.hamcrest.Description;

        i0 = r6.<androidx.test.espresso.matcher.HasBackgroundMatcher: int drawableId>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has background with drawable ID: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r4);

        return;
    }

    private static boolean assertDrawable(android.graphics.drawable.Drawable, int, android.view.View)
    {
        android.view.View r0;
        boolean $z0, z1;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.graphics.drawable.BitmapDrawable $r3;
        android.graphics.Bitmap $r4, r8;
        java.lang.Throwable $r5, $r6, r9;
        android.graphics.drawable.Drawable r7;
        int i0;

        r7 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        r0 := @parameter2: android.view.View;

        if r7 == null goto label1;

        $z0 = r7 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke r0.<android.view.View: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        r8 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r2, i0);

     label3:
        $r3 = (android.graphics.drawable.BitmapDrawable) r7;

        $r4 = virtualinvoke $r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        z1 = virtualinvoke $r4.<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>(r8);

     label4:
        if r8 == null goto label5;

        virtualinvoke r8.<android.graphics.Bitmap: void recycle()>();

     label5:
        return z1;

     label6:
        $r5 := @caughtexception;

        r9 = $r5;

        r8 = null;

     label7:
        if r8 == null goto label8;

        virtualinvoke r8.<android.graphics.Bitmap: void recycle()>();

     label8:
        throw r9;

     label9:
        $r6 := @caughtexception;

        r9 = $r6;

        goto label7;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label9;
    }

    protected boolean matchesSafely(android.view.View)
    {
        androidx.test.espresso.matcher.HasBackgroundMatcher r0;
        android.view.View r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.matcher.HasBackgroundMatcher;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        $i0 = r0.<androidx.test.espresso.matcher.HasBackgroundMatcher: int drawableId>;

        $z0 = staticinvoke <androidx.test.espresso.matcher.HasBackgroundMatcher: boolean assertDrawable(android.graphics.drawable.Drawable,int,android.view.View)>($r2, $i0, r1);

        return $z0;
    }

    protected volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.matcher.HasBackgroundMatcher r0;
        java.lang.Object r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.matcher.HasBackgroundMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.matcher.HasBackgroundMatcher: boolean matchesSafely(android.view.View)>($r2);

        return $z0;
    }

