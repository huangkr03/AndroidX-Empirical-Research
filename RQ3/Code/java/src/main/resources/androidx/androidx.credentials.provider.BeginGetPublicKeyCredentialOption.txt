androidx.credentials.provider.BeginGetPublicKeyCredentialOption
<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion Companion>
<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: java.lang.String requestJson>
<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: android.os.Parcelable$Creator CREATOR>
    public void <init>(android.os.Bundle, java.lang.String, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption r0;
        android.os.Bundle r1;
        java.lang.String r2, r3, $r4, $r7, $r8;
        java.lang.CharSequence $r5;
        int $i0;
        java.lang.IllegalArgumentException $r6;
        boolean $z0;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "candidateQueryData");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "requestJson");

        specialinvoke r0.<android.service.credentials.BeginGetCredentialOption: void <init>(java.lang.String,java.lang.String,android.os.Bundle)>(r2, "androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", r1);

        r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: java.lang.String requestJson> = r3;

        $r4 = r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: java.lang.String requestJson>;

        $r5 = (java.lang.CharSequence) $r4;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r8 = "requestJson must not be empty";

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        return;
    }

    public final java.lang.String getRequestJson()
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        $r1 = r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: java.lang.String requestJson>;

        return $r1;
    }

    public int describeContents()
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption r0;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.BeginGetCredentialOption: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion $r2;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.credentials.provider.BeginGetPublicKeyCredentialOption: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion: androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static final androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFromEntrySlice$credentials_release(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion $r2;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.credentials.provider.BeginGetPublicKeyCredentialOption: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion: androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFromEntrySlice$credentials_release(android.os.Bundle,java.lang.String)>(r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion $r0;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion;

        specialinvoke $r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.BeginGetPublicKeyCredentialOption: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.BeginGetPublicKeyCredentialOption: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1
    void <init>()
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 r0;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        android.service.credentials.BeginGetCredentialOption r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion $r5;
        android.os.Bundle $r6;
        java.lang.String $r7;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption $r8;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = <android.service.credentials.BeginGetCredentialOption: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r2 = (android.service.credentials.BeginGetCredentialOption) $r4;

        $r5 = <androidx.credentials.provider.BeginGetPublicKeyCredentialOption: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.BeginGetCredentialOption: android.os.Bundle getCandidateQueryData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "baseOption.candidateQueryData");

        $r7 = virtualinvoke r2.<android.service.credentials.BeginGetCredentialOption: java.lang.String getId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "baseOption.id");

        $r8 = virtualinvoke $r5.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion: androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle,java.lang.String)>($r6, $r7);

        return $r8;
    }

    public androidx.credentials.provider.BeginGetPublicKeyCredentialOption[] newArray(int)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption[] $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.credentials.provider.BeginGetPublicKeyCredentialOption)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption $r2;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1: androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption[] $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion$CREATOR$1: androidx.credentials.provider.BeginGetPublicKeyCredentialOption[] newArray(int)>(i0);

        return $r1;
    }

androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion
    private void <init>()
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion r0;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFrom$credentials_release(android.os.Bundle, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion r0;
        android.os.Bundle r1;
        java.lang.String r2, r6;
        java.lang.Throwable $r4, r7, r10;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption r8;
        androidx.credentials.internal.FrameworkClassParsingException r9;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

     label1:
        r6 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.BUNDLE_KEY_REQUEST_JSON");

        r8 = new androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r6);

        specialinvoke r8.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: void <init>(android.os.Bundle,java.lang.String,java.lang.String)>(r1, r2, r6);

        return r8;

     label2:
        $r4 := @caughtexception;

        r7 = $r4;

        r9 = new androidx.credentials.internal.FrameworkClassParsingException;

        specialinvoke r9.<androidx.credentials.internal.FrameworkClassParsingException: void <init>()>();

        r10 = (java.lang.Throwable) r9;

        throw r10;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public final androidx.credentials.provider.BeginGetPublicKeyCredentialOption createFromEntrySlice$credentials_release(android.os.Bundle, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion r0;
        android.os.Bundle r1;
        java.lang.String r2, r3;
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption $r4;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

        r3 = "dummy_request_json";

        $r4 = new androidx.credentials.provider.BeginGetPublicKeyCredentialOption;

        specialinvoke $r4.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption: void <init>(android.os.Bundle,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.BeginGetPublicKeyCredentialOption$Companion: void <init>()>();

        return;
    }

