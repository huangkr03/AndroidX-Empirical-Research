kotlin.text.StringsKt__IndentKt
    public void <init>()
    {
        kotlin.text.StringsKt__IndentKt $r0;

        $r0 := @this: kotlin.text.StringsKt__IndentKt;

        specialinvoke $r0.<kotlin.text.StringsKt__AppendableKt: void <init>()>();

        return;
    }

    private static final kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;
        kotlin.text.StringsKt__IndentKt$getIndentFunction$2 $r1;
        kotlin.text.StringsKt__IndentKt$getIndentFunction$1 r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        r2 = <kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE>;

        return r2;

     label3:
        $r1 = new kotlin.text.StringsKt__IndentKt$getIndentFunction$2;

        specialinvoke $r1.<kotlin.text.StringsKt__IndentKt$getIndentFunction$2: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    private static final int indentWidth$StringsKt__IndentKt(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        char $c2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $c2 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i1);

        $z0 = staticinvoke <kotlin.text.CharsKt: boolean isWhitespace(char)>($c2);

        if $z0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        goto label6;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $i1 = -1;

     label6:
        if $i1 != -1 goto label7;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        return $i0;

     label7:
        return $i1;
    }

    public static final java.lang.String prependIndent(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        kotlin.sequences.Sequence $r2;
        kotlin.text.StringsKt__IndentKt$prependIndent$1 $r3;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "indent");

        $r2 = staticinvoke <kotlin.text.StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)>($r1);

        $r3 = new kotlin.text.StringsKt__IndentKt$prependIndent$1;

        specialinvoke $r3.<kotlin.text.StringsKt__IndentKt$prependIndent$1: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r2, $r3);

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, "\n", null, null, 0, null, null, 62, null);

        return $r1;
    }

    public static java.lang.String prependIndent$default(java.lang.String, java.lang.String, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = "    ";

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String prependIndent(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

    private static final java.lang.String reindent$StringsKt__IndentKt(java.util.List, int, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0, $r1;
        java.util.ArrayList $r2, r10;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        java.lang.StringBuilder $r8, r11;
        java.lang.Appendable $r9;
        java.lang.Iterable r12;
        java.util.Collection r13;

        $r3 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        $r1 := @parameter3: kotlin.jvm.functions.Function1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r3);

        r10 = new java.util.ArrayList;

        $r2 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r12 = (java.lang.Iterable) $r3;

        $r4 = interfaceinvoke r12.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $i3 = $i2 + 1;

        if $i2 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        $r6 = (java.lang.String) $r5;

        if $i2 == 0 goto label3;

        if $i2 != $i1 goto label4;

     label3:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r6);

        if $z0 == 0 goto label4;

        $r6 = null;

        goto label6;

     label4:
        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $r7 = (java.lang.String) $r5;

        if $r7 == null goto label6;

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r7 = (java.lang.String) $r5;

        if $r7 != null goto label5;

        goto label6;

     label5:
        $r6 = $r7;

        goto label6;

     label6:
        if $r6 == null goto label7;

        r13 = (java.util.Collection) $r2;

        interfaceinvoke r13.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label7;

     label7:
        $i2 = $i3;

        goto label1;

     label8:
        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>(int)>($i0);

        r12 = (java.lang.Iterable) $r2;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r12, r11, "\n", null, null, 0, null, null, 124, null);

        $r8 = (java.lang.StringBuilder) $r9;

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "mapIndexedNotNull { inde\u2026\"\\n\")\n        .toString()");

        return $r6;
    }

    public static final java.lang.String replaceIndent(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r6;
        java.util.List $r2;
        java.util.ArrayList $r3, $r7, r13;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r8;
        java.lang.Comparable $r9;
        kotlin.jvm.functions.Function1 $r10;
        java.lang.StringBuilder $r11, r14;
        java.lang.Appendable $r12;
        java.lang.Iterable r15;
        java.util.Collection r16;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "newIndent");

        $r2 = staticinvoke <kotlin.text.StringsKt: java.util.List lines(java.lang.CharSequence)>($r0);

        $r7 = new java.util.ArrayList;

        $r3 = $r7;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r15 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r6);

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label01;

        r16 = (java.util.Collection) $r3;

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        goto label01;

     label02:
        r13 = new java.util.ArrayList;

        $r7 = r13;

        r15 = (java.lang.Iterable) $r3;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r15, 10);

        specialinvoke r13.<java.util.ArrayList: void <init>(int)>($i0);

        r15 = (java.lang.Iterable) $r3;

        $r4 = interfaceinvoke r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $i0 = staticinvoke <kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)>($r6);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r16 = (java.util.Collection) $r7;

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        goto label03;

     label04:
        r15 = (java.lang.Iterable) $r7;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)>(r15);

        $r8 = (java.lang.Integer) $r9;

        $i0 = 0;

        if $r8 == null goto label05;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        goto label06;

     label05:
        $i1 = 0;

     label06:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        $r10 = staticinvoke <kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)>($r1);

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r2);

        $r7 = new java.util.ArrayList;

        $r3 = $r7;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r15 = (java.lang.Iterable) $r2;

        $r4 = interfaceinvoke r15.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $i4 = $i0 + 1;

        if $i0 >= 0 goto label08;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label08:
        $r0 = (java.lang.String) $r5;

        if $i0 == 0 goto label09;

        if $i0 != $i3 goto label10;

     label09:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label10;

        $r0 = null;

        goto label12;

     label10:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String drop(java.lang.String,int)>($r0, $i1);

        if $r1 == null goto label12;

        $r5 = interfaceinvoke $r10.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r5;

        if $r1 != null goto label11;

        goto label12;

     label11:
        $r0 = $r1;

        goto label12;

     label12:
        if $r0 == null goto label13;

        r16 = (java.util.Collection) $r3;

        interfaceinvoke r16.<java.util.Collection: boolean add(java.lang.Object)>($r0);

        goto label13;

     label13:
        $i0 = $i4;

        goto label07;

     label14:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>(int)>($i2);

        r15 = (java.lang.Iterable) $r3;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r15, r14, "\n", null, null, 0, null, null, 124, null);

        $r11 = (java.lang.StringBuilder) $r12;

        $r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "mapIndexedNotNull { inde\u2026\"\\n\")\n        .toString()");

        return $r0;
    }

    public static java.lang.String replaceIndent$default(java.lang.String, java.lang.String, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = "";

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

    public static final java.lang.String replaceIndentByMargin(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r3, r11;
        boolean $z0;
        java.util.List $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        char $c5;
        java.lang.StringBuilder $r9, r12;
        java.lang.Appendable $r10;
        java.lang.IllegalArgumentException r13;
        java.lang.Iterable r14;
        java.util.Collection r15;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "newIndent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "marginPrefix");

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label20;

        $r4 = staticinvoke <kotlin.text.StringsKt: java.util.List lines(java.lang.CharSequence)>($r0);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = $i1 * $i2;

        $i0 = $i0 + $i1;

        $r5 = staticinvoke <kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)>($r1);

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r4);

        r11 = new java.util.ArrayList;

        $r3 = r11;

        specialinvoke r11.<java.util.ArrayList: void <init>()>();

        r14 = (java.lang.Iterable) $r4;

        $r6 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i3 = 0;

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $i2 = $i3 + 1;

        if $i3 >= 0 goto label04;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label04:
        $r0 = (java.lang.String) $r7;

        if $i3 == 0 goto label05;

        if $i3 != $i1 goto label06;

     label05:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean isBlank(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label06;

        $r0 = null;

        goto label17;

     label06:
        $i3 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        $i4 = 0;

     label07:
        if $i4 >= $i3 goto label11;

        $c5 = interfaceinvoke $r0.<java.lang.CharSequence: char charAt(int)>($i4);

        $z0 = staticinvoke <kotlin.text.CharsKt: boolean isWhitespace(char)>($c5);

        if $z0 != 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        if $z0 == 0 goto label10;

        $i3 = $i4;

        goto label12;

     label10:
        $i4 = $i4 + 1;

        goto label07;

     label11:
        $i3 = -1;

     label12:
        if $i3 != -1 goto label14;

     label13:
        $r1 = null;

        goto label15;

     label14:
        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)>($r0, $r2, $i3, 0, 4, null);

        if $z0 == 0 goto label13;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r0, "null cannot be cast to non-null type java.lang.String");

        $i3 = $i3 + $i4;

        $r8 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $r1 = $r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "this as java.lang.String).substring(startIndex)");

     label15:
        if $r1 == null goto label17;

        $r7 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r7;

        if $r1 != null goto label16;

        goto label17;

     label16:
        $r0 = $r1;

        goto label17;

     label17:
        if $r0 == null goto label18;

        r15 = (java.util.Collection) $r3;

        interfaceinvoke r15.<java.util.Collection: boolean add(java.lang.Object)>($r0);

        goto label18;

     label18:
        $i3 = $i2;

        goto label03;

     label19:
        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>(int)>($i0);

        r14 = (java.lang.Iterable) $r3;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r14, r12, "\n", null, null, 0, null, null, 124, null);

        $r9 = (java.lang.StringBuilder) $r10;

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "mapIndexedNotNull { inde\u2026\"\\n\")\n        .toString()");

        return $r0;

     label20:
        r13 = new java.lang.IllegalArgumentException;

        $r0 = "marginPrefix must be non-blank string.";

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        goto label21;

     label21:
        throw r13;
    }

    public static java.lang.String replaceIndentByMargin$default(java.lang.String, java.lang.String, java.lang.String, int, java.lang.Object)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r1 = "";

     label1:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r2 = "|";

     label2:
        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $r0;
    }

    public static final java.lang.String trimIndent(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)>($r0, "");

        return $r0;
    }

    public static final java.lang.String trimMargin(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "marginPrefix");

        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)>($r1, "", $r0);

        return $r1;
    }

    public static java.lang.String trimMargin$default(java.lang.String, java.lang.String, int, java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = "|";

     label1:
        $r1 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimMargin(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;
    }

