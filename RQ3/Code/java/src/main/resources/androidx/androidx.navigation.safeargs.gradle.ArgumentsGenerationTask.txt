androidx.navigation.safeargs.gradle.ArgumentsGenerationTask
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ProjectLayout projectLayout>
    public void <init>(org.gradle.api.file.ProjectLayout)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        org.gradle.api.file.ProjectLayout r1;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: org.gradle.api.file.ProjectLayout;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "projectLayout");

        specialinvoke r0.<org.gradle.api.DefaultTask: void <init>()>();

        r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ProjectLayout projectLayout> = r1;

        return;
    }

<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getRFilePackage()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getApplicationId()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getUseAndroidX()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getGenerateKotlin()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ConfigurableFileCollection getNavigationFiles()>
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getIncrementalFolder()>
    private final kotlin.Pair generateArgs(java.util.Collection, java.io.File)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        java.util.Collection r1, r9, r38;
        java.io.File r2, r6, $r33, $r34;
        java.lang.Iterable $r3, $r12, $r15;
        java.util.Iterator r4;
        java.lang.Object r5, $r13, $r14, $r19, $r22, $r24, $r27;
        androidx.navigation.safe.args.generator.GeneratorOutput r7;
        java.lang.String r8, $r20, $r39;
        java.util.ArrayList $r10;
        int $i0;
        boolean $z1, $z2, $z3;
        java.util.List $r11, $r16, $r35, $r36, r41, $r42;
        kotlin.Pair $r17, $r37, $r40;
        org.gradle.api.provider.Property $r18, $r21, $r23, $r26;
        java.lang.Boolean $r25, $r28;
        androidx.navigation.safe.args.generator.NavSafeArgsGenerator $r29;
        androidx.navigation.safeargs.gradle.Mapping $r30;
        org.gradle.api.file.ProjectLayout $r31;
        org.gradle.api.file.Directory $r32;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.io.File;

        $r3 = (java.lang.Iterable) r1;

        $r10 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r38 = (java.util.Collection) $r10;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.io.File) r5;

        r9 = r38;

        $r18 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getRFilePackage()>();

        $r19 = interfaceinvoke $r18.<org.gradle.api.provider.Property: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "rFilePackage.get()");

        $r20 = (java.lang.String) $r19;

        $r21 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getApplicationId()>();

        $r22 = interfaceinvoke $r21.<org.gradle.api.provider.Property: java.lang.Object getOrNull()>();

        $r39 = (java.lang.String) $r22;

        if $r39 != null goto label2;

        $r39 = "";

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r39, "applicationId.orNull ?: \"\"");

        $r23 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getUseAndroidX()>();

        $r24 = interfaceinvoke $r23.<org.gradle.api.provider.Property: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "useAndroidX.get()");

        $r25 = (java.lang.Boolean) $r24;

        $z2 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        $r26 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getGenerateKotlin()>();

        $r27 = interfaceinvoke $r26.<org.gradle.api.provider.Property: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "generateKotlin.get()");

        $r28 = (java.lang.Boolean) $r27;

        $z3 = virtualinvoke $r28.<java.lang.Boolean: boolean booleanValue()>();

        $r29 = staticinvoke <androidx.navigation.safe.args.generator.NavSafeArgsGeneratorKt: androidx.navigation.safe.args.generator.NavSafeArgsGenerator SafeArgsGenerator(java.lang.String,java.lang.String,java.io.File,java.io.File,boolean,boolean)>($r20, $r39, r6, r2, $z2, $z3);

        r7 = virtualinvoke $r29.<androidx.navigation.safe.args.generator.NavSafeArgsGenerator: androidx.navigation.safe.args.generator.GeneratorOutput generate()>();

        $r30 = new androidx.navigation.safeargs.gradle.Mapping;

        $r31 = r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ProjectLayout projectLayout>;

        $r32 = interfaceinvoke $r31.<org.gradle.api.file.ProjectLayout: org.gradle.api.file.Directory getProjectDirectory()>();

        $r33 = interfaceinvoke $r32.<org.gradle.api.file.Directory: java.io.File getAsFile()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "projectLayout.projectDirectory.asFile");

        $r34 = staticinvoke <kotlin.io.FilesKt: java.io.File relativeTo(java.io.File,java.io.File)>(r6, $r33);

        r8 = virtualinvoke $r34.<java.io.File: java.lang.String getPath()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r8, "file.relativeTo(\n       \u2026asFile\n            ).path");

        $r35 = virtualinvoke r7.<androidx.navigation.safe.args.generator.GeneratorOutput: java.util.List getFileNames()>();

        specialinvoke $r30.<androidx.navigation.safeargs.gradle.Mapping: void <init>(java.lang.String,java.util.List)>(r8, $r35);

        $r36 = virtualinvoke r7.<androidx.navigation.safe.args.generator.GeneratorOutput: java.util.List getErrors()>();

        $r37 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r30, $r36);

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>($r37);

        goto label1;

     label3:
        $r11 = (java.util.List) r38;

        $r12 = (java.lang.Iterable) $r11;

        $r40 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.Pair unzip(java.lang.Iterable)>($r12);

        $r13 = virtualinvoke $r40.<kotlin.Pair: java.lang.Object component1()>();

        r41 = (java.util.List) $r13;

        $r14 = virtualinvoke $r40.<kotlin.Pair: java.lang.Object component2()>();

        $r42 = (java.util.List) $r14;

        $r15 = (java.lang.Iterable) $r42;

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List flatten(java.lang.Iterable)>($r15);

        $r17 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r41, $r16);

        return $r17;
    }

    private final void writeMappings(java.util.List)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        java.util.List r1;
        java.io.File $r2, $r6, r14;
        org.gradle.api.file.DirectoryProperty $r3;
        org.gradle.api.provider.Provider $r4;
        java.lang.Object $r5;
        java.io.OutputStreamWriter $r7, r17;
        java.io.FileOutputStream $r8;
        java.io.OutputStream $r9;
        com.google.gson.Gson $r10;
        java.lang.Appendable $r11;
        java.lang.Throwable $r12, $r13, r19, r20, r21;
        java.nio.charset.Charset r15;
        java.io.Closeable r16;
        kotlin.Unit r18;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: java.util.List;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getIncrementalFolder()>();

        $r4 = interfaceinvoke $r3.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r5 = interfaceinvoke $r4.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        $r6 = (java.io.File) $r5;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "file_mappings.json");

        r14 = $r2;

        r15 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r7 = new java.io.OutputStreamWriter;

        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r14);

        $r9 = (java.io.OutputStream) $r8;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r9, r15);

        r16 = (java.io.Closeable) $r7;

     label1:
        r17 = (java.io.OutputStreamWriter) r16;

        $r10 = new com.google.gson.Gson;

        specialinvoke $r10.<com.google.gson.Gson: void <init>()>();

        $r11 = (java.lang.Appendable) r17;

        virtualinvoke $r10.<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.Appendable)>(r1, $r11);

        r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r16, null);

        goto label6;

     label3:
        $r12 := @caughtexception;

        r19 = $r12;

        r20 = r19;

        throw r19;

     label4:
        $r13 := @caughtexception;

        r21 = $r13;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r16, r20);

        throw r21;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private final java.util.List readMappings()
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        java.lang.reflect.Type r1;
        java.io.File r2, $r4, $r8, r17;
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1 $r3;
        org.gradle.api.file.DirectoryProperty $r5;
        org.gradle.api.provider.Provider $r6;
        java.lang.Object $r7, $r14;
        boolean $z0;
        java.io.InputStreamReader $r9, r20;
        java.io.FileInputStream $r10;
        java.io.InputStream $r11;
        com.google.gson.Gson $r12;
        java.io.Reader $r13;
        java.lang.Throwable $r15, $r16, r23, r24, r25;
        java.nio.charset.Charset r18;
        java.io.Closeable r19;
        java.util.List r21, $r22;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        $r3 = new androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1;

        specialinvoke $r3.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1: void <init>()>();

        r1 = virtualinvoke $r3.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1: java.lang.reflect.Type getType()>();

        $r4 = new java.io.File;

        $r5 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getIncrementalFolder()>();

        $r6 = interfaceinvoke $r5.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r7 = interfaceinvoke $r6.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        $r8 = (java.io.File) $r7;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, "file_mappings.json");

        r2 = $r4;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label7;

        r17 = r2;

        r18 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r9 = new java.io.InputStreamReader;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r17);

        $r11 = (java.io.InputStream) $r10;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r11, r18);

        r19 = (java.io.Closeable) $r9;

     label1:
        r20 = (java.io.InputStreamReader) r19;

        $r12 = new com.google.gson.Gson;

        specialinvoke $r12.<com.google.gson.Gson: void <init>()>();

        $r13 = (java.io.Reader) r20;

        $r14 = virtualinvoke $r12.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)>($r13, r1);

        r21 = (java.util.List) $r14;

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r19, null);

        $r22 = r21;

        goto label6;

     label3:
        $r15 := @caughtexception;

        r23 = $r15;

        r24 = r23;

        throw r23;

     label4:
        $r16 := @caughtexception;

        r25 = $r16;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r19, r24);

        throw r25;

     label6:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "{\n            mappingsFi\u2026son(it, type) }\n        }");

        goto label8;

     label7:
        $r22 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label8:
        return $r22;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final void taskAction$navigation_safe_args_gradle_plugin(org.gradle.work.InputChanges)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        org.gradle.work.InputChanges r1;
        boolean $z0;
        org.gradle.api.logging.Logger $r2;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: org.gradle.work.InputChanges;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "inputs");

        $z0 = interfaceinvoke r1.<org.gradle.work.InputChanges: boolean isIncremental()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void doIncrementalTaskAction(org.gradle.work.InputChanges)>(r1);

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.logging.Logger getLogger()>();

        interfaceinvoke $r2.<org.gradle.api.logging.Logger: void info(java.lang.String)>("Unable do incremental execution: full task run");

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void doFullTaskAction()>();

     label2:
        return;
    }

    private final void doFullTaskAction()
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        java.io.File r1;
        kotlin.Pair r2;
        java.util.List r3, r4;
        org.gradle.api.file.DirectoryProperty $r5;
        org.gradle.api.provider.Provider $r6;
        java.lang.Object $r7, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;
        org.gradle.api.file.ConfigurableFileCollection $r8;
        java.util.Set $r9;
        java.util.Collection $r10;
        org.gradle.api.GradleException $r13;
        org.gradle.api.logging.Logger $r14;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        $r5 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>();

        $r6 = interfaceinvoke $r5.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r7 = interfaceinvoke $r6.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        r1 = (java.io.File) $r7;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "outputDirFile");

        $z2 = staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r1);

        if $z2 != 0 goto label1;

        $r14 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.logging.Logger getLogger()>();

        interfaceinvoke $r14.<org.gradle.api.logging.Logger: void warn(java.lang.String)>("Failed to clear directory for navigation arguments");

     label1:
        $z3 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label2;

        $r13 = new org.gradle.api.GradleException;

        specialinvoke $r13.<org.gradle.api.GradleException: void <init>(java.lang.String)>("Failed to create directory for navigation arguments");

        throw $r13;

     label2:
        $r8 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ConfigurableFileCollection getNavigationFiles()>();

        $r9 = interfaceinvoke $r8.<org.gradle.api.file.ConfigurableFileCollection: java.util.Set getFiles()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "navigationFiles.files");

        $r10 = (java.util.Collection) $r9;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "outputDirFile");

        r2 = specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: kotlin.Pair generateArgs(java.util.Collection,java.io.File)>($r10, r1);

        $r11 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component1()>();

        r3 = (java.util.List) $r11;

        $r12 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component2()>();

        r4 = (java.util.List) $r12;

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void writeMappings(java.util.List)>(r3);

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void failIfErrors(java.util.List)>(r4);

        return;
    }

    private final void doIncrementalTaskAction(org.gradle.work.InputChanges)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        org.gradle.work.InputChanges r1;
        java.util.Set r2, r3, r72, $r73;
        java.util.LinkedHashSet $r4, $r5;
        org.gradle.api.file.ConfigurableFileCollection $r6;
        org.gradle.api.file.FileCollection $r7;
        java.lang.Iterable $r8, $r18, $r19, $r29, $r66, r71, $r74, r83, r88, r89, $r94;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z10, z21, $z22, z24, z27, $z29, $z31, z32;
        java.util.Collection $r9, $r30, r67, r84, r90;
        org.gradle.api.file.DirectoryProperty $r10, $r40;
        org.gradle.api.provider.Provider $r11, $r41;
        java.lang.Object $r12, $r14, $r15, $r23, $r24, $r33, $r42, r60, r69, r78, r86, r92, r96;
        java.io.File $r13, $r39, $r43, $r45, $r48, $r53, $r58;
        java.util.ArrayList $r16, $r20, $r21, $r25, $r27, r76;
        java.util.List $r17, $r26, $r28, $r31, $r44, $r50, $r62, r64, r65, $r81, r82;
        kotlin.Pair $r22, $r63;
        org.gradle.api.provider.Property $r32;
        java.lang.Boolean $r34;
        java.lang.StringBuilder $r35, $r37, $r38;
        char $c0;
        java.lang.String $r36, $r49, r93, $r97, $r98, r99, r100;
        org.gradle.api.file.ProjectLayout $r46;
        org.gradle.api.file.Directory $r47;
        org.gradle.work.ChangeType $r51, $r52, $r54, $r55, $r56, $r57;
        java.util.Iterator r59, r68, r77, $r85, $r91, r95;
        org.gradle.work.FileChange r61;
        androidx.navigation.safeargs.gradle.Mapping r70, $r79, r87;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: org.gradle.work.InputChanges;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r4;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r3 = (java.util.Set) $r5;

        $r6 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ConfigurableFileCollection getNavigationFiles()>();

        $r7 = (org.gradle.api.file.FileCollection) $r6;

        $r8 = interfaceinvoke r1.<org.gradle.work.InputChanges: java.lang.Iterable getFileChanges(org.gradle.api.file.FileCollection)>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "inputs.getFileChanges(navigationFiles)");

        r59 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        r60 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.gradle.work.FileChange) r60;

        $r51 = interfaceinvoke r61.<org.gradle.work.FileChange: org.gradle.work.ChangeType getChangeType()>();

        $r52 = <org.gradle.work.ChangeType: org.gradle.work.ChangeType MODIFIED>;

        if $r51 == $r52 goto label02;

        $r54 = interfaceinvoke r61.<org.gradle.work.FileChange: org.gradle.work.ChangeType getChangeType()>();

        $r55 = <org.gradle.work.ChangeType: org.gradle.work.ChangeType ADDED>;

        if $r54 != $r55 goto label03;

     label02:
        $r53 = interfaceinvoke r61.<org.gradle.work.FileChange: java.io.File getFile()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r53, "change.file");

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r53);

        goto label04;

     label03:
        $r56 = interfaceinvoke r61.<org.gradle.work.FileChange: org.gradle.work.ChangeType getChangeType()>();

        $r57 = <org.gradle.work.ChangeType: org.gradle.work.ChangeType REMOVED>;

        if $r56 != $r57 goto label04;

        $r58 = interfaceinvoke r61.<org.gradle.work.FileChange: java.io.File getFile()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r58, "change.file");

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r58);

     label04:
        goto label01;

     label05:
        $r62 = specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: java.util.List readMappings()>();

        $r9 = (java.util.Collection) r2;

        $r10 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>();

        $r11 = interfaceinvoke $r10.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r12 = interfaceinvoke $r11.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "outputDir.asFile.get()");

        $r13 = (java.io.File) $r12;

        $r63 = specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: kotlin.Pair generateArgs(java.util.Collection,java.io.File)>($r9, $r13);

        $r14 = virtualinvoke $r63.<kotlin.Pair: java.lang.Object component1()>();

        r64 = (java.util.List) $r14;

        $r15 = virtualinvoke $r63.<kotlin.Pair: java.lang.Object component2()>();

        r65 = (java.util.List) $r15;

        $r66 = (java.lang.Iterable) r64;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r67 = (java.util.Collection) $r16;

        r68 = interfaceinvoke $r66.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        r69 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        r70 = (androidx.navigation.safeargs.gradle.Mapping) r69;

        $r50 = virtualinvoke r70.<androidx.navigation.safeargs.gradle.Mapping: java.util.List getJavaFiles()>();

        r71 = (java.lang.Iterable) $r50;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r67, r71);

        goto label06;

     label07:
        $r17 = (java.util.List) r67;

        $r18 = (java.lang.Iterable) $r17;

        r72 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r18);

        $r19 = (java.lang.Iterable) r2;

        $r73 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)>(r3, $r19);

        $r74 = (java.lang.Iterable) $r62;

        z21 = 0;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r76 = $r21;

        r77 = interfaceinvoke $r74.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z22 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label10;

        r78 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        $r79 = (androidx.navigation.safeargs.gradle.Mapping) r78;

        $r45 = new java.io.File;

        $r46 = r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.ProjectLayout projectLayout>;

        $r47 = interfaceinvoke $r46.<org.gradle.api.file.ProjectLayout: org.gradle.api.file.Directory getProjectDirectory()>();

        $r48 = interfaceinvoke $r47.<org.gradle.api.file.Directory: java.io.File getAsFile()>();

        $r49 = virtualinvoke $r79.<androidx.navigation.safeargs.gradle.Mapping: java.lang.String getNavFile()>();

        specialinvoke $r45.<java.io.File: void <init>(java.io.File,java.lang.String)>($r48, $r49);

        $z10 = interfaceinvoke $r73.<java.util.Set: boolean contains(java.lang.Object)>($r45);

        if $z10 == 0 goto label09;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r78);

        goto label08;

     label09:
        virtualinvoke r76.<java.util.ArrayList: boolean add(java.lang.Object)>(r78);

        goto label08;

     label10:
        $r22 = new kotlin.Pair;

        specialinvoke $r22.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r20, r76);

        $r23 = virtualinvoke $r22.<kotlin.Pair: java.lang.Object component1()>();

        $r81 = (java.util.List) $r23;

        $r24 = virtualinvoke $r22.<kotlin.Pair: java.lang.Object component2()>();

        r82 = (java.util.List) $r24;

        z24 = 0;

        r83 = (java.lang.Iterable) $r81;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r84 = (java.util.Collection) $r25;

        $r85 = interfaceinvoke r83.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r85.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        r86 = interfaceinvoke $r85.<java.util.Iterator: java.lang.Object next()>();

        r87 = (androidx.navigation.safeargs.gradle.Mapping) r86;

        $r44 = virtualinvoke r87.<androidx.navigation.safeargs.gradle.Mapping: java.util.List getJavaFiles()>();

        r88 = (java.lang.Iterable) $r44;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r84, r88);

        goto label11;

     label12:
        $r26 = (java.util.List) r84;

        z27 = 0;

        r89 = (java.lang.Iterable) $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r90 = (java.util.Collection) $r27;

        $r91 = interfaceinvoke r89.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z29 = interfaceinvoke $r91.<java.util.Iterator: boolean hasNext()>();

        if $z29 == 0 goto label16;

        r92 = interfaceinvoke $r91.<java.util.Iterator: java.lang.Object next()>();

        r93 = (java.lang.String) r92;

        $z7 = interfaceinvoke r72.<java.util.Set: boolean contains(java.lang.Object)>(r93);

        if $z7 != 0 goto label14;

        $z31 = 1;

        goto label15;

     label14:
        $z31 = 0;

     label15:
        if $z31 == 0 goto label13;

        interfaceinvoke r90.<java.util.Collection: boolean add(java.lang.Object)>(r92);

        goto label13;

     label16:
        $r28 = (java.util.List) r90;

        $r94 = (java.lang.Iterable) $r28;

        z32 = 0;

        r95 = interfaceinvoke $r94.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z3 = interfaceinvoke r95.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        r96 = interfaceinvoke r95.<java.util.Iterator: java.lang.Object next()>();

        $r97 = (java.lang.String) r96;

        $r32 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.provider.Property getGenerateKotlin()>();

        $r33 = interfaceinvoke $r32.<org.gradle.api.provider.Property: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "generateKotlin.get()");

        $r34 = (java.lang.Boolean) $r33;

        $z4 = virtualinvoke $r34.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label18;

        $r98 = ".kt";

        goto label19;

     label18:
        $r98 = ".java";

     label19:
        r99 = $r98;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $c0 = <java.io.File: char separatorChar>;

        $r36 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)>($r97, 46, $c0, 0, 4, null);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r99);

        r100 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = new java.io.File;

        $r40 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: org.gradle.api.file.DirectoryProperty getOutputDir()>();

        $r41 = interfaceinvoke $r40.<org.gradle.api.file.DirectoryProperty: org.gradle.api.provider.Provider getAsFile()>();

        $r42 = interfaceinvoke $r41.<org.gradle.api.provider.Provider: java.lang.Object get()>();

        $r43 = (java.io.File) $r42;

        specialinvoke $r39.<java.io.File: void <init>(java.io.File,java.lang.String)>($r43, r100);

        $z5 = virtualinvoke $r39.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label20;

        virtualinvoke $r39.<java.io.File: boolean delete()>();

     label20:
        goto label17;

     label21:
        $r30 = (java.util.Collection) r82;

        $r29 = (java.lang.Iterable) r64;

        $r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r30, $r29);

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void writeMappings(java.util.List)>($r31);

        specialinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask: void failIfErrors(java.util.List)>(r65);

        return;
    }

    private final void failIfErrors(java.util.List)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask r0;
        java.util.List r1;
        java.lang.String r2, $r12;
        java.util.Collection $r3;
        boolean $z0, $z1;
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.CharSequence $r6;
        java.lang.Iterable $r7;
        org.gradle.api.GradleException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask;

        r1 := @parameter0: java.util.List;

        $r3 = (java.util.Collection) r1;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r7 = (java.lang.Iterable) r1;

        $r6 = (java.lang.CharSequence) "\n";

        $r4 = <androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, $r6, null, null, 0, null, $r5, 30, null);

        $r8 = new org.gradle.api.GradleException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("androidx.navigation.safeargs plugin failed.\n Following errors found: \n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.gradle.api.GradleException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label3:
        return;
    }

androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1
<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 INSTANCE>
    void <init>()
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 r0;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.CharSequence invoke(androidx.navigation.safe.args.generator.ErrorMessage)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 r0;
        androidx.navigation.safe.args.generator.ErrorMessage r1;
        java.lang.String $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1;

        r1 := @parameter0: androidx.navigation.safe.args.generator.ErrorMessage;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = staticinvoke <androidx.navigation.safeargs.gradle.ArgumentsGenerationTaskKt: java.lang.String access$toClickableText(androidx.navigation.safe.args.generator.ErrorMessage)>(r1);

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 r0;
        java.lang.Object r1;
        androidx.navigation.safe.args.generator.ErrorMessage $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.navigation.safe.args.generator.ErrorMessage) r1;

        $r3 = virtualinvoke r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1: java.lang.CharSequence invoke(androidx.navigation.safe.args.generator.ErrorMessage)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 $r0;

        $r0 = new androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1;

        specialinvoke $r0.<androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1: void <init>()>();

        <androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$failIfErrors$errString$1 INSTANCE> = $r0;

        return;
    }

androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1
    void <init>()
    {
        androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1 r0;

        r0 := @this: androidx.navigation.safeargs.gradle.ArgumentsGenerationTask$readMappings$type$1;

        specialinvoke r0.<com.google.gson.reflect.TypeToken: void <init>()>();

        return;
    }

