androidx.textclassifier.widget.FloatingToolbar
<androidx.textclassifier.widget.FloatingToolbar: java.lang.Object FLOATING_TOOLBAR_TAG>
<androidx.textclassifier.widget.FloatingToolbar: java.lang.Object MAIN_PANEL_TAG>
<androidx.textclassifier.widget.FloatingToolbar: java.lang.Object OVERFLOW_PANEL_TAG>
<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER>
<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>
<androidx.textclassifier.widget.FloatingToolbar: android.view.View mRootView>
<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>
<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect>
<androidx.textclassifier.widget.FloatingToolbar: androidx.core.internal.view.SupportMenu mMenu>
<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems>
<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener>
<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged>
<androidx.textclassifier.widget.FloatingToolbar: int mSuggestedWidth>
<androidx.textclassifier.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler>
<androidx.textclassifier.widget.FloatingToolbar: java.util.Comparator mMenuItemComparator>
    void <init>(android.view.View)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.view.View r1, $r11, $r14;
        android.content.Context r2, $r10;
        android.graphics.Rect $r3, $r4;
        java.util.ArrayList $r5;
        android.view.MenuItem$OnMenuItemClickListener $r6;
        androidx.textclassifier.widget.FloatingToolbar$2 $r7;
        androidx.textclassifier.widget.FloatingToolbar$3 $r8;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r12;
        androidx.textclassifier.widget.FloatingToolbar$4 $r13;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems> = $r5;

        $r6 = <androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER>;

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = $r6;

        r0.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged> = 1;

        $r7 = new androidx.textclassifier.widget.FloatingToolbar$2;

        specialinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$2: void <init>(androidx.textclassifier.widget.FloatingToolbar)>(r0);

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler> = $r7;

        $r8 = new androidx.textclassifier.widget.FloatingToolbar$3;

        specialinvoke $r8.<androidx.textclassifier.widget.FloatingToolbar$3: void <init>(androidx.textclassifier.widget.FloatingToolbar)>(r0);

        r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.Comparator mMenuItemComparator> = $r8;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r10 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        r2 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.content.Context applyDefaultTheme(android.content.Context)>($r10);

        $r11 = virtualinvoke r1.<android.view.View: android.view.View getRootView()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View mRootView> = $r11;

        $r12 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View mRootView>;

        $r13 = new androidx.textclassifier.widget.FloatingToolbar$4;

        specialinvoke $r13.<androidx.textclassifier.widget.FloatingToolbar$4: void <init>(androidx.textclassifier.widget.FloatingToolbar)>(r0);

        specialinvoke $r12.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void <init>(android.content.Context,android.view.View,java.lang.Runnable)>(r2, $r14, $r13);

        r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup> = $r12;

        return;
    }

    public void setMenu(androidx.core.internal.view.SupportMenu)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.core.internal.view.SupportMenu r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: androidx.core.internal.view.SupportMenu;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.core.internal.view.SupportMenu) $r2;

        r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.core.internal.view.SupportMenu mMenu> = $r3;

        return;
    }

    public androidx.core.internal.view.SupportMenu getMenu()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.core.internal.view.SupportMenu $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.core.internal.view.SupportMenu mMenu>;

        return $r1;
    }

    public void setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.view.MenuItem$OnMenuItemClickListener r1, $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: android.view.MenuItem$OnMenuItemClickListener;

        if r1 == null goto label1;

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = r1;

        goto label2;

     label1:
        $r2 = <androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER>;

        r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener> = $r2;

     label2:
        return;
    }

    public void setContentRect(android.graphics.Rect)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.graphics.Rect r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.graphics.Rect) $r3;

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r4);

        return;
    }

    public void setSuggestedWidth(int)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        int i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2;
        byte $b5;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar: int mSuggestedWidth>;

        $i3 = i0 - $i2;

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $d2 = (double) i1;

        $i4 = r0.<androidx.textclassifier.widget.FloatingToolbar: int mSuggestedWidth>;

        $d0 = (double) $i4;

        $d1 = $d0 * 0.2;

        $b5 = $d2 cmpl $d1;

        if $b5 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged> = $z0;

        r0.<androidx.textclassifier.widget.FloatingToolbar: int mSuggestedWidth> = i0;

        return;
    }

    public void show()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: void registerOrientationHandler()>();

        specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: void doShow()>();

        return;
    }

    public void updateLayout()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: void doShow()>();

     label1:
        return;
    }

    public void dismiss()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: void unregisterOrientationHandler()>();

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void dismiss()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged> = 1;

        return;
    }

    public void hide()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void hide()>();

        return;
    }

    public boolean isShowing()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        return $z0;
    }

    public boolean isHidden()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isHidden()>();

        return $z0;
    }

    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.widget.PopupWindow$OnDismissListener r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: android.widget.PopupWindow$OnDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>(r1);

        return;
    }

    public void setDismissOnMenuItemClick(boolean)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        boolean z0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setDismissOnMenuItemClick(boolean)>(z0);

        return;
    }

    private void doShow()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        java.util.List r1;
        androidx.core.internal.view.SupportMenu $r2;
        java.util.Comparator $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r4, $r6, $r7, $r11, $r13, $r14;
        int $i0;
        android.view.MenuItem$OnMenuItemClickListener $r5;
        android.graphics.Rect $r8, $r9, $r10, $r12, $r15, $r16;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.core.internal.view.SupportMenu mMenu>;

        r1 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List getVisibleAndEnabledMenuItems(androidx.core.internal.view.SupportMenu)>($r2);

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.Comparator mMenuItemComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r1, $r3);

        $z0 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: boolean isCurrentlyShowing(java.util.List)>(r1);

        if $z0 == 0 goto label1;

        $z3 = r0.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged>;

        if $z3 == 0 goto label2;

     label1:
        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void hide()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener>;

        $i0 = r0.<androidx.textclassifier.widget.FloatingToolbar: int mSuggestedWidth>;

        virtualinvoke $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void layoutMenuItems(java.util.List,android.view.MenuItem$OnMenuItemClickListener,int)>(r1, $r5, $i0);

        r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems> = r1;

     label2:
        $z4 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label3;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        virtualinvoke $r14.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void dismiss()>();

        goto label5;

     label3:
        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z1 = virtualinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z1 != 0 goto label4;

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r13.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void show(android.graphics.Rect)>($r12);

        goto label5;

     label4:
        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect>;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        $z2 = virtualinvoke $r9.<android.graphics.Rect: boolean equals(java.lang.Object)>($r8);

        if $z2 != 0 goto label5;

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r11.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateCoordinates(android.graphics.Rect)>($r10);

     label5:
        r0.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged> = 0;

        $r15 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mPreviousContentRect>;

        $r16 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.graphics.Rect mContentRect>;

        virtualinvoke $r15.<android.graphics.Rect: void set(android.graphics.Rect)>($r16);

        return;
    }

    private boolean isCurrentlyShowing(java.util.List)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        java.util.List r1, $r4, $r5, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        androidx.core.internal.view.SupportMenuItem r2, r3;
        java.lang.Object $r6, $r8;
        java.lang.CharSequence $r9, $r10;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r11, $r12;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        if $r4 == null goto label1;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 == $i2 goto label2;

     label1:
        return 0;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i7 = 0;

     label3:
        if i7 >= i0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r2 = (androidx.core.internal.view.SupportMenuItem) $r6;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List mShowingMenuItems>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        r3 = (androidx.core.internal.view.SupportMenuItem) $r8;

        $i3 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i4 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        if $i3 != $i4 goto label4;

        $r9 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        $r10 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r9, $r10);

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: android.graphics.drawable.Drawable getIcon()>();

        $r12 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: android.graphics.drawable.Drawable getIcon()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z1 == 0 goto label4;

        $i5 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: int getGroupId()>();

        $i6 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: int getGroupId()>();

        if $i5 == $i6 goto label5;

     label4:
        return 0;

     label5:
        i7 = i7 + 1;

        goto label3;

     label6:
        return 1;
    }

    private java.util.List getVisibleAndEnabledMenuItems(androidx.core.internal.view.SupportMenu)
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.core.internal.view.SupportMenu r1, r4;
        java.util.ArrayList r2, $r5;
        androidx.core.internal.view.SupportMenuItem r3;
        int $i0, i1;
        android.view.MenuItem $r6;
        boolean $z0, $z1;
        android.view.SubMenu $r7;
        java.util.List $r8;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        r1 := @parameter0: androidx.core.internal.view.SupportMenu;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        i1 = 0;

     label1:
        if r1 == null goto label4;

        $i0 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenu: int size()>();

        if i1 >= $i0 goto label4;

        $r6 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenu: android.view.MenuItem getItem(int)>(i1);

        r3 = (androidx.core.internal.view.SupportMenuItem) $r6;

        $z0 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: boolean isVisible()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: boolean isEnabled()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenuItem: android.view.SubMenu getSubMenu()>();

        r4 = (androidx.core.internal.view.SupportMenu) $r7;

        if r4 == null goto label2;

        $r8 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: java.util.List getVisibleAndEnabledMenuItems(androidx.core.internal.view.SupportMenu)>(r4);

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label3;

     label2:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r2;
    }

    private void registerOrientationHandler()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.view.View$OnLayoutChangeListener $r1;
        android.view.View $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar: void unregisterOrientationHandler()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View mRootView>;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler>;

        virtualinvoke $r2.<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r1);

        return;
    }

    private void unregisterOrientationHandler()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        android.view.View$OnLayoutChangeListener $r1;
        android.view.View $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View mRootView>;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: android.view.View$OnLayoutChangeListener mOrientationChangeHandler>;

        virtualinvoke $r2.<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r1);

        return;
    }

    android.graphics.Rect getToolbarContainerBoundsForTesting()
    {
        androidx.textclassifier.widget.FloatingToolbar r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1;
        android.graphics.Rect $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r2 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect getContainerBounds()>();

        return $r2;
    }

    static android.view.View createMenuItemButton(android.content.Context, androidx.core.internal.view.SupportMenuItem, int, boolean)
    {
        android.content.Context r0;
        androidx.core.internal.view.SupportMenuItem r1;
        int i0, $i1;
        boolean z0;
        android.view.View r2;
        android.view.LayoutInflater $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: androidx.core.internal.view.SupportMenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r0);

        $i1 = <androidx.textclassifier.R$layout: int floating_popup_menu_button>;

        r2 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i1, null);

        if r1 == null goto label1;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar: void updateMenuItemButton(android.view.View,androidx.core.internal.view.SupportMenuItem,int,boolean)>(r2, r1, i0, z0);

     label1:
        return r2;
    }

    static void updateMenuItemButton(android.view.View, androidx.core.internal.view.SupportMenuItem, int, boolean)
    {
        android.view.View r0, $r5, $r8;
        androidx.core.internal.view.SupportMenuItem r1;
        int i0, $i1, $i2;
        boolean z0, $z1, $z2;
        android.widget.TextView r2;
        android.widget.ImageView r3;
        java.lang.CharSequence r4, $r6, $r7, $r10;
        android.graphics.drawable.Drawable $r9, $r11;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.core.internal.view.SupportMenuItem;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i1 = <androidx.textclassifier.R$id: int floating_toolbar_menu_item_text>;

        $r5 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>($i1);

        r2 = (android.widget.TextView) $r5;

        virtualinvoke r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(null);

        $r6 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z1 == 0 goto label1;

        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(8);

        goto label2;

     label1:
        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(0);

        $r7 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        virtualinvoke r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

     label2:
        $i2 = <androidx.textclassifier.R$id: int floating_toolbar_menu_item_image>;

        $r8 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>($i2);

        r3 = (android.widget.ImageView) $r8;

        $r9 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: android.graphics.drawable.Drawable getIcon()>();

        if $r9 == null goto label3;

        if z0 != 0 goto label4;

     label3:
        virtualinvoke r3.<android.widget.ImageView: void setVisibility(int)>(8);

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.TextView: void setPaddingRelative(int,int,int,int)>(0, 0, 0, 0);

        goto label5;

     label4:
        virtualinvoke r3.<android.widget.ImageView: void setVisibility(int)>(0);

        $r11 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: android.graphics.drawable.Drawable getIcon()>();

        virtualinvoke r3.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r11);

        if r2 == null goto label5;

        virtualinvoke r2.<android.widget.TextView: void setPaddingRelative(int,int,int,int)>(i0, 0, 0, 0);

     label5:
        r4 = staticinvoke <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>(r1);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 == 0 goto label6;

        $r10 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        virtualinvoke r0.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r10);

        goto label7;

     label6:
        virtualinvoke r0.<android.view.View: void setContentDescription(java.lang.CharSequence)>(r4);

     label7:
        return;
    }

    static android.view.ViewGroup createContentContainer(android.content.Context)
    {
        android.content.Context r0;
        android.view.ViewGroup r1;
        android.view.LayoutInflater $r2;
        int $i0;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        java.lang.Object $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r0);

        $i0 = <androidx.textclassifier.R$layout: int floating_popup_container>;

        $r3 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, null);

        r1 = (android.view.ViewGroup) $r3;

        $r4 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r4.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r1.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

        $r5 = <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object FLOATING_TOOLBAR_TAG>;

        virtualinvoke r1.<android.view.ViewGroup: void setTag(java.lang.Object)>($r5);

        virtualinvoke r1.<android.view.ViewGroup: void setClipToOutline(boolean)>(1);

        return r1;
    }

    static android.widget.PopupWindow createPopupWindow(android.view.ViewGroup, android.view.View$OnClickListener)
    {
        android.view.ViewGroup r0, r13, r14, r16;
        android.view.View$OnClickListener r1;
        android.widget.LinearLayout r2, r9;
        android.widget.PopupWindow r3, r10;
        byte b0;
        android.content.Context $r5;
        android.graphics.drawable.ColorDrawable r11;
        android.view.ViewGroup$LayoutParams r12;
        android.view.View r15;

        r0 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.view.View$OnClickListener;

        r9 = new android.widget.LinearLayout;

        $r5 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke r9.<android.widget.LinearLayout: void <init>(android.content.Context)>($r5);

        r2 = r9;

        r13 = (android.view.ViewGroup) r2;

        virtualinvoke r13.<android.view.ViewGroup: void setOnClickListener(android.view.View$OnClickListener)>(r1);

        r14 = (android.view.ViewGroup) r2;

        virtualinvoke r14.<android.view.ViewGroup: void setSoundEffectsEnabled(boolean)>(0);

        r10 = new android.widget.PopupWindow;

        r15 = (android.view.View) r2;

        specialinvoke r10.<android.widget.PopupWindow: void <init>(android.view.View)>(r15);

        r3 = r10;

        virtualinvoke r3.<android.widget.PopupWindow: void setClippingEnabled(boolean)>(0);

        virtualinvoke r3.<android.widget.PopupWindow: void setOutsideTouchable(boolean)>(1);

        virtualinvoke r3.<android.widget.PopupWindow: void setWindowLayoutType(int)>(1002);

        virtualinvoke r3.<android.widget.PopupWindow: void setAnimationStyle(int)>(0);

        b0 = 0;

        r11 = new android.graphics.drawable.ColorDrawable;

        specialinvoke r11.<android.graphics.drawable.ColorDrawable: void <init>(int)>(b0);

        virtualinvoke r3.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r11);

        r12 = new android.view.ViewGroup$LayoutParams;

        specialinvoke r12.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r0.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r12);

        r16 = (android.view.ViewGroup) r2;

        virtualinvoke r16.<android.view.ViewGroup: void addView(android.view.View)>(r0);

        return r3;
    }

    static android.animation.AnimatorSet createEnterAnimation(android.view.View)
    {
        android.view.View r0;
        android.animation.AnimatorSet r1, r8;
        java.lang.Object[] $r3;
        float[] $r4;
        android.util.Property $r5;
        android.animation.ObjectAnimator $r6, $r7;
        android.animation.Animator[] r9;

        r0 := @parameter0: android.view.View;

        r8 = new android.animation.AnimatorSet;

        specialinvoke r8.<android.animation.AnimatorSet: void <init>()>();

        r1 = r8;

        $r3 = newarray (android.animation.Animator)[1];

        $r5 = <android.view.View: android.util.Property ALPHA>;

        $r4 = newarray (float)[2];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        $r6 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r5, $r4);

        $r7 = virtualinvoke $r6.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(150L);

        $r3[0] = $r7;

        r9 = (android.animation.Animator[]) $r3;

        virtualinvoke r1.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r9);

        return r1;
    }

    static android.animation.AnimatorSet createExitAnimation(android.view.View, int, android.animation.Animator$AnimatorListener)
    {
        android.view.View r0;
        int i0;
        android.animation.Animator$AnimatorListener r1;
        android.animation.AnimatorSet r2, r9;
        java.lang.Object[] $r4;
        float[] $r5;
        android.util.Property $r6;
        android.animation.ObjectAnimator $r7, $r8;
        long $l1;
        android.animation.Animator[] r10;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.animation.Animator$AnimatorListener;

        r9 = new android.animation.AnimatorSet;

        specialinvoke r9.<android.animation.AnimatorSet: void <init>()>();

        r2 = r9;

        $r4 = newarray (android.animation.Animator)[1];

        $r6 = <android.view.View: android.util.Property ALPHA>;

        $r5 = newarray (float)[2];

        $r5[0] = 1.0F;

        $r5[1] = 0.0F;

        $r7 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r0, $r6, $r5);

        $r8 = virtualinvoke $r7.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(100L);

        $r4[0] = $r8;

        r10 = (android.animation.Animator[]) $r4;

        virtualinvoke r2.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>(r10);

        $l1 = (long) i0;

        virtualinvoke r2.<android.animation.AnimatorSet: void setStartDelay(long)>($l1);

        virtualinvoke r2.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>(r1);

        return r2;
    }

    static boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)
    {
        androidx.core.internal.view.SupportMenuItem r0;
        androidx.appcompat.view.menu.MenuItemImpl r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        $z0 = r0 instanceof androidx.appcompat.view.menu.MenuItemImpl;

        if $z0 == 0 goto label3;

        r1 = (androidx.appcompat.view.menu.MenuItemImpl) r0;

        $z1 = virtualinvoke r1.<androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    static boolean requiresActionButton(androidx.core.internal.view.SupportMenuItem)
    {
        androidx.core.internal.view.SupportMenuItem r0;
        boolean $z0, $z1, $z2;
        androidx.appcompat.view.menu.MenuItemImpl $r1;

        r0 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        $z0 = r0 instanceof androidx.appcompat.view.menu.MenuItemImpl;

        if $z0 == 0 goto label1;

        $r1 = (androidx.appcompat.view.menu.MenuItemImpl) r0;

        $z1 = virtualinvoke $r1.<androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static android.content.Context applyDefaultTheme(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.TypedArray r1;
        boolean z0;
        int i0, $i1, $i2;
        int[] $r2;
        android.view.ContextThemeWrapper $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = newarray (int)[1];

        $i1 = <androidx.appcompat.R$attr: int isLightTheme>;

        $r2[0] = $i1;

        r1 = virtualinvoke r0.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        z0 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 1);

        if z0 == 0 goto label1;

        $i2 = <androidx.textclassifier.R$style: int Theme_TextClassifier_FloatingToolbar_Light>;

        goto label2;

     label1:
        $i2 = <androidx.textclassifier.R$style: int Theme_TextClassifier_FloatingToolbar>;

     label2:
        i0 = $i2;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        $r3 = new android.view.ContextThemeWrapper;

        specialinvoke $r3.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r0, i0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.textclassifier.widget.FloatingToolbar$1 $r0;

        <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object FLOATING_TOOLBAR_TAG> = "floating_toolbar";

        <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object MAIN_PANEL_TAG> = "main_panel";

        <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object OVERFLOW_PANEL_TAG> = "main_overflow";

        $r0 = new androidx.textclassifier.widget.FloatingToolbar$1;

        specialinvoke $r0.<androidx.textclassifier.widget.FloatingToolbar$1: void <init>()>();

        <androidx.textclassifier.widget.FloatingToolbar: android.view.MenuItem$OnMenuItemClickListener NO_OP_MENUITEM_CLICK_LISTENER> = $r0;

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$1
    void <init>()
    {
        androidx.textclassifier.widget.FloatingToolbar$1 r0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$1 r0;
        android.view.MenuItem r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$1;

        r1 := @parameter0: android.view.MenuItem;

        return 0;
    }

androidx.textclassifier.widget.FloatingToolbar$2
<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mNewRect>
<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mOldRect>
<androidx.textclassifier.widget.FloatingToolbar$2: androidx.textclassifier.widget.FloatingToolbar this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar)
    {
        androidx.textclassifier.widget.FloatingToolbar$2 r0;
        androidx.textclassifier.widget.FloatingToolbar r1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$2;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar;

        r0.<androidx.textclassifier.widget.FloatingToolbar$2: androidx.textclassifier.widget.FloatingToolbar this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mNewRect> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mOldRect> = $r3;

        return;
    }

    public void onLayoutChange(android.view.View, int, int, int, int, int, int, int, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$2 r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9;
        android.graphics.Rect $r2, $r3, $r6, $r7;
        androidx.textclassifier.widget.FloatingToolbar $r4, $r8, $r9;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r5;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$2;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mNewRect>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mOldRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(i4, i5, i6, i7);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: androidx.textclassifier.widget.FloatingToolbar this$0>;

        $r5 = $r4.<androidx.textclassifier.widget.FloatingToolbar: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mNewRect>;

        $i8 = virtualinvoke $r6.<android.graphics.Rect: int width()>();

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: android.graphics.Rect mOldRect>;

        $i9 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        if $i8 == $i9 goto label1;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: androidx.textclassifier.widget.FloatingToolbar this$0>;

        $r8.<androidx.textclassifier.widget.FloatingToolbar: boolean mWidthChanged> = 1;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$2: androidx.textclassifier.widget.FloatingToolbar this$0>;

        virtualinvoke $r9.<androidx.textclassifier.widget.FloatingToolbar: void updateLayout()>();

     label1:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$3
<androidx.textclassifier.widget.FloatingToolbar$3: androidx.textclassifier.widget.FloatingToolbar this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar)
    {
        androidx.textclassifier.widget.FloatingToolbar$3 r0;
        androidx.textclassifier.widget.FloatingToolbar r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$3;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar;

        r0.<androidx.textclassifier.widget.FloatingToolbar$3: androidx.textclassifier.widget.FloatingToolbar this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.core.internal.view.SupportMenuItem, androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$3 r0;
        androidx.core.internal.view.SupportMenuItem r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$3;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        r2 := @parameter1: androidx.core.internal.view.SupportMenuItem;

        $i0 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i1 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i0 != $i1 goto label03;

        $i5 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i6 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i5 != $i6 goto label01;

        $b7 = 0;

        goto label02;

     label01:
        $b7 = -1;

     label02:
        return $b7;

     label03:
        $i2 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i3 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i2 != $i3 goto label04;

        return 1;

     label04:
        $z0 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresActionButton(androidx.core.internal.view.SupportMenuItem)>(r1);

        if $z0 == 0 goto label07;

        $z5 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresActionButton(androidx.core.internal.view.SupportMenuItem)>(r2);

        if $z5 == 0 goto label05;

        $i8 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$3: int compareOrder(androidx.core.internal.view.SupportMenuItem,androidx.core.internal.view.SupportMenuItem)>(r1, r2);

        goto label06;

     label05:
        $i8 = -1;

     label06:
        return $i8;

     label07:
        $z1 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresActionButton(androidx.core.internal.view.SupportMenuItem)>(r2);

        if $z1 == 0 goto label08;

        return 1;

     label08:
        $z2 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)>(r1);

        if $z2 == 0 goto label11;

        $z4 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)>(r2);

        if $z4 == 0 goto label09;

        $i9 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$3: int compareOrder(androidx.core.internal.view.SupportMenuItem,androidx.core.internal.view.SupportMenuItem)>(r1, r2);

        goto label10;

     label09:
        $i9 = 1;

     label10:
        return $i9;

     label11:
        $z3 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)>(r2);

        if $z3 == 0 goto label12;

        return -1;

     label12:
        $i4 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$3: int compareOrder(androidx.core.internal.view.SupportMenuItem,androidx.core.internal.view.SupportMenuItem)>(r1, r2);

        return $i4;
    }

    private int compareOrder(androidx.core.internal.view.SupportMenuItem, androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$3 r0;
        androidx.core.internal.view.SupportMenuItem r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$3;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        r2 := @parameter1: androidx.core.internal.view.SupportMenuItem;

        $i0 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: int getOrder()>();

        $i1 = interfaceinvoke r2.<androidx.core.internal.view.SupportMenuItem: int getOrder()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.textclassifier.widget.FloatingToolbar$3 r0;
        java.lang.Object r1, r2;
        androidx.core.internal.view.SupportMenuItem $r3, $r4;
        int $i0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.core.internal.view.SupportMenuItem) r1;

        $r3 = (androidx.core.internal.view.SupportMenuItem) r2;

        $i0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$3: int compare(androidx.core.internal.view.SupportMenuItem,androidx.core.internal.view.SupportMenuItem)>($r4, $r3);

        return $i0;
    }

androidx.textclassifier.widget.FloatingToolbar$4
<androidx.textclassifier.widget.FloatingToolbar$4: androidx.textclassifier.widget.FloatingToolbar this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar)
    {
        androidx.textclassifier.widget.FloatingToolbar$4 r0;
        androidx.textclassifier.widget.FloatingToolbar r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$4;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar;

        r0.<androidx.textclassifier.widget.FloatingToolbar$4: androidx.textclassifier.widget.FloatingToolbar this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.textclassifier.widget.FloatingToolbar$4 r0;
        androidx.textclassifier.widget.FloatingToolbar $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$4;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$4: androidx.textclassifier.widget.FloatingToolbar this$0>;

        virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar: void dismiss()>();

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1, $r2;
        android.view.ViewGroup $r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setPanelsStatesAtRestingPosition()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r3.<android.view.ViewGroup: void setAlpha(float)>(1.0F);

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$targetHeight>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$startHeight>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: float val$bottom>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, int, int, float)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        int i0, i1;
        float f0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$targetHeight> = i0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$startHeight> = i1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: float val$bottom> = f0;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10 r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.view.animation.Transformation r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4, $r5, $r6, $r9;
        android.view.ViewGroup $r3, $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$targetHeight>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$startHeight>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: int val$startHeight>;

        $i5 = $i4 + i0;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setHeight(android.view.View,int)>($r3, $i5);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r8 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: float val$bottom>;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $f4 = (float) $i6;

        $f5 = $f3 - $f4;

        virtualinvoke $r8.<android.view.ViewGroup: void setY(float)>($f5);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void positionContentYCoordinatesIfOpeningOverflowUpwards()>();

     label1:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonStartX>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonTargetX>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: int val$startWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, float, float, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        float f0, f1;
        int i0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonStartX> = f0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonTargetX> = f1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: int val$startWidth> = i0;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11 r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.view.animation.Transformation r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r3, $r5;
        boolean $z0;
        android.view.ViewGroup $r4;
        int $i0, $i1, $i2;
        android.widget.ImageButton $r6;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $f8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonStartX>;

        $f5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonTargetX>;

        $f4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: float val$overflowButtonStartX>;

        $f6 = $f5 - $f4;

        $f7 = f0 * $f6;

        f1 = $f8 + $f7;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f9 = 0.0F;

        goto label2;

     label1:
        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int getWidth()>();

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: int val$startWidth>;

        $i2 = $i0 - $i1;

        $f9 = (float) $i2;

     label2:
        f2 = $f9;

        f3 = f1 + f2;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r6 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setX(float)>(f3);

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, android.content.Context)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        android.content.Context r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter1: android.content.Context;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>(r2);

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12 r0;
        int i0, $i1, i2;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1, $r2, $r4;
        boolean $z0;
        android.util.Size $r3, $r5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isOverflowAnimating()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r5 = $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i1 = virtualinvoke $r5.<android.util.Size: int getWidth()>();

        i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

     label1:
        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i2, i0);

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12 r0;
        android.view.MotionEvent r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isOverflowAnimating()>();

        return $z0;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: android.widget.ImageButton val$overflowButton>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, android.widget.ImageButton)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        android.widget.ImageButton r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter1: android.widget.ImageButton;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: android.widget.ImageButton val$overflowButton> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13 r0;
        android.view.View r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r3, $r6, $r8, $r9, $r12, $r14;
        boolean $z0;
        android.graphics.drawable.AnimatedVectorDrawable $r4, $r7, $r10, $r13;
        android.widget.ImageButton $r5, $r11;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z0 == 0 goto label1;

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: android.widget.ImageButton val$overflowButton>;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r10 = $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r11.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r10);

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r13 = $r12.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r13.<android.graphics.drawable.AnimatedVectorDrawable: void start()>();

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r14.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void closeOverflow()>();

        goto label2;

     label1:
        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: android.widget.ImageButton val$overflowButton>;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r5.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r7.<android.graphics.drawable.AnimatedVectorDrawable: void start()>();

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r8.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void openOverflow()>();

     label2:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, android.content.Context, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        android.content.Context r2;
        int i0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>(r2, i0);

        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14 r0;
        int i0, $i1;
        android.view.View r1, $r9;
        android.view.ViewGroup r2;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r3, $r6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper $r4;
        java.lang.Object $r5;
        android.util.Size $r7;
        androidx.core.internal.view.SupportMenuItem $r8;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.ViewGroup;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper>;

        $r5 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: java.lang.Object getItem(int)>(i0);

        $r8 = (androidx.core.internal.view.SupportMenuItem) $r5;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i1 = virtualinvoke $r7.<android.util.Size: int getWidth()>();

        $r9 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View getView(androidx.core.internal.view.SupportMenuItem,int,android.view.View)>($r8, $i1, r1);

        return $r9;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel val$overflowPanel>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel val$overflowPanel> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        long l1;
        androidx.core.internal.view.SupportMenuItem r3;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r4;
        android.widget.ListAdapter $r5;
        java.lang.Object $r6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r7, $r9, $r11, $r12;
        android.view.MenuItem$OnMenuItemClickListener $r8, $r10;
        boolean $z1;
        java.lang.Runnable $r13;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel val$overflowPanel>;

        $r5 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        $r6 = interfaceinvoke $r5.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i0);

        r3 = (androidx.core.internal.view.SupportMenuItem) $r6;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r8 = $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        if $r8 == null goto label1;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r10 = $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        interfaceinvoke $r10.<android.view.MenuItem$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>(r3);

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z1 = $r11.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissOnMenuItemClick>;

        if $z1 == 0 goto label1;

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r13 = $r12.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mDismissRunnable>;

        interfaceinvoke $r13.<java.lang.Runnable: void run()>();

     label1:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 this$1>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 $r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 this$1>;

        $r2 = $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setPanelsStatesAtRestingPosition()>();

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationStart(android.view.animation.Animation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r0;
        android.view.animation.Animation r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4, $r6;
        android.widget.ImageButton $r3;
        android.view.ViewGroup $r5;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r3.<android.widget.ImageButton: void setEnabled(boolean)>(0);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r5 = $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r5.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setVisibility(int)>(0);

        return;
    }

    public void onAnimationEnd(android.view.animation.Animation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r0;
        android.view.animation.Animation r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1 $r3;
        android.view.ViewGroup $r4;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r3 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1;

        specialinvoke $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16$1: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16)>(r0);

        virtualinvoke $r4.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void onAnimationRepeat(android.view.animation.Animation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r0;
        android.view.animation.Animation r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        r1 := @parameter0: android.view.animation.Animation;

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2 r0;
        android.view.View r1;
        java.lang.Object $r2, $r7;
        boolean $z0, $z2;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r3, $r5, $r9, $r10;
        android.view.MenuItem$OnMenuItemClickListener $r4, $r6;
        androidx.core.internal.view.SupportMenuItem $r8;
        java.lang.Runnable $r11;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();

        $z0 = $r2 instanceof androidx.core.internal.view.SupportMenuItem;

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r6 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>;

        $r7 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();

        $r8 = (androidx.core.internal.view.SupportMenuItem) $r7;

        interfaceinvoke $r6.<android.view.MenuItem$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>($r8);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z2 = $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissOnMenuItemClick>;

        if $z2 == 0 goto label1;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r11 = $r10.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mDismissRunnable>;

        interfaceinvoke $r11.<java.lang.Runnable: void run()>();

     label1:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3 r0;
        android.view.View r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void hide()>();

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mDismissRunnable>;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4 r0;
        android.animation.Animator r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4;
        android.widget.PopupWindow $r3;
        android.view.ViewGroup $r5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        virtualinvoke $r3.<android.widget.PopupWindow: void dismiss()>();

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r5 = $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r5.<android.view.ViewGroup: void removeAllViews()>();

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5 r0;
        android.animation.Animator r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;
        android.widget.PopupWindow $r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5;

        r1 := @parameter0: android.animation.Animator;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        virtualinvoke $r3.<android.widget.PopupWindow: void dismiss()>();

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$targetWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$startWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$left>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$right>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, int, int, float, float)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        int i0, i1;
        float f0, f1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$targetWidth> = i0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$startWidth> = i1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$left> = f0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$right> = f1;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6 r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.view.animation.Transformation r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4, $r5, $r6, $r9, $r10, $r13, $r14, $r17, $r19, $r21;
        android.view.ViewGroup $r3, $r7, $r8, $r11, $r12, $r15, $r18, $r20;
        boolean $z0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r16, $r22;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$targetWidth>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$startWidth>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$startWidth>;

        $i5 = $i4 + i0;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setWidth(android.view.View,int)>($r3, $i5);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r18 = $r17.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$left>;

        virtualinvoke $r18.<android.view.ViewGroup: void setX(float)>($f8);

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r20 = $r19.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r20.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r21 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r22 = $r21.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r22.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label2;

     label1:
        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r8 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: float val$right>;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getWidth()>();

        $f4 = (float) $i6;

        $f5 = $f3 - $f4;

        virtualinvoke $r8.<android.view.ViewGroup: void setX(float)>($f5);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r12 = $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r11 = $r10.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i7 = virtualinvoke $r11.<android.view.ViewGroup: int getWidth()>();

        $i8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$startWidth>;

        $i9 = $i7 - $i8;

        $f6 = (float) $i9;

        virtualinvoke $r12.<android.view.ViewGroup: void setX(float)>($f6);

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r16 = $r13.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r15 = $r14.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i10 = virtualinvoke $r15.<android.view.ViewGroup: int getWidth()>();

        $i11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: int val$targetWidth>;

        $i12 = $i10 - $i11;

        $f7 = (float) $i12;

        virtualinvoke $r16.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>($f7);

     label2:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$targetHeight>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$startHeight>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: float val$startY>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, int, int, float)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        int i0, i1;
        float f0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$targetHeight> = i0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$startHeight> = i1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: float val$startY> = f0;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7 r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.view.animation.Transformation r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4, $r5, $r6, $r9;
        android.view.ViewGroup $r3, $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$targetHeight>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$startHeight>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$startHeight>;

        $i5 = $i4 + i0;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setHeight(android.view.View,int)>($r3, $i5);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r8 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: float val$startY>;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $i7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: int val$startHeight>;

        $i8 = $i6 - $i7;

        $f4 = (float) $i8;

        $f5 = $f3 - $f4;

        virtualinvoke $r8.<android.view.ViewGroup: void setY(float)>($f5);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        virtualinvoke $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void positionContentYCoordinatesIfOpeningOverflowUpwards()>();

     label1:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonStartX>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonTargetX>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: int val$startWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, float, float, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        float f0, f1;
        int i0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonStartX> = f0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonTargetX> = f1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: int val$startWidth> = i0;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8 r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.view.animation.Transformation r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r3, $r5;
        boolean $z0;
        android.view.ViewGroup $r4;
        int $i0, $i1, $i2;
        android.widget.ImageButton $r6;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $f8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonStartX>;

        $f5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonTargetX>;

        $f4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: float val$overflowButtonStartX>;

        $f6 = $f5 - $f4;

        $f7 = f0 * $f6;

        f1 = $f8 + $f7;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f9 = 0.0F;

        goto label2;

     label1:
        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int getWidth()>();

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: int val$startWidth>;

        $i2 = $i0 - $i1;

        $f9 = (float) $i2;

     label2:
        f2 = $f9;

        f3 = f1 + f2;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r6 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r6.<android.widget.ImageButton: void setX(float)>(f3);

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$targetWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$startWidth>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$left>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$right>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup, int, int, float, float)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9 r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1;
        int i0, i1;
        float f0, f1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0> = r1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$targetWidth> = i0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$startWidth> = i1;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$left> = f0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$right> = f1;

        specialinvoke r0.<android.view.animation.Animation: void <init>()>();

        return;
    }

    protected void applyTransformation(float, android.view.animation.Transformation)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9 r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.view.animation.Transformation r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2, $r4, $r5, $r6, $r9, $r10, $r13, $r14, $r17, $r19, $r21;
        android.view.ViewGroup $r3, $r7, $r8, $r11, $r12, $r15, $r18, $r20;
        boolean $z0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r16, $r22;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.animation.Transformation;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$targetWidth>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$startWidth>;

        $i3 = $i2 - $i1;

        $f1 = (float) $i3;

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r3 = $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$startWidth>;

        $i5 = $i4 + i0;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setWidth(android.view.View,int)>($r3, $i5);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $z0 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r18 = $r17.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$left>;

        virtualinvoke $r18.<android.view.ViewGroup: void setX(float)>($f8);

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r20 = $r19.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r20.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r21 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r22 = $r21.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r22.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label2;

     label1:
        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r8 = $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: float val$right>;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r7 = $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getWidth()>();

        $f4 = (float) $i6;

        $f5 = $f3 - $f4;

        virtualinvoke $r8.<android.view.ViewGroup: void setX(float)>($f5);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r12 = $r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r11 = $r10.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i7 = virtualinvoke $r11.<android.view.ViewGroup: int getWidth()>();

        $i8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$targetWidth>;

        $i9 = $i7 - $i8;

        $f6 = (float) $i9;

        virtualinvoke $r12.<android.view.ViewGroup: void setX(float)>($f6);

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r16 = $r13.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup this$0>;

        $r15 = $r14.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i10 = virtualinvoke $r15.<android.view.ViewGroup: int getWidth()>();

        $i11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: int val$startWidth>;

        $i12 = $i10 - $i11;

        $f7 = (float) $i12;

        virtualinvoke $r16.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>($f7);

     label2:
        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: int BASE>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float LOGS_SCALE>
    void <init>()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static float computeLog(float, int)
    {
        float f0, $f1, $f2;
        int i0;
        double $d0, $d1, $d2, $d3;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $d1 = (double) i0;

        $f1 = neg f0;

        $d0 = (double) $f1;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, $d0);

        $d3 = 1.0 - $d2;

        $f2 = (float) $d3;

        return $f2;
    }

    public float getInterpolation(float)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r0;
        float f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        f0 := @parameter0: float;

        $f1 = 1.0F - f0;

        $f2 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float computeLog(float,int)>($f1, 100);

        $f3 = <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float LOGS_SCALE>;

        $f4 = $f2 * $f3;

        $f5 = 1.0F - $f4;

        return $f5;
    }

    static void <clinit>()
    {
        float $f0, $f1;

        $f0 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float computeLog(float,int)>(1.0F, 100);

        $f1 = 1.0F / $f0;

        <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: float LOGS_SCALE> = $f1;

        return;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>
    void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r1, $r3;
        java.lang.Object $r2;
        android.content.Context $r4;
        int $i0, $i1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        r1 := @parameter0: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup) $r2;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context)>($r4);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup> = r1;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getScrollDefaultDelay()>();

        $i1 = $i0 * 3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setScrollBarDefaultDelayBeforeFade(int)>($i1);

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setScrollIndicators(int)>(3);

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r0;
        int i0, i1, $i2, $i3, i4, i5;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r1, $r3;
        android.util.Size $r2, $r4;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r2 = $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i2 = virtualinvoke $r2.<android.util.Size: int getHeight()>();

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $r4 = $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i3 = virtualinvoke $r4.<android.util.Size: int getHeight()>();

        i1 = $i2 - $i3;

        i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i1, 1073741824);

        specialinvoke r0.<android.widget.ListView: void onMeasure(int,int)>(i0, i5);

        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r0;
        android.view.MotionEvent r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup mPopup>;

        $z0 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isOverflowAnimating()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.widget.ListView: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    protected boolean awakenScrollBars()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r0;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        $z0 = specialinvoke r0.<android.widget.ListView: boolean awakenScrollBars()>();

        return $z0;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View mCalculator>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mIconTextSpacing>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mSidePadding>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.content.Context mContext>
    void <init>(android.content.Context, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r0;
        android.content.Context r1, $r3;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        android.content.res.Resources $r4;
        android.view.View $r5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.content.Context) $r2;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.content.Context mContext> = $r3;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mIconTextSpacing> = i0;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <androidx.textclassifier.R$dimen: int floating_toolbar_overflow_side_padding>;

        $i2 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mSidePadding> = $i2;

        $r5 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View createMenuButton(androidx.core.internal.view.SupportMenuItem)>(null);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View mCalculator> = $r5;

        return;
    }

    public android.view.View getView(androidx.core.internal.view.SupportMenuItem, int, android.view.View)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r0;
        androidx.core.internal.view.SupportMenuItem r1;
        int i0, $i1;
        boolean $z0;
        android.view.View r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        i0 := @parameter1: int;

        r3 := @parameter2: android.view.View;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        if r3 == null goto label1;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mIconTextSpacing>;

        $z0 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: boolean shouldShowIcon(androidx.core.internal.view.SupportMenuItem)>(r1);

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar: void updateMenuItemButton(android.view.View,androidx.core.internal.view.SupportMenuItem,int,boolean)>(r3, r1, $i1, $z0);

        goto label2;

     label1:
        r3 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View createMenuButton(androidx.core.internal.view.SupportMenuItem)>(r1);

     label2:
        virtualinvoke r3.<android.view.View: void setMinimumWidth(int)>(i0);

        return r3;
    }

    public int calculateWidth(androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r0;
        androidx.core.internal.view.SupportMenuItem r1;
        android.view.View $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View mCalculator>;

        $i0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mIconTextSpacing>;

        $z0 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: boolean shouldShowIcon(androidx.core.internal.view.SupportMenuItem)>(r1);

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar: void updateMenuItemButton(android.view.View,androidx.core.internal.view.SupportMenuItem,int,boolean)>($r2, r1, $i0, $z0);

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View mCalculator>;

        virtualinvoke $r3.<android.view.View: void measure(int,int)>(0, 0);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.view.View mCalculator>;

        $i1 = virtualinvoke $r4.<android.view.View: int getMeasuredWidth()>();

        return $i1;
    }

    private android.view.View createMenuButton(androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r0;
        androidx.core.internal.view.SupportMenuItem r1;
        android.view.View r2;
        android.content.Context $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: android.content.Context mContext>;

        $i0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mIconTextSpacing>;

        $z0 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: boolean shouldShowIcon(androidx.core.internal.view.SupportMenuItem)>(r1);

        r2 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.view.View createMenuItemButton(android.content.Context,androidx.core.internal.view.SupportMenuItem,int,boolean)>($r3, r1, $i0, $z0);

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mSidePadding>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int mSidePadding>;

        virtualinvoke r2.<android.view.View: void setPadding(int,int,int,int)>($i2, 0, $i1, 0);

        return r2;
    }

    private boolean shouldShowIcon(androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r0;
        androidx.core.internal.view.SupportMenuItem r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        r1 := @parameter0: androidx.core.internal.view.SupportMenuItem;

        if r1 == null goto label3;

        $i0 = interfaceinvoke r1.<androidx.core.internal.view.SupportMenuItem: int getGroupId()>();

        $i1 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int MIN_OVERFLOW_SIZE>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int MAX_OVERFLOW_SIZE>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutLinearInInterpolator>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mShowAnimation>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mPreparePopupContentRTLHelper>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissOnMenuItemClick>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mMenuItemButtonOnClickListener>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mDismissRunnable>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mOnOutsideTouchHandler>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>
<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale>
    void <init>(android.content.Context, android.view.View, java.lang.Runnable)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.content.Context r1, $r12, $r25, $r27, $r29, $r31, $r33, $r37, $r39, $r43, $r45, $r50, $r52, $r62;
        android.view.View r2, $r10;
        java.lang.Runnable r3, $r15;
        int[] $r6;
        java.lang.Object $r9, $r11, $r14;
        android.view.ViewGroup $r13, $r18, $r60, $r71, $r74, $r77;
        android.view.View$OnClickListener $r17;
        android.widget.PopupWindow $r19;
        android.content.res.Resources $r20, $r21, $r22, $r23, $r32, $r38, $r44, $r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.animation.Interpolator $r26, $r28, $r30;
        android.content.res.Resources$Theme $r34, $r40, $r46, $r53;
        android.graphics.drawable.Drawable $r35, $r36, $r41, $r42, $r47, $r54;
        android.graphics.drawable.AnimatedVectorDrawable $r48, $r49, $r55, $r56;
        android.widget.ImageButton $r57, $r58;
        android.util.Size $r59;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r63;
        android.view.animation.Animation$AnimationListener $r64, $r66, $r69;
        android.view.animation.AnimationSet $r67, $r70, r86, r87;
        android.animation.AnimatorSet $r72, $r75, $r78;
        android.graphics.Rect r79;
        android.graphics.Point r80;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1 r81;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2 r82;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3 r83;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator r84;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper r85;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4 r88;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5 r89;
        android.animation.Animator$AnimatorListener r90, r91;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: java.lang.Runnable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r79 = new android.graphics.Rect;

        specialinvoke r79.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen> = r79;

        r80 = new android.graphics.Point;

        specialinvoke r80.<android.graphics.Point: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow> = r80;

        $r6 = newarray (int)[2];

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords> = $r6;

        r81 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1;

        specialinvoke r81.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$1: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mPreparePopupContentRTLHelper> = r81;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 1;

        r82 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2;

        specialinvoke r82.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$2: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mMenuItemButtonOnClickListener> = r82;

        $r9 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r10 = (android.view.View) $r9;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent> = $r10;

        $r11 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r12 = (android.content.Context) $r11;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext> = $r12;

        $r13 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.view.ViewGroup createContentContainer(android.content.Context)>(r1);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer> = $r13;

        $r14 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r15 = (java.lang.Runnable) $r14;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mDismissRunnable> = $r15;

        r83 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3;

        specialinvoke r83.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$3: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mOnOutsideTouchHandler> = r83;

        $r18 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mOnOutsideTouchHandler>;

        $r19 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.widget.PopupWindow createPopupWindow(android.view.ViewGroup,android.view.View$OnClickListener)>($r18, $r17);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow> = $r19;

        $r20 = virtualinvoke r2.<android.view.View: android.content.res.Resources getResources()>();

        $i0 = <androidx.textclassifier.R$dimen: int floating_toolbar_horizontal_margin>;

        $i1 = virtualinvoke $r20.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal> = $i1;

        $r21 = virtualinvoke r2.<android.view.View: android.content.res.Resources getResources()>();

        $i2 = <androidx.textclassifier.R$dimen: int floating_toolbar_vertical_margin>;

        $i3 = virtualinvoke $r21.<android.content.res.Resources: int getDimensionPixelSize(int)>($i2);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical> = $i3;

        $r22 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = <androidx.textclassifier.R$dimen: int floating_toolbar_height>;

        $i5 = virtualinvoke $r22.<android.content.res.Resources: int getDimensionPixelSize(int)>($i4);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight> = $i5;

        $r23 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i6 = <androidx.textclassifier.R$dimen: int floating_toolbar_icon_text_spacing>;

        $i7 = virtualinvoke $r23.<android.content.res.Resources: int getDimensionPixelSize(int)>($i6);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing> = $i7;

        r84 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator;

        specialinvoke r84.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator: void <init>()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator> = r84;

        $r25 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r26 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r25, 17563661);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator> = $r26;

        $r27 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r28 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r27, 17563662);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator> = $r28;

        $r29 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r30 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r29, 17563663);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutLinearInInterpolator> = $r30;

        $r31 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r32 = virtualinvoke $r31.<android.content.Context: android.content.res.Resources getResources()>();

        $i8 = <androidx.textclassifier.R$drawable: int ft_avd_tooverflow>;

        $r33 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r34 = virtualinvoke $r33.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r35 = virtualinvoke $r32.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i8, $r34);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow> = $r35;

        $r36 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow>;

        virtualinvoke $r36.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(1);

        $r37 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r38 = virtualinvoke $r37.<android.content.Context: android.content.res.Resources getResources()>();

        $i9 = <androidx.textclassifier.R$drawable: int ft_avd_toarrow>;

        $r39 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r40 = virtualinvoke $r39.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r41 = virtualinvoke $r38.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i9, $r40);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow> = $r41;

        $r42 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>;

        virtualinvoke $r42.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>(1);

        $r43 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r44 = virtualinvoke $r43.<android.content.Context: android.content.res.Resources getResources()>();

        $i10 = <androidx.textclassifier.R$drawable: int ft_avd_toarrow_animation>;

        $r45 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r46 = virtualinvoke $r45.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r47 = virtualinvoke $r44.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i10, $r46);

        $r48 = (android.graphics.drawable.AnimatedVectorDrawable) $r47;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow> = $r48;

        $r49 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r49.<android.graphics.drawable.AnimatedVectorDrawable: void setAutoMirrored(boolean)>(1);

        $r50 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r51 = virtualinvoke $r50.<android.content.Context: android.content.res.Resources getResources()>();

        $i11 = <androidx.textclassifier.R$drawable: int ft_avd_tooverflow_animation>;

        $r52 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r53 = virtualinvoke $r52.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r54 = virtualinvoke $r51.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i11, $r53);

        $r55 = (android.graphics.drawable.AnimatedVectorDrawable) $r54;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow> = $r55;

        $r56 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r56.<android.graphics.drawable.AnimatedVectorDrawable: void setAutoMirrored(boolean)>(1);

        $r57 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton createOverflowButton()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton> = $r57;

        $r58 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r59 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size measure(android.view.View)>($r58);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize> = $r59;

        $r60 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup createMainPanel()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel> = $r60;

        r85 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper;

        $r62 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing>;

        specialinvoke r85.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: void <init>(android.content.Context,int)>($r62, $i12);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper> = r85;

        $r63 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel createOverflowPanel()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel> = $r63;

        $r64 = specialinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener createOverflowAnimationListener()>();

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener> = $r64;

        r86 = new android.view.animation.AnimationSet;

        specialinvoke r86.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation> = r86;

        $r67 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $r66 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener>;

        virtualinvoke $r67.<android.view.animation.AnimationSet: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r66);

        r87 = new android.view.animation.AnimationSet;

        specialinvoke r87.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation> = r87;

        $r70 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $r69 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Animation$AnimationListener mOverflowAnimationListener>;

        virtualinvoke $r70.<android.view.animation.AnimationSet: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r69);

        $r71 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r72 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.animation.AnimatorSet createEnterAnimation(android.view.View)>($r71);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mShowAnimation> = $r72;

        $r74 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        r88 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4;

        specialinvoke r88.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$4: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r90 = (android.animation.Animator$AnimatorListener) r88;

        $r75 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.animation.AnimatorSet createExitAnimation(android.view.View,int,android.animation.Animator$AnimatorListener)>($r74, 150, r90);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation> = $r75;

        $r77 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        r89 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5;

        specialinvoke r89.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$5: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r91 = (android.animation.Animator$AnimatorListener) r89;

        $r78 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.animation.AnimatorSet createExitAnimation(android.view.View,int,android.animation.Animator$AnimatorListener)>($r77, 0, r91);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation> = $r78;

        return;
    }

    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.PopupWindow$OnDismissListener r1;
        android.widget.PopupWindow $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.widget.PopupWindow$OnDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        virtualinvoke $r2.<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>(r1);

        return;
    }

    void setDismissOnMenuItemClick(boolean)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        z0 := @parameter0: boolean;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissOnMenuItemClick> = z0;

        return;
    }

    public void layoutMenuItems(java.util.List, android.view.MenuItem$OnMenuItemClickListener, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.MenuItem$OnMenuItemClickListener r1;
        int i0, $i1;
        boolean $z0;
        java.util.List r2, r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r2 := @parameter0: java.util.List;

        r1 := @parameter1: android.view.MenuItem$OnMenuItemClickListener;

        i0 := @parameter2: int;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.MenuItem$OnMenuItemClickListener mOnMenuItemClickListener> = r1;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void clearPanels()>();

        $i1 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedToolbarWidth(int)>(i0);

        r3 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.util.List layoutMainPanelItems(java.util.List,int)>(r2, $i1);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void layoutOverflowPanelItems(java.util.List)>(r3);

     label1:
        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updatePopupSize()>();

        return;
    }

    public void show(android.graphics.Rect)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect r1;
        boolean $z0;
        android.graphics.Point $r3, $r4;
        int $i0, $i1;
        android.view.View $r5;
        android.widget.PopupWindow $r6;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.graphics.Rect;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 0;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void cancelDismissAndHideAnimations()>();

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)>(r1);

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void preparePopupContent()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i0 = $r4.<android.graphics.Point: int y>;

        virtualinvoke $r6.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>($r5, 0, $i1, $i0);

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void runShowAnimation()>();

        return;
    }

    public void dismiss()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;
        android.animation.AnimatorSet $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 0;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed> = 1;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void cancel()>();

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void runDismissAnimation()>();

        return;
    }

    public void hide()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden> = 1;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void runHideAnimation()>();

        return;
    }

    public boolean isShowing()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0, $z1, $z2, $z3;
        android.widget.PopupWindow $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mDismissed>;

        if $z0 != 0 goto label1;

        $z1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden>;

        if $z1 != 0 goto label1;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $z2 = virtualinvoke $r1.<android.widget.PopupWindow: boolean isShowing()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean isHidden()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mHidden>;

        return $z0;
    }

    void updateCoordinates(android.graphics.Rect)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect r1;
        boolean $z0;
        android.graphics.Point $r3, $r4;
        android.widget.PopupWindow $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.graphics.Rect;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isShowing()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void cancelOverflowAnimations()>();

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)>(r1);

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void preparePopupContent()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i1 = $r4.<android.graphics.Point: int y>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i2 = virtualinvoke $r5.<android.widget.PopupWindow: int getWidth()>();

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i3 = virtualinvoke $r7.<android.widget.PopupWindow: int getHeight()>();

        virtualinvoke $r6.<android.widget.PopupWindow: void update(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    void refreshCoordinatesAndOverflowDirection(android.graphics.Rect)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect r1, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, i48, i49, i50, i51, i52, i53, i54, $i55, $i56, $i57, $i58;
        android.widget.PopupWindow $r2, $r4, $r12, $r13;
        boolean $z0;
        android.view.View $r15, $r16, $r20, $r21;
        int[] $r17, $r18, $r19, $r22, $r23, $r24;
        android.graphics.Point $r25;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void refreshViewPort()>();

        $i8 = virtualinvoke r1.<android.graphics.Rect: int centerX()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i9 = virtualinvoke $r2.<android.widget.PopupWindow: int getWidth()>();

        $i10 = $i9 / 2;

        $i11 = $i8 - $i10;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i12 = $r3.<android.graphics.Rect: int right>;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i13 = virtualinvoke $r4.<android.widget.PopupWindow: int getWidth()>();

        $i14 = $i12 - $i13;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i14);

        $i16 = r1.<android.graphics.Rect: int top>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i15 = $r5.<android.graphics.Rect: int top>;

        i1 = $i16 - $i15;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i18 = $r6.<android.graphics.Rect: int bottom>;

        $i17 = r1.<android.graphics.Rect: int bottom>;

        i2 = $i18 - $i17;

        $i19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        i3 = 2 * $i19;

        $i20 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        i4 = $i20 + i3;

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 != 0 goto label4;

        if i1 < i4 goto label1;

        $i47 = r1.<android.graphics.Rect: int top>;

        i48 = $i47 - i4;

        goto label9;

     label1:
        if i2 < i4 goto label2;

        i48 = r1.<android.graphics.Rect: int bottom>;

        goto label9;

     label2:
        $i41 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        if i2 < $i41 goto label3;

        $i46 = r1.<android.graphics.Rect: int bottom>;

        $i45 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        i48 = $i46 - $i45;

        goto label9;

     label3:
        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i44 = $r14.<android.graphics.Rect: int top>;

        $i42 = r1.<android.graphics.Rect: int top>;

        $i43 = $i42 - i4;

        i48 = staticinvoke <java.lang.Math: int max(int,int)>($i44, $i43);

        goto label9;

     label4:
        $i21 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>(2);

        i49 = $i21 + i3;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i23 = $r7.<android.graphics.Rect: int bottom>;

        $i22 = r1.<android.graphics.Rect: int top>;

        $i24 = $i23 - $i22;

        i50 = $i24 + i4;

        $i26 = r1.<android.graphics.Rect: int bottom>;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i25 = $r8.<android.graphics.Rect: int top>;

        $i27 = $i26 - $i25;

        i51 = $i27 + i4;

        if i1 < i49 goto label5;

        $i38 = i1 - i3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i38);

        $i39 = r1.<android.graphics.Rect: int top>;

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i40 = virtualinvoke $r13.<android.widget.PopupWindow: int getHeight()>();

        i48 = $i39 - $i40;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 1;

        goto label9;

     label5:
        if i1 < i4 goto label6;

        if i50 < i49 goto label6;

        $i36 = i50 - i3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i36);

        $i37 = r1.<android.graphics.Rect: int top>;

        i48 = $i37 - i4;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

        goto label9;

     label6:
        if i2 < i49 goto label7;

        $i35 = i2 - i3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i35);

        i48 = r1.<android.graphics.Rect: int bottom>;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

        goto label9;

     label7:
        if i2 < i4 goto label8;

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i30 = virtualinvoke $r11.<android.graphics.Rect: int height()>();

        if $i30 < i49 goto label8;

        $i31 = i51 - i3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i31);

        $i32 = r1.<android.graphics.Rect: int bottom>;

        $i33 = $i32 + i4;

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i34 = virtualinvoke $r12.<android.widget.PopupWindow: int getHeight()>();

        i48 = $i33 - $i34;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 1;

        goto label9;

     label8:
        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i28 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $i29 = $i28 - i3;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updateOverflowHeight(int)>($i29);

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        i48 = $r10.<android.graphics.Rect: int top>;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards> = 0;

     label9:
        $r15 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r16 = virtualinvoke $r15.<android.view.View: android.view.View getRootView()>();

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        virtualinvoke $r16.<android.view.View: void getLocationOnScreen(int[])>($r17);

        $r18 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i52 = $r18[0];

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i53 = $r19[1];

        $r20 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r21 = virtualinvoke $r20.<android.view.View: android.view.View getRootView()>();

        $r22 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        virtualinvoke $r21.<android.view.View: void getLocationInWindow(int[])>($r22);

        $r23 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i54 = $r23[0];

        $r24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int[] mTmpCoords>;

        i5 = $r24[1];

        i6 = i52 - i54;

        i7 = i53 - i5;

        $r25 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Point mCoordsOnWindow>;

        $i55 = i0 - i6;

        $i56 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i55);

        $i57 = i48 - i7;

        $i58 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i57);

        virtualinvoke $r25.<android.graphics.Point: void set(int,int)>($i56, $i58);

        return;
    }

    void runShowAnimation()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mShowAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    void runDismissAnimation()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    void runHideAnimation()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void start()>();

        return;
    }

    void cancelDismissAndHideAnimations()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.animation.AnimatorSet $r1, $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mDismissAnimation>;

        virtualinvoke $r1.<android.animation.AnimatorSet: void cancel()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.animation.AnimatorSet mHideAnimation>;

        virtualinvoke $r2.<android.animation.AnimatorSet: void cancel()>();

        return;
    }

    void cancelOverflowAnimations()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1, $r2;
        android.view.ViewPropertyAnimator $r3, $r5;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r6, $r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void clearAnimation()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r5 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r5.<android.view.ViewPropertyAnimator: void cancel()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToArrow>;

        virtualinvoke $r6.<android.graphics.drawable.AnimatedVectorDrawable: void stop()>();

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.AnimatedVectorDrawable mToOverflow>;

        virtualinvoke $r7.<android.graphics.drawable.AnimatedVectorDrawable: void stop()>();

        return;
    }

    void openOverflow()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i8, $i10, $i12;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6 r1, r37;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7 r2, r38;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8 r3, r39;
        android.util.Size $r4, $r5;
        android.view.ViewGroup $r6, $r7, $r8, $r9, $r10, $r27, $r28;
        android.widget.ImageButton $r13, $r14, $r36;
        boolean $z0;
        android.view.animation.Interpolator $r16, $r17, $r18, $r32;
        long $l7, $l9, $l11;
        android.view.animation.AnimationSet $r19, $r21, $r23, $r24, $r25, $r26;
        java.util.List $r20, $r22;
        android.view.ViewPropertyAnimator $r29, $r30, $r31, $r33, $r34;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r35;
        android.animation.TimeInterpolator r40;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i0 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        i1 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i2 = virtualinvoke $r6.<android.view.ViewGroup: int getWidth()>();

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i3 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f0 = virtualinvoke $r8.<android.view.ViewGroup: float getY()>();

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f1 = virtualinvoke $r9.<android.view.ViewGroup: float getX()>();

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = virtualinvoke $r10.<android.view.ViewGroup: int getWidth()>();

        $f5 = (float) $i4;

        f2 = f1 + $f5;

        r37 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6;

        specialinvoke r37.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$6: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float,float)>(r0, i0, i2, f1, f2);

        r1 = r37;

        r38 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7;

        specialinvoke r38.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$7: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float)>(r0, i1, i3, f0);

        r2 = r38;

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        f3 = virtualinvoke $r13.<android.widget.ImageButton: float getX()>();

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f9 = (float) i0;

        $f10 = f3 + $f9;

        $r36 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i12 = virtualinvoke $r36.<android.widget.ImageButton: int getWidth()>();

        $f11 = (float) $i12;

        $f12 = $f10 - $f11;

        goto label2;

     label1:
        $f6 = (float) i0;

        $f7 = f3 - $f6;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i5 = virtualinvoke $r14.<android.widget.ImageButton: int getWidth()>();

        $f8 = (float) $i5;

        $f12 = $f7 + $f8;

     label2:
        f4 = $f12;

        r39 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8;

        specialinvoke r39.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$8: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,float,float,int)>(r0, f3, f4, i2);

        r3 = r39;

        $r16 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator>;

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r16);

        $i6 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l7 = (long) $i6;

        virtualinvoke r1.<android.view.animation.Animation: void setDuration(long)>($l7);

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke r2.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r17);

        $i8 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l9 = (long) $i8;

        virtualinvoke r2.<android.view.animation.Animation: void setDuration(long)>($l9);

        $r18 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke r3.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r18);

        $i10 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l11 = (long) $i10;

        virtualinvoke r3.<android.view.animation.Animation: void setDuration(long)>($l11);

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $r20 = virtualinvoke $r19.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r20.<java.util.List: void clear()>();

        $r21 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $r22 = virtualinvoke $r21.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r22.<java.util.List: void clear()>();

        $r23 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r23.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r1);

        $r24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r2);

        $r25 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r25.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r3);

        $r27 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r26 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        virtualinvoke $r27.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r26);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 1;

        $r28 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r29 = virtualinvoke $r28.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r30 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r31 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r32 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator>;

        r40 = (android.animation.TimeInterpolator) $r32;

        $r33 = virtualinvoke $r31.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>(r40);

        $r34 = virtualinvoke $r33.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        virtualinvoke $r34.<android.view.ViewPropertyAnimator: void start()>();

        $r35 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r35.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(1.0F);

        return;
    }

    void closeOverflow()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9 r1, r42;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10 r2, r43;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11 r3, r44;
        android.util.Size $r4, $r9;
        android.view.ViewGroup $r5, $r6, $r7, $r10, $r11, $r12, $r26, $r27;
        android.widget.ImageButton $r14, $r15, $r41;
        boolean $z0;
        android.view.animation.Interpolator $r17, $r18, $r19, $r31, $r38;
        long $l8, $l10, $l12;
        android.view.animation.AnimationSet $r20, $r22, $r23, $r24, $r25;
        java.util.List $r21;
        android.view.ViewPropertyAnimator $r28, $r29, $r30, $r32, $r33, $r35, $r36, $r37, $r39, $r40;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r34;
        android.animation.TimeInterpolator r45, r46;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        i0 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i1 = virtualinvoke $r5.<android.view.ViewGroup: int getWidth()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        f0 = virtualinvoke $r6.<android.view.ViewGroup: float getX()>();

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i4 = virtualinvoke $r7.<android.view.ViewGroup: int getWidth()>();

        $f5 = (float) $i4;

        f1 = f0 + $f5;

        r42 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9;

        specialinvoke r42.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$9: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float,float)>(r0, i0, i1, f0, f1);

        r1 = r42;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        i2 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        i3 = virtualinvoke $r10.<android.view.ViewGroup: int getHeight()>();

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f6 = virtualinvoke $r11.<android.view.ViewGroup: float getY()>();

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i5 = virtualinvoke $r12.<android.view.ViewGroup: int getHeight()>();

        $f7 = (float) $i5;

        f2 = $f6 + $f7;

        r43 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10;

        specialinvoke r43.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$10: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,int,int,float)>(r0, i2, i3, f2);

        r2 = r43;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        f3 = virtualinvoke $r14.<android.widget.ImageButton: float getX()>();

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z0 == 0 goto label1;

        $f11 = (float) i1;

        $f12 = f3 - $f11;

        $r41 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i13 = virtualinvoke $r41.<android.widget.ImageButton: int getWidth()>();

        $f13 = (float) $i13;

        $f14 = $f12 + $f13;

        goto label2;

     label1:
        $f8 = (float) i1;

        $f9 = f3 + $f8;

        $r15 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i6 = virtualinvoke $r15.<android.widget.ImageButton: int getWidth()>();

        $f10 = (float) $i6;

        $f14 = $f9 - $f10;

     label2:
        f4 = $f14;

        r44 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11;

        specialinvoke r44.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$11: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,float,float,int)>(r0, f3, f4, i1);

        r3 = r44;

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r17);

        $i7 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l8 = (long) $i7;

        virtualinvoke r1.<android.view.animation.Animation: void setDuration(long)>($l8);

        $r18 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLogAccelerateInterpolator>;

        virtualinvoke r2.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r18);

        $i9 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l10 = (long) $i9;

        virtualinvoke r2.<android.view.animation.Animation: void setDuration(long)>($l10);

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutSlowInInterpolator>;

        virtualinvoke r3.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r19);

        $i11 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getAdjustedDuration(int)>(250);

        $l12 = (long) $i11;

        virtualinvoke r3.<android.view.animation.Animation: void setDuration(long)>($l12);

        $r20 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $r21 = virtualinvoke $r20.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        interfaceinvoke $r21.<java.util.List: void clear()>();

        $r22 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r22.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r1);

        $r23 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r23.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r2);

        $r24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r24.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r3);

        $r26 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r25 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        virtualinvoke $r26.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r25);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 0;

        $r27 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r28 = virtualinvoke $r27.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r29 = virtualinvoke $r28.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r30 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r31 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mFastOutLinearInInterpolator>;

        r45 = (android.animation.TimeInterpolator) $r31;

        $r32 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>(r45);

        $r33 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(100L);

        virtualinvoke $r33.<android.view.ViewPropertyAnimator: void start()>();

        $r34 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r35 = virtualinvoke $r34.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.view.ViewPropertyAnimator animate()>();

        $r36 = virtualinvoke $r35.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r37 = virtualinvoke $r36.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r38 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.Interpolator mLinearOutSlowInInterpolator>;

        r46 = (android.animation.TimeInterpolator) $r38;

        $r39 = virtualinvoke $r37.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>(r46);

        $r40 = virtualinvoke $r39.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        virtualinvoke $r40.<android.view.ViewPropertyAnimator: void start()>();

        return;
    }

    void setPanelsStatesAtRestingPosition()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton $r1, $r9, $r11, $r20, $r26, $r32, $r37, $r45, $r47, $r53, $r57, $r63, $r68;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2, $r6, $r7, $r22, $r28, $r33, $r38, $r42, $r43, $r54, $r59, $r65, $r70;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        android.view.ViewGroup $r3, $r4, $r5, $r13, $r14, $r15, $r16, $r18, $r19, $r24, $r25, $r30, $r31, $r35, $r36, $r39, $r40, $r41, $r50, $r51, $r52, $r55, $r56, $r60, $r61, $r62, $r66, $r67;
        android.graphics.drawable.Drawable $r8, $r44;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        android.content.Context $r10, $r46;
        java.lang.String $r12, $r48;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        android.widget.PopupWindow $r17, $r49;
        android.util.Size $r21, $r23, $r27, $r29, $r34, $r58, $r64, $r69, r71, r72;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r1.<android.widget.ImageButton: void setEnabled(boolean)>(1);

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: boolean awakenScrollBars()>();

        $z1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z1 == 0 goto label05;

        r71 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $r39 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r39, r71);

        $r40 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r40.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        $r41 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r41.<android.view.ViewGroup: void setVisibility(int)>(4);

        $r42 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r42.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(1.0F);

        $r43 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r43.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setVisibility(int)>(0);

        $r45 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r44 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mArrow>;

        virtualinvoke $r45.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r44);

        $r47 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r46 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i25 = <androidx.textclassifier.R$string: int floating_toolbar_close_overflow_description>;

        $r48 = virtualinvoke $r46.<android.content.Context: java.lang.String getString(int)>($i25);

        virtualinvoke $r47.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r48);

        $z5 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z5 == 0 goto label01;

        $r66 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i40 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f18 = (float) $i40;

        virtualinvoke $r66.<android.view.ViewGroup: void setX(float)>($f18);

        $r67 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r67.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r68 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i41 = virtualinvoke r71.<android.util.Size: int getWidth()>();

        $r69 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i42 = virtualinvoke $r69.<android.util.Size: int getWidth()>();

        $i43 = $i41 - $i42;

        $f19 = (float) $i43;

        virtualinvoke $r68.<android.widget.ImageButton: void setX(float)>($f19);

        $r70 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r70.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label02;

     label01:
        $r50 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r49 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i26 = virtualinvoke $r49.<android.widget.PopupWindow: int getWidth()>();

        $i27 = virtualinvoke r71.<android.util.Size: int getWidth()>();

        $i29 = $i26 - $i27;

        $i28 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i30 = $i29 - $i28;

        $f10 = (float) $i30;

        virtualinvoke $r50.<android.view.ViewGroup: void setX(float)>($f10);

        $r52 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r51 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f11 = virtualinvoke $r51.<android.view.ViewGroup: float getX()>();

        $f12 = neg $f11;

        virtualinvoke $r52.<android.view.ViewGroup: void setX(float)>($f12);

        $r53 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r53.<android.widget.ImageButton: void setX(float)>(0.0F);

        $r54 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r54.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

     label02:
        $z6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z6 == 0 goto label03;

        $r60 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i33 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f15 = (float) $i33;

        virtualinvoke $r60.<android.view.ViewGroup: void setY(float)>($f15);

        $r61 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $i34 = virtualinvoke r71.<android.util.Size: int getHeight()>();

        $r62 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i35 = virtualinvoke $r62.<android.view.ViewGroup: int getHeight()>();

        $i36 = $i34 - $i35;

        $f16 = (float) $i36;

        virtualinvoke $r61.<android.view.ViewGroup: void setY(float)>($f16);

        $r63 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i37 = virtualinvoke r71.<android.util.Size: int getHeight()>();

        $r64 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i38 = virtualinvoke $r64.<android.util.Size: int getHeight()>();

        $i39 = $i37 - $i38;

        $f17 = (float) $i39;

        virtualinvoke $r63.<android.widget.ImageButton: void setY(float)>($f17);

        $r65 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r65.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>(0.0F);

        goto label04;

     label03:
        $r55 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i31 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f13 = (float) $i31;

        virtualinvoke $r55.<android.view.ViewGroup: void setY(float)>($f13);

        $r56 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r56.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r57 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r57.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r59 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r58 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i32 = virtualinvoke $r58.<android.util.Size: int getHeight()>();

        $f14 = (float) $i32;

        virtualinvoke $r59.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f14);

     label04:
        goto label10;

     label05:
        r72 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r3, r72);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r4.<android.view.ViewGroup: void setAlpha(float)>(1.0F);

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r5.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAlpha(float)>(0.0F);

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setVisibility(int)>(4);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>;

        virtualinvoke $r9.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r8);

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i0 = <androidx.textclassifier.R$string: int floating_toolbar_open_overflow_description>;

        $r12 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>($i0);

        virtualinvoke $r11.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r12);

        $z2 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z2 == 0 goto label09;

        $z3 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z3 == 0 goto label06;

        $r35 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f9 = (float) $i24;

        virtualinvoke $r35.<android.view.ViewGroup: void setX(float)>($f9);

        $r36 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r36.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r37 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r37.<android.widget.ImageButton: void setX(float)>(0.0F);

        $r38 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r38.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>(0.0F);

        goto label07;

     label06:
        $r18 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i3 = virtualinvoke $r17.<android.widget.PopupWindow: int getWidth()>();

        $i4 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $i6 = $i3 - $i4;

        $i5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i7 = $i6 - $i5;

        $f2 = (float) $i7;

        virtualinvoke $r18.<android.view.ViewGroup: void setX(float)>($f2);

        $r19 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r19.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r20 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i8 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $r21 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i9 = virtualinvoke $r21.<android.util.Size: int getWidth()>();

        $i10 = $i8 - $i9;

        $f3 = (float) $i10;

        virtualinvoke $r20.<android.widget.ImageButton: void setX(float)>($f3);

        $r22 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i11 = virtualinvoke r72.<android.util.Size: int getWidth()>();

        $r23 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i12 = virtualinvoke $r23.<android.util.Size: int getWidth()>();

        $i13 = $i11 - $i12;

        $f4 = (float) $i13;

        virtualinvoke $r22.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setX(float)>($f4);

     label07:
        $z4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z4 == 0 goto label08;

        $r30 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i16 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $r29 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i17 = virtualinvoke $r29.<android.util.Size: int getHeight()>();

        $i18 = $i16 + $i17;

        $i19 = virtualinvoke r72.<android.util.Size: int getHeight()>();

        $i20 = $i18 - $i19;

        $f7 = (float) $i20;

        virtualinvoke $r30.<android.view.ViewGroup: void setY(float)>($f7);

        $r31 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r31.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r32 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r32.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r33 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i21 = virtualinvoke r72.<android.util.Size: int getHeight()>();

        $r34 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i22 = virtualinvoke $r34.<android.util.Size: int getHeight()>();

        $i23 = $i21 - $i22;

        $f8 = (float) $i23;

        virtualinvoke $r33.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f8);

        goto label10;

     label08:
        $r24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f5 = (float) $i14;

        virtualinvoke $r24.<android.view.ViewGroup: void setY(float)>($f5);

        $r25 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r25.<android.view.ViewGroup: void setY(float)>(0.0F);

        $r26 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r26.<android.widget.ImageButton: void setY(float)>(0.0F);

        $r28 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r27 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i15 = virtualinvoke $r27.<android.util.Size: int getHeight()>();

        $f6 = (float) $i15;

        virtualinvoke $r28.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f6);

        goto label10;

     label09:
        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $f0 = (float) $i1;

        virtualinvoke $r13.<android.view.ViewGroup: void setX(float)>($f0);

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $f1 = (float) $i2;

        virtualinvoke $r14.<android.view.ViewGroup: void setY(float)>($f1);

        $r15 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r15.<android.view.ViewGroup: void setX(float)>(0.0F);

        $r16 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r16.<android.view.ViewGroup: void setY(float)>(0.0F);

     label10:
        return;
    }

    void updateOverflowHeight(int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        android.util.Size $r1, $r2, $r3, $r5, $r7, $r9, $r15, r16;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r4;
        android.view.ViewGroup $r6, $r8, $r10, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.widget.ImageButton $r12, $r13;
        android.view.View r17;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i4 = virtualinvoke $r1.<android.util.Size: int getHeight()>();

        $i6 = i0 - $i4;

        $i5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        i1 = $i6 / $i5;

        i2 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>(i1);

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i7 = virtualinvoke $r2.<android.util.Size: int getHeight()>();

        if $i7 == i2 goto label1;

        r16 = new android.util.Size;

        $r15 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i9 = virtualinvoke $r15.<android.util.Size: int getWidth()>();

        specialinvoke r16.<android.util.Size: void <init>(int,int)>($i9, i2);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = r16;

     label1:
        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        r17 = (android.view.View) $r4;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>(r17, $r3);

        $z1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z1 == 0 goto label2;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r8, $r7);

        $z2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z2 == 0 goto label3;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i8 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        i3 = $i8 - i2;

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $f0 = virtualinvoke $r10.<android.view.ViewGroup: float getY()>();

        $f1 = (float) i3;

        $f2 = $f0 + $f1;

        virtualinvoke $r11.<android.view.ViewGroup: void setY(float)>($f2);

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $f3 = virtualinvoke $r12.<android.widget.ImageButton: float getY()>();

        $f4 = (float) i3;

        $f5 = $f3 - $f4;

        virtualinvoke $r13.<android.widget.ImageButton: void setY(float)>($f5);

        goto label3;

     label2:
        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>($r6, $r5);

     label3:
        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void updatePopupSize()>();

     label4:
        return;
    }

    void updatePopupSize()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1, $r2, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        android.widget.PopupWindow $r3, $r4;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i10 = 0;

        i11 = 0;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        if $r1 == null goto label1;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i8 = virtualinvoke $r7.<android.util.Size: int getWidth()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i8);

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i9 = virtualinvoke $r8.<android.util.Size: int getHeight()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i9);

     label1:
        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        if $r2 == null goto label2;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i6 = virtualinvoke $r5.<android.util.Size: int getWidth()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, $i6);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i7 = virtualinvoke $r6.<android.util.Size: int getHeight()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, $i7);

     label2:
        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginHorizontal>;

        $i1 = $i0 * 2;

        $i2 = i10 + $i1;

        virtualinvoke $r3.<android.widget.PopupWindow: void setWidth(int)>($i2);

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.PopupWindow mPopupWindow>;

        $i3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mMarginVertical>;

        $i4 = $i3 * 2;

        $i5 = i11 + $i4;

        virtualinvoke $r4.<android.widget.PopupWindow: void setHeight(int)>($i5);

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void maybeComputeTransitionDurationScale()>();

        return;
    }

    void refreshViewPort()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.graphics.Rect $r1;
        android.view.View $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        virtualinvoke $r2.<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>($r1);

        return;
    }

    int getAdjustedToolbarWidth(int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.graphics.Rect $r1;
        android.view.View $r2, $r4;
        android.content.res.Resources $r3, $r5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter0: int;

        i8 = i0;

        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void refreshViewPort()>();

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.Rect mViewPortOnScreen>;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r3 = virtualinvoke $r2.<android.view.View: android.content.res.Resources getResources()>();

        $i3 = <androidx.textclassifier.R$dimen: int floating_toolbar_horizontal_margin>;

        $i4 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i3);

        $i5 = 2 * $i4;

        i1 = $i2 - $i5;

        if i8 > 0 goto label1;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View mParent>;

        $r5 = virtualinvoke $r4.<android.view.View: android.content.res.Resources getResources()>();

        $i7 = <androidx.textclassifier.R$dimen: int floating_toolbar_preferred_width>;

        i8 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>($i7);

     label1:
        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i8, i1);

        return $i6;
    }

    boolean isInRTLMode()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2;
        android.content.Context $r1, $r3;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        i0 = $i2 & 4194304;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i1 = virtualinvoke $r5.<android.content.res.Configuration: int getLayoutDirection()>();

        if i0 != 4194304 goto label1;

        if i1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean hasOverflow()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.util.Size $r1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    java.util.List layoutMainPanelItems(java.util.List, int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23;
        java.util.ArrayList r2, r3, $r7, $r8;
        boolean z0, z1, z2, z3, $z4, $z6, $z7, $z8, $z10, z12, $z13, $z14, $z15, $z16, $z17;
        android.view.View r4;
        android.view.ViewGroup$LayoutParams r5;
        android.view.ViewGroup $r9, $r10, $r11, $r14, $r17;
        android.util.Size $r12, $r13, $r16;
        java.lang.Object $r15, $r20;
        double $d0, $d1, $d2, $d3;
        android.widget.LinearLayout $r19;
        java.util.Iterator r21;
        androidx.core.internal.view.SupportMenuItem r22, r23;
        android.content.Context $r24;
        java.lang.CharSequence r25, $r26, r27;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        i22 = i0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        r21 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label04;

        $r20 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (androidx.core.internal.view.SupportMenuItem) $r20;

        $i20 = interfaceinvoke r22.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i21 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i20 == $i21 goto label02;

        $z10 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)>(r22);

        if $z10 == 0 goto label02;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label03;

     label02:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r22);

     label03:
        goto label01;

     label04:
        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>(r3);

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r9.<android.view.ViewGroup: void removeAllViews()>();

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r10.<android.view.ViewGroup: void setPaddingRelative(int,int,int,int)>(0, 0, 0, 0);

        z12 = 1;

     label05:
        $z6 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label22;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        r23 = (androidx.core.internal.view.SupportMenuItem) $r15;

        if z12 != 0 goto label06;

        $z8 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: boolean requiresOverflow(androidx.core.internal.view.SupportMenuItem)>(r23);

        if $z8 == 0 goto label06;

        goto label22;

     label06:
        if z12 == 0 goto label07;

        $i18 = interfaceinvoke r23.<androidx.core.internal.view.SupportMenuItem: int getItemId()>();

        $i19 = <androidx.textclassifier.widget.IFloatingToolbar: int MENU_ID_SMART_ACTION>;

        if $i18 != $i19 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        z0 = $z13;

        $r24 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $i23 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mIconTextSpacing>;

        r4 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar: android.view.View createMenuItemButton(android.content.Context,androidx.core.internal.view.SupportMenuItem,int,boolean)>($r24, r23, $i23, z0);

        if z0 != 0 goto label09;

        $z7 = r4 instanceof android.widget.LinearLayout;

        if $z7 == 0 goto label09;

        $r19 = (android.widget.LinearLayout) r4;

        virtualinvoke $r19.<android.widget.LinearLayout: void setGravity(int)>(17);

     label09:
        if z12 == 0 goto label10;

        $i13 = virtualinvoke r4.<android.view.View: int getPaddingStart()>();

        $d2 = (double) $i13;

        $d3 = 1.5 * $d2;

        $i14 = (int) $d3;

        $i15 = virtualinvoke r4.<android.view.View: int getPaddingTop()>();

        $i16 = virtualinvoke r4.<android.view.View: int getPaddingEnd()>();

        $i17 = virtualinvoke r4.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r4.<android.view.View: void setPaddingRelative(int,int,int,int)>($i14, $i15, $i16, $i17);

     label10:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 != 1 goto label11;

        $z14 = 1;

        goto label12;

     label11:
        $z14 = 0;

     label12:
        z1 = $z14;

        if z1 == 0 goto label13;

        $i8 = virtualinvoke r4.<android.view.View: int getPaddingStart()>();

        $i9 = virtualinvoke r4.<android.view.View: int getPaddingTop()>();

        $i10 = virtualinvoke r4.<android.view.View: int getPaddingEnd()>();

        $d0 = (double) $i10;

        $d1 = 1.5 * $d0;

        $i11 = (int) $d1;

        $i12 = virtualinvoke r4.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r4.<android.view.View: void setPaddingRelative(int,int,int,int)>($i8, $i9, $i11, $i12);

     label13:
        virtualinvoke r4.<android.view.View: void measure(int,int)>(0, 0);

        $i4 = virtualinvoke r4.<android.view.View: int getMeasuredWidth()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i4, i0);

        $r16 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i5 = virtualinvoke $r16.<android.util.Size: int getWidth()>();

        $i6 = i22 - $i5;

        if i1 > $i6 goto label14;

        $z15 = 1;

        goto label15;

     label14:
        $z15 = 0;

     label15:
        z2 = $z15;

        if z1 == 0 goto label16;

        if i1 > i22 goto label16;

        $z16 = 1;

        goto label17;

     label16:
        $z16 = 0;

     label17:
        z3 = $z16;

        if z2 != 0 goto label18;

        if z3 == 0 goto label22;

     label18:
        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setButtonTagAndClickListener(android.view.View,androidx.core.internal.view.SupportMenuItem)>(r4, r23);

        r25 = null;

        $i7 = <android.os.Build$VERSION: int SDK_INT>;

        if $i7 < 26 goto label19;

        r25 = interfaceinvoke r23.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTooltipText()>();

     label19:
        if r25 != null goto label20;

        $r26 = interfaceinvoke r23.<androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTitle()>();

        goto label21;

     label20:
        $r26 = r25;

     label21:
        r27 = $r26;

        staticinvoke <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>(r4, r27);

        $r17 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r17.<android.view.ViewGroup: void addView(android.view.View)>(r4);

        r5 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5.<android.view.ViewGroup$LayoutParams: int width> = i1;

        virtualinvoke r4.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        i22 = i22 - i1;

        interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(0);

        z12 = 0;

        goto label05;

     label22:
        $z17 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z17 != 0 goto label23;

        $r14 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r13 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i2 = virtualinvoke $r13.<android.util.Size: int getWidth()>();

        virtualinvoke $r14.<android.view.ViewGroup: void setPaddingRelative(int,int,int,int)>(0, 0, $i2, 0);

     label23:
        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r12 = staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size measure(android.view.View)>($r11);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize> = $r12;

        return r2;
    }

    void layoutOverflowPanelItems(java.util.List)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        java.util.List r1;
        android.widget.ArrayAdapter r2;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r3, $r5, $r7, $r11, $r12;
        android.widget.ListAdapter $r4, r16;
        boolean $z0;
        android.util.Size $r6, $r8, $r10, r15;
        float $f0;
        java.lang.Object $r13;
        androidx.core.internal.view.SupportMenuItem $r14;
        android.view.View r17;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r4 = virtualinvoke $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        r2 = (android.widget.ArrayAdapter) $r4;

        virtualinvoke r2.<android.widget.ArrayAdapter: void clear()>();

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r14 = (androidx.core.internal.view.SupportMenuItem) $r13;

        virtualinvoke r2.<android.widget.ArrayAdapter: void add(java.lang.Object)>($r14);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        r16 = (android.widget.ListAdapter) r2;

        virtualinvoke $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>(r16);

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label3;

        $r12 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        virtualinvoke $r12.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>(0.0F);

        goto label4;

     label3:
        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i2 = virtualinvoke $r6.<android.util.Size: int getHeight()>();

        $f0 = (float) $i2;

        virtualinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f0);

     label4:
        $i3 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int getOverflowWidth()>();

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i4 = virtualinvoke $r8.<android.util.Size: int getWidth()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);

        i1 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int calculateOverflowHeight(int)>(4);

        r15 = new android.util.Size;

        specialinvoke r15.<android.util.Size: void <init>(int,int)>(i6, i1);

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = r15;

        $r11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        r17 = (android.view.View) $r11;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,android.util.Size)>(r17, $r10);

        return;
    }

    void preparePopupContent()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.ViewGroup $r1, $r2, $r3, $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Runnable $r5;
        android.widget.ImageButton $r7;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r9;
        android.view.View r11;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r1.<android.view.ViewGroup: void removeAllViews()>();

        $z0 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        r11 = (android.view.View) $r9;

        virtualinvoke $r10.<android.view.ViewGroup: void addView(android.view.View)>(r11);

     label1:
        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View)>($r2);

        $z1 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean hasOverflow()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        virtualinvoke $r8.<android.view.ViewGroup: void addView(android.view.View)>($r7);

     label2:
        virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setPanelsStatesAtRestingPosition()>();

        $z2 = virtualinvoke r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean isInRTLMode()>();

        if $z2 == 0 goto label3;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r4.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: java.lang.Runnable mPreparePopupContentRTLHelper>;

        virtualinvoke $r6.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r5);

     label3:
        return;
    }

    void clearPanels()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ArrayAdapter r1;
        android.view.ViewGroup $r2, $r6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r3, $r5;
        android.widget.ListAdapter $r4, r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize> = null;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize> = null;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen> = 0;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        virtualinvoke $r2.<android.view.ViewGroup: void removeAllViews()>();

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r4 = virtualinvoke $r3.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        r1 = (android.widget.ArrayAdapter) $r4;

        virtualinvoke r1.<android.widget.ArrayAdapter: void clear()>();

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        r7 = (android.widget.ListAdapter) r1;

        virtualinvoke $r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>(r7);

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        virtualinvoke $r6.<android.view.ViewGroup: void removeAllViews()>();

        return;
    }

    void positionContentYCoordinatesIfOpeningOverflowUpwards()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean $z0;
        android.view.ViewGroup $r1, $r2, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.util.Size $r3, $r9;
        float $f0, $f1, $f2;
        android.widget.ImageButton $r5, $r6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r8;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mOpenOverflowUpwards>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getHeight()>();

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i1 = virtualinvoke $r3.<android.util.Size: int getHeight()>();

        $i2 = $i0 - $i1;

        $f0 = (float) $i2;

        virtualinvoke $r2.<android.view.ViewGroup: void setY(float)>($f0);

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i3 = virtualinvoke $r4.<android.view.ViewGroup: int getHeight()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.widget.ImageButton mOverflowButton>;

        $i4 = virtualinvoke $r6.<android.widget.ImageButton: int getHeight()>();

        $i5 = $i3 - $i4;

        $f1 = (float) $i5;

        virtualinvoke $r5.<android.widget.ImageButton: void setY(float)>($f1);

        $r8 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $i6 = virtualinvoke $r7.<android.view.ViewGroup: int getHeight()>();

        $r9 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i7 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        $i8 = $i6 - $i7;

        $f2 = (float) $i8;

        virtualinvoke $r8.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setY(float)>($f2);

     label1:
        return;
    }

    int getOverflowWidth()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, $i1, i2, i3;
        androidx.core.internal.view.SupportMenuItem r1;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r2, $r4;
        android.widget.ListAdapter $r3, $r5;
        java.lang.Object $r6;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper $r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i2 = 0;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r3 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        i0 = interfaceinvoke $r3.<android.widget.ListAdapter: int getCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $r5 = virtualinvoke $r4.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: android.widget.ListAdapter getAdapter()>();

        $r6 = interfaceinvoke $r5.<android.widget.ListAdapter: java.lang.Object getItem(int)>(i3);

        r1 = (androidx.core.internal.view.SupportMenuItem) $r6;

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper mOverflowPanelViewHelper>;

        $i1 = virtualinvoke $r7.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper: int calculateWidth(androidx.core.internal.view.SupportMenuItem)>(r1);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, i2);

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    int calculateOverflowHeight(int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel $r1, $r2;
        android.util.Size $r3;
        float $f0, $f1;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter0: int;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(2, i0);

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i3 = virtualinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: int getCount()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        i1 = staticinvoke <java.lang.Math: int min(int,int)>(4, $i4);

        i12 = 0;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        $i5 = virtualinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: int getCount()>();

        if i1 >= $i5 goto label1;

        $i11 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        $f0 = (float) $i11;

        $f1 = $f0 * 0.5F;

        i12 = (int) $f1;

     label1:
        $i6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mLineHeight>;

        $i7 = i1 * $i6;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowButtonSize>;

        $i8 = virtualinvoke $r3.<android.util.Size: int getHeight()>();

        $i9 = $i7 + $i8;

        $i10 = $i9 + i12;

        return $i10;
    }

    void setButtonTagAndClickListener(android.view.View, androidx.core.internal.view.SupportMenuItem)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.view.View r1;
        androidx.core.internal.view.SupportMenuItem r2;
        android.view.View$OnClickListener $r3;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.internal.view.SupportMenuItem;

        virtualinvoke r1.<android.view.View: void setTag(java.lang.Object)>(r2);

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.View$OnClickListener mMenuItemButtonOnClickListener>;

        virtualinvoke r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r3);

        return;
    }

    int getAdjustedDuration(int)
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale>;

        if $i1 >= 150 goto label1;

        $i4 = i0 - 50;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 0);

        return $i5;

     label1:
        $i2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale>;

        if $i2 <= 300 goto label2;

        $i3 = i0 + 50;

        return $i3;

     label2:
        return i0;
    }

    void maybeComputeTransitionDurationScale()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.util.Size $r1, $r2, $r3, $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3;
        android.view.ViewGroup $r7;
        android.content.Context $r8;
        android.content.res.Resources $r9;
        android.util.DisplayMetrics $r10;
        float $f0;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i2 = virtualinvoke $r3.<android.util.Size: int getWidth()>();

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i3 = virtualinvoke $r4.<android.util.Size: int getWidth()>();

        i0 = $i2 - $i3;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mOverflowPanelSize>;

        $i4 = virtualinvoke $r5.<android.util.Size: int getHeight()>();

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.util.Size mMainPanelSize>;

        $i5 = virtualinvoke $r6.<android.util.Size: int getHeight()>();

        i1 = $i4 - $i5;

        $i7 = i0 * i0;

        $i6 = i1 * i1;

        $i8 = $i7 + $i6;

        $d0 = (double) $i8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $r7 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mContentContainer>;

        $r8 = virtualinvoke $r7.<android.view.ViewGroup: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r10.<android.util.DisplayMetrics: float density>;

        $d2 = (double) $f0;

        $d3 = $d1 / $d2;

        $i9 = (int) $d3;

        r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: int mTransitionDurationScale> = $i9;

     label1:
        return;
    }

    android.view.ViewGroup createMainPanel()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12 r1, r5;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.ViewGroup r6, r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r5 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        specialinvoke r5.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$12: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context)>(r0, $r3);

        r1 = r5;

        $r4 = <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object MAIN_PANEL_TAG>;

        r6 = (android.view.ViewGroup) r1;

        virtualinvoke r6.<android.view.ViewGroup: void setTag(java.lang.Object)>($r4);

        r7 = (android.view.ViewGroup) r1;

        return r7;
    }

    android.widget.ImageButton createOverflowButton()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        android.widget.ImageButton r1;
        android.content.Context $r2;
        android.view.LayoutInflater $r3;
        int $i0;
        android.view.View $r4;
        android.graphics.drawable.Drawable $r5;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13 $r6;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r2);

        $i0 = <androidx.textclassifier.R$layout: int floating_popup_overflow_button>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i0, null);

        r1 = (android.widget.ImageButton) $r4;

        $r5 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.graphics.drawable.Drawable mOverflow>;

        virtualinvoke r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r5);

        $r6 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13;

        specialinvoke $r6.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$13: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,android.widget.ImageButton)>(r0, r1);

        virtualinvoke r1.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r6);

        return r1;
    }

    androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel createOverflowPanel()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel r1, r9;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14 r2, r11;
        android.content.Context $r6;
        java.lang.Object $r8;
        android.view.ViewGroup$LayoutParams r10;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15 r12;
        android.widget.ListAdapter r13;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        r9 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel;

        specialinvoke r9.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r1 = r9;

        r10 = new android.view.ViewGroup$LayoutParams;

        specialinvoke r10.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r10);

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setDivider(android.graphics.drawable.Drawable)>(null);

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setDividerHeight(int)>(0);

        r11 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14;

        $r6 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.content.Context mContext>;

        specialinvoke r11.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$14: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,android.content.Context,int)>(r0, $r6, 0);

        r2 = r11;

        r13 = (android.widget.ListAdapter) r2;

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setAdapter(android.widget.ListAdapter)>(r13);

        r12 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15;

        specialinvoke r12.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$15: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup,androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel)>(r0, r1);

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>(r12);

        $r8 = <androidx.textclassifier.widget.FloatingToolbar: java.lang.Object OVERFLOW_PANEL_TAG>;

        virtualinvoke r1.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel: void setTag(java.lang.Object)>($r8);

        return r1;
    }

    boolean isOverflowAnimating()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.view.animation.AnimationSet $r1, $r2, $r3, $r4;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r1 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $z2 = virtualinvoke $r1.<android.view.animation.AnimationSet: boolean hasStarted()>();

        if $z2 == 0 goto label1;

        $r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mOpenOverflowAnimation>;

        $z4 = virtualinvoke $r3.<android.view.animation.AnimationSet: boolean hasEnded()>();

        if $z4 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        $r4 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $z6 = virtualinvoke $r4.<android.view.animation.AnimationSet: boolean hasStarted()>();

        if $z6 == 0 goto label3;

        $r2 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.animation.AnimationSet mCloseOverflowAnimation>;

        $z3 = virtualinvoke $r2.<android.view.animation.AnimationSet: boolean hasEnded()>();

        if $z3 != 0 goto label3;

        $z7 = 1;

        goto label4;

     label3:
        $z7 = 0;

     label4:
        z1 = $z7;

        if z0 != 0 goto label5;

        if z1 == 0 goto label6;

     label5:
        $z8 = 1;

        goto label7;

     label6:
        $z8 = 0;

     label7:
        return $z8;
    }

    private android.view.animation.Animation$AnimationListener createOverflowAnimationListener()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16 r1, $r2;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $r2 = new androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16;

        specialinvoke $r2.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$16: void <init>(androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup)>(r0);

        r1 = $r2;

        return r1;
    }

    private static android.util.Size measure(android.view.View)
    {
        android.view.View r0;
        android.view.ViewParent $r1;
        android.util.Size $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke r0.<android.view.View: android.view.ViewParent getParent()>();

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z0);

        virtualinvoke r0.<android.view.View: void measure(int,int)>(0, 0);

        $r2 = new android.util.Size;

        $i0 = virtualinvoke r0.<android.view.View: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.view.View: int getMeasuredHeight()>();

        specialinvoke $r2.<android.util.Size: void <init>(int,int)>($i0, $i1);

        return $r2;
    }

    private static void setSize(android.view.View, int, int)
    {
        android.view.View r0;
        int i0, i1;
        android.view.ViewGroup$LayoutParams r1, $r2, r3;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.view.View: void setMinimumWidth(int)>(i0);

        virtualinvoke r0.<android.view.View: void setMinimumHeight(int)>(i1);

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r1 != null goto label1;

        $r2 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r2.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(0, 0);

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r3 = $r2;

        r3.<android.view.ViewGroup$LayoutParams: int width> = i0;

        r3.<android.view.ViewGroup$LayoutParams: int height> = i1;

        virtualinvoke r0.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        return;
    }

    private static void setSize(android.view.View, android.util.Size)
    {
        android.view.View r0;
        android.util.Size r1;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.util.Size;

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, $i0, $i1);

        return;
    }

    static void setWidth(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, i0, $i1);

        return;
    }

    static void setHeight(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        staticinvoke <androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: void setSize(android.view.View,int,int)>(r0, $i1, i0);

        return;
    }

    android.graphics.Rect getContainerBounds()
    {
        androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup r0;
        int[] r1;
        int i0, i1, i2, i3, $i4, $i5;
        boolean $z0;
        java.lang.Object r3;
        android.graphics.Rect r4;
        android.view.View r5, r6, r7;

        r0 := @this: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup;

        $z0 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: boolean mIsOverflowOpen>;

        if $z0 == 0 goto label1;

        r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel mOverflowPanel>;

        goto label2;

     label1:
        r3 = r0.<androidx.textclassifier.widget.FloatingToolbar$FloatingToolbarPopup: android.view.ViewGroup mMainPanel>;

     label2:
        r1 = newarray (int)[2];

        r5 = (android.view.View) r3;

        virtualinvoke r5.<android.view.View: void getLocationOnScreen(int[])>(r1);

        i0 = r1[0];

        r6 = (android.view.View) r3;

        $i4 = virtualinvoke r6.<android.view.View: int getWidth()>();

        i1 = i0 + $i4;

        i2 = r1[1];

        r7 = (android.view.View) r3;

        $i5 = virtualinvoke r7.<android.view.View: int getHeight()>();

        i3 = i2 + $i5;

        r4 = new android.graphics.Rect;

        specialinvoke r4.<android.graphics.Rect: void <init>(int,int,int,int)>(i0, i2, i1, i3);

        return r4;
    }

