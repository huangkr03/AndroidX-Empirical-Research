kotlin.collections.MapsKt___MapsJvmKt
    public void <init>()
    {
        kotlin.collections.MapsKt___MapsJvmKt $r0;

        $r0 := @this: kotlin.collections.MapsKt___MapsJvmKt;

        specialinvoke $r0.<kotlin.collections.MapsKt__MapsKt: void <init>()>();

        return;
    }

    private static final java.util.Map$Entry maxBy(java.util.Map, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r7;
        java.lang.Comparable $r6, $r8;
        int $i0;
        java.util.Map$Entry $r9;
        java.lang.Iterable r10;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r10 = (java.lang.Iterable) $r2;

        $r3 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = null;

        goto label4;

     label1:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r5;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 >= 0 goto label3;

        $r4 = $r5;

        $r6 = $r8;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        goto label2;

     label4:
        $r9 = (java.util.Map$Entry) $r4;

        return $r9;
    }

    private static final java.util.Map$Entry maxWith(java.util.Map, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;
        java.lang.Iterable r5;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r5 = (java.lang.Iterable) $r2;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator)>(r5, $r0);

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;
    }

    public static final java.util.Map$Entry minBy(java.util.Map, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r7;
        java.lang.Comparable $r6, $r8;
        int $i0;
        java.util.Map$Entry $r9;
        java.lang.Iterable r10;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r10 = (java.lang.Iterable) $r2;

        $r3 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = null;

        goto label4;

     label1:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = $r5;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r6 = (java.lang.Comparable) $r5;

     label2:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r6.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 <= 0 goto label3;

        $r4 = $r5;

        $r6 = $r8;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        goto label2;

     label4:
        $r9 = (java.util.Map$Entry) $r4;

        return $r9;
    }

    public static final java.util.Map$Entry minWith(java.util.Map, java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;
        java.lang.Iterable r5;

        $r1 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r5 = (java.lang.Iterable) $r2;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator)>(r5, $r0);

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;
    }

