androidx.compose.ui.node.NodeChainKt
<androidx.compose.ui.node.NodeChainKt: androidx.compose.ui.node.NodeChainKt$SentinelHead$1 SentinelHead>
<androidx.compose.ui.node.NodeChainKt: int ActionReplace>
<androidx.compose.ui.node.NodeChainKt: int ActionUpdate>
<androidx.compose.ui.node.NodeChainKt: int ActionReuse>
    public static final int reuseActionForModifiers(androidx.compose.ui.Modifier$Element, androidx.compose.ui.Modifier$Element)
    {
        androidx.compose.ui.Modifier$Element r0, r1;
        boolean $z0, $z1;
        byte $b0;

        r0 := @parameter0: androidx.compose.ui.Modifier$Element;

        r1 := @parameter1: androidx.compose.ui.Modifier$Element;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "prev");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "next");

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label3;

     label1:
        $z1 = staticinvoke <androidx.compose.ui.ActualKt: boolean areObjectsOfSameType(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z1 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        return $b0;
    }

    private static final androidx.compose.ui.Modifier$Node updateUnsafe(androidx.compose.ui.node.ModifierNodeElement, androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.ui.node.ModifierNodeElement $r0;
        androidx.compose.ui.Modifier$Node r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.node.ModifierNodeElement;

        r1 := @parameter1: androidx.compose.ui.Modifier$Node;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r1, "null cannot be cast to non-null type T of androidx.compose.ui.node.NodeChainKt.updateUnsafe");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.node.ModifierNodeElement: androidx.compose.ui.Modifier$Node update(androidx.compose.ui.Modifier$Node)>(r1);

        return $r2;
    }

    private static final androidx.compose.runtime.collection.MutableVector fillVector(androidx.compose.ui.Modifier, androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.ui.Modifier $r0, $r9, $r11, r13;
        androidx.compose.runtime.collection.MutableVector r1, r2, $r3, r12;
        androidx.compose.ui.Modifier[] $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        boolean $z2, $z3, $z9;
        androidx.compose.ui.node.NodeChainKt$fillVector$1 $r6;
        kotlin.jvm.functions.Function1 $r7;
        androidx.compose.ui.CombinedModifier $r8, $r10;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.runtime.collection.MutableVector;

        i2 = virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $r3 = new androidx.compose.runtime.collection.MutableVector;

        $r4 = newarray (androidx.compose.ui.Modifier)[i2];

        specialinvoke $r3.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r4, 0);

        r12 = $r3;

        virtualinvoke r12.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r0);

        r2 = r12;

     label1:
        $z9 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean isNotEmpty()>();

        if $z9 == 0 goto label4;

        $i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i1 = $i0 - 1;

        $r5 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object removeAt(int)>($i1);

        r13 = (androidx.compose.ui.Modifier) $r5;

        $z2 = r13 instanceof androidx.compose.ui.CombinedModifier;

        if $z2 == 0 goto label2;

        $r8 = (androidx.compose.ui.CombinedModifier) r13;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.CombinedModifier: androidx.compose.ui.Modifier getInner$ui_release()>();

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r9);

        $r10 = (androidx.compose.ui.CombinedModifier) r13;

        $r11 = virtualinvoke $r10.<androidx.compose.ui.CombinedModifier: androidx.compose.ui.Modifier getOuter$ui_release()>();

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $z3 = r13 instanceof androidx.compose.ui.Modifier$Element;

        if $z3 == 0 goto label3;

        virtualinvoke r1.<androidx.compose.runtime.collection.MutableVector: boolean add(java.lang.Object)>(r13);

        goto label1;

     label3:
        $r6 = new androidx.compose.ui.node.NodeChainKt$fillVector$1;

        specialinvoke $r6.<androidx.compose.ui.node.NodeChainKt$fillVector$1: void <init>(androidx.compose.runtime.collection.MutableVector)>(r1);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        interfaceinvoke r13.<androidx.compose.ui.Modifier: boolean all(kotlin.jvm.functions.Function1)>($r7);

        goto label1;

     label4:
        return r1;
    }

    public static final androidx.compose.ui.node.NodeChainKt$SentinelHead$1 access$getSentinelHead$p()
    {
        androidx.compose.ui.node.NodeChainKt$SentinelHead$1 $r0;

        $r0 = <androidx.compose.ui.node.NodeChainKt: androidx.compose.ui.node.NodeChainKt$SentinelHead$1 SentinelHead>;

        return $r0;
    }

    public static final androidx.compose.runtime.collection.MutableVector access$fillVector(androidx.compose.ui.Modifier, androidx.compose.runtime.collection.MutableVector)
    {
        androidx.compose.ui.Modifier $r0;
        androidx.compose.runtime.collection.MutableVector r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.Modifier;

        r1 := @parameter1: androidx.compose.runtime.collection.MutableVector;

        $r2 = staticinvoke <androidx.compose.ui.node.NodeChainKt: androidx.compose.runtime.collection.MutableVector fillVector(androidx.compose.ui.Modifier,androidx.compose.runtime.collection.MutableVector)>($r0, r1);

        return $r2;
    }

    public static final androidx.compose.ui.Modifier$Node access$updateUnsafe(androidx.compose.ui.node.ModifierNodeElement, androidx.compose.ui.Modifier$Node)
    {
        androidx.compose.ui.node.ModifierNodeElement $r0;
        androidx.compose.ui.Modifier$Node r1, $r2;

        $r0 := @parameter0: androidx.compose.ui.node.ModifierNodeElement;

        r1 := @parameter1: androidx.compose.ui.Modifier$Node;

        $r2 = staticinvoke <androidx.compose.ui.node.NodeChainKt: androidx.compose.ui.Modifier$Node updateUnsafe(androidx.compose.ui.node.ModifierNodeElement,androidx.compose.ui.Modifier$Node)>($r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.compose.ui.node.NodeChainKt$SentinelHead$1 $r0;

        $r0 = new androidx.compose.ui.node.NodeChainKt$SentinelHead$1;

        specialinvoke $r0.<androidx.compose.ui.node.NodeChainKt$SentinelHead$1: void <init>()>();

        <androidx.compose.ui.node.NodeChainKt: androidx.compose.ui.node.NodeChainKt$SentinelHead$1 SentinelHead> = $r0;

        return;
    }

