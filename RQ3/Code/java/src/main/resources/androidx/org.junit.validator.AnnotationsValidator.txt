org.junit.validator.AnnotationsValidator
<org.junit.validator.AnnotationsValidator: java.util.List VALIDATORS>
    static void <clinit>()
    {
        java.util.List $r0;
        org.junit.validator.AnnotationsValidator$AnnotatableValidator[] $r1;
        org.junit.validator.AnnotationsValidator$ClassValidator $r2;
        org.junit.validator.AnnotationsValidator$MethodValidator $r3;
        org.junit.validator.AnnotationsValidator$FieldValidator $r4;

        $r1 = newarray (org.junit.validator.AnnotationsValidator$AnnotatableValidator)[3];

        $r2 = new org.junit.validator.AnnotationsValidator$ClassValidator;

        specialinvoke $r2.<org.junit.validator.AnnotationsValidator$ClassValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r1[0] = $r2;

        $r3 = new org.junit.validator.AnnotationsValidator$MethodValidator;

        specialinvoke $r3.<org.junit.validator.AnnotationsValidator$MethodValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r1[1] = $r3;

        $r4 = new org.junit.validator.AnnotationsValidator$FieldValidator;

        specialinvoke $r4.<org.junit.validator.AnnotationsValidator$FieldValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r1[2] = $r4;

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        <org.junit.validator.AnnotationsValidator: java.util.List VALIDATORS> = $r0;

        return;
    }

    public void <init>()
    {
        org.junit.validator.AnnotationsValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationsValidator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List validateTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.ArrayList $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.junit.validator.AnnotationsValidator$AnnotatableValidator $r6;

        $r0 := @this: org.junit.validator.AnnotationsValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = <org.junit.validator.AnnotationsValidator: java.util.List VALIDATORS>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.validator.AnnotationsValidator$AnnotatableValidator) $r5;

        $r3 = virtualinvoke $r6.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateTestClass(org.junit.runners.model.TestClass)>($r1);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        goto label1;

     label2:
        return $r2;
    }

org.junit.validator.AnnotationsValidator$1
org.junit.validator.AnnotationsValidator$AnnotatableValidator-IA
org.junit.validator.AnnotationsValidator$AnnotatableValidator
<org.junit.validator.AnnotationsValidator$AnnotatableValidator: org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY>
    static void <clinit>()
    {
        org.junit.validator.AnnotationValidatorFactory $r0;

        $r0 = new org.junit.validator.AnnotationValidatorFactory;

        specialinvoke $r0.<org.junit.validator.AnnotationValidatorFactory: void <init>()>();

        <org.junit.validator.AnnotationsValidator$AnnotatableValidator: org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY> = $r0;

        return;
    }

    private void <init>()
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.validator.AnnotationsValidator$1)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator $r0;
        org.junit.validator.AnnotationsValidator$1 $r1;

        $r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationsValidator$1;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: void <init>()>();

        return;
    }

    private java.util.List validateAnnotatable(org.junit.runners.model.Annotatable)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator $r0;
        org.junit.runners.model.Annotatable $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.'annotation'.Annotation[] $r3;
        java.lang.'annotation'.Annotation $r4;
        java.lang.Class $r5;
        org.junit.validator.ValidateWith $r6;
        org.junit.validator.AnnotationValidatorFactory $r7;
        org.junit.validator.AnnotationValidator $r8;
        java.util.List $r9;

        $r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        $r1 := @parameter0: org.junit.runners.model.Annotatable;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<org.junit.runners.model.Annotatable: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r3[$i1];

        $r5 = interfaceinvoke $r4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r4 = virtualinvoke $r5.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/validator/ValidateWith;");

        $r6 = (org.junit.validator.ValidateWith) $r4;

        if $r6 == null goto label2;

        $r7 = <org.junit.validator.AnnotationsValidator$AnnotatableValidator: org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY>;

        $r8 = virtualinvoke $r7.<org.junit.validator.AnnotationValidatorFactory: org.junit.validator.AnnotationValidator createAnnotationValidator(org.junit.validator.ValidateWith)>($r6);

        $r9 = virtualinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.Annotatable)>($r8, $r1);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r2;
    }

<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)>
<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.Annotatable)>
    public java.util.List validateTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.ArrayList $r2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.junit.runners.model.Annotatable $r6;
        java.util.List $r7;

        $r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)>($r1);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.runners.model.Annotatable) $r5;

        $r7 = specialinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateAnnotatable(org.junit.runners.model.Annotatable)>($r6);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        goto label1;

     label2:
        return $r2;
    }

org.junit.validator.AnnotationsValidator$ClassValidator-IA
org.junit.validator.AnnotationsValidator$ClassValidator
    private void <init>()
    {
        org.junit.validator.AnnotationsValidator$ClassValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationsValidator$ClassValidator;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        return;
    }

    void <init>(org.junit.validator.AnnotationsValidator$1)
    {
        org.junit.validator.AnnotationsValidator$ClassValidator $r0;
        org.junit.validator.AnnotationsValidator$1 $r1;

        $r0 := @this: org.junit.validator.AnnotationsValidator$ClassValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationsValidator$1;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$ClassValidator: void <init>()>();

        return;
    }

    java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$ClassValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.List $r2;

        $r0 := @this: org.junit.validator.AnnotationsValidator$ClassValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    volatile java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.Annotatable)
    {
        org.junit.validator.AnnotationsValidator$ClassValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        java.util.List $r2;
        org.junit.runners.model.Annotatable $r3;
        org.junit.runners.model.TestClass $r4;

        $r0 := @this: org.junit.validator.AnnotationsValidator$ClassValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r3 := @parameter1: org.junit.runners.model.Annotatable;

        $r4 = (org.junit.runners.model.TestClass) $r3;

        $r2 = virtualinvoke $r0.<org.junit.validator.AnnotationsValidator$ClassValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.TestClass)>($r1, $r4);

        return $r2;
    }

    java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$ClassValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        org.junit.runners.model.TestClass $r2;
        java.util.List $r3;

        $r0 := @this: org.junit.validator.AnnotationsValidator$ClassValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r2 := @parameter1: org.junit.runners.model.TestClass;

        $r3 = virtualinvoke $r1.<org.junit.validator.AnnotationValidator: java.util.List validateAnnotatedClass(org.junit.runners.model.TestClass)>($r2);

        return $r3;
    }

org.junit.validator.AnnotationsValidator$FieldValidator-IA
org.junit.validator.AnnotationsValidator$FieldValidator
    private void <init>()
    {
        org.junit.validator.AnnotationsValidator$FieldValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationsValidator$FieldValidator;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        return;
    }

    void <init>(org.junit.validator.AnnotationsValidator$1)
    {
        org.junit.validator.AnnotationsValidator$FieldValidator $r0;
        org.junit.validator.AnnotationsValidator$1 $r1;

        $r0 := @this: org.junit.validator.AnnotationsValidator$FieldValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationsValidator$1;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$FieldValidator: void <init>()>();

        return;
    }

    java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$FieldValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.List $r2;

        $r0 := @this: org.junit.validator.AnnotationsValidator$FieldValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedFields()>();

        return $r2;
    }

    volatile java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.Annotatable)
    {
        org.junit.validator.AnnotationsValidator$FieldValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        java.util.List $r2;
        org.junit.runners.model.Annotatable $r3;
        org.junit.runners.model.FrameworkField $r4;

        $r0 := @this: org.junit.validator.AnnotationsValidator$FieldValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r3 := @parameter1: org.junit.runners.model.Annotatable;

        $r4 = (org.junit.runners.model.FrameworkField) $r3;

        $r2 = virtualinvoke $r0.<org.junit.validator.AnnotationsValidator$FieldValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.FrameworkField)>($r1, $r4);

        return $r2;
    }

    java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.FrameworkField)
    {
        org.junit.validator.AnnotationsValidator$FieldValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        org.junit.runners.model.FrameworkField $r2;
        java.util.List $r3;

        $r0 := @this: org.junit.validator.AnnotationsValidator$FieldValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r2 := @parameter1: org.junit.runners.model.FrameworkField;

        $r3 = virtualinvoke $r1.<org.junit.validator.AnnotationValidator: java.util.List validateAnnotatedField(org.junit.runners.model.FrameworkField)>($r2);

        return $r3;
    }

org.junit.validator.AnnotationsValidator$MethodValidator-IA
org.junit.validator.AnnotationsValidator$MethodValidator
    private void <init>()
    {
        org.junit.validator.AnnotationsValidator$MethodValidator $r0;

        $r0 := @this: org.junit.validator.AnnotationsValidator$MethodValidator;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        return;
    }

    void <init>(org.junit.validator.AnnotationsValidator$1)
    {
        org.junit.validator.AnnotationsValidator$MethodValidator $r0;
        org.junit.validator.AnnotationsValidator$1 $r1;

        $r0 := @this: org.junit.validator.AnnotationsValidator$MethodValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationsValidator$1;

        specialinvoke $r0.<org.junit.validator.AnnotationsValidator$MethodValidator: void <init>()>();

        return;
    }

    java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$MethodValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.List $r2;

        $r0 := @this: org.junit.validator.AnnotationsValidator$MethodValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods()>();

        return $r2;
    }

    volatile java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.Annotatable)
    {
        org.junit.validator.AnnotationsValidator$MethodValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        java.util.List $r2;
        org.junit.runners.model.Annotatable $r3;
        org.junit.runners.model.FrameworkMethod $r4;

        $r0 := @this: org.junit.validator.AnnotationsValidator$MethodValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r3 := @parameter1: org.junit.runners.model.Annotatable;

        $r4 = (org.junit.runners.model.FrameworkMethod) $r3;

        $r2 = virtualinvoke $r0.<org.junit.validator.AnnotationsValidator$MethodValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.FrameworkMethod)>($r1, $r4);

        return $r2;
    }

    java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.FrameworkMethod)
    {
        org.junit.validator.AnnotationsValidator$MethodValidator $r0;
        org.junit.validator.AnnotationValidator $r1;
        org.junit.runners.model.FrameworkMethod $r2;
        java.util.List $r3;

        $r0 := @this: org.junit.validator.AnnotationsValidator$MethodValidator;

        $r1 := @parameter0: org.junit.validator.AnnotationValidator;

        $r2 := @parameter1: org.junit.runners.model.FrameworkMethod;

        $r3 = virtualinvoke $r1.<org.junit.validator.AnnotationValidator: java.util.List validateAnnotatedMethod(org.junit.runners.model.FrameworkMethod)>($r2);

        return $r3;
    }

