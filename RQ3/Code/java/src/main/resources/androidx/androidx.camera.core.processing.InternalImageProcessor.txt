androidx.camera.core.processing.InternalImageProcessor
<androidx.camera.core.processing.InternalImageProcessor: java.util.concurrent.Executor mExecutor>
<androidx.camera.core.processing.InternalImageProcessor: androidx.camera.core.ImageProcessor mImageProcessor>
    public void <init>(androidx.camera.core.CameraEffect)
    {
        androidx.camera.core.processing.InternalImageProcessor r0;
        androidx.camera.core.CameraEffect r1;
        int $i0;
        java.util.concurrent.Executor $r2;
        androidx.camera.core.ImageProcessor $r3, $r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.camera.core.processing.InternalImageProcessor;

        r1 := @parameter0: androidx.camera.core.CameraEffect;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<androidx.camera.core.CameraEffect: int getTargets()>();

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z0);

        $r2 = virtualinvoke r1.<androidx.camera.core.CameraEffect: java.util.concurrent.Executor getProcessorExecutor()>();

        r0.<androidx.camera.core.processing.InternalImageProcessor: java.util.concurrent.Executor mExecutor> = $r2;

        $r3 = virtualinvoke r1.<androidx.camera.core.CameraEffect: androidx.camera.core.ImageProcessor getImageProcessor()>();

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r3);

        $r5 = (androidx.camera.core.ImageProcessor) $r4;

        r0.<androidx.camera.core.processing.InternalImageProcessor: androidx.camera.core.ImageProcessor mImageProcessor> = $r5;

        return;
    }

    public androidx.camera.core.ImageProcessor$Response safeProcess(androidx.camera.core.ImageProcessor$Request) throws androidx.camera.core.ImageCaptureException
    {
        androidx.camera.core.processing.InternalImageProcessor r0;
        androidx.camera.core.ImageProcessor$Request r1;
        java.lang.Throwable r2, r3, $r8, $r9, $r11, r13;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;
        java.lang.Object $r6;
        androidx.camera.core.ImageProcessor$Response $r7;
        androidx.camera.core.ImageCaptureException r12;

        r0 := @this: androidx.camera.core.processing.InternalImageProcessor;

        r1 := @parameter0: androidx.camera.core.ImageProcessor$Request;

     label1:
        $r4 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.core.processing.InternalImageProcessor,androidx.camera.core.ImageProcessor$Request)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.processing.InternalImageProcessor: java.lang.Object lambda$safeProcess$1(androidx.camera.core.ImageProcessor$Request,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r5 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r4);

        $r6 = interfaceinvoke $r5.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r7 = (androidx.camera.core.ImageProcessor$Response) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.Throwable getCause()>();

        if $r9 == null goto label4;

        $r11 = virtualinvoke r2.<java.lang.Exception: java.lang.Throwable getCause()>();

        goto label5;

     label4:
        $r11 = r2;

     label5:
        r3 = $r11;

        r12 = new androidx.camera.core.ImageCaptureException;

        specialinvoke r12.<androidx.camera.core.ImageCaptureException: void <init>(int,java.lang.String,java.lang.Throwable)>(0, "Failed to invoke ImageProcessor.", r3);

        r13 = (java.lang.Throwable) r12;

        throw r13;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private java.lang.Object lambda$safeProcess$1(androidx.camera.core.ImageProcessor$Request, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.core.processing.InternalImageProcessor r0;
        androidx.camera.core.ImageProcessor$Request r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;
        java.lang.String $r8;

        r0 := @this: androidx.camera.core.processing.InternalImageProcessor;

        r1 := @parameter0: androidx.camera.core.ImageProcessor$Request;

        r2 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.core.processing.InternalImageProcessor: java.util.concurrent.Executor mExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.processing.InternalImageProcessor,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ImageProcessor$Request)>(r0, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.processing.InternalImageProcessor: void lambda$safeProcess$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.camera.core.ImageProcessor$Request)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InternalImageProcessor#process ");

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void lambda$safeProcess$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer, androidx.camera.core.ImageProcessor$Request)
    {
        androidx.camera.core.processing.InternalImageProcessor r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.core.ImageProcessor$Request r2;
        java.lang.Throwable r3, $r6;
        androidx.camera.core.ImageProcessor $r4;
        androidx.camera.core.ImageProcessor$Response $r5;

        r0 := @this: androidx.camera.core.processing.InternalImageProcessor;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 := @parameter1: androidx.camera.core.ImageProcessor$Request;

     label1:
        $r4 = r0.<androidx.camera.core.processing.InternalImageProcessor: androidx.camera.core.ImageProcessor mImageProcessor>;

        $r5 = interfaceinvoke $r4.<androidx.camera.core.ImageProcessor: androidx.camera.core.ImageProcessor$Response process(androidx.camera.core.ImageProcessor$Request)>(r2);

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r3);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

