androidx.test.espresso.remote.InteractionResponse
<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.EspressoRemoteMessage$From FROM>
<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$Status status>
<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>
    static volatile androidx.test.espresso.remote.EspressoRemoteMessage$From '-$$Nest$sfgetFROM'()
    {
        androidx.test.espresso.remote.EspressoRemoteMessage$From $r0;

        $r0 = <androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.EspressoRemoteMessage$From FROM>;

        return $r0;
    }

    public androidx.test.espresso.remote.InteractionResponse$RemoteError getRemoteError()
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        $r1 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        return $r1;
    }

    public androidx.test.espresso.remote.InteractionResponse$Status getStatus()
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.InteractionResponse$Status $r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        $r1 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$Status status>;

        return $r1;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.MessageLite toProto()
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder r1, r13;
        androidx.test.espresso.remote.InteractionResponse$Status $r2, $r3;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r4, $r7, $r9;
        androidx.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite $r5;
        androidx.test.espresso.proto.UiInteraction$Error$Builder $r6, $r8, $r11;
        int $i0;
        java.lang.String $r10;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        r1 = staticinvoke <androidx.test.espresso.proto.UiInteraction$InteractionResultProto: androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder newBuilder()>();

        $r3 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Ok>;

        $r2 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$Status status>;

        if $r3 != $r2 goto label3;

        z0 = 1;

     label1:
        r13 = virtualinvoke r1.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder: androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder setOk(boolean)>(z0);

        $r4 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        if $r4 == null goto label2;

        $r6 = staticinvoke <androidx.test.espresso.proto.UiInteraction$Error: androidx.test.espresso.proto.UiInteraction$Error$Builder newBuilder()>();

        $r7 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        $i0 = virtualinvoke $r7.<androidx.test.espresso.remote.InteractionResponse$RemoteError: int getCode()>();

        $r8 = virtualinvoke $r6.<androidx.test.espresso.proto.UiInteraction$Error$Builder: androidx.test.espresso.proto.UiInteraction$Error$Builder setCode(int)>($i0);

        $r9 = r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        $r10 = virtualinvoke $r9.<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String getDescription()>();

        $r11 = virtualinvoke $r8.<androidx.test.espresso.proto.UiInteraction$Error$Builder: androidx.test.espresso.proto.UiInteraction$Error$Builder setDescription(java.lang.String)>($r10);

        virtualinvoke r13.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder: androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder setErrorMsg(androidx.test.espresso.proto.UiInteraction$Error$Builder)>($r11);

     label2:
        $r5 = virtualinvoke r13.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto$Builder: androidx.test.espresso.remote.internal.deps.protobuf.GeneratedMessageLite build()>();

        return $r5;

     label3:
        z0 = 0;

        goto label1;
    }

    public volatile java.lang.Object toProto()
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite $r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite toProto()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.InteractionResponse$1 r0;

        r0 = new androidx.test.espresso.remote.InteractionResponse$1;

        specialinvoke r0.<androidx.test.espresso.remote.InteractionResponse$1: void <init>()>();

        <androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.EspressoRemoteMessage$From FROM> = r0;

        return;
    }

    private void <init>(androidx.test.espresso.remote.InteractionResponse$Builder)
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.InteractionResponse$Builder r1;
        androidx.test.espresso.remote.InteractionResponse$Status $r2;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r3;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        r1 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Builder;

        $r2 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Status '-$$Nest$fgetstatus'(androidx.test.espresso.remote.InteractionResponse$Builder)>(r1);

        $r3 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$RemoteError '-$$Nest$fgetremoteError'(androidx.test.espresso.remote.InteractionResponse$Builder)>(r1);

        specialinvoke r0.<androidx.test.espresso.remote.InteractionResponse: void <init>(androidx.test.espresso.remote.InteractionResponse$Status,androidx.test.espresso.remote.InteractionResponse$RemoteError)>($r2, $r3);

        return;
    }

    void <init>(androidx.test.espresso.remote.InteractionResponse$Builder, androidx.test.espresso.remote.InteractionResponse-IA)
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.InteractionResponse$Builder r1;
        androidx.test.espresso.remote.InteractionResponse-IA r2;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        r1 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Builder;

        r2 := @parameter1: androidx.test.espresso.remote.InteractionResponse-IA;

        specialinvoke r0.<androidx.test.espresso.remote.InteractionResponse: void <init>(androidx.test.espresso.remote.InteractionResponse$Builder)>(r1);

        return;
    }

    void <init>(androidx.test.espresso.remote.InteractionResponse$Status, androidx.test.espresso.remote.InteractionResponse$RemoteError)
    {
        androidx.test.espresso.remote.InteractionResponse r0;
        androidx.test.espresso.remote.InteractionResponse$Status r1;
        androidx.test.espresso.remote.InteractionResponse$RemoteError r2;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse;

        r1 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Status;

        r2 := @parameter1: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$Status status> = r1;

        r0.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError> = r2;

        return;
    }

    public boolean hasRemoteError()
    {
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r0;
        androidx.test.espresso.remote.InteractionResponse r1;
        boolean z0;

        r1 := @this: androidx.test.espresso.remote.InteractionResponse;

        $r0 = r1.<androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        if $r0 == null goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.remote.InteractionResponse$1
    public androidx.test.espresso.remote.InteractionResponse fromProto(androidx.test.espresso.proto.UiInteraction$InteractionResultProto)
    {
        boolean z0, $z1, $z2;
        androidx.test.espresso.remote.InteractionResponse$Builder $r0, $r1, r10;
        androidx.test.espresso.remote.InteractionResponse $r2;
        java.lang.String $r3, r7;
        androidx.test.espresso.remote.InteractionResponse$1 r4;
        androidx.test.espresso.proto.UiInteraction$InteractionResultProto r5;
        androidx.test.espresso.proto.UiInteraction$Error r6;
        int i0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError r8, r9, r12;
        androidx.test.espresso.remote.InteractionResponse$Status r11;

        r4 := @this: androidx.test.espresso.remote.InteractionResponse$1;

        r5 := @parameter0: androidx.test.espresso.proto.UiInteraction$InteractionResultProto;

        z0 = virtualinvoke r5.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto: boolean getOk()>();

        $z1 = virtualinvoke r5.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto: boolean hasErrorMsg()>();

        if $z1 == 0 goto label5;

        r6 = virtualinvoke r5.<androidx.test.espresso.proto.UiInteraction$InteractionResultProto: androidx.test.espresso.proto.UiInteraction$Error getErrorMsg()>();

        i0 = virtualinvoke r6.<androidx.test.espresso.proto.UiInteraction$Error: int getCode()>();

        r7 = virtualinvoke r6.<androidx.test.espresso.proto.UiInteraction$Error: java.lang.String getDescription()>();

        $z2 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: boolean '-$$Nest$smisWellKnownError'(int)>(i0);

        if $z2 == 0 goto label4;

        r8 = new androidx.test.espresso.remote.InteractionResponse$RemoteError;

        $r3 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String getWellKnownFormattedErrorDescription(int,java.lang.String)>(i0, r7);

        specialinvoke r8.<androidx.test.espresso.remote.InteractionResponse$RemoteError: void <init>(int,java.lang.String)>(i0, $r3);

        r9 = r8;

     label1:
        r10 = new androidx.test.espresso.remote.InteractionResponse$Builder;

        specialinvoke r10.<androidx.test.espresso.remote.InteractionResponse$Builder: void <init>()>();

        if z0 == 0 goto label3;

        r11 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Ok>;

     label2:
        $r0 = virtualinvoke r10.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Builder setStatus(androidx.test.espresso.remote.InteractionResponse$Status)>(r11);

        $r1 = virtualinvoke $r0.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Builder setRemoteError(androidx.test.espresso.remote.InteractionResponse$RemoteError)>(r9);

        $r2 = virtualinvoke $r1.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse build()>();

        return $r2;

     label3:
        r11 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Error>;

        goto label2;

     label4:
        r12 = new androidx.test.espresso.remote.InteractionResponse$RemoteError;

        specialinvoke r12.<androidx.test.espresso.remote.InteractionResponse$RemoteError: void <init>(int,java.lang.String)>(i0, r7);

        r9 = r12;

        goto label1;

     label5:
        r9 = null;

        goto label1;
    }

    public volatile java.lang.Object fromProto(java.lang.Object)
    {
        androidx.test.espresso.remote.InteractionResponse$1 r0;
        java.lang.Object r1;
        androidx.test.espresso.proto.UiInteraction$InteractionResultProto $r2;
        androidx.test.espresso.remote.InteractionResponse $r3;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.proto.UiInteraction$InteractionResultProto) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.remote.InteractionResponse$1: androidx.test.espresso.remote.InteractionResponse fromProto(androidx.test.espresso.proto.UiInteraction$InteractionResultProto)>($r2);

        return $r3;
    }

    void <init>()
    {
        androidx.test.espresso.remote.InteractionResponse$1 r0;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.remote.InteractionResponse$Builder
<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Status status>
<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>
<androidx.test.espresso.remote.InteractionResponse$Builder: byte[] interactionResultProtoByteArray>
    public androidx.test.espresso.remote.InteractionResponse$Builder setRemoteError(androidx.test.espresso.remote.InteractionResponse$RemoteError)
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$Builder;

        r1 := @parameter0: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        r0.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError> = r1;

        return r0;
    }

    public androidx.test.espresso.remote.InteractionResponse$Builder setResultProto(byte[])
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;
        byte[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$Builder;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "protoByteArray cannot benull!");

        $r3 = (byte[]) $r2;

        r0.<androidx.test.espresso.remote.InteractionResponse$Builder: byte[] interactionResultProtoByteArray> = $r3;

        return r0;
    }

    public androidx.test.espresso.remote.InteractionResponse$Builder setStatus(androidx.test.espresso.remote.InteractionResponse$Status)
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;
        androidx.test.espresso.remote.InteractionResponse$Status r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$Builder;

        r1 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Status;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.test.espresso.remote.InteractionResponse$Status) $r2;

        r0.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Status status> = $r3;

        return r0;
    }

    static volatile androidx.test.espresso.remote.InteractionResponse$RemoteError '-$$Nest$fgetremoteError'(androidx.test.espresso.remote.InteractionResponse$Builder)
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r1;

        r0 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Builder;

        $r1 = r0.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        return $r1;
    }

    static volatile androidx.test.espresso.remote.InteractionResponse$Status '-$$Nest$fgetstatus'(androidx.test.espresso.remote.InteractionResponse$Builder)
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;
        androidx.test.espresso.remote.InteractionResponse$Status $r1;

        r0 := @parameter0: androidx.test.espresso.remote.InteractionResponse$Builder;

        $r1 = r0.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Status status>;

        return $r1;
    }

    public androidx.test.espresso.remote.InteractionResponse build()
    {
        androidx.test.espresso.remote.InteractionResponse r0, $r6;
        androidx.test.espresso.remote.InteractionResponse$Status $r1;
        byte[] $r2, $r3, r10;
        androidx.test.espresso.remote.EspressoRemoteMessage$From $r4;
        java.lang.Object $r5;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r7;
        androidx.test.espresso.remote.InteractionResponse$Builder r8;
        androidx.test.espresso.remote.RemoteProtocolException r9;
        androidx.test.espresso.proto.UiInteraction$InteractionResultProto r11;

        r8 := @this: androidx.test.espresso.remote.InteractionResponse$Builder;

        $r1 = r8.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$Status status>;

        if $r1 != null goto label1;

        $r7 = r8.<androidx.test.espresso.remote.InteractionResponse$Builder: androidx.test.espresso.remote.InteractionResponse$RemoteError remoteError>;

        if $r7 == null goto label2;

     label1:
        $r2 = r8.<androidx.test.espresso.remote.InteractionResponse$Builder: byte[] interactionResultProtoByteArray>;

        if $r2 == null goto label2;

        r9 = new androidx.test.espresso.remote.RemoteProtocolException;

        specialinvoke r9.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>("Instances can either be create from an status and optional remote error or an interaction result proto byte array but not both!");

        throw r9;

     label2:
        $r3 = r8.<androidx.test.espresso.remote.InteractionResponse$Builder: byte[] interactionResultProtoByteArray>;

        if $r3 == null goto label3;

        r10 = r8.<androidx.test.espresso.remote.InteractionResponse$Builder: byte[] interactionResultProtoByteArray>;

        r11 = staticinvoke <androidx.test.espresso.proto.UiInteraction$InteractionResultProto: androidx.test.espresso.proto.UiInteraction$InteractionResultProto parseFrom(byte[])>(r10);

        $r4 = staticinvoke <androidx.test.espresso.remote.InteractionResponse: androidx.test.espresso.remote.EspressoRemoteMessage$From '-$$Nest$sfgetFROM'()>();

        $r5 = interfaceinvoke $r4.<androidx.test.espresso.remote.EspressoRemoteMessage$From: java.lang.Object fromProto(java.lang.Object)>(r11);

        $r6 = (androidx.test.espresso.remote.InteractionResponse) $r5;

        return $r6;

     label3:
        r0 = new androidx.test.espresso.remote.InteractionResponse;

        specialinvoke r0.<androidx.test.espresso.remote.InteractionResponse: void <init>(androidx.test.espresso.remote.InteractionResponse$Builder,androidx.test.espresso.remote.InteractionResponse-IA)>(r8, null);

        return r0;
    }

    public void <init>()
    {
        androidx.test.espresso.remote.InteractionResponse$Builder r0;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.remote.InteractionResponse$RemoteError
<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String TAG>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: int REMOTE_ESPRESSO_ERROR_CODE>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: int REMOTE_PROTOCOL_ERROR_CODE>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_ESPRESSO_ERROR>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_PROTOCOL_ERROR>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: android.util.SparseArray lookup>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: int code>
<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String description>
    public int getCode()
    {
        androidx.test.espresso.remote.InteractionResponse$RemoteError r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        $i0 = r0.<androidx.test.espresso.remote.InteractionResponse$RemoteError: int code>;

        return $i0;
    }

    private static androidx.test.espresso.remote.InteractionResponse$RemoteError getWellKnownError(int)
    {
        int i0;
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r2;

        i0 := @parameter0: int;

        $r0 = <androidx.test.espresso.remote.InteractionResponse$RemoteError: android.util.SparseArray lookup>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r2 = (androidx.test.espresso.remote.InteractionResponse$RemoteError) $r1;

        return $r2;
    }

    private static java.lang.String formatDescription(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, $r6, r7, r9;
        java.lang.Object[] r1;
        boolean $z0, z1;
        java.lang.Integer $r2;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4, $r5, r10;
        int i1;
        java.util.Locale r8;

        r7 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z0 != 0 goto label6;

        z1 = 1;

     label1:
        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z1, "description cannot be empty!");

        if r0 == null goto label5;

     label2:
        r8 = <java.util.Locale: java.util.Locale ROOT>;

        r1 = newarray (java.lang.Object)[2];

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r1[0] = $r2;

        r1[1] = r0;

        r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r8, r7, r1);

     label4:
        r7 = r9;

     label5:
        return r7;

     label6:
        z1 = 0;

        goto label1;

     label7:
        $r3 := @caughtexception;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot format remote error description: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemoteError", $r6);

        goto label5;

        catch java.util.IllegalFormatException from label2 to label3 with label7;
        catch java.util.IllegalFormatException from label3 to label4 with label7;
    }

    public java.lang.String getDescription()
    {
        androidx.test.espresso.remote.InteractionResponse$RemoteError r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        $r1 = r0.<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String description>;

        return $r1;
    }

    static java.lang.String getWellKnownFormattedErrorDescription(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r2, $r3;
        boolean $z0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: boolean isWellKnownError(int)>(i0);

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: void checkState(boolean)>($z0);

        $r1 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError getWellKnownError(int)>(i0);

        $r2 = virtualinvoke $r1.<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String getDescription()>();

        $r3 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String formatDescription(java.lang.String,int,java.lang.String)>($r2, i0, r0);

        return $r3;
    }

    public java.lang.String toString()
    {
        int i0;
        java.lang.StringBuilder r0, $r1, $r2, $r3;
        java.lang.String $r4, r6;
        androidx.test.espresso.remote.InteractionResponse$RemoteError r5;

        r5 := @this: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        i0 = r5.<androidx.test.espresso.remote.InteractionResponse$RemoteError: int code>;

        r6 = r5.<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String description>;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.InteractionResponse$RemoteError r0, $r1, $r2, r6, r7;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.util.SparseArray $r5, r8;
        int $i0;
        androidx.test.espresso.remote.InteractionResponse$RemoteError[] r9;
        java.util.Iterator r10;

        r6 = new androidx.test.espresso.remote.InteractionResponse$RemoteError;

        specialinvoke r6.<androidx.test.espresso.remote.InteractionResponse$RemoteError: void <init>(int,java.lang.String)>(0, "The following remote Espresso exception with error code [%s] occurred:\n%s");

        <androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_ESPRESSO_ERROR> = r6;

        r7 = new androidx.test.espresso.remote.InteractionResponse$RemoteError;

        specialinvoke r7.<androidx.test.espresso.remote.InteractionResponse$RemoteError: void <init>(int,java.lang.String)>(1, "The following remote protocol Espresso exception with error code [%s] occurred:\n%s");

        <androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_PROTOCOL_ERROR> = r7;

        r8 = new android.util.SparseArray;

        specialinvoke r8.<android.util.SparseArray: void <init>()>();

        <androidx.test.espresso.remote.InteractionResponse$RemoteError: android.util.SparseArray lookup> = r8;

        r9 = newarray (androidx.test.espresso.remote.InteractionResponse$RemoteError)[2];

        $r1 = <androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_ESPRESSO_ERROR>;

        r9[0] = $r1;

        $r2 = <androidx.test.espresso.remote.InteractionResponse$RemoteError: androidx.test.espresso.remote.InteractionResponse$RemoteError REMOTE_PROTOCOL_ERROR>;

        r9[1] = $r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);

        r10 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r0 = (androidx.test.espresso.remote.InteractionResponse$RemoteError) $r4;

        $r5 = <androidx.test.espresso.remote.InteractionResponse$RemoteError: android.util.SparseArray lookup>;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.InteractionResponse$RemoteError: int getCode()>();

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r0);

        goto label1;

     label2:
        return;
    }

    void <init>(int, java.lang.String)
    {
        androidx.test.espresso.remote.InteractionResponse$RemoteError r0;
        int i0;
        java.lang.String r1;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$RemoteError;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.remote.InteractionResponse$RemoteError: int code> = i0;

        r0.<androidx.test.espresso.remote.InteractionResponse$RemoteError: java.lang.String description> = r1;

        return;
    }

    static volatile boolean '-$$Nest$smisWellKnownError'(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$RemoteError: boolean isWellKnownError(int)>(i0);

        return $z0;
    }

    private static boolean isWellKnownError(int)
    {
        android.util.SparseArray $r0;
        java.lang.Object $r1;
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        $r0 = <androidx.test.espresso.remote.InteractionResponse$RemoteError: android.util.SparseArray lookup>;

        $r1 = virtualinvoke $r0.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        if $r1 == null goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.remote.InteractionResponse$Status
<androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Ok>
<androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Error>
<androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status[] $VALUES>
    public static androidx.test.espresso.remote.InteractionResponse$Status valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.test.espresso.remote.InteractionResponse$Status $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/remote/InteractionResponse$Status;", r0);

        $r2 = (androidx.test.espresso.remote.InteractionResponse$Status) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.test.espresso.remote.InteractionResponse$Status[] $r0;
        androidx.test.espresso.remote.InteractionResponse$Status r1, r2;

        r1 = new androidx.test.espresso.remote.InteractionResponse$Status;

        specialinvoke r1.<androidx.test.espresso.remote.InteractionResponse$Status: void <init>(java.lang.String,int)>("Ok", 0);

        <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Ok> = r1;

        r2 = new androidx.test.espresso.remote.InteractionResponse$Status;

        specialinvoke r2.<androidx.test.espresso.remote.InteractionResponse$Status: void <init>(java.lang.String,int)>("Error", 1);

        <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Error> = r2;

        $r0 = staticinvoke <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status[] $values()>();

        <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.espresso.remote.InteractionResponse$Status r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.remote.InteractionResponse$Status;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.test.espresso.remote.InteractionResponse$Status[] $values()
    {
        androidx.test.espresso.remote.InteractionResponse$Status[] r0;
        androidx.test.espresso.remote.InteractionResponse$Status $r1, $r2;

        r0 = newarray (androidx.test.espresso.remote.InteractionResponse$Status)[2];

        $r1 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Ok>;

        r0[0] = $r1;

        $r2 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status Error>;

        r0[1] = $r2;

        return r0;
    }

    public static androidx.test.espresso.remote.InteractionResponse$Status[] values()
    {
        androidx.test.espresso.remote.InteractionResponse$Status[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.espresso.remote.InteractionResponse$Status: androidx.test.espresso.remote.InteractionResponse$Status[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.espresso.remote.InteractionResponse$Status[]) $r1;

        return $r2;
    }

