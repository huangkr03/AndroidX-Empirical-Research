kotlin.collections.MutableMapWithDefaultImpl
<kotlin.collections.MutableMapWithDefaultImpl: kotlin.jvm.functions.Function1 'default'>
<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map map>
    public void <init>(java.util.Map, kotlin.jvm.functions.Function1)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "map");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "default");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map map> = $r1;

        $r0.<kotlin.collections.MutableMapWithDefaultImpl: kotlin.jvm.functions.Function1 'default'> = $r2;

        return;
    }

    public void clear()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1;
        java.util.Map $r2;
        boolean $z0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1;
        java.util.Map $r2;
        boolean $z0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public final volatile java.util.Set entrySet()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Set $r1;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getEntries()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1;
        java.util.Map $r2;
        boolean $z0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1;
        java.util.Map $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }

    public java.util.Set getEntries()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        java.util.Set $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public java.util.Set getKeys()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        java.util.Set $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.util.Map getMap()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map r1;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        r1 = $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map map>;

        return r1;
    }

    public java.lang.Object getOrImplicitDefault(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1, $r3;
        java.util.Map $r2;
        boolean $z0;
        kotlin.jvm.functions.Function1 $r4;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != null goto label1;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r4 = $r0.<kotlin.collections.MutableMapWithDefaultImpl: kotlin.jvm.functions.Function1 'default'>;

        $r1 = interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        return $r1;

     label1:
        return $r3;
    }

    public int getSize()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        int $i0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection getValues()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public int hashCode()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        int $i0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        boolean $z0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public final volatile java.util.Set keySet()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Set $r1;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getKeys()>();

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1, $r2;
        java.util.Map $r3;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r2;
    }

    public void putAll(java.util.Map)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1, $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "from");

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r1);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.lang.Object $r1;
        java.util.Map $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return $r1;
    }

    public final volatile int size()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        int $i0;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $i0 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: int getSize()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Map $r1;
        java.lang.String $r2;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public final volatile java.util.Collection values()
    {
        kotlin.collections.MutableMapWithDefaultImpl $r0;
        java.util.Collection $r1;

        $r0 := @this: kotlin.collections.MutableMapWithDefaultImpl;

        $r1 = virtualinvoke $r0.<kotlin.collections.MutableMapWithDefaultImpl: java.util.Collection getValues()>();

        return $r1;
    }

