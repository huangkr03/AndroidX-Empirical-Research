androidx.compose.ui.focus.FocusableChildrenComparator
<androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.ui.focus.FocusableChildrenComparator INSTANCE>
    private void <init>()
    {
        androidx.compose.ui.focus.FocusableChildrenComparator r0;

        r0 := @this: androidx.compose.ui.focus.FocusableChildrenComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusableChildrenComparator r0;
        androidx.compose.ui.focus.FocusModifier r1, r2;
        androidx.compose.ui.node.LayoutNode r3, $r15, $r18, $r29, r31, $r32;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        boolean $z1, $z2, $z3, $z4;
        androidx.compose.ui.node.NodeCoordinator $r4, $r5;
        java.lang.IllegalStateException $r6, $r19, $r21;
        java.lang.String $r7, $r8, $r20, $r22, $r24, $r26, r27, r28, r30, r33;
        java.lang.Object[] $r9, $r11, $r13, $r16;
        java.lang.Object $r10, $r12, $r14, $r17;
        java.lang.IllegalArgumentException $r23, $r25;
        androidx.compose.runtime.collection.MutableVector r34, r35, r36, r37, r38, r39, r40;

        r0 := @this: androidx.compose.ui.focus.FocusableChildrenComparator;

        r1 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r2 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        if r1 != null goto label01;

        r27 = "Required value was null.";

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = virtualinvoke r27.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label01:
        if r2 != null goto label02;

        r28 = "Required value was null.";

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke r28.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label02:
        $z1 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r1);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $z2 = staticinvoke <androidx.compose.ui.focus.FocusTraversalKt: boolean isEligibleForFocusSearch(androidx.compose.ui.focus.FocusModifier)>(r2);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r4 = virtualinvoke r1.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r4 == null goto label05;

        $r29 = virtualinvoke $r4.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        goto label06;

     label05:
        $r29 = null;

     label06:
        if $r29 != null goto label07;

        r30 = "Required value was null.";

        $r21 = new java.lang.IllegalStateException;

        $r22 = virtualinvoke r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label07:
        r31 = $r29;

        $r5 = virtualinvoke r2.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r5 == null goto label08;

        $r32 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        goto label09;

     label08:
        $r32 = null;

     label09:
        if $r32 != null goto label10;

        r33 = "Required value was null.";

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label10:
        r3 = $r32;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r31, r3);

        if $z3 == 0 goto label11;

        return 0;

     label11:
        r34 = specialinvoke r0.<androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.runtime.collection.MutableVector pathFromRoot(androidx.compose.ui.node.LayoutNode)>(r31);

        r35 = specialinvoke r0.<androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.runtime.collection.MutableVector pathFromRoot(androidx.compose.ui.node.LayoutNode)>(r3);

        i6 = 0;

        r36 = r34;

        $i1 = virtualinvoke r36.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        i7 = $i1 - 1;

        $i2 = virtualinvoke r35.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        $i8 = $i2 - 1;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i8);

        if i6 > i0 goto label14;

     label12:
        r37 = r34;

        $r9 = virtualinvoke r37.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r10 = $r9[i6];

        r38 = r35;

        $r11 = virtualinvoke r38.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r12 = $r11[i6];

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r12);

        if $z4 != 0 goto label13;

        r39 = r34;

        $r13 = virtualinvoke r39.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r14 = $r13[i6];

        $r15 = (androidx.compose.ui.node.LayoutNode) $r14;

        $i3 = virtualinvoke $r15.<androidx.compose.ui.node.LayoutNode: int getPlaceOrder$ui_release()>();

        r40 = r35;

        $r16 = virtualinvoke r40.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        $r17 = $r16[i6];

        $r18 = (androidx.compose.ui.node.LayoutNode) $r17;

        $i4 = virtualinvoke $r18.<androidx.compose.ui.node.LayoutNode: int getPlaceOrder$ui_release()>();

        $i5 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($i3, $i4);

        return $i5;

     label13:
        if i6 == i0 goto label14;

        i6 = i6 + 1;

        goto label12;

     label14:
        $r6 = new java.lang.IllegalStateException;

        $r7 = "Could not find a common ancestor between the two FocusModifiers.";

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }

    private final androidx.compose.runtime.collection.MutableVector pathFromRoot(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.focus.FocusableChildrenComparator r0;
        androidx.compose.ui.node.LayoutNode r1, $r5;
        androidx.compose.runtime.collection.MutableVector r2, $r3;
        byte b0;
        androidx.compose.ui.node.LayoutNode[] $r4;

        r0 := @this: androidx.compose.ui.focus.FocusableChildrenComparator;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        b0 = 16;

        $r3 = new androidx.compose.runtime.collection.MutableVector;

        $r4 = newarray (androidx.compose.ui.node.LayoutNode)[b0];

        specialinvoke $r3.<androidx.compose.runtime.collection.MutableVector: void <init>(java.lang.Object[],int)>($r4, 0);

        r2 = $r3;

        $r5 = r1;

     label1:
        if $r5 == null goto label2;

        virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: void add(int,java.lang.Object)>(0, $r5);

        $r5 = virtualinvoke $r5.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        goto label1;

     label2:
        return r2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.focus.FocusableChildrenComparator r0;
        java.lang.Object r1, r2;
        androidx.compose.ui.focus.FocusModifier $r3, $r4;
        int $i0;

        r0 := @this: androidx.compose.ui.focus.FocusableChildrenComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.ui.focus.FocusModifier) r1;

        $r3 = (androidx.compose.ui.focus.FocusModifier) r2;

        $i0 = virtualinvoke r0.<androidx.compose.ui.focus.FocusableChildrenComparator: int compare(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.focus.FocusableChildrenComparator $r0;

        $r0 = new androidx.compose.ui.focus.FocusableChildrenComparator;

        specialinvoke $r0.<androidx.compose.ui.focus.FocusableChildrenComparator: void <init>()>();

        <androidx.compose.ui.focus.FocusableChildrenComparator: androidx.compose.ui.focus.FocusableChildrenComparator INSTANCE> = $r0;

        return;
    }

