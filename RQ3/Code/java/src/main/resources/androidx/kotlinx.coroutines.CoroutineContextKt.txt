kotlinx.coroutines.CoroutineContextKt
<kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.google.CoroutineContextInterceptor contextInterceptor>
    static void <clinit>()
    {
        kotlinx.coroutines.google.CoroutineContextInterceptor $r0;

        $r0 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.google.CoroutineContextInterceptor loadNewCoroutineContextInterceptor()>();

        <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.google.CoroutineContextInterceptor contextInterceptor> = $r0;

        return;
    }

    private static final kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext, kotlin.coroutines.CoroutineContext, boolean)
    {
        kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 $r0;
        kotlin.coroutines.CoroutineContext $r1, $r2;
        boolean $z0, $z1, $z2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;
        kotlin.coroutines.EmptyCoroutineContext $r4;
        java.lang.Object $r5;
        kotlinx.coroutines.CoroutineContextKt$foldCopies$1 $r6;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 := @parameter1: kotlin.coroutines.CoroutineContext;

        $z0 := @parameter2: boolean;

        $z1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)>($r1);

        $z2 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)>($r2);

        if $z1 != 0 goto label1;

        if $z2 != 0 goto label1;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r2);

        return $r1;

     label1:
        $r3 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r3.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        $r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r2;

        $r4 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r0 = new kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1;

        specialinvoke $r0.<kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,boolean)>($r3, $z0);

        $r5 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r4, $r0);

        $r1 = (kotlin.coroutines.CoroutineContext) $r5;

        if $z2 == 0 goto label2;

        $r5 = $r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r2 = (kotlin.coroutines.CoroutineContext) $r5;

        $r4 = <kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE>;

        $r6 = <kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE>;

        $r5 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r4, $r6);

        $r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r5;

     label2:
        $r5 = $r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r2 = (kotlin.coroutines.CoroutineContext) $r5;

        $r1 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r2);

        return $r1;
    }

    public static final java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        boolean $z0;
        kotlinx.coroutines.CoroutineId$Key $r1;
        kotlin.coroutines.CoroutineContext$Element $r2;
        kotlinx.coroutines.CoroutineId $r3;
        kotlinx.coroutines.CoroutineName$Key $r4;
        kotlinx.coroutines.CoroutineName $r5;
        java.lang.String $r6, $r7;
        long $l0;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getDEBUG()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = <kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key>;

        $r2 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r1);

        $r3 = (kotlinx.coroutines.CoroutineId) $r2;

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = <kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key>;

        $r2 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r5 = (kotlinx.coroutines.CoroutineName) $r2;

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<kotlinx.coroutines.CoroutineName: java.lang.String getName()>();

        $r7 = $r6;

        if $r6 != null goto label4;

     label3:
        $r7 = "coroutine";

     label4:
        $l0 = virtualinvoke $r3.<kotlinx.coroutines.CoroutineId: long getId()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static final boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 $r0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        boolean $z0;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r0 = <kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE>;

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r0);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private static final kotlinx.coroutines.google.CoroutineContextInterceptor loadNewCoroutineContextInterceptor()
    {
        kotlinx.coroutines.google.CoroutineContextInterceptor $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Constructor $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;

        $r0 = null;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("com.google.coroutines.coroutineContextInterceptor");

        goto label1;

     label1:
        if $r1 == null goto label2;

        $r2 = class "Lkotlinx/coroutines/google/CoroutineContextInterceptor;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 1, $r3);

        $r4 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r4);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r7, "null cannot be cast to non-null type kotlinx.coroutines.google.CoroutineContextInterceptor");

        $r0 = (kotlinx.coroutines.google.CoroutineContextInterceptor) $r7;

        goto label2;

     label2:
        return $r0;
    }

    public static final kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.CoroutineScope $r0;
        kotlin.coroutines.CoroutineContext $r1, $r3;
        kotlinx.coroutines.google.CoroutineContextInterceptor $r2;
        boolean $z0;
        kotlinx.coroutines.CoroutineId $r4;
        java.util.concurrent.atomic.AtomicLong $r5;
        long $l0;
        kotlinx.coroutines.CoroutineDispatcher $r6;
        kotlin.coroutines.ContinuationInterceptor$Key $r7;
        kotlin.coroutines.CoroutineContext$Element $r8;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r1 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        $r2 = <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.google.CoroutineContextInterceptor contextInterceptor>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<kotlinx.coroutines.google.CoroutineContextInterceptor: void onNewCoroutineContext()>();

     label1:
        $r3 = interfaceinvoke $r0.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r1 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean)>($r3, $r1, 1);

        $z0 = staticinvoke <kotlinx.coroutines.DebugKt: boolean getDEBUG()>();

        if $z0 == 0 goto label2;

        $r4 = new kotlinx.coroutines.CoroutineId;

        $r5 = staticinvoke <kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()>();

        $l0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        specialinvoke $r4.<kotlinx.coroutines.CoroutineId: void <init>(long)>($l0);

        $r3 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r4);

        goto label3;

     label2:
        $r3 = $r1;

     label3:
        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

        if $r1 == $r6 goto label4;

        $r7 = <kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key>;

        $r8 = interfaceinvoke $r1.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r7);

        if $r8 != null goto label4;

        $r6 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

        $r1 = interfaceinvoke $r3.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r6);

        return $r1;

     label4:
        return $r3;
    }

    public static final kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
    {
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r0, $r1;
        boolean $z0;
        kotlinx.coroutines.UndispatchedCoroutine $r2;

        $r1 := @parameter0: kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

     label1:
        $z0 = $r1 instanceof kotlinx.coroutines.DispatchedCoroutine;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r0 = interfaceinvoke $r1.<kotlin.coroutines.jvm.internal.CoroutineStackFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()>();

        $r1 = $r0;

        if $r0 != null goto label3;

        return null;

     label3:
        $z0 = $r0 instanceof kotlinx.coroutines.UndispatchedCoroutine;

        if $z0 == 0 goto label1;

        $r2 = (kotlinx.coroutines.UndispatchedCoroutine) $r0;

        return $r2;
    }

    public static final kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation, kotlin.coroutines.CoroutineContext, java.lang.Object)
    {
        kotlin.coroutines.CoroutineContext $r0;
        java.lang.Object $r1;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        kotlinx.coroutines.UndispatchedMarker $r3;
        kotlin.coroutines.CoroutineContext$Element $r4;
        kotlin.coroutines.jvm.internal.CoroutineStackFrame $r5;
        kotlinx.coroutines.UndispatchedCoroutine $r6;

        $r2 := @parameter0: kotlin.coroutines.Continuation;

        $r0 := @parameter1: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "context");

        $z0 = $r2 instanceof kotlin.coroutines.jvm.internal.CoroutineStackFrame;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = <kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE>;

        $r4 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 != 0 goto label4;

        return null;

     label4:
        $r5 = (kotlin.coroutines.jvm.internal.CoroutineStackFrame) $r2;

        $r6 = staticinvoke <kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)>($r5);

        if $r6 == null goto label5;

        virtualinvoke $r6.<kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r0, $r1);

     label5:
        return $r6;
    }

