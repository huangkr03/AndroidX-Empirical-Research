androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest
<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion Companion>
<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: java.lang.String json>
<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.lang.String, android.service.credentials.CallingAppInfo)
    {
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest r0;
        java.lang.String r1, $r5, $r8, $r9;
        android.service.credentials.CallingAppInfo r2;
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion $r3;
        android.os.Bundle $r4;
        java.lang.CharSequence $r6;
        int $i0;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;

        r0 := @this: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.service.credentials.CallingAppInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "json");

        $r3 = <androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion: android.os.Bundle toCandidateDataBundle$credentials_release(java.lang.String,boolean)>(r1, 0);

        specialinvoke r0.<android.service.credentials.BeginCreateCredentialRequest: void <init>(java.lang.String,android.os.Bundle,android.service.credentials.CallingAppInfo)>("androidx.credentials.TYPE_PUBLIC_KEY_CREDENTIAL", $r4, r2);

        r0.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: java.lang.String json> = r1;

        $r5 = r0.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: java.lang.String json>;

        $r6 = (java.lang.CharSequence) $r5;

        $i0 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r9 = "json must not be empty";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        return;
    }

    public final java.lang.String getJson()
    {
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest;

        $r1 = r0.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: java.lang.String json>;

        return $r1;
    }

    public int describeContents()
    {
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest r0;

        r0 := @this: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.BeginCreateCredentialRequest: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final android.os.Bundle toCandidateDataBundle$credentials_release(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0;
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion $r1;
        android.os.Bundle $r2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = <androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion: android.os.Bundle toCandidateDataBundle$credentials_release(java.lang.String,boolean)>(r0, z0);

        return $r2;
    }

    public static final androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest createFrom$credentials_release(android.os.Bundle, android.service.credentials.CallingAppInfo)
    {
        android.os.Bundle r0;
        android.service.credentials.CallingAppInfo r1;
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion $r2;
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.service.credentials.CallingAppInfo;

        $r2 = <androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest createFrom$credentials_release(android.os.Bundle,android.service.credentials.CallingAppInfo)>(r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion $r0;
        androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion;

        specialinvoke $r0.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.BeginCreatePublicKeyCredentialRequest: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

