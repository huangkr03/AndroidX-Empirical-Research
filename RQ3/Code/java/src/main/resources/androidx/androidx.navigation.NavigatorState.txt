androidx.navigation.NavigatorState
<androidx.navigation.NavigatorState: java.util.concurrent.locks.ReentrantLock backStackLock>
<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>
<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>
<androidx.navigation.NavigatorState: boolean isNavigating>
<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>
<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow transitionsInProgress>
    public void <init>()
    {
        androidx.navigation.NavigatorState r0;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.List $r2;
        kotlinx.coroutines.flow.MutableStateFlow $r3, $r5, $r6, $r8;
        java.util.Set $r4;
        kotlinx.coroutines.flow.StateFlow $r7, $r9;

        r0 := @this: androidx.navigation.NavigatorState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>(1);

        r0.<androidx.navigation.NavigatorState: java.util.concurrent.locks.ReentrantLock backStackLock> = $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r3 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r2);

        r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack> = $r3;

        $r4 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        $r5 = staticinvoke <kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)>($r4);

        r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress> = $r5;

        $r6 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r7 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)>($r6);

        r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack> = $r7;

        $r8 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r9 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)>($r8);

        r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow transitionsInProgress> = $r9;

        return;
    }

    public final boolean isNavigating()
    {
        androidx.navigation.NavigatorState r0;
        boolean $z0;

        r0 := @this: androidx.navigation.NavigatorState;

        $z0 = r0.<androidx.navigation.NavigatorState: boolean isNavigating>;

        return $z0;
    }

    public final void setNavigating(boolean)
    {
        androidx.navigation.NavigatorState r0;
        boolean z0;

        r0 := @this: androidx.navigation.NavigatorState;

        z0 := @parameter0: boolean;

        r0.<androidx.navigation.NavigatorState: boolean isNavigating> = z0;

        return;
    }

    public final kotlinx.coroutines.flow.StateFlow getBackStack()
    {
        androidx.navigation.NavigatorState r0;
        kotlinx.coroutines.flow.StateFlow $r1;

        r0 := @this: androidx.navigation.NavigatorState;

        $r1 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>;

        return $r1;
    }

    public final kotlinx.coroutines.flow.StateFlow getTransitionsInProgress()
    {
        androidx.navigation.NavigatorState r0;
        kotlinx.coroutines.flow.StateFlow $r1;

        r0 := @this: androidx.navigation.NavigatorState;

        $r1 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow transitionsInProgress>;

        return $r1;
    }

    public void push(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1;
        java.util.concurrent.locks.Lock r2;
        java.util.concurrent.locks.ReentrantLock $r3;
        kotlinx.coroutines.flow.MutableStateFlow $r4, $r5;
        java.lang.Object $r6;
        java.util.Collection $r7;
        java.util.List $r8;
        java.lang.Throwable $r9;
        kotlin.Unit $r10;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backStackEntry");

        $r3 = r0.<androidx.navigation.NavigatorState: java.util.concurrent.locks.ReentrantLock backStackLock>;

        r2 = (java.util.concurrent.locks.Lock) $r3;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r4 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r6 = interfaceinvoke $r4.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r7 = (java.util.Collection) $r6;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r7, r1);

        interfaceinvoke $r5.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r8);

        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void pushWithTransition(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1, r2;
        kotlinx.coroutines.flow.StateFlow $r3;
        java.lang.Object $r4, $r6, $r9, $r14;
        java.util.List $r5;
        kotlinx.coroutines.flow.MutableStateFlow $r7, $r8, $r12, $r13;
        java.util.Set $r10, $r11, $r15, $r16;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backStackEntry");

        $r3 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>;

        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r5 = (java.util.List) $r4;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object lastOrNull(java.util.List)>($r5);

        r2 = (androidx.navigation.NavBackStackEntry) $r6;

        if r2 == null goto label1;

        $r13 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r12 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r14 = interfaceinvoke $r12.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r15 = (java.util.Set) $r14;

        $r16 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)>($r15, r2);

        interfaceinvoke $r13.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r16);

     label1:
        $r8 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r7 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r9 = interfaceinvoke $r7.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r10 = (java.util.Set) $r9;

        $r11 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)>($r10, r1);

        interfaceinvoke $r8.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r11);

        virtualinvoke r0.<androidx.navigation.NavigatorState: void push(androidx.navigation.NavBackStackEntry)>(r1);

        return;
    }

<androidx.navigation.NavigatorState: androidx.navigation.NavBackStackEntry createBackStackEntry(androidx.navigation.NavDestination,android.os.Bundle)>
    public void pop(androidx.navigation.NavBackStackEntry, boolean)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1, r8;
        boolean z0, $z3, $z4, $z7;
        java.util.concurrent.locks.Lock r2;
        java.lang.Iterable $r3;
        kotlinx.coroutines.flow.MutableStateFlow r4, $r10, $r11;
        java.util.ArrayList r5, $r13;
        java.util.Iterator r6;
        java.lang.Object r7, $r12;
        java.util.concurrent.locks.ReentrantLock $r9;
        java.util.List $r14;
        java.lang.Throwable $r15;
        kotlin.Unit $r16;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "popUpTo");

        $r9 = r0.<androidx.navigation.NavigatorState: java.util.concurrent.locks.ReentrantLock backStackLock>;

        r2 = (java.util.concurrent.locks.Lock) $r9;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $r11 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r10 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r12 = interfaceinvoke $r10.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r3 = (java.lang.Iterable) $r12;

        r4 = $r11;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r5 = $r13;

        r6 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.navigation.NavBackStackEntry) r7;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, r1);

        if $z4 != 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        if $z7 != 0 goto label05;

        goto label06;

     label05:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        goto label02;

     label06:
        $r14 = (java.util.List) r5;

        interfaceinvoke r4.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r14);

        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r15 := @caughtexception;

     label09:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r15;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void popWithTransition(androidx.navigation.NavBackStackEntry, boolean)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1, r2, r6;
        boolean z0, $z3, $z4, $z5;
        java.util.List $r3, $r21, $r24;
        java.util.ListIterator r4;
        java.lang.Object r5, $r9, $r13, $r16, $r20, $r23, $r25;
        kotlinx.coroutines.flow.MutableStateFlow $r7, $r8, $r14, $r15;
        java.util.Set $r10, $r11, $r17, $r18;
        kotlinx.coroutines.flow.StateFlow $r12, $r19, $r22;
        int $i0, $i1, $i2;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "popUpTo");

        $r8 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r7 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r9 = interfaceinvoke $r7.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r10 = (java.util.Set) $r9;

        $r11 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)>($r10, r1);

        interfaceinvoke $r8.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r11);

        $r12 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>;

        $r13 = interfaceinvoke $r12.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r13;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        r4 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label1:
        $z3 = interfaceinvoke r4.<java.util.ListIterator: boolean hasPrevious()>();

        if $z3 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.ListIterator: java.lang.Object previous()>();

        r6 = (androidx.navigation.NavBackStackEntry) r5;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r6, r1);

        if $z4 != 0 goto label2;

        $r19 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>;

        $r20 = interfaceinvoke $r19.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r21 = (java.util.List) $r20;

        $i1 = interfaceinvoke $r21.<java.util.List: int lastIndexOf(java.lang.Object)>(r6);

        $r22 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.StateFlow backStack>;

        $r23 = interfaceinvoke $r22.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r23;

        $i2 = interfaceinvoke $r24.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        if $i1 >= $i2 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z5 == 0 goto label1;

        $r25 = r5;

        goto label5;

     label4:
        $r25 = null;

     label5:
        r2 = (androidx.navigation.NavBackStackEntry) $r25;

        if r2 == null goto label6;

        $r15 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r14 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r16 = interfaceinvoke $r14.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r17 = (java.util.Set) $r16;

        $r18 = staticinvoke <kotlin.collections.SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)>($r17, r2);

        interfaceinvoke $r15.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r18);

     label6:
        virtualinvoke r0.<androidx.navigation.NavigatorState: void pop(androidx.navigation.NavBackStackEntry,boolean)>(r1, z0);

        return;
    }

    public void onLaunchSingleTop(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1;
        kotlinx.coroutines.flow.MutableStateFlow $r2, $r3, $r5;
        java.lang.Object $r4, $r7, $r9;
        java.lang.Iterable $r6;
        java.util.List $r8, $r10, $r12;
        java.util.Collection $r11;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "backStackEntry");

        $r3 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r2 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r4 = interfaceinvoke $r2.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r6 = (java.lang.Iterable) $r4;

        $r5 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _backStack>;

        $r7 = interfaceinvoke $r5.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r8 = (java.util.List) $r7;

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r8);

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)>($r6, $r9);

        $r11 = (java.util.Collection) $r10;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r11, r1);

        interfaceinvoke $r3.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r12);

        return;
    }

    public void markTransitionComplete(androidx.navigation.NavBackStackEntry)
    {
        androidx.navigation.NavigatorState r0;
        androidx.navigation.NavBackStackEntry r1;
        kotlinx.coroutines.flow.MutableStateFlow $r2, $r3;
        java.lang.Object $r4;
        java.util.Set $r5, $r6;

        r0 := @this: androidx.navigation.NavigatorState;

        r1 := @parameter0: androidx.navigation.NavBackStackEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "entry");

        $r3 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r2 = r0.<androidx.navigation.NavigatorState: kotlinx.coroutines.flow.MutableStateFlow _transitionsInProgress>;

        $r4 = interfaceinvoke $r2.<kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()>();

        $r5 = (java.util.Set) $r4;

        $r6 = staticinvoke <kotlin.collections.SetsKt: java.util.Set minus(java.util.Set,java.lang.Object)>($r5, r1);

        interfaceinvoke $r3.<kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)>($r6);

        return;
    }

