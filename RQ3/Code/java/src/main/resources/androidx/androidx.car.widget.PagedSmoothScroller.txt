androidx.car.widget.PagedSmoothScroller
<androidx.car.widget.PagedSmoothScroller: float MILLISECONDS_PER_INCH>
<androidx.car.widget.PagedSmoothScroller: float DECELERATION_TIME_DIVISOR>
<androidx.car.widget.PagedSmoothScroller: android.view.animation.Interpolator mInterpolator>
    public void <init>(android.content.Context)
    {
        androidx.car.widget.PagedSmoothScroller r0;
        android.content.Context r1;
        android.view.animation.DecelerateInterpolator $r2;

        r0 := @this: androidx.car.widget.PagedSmoothScroller;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void <init>(android.content.Context)>(r1);

        $r2 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.8F);

        r0.<androidx.car.widget.PagedSmoothScroller: android.view.animation.Interpolator mInterpolator> = $r2;

        return;
    }

    protected int getVerticalSnapPreference()
    {
        androidx.car.widget.PagedSmoothScroller r0;

        r0 := @this: androidx.car.widget.PagedSmoothScroller;

        return -1;
    }

    protected void onTargetFound(android.view.View, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        androidx.car.widget.PagedSmoothScroller r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action r3;
        int i0, i1, $i2;
        android.view.animation.Interpolator $r4;

        r0 := @this: androidx.car.widget.PagedSmoothScroller;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        i0 = virtualinvoke r0.<androidx.car.widget.PagedSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)>(r1, -1);

        if i0 != 0 goto label1;

        return;

     label1:
        i1 = virtualinvoke r0.<androidx.car.widget.PagedSmoothScroller: int calculateTimeForDeceleration(int)>(i0);

        if i1 <= 0 goto label2;

        $i2 = neg i0;

        $r4 = r0.<androidx.car.widget.PagedSmoothScroller: android.view.animation.Interpolator mInterpolator>;

        virtualinvoke r3.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>(0, $i2, i1, $r4);

     label2:
        return;
    }

    protected float calculateSpeedPerPixel(android.util.DisplayMetrics)
    {
        androidx.car.widget.PagedSmoothScroller r0;
        android.util.DisplayMetrics r1;
        int $i0;
        float $f0, $f1;

        r0 := @this: androidx.car.widget.PagedSmoothScroller;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        $f0 = (float) $i0;

        $f1 = 150.0F / $f0;

        return $f1;
    }

    protected int calculateTimeForDeceleration(int)
    {
        androidx.car.widget.PagedSmoothScroller r0;
        int i0, $i1, $i2;
        float $f0, $f1;
        double $d0, $d1;

        r0 := @this: androidx.car.widget.PagedSmoothScroller;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.car.widget.PagedSmoothScroller: int calculateTimeForScrolling(int)>(i0);

        $f0 = (float) $i1;

        $f1 = $f0 / 0.45F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d1;

        return $i2;
    }

