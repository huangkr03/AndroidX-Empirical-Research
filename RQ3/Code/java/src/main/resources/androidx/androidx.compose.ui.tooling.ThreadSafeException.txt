androidx.compose.ui.tooling.ThreadSafeException
<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Throwable exception>
<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Object lock>
    public void <init>()
    {
        androidx.compose.ui.tooling.ThreadSafeException r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.ui.tooling.ThreadSafeException;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Object lock> = $r1;

        return;
    }

    public final void set(java.lang.Throwable)
    {
        androidx.compose.ui.tooling.ThreadSafeException r0;
        java.lang.Throwable r1;
        java.lang.Object r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.ui.tooling.ThreadSafeException;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "throwable");

        r2 = r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Object lock>;

        entermonitor r2;

        r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Throwable exception> = r1;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        exitmonitor r2;

        goto label1;

     label1:
        return;
    }

    public final void throwIfPresent()
    {
        androidx.compose.ui.tooling.ThreadSafeException r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3, $r4;

        r0 := @this: androidx.compose.ui.tooling.ThreadSafeException;

        r1 = r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r3 = r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Throwable exception>;

        if $r3 == null goto label2;

        r2 = $r3;

        r0.<androidx.compose.ui.tooling.ThreadSafeException: java.lang.Throwable exception> = null;

        throw r2;

     label2:
        exitmonitor r1;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

