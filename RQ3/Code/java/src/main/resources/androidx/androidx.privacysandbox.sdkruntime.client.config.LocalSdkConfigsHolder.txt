androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder
<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion Companion>
<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: java.util.Map configs>
<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: java.lang.String SDK_TABLE_ASSET_NAME>
    private void <init>(java.util.Map)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder r0;
        java.util.Map r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: java.util.Map configs> = r1;

        return;
    }

    public final androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig getSdkConfig(java.lang.String)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig $r4;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sdkName");

        $r2 = r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: java.util.Map configs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig) $r3;

        return $r4;
    }

    public void <init>(java.util.Map, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder r0;
        java.util.Map r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: void <init>(java.util.Map)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion $r0;

        $r0 = new androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        specialinvoke $r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion
    private void <init>()
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion r0;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder load(android.content.Context, java.lang.String)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion r0;
        android.content.Context r1;
        java.lang.String r2, r9, r10;
        java.util.Set r3;
        java.util.Map r4, r5;
        java.util.Iterator r7;
        androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$SdkTableEntry r8;
        java.io.Closeable r11;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig r12, r22;
        boolean $z0;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder $r13;
        java.lang.Object $r14, $r18;
        android.content.res.AssetManager $r15;
        java.io.InputStream $r16, r21;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigParser$Companion $r17;
        java.lang.Throwable $r19, $r20, r23, r24, r25;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "sdkTableAssetName");

        r3 = specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion: java.util.Set loadSdkTable(android.content.Context,java.lang.String)>(r1, r2);

        r5 = staticinvoke <kotlin.collections.MapsKt: java.util.Map createMapBuilder()>();

        r7 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$SdkTableEntry) $r14;

        r9 = virtualinvoke r8.<androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$SdkTableEntry: java.lang.String component1()>();

        r10 = virtualinvoke r8.<androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$SdkTableEntry: java.lang.String component2()>();

        $r15 = virtualinvoke r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r16 = virtualinvoke $r15.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r10);

        r11 = (java.io.Closeable) $r16;

     label2:
        r21 = (java.io.InputStream) r11;

        $r17 = <androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigParser: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigParser$Companion Companion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "sdkConfigAsset");

        r12 = virtualinvoke $r17.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigParser$Companion: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig parse(java.io.InputStream,java.lang.String)>(r21, r9);

        $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r12);

        r22 = (androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfig) $r18;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r11, null);

        goto label1;

     label4:
        $r19 := @caughtexception;

        r23 = $r19;

        r24 = r23;

        throw r23;

     label5:
        $r20 := @caughtexception;

        r25 = $r20;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r11, r24);

        throw r25;

     label7:
        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map build(java.util.Map)>(r5);

        $r13 = new androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder;

        specialinvoke $r13.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder: void <init>(java.util.Map,kotlin.jvm.internal.DefaultConstructorMarker)>(r4, null);

        return $r13;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder load$default(androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion, android.content.Context, java.lang.String, int, java.lang.Object)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion r0;
        android.content.Context r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder $r3;
        java.lang.String r4;

        r0 := @parameter0: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        r1 := @parameter1: android.content.Context;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = "RuntimeEnabledSdkTable.xml";

     label1:
        $r3 = virtualinvoke r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder load(android.content.Context,java.lang.String)>(r1, r4);

        return $r3;
    }

    private final java.util.Set loadSdkTable(android.content.Context, java.lang.String)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion r0;
        android.content.Context r1;
        java.lang.String r2;
        java.util.Set r3, $r8;
        android.content.res.AssetManager $r4;
        java.io.InputStream $r5, r12;
        androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$Companion $r6;
        java.lang.Throwable $r7, $r9, $r10, r13, r14, r15;
        java.io.Closeable r11;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r2);

        r11 = (java.io.Closeable) $r5;

     label2:
        r12 = (java.io.InputStream) r11;

        $r6 = <androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser: androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$Companion Companion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "sdkTableAsset");

        r3 = virtualinvoke $r6.<androidx.privacysandbox.sdkruntime.client.config.SdkTableConfigParser$Companion: java.util.Set parse(java.io.InputStream)>(r12);

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r11, null);

        return r3;

     label4:
        $r10 := @caughtexception;

        r13 = $r10;

        r14 = r13;

        throw r13;

     label5:
        $r9 := @caughtexception;

        r15 = $r9;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r11, r14);

        throw r15;

     label7:
        $r7 := @caughtexception;

        $r8 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.FileNotFoundException from label1 to label7 with label7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.sdkruntime.client.config.LocalSdkConfigsHolder$Companion: void <init>()>();

        return;
    }

