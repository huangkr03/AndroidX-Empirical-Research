androidx.slice.compat.CompatPermissionManager
<androidx.slice.compat.CompatPermissionManager: java.lang.String TAG>
<androidx.slice.compat.CompatPermissionManager: java.lang.String ALL_SUFFIX>
<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext>
<androidx.slice.compat.CompatPermissionManager: java.lang.String mPrefsName>
<androidx.slice.compat.CompatPermissionManager: int mMyUid>
<androidx.slice.compat.CompatPermissionManager: java.lang.String[] mAutoGrantPermissions>
    public void <init>(android.content.Context, java.lang.String, int, java.lang.String[])
    {
        androidx.slice.compat.CompatPermissionManager r0;
        android.content.Context r1;
        java.lang.String r2;
        int i0;
        java.lang.String[] r3;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext> = r1;

        r0.<androidx.slice.compat.CompatPermissionManager: java.lang.String mPrefsName> = r2;

        r0.<androidx.slice.compat.CompatPermissionManager: int mMyUid> = i0;

        r0.<androidx.slice.compat.CompatPermissionManager: java.lang.String[] mAutoGrantPermissions> = r3;

        return;
    }

    private android.content.SharedPreferences getPrefs()
    {
        androidx.slice.compat.CompatPermissionManager r0;
        java.lang.String $r1;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        $r2 = r0.<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext>;

        $r1 = r0.<androidx.slice.compat.CompatPermissionManager: java.lang.String mPrefsName>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r1, 0);

        return $r3;
    }

    public int checkSlicePermission(android.net.Uri, int, int)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        android.net.Uri r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        java.lang.String[] r2, r3, r9, r11;
        java.lang.String r4, r10, r12;
        android.content.Context $r5, $r7, $r8;
        android.content.pm.PackageManager $r6;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<androidx.slice.compat.CompatPermissionManager: int mMyUid>;

        if i1 != $i3 goto label1;

        return 0;

     label1:
        $r5 = r0.<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        r9 = r2;

        i7 = lengthof r9;

        i8 = 0;

     label2:
        if i8 >= i7 goto label4;

        r10 = r9[i8];

        $i6 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: int checkSlicePermission(android.net.Uri,java.lang.String)>(r1, r10);

        if $i6 != 0 goto label3;

        return 0;

     label3:
        i8 = i8 + 1;

        goto label2;

     label4:
        r11 = r0.<androidx.slice.compat.CompatPermissionManager: java.lang.String[] mAutoGrantPermissions>;

        i9 = lengthof r11;

        i10 = 0;

     label5:
        if i10 >= i9 goto label9;

        r12 = r11[i10];

        $r8 = r0.<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext>;

        $i5 = virtualinvoke $r8.<android.content.Context: int checkPermission(java.lang.String,int,int)>(r12, i0, i1);

        if $i5 != 0 goto label8;

        r3 = r2;

        i2 = lengthof r3;

        i11 = 0;

     label6:
        if i11 >= i2 goto label7;

        r4 = r3[i11];

        virtualinvoke r0.<androidx.slice.compat.CompatPermissionManager: void grantSlicePermission(android.net.Uri,java.lang.String)>(r1, r4);

        i11 = i11 + 1;

        goto label6;

     label7:
        return 0;

     label8:
        i10 = i10 + 1;

        goto label5;

     label9:
        $r7 = r0.<androidx.slice.compat.CompatPermissionManager: android.content.Context mContext>;

        $i4 = virtualinvoke $r7.<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>(r1, i0, i1, 2);

        return $i4;
    }

    private int checkSlicePermission(android.net.Uri, java.lang.String)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        android.net.Uri r1;
        java.lang.String r2, $r4;
        androidx.slice.compat.CompatPermissionManager$PermissionState r3;
        java.util.List $r5;
        boolean $z0;
        byte $b0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: androidx.slice.compat.CompatPermissionManager$PermissionState getPermissionState(java.lang.String,java.lang.String)>(r2, $r4);

        $r5 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $z0 = virtualinvoke r3.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean hasAccess(java.util.List)>($r5);

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = -1;

     label2:
        return $b0;
    }

    public void grantSlicePermission(android.net.Uri, java.lang.String)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        android.net.Uri r1;
        java.lang.String r2, $r4;
        androidx.slice.compat.CompatPermissionManager$PermissionState r3;
        java.util.List $r5;
        boolean $z0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: androidx.slice.compat.CompatPermissionManager$PermissionState getPermissionState(java.lang.String,java.lang.String)>(r2, $r4);

        $r5 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $z0 = virtualinvoke r3.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean addPath(java.util.List)>($r5);

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: void persist(androidx.slice.compat.CompatPermissionManager$PermissionState)>(r3);

     label1:
        return;
    }

    public void revokeSlicePermission(android.net.Uri, java.lang.String)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        android.net.Uri r1;
        java.lang.String r2, $r4;
        androidx.slice.compat.CompatPermissionManager$PermissionState r3;
        java.util.List $r5;
        boolean $z0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        r3 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: androidx.slice.compat.CompatPermissionManager$PermissionState getPermissionState(java.lang.String,java.lang.String)>(r2, $r4);

        $r5 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $z0 = virtualinvoke r3.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean removePath(java.util.List)>($r5);

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: void persist(androidx.slice.compat.CompatPermissionManager$PermissionState)>(r3);

     label1:
        return;
    }

    private synchronized void persist(androidx.slice.compat.CompatPermissionManager$PermissionState)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        androidx.slice.compat.CompatPermissionManager$PermissionState r1;
        android.content.SharedPreferences $r2;
        android.content.SharedPreferences$Editor $r3, $r6, $r12;
        java.lang.String $r4, $r8, $r11;
        java.util.Set $r5;
        java.lang.StringBuilder $r7, $r9, $r10;
        boolean $z0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: androidx.slice.compat.CompatPermissionManager$PermissionState;

        $r2 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: android.content.SharedPreferences getPrefs()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = virtualinvoke r1.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String getKey()>();

        $r5 = virtualinvoke r1.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.util.Set toPersistable()>();

        $r6 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)>($r4, $r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String getKey()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_all");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r1.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean hasAllPermissions()>();

        $r12 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r11, $z0);

        interfaceinvoke $r12.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private androidx.slice.compat.CompatPermissionManager$PermissionState getPermissionState(java.lang.String, java.lang.String)
    {
        androidx.slice.compat.CompatPermissionManager r0;
        java.lang.String r1, r2, r3, $r15;
        java.util.Set r4, $r10;
        boolean z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r12, $r13, $r14;
        android.content.SharedPreferences $r9, $r11;
        androidx.slice.compat.CompatPermissionManager$PermissionState $r16;

        r0 := @this: androidx.slice.compat.CompatPermissionManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: android.content.SharedPreferences getPrefs()>();

        $r10 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r4 = interfaceinvoke $r9.<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>(r3, $r10);

        $r11 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager: android.content.SharedPreferences getPrefs()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_all");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = interfaceinvoke $r11.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r15, 0);

        $r16 = new androidx.slice.compat.CompatPermissionManager$PermissionState;

        specialinvoke $r16.<androidx.slice.compat.CompatPermissionManager$PermissionState: void <init>(java.util.Set,java.lang.String,boolean)>(r4, r3, z0);

        return $r16;
    }

androidx.slice.compat.CompatPermissionManager$PermissionState
<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>
<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String mKey>
    void <init>(java.util.Set, java.lang.String, boolean)
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.util.Set r1;
        java.lang.String r2, r4;
        boolean z0, $z1;
        java.util.Iterator r3;
        android.support.v4.util.ArraySet $r5, $r7, $r10;
        java.lang.Object $r6;
        java.lang.String[] $r8, $r9;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.support.v4.util.ArraySet;

        specialinvoke $r5.<android.support.v4.util.ArraySet: void <init>()>();

        r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths> = $r5;

        if z0 == 0 goto label1;

        $r10 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $r9 = newarray (java.lang.String)[0];

        virtualinvoke $r10.<android.support.v4.util.ArraySet: boolean add(java.lang.Object)>($r9);

        goto label3;

     label1:
        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $r7 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $r8 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String[] decodeSegments(java.lang.String)>(r4);

        virtualinvoke $r7.<android.support.v4.util.ArraySet: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String mKey> = r2;

        return;
    }

    public boolean hasAllPermissions()
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $z0 = virtualinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean hasAccess(java.util.List)>($r1);

        return $z0;
    }

    public java.lang.String getKey()
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.lang.String $r1;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        $r1 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String mKey>;

        return $r1;
    }

    public java.util.Set toPersistable()
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        android.support.v4.util.ArraySet r1, $r4, $r5;
        java.util.Iterator r2;
        java.lang.String[] r3;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r7;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        $r4 = new android.support.v4.util.ArraySet;

        specialinvoke $r4.<android.support.v4.util.ArraySet: void <init>()>();

        r1 = $r4;

        $r5 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        r2 = virtualinvoke $r5.<android.support.v4.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String[]) $r6;

        $r7 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: java.lang.String encodeSegments(java.lang.String[])>(r3);

        virtualinvoke r1.<android.support.v4.util.ArraySet: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return r1;
    }

    public boolean hasAccess(java.util.List)
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.util.List r1;
        java.lang.String[] r2, r4, $r5;
        java.util.Iterator r3;
        int $i0;
        java.lang.Object[] $r6;
        android.support.v4.util.ArraySet $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r2 = (java.lang.String[]) $r6;

        $r7 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        r3 = virtualinvoke $r7.<android.support.v4.util.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String[]) $r8;

        $z1 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r4, r2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    boolean addPath(java.util.List)
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.util.List r1;
        java.lang.String[] r2, r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object[] $r5;
        android.support.v4.util.ArraySet $r6, $r7, $r8, $r10;
        java.lang.Object $r9;
        boolean $z1, $z2;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r2 = (java.lang.String[]) $r5;

        $r6 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $i1 = virtualinvoke $r6.<android.support.v4.util.ArraySet: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label4;

        $r8 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $r9 = virtualinvoke $r8.<android.support.v4.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r3 = (java.lang.String[]) $r9;

        $z1 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r3, r2);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r2, r3);

        if $z2 == 0 goto label3;

        $r10 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        virtualinvoke $r10.<android.support.v4.util.ArraySet: java.lang.Object removeAt(int)>(i2);

     label3:
        i2 = i2 + -1;

        goto label1;

     label4:
        $r7 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        virtualinvoke $r7.<android.support.v4.util.ArraySet: boolean add(java.lang.Object)>(r2);

        return 1;
    }

    boolean removePath(java.util.List)
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.util.List r1;
        java.lang.String[] r2, r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object[] $r5;
        android.support.v4.util.ArraySet $r6, $r7, $r9;
        java.lang.Object $r8;
        boolean $z0, z1;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.util.List;

        z1 = 0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r2 = (java.lang.String[]) $r5;

        $r6 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $i1 = virtualinvoke $r6.<android.support.v4.util.ArraySet: int size()>();

        i2 = $i1 - 1;

     label1:
        if i2 < 0 goto label3;

        $r7 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        $r8 = virtualinvoke $r7.<android.support.v4.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        r3 = (java.lang.String[]) $r8;

        $z0 = specialinvoke r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: boolean isPathPrefixMatch(java.lang.String[],java.lang.String[])>(r2, r3);

        if $z0 == 0 goto label2;

        z1 = 1;

        $r9 = r0.<androidx.slice.compat.CompatPermissionManager$PermissionState: android.support.v4.util.ArraySet mPaths>;

        virtualinvoke $r9.<android.support.v4.util.ArraySet: java.lang.Object removeAt(int)>(i2);

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return z1;
    }

    private boolean isPathPrefixMatch(java.lang.String[], java.lang.String[])
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.lang.String[] r1, r2;
        int i0, $i1, i2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if $i1 >= i0 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r4 = r2[i2];

        $r3 = r1[i2];

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    private java.lang.String encodeSegments(java.lang.String[])
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.lang.String[] r1, r2;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        r2 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r4 = r1[i2];

        $r5 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r4);

        r2[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>("/", r2);

        return $r3;
    }

    private java.lang.String[] decodeSegments(java.lang.String)
    {
        androidx.slice.compat.CompatPermissionManager$PermissionState r0;
        java.lang.String r1, $r3, $r4;
        java.lang.String[] r2;
        int $i0, i1;

        r0 := @this: androidx.slice.compat.CompatPermissionManager$PermissionState;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r3 = r2[i1];

        $r4 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r3);

        r2[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

