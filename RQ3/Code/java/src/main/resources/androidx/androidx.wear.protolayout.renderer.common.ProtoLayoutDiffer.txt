androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.lang.String NODE_ID_PREFIX>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.lang.String ROOT_NODE_ID>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: int DISCARDED_FINGERPRINT_VALUE>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: boolean UPDATE_ALL_CHILDREN_AFTER_ADD_REMOVE>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: int FIRST_CHILD_INDEX>
    private void <init>()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer r0;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String createNodePosId(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r0;

        $i1 = i0 + 1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%d", $r1);

        return $r3;
    }

    public static java.lang.String getParentNodePosId(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("pT");

        if $z0 != 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $r1 = "pT";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 > $i1 goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r2;
    }

    public static boolean isDescendantOf(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        char $c4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        if $i0 <= $i2 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 46 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff getDiff(androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint, androidx.wear.protolayout.proto.LayoutElementProto$Layout)
    {
        androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint r0, $r5, $r7;
        androidx.wear.protolayout.proto.LayoutElementProto$Layout r1;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r2, $r8;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r3;
        java.util.ArrayList r4, $r9;
        boolean $z0;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement $r6;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff $r10;

        r0 := @parameter0: androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint;

        r1 := @parameter1: androidx.wear.protolayout.proto.LayoutElementProto$Layout;

        $r5 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$Layout: androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint getFingerprint()>();

        $z0 = virtualinvoke $r5.<androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint: boolean hasRoot()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint getRoot()>();

        $r6 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$Layout: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement getRoot()>();

        $r7 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$Layout: androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint getFingerprint()>();

        $r8 = virtualinvoke $r7.<androidx.wear.protolayout.proto.FingerprintProto$TreeFingerprint: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint getRoot()>();

        r3 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode ofLayoutElement(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,java.lang.String)>($r6, $r8, "pT1");

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: void addChangedNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode,java.util.List)>(r2, r3, r4);

        goto label2;

     label2:
        $r10 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff;

        specialinvoke $r10.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff: void <init>(java.util.List)>(r4);

        return $r10;
    }

    public static boolean areNodesEquivalent(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint)
    {
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r0, r1;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r2, $r3;
        boolean $z0;

        r0 := @parameter0: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r1 := @parameter1: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        $r2 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType getChangeType(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint)>(r0, r1);

        $r3 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE>;

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static void addChangedNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode, java.util.List) throws androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    {
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r0, $r3;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r1;
        java.util.List r2;
        int[] $r4;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r5;
        int $i0, $i1;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange $r6, $r7, $r8;

        r0 := @parameter0: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r1 := @parameter1: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        r2 := @parameter2: java.util.List;

        $r4 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r3 = r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint mFingerprint>;

        $r5 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType getChangeType(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint)>(r0, $r3);

        $i0 = virtualinvoke $r5.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label5;
        };

     label1:
        $r8 = virtualinvoke r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange withChange(boolean)>(1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label5;

     label2:
        $r7 = virtualinvoke r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange withChange(boolean)>(0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label5;

     label3:
        $r6 = virtualinvoke r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange withChange(boolean)>(1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: void addChangedChildNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode,java.util.List)>(r0, r1, r2);

        goto label5;

     label4:
        staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: void addChangedChildNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode,java.util.List)>(r0, r1, r2);

        goto label5;

     label5:
        return;
    }

    private static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType getChangeType(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint)
    {
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r0, r1;
        boolean z0, z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r1 := @parameter1: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        if r1 != null goto label01;

        $r10 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        return $r10;

     label01:
        $i0 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfTypeValue()>();

        $i1 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfTypeValue()>();

        if $i0 == $i1 goto label02;

        $r9 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        return $r9;

     label02:
        $i2 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfPropsValue()>();

        if $i2 != -1 goto label04;

        $i11 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesValue()>();

        if $i11 != -1 goto label04;

        $i12 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesCount()>();

        if $i12 != 0 goto label03;

        $r8 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        return $r8;

     label03:
        $r7 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN>;

        return $r7;

     label04:
        $i3 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesCount()>();

        $i4 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesCount()>();

        if $i3 == $i4 goto label05;

        $r6 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        return $r6;

     label05:
        $i5 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfPropsValue()>();

        if $i5 == -1 goto label06;

        $i9 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfPropsValue()>();

        $i10 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getSelfPropsValue()>();

        if $i9 == $i10 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        z0 = $z2;

        $i6 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesValue()>();

        if $i6 == -1 goto label09;

        $i7 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesValue()>();

        $i8 = virtualinvoke r1.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesValue()>();

        if $i7 == $i8 goto label10;

     label09:
        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        z1 = $z3;

        if z0 == 0 goto label12;

        if z1 == 0 goto label12;

        $r5 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN>;

        return $r5;

     label12:
        if z0 == 0 goto label13;

        $r4 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_ONLY>;

        return $r4;

     label13:
        if z1 == 0 goto label14;

        $r3 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_CHILDREN>;

        return $r3;

     label14:
        $r2 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE>;

        return $r2;
    }

    private static void addChangedChildNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode, java.util.List) throws androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    {
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r0, r5;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r1, r4;
        java.util.List r2, r3;
        boolean $z0, $z1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r6;

        r0 := @parameter0: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r1 := @parameter1: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        r2 := @parameter2: java.util.List;

        r3 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.util.List getChildNodes(androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode)>(r1);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $i1 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: int getChildNodesCount()>();

        if $i0 != $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z1);

        i2 = 0;

     label4:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if i2 >= $i3 goto label5;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode) $r6;

        r5 = virtualinvoke r0.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint getChildNodes(int)>(i2);

        staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: void addChangedNodes(androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode,java.util.List)>(r5, r4, r2);

        i2 = i2 + 1;

        goto label4;

     label5:
        return;
    }

    private static java.util.List getChildNodes(androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode) throws androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r0;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement r1;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r2;
        int[] $r3;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase $r4;
        int $i0, $i1;
        androidx.wear.protolayout.proto.LayoutElementProto$Arc $r5;
        java.util.List $r6, $r7, $r9, $r11, $r12, $r14, $r16, $r17, $r19, $r21, $r22, $r24, $r25, $r26;
        java.lang.String $r8, $r13, $r18, $r23;
        androidx.wear.protolayout.proto.LayoutElementProto$Row $r10;
        androidx.wear.protolayout.proto.LayoutElementProto$Column $r15;
        androidx.wear.protolayout.proto.LayoutElementProto$Box $r20;

        r0 := @parameter0: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement mLayoutElement>;

        if r1 != null goto label1;

        $r26 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r26;

     label1:
        r2 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint mFingerprint>;

        $r3 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>;

        $r4 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase getInnerCase()>();

        $i0 = virtualinvoke $r4.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        $r20 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement: androidx.wear.protolayout.proto.LayoutElementProto$Box getBox()>();

        $r21 = virtualinvoke $r20.<androidx.wear.protolayout.proto.LayoutElementProto$Box: java.util.List getContentsList()>();

        $r22 = virtualinvoke r2.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: java.util.List getChildNodesList()>();

        $r23 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>;

        $r24 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.util.List getLinearChildNodes(java.util.List,java.util.List,java.lang.String)>($r21, $r22, $r23);

        return $r24;

     label3:
        $r15 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement: androidx.wear.protolayout.proto.LayoutElementProto$Column getColumn()>();

        $r16 = virtualinvoke $r15.<androidx.wear.protolayout.proto.LayoutElementProto$Column: java.util.List getContentsList()>();

        $r17 = virtualinvoke r2.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: java.util.List getChildNodesList()>();

        $r18 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>;

        $r19 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.util.List getLinearChildNodes(java.util.List,java.util.List,java.lang.String)>($r16, $r17, $r18);

        return $r19;

     label4:
        $r10 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement: androidx.wear.protolayout.proto.LayoutElementProto$Row getRow()>();

        $r11 = virtualinvoke $r10.<androidx.wear.protolayout.proto.LayoutElementProto$Row: java.util.List getContentsList()>();

        $r12 = virtualinvoke r2.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: java.util.List getChildNodesList()>();

        $r13 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>;

        $r14 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.util.List getLinearChildNodes(java.util.List,java.util.List,java.lang.String)>($r11, $r12, $r13);

        return $r14;

     label5:
        $r5 = virtualinvoke r1.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement: androidx.wear.protolayout.proto.LayoutElementProto$Arc getArc()>();

        $r6 = virtualinvoke $r5.<androidx.wear.protolayout.proto.LayoutElementProto$Arc: java.util.List getContentsList()>();

        $r7 = virtualinvoke r2.<androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint: java.util.List getChildNodesList()>();

        $r8 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>;

        $r9 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.util.List getRadialChildNodes(java.util.List,java.util.List,java.lang.String)>($r6, $r7, $r8);

        return $r9;

     label6:
        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r25;
    }

    private static java.util.List getLinearChildNodes(java.util.List, java.util.List, java.lang.String) throws androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    {
        java.util.List r0, r1, $r12;
        java.lang.String r2, r4;
        java.util.ArrayList r3, r14;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r6, $r8;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement $r7;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint $r9;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r10;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException r13;
        java.lang.Throwable r15;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r12;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label2;

        r13 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException;

        specialinvoke r13.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException: void <init>()>();

        r15 = (java.lang.Throwable) r13;

        throw r15;

     label2:
        r14 = new java.util.ArrayList;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r14.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = r14;

        i5 = 0;

     label3:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i5 >= $i3 goto label4;

        $i4 = 0 + i5;

        r4 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.lang.String createNodePosId(java.lang.String,int)>(r2, $i4);

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $r7 = (androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement) $r6;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r9 = (androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint) $r8;

        $r10 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode ofLayoutElement(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,java.lang.String)>($r7, $r9, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        i5 = i5 + 1;

        goto label3;

     label4:
        return r3;
    }

    private static java.util.List getRadialChildNodes(java.util.List, java.util.List, java.lang.String) throws androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    {
        java.util.List r0, r1, $r12;
        java.lang.String r2, r4;
        java.util.ArrayList r3, r14;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r6, $r8;
        androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement $r7;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint $r9;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r10;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException r13;
        java.lang.Throwable r15;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r12;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label2;

        r13 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException;

        specialinvoke r13.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException: void <init>()>();

        r15 = (java.lang.Throwable) r13;

        throw r15;

     label2:
        r14 = new java.util.ArrayList;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r14.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = r14;

        i5 = 0;

     label3:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i5 >= $i3 goto label4;

        $i4 = 0 + i5;

        r4 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer: java.lang.String createNodePosId(java.lang.String,int)>(r2, $i4);

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $r7 = (androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement) $r6;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i5);

        $r9 = (androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint) $r8;

        $r10 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode ofArcLayoutElement(androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,java.lang.String)>($r7, $r9, r4);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        i5 = i5 + 1;

        goto label3;

     label4:
        return r3;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>
    static void <clinit>()
    {
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase $r2, $r4, $r6, $r8;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $r10;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r12, $r14, $r16, $r18, $r20;
        java.lang.Throwable $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, r31, r32, r33, r34, r35, r36, r37, r38, r39;

        $r0 = staticinvoke <androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase> = $r1;

     label01:
        $r3 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>;

        $r2 = <androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase BOX>;

        $i1 = virtualinvoke $r2.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r30 := @caughtexception;

        r31 = $r30;

     label04:
        $r5 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>;

        $r4 = <androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase COLUMN>;

        $i2 = virtualinvoke $r4.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r28 := @caughtexception;

        r32 = $r28;

     label07:
        $r7 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>;

        $r6 = <androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase ROW>;

        $i3 = virtualinvoke $r6.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r27 := @caughtexception;

        r33 = $r27;

     label10:
        $r9 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$proto$LayoutElementProto$LayoutElement$InnerCase>;

        $r8 = <androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase ARC>;

        $i4 = virtualinvoke $r8.<androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement$InnerCase: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r22 := @caughtexception;

        r34 = $r22;

     label13:
        $r10 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] values()>();

        $i5 = lengthof $r10;

        $r11 = newarray (int)[$i5];

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType> = $r11;

     label14:
        $r13 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r12 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_ONLY>;

        $i6 = virtualinvoke $r12.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $r13[$i6] = 1;

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;

        r35 = $r23;

     label17:
        $r15 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r14 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        $i7 = virtualinvoke $r14.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $r15[$i7] = 2;

     label18:
        goto label20;

     label19:
        $r24 := @caughtexception;

        r36 = $r24;

     label20:
        $r17 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r16 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN>;

        $i8 = virtualinvoke $r16.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $r17[$i8] = 3;

     label21:
        goto label23;

     label22:
        $r26 := @caughtexception;

        r37 = $r26;

     label23:
        $r19 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r18 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_CHILDREN>;

        $i9 = virtualinvoke $r18.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $r19[$i9] = 4;

     label24:
        goto label26;

     label25:
        $r29 := @caughtexception;

        r38 = $r29;

     label26:
        $r21 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$1: int[] $SwitchMap$androidx$wear$protolayout$renderer$common$ProtoLayoutDiffer$NodeChangeType>;

        $r20 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE>;

        $i10 = virtualinvoke $r20.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: int ordinal()>();

        $r21[$i10] = 5;

     label27:
        goto label29;

     label28:
        $r25 := @caughtexception;

        r39 = $r25;

     label29:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
        catch java.lang.NoSuchFieldError from label23 to label24 with label25;
        catch java.lang.NoSuchFieldError from label26 to label27 with label28;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException
    void <init>()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException r0;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$InconsistentFingerprintException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff: java.util.List mChangedNodes>
    void <init>(java.util.List)
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff r0;
        java.util.List r1;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff: java.util.List mChangedNodes> = r1;

        return;
    }

    public java.util.List getChangedNodes()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff r0;
        java.util.List $r1;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff;

        $r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$LayoutDiff: java.util.List mChangedNodes>;

        return $r1;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_ONLY>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_CHILDREN>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $VALUES>
    public static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] values()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[]) $r1;

        return $r2;
    }

    public static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/wear/protolayout/renderer/common/ProtoLayoutDiffer$NodeChangeType;", r0);

        $r2 = (androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $values()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType)[5];

        $r1 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE>;

        $r0[0] = $r1;

        $r2 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_ONLY>;

        $r0[1] = $r2;

        $r3 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN>;

        $r0[2] = $r3;

        $r4 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN>;

        $r0[3] = $r4;

        $r5 = <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_CHILDREN>;

        $r0[4] = $r5;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType $r0, $r1, $r2, $r3, $r4;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $r5;

        $r0 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        specialinvoke $r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: void <init>(java.lang.String,int)>("NO_CHANGE", 0);

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType NO_CHANGE> = $r0;

        $r1 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        specialinvoke $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: void <init>(java.lang.String,int)>("CHANGE_IN_SELF_ONLY", 1);

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_ONLY> = $r1;

        $r2 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        specialinvoke $r2.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: void <init>(java.lang.String,int)>("CHANGE_IN_SELF_AND_ALL_CHILDREN", 2);

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_ALL_CHILDREN> = $r2;

        $r3 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        specialinvoke $r3.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: void <init>(java.lang.String,int)>("CHANGE_IN_SELF_AND_SOME_CHILDREN", 3);

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_SELF_AND_SOME_CHILDREN> = $r3;

        $r4 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType;

        specialinvoke $r4.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: void <init>(java.lang.String,int)>("CHANGE_IN_CHILDREN", 4);

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType CHANGE_IN_CHILDREN> = $r4;

        $r5 = staticinvoke <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $values()>();

        <androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$NodeChangeType[] $VALUES> = $r5;

        return;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement mLayoutElement>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement mArcLayoutElement>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint mFingerprint>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>
    private void <init>(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement, androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement, androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, java.lang.String)
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r0;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement r1;
        androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement r2;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r3;
        java.lang.String r4;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        r1 := @parameter0: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement;

        r2 := @parameter1: androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement;

        r3 := @parameter2: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement mLayoutElement> = r1;

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement mArcLayoutElement> = r2;

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint mFingerprint> = r3;

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId> = r4;

        return;
    }

    static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode ofLayoutElement(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement, androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, java.lang.String)
    {
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement r0;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r1;
        java.lang.String r2;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r3;

        r0 := @parameter0: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement;

        r1 := @parameter1: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r2 := @parameter2: java.lang.String;

        $r3 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        specialinvoke $r3.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: void <init>(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement,androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,java.lang.String)>(r0, null, r1, r2);

        return $r3;
    }

    static androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode ofArcLayoutElement(androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement, androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint, java.lang.String)
    {
        androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement r0;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint r1;
        java.lang.String r2;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r3;

        r0 := @parameter0: androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement;

        r1 := @parameter1: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint;

        r2 := @parameter2: java.lang.String;

        $r3 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        specialinvoke $r3.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: void <init>(androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement,androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement,androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint,java.lang.String)>(null, r0, r1, r2);

        return $r3;
    }

    androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange withChange(boolean)
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r0;
        boolean z0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange $r1;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        z0 := @parameter0: boolean;

        $r1 = new androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        specialinvoke $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: void <init>(androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode,boolean)>(r0, z0);

        return $r1;
    }

androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode>
<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: boolean mIsSelfOnlyChange>
    void <init>(androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode, boolean)
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode r1;
        boolean z0;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        r1 := @parameter0: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode> = r1;

        r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: boolean mIsSelfOnlyChange> = z0;

        return;
    }

    public androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement getLayoutElement()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r1;
        androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement $r2;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        $r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode>;

        $r2 = $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$LayoutElement mLayoutElement>;

        return $r2;
    }

    public androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement getArcLayoutElement()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r1;
        androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement $r2;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        $r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode>;

        $r2 = $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.LayoutElementProto$ArcLayoutElement mArcLayoutElement>;

        return $r2;
    }

    public androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint getFingerprint()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r1;
        androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint $r2;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        $r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode>;

        $r2 = $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: androidx.wear.protolayout.proto.FingerprintProto$NodeFingerprint mFingerprint>;

        return $r2;
    }

    public java.lang.String getPosId()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode $r1;
        java.lang.String $r2;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        $r1 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode mTreeNode>;

        $r2 = $r1.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNode: java.lang.String mPosId>;

        return $r2;
    }

    public boolean isSelfOnlyChange()
    {
        androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange r0;
        boolean $z0;

        r0 := @this: androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange;

        $z0 = r0.<androidx.wear.protolayout.renderer.common.ProtoLayoutDiffer$TreeNodeWithChange: boolean mIsSelfOnlyChange>;

        return $z0;
    }

