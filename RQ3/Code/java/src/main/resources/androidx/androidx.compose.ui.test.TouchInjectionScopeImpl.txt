androidx.compose.ui.test.TouchInjectionScopeImpl
<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>
    public void <init>(androidx.compose.ui.test.MultiModalInjectionScopeImpl)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        r1 := @parameter0: androidx.compose.ui.test.MultiModalInjectionScopeImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "baseScope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope> = r1;

        return;
    }

    public float getBottom()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getBottom()>();

        return $f0;
    }

    public long getBottomCenter-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomCenter-F1C5BW0()>();

        return $l0;
    }

    public long getBottomLeft-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomLeft-F1C5BW0()>();

        return $l0;
    }

    public long getBottomRight-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomRight-F1C5BW0()>();

        return $l0;
    }

    public long getCenter-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenter-F1C5BW0()>();

        return $l0;
    }

    public long getCenterLeft-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenterLeft-F1C5BW0()>();

        return $l0;
    }

    public long getCenterRight-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenterRight-F1C5BW0()>();

        return $l0;
    }

    public float getCenterX()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getCenterX()>();

        return $f0;
    }

    public float getCenterY()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getCenterY()>();

        return $f0;
    }

    public float getDensity()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getDensity()>();

        return $f0;
    }

    public long getEventPeriodMillis()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getEventPeriodMillis()>();

        return $l0;
    }

    public float getFontScale()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getFontScale()>();

        return $f0;
    }

    public int getHeight()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int getHeight()>();

        return $i0;
    }

    public float getLeft()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getLeft()>();

        return $f0;
    }

    public float getRight()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getRight()>();

        return $f0;
    }

    public float getTop()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getTop()>();

        return $f0;
    }

    public long getTopCenter-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopCenter-F1C5BW0()>();

        return $l0;
    }

    public long getTopLeft-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopLeft-F1C5BW0()>();

        return $l0;
    }

    public long getTopRight-F1C5BW0()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopRight-F1C5BW0()>();

        return $l0;
    }

    public androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        androidx.compose.ui.platform.ViewConfiguration $r2;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        return $r2;
    }

    public long getVisibleSize-YbymL2g()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getVisibleSize-YbymL2g()>();

        return $l0;
    }

    public int getWidth()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int getWidth()>();

        return $i0;
    }

    public void advanceEventTime(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: void advanceEventTime(long)>(l0);

        return;
    }

    public long percentOffset-dBAh8RU(float, float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float f0, f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long percentOffset-dBAh8RU(float,float)>(f0, f1);

        return $l0;
    }

    public int roundToPx-0680j_4(float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int roundToPx-0680j_4(float)>($f0);

        return $i0;
    }

    public int roundToPx--R2X_6o(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int roundToPx--R2X_6o(long)>($l0);

        return $i1;
    }

    public float toDp-GaN1DYA(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-GaN1DYA(long)>($l0);

        return $f0;
    }

    public float toDp-u2uoSUM(float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-u2uoSUM(float)>($f0);

        return $f1;
    }

    public float toDp-u2uoSUM(int)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int $i0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-u2uoSUM(int)>($i0);

        return $f0;
    }

    public long toDpSize-k-rfVVM(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toDpSize-k-rfVVM(long)>($l0);

        return $l1;
    }

    public float toPx-0680j_4(float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toPx-0680j_4(float)>($f0);

        return $f1;
    }

    public float toPx--R2X_6o(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toPx--R2X_6o(long)>($l0);

        return $f0;
    }

    public androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.unit.DpRect $r1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r2;
        androidx.compose.ui.geometry.Rect $r3;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 := @parameter0: androidx.compose.ui.unit.DpRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)>($r1);

        return $r3;
    }

    public long toSize-XkaWNTQ(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSize-XkaWNTQ(long)>($l0);

        return $l1;
    }

    public long toSp-0xMU5do(float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-0xMU5do(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(float)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-kPz2Gy4(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(int)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int $i0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-kPz2Gy4(int)>($i0);

        return $l1;
    }

    private final androidx.compose.ui.test.InputDispatcher getInputDispatcher()
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        androidx.compose.ui.test.InputDispatcher $r2;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher$ui_test_release()>();

        return $r2;
    }

    private final long localToRoot-MK-Hz9U(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long l0, $l1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long localToRoot-MK-Hz9U$ui_test_release(long)>(l0);

        return $l1;
    }

    public androidx.compose.ui.geometry.Offset currentPosition-x-9fifI(int)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int i0;
        long l1, $l2;
        androidx.compose.ui.test.InputDispatcher $r1;
        androidx.compose.ui.geometry.Offset $r2, $r4;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r3;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: androidx.compose.ui.geometry.Offset getCurrentTouchPosition-x-9fifI(int)>(i0);

        if $r2 == null goto label1;

        goto label2;

     label1:
        return null;

     label2:
        l1 = virtualinvoke $r2.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $r3 = r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l2 = virtualinvoke $r3.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long rootToLocal-MK-Hz9U$ui_test_release(long)>(l1);

        $r4 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l2);

        return $r4;
    }

    public void down-Uv8p0NA(int, long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int i0;
        long l1, l2;
        androidx.compose.ui.test.InputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: long localToRoot-MK-Hz9U(long)>(l1);

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueTouchDown-Uv8p0NA(int,long)>(i0, l2);

        return;
    }

    public void updatePointerTo-Uv8p0NA(int, long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int i0;
        long l1, l2;
        androidx.compose.ui.test.InputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: long localToRoot-MK-Hz9U(long)>(l1);

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void updateTouchPointer-Uv8p0NA(int,long)>(i0, l2);

        return;
    }

    public void move(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.InputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        l0 := @parameter0: long;

        virtualinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: void advanceEventTime(long)>(l0);

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueTouchMove()>();

        return;
    }

    public void moveWithHistoryMultiPointer(java.util.List, java.util.List, long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        java.util.List r1, r2;
        long l0, $l3, $l5, $l6, $l8, $l9, $l10;
        int i1, i2, i11;
        androidx.compose.ui.test.InputDispatcher $r3;
        java.lang.Object $r4, $r6, $r12, $r24;
        java.lang.Number $r5, $r7, $r13, $r25;
        byte $b4, $b7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r20, $r21, $r22, $r23, $r26, $r27;
        java.lang.IllegalStateException $r18, $r28;
        java.lang.String $r19, $r29, $r30, $r31;
        boolean $z1, $z3;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "relativeHistoricalTimes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "historicalCoordinates");

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i11 = 0;

     label1:
        if i11 >= i1 goto label8;

        i2 = i11;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (java.lang.Number) $r4;

        $l3 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative historical times should be negative, in order to be in the past(offset ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was: ");

        $r24 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r25 = (java.lang.Number) $r24;

        $l10 = virtualinvoke $r25.<java.lang.Number: long longValue()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalStateException;

        $r29 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label4:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = (java.lang.Number) $r6;

        $l5 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        $l6 = neg l0;

        $b7 = $l5 cmp $l6;

        if $b7 < 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        if $z3 != 0 goto label7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative historical times should not be earlier than the previous event (offset ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was: ");

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (java.lang.Number) $r12;

        $l8 = virtualinvoke $r13.<java.lang.Number: long longValue()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $l9 = neg l0;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r31 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new java.lang.IllegalStateException;

        $r19 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label7:
        i11 = i11 + 1;

        goto label1;

     label8:
        virtualinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: void advanceEventTime(long)>(l0);

        $r3 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r3.<androidx.compose.ui.test.InputDispatcher: void enqueueTouchMoves(java.util.List,java.util.List)>(r1, r2);

        return;
    }

    public void up(int)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        int i0;
        androidx.compose.ui.test.InputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueTouchUp(int)>(i0);

        return;
    }

    public void cancel(long)
    {
        androidx.compose.ui.test.TouchInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.InputDispatcher $r1;

        r0 := @this: androidx.compose.ui.test.TouchInjectionScopeImpl;

        l0 := @parameter0: long;

        virtualinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: void advanceEventTime(long)>(l0);

        $r1 = specialinvoke r0.<androidx.compose.ui.test.TouchInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueTouchCancel()>();

        return;
    }

