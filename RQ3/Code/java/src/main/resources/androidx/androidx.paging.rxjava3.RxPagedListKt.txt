androidx.paging.rxjava3.RxPagedListKt
    private static final androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.DataSource$Factory r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        androidx.paging.rxjava3.RxPagedListBuilder r6, $r7, $r8;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        $r7 = new androidx.paging.rxjava3.RxPagedListBuilder;

        specialinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: void <init>(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config)>(r0, r1);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setInitialLoadKey(java.lang.Object)>(r2);

        r6 = virtualinvoke $r8.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)>(r3);

        if r4 == null goto label1;

        virtualinvoke r6.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setFetchScheduler(io.reactivex.rxjava3.core.Scheduler)>(r4);

     label1:
        if r5 == null goto label2;

        virtualinvoke r6.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setNotifyScheduler(io.reactivex.rxjava3.core.Scheduler)>(r5);

     label2:
        return r6;
    }

    private static final androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        androidx.paging.rxjava3.RxPagedListBuilder r6, $r7, $r8;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        $r7 = new androidx.paging.rxjava3.RxPagedListBuilder;

        specialinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: void <init>(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config)>(r0, r1);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setInitialLoadKey(java.lang.Object)>(r2);

        r6 = virtualinvoke $r8.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)>(r3);

        if r4 == null goto label1;

        virtualinvoke r6.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setFetchScheduler(io.reactivex.rxjava3.core.Scheduler)>(r4);

     label1:
        if r5 == null goto label2;

        virtualinvoke r6.<androidx.paging.rxjava3.RxPagedListBuilder: androidx.paging.rxjava3.RxPagedListBuilder setNotifyScheduler(io.reactivex.rxjava3.core.Scheduler)>(r5);

     label2:
        return r6;
    }

    public static final io.reactivex.rxjava3.core.Observable toObservable(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.DataSource$Factory $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        androidx.paging.rxjava3.RxPagedListBuilder $r6;
        io.reactivex.rxjava3.core.Observable $r7;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        $r6 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, r1, r2, r3, r4, r5);

        $r7 = virtualinvoke $r6.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Observable buildObservable()>();

        return $r7;
    }

    public static io.reactivex.rxjava3.core.Observable toObservable$default(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, r4;
        io.reactivex.rxjava3.core.Observable $r3;
        androidx.paging.PagedList$BoundaryCallback r5;
        io.reactivex.rxjava3.core.Scheduler r6, r7;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r6 = null;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $r3 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Observable toObservable(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>(r0, r1, r4, r5, r6, r7);

        return $r3;
    }

    public static final io.reactivex.rxjava3.core.Observable toObservable(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        androidx.paging.DataSource$Factory $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        io.reactivex.rxjava3.core.Scheduler r3, r4;
        androidx.paging.PagedList$Config $r5;
        androidx.paging.rxjava3.RxPagedListBuilder $r6;
        io.reactivex.rxjava3.core.Observable $r7;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r4 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = staticinvoke <androidx.paging.PagedListConfigKt: androidx.paging.PagedList$Config Config$default(int,int,boolean,int,int,int,java.lang.Object)>(i0, 0, 0, 0, 0, 30, null);

        $r6 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, $r5, r1, r2, r3, r4);

        $r7 = virtualinvoke $r6.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Observable buildObservable()>();

        return $r7;
    }

    public static io.reactivex.rxjava3.core.Observable toObservable$default(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1, r3;
        io.reactivex.rxjava3.core.Observable $r2;
        androidx.paging.PagedList$BoundaryCallback r4;
        io.reactivex.rxjava3.core.Scheduler r5, r6;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        i1 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r3 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r4 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        r5 = null;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        r6 = null;

     label4:
        $r2 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Observable toObservable(androidx.paging.DataSource$Factory,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>(r0, i0, r3, r4, r5, r6);

        return $r2;
    }

    public static final io.reactivex.rxjava3.core.Flowable toFlowable(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy)
    {
        androidx.paging.DataSource$Factory $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        io.reactivex.rxjava3.core.BackpressureStrategy r6;
        androidx.paging.rxjava3.RxPagedListBuilder $r7;
        io.reactivex.rxjava3.core.Flowable $r8;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "backpressureStrategy");

        $r7 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, r1, r2, r3, r4, r5);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Flowable buildFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)>(r6);

        return $r8;
    }

    public static io.reactivex.rxjava3.core.Flowable toFlowable$default(androidx.paging.DataSource$Factory, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2, r4;
        io.reactivex.rxjava3.core.Flowable $r3;
        androidx.paging.PagedList$BoundaryCallback r5;
        io.reactivex.rxjava3.core.Scheduler r6, r7;
        io.reactivex.rxjava3.core.BackpressureStrategy r8;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r8 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r6 = null;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r8 = <io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy LATEST>;

     label5:
        $r3 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Flowable toFlowable(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.BackpressureStrategy)>(r0, r1, r4, r5, r6, r7, r8);

        return $r3;
    }

    public static final io.reactivex.rxjava3.core.Flowable toFlowable(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy)
    {
        androidx.paging.DataSource$Factory $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        io.reactivex.rxjava3.core.Scheduler r3, r4;
        io.reactivex.rxjava3.core.BackpressureStrategy r5;
        androidx.paging.PagedList$Config $r6;
        androidx.paging.rxjava3.RxPagedListBuilder $r7;
        io.reactivex.rxjava3.core.Flowable $r8;

        $r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r4 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "backpressureStrategy");

        $r6 = staticinvoke <androidx.paging.PagedListConfigKt: androidx.paging.PagedList$Config Config$default(int,int,boolean,int,int,int,java.lang.Object)>(i0, 0, 0, 0, 0, 30, null);

        $r7 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(androidx.paging.DataSource$Factory,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, $r6, r1, r2, r3, r4);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Flowable buildFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)>(r5);

        return $r8;
    }

    public static io.reactivex.rxjava3.core.Flowable toFlowable$default(androidx.paging.DataSource$Factory, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy, int, java.lang.Object)
    {
        androidx.paging.DataSource$Factory r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1, r3;
        io.reactivex.rxjava3.core.Flowable $r2;
        androidx.paging.PagedList$BoundaryCallback r4;
        io.reactivex.rxjava3.core.Scheduler r5, r6;
        io.reactivex.rxjava3.core.BackpressureStrategy r7;

        r0 := @parameter0: androidx.paging.DataSource$Factory;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        i1 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r3 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r4 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        r5 = null;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        r6 = null;

     label4:
        $i6 = i1 & 32;

        if $i6 == 0 goto label5;

        r7 = <io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy LATEST>;

     label5:
        $r2 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Flowable toFlowable(androidx.paging.DataSource$Factory,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.BackpressureStrategy)>(r0, i0, r3, r4, r5, r6, r7);

        return $r2;
    }

    public static final io.reactivex.rxjava3.core.Observable toObservable(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        kotlin.jvm.functions.Function0 $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        androidx.paging.rxjava3.RxPagedListBuilder $r6;
        io.reactivex.rxjava3.core.Observable $r7;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        $r6 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, r1, r2, r3, r4, r5);

        $r7 = virtualinvoke $r6.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Observable buildObservable()>();

        return $r7;
    }

    public static io.reactivex.rxjava3.core.Observable toObservable$default(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, r4;
        io.reactivex.rxjava3.core.Observable $r3;
        androidx.paging.PagedList$BoundaryCallback r5;
        io.reactivex.rxjava3.core.Scheduler r6, r7;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r6 = null;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $r3 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Observable toObservable(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>(r0, r1, r4, r5, r6, r7);

        return $r3;
    }

    public static final io.reactivex.rxjava3.core.Observable toObservable(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler)
    {
        kotlin.jvm.functions.Function0 $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        io.reactivex.rxjava3.core.Scheduler r3, r4;
        androidx.paging.PagedList$Config $r5;
        androidx.paging.rxjava3.RxPagedListBuilder $r6;
        io.reactivex.rxjava3.core.Observable $r7;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r4 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = staticinvoke <androidx.paging.PagedListConfigKt: androidx.paging.PagedList$Config Config$default(int,int,boolean,int,int,int,java.lang.Object)>(i0, 0, 0, 0, 0, 30, null);

        $r6 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, $r5, r1, r2, r3, r4);

        $r7 = virtualinvoke $r6.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Observable buildObservable()>();

        return $r7;
    }

    public static io.reactivex.rxjava3.core.Observable toObservable$default(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1, r3;
        io.reactivex.rxjava3.core.Observable $r2;
        androidx.paging.PagedList$BoundaryCallback r4;
        io.reactivex.rxjava3.core.Scheduler r5, r6;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        i1 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r3 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r4 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        r5 = null;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        r6 = null;

     label4:
        $r2 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Observable toObservable(kotlin.jvm.functions.Function0,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>(r0, i0, r3, r4, r5, r6);

        return $r2;
    }

    public static final io.reactivex.rxjava3.core.Flowable toFlowable(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy)
    {
        kotlin.jvm.functions.Function0 $r0;
        androidx.paging.PagedList$Config r1;
        java.lang.Object r2;
        androidx.paging.PagedList$BoundaryCallback r3;
        io.reactivex.rxjava3.core.Scheduler r4, r5;
        io.reactivex.rxjava3.core.BackpressureStrategy r6;
        androidx.paging.rxjava3.RxPagedListBuilder $r7;
        io.reactivex.rxjava3.core.Flowable $r8;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r4 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "backpressureStrategy");

        $r7 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, r1, r2, r3, r4, r5);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Flowable buildFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)>(r6);

        return $r8;
    }

    public static io.reactivex.rxjava3.core.Flowable toFlowable$default(kotlin.jvm.functions.Function0, androidx.paging.PagedList$Config, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        androidx.paging.PagedList$Config r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2, r4;
        io.reactivex.rxjava3.core.Flowable $r3;
        androidx.paging.PagedList$BoundaryCallback r5;
        io.reactivex.rxjava3.core.Scheduler r6, r7;
        io.reactivex.rxjava3.core.BackpressureStrategy r8;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r6 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r8 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        i0 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = null;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r6 = null;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        r7 = null;

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r8 = <io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy LATEST>;

     label5:
        $r3 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Flowable toFlowable(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.BackpressureStrategy)>(r0, r1, r4, r5, r6, r7, r8);

        return $r3;
    }

    public static final io.reactivex.rxjava3.core.Flowable toFlowable(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy)
    {
        kotlin.jvm.functions.Function0 $r0;
        int i0;
        java.lang.Object r1;
        androidx.paging.PagedList$BoundaryCallback r2;
        io.reactivex.rxjava3.core.Scheduler r3, r4;
        io.reactivex.rxjava3.core.BackpressureStrategy r5;
        androidx.paging.PagedList$Config $r6;
        androidx.paging.rxjava3.RxPagedListBuilder $r7;
        io.reactivex.rxjava3.core.Flowable $r8;

        $r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r2 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r3 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r4 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r5 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "backpressureStrategy");

        $r6 = staticinvoke <androidx.paging.PagedListConfigKt: androidx.paging.PagedList$Config Config$default(int,int,boolean,int,int,int,java.lang.Object)>(i0, 0, 0, 0, 0, 30, null);

        $r7 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: androidx.paging.rxjava3.RxPagedListBuilder createRxPagedListBuilder(kotlin.jvm.functions.Function0,androidx.paging.PagedList$Config,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler)>($r0, $r6, r1, r2, r3, r4);

        $r8 = virtualinvoke $r7.<androidx.paging.rxjava3.RxPagedListBuilder: io.reactivex.rxjava3.core.Flowable buildFlowable(io.reactivex.rxjava3.core.BackpressureStrategy)>(r5);

        return $r8;
    }

    public static io.reactivex.rxjava3.core.Flowable toFlowable$default(kotlin.jvm.functions.Function0, int, java.lang.Object, androidx.paging.PagedList$BoundaryCallback, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.core.BackpressureStrategy, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function0 r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1, r3;
        io.reactivex.rxjava3.core.Flowable $r2;
        androidx.paging.PagedList$BoundaryCallback r4;
        io.reactivex.rxjava3.core.Scheduler r5, r6;
        io.reactivex.rxjava3.core.BackpressureStrategy r7;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter4: io.reactivex.rxjava3.core.Scheduler;

        r6 := @parameter5: io.reactivex.rxjava3.core.Scheduler;

        r7 := @parameter6: io.reactivex.rxjava3.core.BackpressureStrategy;

        i1 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r3 = null;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        r4 = null;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        r5 = null;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        r6 = null;

     label4:
        $i6 = i1 & 32;

        if $i6 == 0 goto label5;

        r7 = <io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy LATEST>;

     label5:
        $r2 = staticinvoke <androidx.paging.rxjava3.RxPagedListKt: io.reactivex.rxjava3.core.Flowable toFlowable(kotlin.jvm.functions.Function0,int,java.lang.Object,androidx.paging.PagedList$BoundaryCallback,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.Scheduler,io.reactivex.rxjava3.core.BackpressureStrategy)>(r0, i0, r3, r4, r5, r6, r7);

        return $r2;
    }

