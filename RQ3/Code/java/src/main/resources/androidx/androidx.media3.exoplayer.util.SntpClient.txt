androidx.media3.exoplayer.util.SntpClient
<androidx.media3.exoplayer.util.SntpClient: java.lang.String DEFAULT_NTP_HOST>
<androidx.media3.exoplayer.util.SntpClient: int TIMEOUT_MS>
<androidx.media3.exoplayer.util.SntpClient: int ORIGINATE_TIME_OFFSET>
<androidx.media3.exoplayer.util.SntpClient: int RECEIVE_TIME_OFFSET>
<androidx.media3.exoplayer.util.SntpClient: int TRANSMIT_TIME_OFFSET>
<androidx.media3.exoplayer.util.SntpClient: int NTP_PACKET_SIZE>
<androidx.media3.exoplayer.util.SntpClient: int NTP_PORT>
<androidx.media3.exoplayer.util.SntpClient: int NTP_MODE_CLIENT>
<androidx.media3.exoplayer.util.SntpClient: int NTP_MODE_SERVER>
<androidx.media3.exoplayer.util.SntpClient: int NTP_MODE_BROADCAST>
<androidx.media3.exoplayer.util.SntpClient: int NTP_VERSION>
<androidx.media3.exoplayer.util.SntpClient: int NTP_LEAP_NOSYNC>
<androidx.media3.exoplayer.util.SntpClient: int NTP_STRATUM_DEATH>
<androidx.media3.exoplayer.util.SntpClient: int NTP_STRATUM_MAX>
<androidx.media3.exoplayer.util.SntpClient: long OFFSET_1900_TO_1970>
<androidx.media3.exoplayer.util.SntpClient: java.lang.Object loaderLock>
<androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>
<androidx.media3.exoplayer.util.SntpClient: boolean isInitialized>
<androidx.media3.exoplayer.util.SntpClient: long elapsedRealtimeOffsetMs>
<androidx.media3.exoplayer.util.SntpClient: java.lang.String ntpHost>
    private void <init>()
    {
        androidx.media3.exoplayer.util.SntpClient r0;

        r0 := @this: androidx.media3.exoplayer.util.SntpClient;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getNtpHost()
    {
        java.lang.Object r0, $r1;
        java.lang.String $r2;

        $r1 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>;

        r0 = $r1;

        entermonitor $r1;

        $r2 = <androidx.media3.exoplayer.util.SntpClient: java.lang.String ntpHost>;

        exitmonitor r0;

        return $r2;
    }

    public static void setNtpHost(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r3 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <androidx.media3.exoplayer.util.SntpClient: java.lang.String ntpHost>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        <androidx.media3.exoplayer.util.SntpClient: java.lang.String ntpHost> = r0;

        <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized> = 0;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static boolean isInitialized()
    {
        java.lang.Object r0, $r1;
        boolean $z0;

        $r1 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>;

        r0 = $r1;

        entermonitor $r1;

        $z0 = <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized>;

        exitmonitor r0;

        return $z0;
    }

    public static long getElapsedRealtimeOffsetMs()
    {
        java.lang.Object r0, $r1;
        boolean $z0;
        long $l0;

        $r1 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>;

        r0 = $r1;

        entermonitor $r1;

        $z0 = <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized>;

        if $z0 == 0 goto label1;

        $l0 = <androidx.media3.exoplayer.util.SntpClient: long elapsedRealtimeOffsetMs>;

        goto label2;

     label1:
        $l0 = -9223372036854775807L;

     label2:
        exitmonitor r0;

        return $l0;
    }

    public static void initialize(androidx.media3.exoplayer.upstream.Loader, androidx.media3.exoplayer.util.SntpClient$InitializationCallback)
    {
        androidx.media3.exoplayer.util.SntpClient$InitializationCallback r0;
        boolean $z0;
        androidx.media3.exoplayer.util.SntpClient$NtpTimeLoadable $r1;
        androidx.media3.exoplayer.util.SntpClient$NtpTimeCallback $r2;
        androidx.media3.exoplayer.upstream.Loader $r3, r4;

        r4 := @parameter0: androidx.media3.exoplayer.upstream.Loader;

        r0 := @parameter1: androidx.media3.exoplayer.util.SntpClient$InitializationCallback;

        $z0 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized()>();

        if $z0 == 0 goto label2;

        if r0 == null goto label1;

        interfaceinvoke r0.<androidx.media3.exoplayer.util.SntpClient$InitializationCallback: void onInitialized()>();

     label1:
        return;

     label2:
        if r4 != null goto label3;

        $r3 = new androidx.media3.exoplayer.upstream.Loader;

        specialinvoke $r3.<androidx.media3.exoplayer.upstream.Loader: void <init>(java.lang.String)>("SntpClient");

        r4 = $r3;

     label3:
        $r1 = new androidx.media3.exoplayer.util.SntpClient$NtpTimeLoadable;

        specialinvoke $r1.<androidx.media3.exoplayer.util.SntpClient$NtpTimeLoadable: void <init>(androidx.media3.exoplayer.util.SntpClient$1)>(null);

        $r2 = new androidx.media3.exoplayer.util.SntpClient$NtpTimeCallback;

        specialinvoke $r2.<androidx.media3.exoplayer.util.SntpClient$NtpTimeCallback: void <init>(androidx.media3.exoplayer.util.SntpClient$InitializationCallback)>(r0);

        virtualinvoke r4.<androidx.media3.exoplayer.upstream.Loader: long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int)>($r1, $r2, 1);

        return;
    }

    private static long loadNtpTimeOffsetMs() throws java.io.IOException
    {
        java.net.InetAddress r0;
        java.net.DatagramSocket r1, $r4;
        long l0, l1, l2, l3, l7, l8, l9, l10, l11, l12, l13, $l16, $l23, $l24, $l25;
        java.net.DatagramPacket r2, $r5, $r6, r10;
        byte b4, b5, $b17, $b18, $b19, $b20, $b21, $b22;
        short s6;
        java.lang.String $r3;
        int $i14, $i15;
        java.lang.Throwable $r7, $r8, r11, r12;
        byte[] r9;

        $r3 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: java.lang.String getNtpHost()>();

        r0 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r3);

        $r4 = new java.net.DatagramSocket;

        specialinvoke $r4.<java.net.DatagramSocket: void <init>()>();

        r1 = $r4;

     label1:
        virtualinvoke r1.<java.net.DatagramSocket: void setSoTimeout(int)>(10000);

        r9 = newarray (byte)[48];

        $r5 = new java.net.DatagramPacket;

        $i14 = lengthof r9;

        specialinvoke $r5.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r9, $i14, r0, 123);

        r10 = $r5;

        r9[0] = 27;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        staticinvoke <androidx.media3.exoplayer.util.SntpClient: void writeTimestamp(byte[],int,long)>(r9, 40, l0);

        virtualinvoke r1.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r10);

        $r6 = new java.net.DatagramPacket;

        $i15 = lengthof r9;

        specialinvoke $r6.<java.net.DatagramPacket: void <init>(byte[],int)>(r9, $i15);

        r2 = $r6;

        virtualinvoke r1.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>(r2);

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l16 = l2 - l1;

        l3 = l0 + $l16;

        $b17 = r9[0];

        $b18 = $b17 >> 6;

        $b19 = $b18 & 3;

        b4 = (byte) $b19;

        $b20 = r9[0];

        $b21 = $b20 & 7;

        b5 = (byte) $b21;

        $b22 = r9[1];

        s6 = $b22 & 255;

        l7 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long readTimestamp(byte[],int)>(r9, 24);

        l8 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long readTimestamp(byte[],int)>(r9, 32);

        l9 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long readTimestamp(byte[],int)>(r9, 40);

        staticinvoke <androidx.media3.exoplayer.util.SntpClient: void checkValidServerReply(byte,byte,int,long)>(b4, b5, s6, l9);

        $l24 = l8 - l7;

        $l23 = l9 - l3;

        $l25 = $l24 + $l23;

        l10 = $l25 / 2L;

        l11 = l3 + l10;

        l12 = l2;

        l13 = l11 - l12;

     label2:
        virtualinvoke r1.<java.net.DatagramSocket: void close()>();

        return l13;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

     label4:
        virtualinvoke r1.<java.net.DatagramSocket: void close()>();

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r12 = $r7;

        virtualinvoke r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r12);

     label7:
        throw r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static long readTimestamp(byte[], int)
    {
        byte[] r0;
        int i0, $i3;
        long l1, l2, $l5, $l6, $l7, $l8, $l9;
        byte $b4, $b10;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long read32(byte[],int)>(r0, i0);

        $i3 = i0 + 4;

        l2 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long read32(byte[],int)>(r0, $i3);

        $b4 = l1 cmp 0L;

        if $b4 != 0 goto label1;

        $b10 = l2 cmp 0L;

        if $b10 != 0 goto label1;

        return 0L;

     label1:
        $l5 = l1 - 2208988800L;

        $l8 = $l5 * 1000L;

        $l6 = l2 * 1000L;

        $l7 = $l6 / 4294967296L;

        $l9 = $l8 + $l7;

        return $l9;
    }

    private static void writeTimestamp(byte[], int, long)
    {
        byte[] r0;
        long l0, l1, l2, $l4, $l5, $l8, $l11, $l14, $l17, $l18, $l21, $l24, l31, l32;
        byte $b3, $b7, $b10, $b13, $b16, $b20, $b23, $b26, $b28;
        int $i6, $i9, $i12, $i15, $i19, $i22, $i25, $i27, $i29, i30, i33, i34, i35, i36, i37, i38, i39, i40;
        double $d0, $d1;

        r0 := @parameter0: byte[];

        i30 := @parameter1: int;

        l0 := @parameter2: long;

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label1;

        $i29 = i30 + 8;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r0, i30, $i29, 0);

        return;

     label1:
        l31 = l0 / 1000L;

        $l4 = l31 * 1000L;

        l1 = l0 - $l4;

        l32 = l31 + 2208988800L;

        i33 = i30 + 1;

        $l5 = l32 >> 24;

        $i6 = (int) $l5;

        $b7 = (byte) $i6;

        r0[i30] = $b7;

        i34 = i33 + 1;

        $l8 = l32 >> 16;

        $i9 = (int) $l8;

        $b10 = (byte) $i9;

        r0[i33] = $b10;

        i35 = i34 + 1;

        $l11 = l32 >> 8;

        $i12 = (int) $l11;

        $b13 = (byte) $i12;

        r0[i34] = $b13;

        i36 = i35 + 1;

        $l14 = l32 >> 0;

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        r0[i35] = $b16;

        $l17 = l1 * 4294967296L;

        l2 = $l17 / 1000L;

        i37 = i36 + 1;

        $l18 = l2 >> 24;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        r0[i36] = $b20;

        i38 = i37 + 1;

        $l21 = l2 >> 16;

        $i22 = (int) $l21;

        $b23 = (byte) $i22;

        r0[i37] = $b23;

        i39 = i38 + 1;

        $l24 = l2 >> 8;

        $i25 = (int) $l24;

        $b26 = (byte) $i25;

        r0[i38] = $b26;

        i40 = i39 + 1;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 255.0;

        $i27 = (int) $d1;

        $b28 = (byte) $i27;

        r0[i39] = $b28;

        return;
    }

    private static long read32(byte[], int)
    {
        byte[] r0;
        int i0, i5, i6, i7, i8, $i9, $i10, $i11, $i30, $i31, $i32, $i33;
        byte b1, b2, b3, b4, $b26, $b27, $b28, $b29;
        short $s12, $s13, $s14, $s15;
        long $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        b1 = r0[i0];

        $i9 = i0 + 1;

        b2 = r0[$i9];

        $i10 = i0 + 2;

        b3 = r0[$i10];

        $i11 = i0 + 3;

        b4 = r0[$i11];

        $s12 = b1 & 128;

        if $s12 != 128 goto label1;

        $b29 = b1 & 127;

        $i30 = $b29 + 128;

        goto label2;

     label1:
        $i30 = b1;

     label2:
        i5 = $i30;

        $s13 = b2 & 128;

        if $s13 != 128 goto label3;

        $b28 = b2 & 127;

        $i31 = $b28 + 128;

        goto label4;

     label3:
        $i31 = b2;

     label4:
        i6 = $i31;

        $s14 = b3 & 128;

        if $s14 != 128 goto label5;

        $b27 = b3 & 127;

        $i32 = $b27 + 128;

        goto label6;

     label5:
        $i32 = b3;

     label6:
        i7 = $i32;

        $s15 = b4 & 128;

        if $s15 != 128 goto label7;

        $b26 = b4 & 127;

        $i33 = $b26 + 128;

        goto label8;

     label7:
        $i33 = b4;

     label8:
        i8 = $i33;

        $l16 = (long) i5;

        $l19 = $l16 << 24;

        $l17 = (long) i6;

        $l18 = $l17 << 16;

        $l22 = $l19 + $l18;

        $l20 = (long) i7;

        $l21 = $l20 << 8;

        $l24 = $l22 + $l21;

        $l23 = (long) i8;

        $l25 = $l24 + $l23;

        return $l25;
    }

    private static void checkValidServerReply(byte, byte, int, long) throws java.io.IOException
    {
        byte b0, b1, $b4;
        int i2;
        long l3;
        java.lang.StringBuilder $r2, $r3, $r8, $r9, r13, r15;
        java.lang.String $r4, $r10;
        java.io.IOException r12, r14, r16, r17;
        java.lang.Throwable r18, r19, r20, r21;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        if b0 != 3 goto label1;

        r12 = new java.io.IOException;

        specialinvoke r12.<java.io.IOException: void <init>(java.lang.String)>("SNTP: Unsynchronized server");

        r18 = (java.lang.Throwable) r12;

        throw r18;

     label1:
        if b1 == 4 goto label2;

        if b1 == 5 goto label2;

        r14 = new java.io.IOException;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SNTP: Untrusted mode: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.io.IOException: void <init>(java.lang.String)>($r10);

        r19 = (java.lang.Throwable) r14;

        throw r19;

     label2:
        if i2 == 0 goto label3;

        if i2 <= 15 goto label4;

     label3:
        r16 = new java.io.IOException;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SNTP: Untrusted stratum: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.io.IOException: void <init>(java.lang.String)>($r4);

        r20 = (java.lang.Throwable) r16;

        throw r20;

     label4:
        $b4 = l3 cmp 0L;

        if $b4 != 0 goto label5;

        r17 = new java.io.IOException;

        specialinvoke r17.<java.io.IOException: void <init>(java.lang.String)>("SNTP: Zero transmitTime");

        r21 = (java.lang.Throwable) r17;

        throw r21;

     label5:
        return;
    }

    static java.lang.Object access$100()
    {
        java.lang.Object $r0;

        $r0 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object loaderLock>;

        return $r0;
    }

    static java.lang.Object access$200()
    {
        java.lang.Object $r0;

        $r0 = <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock>;

        return $r0;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized>;

        return $z0;
    }

    static long access$400() throws java.io.IOException
    {
        long $l0;

        $l0 = staticinvoke <androidx.media3.exoplayer.util.SntpClient: long loadNtpTimeOffsetMs()>();

        return $l0;
    }

    static long access$502(long)
    {
        long l0;

        l0 := @parameter0: long;

        <androidx.media3.exoplayer.util.SntpClient: long elapsedRealtimeOffsetMs> = l0;

        return l0;
    }

    static boolean access$302(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <androidx.media3.exoplayer.util.SntpClient: boolean isInitialized> = z0;

        return z0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.media3.exoplayer.util.SntpClient: java.lang.Object loaderLock> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <androidx.media3.exoplayer.util.SntpClient: java.lang.Object valueLock> = $r1;

        <androidx.media3.exoplayer.util.SntpClient: java.lang.String ntpHost> = "time.android.com";

        return;
    }

