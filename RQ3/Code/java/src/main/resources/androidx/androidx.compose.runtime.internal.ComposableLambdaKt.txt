androidx.compose.runtime.internal.ComposableLambdaKt
<androidx.compose.runtime.internal.ComposableLambdaKt: int SLOTS_PER_INT>
<androidx.compose.runtime.internal.ComposableLambdaKt: int BITS_PER_SLOT>
    public static final int bitsForSlot(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1 % 10;

        $i3 = i2 * 3;

        $i4 = $i3 + 1;

        $i5 = i0 << $i4;

        return $i5;
    }

    public static final int sameBits(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: int bitsForSlot(int,int)>(1, i0);

        return $i1;
    }

    public static final int differentBits(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: int bitsForSlot(int,int)>(2, i0);

        return $i1;
    }

    public static final boolean replacableWith(androidx.compose.runtime.RecomposeScope, androidx.compose.runtime.RecomposeScope)
    {
        androidx.compose.runtime.RecomposeScope $r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.compose.runtime.RecomposeScopeImpl $r2, $r3, $r5;
        androidx.compose.runtime.Anchor $r4, $r6;

        $r0 := @parameter0: androidx.compose.runtime.RecomposeScope;

        r1 := @parameter1: androidx.compose.runtime.RecomposeScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        if $r0 == null goto label1;

        $z0 = $r0 instanceof androidx.compose.runtime.RecomposeScopeImpl;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof androidx.compose.runtime.RecomposeScopeImpl;

        if $z1 == 0 goto label2;

        $r2 = (androidx.compose.runtime.RecomposeScopeImpl) $r0;

        $z2 = virtualinvoke $r2.<androidx.compose.runtime.RecomposeScopeImpl: boolean getValid()>();

        if $z2 == 0 goto label1;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r0, r1);

        if $z3 != 0 goto label1;

        $r3 = (androidx.compose.runtime.RecomposeScopeImpl) $r0;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor getAnchor()>();

        $r5 = (androidx.compose.runtime.RecomposeScopeImpl) r1;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.RecomposeScopeImpl: androidx.compose.runtime.Anchor getAnchor()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    public static final androidx.compose.runtime.internal.ComposableLambda composableLambda(androidx.compose.runtime.Composer, int, boolean, java.lang.Object)
    {
        androidx.compose.runtime.Composer r0;
        int i0;
        boolean z0;
        java.lang.Object r1, r2, $r6;
        androidx.compose.runtime.internal.ComposableLambdaImpl r3, r4, $r8, $r9;
        androidx.compose.runtime.Composer$Companion $r5;
        androidx.compose.runtime.internal.ComposableLambda $r7;

        r0 := @parameter0: androidx.compose.runtime.Composer;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "composer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(i0);

        r2 = interfaceinvoke r0.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r5 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r2 != $r6 goto label1;

        $r8 = new androidx.compose.runtime.internal.ComposableLambdaImpl;

        specialinvoke $r8.<androidx.compose.runtime.internal.ComposableLambdaImpl: void <init>(int,boolean)>(i0, z0);

        r4 = $r8;

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r4);

        $r9 = r4;

        goto label2;

     label1:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.compose.runtime.internal.ComposableLambdaImpl");

        $r9 = (androidx.compose.runtime.internal.ComposableLambdaImpl) r2;

     label2:
        r3 = $r9;

        virtualinvoke r3.<androidx.compose.runtime.internal.ComposableLambdaImpl: void update(java.lang.Object)>(r1);

        interfaceinvoke r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r7 = (androidx.compose.runtime.internal.ComposableLambda) r3;

        return $r7;
    }

    public static final androidx.compose.runtime.internal.ComposableLambda composableLambdaInstance(int, boolean, java.lang.Object)
    {
        int i0;
        boolean z0;
        java.lang.Object r0;
        androidx.compose.runtime.internal.ComposableLambdaImpl r1, $r2;
        androidx.compose.runtime.internal.ComposableLambda $r3;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "block");

        $r2 = new androidx.compose.runtime.internal.ComposableLambdaImpl;

        specialinvoke $r2.<androidx.compose.runtime.internal.ComposableLambdaImpl: void <init>(int,boolean)>(i0, z0);

        r1 = $r2;

        virtualinvoke r1.<androidx.compose.runtime.internal.ComposableLambdaImpl: void update(java.lang.Object)>(r0);

        $r3 = (androidx.compose.runtime.internal.ComposableLambda) r1;

        return $r3;
    }

