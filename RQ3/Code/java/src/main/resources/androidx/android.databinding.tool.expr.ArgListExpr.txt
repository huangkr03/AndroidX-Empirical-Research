android.databinding.tool.expr.ArgListExpr
<android.databinding.tool.expr.ArgListExpr: int mId>
    public void <init>(int, java.lang.Iterable)
    {
        android.databinding.tool.expr.ArgListExpr r0;
        int i0;
        java.lang.Iterable r1;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Iterable;

        specialinvoke r0.<android.databinding.tool.expr.Expr: void <init>(java.lang.Iterable)>(r1);

        r0.<android.databinding.tool.expr.ArgListExpr: int mId> = i0;

        return;
    }

    protected java.lang.String computeUniqueKey()
    {
        android.databinding.tool.expr.ArgListExpr r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        int $i0;
        java.util.List $r5;
        java.lang.String $r6, $r8;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ArgList[");

        $i0 = r0.<android.databinding.tool.expr.ArgListExpr: int mId>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.ArgListExpr: java.util.List getChildren()>();

        $r6 = staticinvoke <android.databinding.tool.expr.ArgListExpr: java.lang.String join(java.util.List)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected android.databinding.tool.writer.KCode generateCode()
    {
        android.databinding.tool.expr.ArgListExpr r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("should never try to convert an argument expressions into code");

        throw $r1;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.expr.ArgListExpr r0;
        java.lang.StringBuilder $r1, $r2, $r6, $r7;
        com.google.common.base.Joiner $r3;
        java.util.List $r4;
        java.lang.String $r5, $r8;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",");

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.ArgListExpr: java.util.List getChildren()>();

        $r5 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void injectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer, android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.ArgListExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        android.databinding.tool.expr.ExprModel r2;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        r2 := @parameter1: android.databinding.tool.expr.ExprModel;

        return;
    }

    public void injectSafeUnboxingForParams(android.databinding.tool.expr.ExprModel, android.databinding.tool.reflection.ModelClass[])
    {
        android.databinding.tool.expr.ArgListExpr r0;
        android.databinding.tool.expr.ExprModel r1;
        android.databinding.tool.reflection.ModelClass[] r2;
        android.databinding.tool.expr.Expr r3;
        int $i0, i1;
        java.util.List $r4;
        java.lang.Object $r5;
        android.databinding.tool.reflection.ModelClass $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r2 := @parameter1: android.databinding.tool.reflection.ModelClass[];

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.ArgListExpr: java.util.List getChildren()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.databinding.tool.expr.Expr) $r5;

        $r6 = r2[i1];

        $z0 = virtualinvoke $r6.<android.databinding.tool.reflection.ModelClass: boolean isNullable()>();

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r3.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z1 = virtualinvoke $r7.<android.databinding.tool.reflection.ModelClass: boolean isNullable()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.databinding.tool.expr.ArgListExpr: void safeUnboxChild(android.databinding.tool.expr.ExprModel,android.databinding.tool.expr.Expr)>(r1, r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.ArgListExpr r0;
        android.databinding.tool.expr.ExprModel r1;
        java.util.List $r2, $r3;
        android.databinding.tool.expr.Expr $r4;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.ArgListExpr: java.util.List getChildren()>();

        $r3 = staticinvoke <android.databinding.tool.expr.ArgListExpr: java.util.List cloneToModel(android.databinding.tool.expr.ExprModel,java.util.List)>(r1, $r2);

        $r4 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.Expr argListExpr(java.lang.Iterable)>($r3);

        return $r4;
    }

    protected android.databinding.tool.reflection.ModelClass resolveType(android.databinding.tool.reflection.ModelAnalyzer)
    {
        android.databinding.tool.expr.ArgListExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        android.databinding.tool.reflection.ModelClass $r2;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        $r2 = virtualinvoke r1.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelClass findClass(java.lang.Class)>(class "Ljava/lang/Void;");

        return $r2;
    }

    protected java.util.List constructDependencies()
    {
        android.databinding.tool.expr.ArgListExpr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        $r1 = specialinvoke r0.<android.databinding.tool.expr.Expr: java.util.List constructDynamicChildrenDependencies()>();

        return $r1;
    }

    public boolean canBeEvaluatedToAVariable()
    {
        android.databinding.tool.expr.ArgListExpr r0;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        return 0;
    }

    public java.lang.String getInvertibleError()
    {
        android.databinding.tool.expr.ArgListExpr r0;

        r0 := @this: android.databinding.tool.expr.ArgListExpr;

        return "Merged bindings are not invertible.";
    }

