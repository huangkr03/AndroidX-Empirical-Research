androidx.media3.exoplayer.hls.HlsMediaSource
<androidx.media3.exoplayer.hls.HlsMediaSource: int METADATA_TYPE_ID3>
<androidx.media3.exoplayer.hls.HlsMediaSource: int METADATA_TYPE_EMSG>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.hls.HlsMediaSource: boolean allowChunklessPreparation>
<androidx.media3.exoplayer.hls.HlsMediaSource: int metadataType>
<androidx.media3.exoplayer.hls.HlsMediaSource: boolean useSessionKeys>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>
<androidx.media3.exoplayer.hls.HlsMediaSource: long elapsedRealTimeOffsetMs>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>
<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>
    private void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.hls.HlsDataSourceFactory, androidx.media3.exoplayer.hls.HlsExtractorFactory, androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker, long, boolean, int, boolean)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r2;
        androidx.media3.exoplayer.hls.HlsExtractorFactory r3;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r4;
        androidx.media3.exoplayer.drm.DrmSessionManager r5;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r6;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker r7;
        long l0;
        boolean z0, z1;
        int i1;
        androidx.media3.common.MediaItem$LocalConfiguration $r8, $r10;
        java.lang.Object $r9;
        androidx.media3.common.MediaItem$LiveConfiguration $r11;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        r3 := @parameter2: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        r4 := @parameter3: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r5 := @parameter4: androidx.media3.exoplayer.drm.DrmSessionManager;

        r6 := @parameter5: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r7 := @parameter6: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker;

        l0 := @parameter7: long;

        z0 := @parameter8: boolean;

        i1 := @parameter9: int;

        z1 := @parameter10: boolean;

        specialinvoke r0.<androidx.media3.exoplayer.source.BaseMediaSource: void <init>()>();

        $r8 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        $r10 = (androidx.media3.common.MediaItem$LocalConfiguration) $r9;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration> = $r10;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem> = r1;

        $r11 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration> = $r11;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory> = r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory> = r3;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = r4;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager> = r5;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = r6;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker> = r7;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: long elapsedRealTimeOffsetMs> = l0;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: boolean allowChunklessPreparation> = z0;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: int metadataType> = i1;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: boolean useSessionKeys> = z1;

        return;
    }

    public androidx.media3.common.MediaItem getMediaItem()
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.common.MediaItem $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        return $r1;
    }

    protected void prepareSourceInternal(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r2;
        androidx.media3.exoplayer.drm.DrmSessionManager $r3, $r4;
        android.os.Looper $r5, $r7;
        java.lang.Object $r6;
        androidx.media3.exoplayer.analytics.PlayerId $r8;
        androidx.media3.common.MediaItem$LocalConfiguration $r9;
        android.net.Uri $r10;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r11;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener> = r1;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.drm.DrmSessionManager: void prepare()>();

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (android.os.Looper) $r6;

        $r8 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        interfaceinvoke $r4.<androidx.media3.exoplayer.drm.DrmSessionManager: void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId)>($r7, $r8);

        r2 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(null);

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        $r10 = $r9.<androidx.media3.common.MediaItem$LocalConfiguration: android.net.Uri uri>;

        interfaceinvoke $r11.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void start(android.net.Uri,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener)>($r10, r2, r0);

        return;
    }

    public void maybeThrowSourceInfoRefreshError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void maybeThrowPrimaryPlaylistRefreshError()>();

        return;
    }

    public androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.upstream.Allocator, long)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0;
        androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher r3;
        androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher r4;
        androidx.media3.exoplayer.hls.HlsMediaPeriod $r5;
        androidx.media3.exoplayer.hls.HlsExtractorFactory $r6;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r7;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory $r8;
        androidx.media3.datasource.TransferListener $r9;
        androidx.media3.exoplayer.drm.DrmSessionManager $r10;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r11;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r12;
        boolean $z0, $z1;
        int $i1;
        androidx.media3.exoplayer.analytics.PlayerId $r13;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter2: long;

        r3 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        r4 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId)>(r1);

        $r5 = new androidx.media3.exoplayer.hls.HlsMediaPeriod;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory>;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.datasource.TransferListener mediaTransferListener>;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: boolean allowChunklessPreparation>;

        $i1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: int metadataType>;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: boolean useSessionKeys>;

        $r13 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.analytics.PlayerId getPlayerId()>();

        specialinvoke $r5.<androidx.media3.exoplayer.hls.HlsMediaPeriod: void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,boolean,int,boolean,androidx.media3.exoplayer.analytics.PlayerId)>($r6, $r7, $r8, $r9, $r10, r4, $r11, r3, r2, $r12, $z0, $i1, $z1, $r13);

        return $r5;
    }

    public void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.source.MediaPeriod r1;
        androidx.media3.exoplayer.hls.HlsMediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.MediaPeriod;

        $r2 = (androidx.media3.exoplayer.hls.HlsMediaPeriod) r1;

        virtualinvoke $r2.<androidx.media3.exoplayer.hls.HlsMediaPeriod: void release()>();

        return;
    }

    protected void releaseSourceInternal()
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r1;
        androidx.media3.exoplayer.drm.DrmSessionManager $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void stop()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.drm.DrmSessionManager: void release()>();

        return;
    }

    public void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        long l0, l1, $l4, $l5, $l6;
        androidx.media3.exoplayer.hls.HlsManifest r2, $r4;
        androidx.media3.exoplayer.source.SinglePeriodTimeline r3, $r10;
        boolean $z0, $z1;
        int $i2, $i3;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r5, $r9;
        androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasProgramDateTime>;

        if $z0 == 0 goto label1;

        $l4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $l5 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>($l4);

        goto label2;

     label1:
        $l5 = -9223372036854775807L;

     label2:
        l0 = $l5;

        $i2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int playlistType>;

        if $i2 == 2 goto label3;

        $i3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int playlistType>;

        if $i3 != 1 goto label4;

     label3:
        $l6 = l0;

        goto label5;

     label4:
        $l6 = -9223372036854775807L;

     label5:
        l1 = $l6;

        $r4 = new androidx.media3.exoplayer.hls.HlsManifest;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r6 = interfaceinvoke $r5.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist getMultivariantPlaylist()>();

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = (androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist) $r7;

        specialinvoke $r4.<androidx.media3.exoplayer.hls.HlsManifest: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>($r8, r1);

        r2 = $r4;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $z1 = interfaceinvoke $r9.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isLive()>();

        if $z1 == 0 goto label6;

        $r10 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForLive(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long,androidx.media3.exoplayer.hls.HlsManifest)>(r1, l1, l0, r2);

        goto label7;

     label6:
        $r10 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForOnDemand(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long,androidx.media3.exoplayer.hls.HlsManifest)>(r1, l1, l0, r2);

     label7:
        r3 = $r10;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: void refreshSourceInfo(androidx.media3.common.Timeline)>(r3);

        return;
    }

    private androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForLive(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long, long, androidx.media3.exoplayer.hls.HlsManifest)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l10, $l11, $l13, $l20, $l21, $l22, l23, l24;
        androidx.media3.exoplayer.hls.HlsManifest r2;
        boolean z0, $z1, $z3, $z4, $z5, $z6;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r3;
        androidx.media3.common.MediaItem$LiveConfiguration $r4, $r6, $r8;
        byte $b9;
        int $i12;
        androidx.media3.exoplayer.source.SinglePeriodTimeline $r5;
        androidx.media3.common.MediaItem $r7;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: androidx.media3.exoplayer.hls.HlsManifest;

        $l6 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l7 = interfaceinvoke $r3.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        l2 = $l6 - $l7;

        $z1 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z1 == 0 goto label1;

        $l21 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l22 = l2 + $l21;

        goto label2;

     label1:
        $l22 = -9223372036854775807L;

     label2:
        l3 = $l22;

        l4 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: long getLiveEdgeOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r1);

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l8 = $r4.<androidx.media3.common.MediaItem$LiveConfiguration: long targetOffsetMs>;

        $b9 = $l8 cmp -9223372036854775807L;

        if $b9 == 0 goto label3;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l20 = $r8.<androidx.media3.common.MediaItem$LiveConfiguration: long targetOffsetMs>;

        l23 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l20);

        goto label4;

     label3:
        l23 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaSource: long getTargetLiveOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long)>(r1, l4);

     label4:
        $l10 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l11 = $l10 + l4;

        l24 = staticinvoke <androidx.media3.common.util.Util: long constrainValue(long,long,long)>(l23, l4, $l11);

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: void updateLiveConfiguration(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long)>(r1, l24);

        l5 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: long getLiveWindowDefaultStartPositionUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long)>(r1, l4);

        $i12 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int playlistType>;

        if $i12 != 2 goto label5;

        $z3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasPositiveStartOffset>;

        if $z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        z0 = $z4;

        $r5 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l13 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $z5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z5 != 0 goto label7;

        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        specialinvoke $r5.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,long,long,long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem,androidx.media3.common.MediaItem$LiveConfiguration)>(l0, l1, -9223372036854775807L, l3, $l13, l2, l5, 1, $z6, z0, r2, $r7, $r6);

        return $r5;
    }

    private androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForOnDemand(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long, long, androidx.media3.exoplayer.hls.HlsManifest)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        long l0, l1, $l2, $l4, $l5, $l7, l8, $l9, $l10;
        androidx.media3.exoplayer.hls.HlsManifest r2;
        byte $b3, $b6;
        java.util.List $r3, $r4;
        boolean $z0, $z1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r5;
        androidx.media3.exoplayer.source.SinglePeriodTimeline $r6;
        androidx.media3.common.MediaItem $r7;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: androidx.media3.exoplayer.hls.HlsManifest;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 == 0 goto label1;

        $r3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        l8 = 0L;

        goto label5;

     label2:
        $z1 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean preciseStart>;

        if $z1 != 0 goto label3;

        $l5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        $l4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label4;

     label3:
        l8 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        goto label5;

     label4:
        $r4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $l7 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        $r5 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment findClosestPrecedingSegment(java.util.List,long)>($r4, $l7);

        l8 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

     label5:
        $r6 = new androidx.media3.exoplayer.source.SinglePeriodTimeline;

        $l9 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l10 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        specialinvoke $r6.<androidx.media3.exoplayer.source.SinglePeriodTimeline: void <init>(long,long,long,long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem,androidx.media3.common.MediaItem$LiveConfiguration)>(l0, l1, -9223372036854775807L, $l9, $l10, 0L, l8, 1, 0, 1, r2, $r7, null);

        return $r6;
    }

    private long getLiveEdgeOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        boolean $z0;
        long $l0, $l1, $l2, $l3, $l4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasProgramDateTime>;

        if $z0 == 0 goto label1;

        $l0 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: long elapsedRealTimeOffsetMs>;

        $l1 = staticinvoke <androidx.media3.common.util.Util: long getNowUnixTimeMs(long)>($l0);

        $l2 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l1);

        $l3 = virtualinvoke r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long getEndTimeUs()>();

        $l4 = $l2 - $l3;

        goto label2;

     label1:
        $l4 = 0L;

     label2:
        return $l4;
    }

    private long getLiveWindowDefaultStartPositionUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        long l0, l1, $l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r2;
        byte $b3;
        androidx.media3.common.MediaItem$LiveConfiguration $r3;
        boolean $z0, $z1;
        java.util.List $r4, $r5, $r6, $r7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part r8, r9;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        $b3 = $l2 cmp -9223372036854775807L;

        if $b3 == 0 goto label1;

        $l11 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        goto label2;

     label1:
        $l4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l6 = $l4 + l0;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $l5 = $r3.<androidx.media3.common.MediaItem$LiveConfiguration: long targetOffsetMs>;

        $l7 = staticinvoke <androidx.media3.common.util.Util: long msToUs(long)>($l5);

        $l11 = $l6 - $l7;

     label2:
        l1 = $l11;

        $z0 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean preciseStart>;

        if $z0 == 0 goto label3;

        return l1;

     label3:
        $r4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        r8 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part findClosestPrecedingIndependentPart(java.util.List,long)>($r4, l1);

        if r8 == null goto label4;

        $l10 = r8.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long relativeStartTimeUs>;

        return $l10;

     label4:
        $r5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        return 0L;

     label5:
        $r6 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        r2 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment findClosestPrecedingSegment(java.util.List,long)>($r6, l1);

        $r7 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        r9 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part findClosestPrecedingIndependentPart(java.util.List,long)>($r7, l1);

        if r9 == null goto label6;

        $l9 = r9.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long relativeStartTimeUs>;

        return $l9;

     label6:
        $l8 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

        return $l8;
    }

    private void updateLiveConfiguration(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        long l0, $l3, $l5, $l7;
        boolean z0, $z1;
        androidx.media3.common.MediaItem $r2, $r11;
        androidx.media3.common.MediaItem$LiveConfiguration $r3, $r5, $r7, $r9, $r12;
        float $f0, $f1, $f2, $f3;
        byte $b1, $b2, $b4, $b6;
        androidx.media3.common.MediaItem$LiveConfiguration$Builder $r4, $r6, $r8, $r15;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl $r13, $r14;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        $r3 = $r2.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f0 = $r3.<androidx.media3.common.MediaItem$LiveConfiguration: float minPlaybackSpeed>;

        $b1 = $f0 cmpl -3.4028235E38F;

        if $b1 != 0 goto label1;

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem mediaItem>;

        $r12 = $r11.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f1 = $r12.<androidx.media3.common.MediaItem$LiveConfiguration: float maxPlaybackSpeed>;

        $b2 = $f1 cmpl -3.4028235E38F;

        if $b2 != 0 goto label1;

        $r13 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $l3 = $r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long holdBackUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        $r14 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $l5 = $r14.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long partHoldBackUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r15 = new androidx.media3.common.MediaItem$LiveConfiguration$Builder;

        specialinvoke $r15.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: void <init>()>();

        $l7 = staticinvoke <androidx.media3.common.util.Util: long usToMs(long)>(l0);

        $r4 = virtualinvoke $r15.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setTargetOffsetMs(long)>($l7);

        if z0 == 0 goto label3;

        $f2 = 1.0F;

        goto label4;

     label3:
        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f2 = $r5.<androidx.media3.common.MediaItem$LiveConfiguration: float minPlaybackSpeed>;

     label4:
        $r6 = virtualinvoke $r4.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMinPlaybackSpeed(float)>($f2);

        if z0 == 0 goto label5;

        $f3 = 1.0F;

        goto label6;

     label5:
        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration>;

        $f3 = $r7.<androidx.media3.common.MediaItem$LiveConfiguration: float maxPlaybackSpeed>;

     label6:
        $r8 = virtualinvoke $r6.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration$Builder setMaxPlaybackSpeed(float)>($f3);

        $r9 = virtualinvoke $r8.<androidx.media3.common.MediaItem$LiveConfiguration$Builder: androidx.media3.common.MediaItem$LiveConfiguration build()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource: androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration> = $r9;

        return;
    }

    private static long getTargetLiveOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long)
    {
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r0;
        long l0, $l1, $l3, $l5, $l7, $l8, $l10, $l11, l12, $l13;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl r1;
        byte $b2, $b4, $b6, $b9;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        r1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl>;

        $l1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $l11 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        $l10 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startOffsetUs>;

        l12 = $l11 - $l10;

        goto label4;

     label1:
        $l3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long partHoldBackUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 == 0 goto label2;

        $l8 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long partTargetDurationUs>;

        $b9 = $l8 cmp -9223372036854775807L;

        if $b9 == 0 goto label2;

        l12 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long partHoldBackUs>;

        goto label4;

     label2:
        $l5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long holdBackUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 == 0 goto label3;

        l12 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl: long holdBackUs>;

        goto label4;

     label3:
        $l7 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long targetDurationUs>;

        l12 = 3L * $l7;

     label4:
        $l13 = l12 + l0;

        return $l13;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part findClosestPrecedingIndependentPart(java.util.List, long)
    {
        java.util.List r0;
        long l0, $l2, $l4;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part r1, r3;
        int $i1, i6;
        java.lang.Object $r2;
        byte $b3, $b5;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        r3 = null;

        i6 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i6 >= $i1 goto label4;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        r1 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) $r2;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long relativeStartTimeUs>;

        $b3 = $l2 cmp l0;

        if $b3 > 0 goto label2;

        $z0 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isIndependent>;

        if $z0 == 0 goto label2;

        r3 = r1;

        goto label3;

     label2:
        $l4 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long relativeStartTimeUs>;

        $b5 = $l4 cmp l0;

        if $b5 <= 0 goto label3;

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return r3;
    }

    private static androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment findClosestPrecedingSegment(java.util.List, long)
    {
        java.util.List r0;
        long l0;
        int i1;
        java.lang.Long $r1;
        java.lang.Object $r2;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r3;
        java.lang.Comparable r4;

        r0 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r4 = (java.lang.Comparable) $r1;

        i1 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean)>(r0, r4, 1, 1);

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r2;

        return $r3;
    }

    void <init>(androidx.media3.common.MediaItem, androidx.media3.exoplayer.hls.HlsDataSourceFactory, androidx.media3.exoplayer.hls.HlsExtractorFactory, androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory, androidx.media3.exoplayer.drm.DrmSessionManager, androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy, androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker, long, boolean, int, boolean, androidx.media3.exoplayer.hls.HlsMediaSource$1)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r2;
        androidx.media3.exoplayer.hls.HlsExtractorFactory r3;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r4;
        androidx.media3.exoplayer.drm.DrmSessionManager r5;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r6;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker r7;
        long l0;
        boolean z0, z1;
        int i1;
        androidx.media3.exoplayer.hls.HlsMediaSource$1 r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        r2 := @parameter1: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        r3 := @parameter2: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        r4 := @parameter3: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        r5 := @parameter4: androidx.media3.exoplayer.drm.DrmSessionManager;

        r6 := @parameter5: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        r7 := @parameter6: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker;

        l0 := @parameter7: long;

        z0 := @parameter8: boolean;

        i1 := @parameter9: int;

        z1 := @parameter10: boolean;

        r8 := @parameter11: androidx.media3.exoplayer.hls.HlsMediaSource$1;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,long,boolean,int,boolean)>(r1, r2, r3, r4, r5, r6, r7, l0, z0, i1, z1);

        return;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.exoplayer.hls");

        return;
    }

androidx.media3.exoplayer.hls.HlsMediaSource$1
androidx.media3.exoplayer.hls.HlsMediaSource$Factory
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsDataSourceFactory hlsDataSourceFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean allowChunklessPreparation>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: int metadataType>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean useSessionKeys>
<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: long elapsedRealTimeOffsetMs>
    public void <init>(androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.datasource.DataSource$Factory r1;
        androidx.media3.exoplayer.hls.DefaultHlsDataSourceFactory $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.DataSource$Factory;

        $r2 = new androidx.media3.exoplayer.hls.DefaultHlsDataSourceFactory;

        specialinvoke $r2.<androidx.media3.exoplayer.hls.DefaultHlsDataSourceFactory: void <init>(androidx.media3.datasource.DataSource$Factory)>(r1);

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory)>($r2);

        return;
    }

    public void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r1, $r3;
        java.lang.Object $r2;
        androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider $r4;
        androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistParserFactory $r5;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory $r6;
        androidx.media3.exoplayer.hls.HlsExtractorFactory $r7;
        androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy $r8;
        androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory $r9;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.exoplayer.hls.HlsDataSourceFactory) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsDataSourceFactory hlsDataSourceFactory> = $r3;

        $r4 = new androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider;

        specialinvoke $r4.<androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = $r4;

        $r5 = new androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistParserFactory;

        specialinvoke $r5.<androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistParserFactory: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory> = $r5;

        $r6 = <androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory FACTORY>;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory> = $r6;

        $r7 = <androidx.media3.exoplayer.hls.HlsExtractorFactory: androidx.media3.exoplayer.hls.HlsExtractorFactory DEFAULT>;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory> = $r7;

        $r8 = new androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy;

        specialinvoke $r8.<androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r8;

        $r9 = new androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory;

        specialinvoke $r9.<androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = $r9;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: int metadataType> = 1;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: long elapsedRealTimeOffsetMs> = -9223372036854775807L;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean allowChunklessPreparation> = 1;

        return;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setExtractorFactory(androidx.media3.exoplayer.hls.HlsExtractorFactory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.hls.HlsExtractorFactory r1, $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        if r1 == null goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = <androidx.media3.exoplayer.hls.HlsExtractorFactory: androidx.media3.exoplayer.hls.HlsExtractorFactory DEFAULT>;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setLoadErrorHandlingPolicy no longer handles null by instantiating a new DefaultLoadErrorHandlingPolicy. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setPlaylistParserFactory(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "HlsMediaSource.Factory#setPlaylistParserFactory no longer handles null by instantiating a new DefaultHlsPlaylistParserFactory. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setPlaylistTrackerFactory(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "HlsMediaSource.Factory#setPlaylistTrackerFactory no longer handles null by defaulting to DefaultHlsPlaylistTracker.FACTORY. Explicitly pass a reference to this instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setCompositeSequenceableLoaderFactory(androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "HlsMediaSource.Factory#setCompositeSequenceableLoaderFactory no longer handles null by instantiating a new DefaultCompositeSequenceableLoaderFactory. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory> = $r3;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setAllowChunklessPreparation(boolean)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean allowChunklessPreparation> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setMetadataType(int)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: int metadataType> = i0;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setUseSessionKeys(boolean)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean useSessionKeys> = z0;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "MediaSource.Factory#setDrmSessionManagerProvider no longer handles null by instantiating a new DefaultDrmSessionManagerProvider. Explicitly construct and pass an instance in order to retain the old behavior.");

        $r3 = (androidx.media3.exoplayer.drm.DrmSessionManagerProvider) $r2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider> = $r3;

        return r0;
    }

    androidx.media3.exoplayer.hls.HlsMediaSource$Factory setElapsedRealTimeOffsetMs(long)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: long elapsedRealTimeOffsetMs> = l0;

        return r0;
    }

    public androidx.media3.exoplayer.hls.HlsMediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        java.util.List r2;
        androidx.media3.common.MediaItem$LocalConfiguration $r3, $r5;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.hls.HlsMediaSource $r6;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider $r7;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory $r8, $r13;
        androidx.media3.exoplayer.hls.HlsExtractorFactory $r9;
        androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory $r10;
        androidx.media3.exoplayer.drm.DrmSessionManager $r11;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy $r12, $r15;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory $r14;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r16;
        int $i0;
        long $l1;
        androidx.media3.exoplayer.hls.playlist.FilteringHlsPlaylistParserFactory $r17;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory r18;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r3 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        r18 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory>;

        $r5 = r1.<androidx.media3.common.MediaItem: androidx.media3.common.MediaItem$LocalConfiguration localConfiguration>;

        r2 = $r5.<androidx.media3.common.MediaItem$LocalConfiguration: java.util.List streamKeys>;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r17 = new androidx.media3.exoplayer.hls.playlist.FilteringHlsPlaylistParserFactory;

        specialinvoke $r17.<androidx.media3.exoplayer.hls.playlist.FilteringHlsPlaylistParserFactory: void <init>(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory,java.util.List)>(r18, r2);

        r18 = $r17;

     label1:
        $r6 = new androidx.media3.exoplayer.hls.HlsMediaSource;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsDataSourceFactory hlsDataSourceFactory>;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory>;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider>;

        $r11 = interfaceinvoke $r7.<androidx.media3.exoplayer.drm.DrmSessionManagerProvider: androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem)>(r1);

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory>;

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsDataSourceFactory hlsDataSourceFactory>;

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy>;

        $r16 = interfaceinvoke $r14.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker createTracker(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory)>($r13, $r12, r18);

        $l1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: long elapsedRealTimeOffsetMs>;

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean allowChunklessPreparation>;

        $i0 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: int metadataType>;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: boolean useSessionKeys>;

        specialinvoke $r6.<androidx.media3.exoplayer.hls.HlsMediaSource: void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,long,boolean,int,boolean,androidx.media3.exoplayer.hls.HlsMediaSource$1)>(r1, $r8, $r9, $r10, $r11, $r15, $r16, $l1, $z2, $i0, $z1, null);

        return $r6;
    }

    public int[] getSupportedTypes()
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        $r1 = newarray (int)[1];

        $r1[0] = 2;

        return $r1;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0;
        androidx.media3.common.MediaItem r1;
        androidx.media3.exoplayer.hls.HlsMediaSource $r2;
        androidx.media3.exoplayer.source.MediaSource r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsMediaSource createMediaSource(androidx.media3.common.MediaItem)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

    public volatile androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)
    {
        androidx.media3.exoplayer.hls.HlsMediaSource$Factory r0, $r2;
        androidx.media3.exoplayer.drm.DrmSessionManagerProvider r1;
        androidx.media3.exoplayer.source.MediaSource$Factory r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaSource$Factory;

        r1 := @parameter0: androidx.media3.exoplayer.drm.DrmSessionManagerProvider;

        $r2 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaSource$Factory: androidx.media3.exoplayer.hls.HlsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider)>(r1);

        r3 = (androidx.media3.exoplayer.source.MediaSource$Factory) $r2;

        return r3;
    }

androidx.media3.exoplayer.hls.HlsMediaSource$MetadataType
