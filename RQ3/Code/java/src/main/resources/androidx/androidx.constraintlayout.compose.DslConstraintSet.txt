androidx.constraintlayout.compose.DslConstraintSet
<androidx.constraintlayout.compose.DslConstraintSet: kotlin.jvm.functions.Function1 description>
<androidx.constraintlayout.compose.DslConstraintSet: androidx.constraintlayout.compose.ConstraintSet extendFrom>
    public void <init>(kotlin.jvm.functions.Function1, androidx.constraintlayout.compose.ConstraintSet)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.constraintlayout.compose.ConstraintSet r2;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: androidx.constraintlayout.compose.ConstraintSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "description");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.compose.DslConstraintSet: kotlin.jvm.functions.Function1 description> = r1;

        r0.<androidx.constraintlayout.compose.DslConstraintSet: androidx.constraintlayout.compose.ConstraintSet extendFrom> = r2;

        return;
    }

    public void <init>(kotlin.jvm.functions.Function1, androidx.constraintlayout.compose.ConstraintSet, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.constraintlayout.compose.ConstraintSet r3;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r3 := @parameter1: androidx.constraintlayout.compose.ConstraintSet;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        specialinvoke r0.<androidx.constraintlayout.compose.DslConstraintSet: void <init>(kotlin.jvm.functions.Function1,androidx.constraintlayout.compose.ConstraintSet)>(r1, r3);

        return;
    }

    public final kotlin.jvm.functions.Function1 getDescription()
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        $r1 = r0.<androidx.constraintlayout.compose.DslConstraintSet: kotlin.jvm.functions.Function1 description>;

        return $r1;
    }

    public androidx.constraintlayout.compose.ConstraintSet getExtendFrom()
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        androidx.constraintlayout.compose.ConstraintSet $r1;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        $r1 = r0.<androidx.constraintlayout.compose.DslConstraintSet: androidx.constraintlayout.compose.ConstraintSet extendFrom>;

        return $r1;
    }

    public void applyToState(androidx.constraintlayout.compose.State)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        androidx.constraintlayout.compose.State r1;
        androidx.constraintlayout.compose.ConstraintSetScope r2, $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: androidx.constraintlayout.compose.State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r3 = new androidx.constraintlayout.compose.ConstraintSetScope;

        specialinvoke $r3.<androidx.constraintlayout.compose.ConstraintSetScope: void <init>()>();

        r2 = $r3;

        $r4 = r0.<androidx.constraintlayout.compose.DslConstraintSet: kotlin.jvm.functions.Function1 description>;

        interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        virtualinvoke r2.<androidx.constraintlayout.compose.ConstraintSetScope: void applyTo(androidx.constraintlayout.compose.State)>(r1);

        return;
    }

    public androidx.constraintlayout.compose.ConstraintSet override(java.lang.String, float)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        java.lang.String r1;
        float f0;
        androidx.constraintlayout.compose.ConstraintSet $r2;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r2 = (androidx.constraintlayout.compose.ConstraintSet) r0;

        return $r2;
    }

    public void applyTo(androidx.constraintlayout.compose.State, java.util.List)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        androidx.constraintlayout.compose.State r1;
        java.util.List r2;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: androidx.constraintlayout.compose.State;

        r2 := @parameter1: java.util.List;

        staticinvoke <androidx.constraintlayout.compose.DerivedConstraintSet$DefaultImpls: void applyTo(androidx.constraintlayout.compose.DerivedConstraintSet,androidx.constraintlayout.compose.State,java.util.List)>(r0, r1, r2);

        return;
    }

    public void applyTo(androidx.constraintlayout.core.state.Transition, int)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        androidx.constraintlayout.core.state.Transition r1;
        int i0;
        androidx.constraintlayout.compose.DerivedConstraintSet $r2;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: androidx.constraintlayout.core.state.Transition;

        i0 := @parameter1: int;

        $r2 = (androidx.constraintlayout.compose.DerivedConstraintSet) r0;

        staticinvoke <androidx.constraintlayout.compose.DerivedConstraintSet$DefaultImpls: void applyTo(androidx.constraintlayout.compose.DerivedConstraintSet,androidx.constraintlayout.core.state.Transition,int)>($r2, r1, i0);

        return;
    }

    public boolean isDirty(java.util.List)
    {
        androidx.constraintlayout.compose.DslConstraintSet r0;
        java.util.List r1;
        androidx.constraintlayout.compose.DerivedConstraintSet $r2;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.compose.DslConstraintSet;

        r1 := @parameter0: java.util.List;

        $r2 = (androidx.constraintlayout.compose.DerivedConstraintSet) r0;

        $z0 = staticinvoke <androidx.constraintlayout.compose.DerivedConstraintSet$DefaultImpls: boolean isDirty(androidx.constraintlayout.compose.DerivedConstraintSet,java.util.List)>($r2, r1);

        return $z0;
    }

