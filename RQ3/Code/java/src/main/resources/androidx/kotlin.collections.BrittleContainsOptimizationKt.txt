kotlin.collections.BrittleContainsOptimizationKt
    public static final java.util.Collection convertToSetForSetOperation(java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        boolean $z0;
        java.util.Collection $r1;
        java.util.HashSet $r2;
        java.util.List $r3;

        $r0 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        $r1 = (java.util.Collection) $r0;

        return $r1;

     label1:
        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label3;

        $r1 = (java.util.Collection) $r0;

        $z0 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: boolean safeToConvertToSet(java.util.Collection)>($r1);

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)>($r0);

        $r1 = (java.util.Collection) $r2;

        return $r1;

     label2:
        $r1 = (java.util.Collection) $r0;

        return $r1;

     label3:
        $z0 = <kotlin.collections.CollectionSystemProperties: boolean brittleContainsOptimizationEnabled>;

        if $z0 == 0 goto label4;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)>($r0);

        $r1 = (java.util.Collection) $r2;

        return $r1;

     label4:
        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        $r1 = (java.util.Collection) $r3;

        return $r1;
    }

    public static final java.util.Collection convertToSetForSetOperation(kotlin.sequences.Sequence)
    {
        kotlin.sequences.Sequence $r0;
        boolean $z0;
        java.util.HashSet $r1;
        java.util.List $r2;
        java.util.Collection r3;

        $r0 := @parameter0: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = <kotlin.collections.CollectionSystemProperties: boolean brittleContainsOptimizationEnabled>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: java.util.HashSet toHashSet(kotlin.sequences.Sequence)>($r0);

        r3 = (java.util.Collection) $r1;

        return r3;

     label1:
        $r2 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r0);

        r3 = (java.util.Collection) $r2;

        return r3;
    }

    public static final java.util.Collection convertToSetForSetOperation(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        boolean $z0;
        java.util.HashSet $r1;
        java.util.List $r2;
        java.util.Collection r3;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = <kotlin.collections.CollectionSystemProperties: boolean brittleContainsOptimizationEnabled>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.HashSet toHashSet(java.lang.Object[])>($r0);

        r3 = (java.util.Collection) $r1;

        return r3;

     label1:
        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r0);

        r3 = (java.util.Collection) $r2;

        return r3;
    }

    public static final java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable, java.lang.Iterable)
    {
        java.lang.Iterable $r0, $r1;
        boolean $z0;
        java.util.Collection $r2;
        int $i0;
        java.util.HashSet $r3;
        java.util.List $r4;

        $r0 := @parameter0: java.lang.Iterable;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "source");

        $z0 = $r0 instanceof java.util.Set;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r0;

        return $r2;

     label1:
        $z0 = $r0 instanceof java.util.Collection;

        if $z0 == 0 goto label4;

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        $r2 = (java.util.Collection) $r1;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 >= 2 goto label2;

        $r2 = (java.util.Collection) $r0;

        return $r2;

     label2:
        $r2 = (java.util.Collection) $r0;

        $z0 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: boolean safeToConvertToSet(java.util.Collection)>($r2);

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)>($r0);

        $r2 = (java.util.Collection) $r3;

        return $r2;

     label3:
        $r2 = (java.util.Collection) $r0;

        return $r2;

     label4:
        $z0 = <kotlin.collections.CollectionSystemProperties: boolean brittleContainsOptimizationEnabled>;

        if $z0 == 0 goto label5;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)>($r0);

        $r2 = (java.util.Collection) $r3;

        return $r2;

     label5:
        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r0);

        $r2 = (java.util.Collection) $r4;

        return $r2;
    }

    private static final boolean safeToConvertToSet(java.util.Collection)
    {
        int $i0;
        java.util.Collection $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $z0 = <kotlin.collections.CollectionSystemProperties: boolean brittleContainsOptimizationEnabled>;

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        if $i0 <= 2 goto label1;

        $z0 = $r0 instanceof java.util.ArrayList;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

