androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$Companion Companion>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView view>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int InvalidId>
<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: java.lang.String ClassName>
    public void <init>(androidx.ui.core.AndroidComposeView)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.ui.core.AndroidComposeView r1, $r3;
        java.lang.Object r2;
        android.content.Context $r4;
        android.view.accessibility.AccessibilityManager $r5;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider $r6;
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: androidx.ui.core.AndroidComposeView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView view> = r1;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId> = -2147483648;

        $r3 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r4 = virtualinvoke $r3.<androidx.ui.core.AndroidComposeView: android.content.Context getContext()>();

        r2 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        if r2 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.view.accessibility.AccessibilityManager");

        throw $r8;

     label1:
        $r5 = (android.view.accessibility.AccessibilityManager) r2;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager> = $r5;

        $r6 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider;

        specialinvoke $r6.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$MyNodeProvider: void <init>(androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat)>(r0);

        $r7 = (androidx.core.view.accessibility.AccessibilityNodeProviderCompat) $r6;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider> = $r7;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = -2147483648;

        return;
    }

    public final androidx.ui.core.AndroidComposeView getView()
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        androidx.ui.core.AndroidComposeView $r1;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        $r1 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView view>;

        return $r1;
    }

    public final androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeInfo(int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1, r66;
        androidx.ui.core.AndroidComposeView $r2, $r5, $r49, $r51, $r54, $r56, $r58, $r60, $r71;
        androidx.ui.core.semantics.SemanticsOwner $r3, $r52, $r59;
        androidx.ui.core.semantics.SemanticsNode $r4, $r7, $r53, r67, r69, r82;
        android.view.View $r6, $r50, $r55, $r57, $r61, $r62;
        java.util.List $r8;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r9, $r41, $r47;
        androidx.ui.core.semantics.SemanticsConfiguration $r10, $r18, $r24, $r31, $r38;
        androidx.ui.semantics.SemanticsProperties $r11, $r19, $r25, $r32;
        androidx.ui.semantics.SemanticsPropertyKey $r12, $r20, $r26, $r33, $r40;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$1 $r13;
        kotlin.jvm.functions.Function0 $r14, $r22, $r28, $r35;
        java.lang.Object $r15, $r23, $r29, $r36, $r48;
        java.lang.String $r16, $r73, r83;
        java.lang.CharSequence $r17, $r43, $r44, $r45, $r46, $r70, $r74;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$content$1 $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$2 $r27;
        java.lang.Boolean $r30, $r37;
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$3 $r34;
        androidx.ui.semantics.SemanticsActions$Companion $r39;
        java.lang.NullPointerException $r63;
        java.lang.Throwable $r64, r80;
        android.graphics.Rect $r65, $r75;
        android.view.ViewParent r68;
        android.content.Context $r72;
        androidx.ui.unit.PxBounds $r76, $r77, $r78, $r79;
        float $f0, $f1, $f2, $f3;
        java.util.Iterator r81;
        java.lang.CharSequence[] r84;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r66 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r66, "obtain()");

        r1 = r66;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>(1);

        if i0 != -1 goto label02;

        $r56 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r57 = (android.view.View) $r56;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>($r57);

        $r58 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r59 = virtualinvoke $r58.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        r67 = virtualinvoke $r59.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        $r60 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r61 = (android.view.View) $r60;

        r68 = staticinvoke <androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>($r61);

        if r68 != null goto label01;

        $r63 = new java.lang.NullPointerException;

        specialinvoke $r63.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type android.view.View");

        throw $r63;

     label01:
        $r62 = (android.view.View) r68;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r62);

        goto label05;

     label02:
        $r2 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r3 = virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        $r4 = virtualinvoke $r3.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        r67 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsNode findChildById(androidx.ui.core.semantics.SemanticsNode,int)>($r4, i0);

        if r67 != null goto label03;

        return r1;

     label03:
        $r5 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r6 = (android.view.View) $r5;

        $i1 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>($r6, $i1);

        $r7 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode getParent()>();

        if $r7 == null goto label05;

        r69 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsNode getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r69);

        i5 = virtualinvoke r69.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        $r51 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r52 = virtualinvoke $r51.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        $r53 = virtualinvoke $r52.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        $i4 = virtualinvoke $r53.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        if i5 != $i4 goto label04;

        i5 = -1;

     label04:
        $r54 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r55 = (android.view.View) $r54;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)>($r55, i5);

     label05:
        $r70 = (java.lang.CharSequence) "android.view.View";

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r70);

        $r71 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r72 = virtualinvoke $r71.<androidx.ui.core.AndroidComposeView: android.content.Context getContext()>();

        $r73 = virtualinvoke $r72.<android.content.Context: java.lang.String getPackageName()>();

        $r74 = (java.lang.CharSequence) $r73;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r74);

     label06:
        $r75 = new android.graphics.Rect;

        $r76 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f0 = virtualinvoke $r76.<androidx.ui.unit.PxBounds: float getLeft()>();

        $i6 = (int) $f0;

        $r77 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f1 = virtualinvoke $r77.<androidx.ui.unit.PxBounds: float getTop()>();

        $i7 = (int) $f1;

        $r78 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f2 = virtualinvoke $r78.<androidx.ui.unit.PxBounds: float getRight()>();

        $i8 = (int) $f2;

        $r79 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f3 = virtualinvoke $r79.<androidx.ui.unit.PxBounds: float getBottom()>();

        $i9 = (int) $f3;

        specialinvoke $r75.<android.graphics.Rect: void <init>(int,int,int,int)>($i6, $i7, $i8, $i9);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r75);

     label07:
        goto label09;

     label08:
        $r64 := @caughtexception;

        r80 = $r64;

        $r65 = new android.graphics.Rect;

        specialinvoke $r65.<android.graphics.Rect: void <init>()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r65);

     label09:
        $r8 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        r81 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r48 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r82 = (androidx.ui.core.semantics.SemanticsNode) $r48;

        $r49 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r50 = (android.view.View) $r49;

        $i3 = virtualinvoke r82.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>($r50, $i3);

        goto label10;

     label11:
        $i2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i2 != i0 goto label12;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(1);

        $r47 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r47);

        goto label13;

     label12:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(0);

        $r9 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r9);

     label13:
        $r10 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r11 = <androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsProperties INSTANCE>;

        $r12 = virtualinvoke $r11.<androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsPropertyKey getAccessibilityValue()>();

        $r13 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$1;

        specialinvoke $r13.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$1: void <init>()>();

        $r14 = (kotlin.jvm.functions.Function0) $r13;

        $r15 = virtualinvoke $r10.<androidx.ui.core.semantics.SemanticsConfiguration: java.lang.Object getOrElse(androidx.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r12, $r14);

        $r16 = (java.lang.String) $r15;

        $r17 = (java.lang.CharSequence) $r16;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r17);

        $r18 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r19 = <androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsProperties INSTANCE>;

        $r20 = virtualinvoke $r19.<androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsPropertyKey getAccessibilityLabel()>();

        $r21 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$content$1;

        specialinvoke $r21.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$content$1: void <init>()>();

        $r22 = (kotlin.jvm.functions.Function0) $r21;

        $r23 = virtualinvoke $r18.<androidx.ui.core.semantics.SemanticsConfiguration: java.lang.Object getOrElse(androidx.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r20, $r22);

        r83 = (java.lang.String) $r23;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r83, "");

        if $z0 != 0 goto label14;

        r84 = newarray (java.lang.CharSequence)[3];

        $r43 = (java.lang.CharSequence) r83;

        r84[0] = $r43;

        $r44 = (java.lang.CharSequence) ",";

        r84[1] = $r44;

        $r45 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        r84[2] = $r45;

        $r46 = staticinvoke <android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>(r84);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r46);

     label14:
        $r24 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r25 = <androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsProperties INSTANCE>;

        $r26 = virtualinvoke $r25.<androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsPropertyKey getEnabled()>();

        $r27 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$2;

        specialinvoke $r27.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$2: void <init>()>();

        $r28 = (kotlin.jvm.functions.Function0) $r27;

        $r29 = virtualinvoke $r24.<androidx.ui.core.semantics.SemanticsConfiguration: java.lang.Object getOrElse(androidx.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r26, $r28);

        $r30 = (java.lang.Boolean) $r29;

        $z1 = virtualinvoke $r30.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z1);

        $r31 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r32 = <androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsProperties INSTANCE>;

        $r33 = virtualinvoke $r32.<androidx.ui.semantics.SemanticsProperties: androidx.ui.semantics.SemanticsPropertyKey getHidden()>();

        $r34 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$3;

        specialinvoke $r34.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$createNodeInfo$3: void <init>()>();

        $r35 = (kotlin.jvm.functions.Function0) $r34;

        $r36 = virtualinvoke $r31.<androidx.ui.core.semantics.SemanticsConfiguration: java.lang.Object getOrElse(androidx.ui.semantics.SemanticsPropertyKey,kotlin.jvm.functions.Function0)>($r33, $r35);

        $r37 = (java.lang.Boolean) $r36;

        $z2 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z6);

        $r38 = virtualinvoke r67.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r39 = <androidx.ui.semantics.SemanticsActions: androidx.ui.semantics.SemanticsActions$Companion Companion>;

        $r40 = virtualinvoke $r39.<androidx.ui.semantics.SemanticsActions$Companion: androidx.ui.semantics.SemanticsPropertyKey getOnClick()>();

        $z3 = virtualinvoke $r38.<androidx.ui.core.semantics.SemanticsConfiguration: boolean contains(androidx.ui.semantics.SemanticsPropertyKey)>($r40);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z3);

        $z4 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        if $z4 == 0 goto label17;

        $r41 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r41);

     label17:
        return r1;

        catch java.lang.IllegalStateException from label06 to label07 with label08;
    }

    private final boolean isAccessibilityFocused(int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final boolean requestAccessibilityFocus(int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, $i1, $i2;
        android.view.accessibility.AccessibilityManager $r1, $r2;
        boolean $z0, $z1, $z2;
        androidx.ui.core.AndroidComposeView $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z2 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityFocused(int)>(i0);

        if $z2 != 0 goto label4;

        $i1 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        if $i1 == -2147483648 goto label3;

        $i2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId>;

        $r5 = (java.lang.Integer) null;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer)>($i2, 65536, $r5);

     label3:
        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = i0;

        $r3 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        virtualinvoke $r3.<androidx.ui.core.AndroidComposeView: void invalidate()>();

        $r4 = (java.lang.Integer) null;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer)>(i0, 32768, $r4);

        return 1;

     label4:
        return 0;
    }

    public final boolean sendEventForVirtualView(int, int, java.lang.Integer)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2;
        java.lang.Integer r1;
        android.view.ViewParent r2, r7;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0, $z1;
        androidx.ui.core.AndroidComposeView $r4, $r5;
        android.view.View $r6;
        android.view.accessibility.AccessibilityEvent r8;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Integer;

        if i0 == -2147483648 goto label1;

        $r3 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        r7 = virtualinvoke $r4.<androidx.ui.core.AndroidComposeView: android.view.ViewParent getParent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "view.parent");

        r2 = r7;

        r8 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityEvent createEvent(int,int)>(i0, i1);

        if r1 == null goto label3;

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke r8.<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>($i2);

     label3:
        $r5 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r6 = (android.view.View) $r5;

        $z1 = interfaceinvoke r2.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r6, r8);

        return $z1;
    }

    private final android.view.accessibility.AccessibilityEvent createEvent(int, int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1;
        android.view.accessibility.AccessibilityEvent r1, r2;
        java.lang.CharSequence $r3, $r7;
        androidx.ui.core.AndroidComposeView $r4, $r8;
        android.content.Context $r5;
        java.lang.String $r6;
        android.view.View $r9;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "obtain(eventType)");

        r1 = r2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>(1);

        $r3 = (java.lang.CharSequence) "android.view.View";

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $r4 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r5 = virtualinvoke $r4.<androidx.ui.core.AndroidComposeView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = (java.lang.CharSequence) $r6;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r7);

        $r8 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r9 = (android.view.View) $r8;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View,int)>($r9, i0);

        return r1;
    }

    private final boolean clearAccessibilityFocus(int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0;
        boolean $z0;
        androidx.ui.core.AndroidComposeView $r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean isAccessibilityFocused(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int focusedVirtualViewId> = -2147483648;

        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        virtualinvoke $r1.<androidx.ui.core.AndroidComposeView: void invalidate()>();

        $r2 = (java.lang.Integer) null;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer)>(i0, 65536, $r2);

        return 1;

     label1:
        return 0;
    }

    public final boolean performActionHelper(int, int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, i2;
        androidx.ui.core.AndroidComposeView $r1, $r15;
        androidx.ui.core.semantics.SemanticsOwner $r2, $r16;
        androidx.ui.core.semantics.SemanticsNode $r3, r17, r18;
        boolean $z0, $z1, $z2;
        androidx.ui.core.semantics.SemanticsConfiguration $r4, $r7;
        androidx.ui.semantics.SemanticsActions$Companion $r5, $r8;
        androidx.ui.semantics.SemanticsPropertyKey $r6, $r9;
        java.lang.Object $r10;
        androidx.ui.semantics.AccessibilityAction $r11;
        kotlin.Function $r12;
        kotlin.jvm.functions.Function0 $r13;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != -1 goto label1;

        $r15 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r16 = virtualinvoke $r15.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        r17 = virtualinvoke $r16.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        goto label3;

     label1:
        $r1 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r2 = virtualinvoke $r1.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        $r3 = virtualinvoke $r2.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        r18 = staticinvoke <androidx.ui.core.semantics.SemanticsNodeKt: androidx.ui.core.semantics.SemanticsNode findChildById(androidx.ui.core.semantics.SemanticsNode,int)>($r3, i0);

        if r18 != null goto label2;

        return 0;

     label2:
        r17 = r18;

     label3:
        i2 = i1;

        lookupswitch(i2)
        {
            case 16: goto label6;
            case 64: goto label4;
            case 128: goto label5;
            default: goto label8;
        };

     label4:
        $z1 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean requestAccessibilityFocus(int)>(i0);

        return $z1;

     label5:
        $z0 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean clearAccessibilityFocus(int)>(i0);

        return $z0;

     label6:
        $r4 = virtualinvoke r17.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r5 = <androidx.ui.semantics.SemanticsActions: androidx.ui.semantics.SemanticsActions$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.ui.semantics.SemanticsActions$Companion: androidx.ui.semantics.SemanticsPropertyKey getOnClick()>();

        $z2 = virtualinvoke $r4.<androidx.ui.core.semantics.SemanticsConfiguration: boolean contains(androidx.ui.semantics.SemanticsPropertyKey)>($r6);

        if $z2 == 0 goto label7;

        $r7 = virtualinvoke r17.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.core.semantics.SemanticsConfiguration getConfig()>();

        $r8 = <androidx.ui.semantics.SemanticsActions: androidx.ui.semantics.SemanticsActions$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.ui.semantics.SemanticsActions$Companion: androidx.ui.semantics.SemanticsPropertyKey getOnClick()>();

        $r10 = virtualinvoke $r7.<androidx.ui.core.semantics.SemanticsConfiguration: java.lang.Object get(androidx.ui.semantics.SemanticsPropertyKey)>($r9);

        $r11 = (androidx.ui.semantics.AccessibilityAction) $r10;

        $r12 = virtualinvoke $r11.<androidx.ui.semantics.AccessibilityAction: kotlin.Function getAction()>();

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        interfaceinvoke $r13.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return 1;

     label7:
        return 0;

     label8:
        return 0;
    }

    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2;
        android.view.accessibility.AccessibilityManager $r2, $r3;
        boolean $z0, $z1, $z2;
        float $f0, $f1;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        $r2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: android.view.accessibility.AccessibilityManager accessibilityManager>;

        $z1 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch(i0)
        {
            case 7: goto label3;
            case 8: goto label8;
            case 9: goto label3;
            case 10: goto label6;
            default: goto label8;
        };

     label3:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int getVirtualViewAt(float,float)>($f0, $f1);

        specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: void updateHoveredVirtualView(int)>(i1);

        if i1 == -2147483648 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        $i2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        if $i2 == -2147483648 goto label7;

        specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: void updateHoveredVirtualView(int)>(-2147483648);

        return 1;

     label7:
        return 0;

     label8:
        return 0;
    }

    private final int getVirtualViewAt(float, float)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        androidx.ui.core.semantics.SemanticsNode r1;
        int i0, $i1;
        androidx.ui.core.AndroidComposeView $r2;
        androidx.ui.core.semantics.SemanticsOwner $r3;
        androidx.ui.unit.PxBounds $r4, $r5;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeView getView()>();

        $r3 = virtualinvoke $r2.<androidx.ui.core.AndroidComposeView: androidx.ui.core.semantics.SemanticsOwner getSemanticsOwner()>();

        r1 = virtualinvoke $r3.<androidx.ui.core.semantics.SemanticsOwner: androidx.ui.core.semantics.SemanticsNode getRootSemanticsNode()>();

        $r4 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f2 = virtualinvoke $r4.<androidx.ui.unit.PxBounds: float getLeft()>();

        $f3 = f0 + $f2;

        $r5 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f4 = virtualinvoke $r5.<androidx.ui.unit.PxBounds: float getTop()>();

        $f5 = f1 + $f4;

        i0 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int findVirtualViewAt(float,float,androidx.ui.core.semantics.SemanticsNode)>($f3, $f5, r1);

        $i1 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        if i0 != $i1 goto label1;

        return -1;

     label1:
        return i0;
    }

    private final int findVirtualViewAt(float, float, androidx.ui.core.semantics.SemanticsNode)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        androidx.ui.core.semantics.SemanticsNode r1, r5;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        int i0, $i5;
        java.util.List $r6;
        boolean $z2;
        androidx.ui.unit.PxBounds $r7, $r8, $r9, $r10;
        byte $b1, $b2, $b3, $b4;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: androidx.ui.core.semantics.SemanticsNode;

        $r6 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: java.util.List getChildren()>();

        $r2 = (java.lang.Iterable) $r6;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.ui.core.semantics.SemanticsNode) r4;

        i0 = specialinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int findVirtualViewAt(float,float,androidx.ui.core.semantics.SemanticsNode)>(f0, f1, r5);

        if i0 == -2147483648 goto label2;

        return i0;

     label2:
        goto label1;

     label3:
        $r7 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f2 = virtualinvoke $r7.<androidx.ui.unit.PxBounds: float getLeft()>();

        $b1 = $f2 cmpg f0;

        if $b1 >= 0 goto label4;

        $r8 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f3 = virtualinvoke $r8.<androidx.ui.unit.PxBounds: float getRight()>();

        $b2 = $f3 cmpl f0;

        if $b2 <= 0 goto label4;

        $r9 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f4 = virtualinvoke $r9.<androidx.ui.unit.PxBounds: float getTop()>();

        $b3 = $f4 cmpg f1;

        if $b3 >= 0 goto label4;

        $r10 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: androidx.ui.unit.PxBounds getGlobalBounds()>();

        $f5 = virtualinvoke $r10.<androidx.ui.unit.PxBounds: float getBottom()>();

        $b4 = $f5 cmpl f1;

        if $b4 <= 0 goto label4;

        $i5 = virtualinvoke r1.<androidx.ui.core.semantics.SemanticsNode: int getId()>();

        return $i5;

     label4:
        return -2147483648;
    }

    private final void updateHoveredVirtualView(int)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        int i0, i1, $i2;
        java.lang.Integer $r1, $r2;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        if $i2 != i0 goto label1;

        return;

     label1:
        i1 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId>;

        r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: int hoveredVirtualViewId> = i0;

        $r1 = (java.lang.Integer) null;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer)>(i0, 128, $r1);

        $r2 = (java.lang.Integer) null;

        virtualinvoke r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: boolean sendEventForVirtualView(int,int,java.lang.Integer)>(i1, 256, $r2);

        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat r0;
        android.view.View r1;
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r2;

        r0 := @this: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat nodeProvider>;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$Companion $r0;

        $r0 = new androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$Companion;

        specialinvoke $r0.<androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat: androidx.ui.core.AndroidComposeViewAccessibilityDelegateCompat$Companion Companion> = $r0;

        return;
    }

