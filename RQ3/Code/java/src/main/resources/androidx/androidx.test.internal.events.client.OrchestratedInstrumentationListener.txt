androidx.test.internal.events.client.OrchestratedInstrumentationListener
<androidx.test.internal.events.client.OrchestratedInstrumentationListener: java.lang.String TAG>
<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>
<androidx.test.internal.events.client.OrchestratedInstrumentationListener: java.util.concurrent.atomic.AtomicBoolean isTestFailed>
<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description>
    private androidx.test.services.events.run.TestFailureEvent getTestFailureEventFromCachedDescription(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.notification.Failure r1;
        androidx.test.services.events.TestCaseInfo r2;
        org.junit.runner.Description $r4;
        androidx.test.services.events.run.TestFailureEvent $r5;
        androidx.test.services.events.FailureInfo $r6;
        java.lang.String $r7, $r8, $r9;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "failure cannot be null");

        $r4 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description>;

        r2 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>($r4);

        goto label1;

     label1:
        $r5 = new androidx.test.services.events.run.TestFailureEvent;

        $r6 = new androidx.test.services.events.FailureInfo;

        $r7 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getMessage()>();

        $r8 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTestHeader()>();

        $r9 = virtualinvoke r1.<org.junit.runner.notification.Failure: java.lang.String getTrace()>();

        specialinvoke $r6.<androidx.test.services.events.FailureInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,androidx.test.services.events.TestCaseInfo)>($r7, $r8, $r9, r2);

        specialinvoke $r5.<androidx.test.services.events.run.TestFailureEvent: void <init>(androidx.test.services.events.TestCaseInfo,androidx.test.services.events.FailureInfo)>(r2, $r6);

        return $r5;
    }

    public void <init>(androidx.test.internal.events.client.TestRunEventService)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        androidx.test.internal.events.client.TestRunEventService r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        org.junit.runner.Description $r3;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: androidx.test.internal.events.client.TestRunEventService;

        specialinvoke r0.<org.junit.runner.notification.RunListener: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: java.util.concurrent.atomic.AtomicBoolean isTestFailed> = $r2;

        $r3 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description> = $r3;

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "notificationService cannot be null");

        r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService> = r1;

        return;
    }

    private void reportProcessCrash(java.lang.Throwable)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        java.lang.Throwable r1;
        org.junit.runner.notification.Failure $r2;
        org.junit.runner.Description $r3, $r4;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = new org.junit.runner.notification.Failure;

        $r3 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description>;

        specialinvoke $r2.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r3, r1);

        virtualinvoke r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: void testFailure(org.junit.runner.notification.Failure)>($r2);

        $r4 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description>;

        virtualinvoke r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: void testFinished(org.junit.runner.Description)>($r4);

        return;
    }

    public void testAssumptionFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.notification.Failure r1;
        androidx.test.services.events.run.TestAssumptionFailureEvent $r2;
        androidx.test.internal.events.client.TestRunEventService $r3;
        org.junit.runner.Description $r4;
        androidx.test.services.events.TestCaseInfo $r5;
        androidx.test.services.events.FailureInfo $r6;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r3 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r2 = new androidx.test.services.events.run.TestAssumptionFailureEvent;

        $r4 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r5 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>($r4);

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.FailureInfo getFailure(org.junit.runner.notification.Failure)>(r1);

        specialinvoke $r2.<androidx.test.services.events.run.TestAssumptionFailureEvent: void <init>(androidx.test.services.events.TestCaseInfo,androidx.test.services.events.FailureInfo)>($r5, $r6);

        interfaceinvoke $r3.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r2);

        goto label1;

     label1:
        return;
    }

    public void testFailure(org.junit.runner.notification.Failure)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.notification.Failure r1;
        org.junit.runner.Description r2, $r8;
        androidx.test.services.events.run.TestFailureEvent r3, $r7;
        java.lang.String r4, r5, $r12, $r19;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        boolean $z0, $z1;
        androidx.test.services.events.TestCaseInfo $r9;
        androidx.test.services.events.FailureInfo $r10;
        androidx.test.internal.events.client.TestRunEventService $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r6 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: java.util.concurrent.atomic.AtomicBoolean isTestFailed>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $z1 = staticinvoke <androidx.test.internal.events.client.JUnitValidator: boolean validateDescription(org.junit.runner.Description)>(r2);

        if $z1 != 0 goto label1;

        $r12 = virtualinvoke r2.<org.junit.runner.Description: java.lang.String getClassName()>();

        r5 = virtualinvoke r2.<org.junit.runner.Description: java.lang.String getMethodName()>();

        r4 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testFailure: JUnit reported ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; discarding as bogus.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("OrchestrationListener", $r19);

        return;

     label1:
        $r7 = new androidx.test.services.events.run.TestFailureEvent;

        $r8 = virtualinvoke r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r9 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>($r8);

        $r10 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.FailureInfo getFailure(org.junit.runner.notification.Failure)>(r1);

        specialinvoke $r7.<androidx.test.services.events.run.TestFailureEvent: void <init>(androidx.test.services.events.TestCaseInfo,androidx.test.services.events.FailureInfo)>($r9, $r10);

        r3 = $r7;

        goto label2;

     label2:
        $r11 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        interfaceinvoke $r11.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>(r3);

        goto label3;

     label3:
        return;
    }

    public void testFinished(org.junit.runner.Description)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.Description r1;
        java.lang.String r2, r3, $r7, $r14;
        boolean $z0;
        androidx.test.services.events.run.TestFinishedEvent $r4;
        androidx.test.internal.events.client.TestRunEventService $r5;
        androidx.test.services.events.TestCaseInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = staticinvoke <androidx.test.internal.events.client.JUnitValidator: boolean validateDescription(org.junit.runner.Description)>(r1);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        r2 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testFinished: JUnit reported ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; discarding as bogus.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("OrchestrationListener", $r14);

        return;

     label1:
        $r5 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r4 = new androidx.test.services.events.run.TestFinishedEvent;

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>(r1);

        specialinvoke $r4.<androidx.test.services.events.run.TestFinishedEvent: void <init>(androidx.test.services.events.TestCaseInfo)>($r6);

        interfaceinvoke $r5.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r4);

        goto label2;

     label2:
        return;
    }

    public void testIgnored(org.junit.runner.Description)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.Description r1;
        androidx.test.services.events.TestCaseInfo r2;
        java.lang.String r3, r4, r5, r6, $r7, $r8, $r9, $r19;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        androidx.test.services.events.run.TestIgnoredEvent $r20;
        androidx.test.internal.events.client.TestRunEventService $r21;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.Description;

        r2 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>(r1);

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        $r8 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r9 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        r6 = virtualinvoke r2.<androidx.test.services.events.TestCaseInfo: java.lang.String getClassAndMethodName()>();

        r5 = $r9;

        r4 = $r8;

        r3 = $r7;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TestIgnoredEvent(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("OrchestrationListener", $r19);

        $r21 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r20 = new androidx.test.services.events.run.TestIgnoredEvent;

        specialinvoke $r20.<androidx.test.services.events.run.TestIgnoredEvent: void <init>(androidx.test.services.events.TestCaseInfo)>(r2);

        interfaceinvoke $r21.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r20);

        goto label1;

     label1:
        return;
    }

    public void testRunFinished(org.junit.runner.Result)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.Result r1;
        java.util.List $r2, r6;
        androidx.test.services.events.run.TestRunFinishedEvent $r3;
        androidx.test.internal.events.client.TestRunEventService $r4;
        int $i0, $i1;
        long $l2;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.Result;

        staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r2 = virtualinvoke r1.<org.junit.runner.Result: java.util.List getFailures()>();

        r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: java.util.List getFailuresFromList(java.util.List)>($r2);

        goto label1;

     label1:
        $r4 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r3 = new androidx.test.services.events.run.TestRunFinishedEvent;

        $i0 = virtualinvoke r1.<org.junit.runner.Result: int getRunCount()>();

        $i1 = virtualinvoke r1.<org.junit.runner.Result: int getIgnoreCount()>();

        $l2 = virtualinvoke r1.<org.junit.runner.Result: long getRunTime()>();

        specialinvoke $r3.<androidx.test.services.events.run.TestRunFinishedEvent: void <init>(int,int,long,java.util.List)>($i0, $i1, $l2, r6);

        interfaceinvoke $r4.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r3);

        goto label2;

     label2:
        return;
    }

    public void testRunStarted(org.junit.runner.Description)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.Description r1;
        androidx.test.services.events.run.TestRunStartedEvent $r2;
        androidx.test.internal.events.client.TestRunEventService $r3;
        androidx.test.services.events.TestCaseInfo $r4;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.Description;

        $r3 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r2 = new androidx.test.services.events.run.TestRunStartedEvent;

        $r4 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>(r1);

        specialinvoke $r2.<androidx.test.services.events.run.TestRunStartedEvent: void <init>(androidx.test.services.events.TestCaseInfo)>($r4);

        interfaceinvoke $r3.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r2);

        goto label1;

     label1:
        return;
    }

    public void testStarted(org.junit.runner.Description)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        org.junit.runner.Description r1;
        java.lang.String r2, r3, $r7, $r14;
        boolean $z0;
        androidx.test.services.events.run.TestStartedEvent $r4;
        androidx.test.internal.events.client.TestRunEventService $r5;
        androidx.test.services.events.TestCaseInfo $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: org.junit.runner.Description;

        r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: org.junit.runner.Description description> = r1;

        $z0 = staticinvoke <androidx.test.internal.events.client.JUnitValidator: boolean validateDescription(org.junit.runner.Description)>(r1);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getClassName()>();

        r3 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getMethodName()>();

        r2 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("testStarted: JUnit reported ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; discarding as bogus.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("OrchestrationListener", $r14);

        return;

     label1:
        $r5 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: androidx.test.internal.events.client.TestRunEventService notificationService>;

        $r4 = new androidx.test.services.events.run.TestStartedEvent;

        $r6 = staticinvoke <androidx.test.services.events.ParcelableConverter: androidx.test.services.events.TestCaseInfo getTestCaseFromDescription(org.junit.runner.Description)>(r1);

        specialinvoke $r4.<androidx.test.services.events.run.TestStartedEvent: void <init>(androidx.test.services.events.TestCaseInfo)>($r6);

        interfaceinvoke $r5.<androidx.test.internal.events.client.TestRunEventService: void send(androidx.test.services.events.run.TestRunEvent)>($r4);

        goto label2;

     label2:
        return;
    }

    public boolean reportProcessCrash(java.lang.Throwable, long)
    {
        androidx.test.internal.events.client.OrchestratedInstrumentationListener r0;
        java.lang.Throwable r1;
        long l0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;

        r0 := @this: androidx.test.internal.events.client.OrchestratedInstrumentationListener;

        r1 := @parameter0: java.lang.Throwable;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: java.util.concurrent.atomic.AtomicBoolean isTestFailed>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("OrchestrationListener", "No test failure has been reported. Report the process crash.");

        specialinvoke r0.<androidx.test.internal.events.client.OrchestratedInstrumentationListener: void reportProcessCrash(java.lang.Throwable)>(r1);

        return 1;

     label1:
        return 0;
    }

