kotlinx.coroutines.channels.SendChannel
<kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)>
<kotlinx.coroutines.channels.SendChannel: boolean isClosedForSend()>
<kotlinx.coroutines.channels.SendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>
<kotlinx.coroutines.channels.SendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>
kotlinx.coroutines.channels.SendChannel$DefaultImpls
    public static boolean close$default(kotlinx.coroutines.channels.SendChannel, java.lang.Throwable, int, java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        kotlinx.coroutines.channels.SendChannel $r1;
        java.lang.Throwable $r2;
        int $i0;
        java.lang.UnsupportedOperationException $r3;

        $r1 := @parameter0: kotlinx.coroutines.channels.SendChannel;

        $r2 := @parameter1: java.lang.Throwable;

        $i0 := @parameter2: int;

        $r0 := @parameter3: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        $r2 = null;

     label1:
        $z0 = interfaceinvoke $r1.<kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)>($r2);

        return $z0;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: close");

        throw $r3;
    }

