androidx.databinding.adapters.TableLayoutBindingAdapter
<androidx.databinding.adapters.TableLayoutBindingAdapter: java.util.regex.Pattern sColumnPattern>
<androidx.databinding.adapters.TableLayoutBindingAdapter: int MAX_COLUMNS>
    public void <init>()
    {
        androidx.databinding.adapters.TableLayoutBindingAdapter r0;

        r0 := @this: androidx.databinding.adapters.TableLayoutBindingAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setCollapseColumns(android.widget.TableLayout, java.lang.CharSequence)
    {
        android.widget.TableLayout r0;
        java.lang.CharSequence r1;
        android.util.SparseBooleanArray r2;
        boolean z0, $z1;
        int i0;

        r0 := @parameter0: android.widget.TableLayout;

        r1 := @parameter1: java.lang.CharSequence;

        r2 = staticinvoke <androidx.databinding.adapters.TableLayoutBindingAdapter: android.util.SparseBooleanArray parseColumns(java.lang.CharSequence)>(r1);

        i0 = 0;

     label1:
        if i0 >= 20 goto label3;

        z0 = virtualinvoke r2.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        $z1 = virtualinvoke r0.<android.widget.TableLayout: boolean isColumnCollapsed(int)>(i0);

        if z0 == $z1 goto label2;

        virtualinvoke r0.<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>(i0, z0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public static void setShrinkColumns(android.widget.TableLayout, java.lang.CharSequence)
    {
        android.widget.TableLayout r0;
        java.lang.CharSequence r1;
        android.util.SparseBooleanArray r2;
        int i0, i1, $i2, i4;
        boolean z0;
        char $c3;

        r0 := @parameter0: android.widget.TableLayout;

        r1 := @parameter1: java.lang.CharSequence;

        if r1 == null goto label1;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label1;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(0);

        if $c3 != 42 goto label1;

        virtualinvoke r0.<android.widget.TableLayout: void setShrinkAllColumns(boolean)>(1);

        goto label4;

     label1:
        virtualinvoke r0.<android.widget.TableLayout: void setShrinkAllColumns(boolean)>(0);

        r2 = staticinvoke <androidx.databinding.adapters.TableLayoutBindingAdapter: android.util.SparseBooleanArray parseColumns(java.lang.CharSequence)>(r1);

        i0 = virtualinvoke r2.<android.util.SparseBooleanArray: int size()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        i1 = virtualinvoke r2.<android.util.SparseBooleanArray: int keyAt(int)>(i4);

        z0 = virtualinvoke r2.<android.util.SparseBooleanArray: boolean valueAt(int)>(i4);

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>(i1, z0);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return;
    }

    public static void setStretchColumns(android.widget.TableLayout, java.lang.CharSequence)
    {
        android.widget.TableLayout r0;
        java.lang.CharSequence r1;
        android.util.SparseBooleanArray r2;
        int i0, i1, $i2, i4;
        boolean z0;
        char $c3;

        r0 := @parameter0: android.widget.TableLayout;

        r1 := @parameter1: java.lang.CharSequence;

        if r1 == null goto label1;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label1;

        $c3 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(0);

        if $c3 != 42 goto label1;

        virtualinvoke r0.<android.widget.TableLayout: void setStretchAllColumns(boolean)>(1);

        goto label4;

     label1:
        virtualinvoke r0.<android.widget.TableLayout: void setStretchAllColumns(boolean)>(0);

        r2 = staticinvoke <androidx.databinding.adapters.TableLayoutBindingAdapter: android.util.SparseBooleanArray parseColumns(java.lang.CharSequence)>(r1);

        i0 = virtualinvoke r2.<android.util.SparseBooleanArray: int size()>();

        i4 = 0;

     label2:
        if i4 >= i0 goto label4;

        i1 = virtualinvoke r2.<android.util.SparseBooleanArray: int keyAt(int)>(i4);

        z0 = virtualinvoke r2.<android.util.SparseBooleanArray: boolean valueAt(int)>(i4);

        if z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.TableLayout: void setColumnStretchable(int,boolean)>(i1, z0);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return;
    }

    private static android.util.SparseBooleanArray parseColumns(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        android.util.SparseBooleanArray r1, $r5;
        java.lang.String[] r2, r3;
        int i0, i1, i2;
        java.lang.String r4;
        java.util.regex.Pattern $r6;
        java.lang.Throwable $r7, r8;

        r0 := @parameter0: java.lang.CharSequence;

        $r5 = new android.util.SparseBooleanArray;

        specialinvoke $r5.<android.util.SparseBooleanArray: void <init>()>();

        r1 = $r5;

        if r0 != null goto label1;

        return r1;

     label1:
        $r6 = <androidx.databinding.adapters.TableLayoutBindingAdapter: java.util.regex.Pattern sColumnPattern>;

        r2 = virtualinvoke $r6.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>(r0);

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        r4 = r3[i1];

     label3:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        if i2 < 0 goto label4;

        virtualinvoke r1.<android.util.SparseBooleanArray: void put(int,boolean)>(i2, 1);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        r8 = $r7;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        return r1;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*,\\s*");

        <androidx.databinding.adapters.TableLayoutBindingAdapter: java.util.regex.Pattern sColumnPattern> = $r0;

        return;
    }

