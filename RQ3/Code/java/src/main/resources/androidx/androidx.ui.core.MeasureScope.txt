androidx.ui.core.MeasureScope
<androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$Companion Companion>
    public void <init>()
    {
        androidx.ui.core.MeasureScope r0;

        r0 := @this: androidx.ui.core.MeasureScope;

        specialinvoke r0.<androidx.ui.core.IntrinsicMeasureScope: void <init>()>();

        return;
    }

    public final androidx.ui.core.Placeable measure(androidx.ui.core.Measurable, androidx.ui.core.Constraints)
    {
        androidx.ui.core.MeasureScope r0;
        androidx.ui.core.Measurable $r1;
        androidx.ui.core.Constraints r2;
        androidx.ui.core.LayoutDirection $r3;
        androidx.ui.core.Placeable $r4;

        r0 := @this: androidx.ui.core.MeasureScope;

        $r1 := @parameter0: androidx.ui.core.Measurable;

        r2 := @parameter1: androidx.ui.core.Constraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "constraints");

        $r3 = virtualinvoke r0.<androidx.ui.core.MeasureScope: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        $r4 = interfaceinvoke $r1.<androidx.ui.core.Measurable: androidx.ui.core.Placeable measure(androidx.ui.core.Constraints,androidx.ui.core.LayoutDirection)>(r2, $r3);

        return $r4;
    }

    public final androidx.ui.core.MeasureScope$MeasureResult layout(int, int, java.util.Map, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.MeasureScope r0;
        int i0, i1;
        java.util.Map r1;
        kotlin.jvm.functions.Function1 r2;
        androidx.ui.core.MeasureScope$layout$1 $r3;
        androidx.ui.core.MeasureScope$MeasureResult $r4;

        r0 := @this: androidx.ui.core.MeasureScope;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.Map;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLines");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "placementBlock");

        $r3 = new androidx.ui.core.MeasureScope$layout$1;

        specialinvoke $r3.<androidx.ui.core.MeasureScope$layout$1: void <init>(int,int,java.util.Map,kotlin.jvm.functions.Function1)>(i0, i1, r1, r2);

        $r4 = (androidx.ui.core.MeasureScope$MeasureResult) $r3;

        return $r4;
    }

    public static androidx.ui.core.MeasureScope$MeasureResult layout$default(androidx.ui.core.MeasureScope, int, int, java.util.Map, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.ui.core.MeasureScope r0;
        int i0, i1, i2, $i3;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2;
        androidx.ui.core.MeasureScope$MeasureResult $r3;
        java.util.Map r4;

        r0 := @parameter0: androidx.ui.core.MeasureScope;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: java.util.Map;

        r1 := @parameter4: kotlin.jvm.functions.Function1;

        i2 := @parameter5: int;

        r2 := @parameter6: java.lang.Object;

        $i3 = i2 & 4;

        if $i3 == 0 goto label1;

        r4 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

     label1:
        $r3 = virtualinvoke r0.<androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout(int,int,java.util.Map,kotlin.jvm.functions.Function1)>(i0, i1, r4, r1);

        return $r3;
    }

    public static void getDensity$annotations()
    {
        return;
    }

    public static void getFontScale$annotations()
    {
        return;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.MeasureScope$Companion $r0;

        $r0 = new androidx.ui.core.MeasureScope$Companion;

        specialinvoke $r0.<androidx.ui.core.MeasureScope$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$Companion Companion> = $r0;

        return;
    }

androidx.ui.core.MeasureScope$Companion$InnerPlacementScope
<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope INSTANCE>
<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.LayoutDirection parentLayoutDirection>
<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: int parentWidth>
    private void <init>()
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r0;

        r0 := @this: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        specialinvoke r0.<androidx.ui.core.Placeable$PlacementScope: void <init>()>();

        return;
    }

    public androidx.ui.core.LayoutDirection getParentLayoutDirection()
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r0;
        androidx.ui.core.LayoutDirection $r1;

        r0 := @this: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        $r1 = <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.LayoutDirection parentLayoutDirection>;

        return $r1;
    }

    public void setParentLayoutDirection(androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r0;
        androidx.ui.core.LayoutDirection r1;

        r0 := @this: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        r1 := @parameter0: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.LayoutDirection parentLayoutDirection> = r1;

        return;
    }

    public int getParentWidth()
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r0;
        int $i0;

        r0 := @this: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        $i0 = <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: int parentWidth>;

        return $i0;
    }

    public void setParentWidth(int)
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r0;
        int i0;

        r0 := @this: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        i0 := @parameter0: int;

        <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: int parentWidth> = i0;

        return;
    }

    public static final void <clinit>()
    {
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope $r0;
        androidx.ui.core.LayoutDirection $r1;

        $r0 = new androidx.ui.core.MeasureScope$Companion$InnerPlacementScope;

        specialinvoke $r0.<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: void <init>()>();

        <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope INSTANCE> = $r0;

        $r1 = <androidx.ui.core.LayoutDirection: androidx.ui.core.LayoutDirection Ltr>;

        <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.LayoutDirection parentLayoutDirection> = $r1;

        return;
    }

androidx.ui.core.MeasureScope$Companion
    private void <init>()
    {
        androidx.ui.core.MeasureScope$Companion r0;

        r0 := @this: androidx.ui.core.MeasureScope$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.MeasureScope$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.MeasureScope$Companion;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.MeasureScope$Companion: void <init>()>();

        return;
    }

androidx.ui.core.MeasureScope$layout$1
<androidx.ui.core.MeasureScope$layout$1: int width>
<androidx.ui.core.MeasureScope$layout$1: int height>
<androidx.ui.core.MeasureScope$layout$1: java.util.Map alignmentLines>
<androidx.ui.core.MeasureScope$layout$1: int $width>
<androidx.ui.core.MeasureScope$layout$1: int $height>
<androidx.ui.core.MeasureScope$layout$1: java.util.Map $alignmentLines>
<androidx.ui.core.MeasureScope$layout$1: kotlin.jvm.functions.Function1 $placementBlock>
    void <init>(int, int, java.util.Map, kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.MeasureScope$layout$1 r0;
        int $i0, $i1, $i2, $i3;
        java.util.Map $r1, $r3;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.ui.core.MeasureScope$layout$1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: java.util.Map;

        $r2 := @parameter3: kotlin.jvm.functions.Function1;

        r0.<androidx.ui.core.MeasureScope$layout$1: int $width> = $i0;

        r0.<androidx.ui.core.MeasureScope$layout$1: int $height> = $i1;

        r0.<androidx.ui.core.MeasureScope$layout$1: java.util.Map $alignmentLines> = $r1;

        r0.<androidx.ui.core.MeasureScope$layout$1: kotlin.jvm.functions.Function1 $placementBlock> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = r0.<androidx.ui.core.MeasureScope$layout$1: int $width>;

        r0.<androidx.ui.core.MeasureScope$layout$1: int width> = $i2;

        $i3 = r0.<androidx.ui.core.MeasureScope$layout$1: int $height>;

        r0.<androidx.ui.core.MeasureScope$layout$1: int height> = $i3;

        $r3 = r0.<androidx.ui.core.MeasureScope$layout$1: java.util.Map $alignmentLines>;

        r0.<androidx.ui.core.MeasureScope$layout$1: java.util.Map alignmentLines> = $r3;

        return;
    }

    public int getWidth()
    {
        androidx.ui.core.MeasureScope$layout$1 r0;
        int $i0;

        r0 := @this: androidx.ui.core.MeasureScope$layout$1;

        $i0 = r0.<androidx.ui.core.MeasureScope$layout$1: int width>;

        return $i0;
    }

    public int getHeight()
    {
        androidx.ui.core.MeasureScope$layout$1 r0;
        int $i0;

        r0 := @this: androidx.ui.core.MeasureScope$layout$1;

        $i0 = r0.<androidx.ui.core.MeasureScope$layout$1: int height>;

        return $i0;
    }

    public java.util.Map getAlignmentLines()
    {
        androidx.ui.core.MeasureScope$layout$1 r0;
        java.util.Map $r1;

        r0 := @this: androidx.ui.core.MeasureScope$layout$1;

        $r1 = r0.<androidx.ui.core.MeasureScope$layout$1: java.util.Map alignmentLines>;

        return $r1;
    }

    public void placeChildren(androidx.ui.core.LayoutDirection)
    {
        androidx.ui.core.MeasureScope$layout$1 r0;
        androidx.ui.core.LayoutDirection r1;
        androidx.ui.core.MeasureScope$Companion$InnerPlacementScope r2;
        int i0, i1;
        kotlin.jvm.functions.Function1 r3;
        boolean z0, z1;

        r0 := @this: androidx.ui.core.MeasureScope$layout$1;

        r1 := @parameter0: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutDirection");

        r2 = <androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: androidx.ui.core.MeasureScope$Companion$InnerPlacementScope INSTANCE>;

        i0 = r0.<androidx.ui.core.MeasureScope$layout$1: int $width>;

        r3 = r0.<androidx.ui.core.MeasureScope$layout$1: kotlin.jvm.functions.Function1 $placementBlock>;

        z0 = 0;

        z1 = 0;

        virtualinvoke r2.<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: void setParentLayoutDirection(androidx.ui.core.LayoutDirection)>(r1);

        i1 = virtualinvoke r2.<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: int getParentWidth()>();

        virtualinvoke r2.<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: void setParentWidth(int)>(i0);

        interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        virtualinvoke r2.<androidx.ui.core.MeasureScope$Companion$InnerPlacementScope: void setParentWidth(int)>(i1);

        return;
    }

androidx.ui.core.MeasureScope$MeasureResult
<androidx.ui.core.MeasureScope$MeasureResult: int getWidth()>
<androidx.ui.core.MeasureScope$MeasureResult: int getHeight()>
<androidx.ui.core.MeasureScope$MeasureResult: java.util.Map getAlignmentLines()>
<androidx.ui.core.MeasureScope$MeasureResult: void placeChildren(androidx.ui.core.LayoutDirection)>
