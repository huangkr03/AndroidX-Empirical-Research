androidx.paging.PagedListKt
    public static final androidx.paging.PagedList PagedList(androidx.paging.DataSource, androidx.paging.PagedList$Config, java.util.concurrent.Executor, java.util.concurrent.Executor, androidx.paging.PagedList$BoundaryCallback, java.lang.Object)
    {
        androidx.paging.DataSource r0;
        androidx.paging.PagedList$Config r1;
        java.util.concurrent.Executor r2, r3;
        androidx.paging.PagedList$BoundaryCallback r4;
        java.lang.Object r5;
        androidx.paging.PagedList$Builder $r6, $r7, $r8, $r9, $r10;
        androidx.paging.PagedList $r11;

        r0 := @parameter0: androidx.paging.DataSource;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: androidx.paging.PagedList$BoundaryCallback;

        r5 := @parameter5: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "dataSource");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "notifyExecutor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "fetchExecutor");

        $r6 = new androidx.paging.PagedList$Builder;

        specialinvoke $r6.<androidx.paging.PagedList$Builder: void <init>(androidx.paging.DataSource,androidx.paging.PagedList$Config)>(r0, r1);

        $r7 = virtualinvoke $r6.<androidx.paging.PagedList$Builder: androidx.paging.PagedList$Builder setNotifyExecutor(java.util.concurrent.Executor)>(r2);

        $r8 = virtualinvoke $r7.<androidx.paging.PagedList$Builder: androidx.paging.PagedList$Builder setFetchExecutor(java.util.concurrent.Executor)>(r3);

        $r9 = virtualinvoke $r8.<androidx.paging.PagedList$Builder: androidx.paging.PagedList$Builder setBoundaryCallback(androidx.paging.PagedList$BoundaryCallback)>(r4);

        $r10 = virtualinvoke $r9.<androidx.paging.PagedList$Builder: androidx.paging.PagedList$Builder setInitialKey(java.lang.Object)>(r5);

        $r11 = virtualinvoke $r10.<androidx.paging.PagedList$Builder: androidx.paging.PagedList build()>();

        return $r11;
    }

    public static androidx.paging.PagedList PagedList$default(androidx.paging.DataSource, androidx.paging.PagedList$Config, java.util.concurrent.Executor, java.util.concurrent.Executor, androidx.paging.PagedList$BoundaryCallback, java.lang.Object, int, java.lang.Object)
    {
        androidx.paging.DataSource r0;
        androidx.paging.PagedList$Config r1;
        java.util.concurrent.Executor r2, r3;
        int i0, $i1, $i2;
        java.lang.Object r4, r7;
        androidx.paging.PagedList $r5;
        androidx.paging.PagedList$BoundaryCallback r6;

        r0 := @parameter0: androidx.paging.DataSource;

        r1 := @parameter1: androidx.paging.PagedList$Config;

        r2 := @parameter2: java.util.concurrent.Executor;

        r3 := @parameter3: java.util.concurrent.Executor;

        r6 := @parameter4: androidx.paging.PagedList$BoundaryCallback;

        r7 := @parameter5: java.lang.Object;

        i0 := @parameter6: int;

        r4 := @parameter7: java.lang.Object;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r6 = null;

     label1:
        $i2 = i0 & 32;

        if $i2 == 0 goto label2;

        r7 = null;

     label2:
        $r5 = staticinvoke <androidx.paging.PagedListKt: androidx.paging.PagedList PagedList(androidx.paging.DataSource,androidx.paging.PagedList$Config,java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.paging.PagedList$BoundaryCallback,java.lang.Object)>(r0, r1, r2, r3, r6, r7);

        return $r5;
    }

