kotlin.contracts.ContractBuilder
<kotlin.contracts.ContractBuilder: kotlin.contracts.CallsInPlace callsInPlace(kotlin.Function,kotlin.contracts.InvocationKind)>
<kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns()>
<kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns(java.lang.Object)>
<kotlin.contracts.ContractBuilder: kotlin.contracts.ReturnsNotNull returnsNotNull()>
kotlin.contracts.ContractBuilder$DefaultImpls
    public static kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder, kotlin.Function, kotlin.contracts.InvocationKind, int, java.lang.Object)
    {
        java.lang.Object $r0;
        kotlin.contracts.CallsInPlace $r1;
        kotlin.contracts.ContractBuilder $r2;
        kotlin.Function $r3;
        kotlin.contracts.InvocationKind $r4;
        int $i0;
        java.lang.UnsupportedOperationException $r5;

        $r2 := @parameter0: kotlin.contracts.ContractBuilder;

        $r3 := @parameter1: kotlin.Function;

        $r4 := @parameter2: kotlin.contracts.InvocationKind;

        $i0 := @parameter3: int;

        $r0 := @parameter4: java.lang.Object;

        if $r0 != null goto label2;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        $r4 = <kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind UNKNOWN>;

     label1:
        $r1 = interfaceinvoke $r2.<kotlin.contracts.ContractBuilder: kotlin.contracts.CallsInPlace callsInPlace(kotlin.Function,kotlin.contracts.InvocationKind)>($r3, $r4);

        return $r1;

     label2:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: callsInPlace");

        throw $r5;
    }

