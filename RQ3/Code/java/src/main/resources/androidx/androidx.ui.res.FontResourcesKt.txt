androidx.ui.res.FontResourcesKt
<androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock>
<androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces>
    public static final androidx.ui.text.Typeface fontResource(androidx.ui.text.font.FontFamily, androidx.compose.Composer)
    {
        androidx.ui.text.font.FontFamily r0;
        androidx.compose.Composer $r1;
        android.content.Context r2, r14;
        java.util.Map $r3;
        java.lang.Object r4, $r9, r15, $r16;
        androidx.ui.text.Typeface r5, r6, $r11;
        java.lang.Integer $r7;
        androidx.compose.ProvidableAmbient $r8;
        boolean $z3, $z4, z6;
        java.lang.Throwable $r12;
        androidx.compose.Ambient r13;

        r0 := @parameter0: androidx.ui.text.font.FontFamily;

        $r1 := @parameter1: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "fontFamily");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-899647201);

        virtualinvoke $r1.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r7);

        $r8 = staticinvoke <androidx.ui.core.WrapperKt: androidx.compose.ProvidableAmbient getContextAmbient()>();

        r13 = (androidx.compose.Ambient) $r8;

        $r9 = virtualinvoke $r1.<androidx.compose.Composer: java.lang.Object consume(androidx.compose.Ambient)>(r13);

        r14 = (android.content.Context) $r9;

        virtualinvoke $r1.<androidx.compose.Composer: void endExpr()>();

        r2 = r14;

        $z3 = r0 instanceof androidx.ui.text.font.SystemFontFamily;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof androidx.ui.text.font.LoadedFontFamily;

        if $z4 == 0 goto label8;

     label1:
        r15 = <androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock>;

        z6 = 0;

        entermonitor r15;

     label2:
        $r3 = <androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces>;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r4 != null goto label3;

        r5 = staticinvoke <androidx.ui.text.TypefaceKt: androidx.ui.text.Typeface typefaceFromFontFamily$default(android.content.Context,androidx.ui.text.font.FontFamily,java.util.List,int,java.lang.Object)>(r2, r0, null, 4, null);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r5);

        $r16 = r5;

        goto label4;

     label3:
        $r16 = r4;

     label4:
        r6 = (androidx.ui.text.Typeface) $r16;

     label5:
        exitmonitor r15;

        return r6;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor r15;

        throw $r12;

     label8:
        $r11 = staticinvoke <androidx.ui.text.TypefaceKt: androidx.ui.text.Typeface typefaceFromFontFamily$default(android.content.Context,androidx.ui.text.font.FontFamily,java.util.List,int,java.lang.Object)>(r2, r0, null, 4, null);

        return $r11;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static final androidx.ui.res.DeferredResource loadFontResource(androidx.ui.text.font.FontFamily, androidx.ui.text.font.FontFamily, androidx.ui.text.font.FontFamily, androidx.compose.Composer)
    {
        androidx.ui.text.font.FontFamily r0, r1, r2;
        androidx.compose.Composer $r3;
        androidx.ui.text.Typeface r4, r5, $r15, $r19, r20, r22, $r24, r28, $r30, r32;
        boolean $z0, $z1, z2, z3, z7, z10;
        java.lang.Integer $r6, $r7, $r10;
        java.lang.IllegalArgumentException $r9, $r12;
        java.lang.Throwable $r13, $r14, r23;
        java.lang.Object r16, r18, $r21, r25, $r27, $r29;
        java.util.Map $r17, $r26;
        androidx.ui.res.DeferredResource r33;

        r0 := @parameter0: androidx.ui.text.font.FontFamily;

        r1 := @parameter1: androidx.ui.text.font.FontFamily;

        r2 := @parameter2: androidx.ui.text.font.FontFamily;

        $r3 := @parameter3: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "fontFamily");

        if r1 != null goto label01;

        $r15 = (androidx.ui.text.Typeface) null;

        goto label09;

     label01:
        $z0 = virtualinvoke r1.<androidx.ui.text.font.FontFamily: boolean getCanLoadSynchronously()>();

        if $z0 != 0 goto label02;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only FontFamily that can be loaded synchronously can be used as a pendingFontFamily");

        throw $r12;

     label02:
        r16 = <androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock>;

        z2 = 0;

        z3 = 0;

        entermonitor r16;

     label03:
        $r17 = <androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces>;

        r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r18 != null goto label04;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1215186717);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r10);

        $r19 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.text.Typeface fontResource(androidx.ui.text.font.FontFamily,androidx.compose.Composer)>(r1, $r3);

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        r20 = $r19;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r20);

        $r21 = r20;

        goto label05;

     label04:
        $r21 = r18;

     label05:
        r22 = (androidx.ui.text.Typeface) $r21;

     label06:
        exitmonitor r16;

        $r15 = r22;

        goto label09;

     label07:
        $r13 := @caughtexception;

        r23 = $r13;

     label08:
        exitmonitor r16;

        throw r23;

     label09:
        r4 = $r15;

        if r2 != null goto label10;

        $r24 = (androidx.ui.text.Typeface) null;

        goto label18;

     label10:
        $z1 = virtualinvoke r2.<androidx.ui.text.font.FontFamily: boolean getCanLoadSynchronously()>();

        if $z1 != 0 goto label11;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only FontFamily that can be loaded synchronously can be used as a failedFontFamily");

        throw $r9;

     label11:
        r25 = <androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock>;

        z7 = 0;

        entermonitor r25;

     label12:
        $r26 = <androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces>;

        z10 = 0;

        $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if $r27 != null goto label13;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1215186209);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r7);

        r28 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.text.Typeface fontResource(androidx.ui.text.font.FontFamily,androidx.compose.Composer)>(r2, $r3);

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        r5 = r28;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r5);

        $r29 = r5;

        goto label14;

     label13:
        $r29 = $r27;

     label14:
        $r30 = (androidx.ui.text.Typeface) $r29;

     label15:
        exitmonitor r25;

        $r24 = $r30;

        goto label18;

     label16:
        $r14 := @caughtexception;

     label17:
        exitmonitor r25;

        throw $r14;

     label18:
        r32 = $r24;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(857276140);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r6);

        r33 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.res.DeferredResource loadFontResource(androidx.ui.text.font.FontFamily,androidx.ui.text.Typeface,androidx.ui.text.Typeface,androidx.compose.Composer)>(r0, r4, r32, $r3);

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        return r33;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label12 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static androidx.ui.res.DeferredResource loadFontResource$default(androidx.ui.text.font.FontFamily, androidx.ui.text.font.FontFamily, androidx.ui.text.font.FontFamily, androidx.compose.Composer, int, java.lang.Object)
    {
        androidx.ui.text.font.FontFamily r0, r4, r5;
        androidx.compose.Composer $r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.res.DeferredResource $r3;

        r0 := @parameter0: androidx.ui.text.font.FontFamily;

        r4 := @parameter1: androidx.ui.text.font.FontFamily;

        r5 := @parameter2: androidx.ui.text.font.FontFamily;

        $r1 := @parameter3: androidx.compose.Composer;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = (androidx.ui.text.font.FontFamily) null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = (androidx.ui.text.font.FontFamily) null;

     label2:
        $r3 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.res.DeferredResource loadFontResource(androidx.ui.text.font.FontFamily,androidx.ui.text.font.FontFamily,androidx.ui.text.font.FontFamily,androidx.compose.Composer)>(r0, r4, r5, $r1);

        return $r3;
    }

    public static final androidx.ui.res.DeferredResource loadFontResource(androidx.ui.text.font.FontFamily, androidx.ui.text.Typeface, androidx.ui.text.Typeface, androidx.compose.Composer)
    {
        androidx.ui.text.font.FontFamily r0;
        androidx.ui.text.Typeface r1, r2, r5, r6, $r23, r25;
        androidx.compose.Composer $r3;
        java.lang.Object r4, $r9, r20, $r22;
        boolean $z2, $z3, z4, z7;
        java.lang.Integer $r7, $r11, $r17;
        androidx.compose.ProvidableAmbient $r8;
        androidx.ui.text.font.FontListFontFamily $r10;
        androidx.ui.res.FontResourcesKt$loadFontResource$2 $r12;
        kotlin.jvm.functions.Function0 $r13;
        androidx.ui.res.DeferredResource $r14, $r16, r26, r31;
        androidx.ui.res.LoadingState $r15;
        java.lang.Throwable $r19;
        java.util.Map $r21;
        androidx.compose.Ambient r27;
        android.content.Context r28, r29;
        java.lang.String r30;

        r0 := @parameter0: androidx.ui.text.font.FontFamily;

        r1 := @parameter1: androidx.ui.text.Typeface;

        r2 := @parameter2: androidx.ui.text.Typeface;

        $r3 := @parameter3: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "fontFamily");

        $z2 = virtualinvoke r0.<androidx.ui.text.font.FontFamily: boolean getCanLoadSynchronously()>();

        if $z2 == 0 goto label8;

        r20 = <androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock>;

        z4 = 0;

        entermonitor r20;

     label1:
        $r21 = <androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces>;

        r4 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r4 != null goto label2;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1215192811);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r17);

        r5 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.text.Typeface fontResource(androidx.ui.text.font.FontFamily,androidx.compose.Composer)>(r0, $r3);

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        r6 = r5;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r6);

        $r22 = r6;

        goto label3;

     label2:
        $r22 = r4;

     label3:
        $r23 = (androidx.ui.text.Typeface) $r22;

     label4:
        exitmonitor r20;

        goto label7;

     label5:
        $r19 := @caughtexception;

     label6:
        exitmonitor r20;

        throw $r19;

     label7:
        r25 = $r23;

        $r16 = new androidx.ui.res.DeferredResource;

        specialinvoke $r16.<androidx.ui.res.DeferredResource: void <init>(androidx.ui.res.LoadingState,java.lang.Object,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, r1, r2, 1, null);

        r26 = $r16;

        z7 = 0;

        virtualinvoke r26.<androidx.ui.res.DeferredResource: void loadCompleted$ui_framework_release(java.lang.Object)>(r25);

        return r26;

     label8:
        $z3 = r0 instanceof androidx.ui.text.font.FontListFontFamily;

        if $z3 != 0 goto label9;

        $r14 = new androidx.ui.res.DeferredResource;

        $r15 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState FAILED>;

        specialinvoke $r14.<androidx.ui.res.DeferredResource: void <init>(androidx.ui.res.LoadingState,java.lang.Object,java.lang.Object)>($r15, r1, r2);

        return $r14;

     label9:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-899651131);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r7);

        $r8 = staticinvoke <androidx.ui.core.WrapperKt: androidx.compose.ProvidableAmbient getContextAmbient()>();

        r27 = (androidx.compose.Ambient) $r8;

        $r9 = virtualinvoke $r3.<androidx.compose.Composer: java.lang.Object consume(androidx.compose.Ambient)>(r27);

        r28 = (android.content.Context) $r9;

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        r29 = r28;

        $r10 = (androidx.ui.text.font.FontListFontFamily) r0;

        r30 = staticinvoke <androidx.ui.res.FontResourcesKt: java.lang.String cacheKey(androidx.ui.text.font.FontListFontFamily,android.content.Context)>($r10, r29);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-896111909);

        virtualinvoke $r3.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r11);

        $r12 = new androidx.ui.res.FontResourcesKt$loadFontResource$2;

        specialinvoke $r12.<androidx.ui.res.FontResourcesKt$loadFontResource$2: void <init>(android.content.Context,androidx.ui.text.font.FontFamily)>(r29, r0);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        r31 = staticinvoke <androidx.ui.res.ResourcesKt: androidx.ui.res.DeferredResource loadResource(java.lang.String,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,androidx.compose.Composer)>(r30, r1, r2, $r13, $r3);

        virtualinvoke $r3.<androidx.compose.Composer: void endExpr()>();

        return r31;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static androidx.ui.res.DeferredResource loadFontResource$default(androidx.ui.text.font.FontFamily, androidx.ui.text.Typeface, androidx.ui.text.Typeface, androidx.compose.Composer, int, java.lang.Object)
    {
        androidx.ui.text.font.FontFamily r0;
        androidx.compose.Composer $r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        androidx.ui.res.DeferredResource $r3;
        androidx.ui.text.Typeface r4, r5;

        r0 := @parameter0: androidx.ui.text.font.FontFamily;

        r4 := @parameter1: androidx.ui.text.Typeface;

        r5 := @parameter2: androidx.ui.text.Typeface;

        $r1 := @parameter3: androidx.compose.Composer;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = (androidx.ui.text.Typeface) null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = (androidx.ui.text.Typeface) null;

     label2:
        $r3 = staticinvoke <androidx.ui.res.FontResourcesKt: androidx.ui.res.DeferredResource loadFontResource(androidx.ui.text.font.FontFamily,androidx.ui.text.Typeface,androidx.ui.text.Typeface,androidx.compose.Composer)>(r0, r4, r5, $r1);

        return $r3;
    }

    public static final java.lang.String cacheKey(androidx.ui.text.font.FontListFontFamily, android.content.Context)
    {
        androidx.ui.text.font.FontListFontFamily $r0;
        android.content.Context r1;
        java.lang.StringBuilder r2, $r8;
        android.util.TypedValue r3, $r9;
        androidx.ui.text.font.Font r4, r5;
        java.lang.CharSequence r6, r7;
        java.util.List $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        android.content.res.Resources $r12;
        androidx.ui.text.font.ResourceFont $r13;
        int $i0;
        java.util.Iterator r16;
        java.lang.String $r17, r18;

        $r0 := @parameter0: androidx.ui.text.font.FontListFontFamily;

        r1 := @parameter1: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r2 = $r8;

        $r9 = new android.util.TypedValue;

        specialinvoke $r9.<android.util.TypedValue: void <init>()>();

        r3 = $r9;

        $r10 = virtualinvoke $r0.<androidx.ui.text.font.FontListFontFamily: java.util.List getFonts()>();

        r16 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.ui.text.font.Font) $r11;

        r5 = r4;

        $z1 = r5 instanceof androidx.ui.text.font.ResourceFont;

        if $z1 == 0 goto label4;

        $r12 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = (androidx.ui.text.font.ResourceFont) r4;

        $i0 = virtualinvoke $r13.<androidx.ui.text.font.ResourceFont: int getResId()>();

        virtualinvoke $r12.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, r3, 1);

        r6 = r3.<android.util.TypedValue: java.lang.CharSequence string>;

        if r6 != null goto label2;

        $r17 = (java.lang.String) null;

        goto label3;

     label2:
        r7 = r6;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label4:
        goto label1;

     label5:
        r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r18, "concatenatedResourcePaths.toString()");

        return r18;
    }

    public static final void <clinit>()
    {
        boolean z0;
        java.lang.Object $r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.ui.res.FontResourcesKt: java.lang.Object cacheLock> = $r0;

        z0 = 0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        <androidx.ui.res.FontResourcesKt: java.util.Map syncLoadedTypefaces> = $r2;

        return;
    }

