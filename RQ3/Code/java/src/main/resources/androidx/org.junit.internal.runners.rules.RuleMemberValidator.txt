org.junit.internal.runners.rules.RuleMemberValidator
<org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator CLASS_RULE_METHOD_VALIDATOR>
<org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator CLASS_RULE_VALIDATOR>
<org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator RULE_METHOD_VALIDATOR>
<org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator RULE_VALIDATOR>
<org.junit.internal.runners.rules.RuleMemberValidator: java.lang.Class 'annotation'>
<org.junit.internal.runners.rules.RuleMemberValidator: boolean methods>
<org.junit.internal.runners.rules.RuleMemberValidator: java.util.List validatorStrategies>
    static void <clinit>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic $r1;
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic $r2;
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic $r3;
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule $r4;
        org.junit.internal.runners.rules.RuleMemberValidator $r5;
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule $r6;
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule $r7;
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule $r8;
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule $r9;

        $r0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator$Builder classRuleValidatorBuilder()>();

        $r1 = new org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        specialinvoke $r1.<org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r1);

        $r2 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic;

        specialinvoke $r2.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r2);

        $r3 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        specialinvoke $r3.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r3);

        $r4 = new org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule;

        specialinvoke $r4.<org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r4);

        $r5 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator build()>();

        <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator CLASS_RULE_VALIDATOR> = $r5;

        $r0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator$Builder testRuleValidatorBuilder()>();

        $r6 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule;

        specialinvoke $r6.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r6);

        $r3 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        specialinvoke $r3.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r3);

        $r7 = new org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule;

        specialinvoke $r7.<org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r7);

        $r5 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator build()>();

        <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator RULE_VALIDATOR> = $r5;

        $r0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator$Builder classRuleValidatorBuilder()>();

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder forMethods()>();

        $r1 = new org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        specialinvoke $r1.<org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r1);

        $r2 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic;

        specialinvoke $r2.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r2);

        $r3 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        specialinvoke $r3.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r3);

        $r8 = new org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule;

        specialinvoke $r8.<org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r8);

        $r5 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator build()>();

        <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator CLASS_RULE_METHOD_VALIDATOR> = $r5;

        $r0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator$Builder testRuleValidatorBuilder()>();

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder forMethods()>();

        $r6 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule;

        specialinvoke $r6.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r6);

        $r3 = new org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        specialinvoke $r3.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r3);

        $r9 = new org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule;

        specialinvoke $r9.<org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)>(null);

        $r0 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)>($r9);

        $r5 = virtualinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: org.junit.internal.runners.rules.RuleMemberValidator build()>();

        <org.junit.internal.runners.rules.RuleMemberValidator: org.junit.internal.runners.rules.RuleMemberValidator RULE_METHOD_VALIDATOR> = $r5;

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$Builder)
    {
        org.junit.internal.runners.rules.RuleMemberValidator $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r1;
        java.lang.Class $r2;
        boolean $z0;
        java.util.List $r3;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.lang.Class access$800(org.junit.internal.runners.rules.RuleMemberValidator$Builder)>($r1);

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.lang.Class 'annotation'> = $r2;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator$Builder: boolean access$900(org.junit.internal.runners.rules.RuleMemberValidator$Builder)>($r1);

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator: boolean methods> = $z0;

        $r3 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.util.List access$1000(org.junit.internal.runners.rules.RuleMemberValidator$Builder)>($r1);

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.util.List validatorStrategies> = $r3;

        return;
    }

    static boolean access$1200(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean isMethodRule(org.junit.runners.model.FrameworkMember)>($r0);

        return $z0;
    }

    static boolean access$1300(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean isRuleType(org.junit.runners.model.FrameworkMember)>($r0);

        return $z0;
    }

    static boolean access$1400(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean isTestRule(org.junit.runners.model.FrameworkMember)>($r0);

        return $z0;
    }

    private static org.junit.internal.runners.rules.RuleMemberValidator$Builder classRuleValidatorBuilder()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;

        $r0 = new org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: void <init>(java.lang.Class,org.junit.internal.runners.rules.RuleMemberValidator$1)>(class "Lorg/junit/ClassRule;", null);

        return $r0;
    }

    private static boolean isMethodRule(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r1 = class "Lorg/junit/rules/MethodRule;";

        $r2 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMember: java.lang.Class getType()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        return $z0;
    }

    private static boolean isRuleType(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean isMethodRule(org.junit.runners.model.FrameworkMember)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean isTestRule(org.junit.runners.model.FrameworkMember)>($r0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isTestRule(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMember $r0;
        java.lang.Class $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r1 = class "Lorg/junit/rules/TestRule;";

        $r2 = virtualinvoke $r0.<org.junit.runners.model.FrameworkMember: java.lang.Class getType()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        return $z0;
    }

    private static org.junit.internal.runners.rules.RuleMemberValidator$Builder testRuleValidatorBuilder()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;

        $r0 = new org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: void <init>(java.lang.Class,org.junit.internal.runners.rules.RuleMemberValidator$1)>(class "Lorg/junit/Rule;", null);

        return $r0;
    }

    private void validateMember(org.junit.runners.model.FrameworkMember, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.util.List $r2, $r4;
        java.lang.Class $r3;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator $r7;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.util.List;

        $r4 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.util.List validatorStrategies>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator) $r6;

        $r3 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.lang.Class 'annotation'>;

        interfaceinvoke $r7.<org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator: void validate(org.junit.runners.model.FrameworkMember,java.lang.Class,java.util.List)>($r1, $r3, $r2);

        goto label1;

     label2:
        return;
    }

    public void validate(org.junit.runners.model.TestClass, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator $r0;
        org.junit.runners.model.TestClass $r1;
        java.util.List $r2, $r4;
        boolean $z0;
        java.lang.Class $r3;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        org.junit.runners.model.FrameworkMember $r7;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator;

        $r1 := @parameter0: org.junit.runners.model.TestClass;

        $r2 := @parameter1: java.util.List;

        $z0 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator: boolean methods>;

        if $z0 == 0 goto label3;

        $r3 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.lang.Class 'annotation'>;

        $r4 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods(java.lang.Class)>($r3);

     label1:
        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.junit.runners.model.FrameworkMember) $r6;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator: void validateMember(org.junit.runners.model.FrameworkMember,java.util.List)>($r7, $r2);

        goto label2;

     label3:
        $r3 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator: java.lang.Class 'annotation'>;

        $r4 = virtualinvoke $r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedFields(java.lang.Class)>($r3);

        goto label1;

     label4:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$1
org.junit.internal.runners.rules.RuleMemberValidator$Builder-IA
org.junit.internal.runners.rules.RuleMemberValidator$Builder
<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.lang.Class 'annotation'>
<org.junit.internal.runners.rules.RuleMemberValidator$Builder: boolean methods>
<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.util.List validators>
    private void <init>(java.lang.Class)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        java.lang.Class $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        $r1 := @parameter0: java.lang.Class;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.lang.Class 'annotation'> = $r1;

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: boolean methods> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.util.List validators> = $r2;

        return;
    }

    void <init>(java.lang.Class, org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        java.lang.Class $r1;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r2;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: void <init>(java.lang.Class)>($r1);

        return;
    }

    static java.util.List access$1000(org.junit.internal.runners.rules.RuleMemberValidator$Builder)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        java.util.List r1;

        $r0 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        r1 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.util.List validators>;

        return r1;
    }

    static java.lang.Class access$800(org.junit.internal.runners.rules.RuleMemberValidator$Builder)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        java.lang.Class r1;

        $r0 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        r1 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.lang.Class 'annotation'>;

        return r1;
    }

    static boolean access$900(org.junit.internal.runners.rules.RuleMemberValidator$Builder)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        boolean z0;

        $r0 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        z0 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: boolean methods>;

        return z0;
    }

    org.junit.internal.runners.rules.RuleMemberValidator build()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        org.junit.internal.runners.rules.RuleMemberValidator $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        $r1 = new org.junit.internal.runners.rules.RuleMemberValidator;

        specialinvoke $r1.<org.junit.internal.runners.rules.RuleMemberValidator: void <init>(org.junit.internal.runners.rules.RuleMemberValidator$Builder)>($r0);

        return $r1;
    }

    org.junit.internal.runners.rules.RuleMemberValidator$Builder forMethods()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: boolean methods> = 1;

        return $r0;
    }

    org.junit.internal.runners.rules.RuleMemberValidator$Builder withValidator(org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$Builder $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator $r1;
        java.util.List $r2;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$Builder;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator;

        $r2 = $r0.<org.junit.internal.runners.rules.RuleMemberValidator$Builder: java.util.List validators>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $r0;
    }

org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic-IA
org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic: void <init>()>();

        return;
    }

    private boolean isDeclaringClassPublic(org.junit.runners.model.FrameworkMember)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMember: java.lang.Class getDeclaringClass()>();

        $i0 = virtualinvoke $r2.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        return $z0;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$DeclaringClassMustBePublic: boolean isDeclaringClassPublic(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must be declared in a public class.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule-IA
org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeARule;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1300(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must implement MethodRule or TestRule.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule-IA
org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$FieldMustBeATestRule;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1400(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must implement TestRule.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule-IA
org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        java.lang.'annotation'.Annotation $r4;
        java.lang.String $r5;
        org.junit.internal.runners.rules.ValidationError $r6;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeNonStaticOrAlsoClassRule;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1200(org.junit.runners.model.FrameworkMember)>($r1);

        $r4 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMember: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/ClassRule;");

        if $r4 == null goto label4;

        $z1 = 1;

     label1:
        $z2 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMember: boolean isStatic()>();

        if $z2 == 0 goto label6;

        if $z0 != 0 goto label2;

        if $z1 != 0 goto label6;

     label2:
        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1200(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 == 0 goto label5;

        $r5 = "must not be static.";

     label3:
        $r6 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r6.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, $r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;

     label4:
        $z1 = 0;

        goto label1;

     label5:
        $r5 = "must not be static or it must be annotated with @ClassRule.";

        goto label3;

     label6:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic-IA
org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBePublic;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMember: boolean isPublic()>();

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must be public.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic-IA
org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MemberMustBeStatic;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = virtualinvoke $r1.<org.junit.runners.model.FrameworkMember: boolean isStatic()>();

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must be static.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule-IA
org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeARule;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1300(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must return an implementation of MethodRule or TestRule.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule-IA
org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule
    private void <init>()
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule $r0;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.internal.runners.rules.RuleMemberValidator$1)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule $r0;
        org.junit.internal.runners.rules.RuleMemberValidator$1 $r1;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule;

        $r1 := @parameter0: org.junit.internal.runners.rules.RuleMemberValidator$1;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule: void <init>()>();

        return;
    }

    public void validate(org.junit.runners.model.FrameworkMember, java.lang.Class, java.util.List)
    {
        org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule $r0;
        org.junit.runners.model.FrameworkMember $r1;
        java.lang.Class $r2;
        java.util.List $r3;
        boolean $z0;
        org.junit.internal.runners.rules.ValidationError $r4;

        $r0 := @this: org.junit.internal.runners.rules.RuleMemberValidator$MethodMustBeATestRule;

        $r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: java.util.List;

        $z0 = staticinvoke <org.junit.internal.runners.rules.RuleMemberValidator: boolean access$1400(org.junit.runners.model.FrameworkMember)>($r1);

        if $z0 != 0 goto label1;

        $r4 = new org.junit.internal.runners.rules.ValidationError;

        specialinvoke $r4.<org.junit.internal.runners.rules.ValidationError: void <init>(org.junit.runners.model.FrameworkMember,java.lang.Class,java.lang.String)>($r1, $r2, "must return an implementation of TestRule.");

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator
<org.junit.internal.runners.rules.RuleMemberValidator$RuleValidator: void validate(org.junit.runners.model.FrameworkMember,java.lang.Class,java.util.List)>
