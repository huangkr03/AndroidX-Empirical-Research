androidx.work.Data
<androidx.work.Data: java.lang.String TAG>
<androidx.work.Data: androidx.work.Data EMPTY>
<androidx.work.Data: int MAX_DATA_BYTES>
<androidx.work.Data: java.util.Map mValues>
    void <init>()
    {
        androidx.work.Data r0;

        r0 := @this: androidx.work.Data;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(androidx.work.Data)
    {
        androidx.work.Data r0, r1;
        java.util.HashMap $r2;
        java.util.Map $r3;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: androidx.work.Data;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        $r3 = r1.<androidx.work.Data: java.util.Map mValues>;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r0.<androidx.work.Data: java.util.Map mValues> = $r2;

        return;
    }

    public void <init>(java.util.Map)
    {
        androidx.work.Data r0;
        java.util.Map r1;
        java.util.HashMap $r2;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        r0.<androidx.work.Data: java.util.Map mValues> = $r2;

        return;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        java.lang.Object r2;
        java.util.Map $r3;
        java.lang.Boolean $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = r2 instanceof java.lang.Boolean;

        if $z1 == 0 goto label1;

        $r4 = (java.lang.Boolean) r2;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label1:
        return z0;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Boolean[] r3;
        java.util.Map $r4;
        boolean $z0;
        boolean[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Boolean[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Boolean[]) r2;

        $r5 = staticinvoke <androidx.work.Data: boolean[] convertToPrimitiveArray(java.lang.Boolean[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public byte getByte(java.lang.String, byte)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        byte b0, $b1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Byte $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Byte;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Byte) r2;

        $b1 = virtualinvoke $r4.<java.lang.Byte: byte byteValue()>();

        return $b1;

     label1:
        return b0;
    }

    public byte[] getByteArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Byte[] r3;
        java.util.Map $r4;
        boolean $z0;
        byte[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Byte[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Byte[]) r2;

        $r5 = staticinvoke <androidx.work.Data: byte[] convertToPrimitiveArray(java.lang.Byte[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public int getInt(java.lang.String, int)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Integer $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Integer) r2;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        return i0;
    }

    public int[] getIntArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Integer[] r3;
        java.util.Map $r4;
        boolean $z0;
        int[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Integer[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Integer[]) r2;

        $r5 = staticinvoke <androidx.work.Data: int[] convertToPrimitiveArray(java.lang.Integer[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public long getLong(java.lang.String, long)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        long l0, $l1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Long $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Long) r2;

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        return $l1;

     label1:
        return l0;
    }

    public long[] getLongArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Long[] r3;
        java.util.Map $r4;
        boolean $z0;
        long[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Long[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Long[]) r2;

        $r5 = staticinvoke <androidx.work.Data: long[] convertToPrimitiveArray(java.lang.Long[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public float getFloat(java.lang.String, float)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        float f0, $f1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Float $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Float;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Float) r2;

        $f1 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        return $f1;

     label1:
        return f0;
    }

    public float[] getFloatArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Float[] r3;
        java.util.Map $r4;
        boolean $z0;
        float[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Float[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Float[]) r2;

        $r5 = staticinvoke <androidx.work.Data: float[] convertToPrimitiveArray(java.lang.Float[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public double getDouble(java.lang.String, double)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        double d0, $d1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.Double $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Double) r2;

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        return $d1;

     label1:
        return d0;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Double[] r3;
        java.util.Map $r4;
        boolean $z0;
        double[] $r5;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.Double[];

        if $z0 == 0 goto label1;

        r3 = (java.lang.Double[]) r2;

        $r5 = staticinvoke <androidx.work.Data: double[] convertToPrimitiveArray(java.lang.Double[])>(r3);

        return $r5;

     label1:
        return null;
    }

    public java.lang.String getString(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.String) r2;

        return $r4;

     label1:
        return null;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.Map $r3;
        boolean $z0;
        java.lang.String[] $r4;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.work.Data: java.util.Map mValues>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String[];

        if $z0 == 0 goto label1;

        $r4 = (java.lang.String[]) r2;

        return $r4;

     label1:
        return null;
    }

    public java.util.Map getKeyValueMap()
    {
        androidx.work.Data r0;
        java.util.Map $r1, $r2;

        r0 := @this: androidx.work.Data;

        $r1 = r0.<androidx.work.Data: java.util.Map mValues>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public byte[] toByteArray()
    {
        androidx.work.Data r0;
        byte[] $r1;

        r0 := @this: androidx.work.Data;

        $r1 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>(r0);

        return $r1;
    }

    public boolean hasKeyWithValueOfType(java.lang.String, java.lang.Class)
    {
        androidx.work.Data r0;
        java.lang.String r1;
        java.lang.Class r2, $r5;
        java.lang.Object r3;
        java.util.Map $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r4 = r0.<androidx.work.Data: java.util.Map mValues>;

        r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int size()
    {
        androidx.work.Data r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: androidx.work.Data;

        $r1 = r0.<androidx.work.Data: java.util.Map mValues>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public static byte[] toByteArrayInternal(androidx.work.Data)
    {
        androidx.work.Data r0;
        java.io.ByteArrayOutputStream r1, $r3;
        java.lang.Throwable r2, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r26, r31, r32, r33, r35, r36, r37, r38;
        java.io.ObjectOutputStream $r4, r28;
        int $i0, $i1;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0;
        byte[] $r7, r34;
        java.lang.IllegalStateException $r8;
        java.lang.Object $r9, $r10, $r12;
        java.lang.String $r11, $r14, $r16, $r18, $r20, $r22, $r24, $r27;
        java.util.Iterator r29;
        java.util.Map$Entry r30;

        r0 := @parameter0: androidx.work.Data;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r3;

        r28 = null;

     label01:
        $r4 = new java.io.ObjectOutputStream;

        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1);

        r28 = $r4;

        $i0 = virtualinvoke r0.<androidx.work.Data: int size()>();

        virtualinvoke r28.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r5 = r0.<androidx.work.Data: java.util.Map mValues>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r29 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r9 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke r28.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>($r11);

        $r12 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r28.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r12);

        goto label02;

     label03:
        if r28 == null goto label07;

     label04:
        virtualinvoke r28.<java.io.ObjectOutputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r23 := @caughtexception;

        r31 = $r23;

        $r24 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r24, "Error in Data#toByteArray: ", r31);

     label07:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label08:
        goto label28;

     label09:
        $r15 := @caughtexception;

        r32 = $r15;

        $r16 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r16, "Error in Data#toByteArray: ", r32);

        goto label28;

     label10:
        $r26 := @caughtexception;

        r33 = $r26;

        $r27 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r27, "Error in Data#toByteArray: ", r33);

        r34 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label11:
        if r28 == null goto label15;

     label12:
        virtualinvoke r28.<java.io.ObjectOutputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r17 := @caughtexception;

        r35 = $r17;

        $r18 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r18, "Error in Data#toByteArray: ", r35);

     label15:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r19 := @caughtexception;

        r36 = $r19;

        $r20 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r20, "Error in Data#toByteArray: ", r36);

     label18:
        return r34;

     label19:
        $r25 := @caughtexception;

        r2 = $r25;

     label20:
        if r28 == null goto label24;

     label21:
        virtualinvoke r28.<java.io.ObjectOutputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r21 := @caughtexception;

        r37 = $r21;

        $r22 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r22, "Error in Data#toByteArray: ", r37);

     label24:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r13 := @caughtexception;

        r38 = $r13;

        $r14 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error in Data#toByteArray: ", r38);

     label27:
        throw r2;

     label28:
        $i1 = virtualinvoke r1.<java.io.ByteArrayOutputStream: int size()>();

        if $i1 <= 10240 goto label29;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Data cannot occupy more than 10240 bytes when serialized");

        throw $r8;

     label29:
        $r7 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label03 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label01 to label03 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public static androidx.work.Data fromByteArray(byte[])
    {
        byte[] r0;
        java.util.HashMap r1, $r4;
        java.io.ByteArrayInputStream r2, $r5;
        java.lang.Throwable r3, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, r27, r28, r29, r30, r31, r32, r33;
        int $i0, i8;
        java.io.ObjectInputStream $r6, r26;
        java.lang.String $r7, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        java.lang.Object $r8;
        java.lang.IllegalStateException $r10;
        androidx.work.Data $r34;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        if $i0 <= 10240 goto label01;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Data cannot occupy more than 10240 bytes when serialized");

        throw $r10;

     label01:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r1 = $r4;

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r2 = $r5;

        r26 = null;

     label02:
        $r6 = new java.io.ObjectInputStream;

        specialinvoke $r6.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r2);

        r26 = $r6;

        i8 = virtualinvoke r26.<java.io.ObjectInputStream: int readInt()>();

     label03:
        if i8 <= 0 goto label04;

        $r7 = virtualinvoke r26.<java.io.ObjectInputStream: java.lang.String readUTF()>();

        $r8 = virtualinvoke r26.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        i8 = i8 + -1;

        goto label03;

     label04:
        if r26 == null goto label08;

     label05:
        virtualinvoke r26.<java.io.ObjectInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r23 := @caughtexception;

        r27 = $r23;

        $r24 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r24, "Error in Data#fromByteArray: ", r27);

     label08:
        virtualinvoke r2.<java.io.ByteArrayInputStream: void close()>();

     label09:
        goto label28;

     label10:
        $r19 := @caughtexception;

        r28 = $r19;

        $r20 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r20, "Error in Data#fromByteArray: ", r28);

        goto label28;

     label11:
        $r15 := @caughtexception;

        r29 = $r15;

        $r16 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r16, "Error in Data#fromByteArray: ", r29);

     label12:
        if r26 == null goto label16;

     label13:
        virtualinvoke r26.<java.io.ObjectInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r13 := @caughtexception;

        r30 = $r13;

        $r14 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error in Data#fromByteArray: ", r30);

     label16:
        virtualinvoke r2.<java.io.ByteArrayInputStream: void close()>();

     label17:
        goto label28;

     label18:
        $r17 := @caughtexception;

        r31 = $r17;

        $r18 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r18, "Error in Data#fromByteArray: ", r31);

        goto label28;

     label19:
        $r25 := @caughtexception;

        r3 = $r25;

     label20:
        if r26 == null goto label24;

     label21:
        virtualinvoke r26.<java.io.ObjectInputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r21 := @caughtexception;

        r32 = $r21;

        $r22 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r22, "Error in Data#fromByteArray: ", r32);

     label24:
        virtualinvoke r2.<java.io.ByteArrayInputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r11 := @caughtexception;

        r33 = $r11;

        $r12 = <androidx.work.Data: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Error in Data#fromByteArray: ", r33);

     label27:
        throw r3;

     label28:
        $r34 = new androidx.work.Data;

        specialinvoke $r34.<androidx.work.Data: void <init>(java.util.Map)>(r1);

        return $r34;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label02 to label04 with label11;
        catch java.lang.ClassNotFoundException from label02 to label04 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label02 to label04 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.work.Data r0, r2;
        java.lang.Object r1, r6, r7, $r13;
        java.util.Set r3, $r12;
        java.util.Iterator r4;
        java.lang.String r5;
        java.lang.Class $r8, $r9;
        java.util.Map $r10, $r11, $r14, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.Object[] $r16, $r17;

        r0 := @this: androidx.work.Data;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r1 == null goto label02;

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r8 == $r9 goto label03;

     label02:
        return 0;

     label03:
        r2 = (androidx.work.Data) r1;

        $r10 = r0.<androidx.work.Data: java.util.Map mValues>;

        r3 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        $r11 = r2.<androidx.work.Data: java.util.Map mValues>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label04;

        return 0;

     label04:
        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r13;

        $r14 = r0.<androidx.work.Data: java.util.Map mValues>;

        r6 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r15 = r2.<androidx.work.Data: java.util.Map mValues>;

        r7 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        if r6 == null goto label06;

        if r7 != null goto label09;

     label06:
        if r6 != r7 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z5 = $z4;

        goto label11;

     label09:
        $z2 = r6 instanceof java.lang.Object[];

        if $z2 == 0 goto label10;

        $z3 = r7 instanceof java.lang.Object[];

        if $z3 == 0 goto label10;

        $r17 = (java.lang.Object[]) r6;

        $r16 = (java.lang.Object[]) r7;

        z5 = staticinvoke <java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>($r17, $r16);

        goto label11;

     label10:
        z5 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r7);

     label11:
        if z5 != 0 goto label12;

        return 0;

     label12:
        goto label05;

     label13:
        return 1;
    }

    public int hashCode()
    {
        androidx.work.Data r0;
        java.util.Map $r1;
        int $i0, $i1;

        r0 := @this: androidx.work.Data;

        $r1 = r0.<androidx.work.Data: java.util.Map mValues>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        $i1 = 31 * $i0;

        return $i1;
    }

    public java.lang.String toString()
    {
        androidx.work.Data r0;
        java.lang.StringBuilder r1, $r5, $r12;
        java.util.Iterator r2;
        java.lang.String r3, $r8, $r18;
        java.lang.Object r4, $r11;
        java.util.Map $r6, $r9, $r14;
        boolean $z0, $z1, $z2;
        java.util.Set $r10;
        java.lang.Object[] $r17;

        r0 := @this: androidx.work.Data;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Data {");

        r1 = $r5;

        $r6 = r0.<androidx.work.Data: java.util.Map mValues>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r9 = r0.<androidx.work.Data: java.util.Map mValues>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r11;

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r14 = r0.<androidx.work.Data: java.util.Map mValues>;

        r4 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $z2 = r4 instanceof java.lang.Object[];

        if $z2 == 0 goto label2;

        $r17 = (java.lang.Object[]) r4;

        $r18 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[])
    {
        boolean[] r0;
        java.lang.Boolean[] r1;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @parameter0: boolean[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Boolean)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $z0 = r0[i2];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Byte[] convertPrimitiveByteArray(byte[])
    {
        byte[] r0;
        java.lang.Byte[] r1;
        int $i0, $i1, i3;
        byte $b2;
        java.lang.Byte $r2;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Byte)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $b2 = r0[i3];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Integer[] convertPrimitiveIntArray(int[])
    {
        int[] r0;
        java.lang.Integer[] r1;
        int $i0, $i1, $i2, i3;
        java.lang.Integer $r2;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Integer)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $i2 = r0[i3];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Long[] convertPrimitiveLongArray(long[])
    {
        long[] r0;
        java.lang.Long[] r1;
        int $i0, $i1, i3;
        long $l2;
        java.lang.Long $r2;

        r0 := @parameter0: long[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Long)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $l2 = r0[i3];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Float[] convertPrimitiveFloatArray(float[])
    {
        float[] r0;
        java.lang.Float[] r1;
        int $i0, $i1, i2;
        float $f0;
        java.lang.Float $r2;

        r0 := @parameter0: float[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Float)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $f0 = r0[i2];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.Double[] convertPrimitiveDoubleArray(double[])
    {
        double[] r0;
        java.lang.Double[] r1;
        int $i0, $i1, i2;
        double $d0;
        java.lang.Double $r2;

        r0 := @parameter0: double[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.Double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $d0 = r0[i2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static boolean[] convertToPrimitiveArray(java.lang.Boolean[])
    {
        java.lang.Boolean[] r0;
        boolean[] r1;
        int $i0, $i1, i2;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Boolean[];

        $i0 = lengthof r0;

        r1 = newarray (boolean)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        r1[i2] = $z0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static byte[] convertToPrimitiveArray(java.lang.Byte[])
    {
        java.lang.Byte[] r0;
        byte[] r1;
        int $i0, $i1, i3;
        java.lang.Byte $r2;
        byte $b2;

        r0 := @parameter0: java.lang.Byte[];

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $r2 = r0[i3];

        $b2 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        r1[i3] = $b2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static int[] convertToPrimitiveArray(java.lang.Integer[])
    {
        java.lang.Integer[] r0;
        int[] r1;
        int $i0, $i1, $i2, i3;
        java.lang.Integer $r2;

        r0 := @parameter0: java.lang.Integer[];

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $r2 = r0[i3];

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long[] convertToPrimitiveArray(java.lang.Long[])
    {
        java.lang.Long[] r0;
        long[] r1;
        int $i0, $i1, i3;
        java.lang.Long $r2;
        long $l2;

        r0 := @parameter0: java.lang.Long[];

        $i0 = lengthof r0;

        r1 = newarray (long)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $r2 = r0[i3];

        $l2 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        r1[i3] = $l2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static float[] convertToPrimitiveArray(java.lang.Float[])
    {
        java.lang.Float[] r0;
        float[] r1;
        int $i0, $i1, i2;
        java.lang.Float $r2;
        float $f0;

        r0 := @parameter0: java.lang.Float[];

        $i0 = lengthof r0;

        r1 = newarray (float)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        r1[i2] = $f0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static double[] convertToPrimitiveArray(java.lang.Double[])
    {
        java.lang.Double[] r0;
        double[] r1;
        int $i0, $i1, i2;
        java.lang.Double $r2;
        double $d0;

        r0 := @parameter0: java.lang.Double[];

        $i0 = lengthof r0;

        r1 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        r1[i2] = $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        androidx.work.Data$Builder $r1;
        androidx.work.Data $r2;

        $r0 = staticinvoke <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>("Data");

        <androidx.work.Data: java.lang.String TAG> = $r0;

        $r1 = new androidx.work.Data$Builder;

        specialinvoke $r1.<androidx.work.Data$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.work.Data$Builder: androidx.work.Data build()>();

        <androidx.work.Data: androidx.work.Data EMPTY> = $r2;

        return;
    }

androidx.work.Data$Builder
<androidx.work.Data$Builder: java.util.Map mValues>
    public void <init>()
    {
        androidx.work.Data$Builder r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.work.Data$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.work.Data$Builder: java.util.Map mValues> = $r1;

        return;
    }

    public androidx.work.Data$Builder putBoolean(java.lang.String, boolean)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        boolean z0;
        java.util.Map $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putBooleanArray(java.lang.String, boolean[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        boolean[] r2;
        java.util.Map $r3;
        java.lang.Boolean[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: boolean[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putByte(java.lang.String, byte)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        byte b0;
        java.util.Map $r2;
        java.lang.Byte $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putByteArray(java.lang.String, byte[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        byte[] r2;
        java.util.Map $r3;
        java.lang.Byte[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Byte[] convertPrimitiveByteArray(byte[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putInt(java.lang.String, int)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        int i0;
        java.util.Map $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putIntArray(java.lang.String, int[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        int[] r2;
        java.util.Map $r3;
        java.lang.Integer[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Integer[] convertPrimitiveIntArray(int[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putLong(java.lang.String, long)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        long l0;
        java.util.Map $r2;
        java.lang.Long $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putLongArray(java.lang.String, long[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        long[] r2;
        java.util.Map $r3;
        java.lang.Long[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: long[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Long[] convertPrimitiveLongArray(long[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putFloat(java.lang.String, float)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        float f0;
        java.util.Map $r2;
        java.lang.Float $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putFloatArray(java.lang.String, float[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        float[] r2;
        java.util.Map $r3;
        java.lang.Float[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Float[] convertPrimitiveFloatArray(float[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putDouble(java.lang.String, double)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        double d0;
        java.util.Map $r2;
        java.lang.Double $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return r0;
    }

    public androidx.work.Data$Builder putDoubleArray(java.lang.String, double[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        double[] r2;
        java.util.Map $r3;
        java.lang.Double[] $r4;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r4 = staticinvoke <androidx.work.Data: java.lang.Double[] convertPrimitiveDoubleArray(double[])>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return r0;
    }

    public androidx.work.Data$Builder putString(java.lang.String, java.lang.String)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public androidx.work.Data$Builder putStringArray(java.lang.String, java.lang.String[])
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1;
        java.lang.String[] r2;
        java.util.Map $r3;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public androidx.work.Data$Builder putAll(androidx.work.Data)
    {
        androidx.work.Data$Builder r0;
        androidx.work.Data r1;
        java.util.Map $r2;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: androidx.work.Data;

        $r2 = r1.<androidx.work.Data: java.util.Map mValues>;

        virtualinvoke r0.<androidx.work.Data$Builder: androidx.work.Data$Builder putAll(java.util.Map)>($r2);

        return r0;
    }

    public androidx.work.Data$Builder putAll(java.util.Map)
    {
        androidx.work.Data$Builder r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.String r4;
        java.lang.Object r5, $r7, $r8;
        java.util.Set $r6;
        boolean $z0;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.util.Map;

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r8;

        r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<androidx.work.Data$Builder: androidx.work.Data$Builder put(java.lang.String,java.lang.Object)>(r4, r5);

        goto label1;

     label2:
        return r0;
    }

    public androidx.work.Data$Builder put(java.lang.String, java.lang.Object)
    {
        androidx.work.Data$Builder r0;
        java.lang.String r1, $r11;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        double[] $r12;
        java.util.Map $r13, $r17, $r21, $r25, $r29, $r33, $r36, $r38;
        java.lang.Double[] $r14;
        float[] $r16;
        java.lang.Float[] $r18;
        long[] $r20;
        java.lang.Long[] $r22;
        int[] $r24;
        java.lang.Integer[] $r26;
        byte[] $r28;
        java.lang.Byte[] $r30;
        boolean[] $r32;
        java.lang.Boolean[] $r34;

        r0 := @this: androidx.work.Data$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label01;

        $r36 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, null);

        goto label10;

     label01:
        r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if r3 == class "Ljava/lang/Boolean;" goto label02;

        if r3 == class "Ljava/lang/Byte;" goto label02;

        if r3 == class "Ljava/lang/Integer;" goto label02;

        if r3 == class "Ljava/lang/Long;" goto label02;

        if r3 == class "Ljava/lang/Float;" goto label02;

        if r3 == class "Ljava/lang/Double;" goto label02;

        if r3 == class "Ljava/lang/String;" goto label02;

        if r3 == class "[Ljava/lang/Boolean;" goto label02;

        if r3 == class "[Ljava/lang/Byte;" goto label02;

        if r3 == class "[Ljava/lang/Integer;" goto label02;

        if r3 == class "[Ljava/lang/Long;" goto label02;

        if r3 == class "[Ljava/lang/Float;" goto label02;

        if r3 == class "[Ljava/lang/Double;" goto label02;

        if r3 != class "[Ljava/lang/String;" goto label03;

     label02:
        $r38 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label10;

     label03:
        if r3 != class "[Z" goto label04;

        $r33 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r32 = (boolean[]) r2;

        $r34 = staticinvoke <androidx.work.Data: java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[])>($r32);

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r34);

        goto label10;

     label04:
        if r3 != class "[B" goto label05;

        $r29 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r28 = (byte[]) r2;

        $r30 = staticinvoke <androidx.work.Data: java.lang.Byte[] convertPrimitiveByteArray(byte[])>($r28);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r30);

        goto label10;

     label05:
        if r3 != class "[I" goto label06;

        $r25 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r24 = (int[]) r2;

        $r26 = staticinvoke <androidx.work.Data: java.lang.Integer[] convertPrimitiveIntArray(int[])>($r24);

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r26);

        goto label10;

     label06:
        if r3 != class "[J" goto label07;

        $r21 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r20 = (long[]) r2;

        $r22 = staticinvoke <androidx.work.Data: java.lang.Long[] convertPrimitiveLongArray(long[])>($r20);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r22);

        goto label10;

     label07:
        if r3 != class "[F" goto label08;

        $r17 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r16 = (float[]) r2;

        $r18 = staticinvoke <androidx.work.Data: java.lang.Float[] convertPrimitiveFloatArray(float[])>($r16);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r18);

        goto label10;

     label08:
        if r3 != class "[D" goto label09;

        $r13 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        $r12 = (double[]) r2;

        $r14 = staticinvoke <androidx.work.Data: java.lang.Double[] convertPrimitiveDoubleArray(double[])>($r12);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        goto label10;

     label09:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has invalid type ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label10:
        return r0;
    }

    public androidx.work.Data build()
    {
        androidx.work.Data$Builder r0;
        androidx.work.Data r1, $r2;
        java.util.Map $r3;

        r0 := @this: androidx.work.Data$Builder;

        $r2 = new androidx.work.Data;

        $r3 = r0.<androidx.work.Data$Builder: java.util.Map mValues>;

        specialinvoke $r2.<androidx.work.Data: void <init>(java.util.Map)>($r3);

        r1 = $r2;

        staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>(r1);

        return r1;
    }

