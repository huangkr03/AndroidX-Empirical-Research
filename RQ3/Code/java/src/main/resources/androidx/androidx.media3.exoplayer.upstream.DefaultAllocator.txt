androidx.media3.exoplayer.upstream.DefaultAllocator
<androidx.media3.exoplayer.upstream.DefaultAllocator: int AVAILABLE_EXTRA_CAPACITY>
<androidx.media3.exoplayer.upstream.DefaultAllocator: boolean trimOnReset>
<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize>
<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock>
<androidx.media3.exoplayer.upstream.DefaultAllocator: int targetBufferSize>
<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>
<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>
<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>
    public void <init>(boolean, int)
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        boolean z0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: void <init>(boolean,int,int)>(z0, i0, 0);

        return;
    }

    public void <init>(boolean, int, int)
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, i5;
        androidx.media3.exoplayer.upstream.Allocation[] $r1, $r5;
        byte[] $r2, $r4;
        androidx.media3.exoplayer.upstream.Allocation $r3;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        if i1 < 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: boolean trimOnReset> = z0;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize> = i0;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount> = i1;

        $i3 = i1 + 100;

        $r1 = newarray (androidx.media3.exoplayer.upstream.Allocation)[$i3];

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations> = $r1;

        if i1 <= 0 goto label7;

        $i4 = i1 * i0;

        $r2 = newarray (byte)[$i4];

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock> = $r2;

        i5 = 0;

     label5:
        if i5 >= i1 goto label6;

        i2 = i5 * i0;

        $r5 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $r3 = new androidx.media3.exoplayer.upstream.Allocation;

        $r4 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock>;

        specialinvoke $r3.<androidx.media3.exoplayer.upstream.Allocation: void <init>(byte[],int)>($r4, i2);

        $r5[i5] = $r3;

        i5 = i5 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock> = null;

     label8:
        return;
    }

    public synchronized void reset()
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        $z0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: boolean trimOnReset>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: void setTargetBufferSize(int)>(0);

     label1:
        return;
    }

    public synchronized void setTargetBufferSize(int)
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int i0, $i1;
        boolean z0, $z1;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int targetBufferSize>;

        if i0 >= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int targetBufferSize> = i0;

        if z0 == 0 goto label3;

        virtualinvoke r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: void trim()>();

     label3:
        return;
    }

    public synchronized androidx.media3.exoplayer.upstream.Allocation allocate()
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        androidx.media3.exoplayer.upstream.Allocation $r1, $r9, r12;
        byte[] $r2;
        androidx.media3.exoplayer.upstream.Allocation[] $r3, $r4, $r5, $r7, $r8, $r11;
        java.lang.Object[] $r6;
        java.lang.Object $r10;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        $i0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount> = $i1;

        $i2 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        if $i2 <= 0 goto label1;

        $r8 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i8 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        $i9 = $i8 - 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount> = $i9;

        $r9 = $r8[$i9];

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        r12 = (androidx.media3.exoplayer.upstream.Allocation) $r10;

        $r11 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i10 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        $r11[$i10] = null;

        goto label2;

     label1:
        $r1 = new androidx.media3.exoplayer.upstream.Allocation;

        $i3 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize>;

        $r2 = newarray (byte)[$i3];

        specialinvoke $r1.<androidx.media3.exoplayer.upstream.Allocation: void <init>(byte[],int)>($r2, 0);

        r12 = $r1;

        $i5 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $r3 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i4 = lengthof $r3;

        if $i5 <= $i4 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $r4 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i6 = lengthof $r4;

        $i7 = $i6 * 2;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i7);

        $r7 = (androidx.media3.exoplayer.upstream.Allocation[]) $r6;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations> = $r7;

     label2:
        return r12;
    }

    public synchronized void release(androidx.media3.exoplayer.upstream.Allocation)
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        androidx.media3.exoplayer.upstream.Allocation r1;
        int $i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.upstream.Allocation[] $r2;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.Allocation;

        $r2 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount> = $i1;

        $r2[$i0] = r1;

        $i2 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $i3 = $i2 - 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount> = $i3;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    public synchronized void release(androidx.media3.exoplayer.upstream.Allocator$AllocationNode)
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int $i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.upstream.Allocation[] $r1;
        androidx.media3.exoplayer.upstream.Allocation $r2;
        androidx.media3.exoplayer.upstream.Allocator$AllocationNode r3;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        r3 := @parameter0: androidx.media3.exoplayer.upstream.Allocator$AllocationNode;

     label1:
        if r3 == null goto label2;

        $r1 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount> = $i1;

        $r2 = interfaceinvoke r3.<androidx.media3.exoplayer.upstream.Allocator$AllocationNode: androidx.media3.exoplayer.upstream.Allocation getAllocation()>();

        $r1[$i0] = $r2;

        $i2 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $i3 = $i2 - 1;

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount> = $i3;

        r3 = interfaceinvoke r3.<androidx.media3.exoplayer.upstream.Allocator$AllocationNode: androidx.media3.exoplayer.upstream.Allocator$AllocationNode next()>();

        goto label1;

     label2:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    public synchronized void trim()
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        androidx.media3.exoplayer.upstream.Allocation r1, r2, $r6, $r11;
        byte[] $r3, $r8, $r9, $r13, $r14;
        androidx.media3.exoplayer.upstream.Allocation[] $r4, $r5, $r10, $r15, $r16;
        java.lang.Object $r7, $r12;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        $i2 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int targetBufferSize>;

        $i1 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize>;

        i0 = staticinvoke <androidx.media3.common.util.Util: int ceilDivide(int,int)>($i2, $i1);

        $i3 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $i4 = i0 - $i3;

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i5 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        if i11 < $i5 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock>;

        if $r3 == null goto label7;

        i12 = 0;

        $i7 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        i13 = $i7 - 1;

     label2:
        if i12 > i13 goto label6;

        $r5 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $r6 = $r5[i12];

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r1 = (androidx.media3.exoplayer.upstream.Allocation) $r7;

        $r9 = r1.<androidx.media3.exoplayer.upstream.Allocation: byte[] data>;

        $r8 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock>;

        if $r9 != $r8 goto label3;

        i12 = i12 + 1;

        goto label5;

     label3:
        $r10 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $r11 = $r10[i13];

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        r2 = (androidx.media3.exoplayer.upstream.Allocation) $r12;

        $r14 = r2.<androidx.media3.exoplayer.upstream.Allocation: byte[] data>;

        $r13 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: byte[] initialAllocationBlock>;

        if $r14 == $r13 goto label4;

        i13 = i13 + -1;

        goto label5;

     label4:
        $r15 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i9 = i12;

        i12 = i12 + 1;

        $r15[$i9] = r2;

        $r16 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i10 = i13;

        i13 = i13 + -1;

        $r16[$i10] = r1;

     label5:
        goto label2;

     label6:
        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i11, i12);

        $i8 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        if i11 < $i8 goto label7;

        return;

     label7:
        $r4 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: androidx.media3.exoplayer.upstream.Allocation[] availableAllocations>;

        $i6 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r4, i11, $i6, null);

        r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int availableCount> = i11;

        return;
    }

    public synchronized int getTotalBytesAllocated()
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        $i1 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int allocatedCount>;

        $i0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize>;

        $i2 = $i1 * $i0;

        return $i2;
    }

    public int getIndividualAllocationLength()
    {
        androidx.media3.exoplayer.upstream.DefaultAllocator r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.upstream.DefaultAllocator;

        $i0 = r0.<androidx.media3.exoplayer.upstream.DefaultAllocator: int individualAllocationSize>;

        return $i0;
    }

