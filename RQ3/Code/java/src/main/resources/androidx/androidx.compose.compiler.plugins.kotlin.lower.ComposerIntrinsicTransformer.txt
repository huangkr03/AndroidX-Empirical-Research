androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer
<androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext context>
    public void lower(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)
    {
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid $r2;
        org.jetbrains.kotlin.ir.IrElement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "module");

        $r3 = (org.jetbrains.kotlin.ir.IrElement) r1;

        $r2 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid) r0;

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoidKt: void transformChildrenVoid(org.jetbrains.kotlin.ir.IrElement,org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid)>($r3, $r2);

        return;
    }

    public void lower(org.jetbrains.kotlin.ir.declarations.IrFile)
    {
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1;
        org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid $r2;
        org.jetbrains.kotlin.ir.IrElement $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "irFile");

        $r3 = (org.jetbrains.kotlin.ir.IrElement) r1;

        $r2 = (org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid) r0;

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoidKt: void transformChildrenVoid(org.jetbrains.kotlin.ir.IrElement,org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid)>($r3, $r2);

        return;
    }

    public org.jetbrains.kotlin.ir.expressions.IrExpression visitCall(org.jetbrains.kotlin.ir.expressions.IrCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer r0;
        org.jetbrains.kotlin.ir.expressions.IrCall r1;
        byte b0;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r2;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r3;
        org.jetbrains.kotlin.descriptors.DeclarationDescriptor $r4;
        org.jetbrains.kotlin.name.FqName $r5, $r7;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r6;
        boolean $z0, $z1, $z2, z3, z4;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r8, r16;
        int $i1;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, $r15, r17;
        java.lang.Throwable $r11, $r14;
        org.jetbrains.kotlin.ir.IrElement $r12;
        java.lang.AssertionError $r13;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r4 = (org.jetbrains.kotlin.descriptors.DeclarationDescriptor) $r3;

        $r5 = staticinvoke <org.jetbrains.kotlin.resolve.descriptorUtil.DescriptorUtilsKt: org.jetbrains.kotlin.name.FqName getFqNameSafe(org.jetbrains.kotlin.descriptors.DeclarationDescriptor)>($r4);

        $r6 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName getCurrentComposerIntrinsic()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z0 == 0 goto label5;

        b0 = 2;

        $i1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: int getValueArgumentsCount()>();

        if $i1 != b0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        z4 = 0;

        $z1 = <kotlin._Assertions: boolean ENABLED>;

        if $z1 == 0 goto label3;

        if z3 != 0 goto label3;

        $r12 = (org.jetbrains.kotlin.ir.IrElement) r1;

        $r15 = staticinvoke <org.jetbrains.kotlin.ir.util.DumpIrTreeKt: java.lang.String dump$default(org.jetbrains.kotlin.ir.IrElement,boolean,int,java.lang.Object)>($r12, 0, 1, null);

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        $r14 = (java.lang.Throwable) $r13;

        throw $r14;

     label3:
        r16 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if r16 != null goto label4;

        r17 = "Expected non-null composer argument";

        $r9 = new java.lang.IllegalStateException;

        $r10 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        $r11 = (java.lang.Throwable) $r9;

        throw $r11;

     label4:
        return r16;

     label5:
        $r8 = specialinvoke r0.<org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid: org.jetbrains.kotlin.ir.expressions.IrExpression visitCall(org.jetbrains.kotlin.ir.expressions.IrCall)>(r1);

        return $r8;
    }

    public final org.jetbrains.kotlin.backend.common.extensions.IrPluginContext getContext()
    {
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer r0;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext context>;

        return $r1;
    }

    public void <init>(org.jetbrains.kotlin.backend.common.extensions.IrPluginContext)
    {
        androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer r0;
        org.jetbrains.kotlin.backend.common.extensions.IrPluginContext r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer;

        r1 := @parameter0: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<org.jetbrains.kotlin.ir.visitors.IrElementTransformerVoid: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.lower.ComposerIntrinsicTransformer: org.jetbrains.kotlin.backend.common.extensions.IrPluginContext context> = r1;

        return;
    }

