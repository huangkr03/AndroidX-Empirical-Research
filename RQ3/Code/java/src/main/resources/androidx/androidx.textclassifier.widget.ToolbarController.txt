androidx.textclassifier.widget.ToolbarController
<androidx.textclassifier.widget.ToolbarController: java.lang.String LOG_TAG>
<androidx.textclassifier.widget.ToolbarController: int ORDER_START>
<androidx.textclassifier.widget.ToolbarController: int ALPHA>
<androidx.textclassifier.widget.ToolbarController: int HIGHLIGHT_DELAY_MS>
<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>
<androidx.textclassifier.widget.ToolbarController: android.graphics.Rect mContentRect>
<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>
<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$BackgroundSpan mHighlight>
<androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance>
<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory sFloatingToolbarFactory>
    public static androidx.textclassifier.widget.ToolbarController getInstance(android.widget.TextView)
    {
        android.widget.TextView r0, $r4;
        androidx.textclassifier.widget.ToolbarController r1, $r7, $r9, $r12;
        java.lang.ref.WeakReference $r2, $r6, $r8, $r10;
        java.lang.Object $r3, $r11;
        androidx.textclassifier.widget.IFloatingToolbar $r5;

        r0 := @parameter0: android.widget.TextView;

        $r2 = <androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (androidx.textclassifier.widget.ToolbarController) $r3;

        if r1 != null goto label1;

        $r8 = new java.lang.ref.WeakReference;

        $r9 = new androidx.textclassifier.widget.ToolbarController;

        specialinvoke $r9.<androidx.textclassifier.widget.ToolbarController: void <init>(android.widget.TextView)>(r0);

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r9);

        <androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance> = $r8;

        goto label2;

     label1:
        $r4 = r1.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        if $r4 == r0 goto label2;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>("New textView. Dismissing previous toolbar.");

        $r5 = r1.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void dismissImmediately(androidx.textclassifier.widget.IFloatingToolbar)>($r5);

        $r6 = new java.lang.ref.WeakReference;

        $r7 = new androidx.textclassifier.widget.ToolbarController;

        specialinvoke $r7.<androidx.textclassifier.widget.ToolbarController: void <init>(android.widget.TextView)>(r0);

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        <androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance> = $r6;

     label2:
        $r10 = <androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance>;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r12 = (androidx.textclassifier.widget.ToolbarController) $r11;

        return $r12;
    }

    private void <init>(android.widget.TextView)
    {
        androidx.textclassifier.widget.ToolbarController r0;
        android.widget.TextView r1, $r3, $r6;
        java.lang.Object $r2;
        android.graphics.Rect $r4;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan $r5;
        int $i0, $i1;
        androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory $r7;
        androidx.textclassifier.widget.IFloatingToolbar $r8, $r10, $r11, $r12;
        androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener $r9;

        r0 := @this: androidx.textclassifier.widget.ToolbarController;

        r1 := @parameter0: android.widget.TextView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.widget.TextView) $r2;

        r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.ToolbarController: android.graphics.Rect mContentRect> = $r4;

        $r5 = new androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        $i0 = virtualinvoke $r6.<android.widget.TextView: int getHighlightColor()>();

        $i1 = staticinvoke <androidx.textclassifier.widget.ToolbarController: int withAlpha(int)>($i0);

        specialinvoke $r5.<androidx.textclassifier.widget.ToolbarController$BackgroundSpan: void <init>(int)>($i1);

        r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$BackgroundSpan mHighlight> = $r5;

        $r7 = <androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory sFloatingToolbarFactory>;

        $r8 = interfaceinvoke $r7.<androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory: androidx.textclassifier.widget.IFloatingToolbar create(android.widget.TextView)>(r1);

        r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar> = $r8;

        $r11 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        $r9 = new androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener;

        $r10 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        specialinvoke $r9.<androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener: void <init>(androidx.textclassifier.widget.IFloatingToolbar)>($r10);

        interfaceinvoke $r11.<androidx.textclassifier.widget.IFloatingToolbar: void setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r9);

        $r12 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        interfaceinvoke $r12.<androidx.textclassifier.widget.IFloatingToolbar: void setDismissOnMenuItemClick(boolean)>(1);

        return;
    }

    public static void setFloatingToolbarFactory(androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory)
    {
        androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory r0, $r2;
        java.lang.Object $r1;

        r0 := @parameter0: androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory;

        $r1 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = (androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory) $r1;

        <androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory sFloatingToolbarFactory> = $r2;

        return;
    }

    public void show(java.util.List, int, int)
    {
        androidx.textclassifier.widget.ToolbarController r0;
        java.util.List r1;
        int i0, i1, $i2, $i5;
        java.lang.CharSequence r2;
        androidx.core.internal.view.SupportMenu r3;
        android.widget.TextView $r5, $r8, $r9, $r11, $r14, $r15;
        androidx.textclassifier.widget.IFloatingToolbar $r6, $r10, $r12, $r18, $r19, $r20;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan $r7, $r13;
        boolean $z0, $z1;
        android.graphics.Rect $r16, $r17;

        r0 := @this: androidx.textclassifier.widget.ToolbarController;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i2 = i1 - 1;

        staticinvoke <androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>(i0, 0, $i2, "start");

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        r2 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        if r2 == null goto label1;

        $i5 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        if i1 <= $i5 goto label2;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ToolbarController", "Cannot show link toolbar. Invalid text indices");

        return;

     label2:
        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>("About to show new toolbar state. Dismissing old state");

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void dismissImmediately(androidx.textclassifier.widget.IFloatingToolbar)>($r6);

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$BackgroundSpan mHighlight>;

        r3 = staticinvoke <androidx.textclassifier.widget.ToolbarController: androidx.core.internal.view.SupportMenu createMenu(android.widget.TextView,androidx.textclassifier.widget.ToolbarController$BackgroundSpan,java.util.List)>($r8, $r7, r1);

        $r9 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        $z0 = staticinvoke <androidx.textclassifier.widget.ToolbarController: boolean canShowToolbar(android.widget.TextView,boolean)>($r9, 1);

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<androidx.core.internal.view.SupportMenu: boolean hasVisibleItems()>();

        if $z1 == 0 goto label3;

        $r11 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        $r10 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void setListeners(android.widget.TextView,int,int,androidx.textclassifier.widget.IFloatingToolbar)>($r11, i0, i1, $r10);

        $r14 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        $r13 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$BackgroundSpan mHighlight>;

        $r12 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void setHighlight(android.widget.TextView,androidx.textclassifier.widget.ToolbarController$BackgroundSpan,int,int,androidx.textclassifier.widget.IFloatingToolbar)>($r14, $r13, i0, i1, $r12);

        $r16 = r0.<androidx.textclassifier.widget.ToolbarController: android.graphics.Rect mContentRect>;

        $r15 = r0.<androidx.textclassifier.widget.ToolbarController: android.widget.TextView mTextView>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void updateRectCoordinates(android.graphics.Rect,android.widget.TextView,int,int)>($r16, $r15, i0, i1);

        $r18 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        $r17 = r0.<androidx.textclassifier.widget.ToolbarController: android.graphics.Rect mContentRect>;

        interfaceinvoke $r18.<androidx.textclassifier.widget.IFloatingToolbar: void setContentRect(android.graphics.Rect)>($r17);

        $r19 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        interfaceinvoke $r19.<androidx.textclassifier.widget.IFloatingToolbar: void setMenu(androidx.core.internal.view.SupportMenu)>(r3);

        $r20 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        interfaceinvoke $r20.<androidx.textclassifier.widget.IFloatingToolbar: void show()>();

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>("Showing toolbar");

     label3:
        return;
    }

    boolean isToolbarShowing()
    {
        androidx.textclassifier.widget.ToolbarController r0;
        androidx.textclassifier.widget.IFloatingToolbar $r1;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.textclassifier.widget.IFloatingToolbar: boolean isShowing()>();

        return $z0;
    }

    static void dismissImmediately(androidx.textclassifier.widget.IFloatingToolbar)
    {
        androidx.textclassifier.widget.IFloatingToolbar r0;

        r0 := @parameter0: androidx.textclassifier.widget.IFloatingToolbar;

        interfaceinvoke r0.<androidx.textclassifier.widget.IFloatingToolbar: void hide()>();

        interfaceinvoke r0.<androidx.textclassifier.widget.IFloatingToolbar: void dismiss()>();

        return;
    }

    static boolean canShowToolbar(android.widget.TextView, boolean)
    {
        android.widget.TextView r0;
        boolean z0, z1, z2, z3, $z4;
        java.lang.Object[] $r1;
        java.lang.Boolean $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: android.widget.TextView;

        z0 := @parameter1: boolean;

        z1 = virtualinvoke r0.<android.widget.TextView: boolean hasFocus()>();

        z2 = virtualinvoke r0.<android.widget.TextView: boolean isAttachedToWindow()>();

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        if z2 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z3 = $z4;

        if z3 != 0 goto label3;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("canShowToolbar=false. Reason: windowFocus=%b, viewFocus=%b, viewAttached=%b", $r1);

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>($r5);

     label3:
        return z3;
    }

    static int withAlpha(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $i4 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(20, $i1, $i2, $i3);

        return $i4;
    }

    static java.lang.String getHighlightedText(android.widget.TextView, androidx.textclassifier.widget.ToolbarController$BackgroundSpan)
    {
        android.widget.TextView r0;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r1;
        java.lang.CharSequence r2, $r4, $r5;
        android.text.Spannable r3;
        int i0, i1, i2, i3, $i4, $i5;
        boolean $z0;
        java.lang.String $r6;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        r2 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r2 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        r3 = (android.text.Spannable) r2;

        i0 = interfaceinvoke r3.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r1);

        i1 = interfaceinvoke r3.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r1);

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r4 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i2, i3);

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        return $r6;

     label1:
        return null;
    }

    static void removeHighlight(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        android.text.Spannable r2;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan[] r3, r4;
        int i0, $i1, i2;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r1 instanceof android.text.Spannable;

        if $z0 == 0 goto label2;

        r2 = (android.text.Spannable) r1;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r6 = interfaceinvoke r2.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "Landroidx/textclassifier/widget/ToolbarController$BackgroundSpan;");

        r3 = (androidx.textclassifier.widget.ToolbarController$BackgroundSpan[]) $r6;

        r4 = r3;

        i0 = lengthof r4;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r5 = r4[i2];

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>(r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private static void setHighlight(android.widget.TextView, androidx.textclassifier.widget.ToolbarController$BackgroundSpan, int, int, androidx.textclassifier.widget.IFloatingToolbar)
    {
        android.widget.TextView r0;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r1;
        int i0, i1;
        androidx.textclassifier.widget.IFloatingToolbar r2;
        java.lang.CharSequence r3;
        java.lang.String r4;
        boolean $z0;
        androidx.textclassifier.widget.ToolbarController$1 $r5;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: androidx.textclassifier.widget.IFloatingToolbar;

        r3 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = r3 instanceof android.text.Spannable;

        if $z0 == 0 goto label1;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void removeHighlight(android.widget.TextView)>(r0);

        r4 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.String toString()>();

        $r5 = new androidx.textclassifier.widget.ToolbarController$1;

        specialinvoke $r5.<androidx.textclassifier.widget.ToolbarController$1: void <init>(android.widget.TextView,java.lang.String,androidx.textclassifier.widget.IFloatingToolbar,java.lang.CharSequence,androidx.textclassifier.widget.ToolbarController$BackgroundSpan,int,int)>(r0, r4, r2, r3, r1, i0, i1);

        virtualinvoke r0.<android.widget.TextView: boolean postDelayed(java.lang.Runnable,long)>($r5, 80L);

     label1:
        return;
    }

    static void updateRectCoordinates(android.graphics.Rect, android.widget.TextView, int, int)
    {
        android.graphics.Rect r0;
        android.widget.TextView r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] r2, r3;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.widget.TextView;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 = staticinvoke <androidx.textclassifier.widget.ToolbarController: int[] getCoordinates(android.widget.TextView,int,boolean)>(r1, i0, 1);

        r3 = staticinvoke <androidx.textclassifier.widget.ToolbarController: int[] getCoordinates(android.widget.TextView,int,boolean)>(r1, i1, 0);

        $i5 = r2[0];

        $i4 = r2[1];

        $i3 = r3[0];

        $i2 = r3[1];

        virtualinvoke r0.<android.graphics.Rect: void set(int,int,int,int)>($i5, $i4, $i3, $i2);

        virtualinvoke r0.<android.graphics.Rect: void sort()>();

        return;
    }

    private static int[] getCoordinates(android.widget.TextView, int, boolean)
    {
        android.widget.TextView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0;
        android.text.Layout r1;
        int[] r2, $r3;
        float $f0;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 = virtualinvoke r0.<android.widget.TextView: android.text.Layout getLayout()>();

        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);

        $f0 = virtualinvoke r1.<android.text.Layout: float getPrimaryHorizontal(int)>(i0);

        i2 = (int) $f0;

        if z0 == 0 goto label1;

        $i16 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>(i1);

        goto label2;

     label1:
        $i16 = virtualinvoke r1.<android.text.Layout: int getLineBottom(int)>(i1);

     label2:
        i3 = $i16;

        r2 = newarray (int)[2];

        virtualinvoke r0.<android.widget.TextView: void getLocationOnScreen(int[])>(r2);

        $r3 = newarray (int)[2];

        $i4 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingLeft()>();

        $i5 = i2 + $i4;

        $i6 = virtualinvoke r0.<android.widget.TextView: int getScrollX()>();

        $i8 = $i5 - $i6;

        $i7 = r2[0];

        $i9 = $i8 + $i7;

        $r3[0] = $i9;

        $i10 = virtualinvoke r0.<android.widget.TextView: int getTotalPaddingTop()>();

        $i11 = i3 + $i10;

        $i12 = virtualinvoke r0.<android.widget.TextView: int getScrollY()>();

        $i14 = $i11 - $i12;

        $i13 = r2[1];

        $i15 = $i14 + $i13;

        $r3[1] = $i15;

        return $r3;
    }

    private static androidx.core.internal.view.SupportMenu createMenu(android.widget.TextView, androidx.textclassifier.widget.ToolbarController$BackgroundSpan, java.util.List)
    {
        android.widget.TextView r0;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r1;
        java.util.List r2;
        androidx.appcompat.view.menu.MenuBuilder r3, $r7;
        int i0, $i1, $i2, $i3, i4, $i5, $i7, $i8;
        androidx.collection.ArrayMap r4, $r9;
        androidx.core.app.RemoteActionCompat r5;
        android.view.MenuItem r6, $r10, $r11, $r12;
        android.content.Context $r8, $r21;
        androidx.textclassifier.widget.ToolbarController$2 $r13;
        java.lang.Object $r14;
        android.app.PendingIntent $r15;
        java.lang.CharSequence $r18, $r25;
        androidx.core.graphics.drawable.IconCompat $r20;
        android.graphics.drawable.Drawable $r22;
        boolean $z0;
        byte $b9;

        r0 := @parameter0: android.widget.TextView;

        r1 := @parameter1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        r2 := @parameter2: java.util.List;

        $r7 = new androidx.appcompat.view.menu.MenuBuilder;

        $r8 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        specialinvoke $r7.<androidx.appcompat.view.menu.MenuBuilder: void <init>(android.content.Context)>($r8);

        r3 = $r7;

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r9 = new androidx.collection.ArrayMap;

        specialinvoke $r9.<androidx.collection.ArrayMap: void <init>(int)>(i0);

        r4 = $r9;

        i4 = 0;

     label01:
        if i4 >= i0 goto label10;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        r5 = (androidx.core.app.RemoteActionCompat) $r14;

        $i5 = <androidx.textclassifier.widget.FloatingToolbar: int MENU_ID_SMART_ACTION>;

        if i4 != 0 goto label02;

        $i3 = <androidx.textclassifier.widget.FloatingToolbar: int MENU_ID_SMART_ACTION>;

        $i7 = $i3;

        goto label03;

     label02:
        $i7 = i4;

     label03:
        if i4 != 0 goto label04;

        $i8 = 0;

        goto label05;

     label04:
        $i8 = 50 + i4;

     label05:
        $r25 = virtualinvoke r5.<androidx.core.app.RemoteActionCompat: java.lang.CharSequence getTitle()>();

        r6 = virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i5, $i7, $i8, $r25);

        $z0 = virtualinvoke r5.<androidx.core.app.RemoteActionCompat: boolean shouldShowIcon()>();

        if $z0 == 0 goto label06;

        $r20 = virtualinvoke r5.<androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat getIcon()>();

        $r21 = virtualinvoke r0.<android.widget.TextView: android.content.Context getContext()>();

        $r22 = virtualinvoke $r20.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r21);

        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r22);

     label06:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 26 goto label07;

        $r18 = virtualinvoke r5.<androidx.core.app.RemoteActionCompat: java.lang.CharSequence getContentDescription()>();

        interfaceinvoke r6.<android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>($r18);

     label07:
        if i4 != 0 goto label08;

        $b9 = 2;

        goto label09;

     label08:
        $b9 = 0;

     label09:
        interfaceinvoke r6.<android.view.MenuItem: void setShowAsAction(int)>($b9);

        $r15 = virtualinvoke r5.<androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r15);

        i4 = i4 + 1;

        goto label01;

     label10:
        $r10 = virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)>(0, 16908321, 1, 17039361);

        $r11 = interfaceinvoke $r10.<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>(99);

        interfaceinvoke $r11.<android.view.MenuItem: void setShowAsAction(int)>(2);

        $i1 = <androidx.textclassifier.R$string: int abc_share>;

        $r12 = virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)>(0, 16908341, 2, $i1);

        interfaceinvoke $r12.<android.view.MenuItem: void setShowAsAction(int)>(1);

        $r13 = new androidx.textclassifier.widget.ToolbarController$2;

        specialinvoke $r13.<androidx.textclassifier.widget.ToolbarController$2: void <init>(java.util.Map,android.widget.TextView,androidx.textclassifier.widget.ToolbarController$BackgroundSpan)>(r4, r0, r1);

        virtualinvoke r3.<androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)>($r13);

        return r3;
    }

    static void logv(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ToolbarController", 2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ToolbarController", r0);

     label1:
        return;
    }

    private static void setListeners(android.widget.TextView, int, int, androidx.textclassifier.widget.IFloatingToolbar)
    {
        android.widget.TextView r0;
        int i0, i1;
        androidx.textclassifier.widget.IFloatingToolbar r1;
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener $r2;
        androidx.textclassifier.widget.ToolbarController$TextViewListener $r3;
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback $r4, $r6;
        android.view.ActionMode$Callback $r5, $r7;

        r0 := @parameter0: android.widget.TextView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.textclassifier.widget.IFloatingToolbar;

        $r2 = new androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r3 = new androidx.textclassifier.widget.ToolbarController$TextViewListener;

        specialinvoke $r3.<androidx.textclassifier.widget.ToolbarController$TextViewListener: void <init>(androidx.textclassifier.widget.IFloatingToolbar,android.widget.TextView,int,int)>(r1, r0, i0, i1);

        $r4 = new androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        $r5 = virtualinvoke r0.<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()>();

        specialinvoke $r4.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: void <init>(androidx.textclassifier.widget.IFloatingToolbar,android.view.ActionMode$Callback,boolean)>(r1, $r5, 0);

        $r6 = new androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        $r7 = virtualinvoke r0.<android.widget.TextView: android.view.ActionMode$Callback getCustomInsertionActionModeCallback()>();

        specialinvoke $r6.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: void <init>(androidx.textclassifier.widget.IFloatingToolbar,android.view.ActionMode$Callback,boolean)>(r1, $r7, 1);

        specialinvoke $r2.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: void <init>(android.widget.TextView,androidx.textclassifier.widget.ToolbarController$TextViewListener,androidx.textclassifier.widget.ToolbarController$ActionModeCallback,androidx.textclassifier.widget.ToolbarController$ActionModeCallback)>(r0, $r3, $r4, $r6);

        interfaceinvoke r1.<androidx.textclassifier.widget.IFloatingToolbar: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>($r2);

        return;
    }

    private static androidx.textclassifier.widget.IFloatingToolbar lambda$static$0(android.widget.TextView)
    {
        android.widget.TextView r0;
        androidx.textclassifier.widget.FloatingToolbar $r1;

        r0 := @parameter0: android.widget.TextView;

        $r1 = new androidx.textclassifier.widget.FloatingToolbar;

        specialinvoke $r1.<androidx.textclassifier.widget.FloatingToolbar: void <init>(android.view.View)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;
        androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory $r1;

        $r0 = new java.lang.ref.WeakReference;

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(null);

        <androidx.textclassifier.widget.ToolbarController: java.lang.ref.WeakReference sInstance> = $r0;

        $r1 = dynamicinvoke "create" <androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.textclassifier.widget.IFloatingToolbar __METHODTYPE__(android.widget.TextView), methodhandle: "REF_INVOKE_STATIC" <androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.IFloatingToolbar lambda$static$0(android.widget.TextView)>, methodtype: androidx.textclassifier.widget.IFloatingToolbar __METHODTYPE__(android.widget.TextView));

        <androidx.textclassifier.widget.ToolbarController: androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory sFloatingToolbarFactory> = $r1;

        return;
    }

androidx.textclassifier.widget.ToolbarController$1
<androidx.textclassifier.widget.ToolbarController$1: android.widget.TextView val$textView>
<androidx.textclassifier.widget.ToolbarController$1: java.lang.String val$originalText>
<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.IFloatingToolbar val$toolbar>
<androidx.textclassifier.widget.ToolbarController$1: java.lang.CharSequence val$text>
<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight>
<androidx.textclassifier.widget.ToolbarController$1: int val$start>
<androidx.textclassifier.widget.ToolbarController$1: int val$end>
    void <init>(android.widget.TextView, java.lang.String, androidx.textclassifier.widget.IFloatingToolbar, java.lang.CharSequence, androidx.textclassifier.widget.ToolbarController$BackgroundSpan, int, int)
    {
        androidx.textclassifier.widget.ToolbarController$1 r0;
        android.widget.TextView r1;
        java.lang.String r2;
        androidx.textclassifier.widget.IFloatingToolbar r3;
        java.lang.CharSequence r4;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r5;
        int i0, i1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$1;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.textclassifier.widget.IFloatingToolbar;

        r4 := @parameter3: java.lang.CharSequence;

        r5 := @parameter4: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        r0.<androidx.textclassifier.widget.ToolbarController$1: android.widget.TextView val$textView> = r1;

        r0.<androidx.textclassifier.widget.ToolbarController$1: java.lang.String val$originalText> = r2;

        r0.<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.IFloatingToolbar val$toolbar> = r3;

        r0.<androidx.textclassifier.widget.ToolbarController$1: java.lang.CharSequence val$text> = r4;

        r0.<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight> = r5;

        r0.<androidx.textclassifier.widget.ToolbarController$1: int val$start> = i0;

        r0.<androidx.textclassifier.widget.ToolbarController$1: int val$end> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.textclassifier.widget.ToolbarController$1 r0;
        android.widget.TextView $r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r5;
        java.lang.CharSequence $r4, $r7;
        androidx.textclassifier.widget.IFloatingToolbar $r6;
        int $i0, $i1;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan $r8;
        android.text.Spannable $r9;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$1;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$1: android.widget.TextView val$textView>;

        $z0 = staticinvoke <androidx.textclassifier.widget.ToolbarController: boolean canShowToolbar(android.widget.TextView,boolean)>($r1, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$1: java.lang.String val$originalText>;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$1: android.widget.TextView val$textView>;

        $r4 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label1;

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.IFloatingToolbar val$toolbar>;

        $z2 = interfaceinvoke $r6.<androidx.textclassifier.widget.IFloatingToolbar: boolean isShowing()>();

        if $z2 == 0 goto label1;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$1: java.lang.CharSequence val$text>;

        $r9 = (android.text.Spannable) $r7;

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$1: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight>;

        $i1 = r0.<androidx.textclassifier.widget.ToolbarController$1: int val$start>;

        $i0 = r0.<androidx.textclassifier.widget.ToolbarController$1: int val$end>;

        interfaceinvoke $r9.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r8, $i1, $i0, 0);

     label1:
        return;
    }

androidx.textclassifier.widget.ToolbarController$2
<androidx.textclassifier.widget.ToolbarController$2: java.util.Map val$menuActions>
<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView>
<androidx.textclassifier.widget.ToolbarController$2: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight>
    void <init>(java.util.Map, android.widget.TextView, androidx.textclassifier.widget.ToolbarController$BackgroundSpan)
    {
        androidx.textclassifier.widget.ToolbarController$2 r0;
        java.util.Map r1;
        android.widget.TextView r2;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r3;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$2;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: android.widget.TextView;

        r3 := @parameter2: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        r0.<androidx.textclassifier.widget.ToolbarController$2: java.util.Map val$menuActions> = r1;

        r0.<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView> = r2;

        r0.<androidx.textclassifier.widget.ToolbarController$2: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.textclassifier.widget.ToolbarController$2 r0;
        androidx.appcompat.view.menu.MenuBuilder r1;
        android.view.MenuItem r2;
        android.app.PendingIntent r3;
        java.lang.Throwable r4, $r7;
        java.util.Map $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$2;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        r2 := @parameter1: android.view.MenuItem;

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$2: java.util.Map val$menuActions>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (android.app.PendingIntent) $r6;

        if r3 == null goto label4;

     label1:
        virtualinvoke r3.<android.app.PendingIntent: void send()>();

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ToolbarController", "Error performing smart action", r4);

        goto label7;

     label4:
        $i0 = interfaceinvoke r2.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908321: goto label5;
            case 16908341: goto label6;
            default: goto label7;
        };

     label5:
        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$2: void copyText()>();

        goto label7;

     label6:
        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$2: void shareText()>();

     label7:
        return 1;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    public void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.textclassifier.widget.ToolbarController$2 r0;
        androidx.appcompat.view.menu.MenuBuilder r1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$2;

        r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        return;
    }

    private void copyText()
    {
        androidx.textclassifier.widget.ToolbarController$2 r0;
        android.content.ClipboardManager r1;
        java.lang.String r2, $r13, $r15;
        java.lang.Throwable r3, $r10;
        android.widget.TextView $r4, $r8;
        android.content.Context $r5;
        java.lang.Object $r6;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan $r7;
        boolean $z0;
        android.content.ClipData $r9;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$2;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView>;

        $r5 = virtualinvoke $r4.<android.widget.TextView: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/content/ClipboardManager;");

        r1 = (android.content.ClipboardManager) $r6;

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView>;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$2: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight>;

        r2 = staticinvoke <androidx.textclassifier.widget.ToolbarController: java.lang.String getHighlightedText(android.widget.TextView,androidx.textclassifier.widget.ToolbarController$BackgroundSpan)>($r8, $r7);

        if r1 == null goto label4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label4;

     label1:
        $r9 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(null, r2);

        virtualinvoke r1.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error copying text: ");

        $r13 = virtualinvoke r3.<java.lang.Throwable: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ToolbarController", $r15);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void shareText()
    {
        androidx.textclassifier.widget.ToolbarController$2 r0;
        java.lang.String r1;
        android.content.Intent r2, $r5, $r10;
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan $r3;
        android.widget.TextView $r4, $r8;
        boolean $z0;
        android.content.Context $r9;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$2;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView>;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$2: androidx.textclassifier.widget.ToolbarController$BackgroundSpan val$highlight>;

        r1 = staticinvoke <androidx.textclassifier.widget.ToolbarController: java.lang.String getHighlightedText(android.widget.TextView,androidx.textclassifier.widget.ToolbarController$BackgroundSpan)>($r4, $r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", r1);

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$2: android.widget.TextView val$textView>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: android.content.Context getContext()>();

        $r10 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r2, null);

        virtualinvoke $r9.<android.content.Context: void startActivity(android.content.Intent)>($r10);

     label1:
        return;
    }

androidx.textclassifier.widget.ToolbarController$ActionModeCallback
<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: androidx.textclassifier.widget.IFloatingToolbar mToolbar>
<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>
<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: boolean mPreferMe>
    void <init>(androidx.textclassifier.widget.IFloatingToolbar, android.view.ActionMode$Callback, boolean)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        androidx.textclassifier.widget.IFloatingToolbar r1, $r4;
        android.view.ActionMode$Callback r2;
        boolean z0;
        java.lang.Object $r3;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: androidx.textclassifier.widget.IFloatingToolbar;

        r2 := @parameter1: android.view.ActionMode$Callback;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.view.ActionMode$Callback2: void <init>()>();

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.textclassifier.widget.IFloatingToolbar) $r3;

        r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: androidx.textclassifier.widget.IFloatingToolbar mToolbar> = $r4;

        r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback> = r2;

        r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: boolean mPreferMe> = z0;

        return;
    }

    public boolean onCreateActionMode(android.view.ActionMode, android.view.Menu)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        android.view.ActionMode r1;
        android.view.Menu r2;
        int $i0;
        android.view.ActionMode$Callback $r3, $r4, $r7, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;
        androidx.textclassifier.widget.IFloatingToolbar $r10;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: android.view.ActionMode;

        r2 := @parameter1: android.view.Menu;

        $i0 = virtualinvoke r1.<android.view.ActionMode: int getType()>();

        if $i0 != 1 goto label6;

        $z1 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: boolean mPreferMe>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        if $r4 == null goto label2;

        $r11 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $z2 = interfaceinvoke $r11.<android.view.ActionMode$Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>(r1, r2);

        if $z2 == 0 goto label5;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActionModeCallback: Dismissing toolbar. hasCallback=");

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        if $r7 == null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>($r9);

        $r10 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void dismissImmediately(androidx.textclassifier.widget.IFloatingToolbar)>($r10);

        return 1;

     label5:
        return 0;

     label6:
        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $z0 = interfaceinvoke $r3.<android.view.ActionMode$Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>(r1, r2);

        return $z0;
    }

    public boolean onPrepareActionMode(android.view.ActionMode, android.view.Menu)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        android.view.ActionMode r1;
        android.view.Menu r2;
        androidx.textclassifier.widget.IFloatingToolbar $r3;
        android.view.ActionMode$Callback $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: android.view.ActionMode;

        r2 := @parameter1: android.view.Menu;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        interfaceinvoke $r3.<androidx.textclassifier.widget.IFloatingToolbar: void dismiss()>();

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $z0 = interfaceinvoke $r5.<android.view.ActionMode$Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>(r1, r2);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean onActionItemClicked(android.view.ActionMode, android.view.MenuItem)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        android.view.ActionMode r1;
        android.view.MenuItem r2;
        android.view.ActionMode$Callback $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: android.view.ActionMode;

        r2 := @parameter1: android.view.MenuItem;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $z0 = interfaceinvoke $r4.<android.view.ActionMode$Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>(r1, r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onDestroyActionMode(android.view.ActionMode)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        android.view.ActionMode r1;
        android.view.ActionMode$Callback $r2, $r3;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: android.view.ActionMode;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        interfaceinvoke $r3.<android.view.ActionMode$Callback: void onDestroyActionMode(android.view.ActionMode)>(r1);

     label1:
        return;
    }

    public void onGetContentRect(android.view.ActionMode, android.view.View, android.graphics.Rect)
    {
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r0;
        android.view.ActionMode r1;
        android.view.View r2;
        android.graphics.Rect r3;
        android.view.ActionMode$Callback $r4, $r5;
        boolean $z0;
        android.view.ActionMode$Callback2 $r6;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r1 := @parameter0: android.view.ActionMode;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $z0 = $r4 instanceof android.view.ActionMode$Callback2;

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        $r6 = (android.view.ActionMode$Callback2) $r5;

        virtualinvoke $r6.<android.view.ActionMode$Callback2: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)>(r1, r2, r3);

     label1:
        return;
    }

androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1
    void <init>()
    {
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1 r0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1;

        specialinvoke r0.<android.text.style.CharacterStyle: void <init>()>();

        return;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1 r0;
        android.text.TextPaint r1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1;

        r1 := @parameter0: android.text.TextPaint;

        return;
    }

androidx.textclassifier.widget.ToolbarController$BackgroundSpan
<androidx.textclassifier.widget.ToolbarController$BackgroundSpan: android.text.style.CharacterStyle NON_PARCELABLE_UNDERLYING>
    void <init>(int)
    {
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r0;
        int i0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        i0 := @parameter0: int;

        specialinvoke r0.<android.text.style.BackgroundColorSpan: void <init>(int)>(i0);

        return;
    }

    public android.text.style.CharacterStyle getUnderlying()
    {
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan r0;
        android.text.style.CharacterStyle $r1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$BackgroundSpan;

        $r1 = <androidx.textclassifier.widget.ToolbarController$BackgroundSpan: android.text.style.CharacterStyle NON_PARCELABLE_UNDERLYING>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1 $r0;

        $r0 = new androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1;

        specialinvoke $r0.<androidx.textclassifier.widget.ToolbarController$BackgroundSpan$1: void <init>()>();

        <androidx.textclassifier.widget.ToolbarController$BackgroundSpan: android.text.style.CharacterStyle NON_PARCELABLE_UNDERLYING> = $r0;

        return;
    }

androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory
<androidx.textclassifier.widget.ToolbarController$FloatingToolbarFactory: androidx.textclassifier.widget.IFloatingToolbar create(android.widget.TextView)>
androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener
<androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>
    void <init>(androidx.textclassifier.widget.IFloatingToolbar)
    {
        androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener r0;
        androidx.textclassifier.widget.IFloatingToolbar r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener;

        r1 := @parameter0: androidx.textclassifier.widget.IFloatingToolbar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.textclassifier.widget.IFloatingToolbar) $r2;

        r0.<androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar> = $r3;

        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem)
    {
        androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener r0;
        android.view.MenuItem r1;
        androidx.core.internal.view.SupportMenu r2;
        androidx.textclassifier.widget.IFloatingToolbar $r3;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener;

        r1 := @parameter0: android.view.MenuItem;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$OnMenuItemClickListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        r2 = interfaceinvoke $r3.<androidx.textclassifier.widget.IFloatingToolbar: androidx.core.internal.view.SupportMenu getMenu()>();

        if r2 == null goto label1;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        $z0 = interfaceinvoke r2.<android.view.Menu: boolean performIdentifierAction(int,int)>($i0, 0);

        return $z0;

     label1:
        return 0;
    }

androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener
<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>
<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>
<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>
<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mSelectionCallback>
<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mInsertionCallback>
    void <init>(android.widget.TextView, androidx.textclassifier.widget.ToolbarController$TextViewListener, androidx.textclassifier.widget.ToolbarController$ActionModeCallback, androidx.textclassifier.widget.ToolbarController$ActionModeCallback)
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        android.widget.TextView r1, $r6, $r7;
        androidx.textclassifier.widget.ToolbarController$TextViewListener r2, $r10;
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback r3, r4, $r12, $r14;
        java.lang.Object $r5, $r9, $r11, $r13;
        android.view.ViewTreeObserver $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        r3 := @parameter2: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        r4 := @parameter3: androidx.textclassifier.widget.ToolbarController$ActionModeCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = (android.widget.TextView) $r5;

        r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView> = $r6;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r8 = virtualinvoke $r7.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver> = $r8;

        $r9 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r10 = (androidx.textclassifier.widget.ToolbarController$TextViewListener) $r9;

        r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener> = $r10;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: void registerListeners()>();

        $r11 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r12 = (androidx.textclassifier.widget.ToolbarController$ActionModeCallback) $r11;

        r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mSelectionCallback> = $r12;

        $r13 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r14 = (androidx.textclassifier.widget.ToolbarController$ActionModeCallback) $r13;

        r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mInsertionCallback> = $r14;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: void setCallbacks()>();

        return;
    }

    private void registerListeners()
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        androidx.textclassifier.widget.ToolbarController$TextViewListener $r1, $r3, $r5, $r7;
        android.view.ViewTreeObserver $r2, $r4, $r6, $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void addOnWindowFocusChangeListener(android.view.ViewTreeObserver$OnWindowFocusChangeListener)>($r3);

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r6.<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>($r5);

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r8.<android.view.ViewTreeObserver: void addOnWindowAttachListener(android.view.ViewTreeObserver$OnWindowAttachListener)>($r7);

        return;
    }

    private void unregisterListeners()
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        androidx.textclassifier.widget.ToolbarController$TextViewListener $r1, $r3, $r5, $r7;
        android.view.ViewTreeObserver $r2, $r4, $r6, $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r4.<android.view.ViewTreeObserver: void removeOnWindowFocusChangeListener(android.view.ViewTreeObserver$OnWindowFocusChangeListener)>($r3);

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r6.<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>($r5);

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.view.ViewTreeObserver mObserver>;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$TextViewListener mTextViewListener>;

        virtualinvoke $r8.<android.view.ViewTreeObserver: void removeOnWindowAttachListener(android.view.ViewTreeObserver$OnWindowAttachListener)>($r7);

        return;
    }

    private void setCallbacks()
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback $r1, $r3;
        android.widget.TextView $r2, $r4;
        android.view.ActionMode$Callback r5, r6;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mSelectionCallback>;

        r5 = (android.view.ActionMode$Callback) $r1;

        virtualinvoke $r2.<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>(r5);

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mInsertionCallback>;

        r6 = (android.view.ActionMode$Callback) $r3;

        virtualinvoke $r4.<android.widget.TextView: void setCustomInsertionActionModeCallback(android.view.ActionMode$Callback)>(r6);

        return;
    }

    private void clearCallbacks()
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        android.widget.TextView $r1, $r4, $r9, $r12;
        androidx.textclassifier.widget.ToolbarController$ActionModeCallback $r2, $r5, $r7, $r10;
        android.view.ActionMode$Callback $r3, $r6, $r8, $r11;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mSelectionCallback>;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r3 = virtualinvoke $r1.<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()>();

        if $r2 != $r3 goto label1;

        $r12 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r10 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mSelectionCallback>;

        $r11 = $r10.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        virtualinvoke $r12.<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>($r11);

     label1:
        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mInsertionCallback>;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r6 = virtualinvoke $r4.<android.widget.TextView: android.view.ActionMode$Callback getCustomInsertionActionModeCallback()>();

        if $r5 != $r6 goto label2;

        $r9 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: androidx.textclassifier.widget.ToolbarController$ActionModeCallback mInsertionCallback>;

        $r8 = $r7.<androidx.textclassifier.widget.ToolbarController$ActionModeCallback: android.view.ActionMode$Callback mOriginalCallback>;

        virtualinvoke $r9.<android.widget.TextView: void setCustomInsertionActionModeCallback(android.view.ActionMode$Callback)>($r8);

     label2:
        return;
    }

    public void onDismiss()
    {
        androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener r0;
        android.widget.TextView $r1;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: android.widget.TextView mTextView>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void removeHighlight(android.widget.TextView)>($r1);

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: void unregisterListeners()>();

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$OnToolbarDismissListener: void clearCallbacks()>();

        return;
    }

androidx.textclassifier.widget.ToolbarController$TextViewListener
<androidx.textclassifier.widget.ToolbarController$TextViewListener: long THROTTLE_DELAY_MS>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.widget.TextView mTextView>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mContentRect>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mTempRect>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mStart>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mEnd>
<androidx.textclassifier.widget.ToolbarController$TextViewListener: long mLastUpdateTimeMs>
    void <init>(androidx.textclassifier.widget.IFloatingToolbar, android.widget.TextView, int, int)
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;
        androidx.textclassifier.widget.IFloatingToolbar r1, $r4;
        android.widget.TextView r2, $r6;
        int i0, i1;
        long $l2, $l3;
        java.lang.Object $r3, $r5;
        android.graphics.Rect $r7, $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        r1 := @parameter0: androidx.textclassifier.widget.IFloatingToolbar;

        r2 := @parameter1: android.widget.TextView;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - 300L;

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: long mLastUpdateTimeMs> = $l3;

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.textclassifier.widget.IFloatingToolbar) $r3;

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar> = $r4;

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (android.widget.TextView) $r5;

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.widget.TextView mTextView> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mContentRect> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mTempRect> = $r8;

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mStart> = i0;

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mEnd> = i1;

        return;
    }

    public boolean onPreDraw()
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;
        long l0, $l1, $l2;
        boolean $z0, $z1, $z2;
        androidx.textclassifier.widget.IFloatingToolbar $r1, $r9, $r10;
        byte $b3;
        int $i4, $i5;
        android.widget.TextView $r2;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $z0 = specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: boolean maybeDismissToolbar(boolean,java.lang.String)>(1, "onPreDraw");

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        $z1 = interfaceinvoke $r1.<androidx.textclassifier.widget.IFloatingToolbar: boolean isShowing()>();

        if $z1 == 0 goto label1;

        $l1 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: long mLastUpdateTimeMs>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 300L;

        if $b3 < 0 goto label1;

        $r3 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mTempRect>;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.widget.TextView mTextView>;

        $i5 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mStart>;

        $i4 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: int mEnd>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void updateRectCoordinates(android.graphics.Rect,android.widget.TextView,int,int)>($r3, $r2, $i5, $i4);

        $r5 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mTempRect>;

        $r4 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mContentRect>;

        $z2 = virtualinvoke $r5.<android.graphics.Rect: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label1;

        $r7 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mContentRect>;

        $r6 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mTempRect>;

        virtualinvoke $r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r9 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.graphics.Rect mContentRect>;

        interfaceinvoke $r9.<androidx.textclassifier.widget.IFloatingToolbar: void setContentRect(android.graphics.Rect)>($r8);

        $r10 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        interfaceinvoke $r10.<androidx.textclassifier.widget.IFloatingToolbar: void updateLayout()>();

        r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: long mLastUpdateTimeMs> = l0;

     label1:
        return 1;
    }

    public void onWindowFocusChanged(boolean)
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;
        boolean z0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: boolean maybeDismissToolbar(boolean,java.lang.String)>(z0, "onWindowFocusChanged");

        return;
    }

    public void onGlobalFocusChanged(android.view.View, android.view.View)
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;
        android.view.View r1, r2;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: boolean maybeDismissToolbar(boolean,java.lang.String)>(1, "onGlobalFocusChanged");

        return;
    }

    public void onWindowAttached()
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: boolean maybeDismissToolbar(boolean,java.lang.String)>(1, "onWindowAttached");

        return;
    }

    public void onWindowDetached()
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        specialinvoke r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: boolean maybeDismissToolbar(boolean,java.lang.String)>(1, "onWindowDetached");

        return;
    }

    private boolean maybeDismissToolbar(boolean, java.lang.String)
    {
        androidx.textclassifier.widget.ToolbarController$TextViewListener r0;
        boolean z0, $z1;
        java.lang.String r1, $r7;
        android.widget.TextView $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        androidx.textclassifier.widget.IFloatingToolbar $r8;

        r0 := @this: androidx.textclassifier.widget.ToolbarController$TextViewListener;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: android.widget.TextView mTextView>;

        $z1 = staticinvoke <androidx.textclassifier.widget.ToolbarController: boolean canShowToolbar(android.widget.TextView,boolean)>($r2, z0);

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TextViewListener.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Dismissing toolbar.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void logv(java.lang.String)>($r7);

        $r8 = r0.<androidx.textclassifier.widget.ToolbarController$TextViewListener: androidx.textclassifier.widget.IFloatingToolbar mToolbar>;

        staticinvoke <androidx.textclassifier.widget.ToolbarController: void dismissImmediately(androidx.textclassifier.widget.IFloatingToolbar)>($r8);

        return 1;
    }

