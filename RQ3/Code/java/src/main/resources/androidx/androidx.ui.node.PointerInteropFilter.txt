androidx.ui.node.PointerInteropFilter
<androidx.ui.node.PointerInteropFilter: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder view>
<androidx.ui.node.PointerInteropFilter: kotlin.Lazy reusableLocationInWindow$delegate>
<androidx.ui.node.PointerInteropFilter: androidx.ui.core.pointerinput.PointerInputFilter pointerInputFilter>
    public void <init>(androidx.ui.viewinterop.AndroidViewHolder)
    {
        androidx.ui.node.PointerInteropFilter r0;
        androidx.ui.viewinterop.AndroidViewHolder r1;
        androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2 $r2;
        kotlin.jvm.functions.Function0 $r3;
        kotlin.Lazy $r4;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $r5;
        androidx.ui.core.pointerinput.PointerInputFilter $r6;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: androidx.ui.viewinterop.AndroidViewHolder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder view> = r1;

        $r2 = new androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2;

        specialinvoke $r2.<androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2: void <init>()>();

        $r3 = (kotlin.jvm.functions.Function0) $r2;

        $r4 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r3);

        r0.<androidx.ui.node.PointerInteropFilter: kotlin.Lazy reusableLocationInWindow$delegate> = $r4;

        $r5 = new androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        specialinvoke $r5.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: void <init>(androidx.ui.node.PointerInteropFilter)>(r0);

        $r6 = (androidx.ui.core.pointerinput.PointerInputFilter) $r5;

        r0.<androidx.ui.node.PointerInteropFilter: androidx.ui.core.pointerinput.PointerInputFilter pointerInputFilter> = $r6;

        return;
    }

    public final androidx.ui.viewinterop.AndroidViewHolder getView()
    {
        androidx.ui.node.PointerInteropFilter r0;
        androidx.ui.viewinterop.AndroidViewHolder $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        $r1 = r0.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder view>;

        return $r1;
    }

    private final int[] getReusableLocationInWindow()
    {
        androidx.ui.node.PointerInteropFilter r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        int[] $r5;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 = r0.<androidx.ui.node.PointerInteropFilter: kotlin.Lazy reusableLocationInWindow$delegate>;

        $r3 = <androidx.ui.node.PointerInteropFilter: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[0];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (int[]) $r4;

        return $r5;
    }

    public androidx.ui.core.pointerinput.PointerInputFilter getPointerInputFilter()
    {
        androidx.ui.node.PointerInteropFilter r0;
        androidx.ui.core.pointerinput.PointerInputFilter $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        $r1 = r0.<androidx.ui.node.PointerInteropFilter: androidx.ui.core.pointerinput.PointerInputFilter pointerInputFilter>;

        return $r1;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.node.PointerInteropFilter r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldIn(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r0, r1, r2);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.node.PointerInteropFilter r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldOut(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r0, r1, r2);

        return $r3;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.ui.node.PointerInteropFilter r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean all(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r0, r1);

        return $z0;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.ui.node.PointerInteropFilter r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean any(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r0, r1);

        return $z0;
    }

    public androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)
    {
        androidx.ui.node.PointerInteropFilter r0;
        androidx.ui.core.Modifier r1, $r2;

        r0 := @this: androidx.ui.node.PointerInteropFilter;

        r1 := @parameter0: androidx.ui.core.Modifier;

        $r2 = staticinvoke <androidx.ui.core.Modifier$DefaultImpls: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier,androidx.ui.core.Modifier)>(r0, r1);

        return $r2;
    }

    public static final int[] access$getReusableLocationInWindow(androidx.ui.node.PointerInteropFilter)
    {
        androidx.ui.node.PointerInteropFilter $r0;
        int[] $r1;

        $r0 := @parameter0: androidx.ui.node.PointerInteropFilter;

        $r1 = specialinvoke $r0.<androidx.ui.node.PointerInteropFilter: int[] getReusableLocationInWindow()>();

        return $r1;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.PropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.PropertyReference1 $r4;
        kotlin.reflect.KProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/node/PointerInteropFilter;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "reusableLocationInWindow", "getReusableLocationInWindow()[I");

        $r4 = (kotlin.jvm.internal.PropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.node.PointerInteropFilter: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

androidx.ui.node.PointerInteropFilter$DispatchToViewState
<androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Unknown>
<androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>
<androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching>
<androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.ui.node.PointerInteropFilter$DispatchToViewState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.ui.node.PointerInteropFilter$DispatchToViewState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static final androidx.ui.node.PointerInteropFilter$DispatchToViewState[] values()
    {
        androidx.ui.node.PointerInteropFilter$DispatchToViewState[] r0, r1;
        int $i0, $i1;

        r0 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState[] $VALUES>;

        $i0 = lengthof r0;

        r1 = newarray (androidx.ui.node.PointerInteropFilter$DispatchToViewState)[$i0];

        $i1 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i1);

        return r1;
    }

    public static final androidx.ui.node.PointerInteropFilter$DispatchToViewState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "value");

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/ui/node/PointerInteropFilter$DispatchToViewState;", r0);

        $r2 = (androidx.ui.node.PointerInteropFilter$DispatchToViewState) $r1;

        return $r2;
    }

    public static final void <clinit>()
    {
        androidx.ui.node.PointerInteropFilter$DispatchToViewState[] r0;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 = new androidx.ui.node.PointerInteropFilter$DispatchToViewState;

        specialinvoke $r1.<androidx.ui.node.PointerInteropFilter$DispatchToViewState: void <init>(java.lang.String,int)>("Unknown", 0);

        <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Unknown> = $r1;

        $r2 = new androidx.ui.node.PointerInteropFilter$DispatchToViewState;

        specialinvoke $r2.<androidx.ui.node.PointerInteropFilter$DispatchToViewState: void <init>(java.lang.String,int)>("Dispatching", 1);

        <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching> = $r2;

        $r3 = new androidx.ui.node.PointerInteropFilter$DispatchToViewState;

        specialinvoke $r3.<androidx.ui.node.PointerInteropFilter$DispatchToViewState: void <init>(java.lang.String,int)>("NotDispatching", 2);

        <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching> = $r3;

        r0 = newarray (androidx.ui.node.PointerInteropFilter$DispatchToViewState)[3];

        $r4 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Unknown>;

        r0[0] = $r4;

        $r5 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>;

        r0[1] = $r5;

        $r6 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching>;

        r0[2] = $r6;

        <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState[] $VALUES> = r0;

        return;
    }

androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this>
    void <init>(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1 r0;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1;

        $r1 := @parameter0: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(boolean)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1 r0;
        boolean z0;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this>;

        staticinvoke <androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: void access$setDisallowIntercept$p(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1,boolean)>($r1, z0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;
        boolean $z0;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1: void invoke(boolean)>($z0);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2: androidx.ui.node.PointerInteropFilter $this>
    void <init>(androidx.ui.node.PointerInteropFilter)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2 r0;
        androidx.ui.node.PointerInteropFilter $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2;

        $r1 := @parameter0: androidx.ui.node.PointerInteropFilter;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2: androidx.ui.node.PointerInteropFilter $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(android.view.MotionEvent)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2 r0;
        android.view.MotionEvent r1;
        androidx.ui.node.PointerInteropFilter $r2;
        androidx.ui.viewinterop.AndroidViewHolder $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "motionEvent");

        $r2 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2: androidx.ui.node.PointerInteropFilter $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder getView()>();

        virtualinvoke $r3.<androidx.ui.viewinterop.AndroidViewHolder: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2 r0;
        java.lang.Object r1;
        android.view.MotionEvent $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.MotionEvent) r1;

        virtualinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2: void invoke(android.view.MotionEvent)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this>
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter $this$1>
    void <init>(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1, androidx.ui.node.PointerInteropFilter)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3 r0;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $r1;
        androidx.ui.node.PointerInteropFilter $r2;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3;

        $r1 := @parameter0: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        $r2 := @parameter1: androidx.ui.node.PointerInteropFilter;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this> = $r1;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter $this$1> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(android.view.MotionEvent)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3 r0;
        android.view.MotionEvent r1;
        androidx.ui.node.PointerInteropFilter $r2;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $r3;
        androidx.ui.viewinterop.AndroidViewHolder $r4;
        boolean $z0;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r5;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "motionEvent");

        $r3 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 $this>;

        $r2 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: androidx.ui.node.PointerInteropFilter $this$1>;

        $r4 = virtualinvoke $r2.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder getView()>();

        $z0 = virtualinvoke $r4.<androidx.ui.viewinterop.AndroidViewHolder: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        $r5 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>;

        goto label2;

     label1:
        $r5 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching>;

     label2:
        staticinvoke <androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: void access$setState$p(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1,androidx.ui.node.PointerInteropFilter$DispatchToViewState)>($r3, $r5);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3 r0;
        java.lang.Object r1;
        android.view.MotionEvent $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.MotionEvent) r1;

        virtualinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: void invoke(android.view.MotionEvent)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1: androidx.ui.node.PointerInteropFilter $this>
    void <init>(androidx.ui.node.PointerInteropFilter)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1 r0;
        androidx.ui.node.PointerInteropFilter $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1;

        $r1 := @parameter0: androidx.ui.node.PointerInteropFilter;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1: androidx.ui.node.PointerInteropFilter $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(android.view.MotionEvent)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1 r0;
        android.view.MotionEvent r1;
        androidx.ui.node.PointerInteropFilter $r2;
        androidx.ui.viewinterop.AndroidViewHolder $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "motionEvent");

        $r2 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1: androidx.ui.node.PointerInteropFilter $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder getView()>();

        virtualinvoke $r3.<androidx.ui.viewinterop.AndroidViewHolder: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1 r0;
        java.lang.Object r1;
        android.view.MotionEvent $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.MotionEvent) r1;

        virtualinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1: void invoke(android.view.MotionEvent)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.node.PointerInteropFilter$pointerInputFilter$1
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state>
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: boolean disallowIntercept>
<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>
    void <init>(androidx.ui.node.PointerInteropFilter)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        androidx.ui.node.PointerInteropFilter $r1, $r2;
        androidx.ui.viewinterop.AndroidViewHolder $r3;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r6;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        $r1 := @parameter0: androidx.ui.node.PointerInteropFilter;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this> = $r1;

        specialinvoke r0.<androidx.ui.core.pointerinput.PointerInputFilter: void <init>()>();

        $r2 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder getView()>();

        $r4 = new androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1;

        specialinvoke $r4.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$1: void <init>(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1)>(r0);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        virtualinvoke $r3.<androidx.ui.viewinterop.AndroidViewHolder: void setOnRequestDisallowInterceptTouchEvent(kotlin.jvm.functions.Function1)>($r5);

        $r6 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Unknown>;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state> = $r6;

        return;
    }

    public java.util.List onPointerInput(java.util.List, androidx.ui.core.PointerEventPass, androidx.ui.unit.IntSize)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        java.util.List r1, r12, $r13;
        androidx.ui.core.PointerEventPass r2, $r10, $r14, $r15;
        androidx.ui.unit.IntSize r3;
        boolean z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z12, $z13, $z14, $z15, $z16, $z18, $z19;
        int i0, $i1, i2, $i3;
        java.lang.Object r4, r5, $r18;
        androidx.ui.core.PointerInputChange r6, r19;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r7, $r8;
        java.util.Collection $r9, $r11;
        java.lang.Iterable $r16;
        java.util.Iterator $r17;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.ui.core.PointerEventPass;

        r3 := @parameter2: androidx.ui.unit.IntSize;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "changes");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "bounds");

        r12 = r1;

        $z3 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: boolean disallowIntercept>;

        if $z3 != 0 goto label08;

        $r13 = r12;

        i2 = 0;

        $r11 = (java.util.Collection) r12;

        $i1 = interfaceinvoke $r11.<java.util.Collection: int size()>();

        $i3 = $i1 + -1;

        if i2 > $i3 goto label06;

     label01:
        i0 = i2;

        i2 = i2 + 1;

        r4 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = r4;

        r6 = (androidx.ui.core.PointerInputChange) r5;

        $z8 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToDownIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r6);

        if $z8 != 0 goto label02;

        $z9 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r6);

        if $z9 == 0 goto label03;

     label02:
        $z12 = 1;

        goto label04;

     label03:
        $z12 = 0;

     label04:
        if $z12 == 0 goto label05;

        $z13 = 1;

        goto label07;

     label05:
        if i2 <= $i3 goto label01;

     label06:
        $z13 = 0;

     label07:
        if $z13 == 0 goto label09;

     label08:
        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        z0 = $z14;

        $r8 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state>;

        $r7 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching>;

        if $r8 == $r7 goto label12;

        $r10 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass InitialDown>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r10);

        if $z7 == 0 goto label11;

        if z0 == 0 goto label11;

        r12 = specialinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: java.util.List dispatchToView(java.util.List)>(r12);

     label11:
        $r14 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z15 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r14);

        if $z15 == 0 goto label12;

        if z0 != 0 goto label12;

        r12 = specialinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: java.util.List dispatchToView(java.util.List)>(r12);

     label12:
        $r15 = <androidx.ui.core.PointerEventPass: androidx.ui.core.PointerEventPass PostDown>;

        $z16 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r15);

        if $z16 == 0 goto label17;

        $r16 = (java.lang.Iterable) r12;

        $z4 = $r16 instanceof java.util.Collection;

        if $z4 == 0 goto label13;

        $r9 = (java.util.Collection) $r16;

        $z6 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z6 == 0 goto label13;

        $z18 = 1;

        goto label16;

     label13:
        $r17 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z19 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label15;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.ui.core.PointerInputChange) $r18;

        $z5 = staticinvoke <androidx.ui.core.PointerInputKt: boolean changedToUpIgnoreConsumed(androidx.ui.core.PointerInputChange)>(r19);

        if $z5 != 0 goto label14;

        $z18 = 0;

        goto label16;

     label15:
        $z18 = 1;

     label16:
        if $z18 == 0 goto label17;

        specialinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: void reset()>();

     label17:
        return r12;
    }

    public void onCancel()
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r1, $r2;
        long $l0;
        androidx.ui.unit.Duration $r3;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1 $r4;
        androidx.ui.node.PointerInteropFilter $r5;
        kotlin.jvm.functions.Function1 $r6;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        $r2 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state>;

        $r1 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>;

        if $r2 != $r1 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <androidx.ui.unit.Durations: androidx.ui.unit.Duration getMilliseconds(long)>($l0);

        $r4 = new androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1;

        $r5 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        specialinvoke $r4.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$onCancel$1: void <init>(androidx.ui.node.PointerInteropFilter)>($r5);

        $r6 = (kotlin.jvm.functions.Function1) $r4;

        staticinvoke <androidx.ui.node.PointerInteropUtilsKt: void emptyCancelMotionEventScope(androidx.ui.unit.Duration,kotlin.jvm.functions.Function1)>($r3, $r6);

        specialinvoke r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: void reset()>();

     label1:
        return;
    }

    private final void reset()
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        $r1 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Unknown>;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state> = $r1;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: boolean disallowIntercept> = 0;

        return;
    }

    private final java.util.List dispatchToView(java.util.List)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        java.util.List r1, r21, $r25;
        androidx.ui.unit.IntOffset r2, $r7;
        long l0, $l1, $l2, $l3, $l4, l9;
        java.util.Collection r3, $r8, $r29;
        androidx.ui.core.PointerInputChange r4, r27, r32;
        androidx.ui.node.PointerInteropFilter $r5, $r10, $r19, $r23;
        androidx.ui.viewinterop.AndroidViewHolder $r6;
        int $i5, $i6, i7, i8, $i10, $i11, i12;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3 $r9;
        kotlin.jvm.functions.Function1 $r11, $r20;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState $r12, $r13, $r15, $r16, $r17;
        java.util.ArrayList $r14;
        boolean $z1, $z3, $z12;
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2 $r18;
        int[] $r22;
        java.lang.Object r26, r31;
        java.lang.Iterable $r28;
        java.util.Iterator $r30;

        r0 := @this: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        r1 := @parameter0: java.util.List;

        r21 = r1;

        $r5 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        $r22 = staticinvoke <androidx.ui.node.PointerInteropFilter: int[] access$getReusableLocationInWindow(androidx.ui.node.PointerInteropFilter)>($r5);

        $r23 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        $r6 = virtualinvoke $r23.<androidx.ui.node.PointerInteropFilter: androidx.ui.viewinterop.AndroidViewHolder getView()>();

        virtualinvoke $r6.<androidx.ui.viewinterop.AndroidViewHolder: void getLocationInWindow(int[])>($r22);

        i7 = $r22[0];

        i8 = $r22[1];

        $l1 = (long) i7;

        $l4 = $l1 << 32;

        $l2 = (long) i8;

        $l3 = $l2 & 4294967295L;

        l9 = $l4 | $l3;

        l0 = l9;

        $r7 = new androidx.ui.unit.IntOffset;

        specialinvoke $r7.<androidx.ui.unit.IntOffset: void <init>(long)>(l0);

        r2 = $r7;

        $r25 = r21;

        $i10 = 0;

        $r8 = (java.util.Collection) r21;

        $i5 = interfaceinvoke $r8.<java.util.Collection: int size()>();

        $i11 = $i5 + -1;

        if 0 > $i11 goto label3;

     label1:
        i12 = $i10;

        $i10 = $i10 + 1;

        r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i12);

        r27 = (androidx.ui.core.PointerInputChange) r26;

        $z3 = staticinvoke <androidx.ui.core.PointerInputKt: boolean anyChangeConsumed(androidx.ui.core.PointerInputChange)>(r27);

        if $z3 == 0 goto label2;

        $z12 = 1;

        goto label4;

     label2:
        if $i10 <= $i11 goto label1;

     label3:
        $z12 = 0;

     label4:
        if $z12 == 0 goto label6;

        $r16 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state>;

        $r15 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>;

        if $r16 != $r15 goto label5;

        $r18 = new androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2;

        $r19 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        specialinvoke $r18.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$2: void <init>(androidx.ui.node.PointerInteropFilter)>($r19);

        $r20 = (kotlin.jvm.functions.Function1) $r18;

        staticinvoke <androidx.ui.node.PointerInteropUtilsKt: void toCancelMotionEventScope(java.util.List,androidx.ui.unit.IntOffset,kotlin.jvm.functions.Function1)>(r21, r2, $r20);

     label5:
        $r17 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState NotDispatching>;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state> = $r17;

        goto label9;

     label6:
        $r9 = new androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3;

        $r10 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter $this>;

        specialinvoke $r9.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1$dispatchToView$3: void <init>(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1,androidx.ui.node.PointerInteropFilter)>(r0, $r10);

        $r11 = (kotlin.jvm.functions.Function1) $r9;

        staticinvoke <androidx.ui.node.PointerInteropUtilsKt: void toMotionEventScope(java.util.List,androidx.ui.unit.IntOffset,kotlin.jvm.functions.Function1)>(r21, r2, $r11);

        $r13 = r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state>;

        $r12 = <androidx.ui.node.PointerInteropFilter$DispatchToViewState: androidx.ui.node.PointerInteropFilter$DispatchToViewState Dispatching>;

        if $r13 != $r12 goto label9;

        $r28 = (java.lang.Iterable) r21;

        $r14 = new java.util.ArrayList;

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r28, 10);

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i6);

        $r29 = (java.util.Collection) $r14;

        $r30 = interfaceinvoke $r28.<java.lang.Iterable: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r32 = (androidx.ui.core.PointerInputChange) r31;

        r3 = $r29;

        r4 = staticinvoke <androidx.ui.core.PointerInputKt: androidx.ui.core.PointerInputChange consumeAllChanges(androidx.ui.core.PointerInputChange)>(r32);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        goto label7;

     label8:
        r21 = (java.util.List) $r29;

     label9:
        return r21;
    }

    public static final void access$setDisallowIntercept$p(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1, boolean)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        boolean z0;

        r0 := @parameter0: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        z0 := @parameter1: boolean;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: boolean disallowIntercept> = z0;

        return;
    }

    public static final void access$setState$p(androidx.ui.node.PointerInteropFilter$pointerInputFilter$1, androidx.ui.node.PointerInteropFilter$DispatchToViewState)
    {
        androidx.ui.node.PointerInteropFilter$pointerInputFilter$1 r0;
        androidx.ui.node.PointerInteropFilter$DispatchToViewState r1;

        r0 := @parameter0: androidx.ui.node.PointerInteropFilter$pointerInputFilter$1;

        r1 := @parameter1: androidx.ui.node.PointerInteropFilter$DispatchToViewState;

        r0.<androidx.ui.node.PointerInteropFilter$pointerInputFilter$1: androidx.ui.node.PointerInteropFilter$DispatchToViewState state> = r1;

        return;
    }

androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2
    void <init>()
    {
        androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2 r0;

        r0 := @this: androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final int[] invoke()
    {
        androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2 r0;
        int[] $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2;

        $r1 = newarray (int)[2];

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2 r0;
        int[] $r1;

        r0 := @this: androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2;

        $r1 = virtualinvoke r0.<androidx.ui.node.PointerInteropFilter$reusableLocationInWindow$2: int[] invoke()>();

        return $r1;
    }

