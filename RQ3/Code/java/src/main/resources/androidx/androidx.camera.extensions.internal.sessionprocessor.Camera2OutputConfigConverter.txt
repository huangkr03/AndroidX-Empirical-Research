androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfigConverter
    private void <init>()
    {
        androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfigConverter r0;

        r0 := @this: androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfigConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfig fromImpl(androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl)
    {
        androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl r0, r2;
        java.util.ArrayList r1, $r4;
        androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfig r3;
        java.util.List $r5, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Class $r9;
        java.lang.String $r11, $r12, $r14, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.camera.extensions.internal.sessionprocessor.MultiResolutionImageReaderOutputConfig $r13;
        android.util.Size $r15;
        androidx.camera.extensions.internal.sessionprocessor.ImageReaderOutputConfig $r16;
        android.view.Surface $r18;
        androidx.camera.extensions.internal.sessionprocessor.SurfaceOutputConfig $r19;
        java.lang.Object $r21;
        java.util.Iterator r22;
        androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl r23;
        androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl r24;
        androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl r25;

        r0 := @parameter0: androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = interfaceinvoke r0.<androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl: java.util.List getSurfaceSharingOutputConfigs()>();

        if $r5 == null goto label2;

        $r20 = interfaceinvoke r0.<androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl: java.util.List getSurfaceSharingOutputConfigs()>();

        r22 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r21 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl) $r21;

        r3 = staticinvoke <androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfigConverter: androidx.camera.extensions.internal.sessionprocessor.Camera2OutputConfig fromImpl(androidx.camera.extensions.impl.advanced.Camera2OutputConfigImpl)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        $z0 = r0 instanceof androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl;

        if $z0 == 0 goto label3;

        r23 = (androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl) r0;

        $i8 = interfaceinvoke r23.<androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl: int getId()>();

        $i9 = interfaceinvoke r23.<androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl: int getSurfaceGroupId()>();

        $r17 = interfaceinvoke r23.<androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl: java.lang.String getPhysicalCameraId()>();

        $r18 = interfaceinvoke r23.<androidx.camera.extensions.impl.advanced.SurfaceOutputConfigImpl: android.view.Surface getSurface()>();

        $r19 = staticinvoke <androidx.camera.extensions.internal.sessionprocessor.SurfaceOutputConfig: androidx.camera.extensions.internal.sessionprocessor.SurfaceOutputConfig create(int,int,java.lang.String,java.util.List,android.view.Surface)>($i8, $i9, $r17, r1, $r18);

        return $r19;

     label3:
        $z1 = r0 instanceof androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl;

        if $z1 == 0 goto label4;

        r24 = (androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl) r0;

        $i4 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: int getId()>();

        $i5 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: int getSurfaceGroupId()>();

        $r14 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: java.lang.String getPhysicalCameraId()>();

        $r15 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: android.util.Size getSize()>();

        $i6 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: int getImageFormat()>();

        $i7 = interfaceinvoke r24.<androidx.camera.extensions.impl.advanced.ImageReaderOutputConfigImpl: int getMaxImages()>();

        $r16 = staticinvoke <androidx.camera.extensions.internal.sessionprocessor.ImageReaderOutputConfig: androidx.camera.extensions.internal.sessionprocessor.ImageReaderOutputConfig create(int,int,java.lang.String,java.util.List,android.util.Size,int,int)>($i4, $i5, $r14, r1, $r15, $i6, $i7);

        return $r16;

     label4:
        $z2 = r0 instanceof androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl;

        if $z2 == 0 goto label5;

        r25 = (androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl) r0;

        $i0 = interfaceinvoke r25.<androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl: int getId()>();

        $i1 = interfaceinvoke r25.<androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl: int getSurfaceGroupId()>();

        $r12 = interfaceinvoke r25.<androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl: java.lang.String getPhysicalCameraId()>();

        $i2 = interfaceinvoke r25.<androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl: int getImageFormat()>();

        $i3 = interfaceinvoke r25.<androidx.camera.extensions.impl.advanced.MultiResolutionImageReaderOutputConfigImpl: int getMaxImages()>();

        $r13 = staticinvoke <androidx.camera.extensions.internal.sessionprocessor.MultiResolutionImageReaderOutputConfig: androidx.camera.extensions.internal.sessionprocessor.MultiResolutionImageReaderOutputConfig create(int,int,java.lang.String,java.util.List,int,int)>($i0, $i1, $r12, r1, $i2, $i3);

        return $r13;

     label5:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not supported Camera2OutputConfigImpl: ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;
    }

