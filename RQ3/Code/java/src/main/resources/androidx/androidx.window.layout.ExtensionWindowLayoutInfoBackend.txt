androidx.window.layout.ExtensionWindowLayoutInfoBackend
<androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity>
    public void <init>(androidx.window.extensions.layout.WindowLayoutComponent)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend r0;
        androidx.window.extensions.layout.WindowLayoutComponent r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.LinkedHashMap $r3, $r5;
        java.util.Map $r4, $r6;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend;

        r1 := @parameter0: androidx.window.extensions.layout.WindowLayoutComponent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "component");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component> = r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = (java.util.Map) $r5;

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity> = $r6;

        return;
    }

    public void registerLayoutChangeCallback(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend r0, $r5;
        android.app.Activity r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;
        java.util.concurrent.locks.Lock r4;
        kotlin.Unit r6, $r21, $r24;
        java.util.concurrent.locks.ReentrantLock $r7;
        java.util.Map $r8, $r11, $r14, $r16;
        java.lang.Object $r9;
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer $r10, $r13, r22;
        java.util.function.Consumer $r18;
        androidx.window.extensions.layout.WindowLayoutComponent $r19;
        java.lang.Throwable $r20;
        boolean z2;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r7 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock>;

        r4 = (java.util.concurrent.locks.Lock) $r7;

        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r8 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer) $r9;

        if $r10 != null goto label2;

        $r21 = null;

        goto label3;

     label2:
        r22 = $r10;

        virtualinvoke r22.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)>(r3);

        $r11 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

        $r21 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        r6 = $r21;

        if r6 != null goto label4;

        $r5 = (androidx.window.layout.ExtensionWindowLayoutInfoBackend) r0;

        z2 = 0;

        $r13 = new androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        specialinvoke $r13.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void <init>(android.app.Activity)>(r1);

        $r14 = $r5.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        $r16 = $r5.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

        virtualinvoke $r13.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)>(r3);

        $r19 = $r5.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component>;

        $r18 = (java.util.function.Consumer) $r13;

        interfaceinvoke $r19.<androidx.window.extensions.layout.WindowLayoutComponent: void addWindowLayoutInfoListener(android.app.Activity,java.util.function.Consumer)>(r1, $r18);

        goto label4;

     label4:
        $r24 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label5:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label8;

     label6:
        $r20 := @caughtexception;

     label7:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r20;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.locks.Lock r2;
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r3, $r11;
        android.app.Activity r4, $r8;
        java.util.concurrent.locks.ReentrantLock $r5;
        java.util.Map $r6, $r9;
        java.lang.Object $r7, $r10;
        boolean $z0;
        java.util.function.Consumer $r12;
        androidx.window.extensions.layout.WindowLayoutComponent $r13;
        java.lang.Throwable $r14;
        kotlin.Unit $r15;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r5 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock>;

        r2 = (java.util.concurrent.locks.Lock) $r5;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $r6 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (android.app.Activity) $r7;

        if $r8 != null goto label03;

     label02:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label03:
        r4 = $r8;

        $r9 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r11 = (androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer) $r10;

        if $r11 != null goto label05;

     label04:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label05:
        r3 = $r11;

        virtualinvoke r3.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)>(r1);

        $z0 = virtualinvoke r3.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        $r13 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component>;

        $r12 = (java.util.function.Consumer) r3;

        interfaceinvoke $r13.<androidx.window.extensions.layout.WindowLayoutComponent: void removeWindowLayoutInfoListener(java.util.function.Consumer)>($r12);

     label06:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label07:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r14 := @caughtexception;

     label09:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r14;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue>
<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners>
    public void <init>(android.app.Activity)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        android.app.Activity r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.LinkedHashSet $r3;
        java.util.Set $r4;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity> = r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        $r4 = (java.util.Set) $r3;

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners> = $r4;

        return;
    }

    public void accept(androidx.window.extensions.layout.WindowLayoutInfo)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        androidx.window.extensions.layout.WindowLayoutInfo r1;
        java.util.concurrent.locks.Lock r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        androidx.core.util.Consumer r6;
        java.util.concurrent.locks.ReentrantLock $r7;
        android.app.Activity $r8;
        androidx.window.layout.ExtensionsWindowLayoutInfoAdapter $r9;
        androidx.window.layout.WindowLayoutInfo $r10, $r12;
        java.util.Set $r11;
        boolean $z2;
        java.lang.Throwable $r13;
        kotlin.Unit $r14;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        r1 := @parameter0: androidx.window.extensions.layout.WindowLayoutInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r7 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock>;

        r2 = (java.util.concurrent.locks.Lock) $r7;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r9 = <androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE>;

        $r8 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity>;

        $r10 = virtualinvoke $r9.<androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)>($r8, r1);

        r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue> = $r10;

        $r11 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners>;

        $r3 = (java.lang.Iterable) $r11;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.core.util.Consumer) r5;

        $r12 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue>;

        interfaceinvoke r6.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r12);

        goto label2;

     label3:
        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r13 := @caughtexception;

     label6:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r13;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void addListener(androidx.core.util.Consumer)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.locks.Lock r2;
        androidx.window.layout.WindowLayoutInfo r3, $r5;
        java.util.concurrent.locks.ReentrantLock $r4;
        java.util.Set $r6;
        java.lang.Throwable $r7;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r4 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock>;

        r2 = (java.util.concurrent.locks.Lock) $r4;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue>;

        if $r5 != null goto label2;

        goto label3;

     label2:
        r3 = $r5;

        interfaceinvoke r1.<androidx.core.util.Consumer: void accept(java.lang.Object)>(r3);

     label3:
        $r6 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

     label6:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void removeListener(androidx.core.util.Consumer)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        androidx.core.util.Consumer r1;
        java.util.concurrent.locks.Lock r2;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.Set $r4;
        java.lang.Throwable $r5;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r3 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock>;

        r2 = (java.util.concurrent.locks.Lock) $r3;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r1);

     label2:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final boolean isEmpty()
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        $r1 = r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }

    public volatile void accept(java.lang.Object)
    {
        androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer r0;
        java.lang.Object r1;
        androidx.window.extensions.layout.WindowLayoutInfo $r2;

        r0 := @this: androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.window.extensions.layout.WindowLayoutInfo) r1;

        virtualinvoke r0.<androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)>($r2);

        return;
    }

