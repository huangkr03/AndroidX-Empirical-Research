androidx.fragment.app.FragmentFactory
<androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap>
    public void <init>()
    {
        androidx.fragment.app.FragmentFactory r0;

        r0 := @this: androidx.fragment.app.FragmentFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Class loadClass(java.lang.ClassLoader, java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.ClassLoader r0;
        java.lang.String r1;
        androidx.collection.SimpleArrayMap $r2, $r6, $r7, r9;
        java.lang.Object $r3, $r4;
        java.lang.Class r10;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap>;

        $r3 = virtualinvoke $r2.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r0);

        r9 = (androidx.collection.SimpleArrayMap) $r3;

        if r9 != null goto label1;

        $r6 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r6.<androidx.collection.SimpleArrayMap: void <init>()>();

        r9 = $r6;

        $r7 = <androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap>;

        virtualinvoke $r7.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r9);

     label1:
        $r4 = virtualinvoke r9.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (java.lang.Class) $r4;

        if r10 != null goto label2;

        r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r1, 0, r0);

        virtualinvoke r9.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label2:
        return r10;
    }

    static boolean isFragmentClass(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.ClassLoader r0;
        java.lang.String r1;
        java.lang.Class $r2, r4;
        boolean $z0;
        java.lang.Throwable $r3, r5;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        r4 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>(r0, r1);

        $r2 = class "Landroidx/fragment/app/Fragment;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

        return 0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.Class loadFragmentClass(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, $r8, $r15;
        java.lang.Throwable $r2, $r9, r17, r18, r23, r24;
        java.lang.StringBuilder $r5, $r6, $r7, $r12, $r13, $r14, r19, r21;
        java.lang.Class r16;
        androidx.fragment.app.Fragment$InstantiationException r20, r22;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        r16 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>(r0, r1);

     label2:
        return r16;

     label3:
        $r9 := @caughtexception;

        r17 = $r9;

        r20 = new androidx.fragment.app.Fragment$InstantiationException;

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r15, r17);

        r23 = (java.lang.Throwable) r20;

        throw r23;

     label4:
        $r2 := @caughtexception;

        r18 = $r2;

        r22 = new androidx.fragment.app.Fragment$InstantiationException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class is a valid subclass of Fragment");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r8, r18);

        r24 = (java.lang.Throwable) r22;

        throw r24;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader, java.lang.String)
    {
        androidx.fragment.app.FragmentFactory r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, $r14, $r21, $r28, $r35;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        androidx.fragment.app.Fragment $r7;
        java.lang.Throwable $r8, $r15, $r22, $r29, r37, r38, r39, r40, r49, r50, r51, r52;
        java.lang.StringBuilder $r11, $r12, $r13, $r18, $r19, $r20, $r25, $r26, $r27, $r32, $r33, $r34, r41, r43, r45, r47;
        java.lang.Class r36;
        androidx.fragment.app.Fragment$InstantiationException r42, r44, r46, r48;

        r0 := @this: androidx.fragment.app.FragmentFactory;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

     label1:
        r36 = staticinvoke <androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)>(r1, r2);

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke r36.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        $r7 = (androidx.fragment.app.Fragment) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r37 = $r8;

        r42 = new androidx.fragment.app.Fragment$InstantiationException;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists, is public, and has an empty constructor that is public");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r14, r37);

        r49 = (java.lang.Throwable) r42;

        throw r49;

     label4:
        $r22 := @caughtexception;

        r38 = $r22;

        r44 = new androidx.fragment.app.Fragment$InstantiationException;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": make sure class name exists, is public, and has an empty constructor that is public");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r44.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r28, r38);

        r50 = (java.lang.Throwable) r44;

        throw r50;

     label5:
        $r29 := @caughtexception;

        r39 = $r29;

        r46 = new androidx.fragment.app.Fragment$InstantiationException;

        r45 = new java.lang.StringBuilder;

        specialinvoke r45.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": could not find Fragment constructor");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r46.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r35, r39);

        r51 = (java.lang.Throwable) r46;

        throw r51;

     label6:
        $r15 := @caughtexception;

        r40 = $r15;

        r48 = new androidx.fragment.app.Fragment$InstantiationException;

        r47 = new java.lang.StringBuilder;

        specialinvoke r47.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate fragment ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": calling Fragment constructor caused an exception");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r48.<androidx.fragment.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>($r21, r40);

        r52 = (java.lang.Throwable) r48;

        throw r52;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label6;
    }

    static void <clinit>()
    {
        androidx.collection.SimpleArrayMap $r0;

        $r0 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap> = $r0;

        return;
    }

