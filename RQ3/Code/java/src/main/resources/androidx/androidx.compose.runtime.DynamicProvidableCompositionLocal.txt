androidx.compose.runtime.DynamicProvidableCompositionLocal
<androidx.compose.runtime.DynamicProvidableCompositionLocal: androidx.compose.runtime.SnapshotMutationPolicy policy>
    public void <init>(androidx.compose.runtime.SnapshotMutationPolicy, kotlin.jvm.functions.Function0)
    {
        androidx.compose.runtime.DynamicProvidableCompositionLocal r0;
        androidx.compose.runtime.SnapshotMutationPolicy r1;
        kotlin.jvm.functions.Function0 r2;

        r0 := @this: androidx.compose.runtime.DynamicProvidableCompositionLocal;

        r1 := @parameter0: androidx.compose.runtime.SnapshotMutationPolicy;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "policy");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "defaultFactory");

        specialinvoke r0.<androidx.compose.runtime.ProvidableCompositionLocal: void <init>(kotlin.jvm.functions.Function0)>(r2);

        r0.<androidx.compose.runtime.DynamicProvidableCompositionLocal: androidx.compose.runtime.SnapshotMutationPolicy policy> = r1;

        return;
    }

    public androidx.compose.runtime.State provided$runtime_release(java.lang.Object, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.DynamicProvidableCompositionLocal r0;
        java.lang.Object r1, r4, r6, $r8, $r13;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        androidx.compose.runtime.MutableState r3, r5, $r11;
        boolean z0, $z4, $z5;
        androidx.compose.runtime.Composer$Companion $r7;
        androidx.compose.runtime.State $r9;
        androidx.compose.runtime.SnapshotMutationPolicy $r10;

        r0 := @this: androidx.compose.runtime.DynamicProvidableCompositionLocal;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-84026900);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(provided)*125@5325L42:CompositionLocal.kt#9igjgp");

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-84026900, $i0, -1, "androidx.compose.runtime.DynamicProvidableCompositionLocal.provided (CompositionLocal.kt:125)");

     label1:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember):Composables.kt#9igjgp");

        z0 = 0;

        r4 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r7 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r8 goto label2;

        $r10 = staticinvoke <androidx.compose.runtime.DynamicProvidableCompositionLocal: androidx.compose.runtime.SnapshotMutationPolicy access$getPolicy$p(androidx.compose.runtime.DynamicProvidableCompositionLocal)>(r0);

        r5 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>(r1, $r10);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r5);

        $r13 = r5;

        goto label3;

     label2:
        $r13 = r4;

     label3:
        r6 = $r13;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r11 = (androidx.compose.runtime.MutableState) r6;

        interfaceinvoke $r11.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        r3 = (androidx.compose.runtime.MutableState) r6;

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r9 = (androidx.compose.runtime.State) r3;

        return $r9;
    }

    public static final androidx.compose.runtime.SnapshotMutationPolicy access$getPolicy$p(androidx.compose.runtime.DynamicProvidableCompositionLocal)
    {
        androidx.compose.runtime.DynamicProvidableCompositionLocal $r0;
        androidx.compose.runtime.SnapshotMutationPolicy $r1;

        $r0 := @parameter0: androidx.compose.runtime.DynamicProvidableCompositionLocal;

        $r1 = $r0.<androidx.compose.runtime.DynamicProvidableCompositionLocal: androidx.compose.runtime.SnapshotMutationPolicy policy>;

        return $r1;
    }

