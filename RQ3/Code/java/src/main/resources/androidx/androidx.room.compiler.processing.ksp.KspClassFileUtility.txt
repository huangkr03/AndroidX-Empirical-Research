androidx.room.compiler.processing.ksp.KspClassFileUtility
<androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility INSTANCE>
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List orderFields(com.google.devtools.ksp.symbol.KSClassDeclaration, java.util.List)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration r1;
        java.util.List r2, $r16, $r17;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r3;
        java.lang.Iterable $r4, $r14;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.room.compiler.processing.ksp.KspFieldElement r7;
        boolean $z2, $z3;
        com.google.devtools.ksp.symbol.Origin $r8, $r9;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 $r10;
        kotlin.jvm.functions.Function1 $r11;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r12;
        java.util.Comparator $r13;
        java.lang.String $r15;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "fields");

        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        return r2;

     label1:
        $r8 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.Origin getOrigin()>();

        $r9 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN>;

        if $r8 != $r9 goto label2;

        $r16 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: java.util.List orderKotlinSourceFields(com.google.devtools.ksp.symbol.KSClassDeclaration,java.util.List)>(r1, r2);

        return $r16;

     label2:
        $r12 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type FIELD>;

        $r10 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 INSTANCE>;

        $r11 = (kotlin.jvm.functions.Function1) $r10;

        r3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator getNamesComparator(com.google.devtools.ksp.symbol.KSClassDeclaration,androidx.room.compiler.processing.ksp.KspClassFileUtility$Type,kotlin.jvm.functions.Function1)>(r1, $r12, $r11);

        if r3 != null goto label3;

        $r17 = r2;

        goto label6;

     label3:
        $r4 = (java.lang.Iterable) r2;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.ksp.KspFieldElement) r6;

        $r15 = virtualinvoke r7.<androidx.room.compiler.processing.ksp.KspFieldElement: java.lang.String getName()>();

        virtualinvoke r3.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: void register(java.lang.String)>($r15);

        goto label4;

     label5:
        $r14 = (java.lang.Iterable) r2;

        $r13 = (java.util.Comparator) r3;

        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r14, $r13);

     label6:
        return $r17;
    }

    private final java.util.List orderKotlinSourceFields(com.google.devtools.ksp.symbol.KSClassDeclaration, java.util.List)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration r1;
        java.util.List r2, $r8;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r3, $r5;
        java.lang.Iterable $r4;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1 $r6;
        java.util.Comparator $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        r2 := @parameter1: java.util.List;

        $r5 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSFunctionDeclaration getPrimaryConstructor()>();

        if $r5 != null goto label1;

        return r2;

     label1:
        r3 = $r5;

        $r4 = (java.lang.Iterable) r2;

        $r6 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1: void <init>(com.google.devtools.ksp.symbol.KSFunctionDeclaration)>(r3);

        $r7 = (java.util.Comparator) $r6;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r4, $r7);

        return $r8;
    }

    private final boolean isDeclaredInside(com.google.devtools.ksp.symbol.KSPropertyDeclaration, com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r2;
        boolean $z0;
        com.google.devtools.ksp.symbol.KSNode r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        $r1 := @parameter0: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r3 = (com.google.devtools.ksp.symbol.KSNode) $r1;

     label1:
        if r3 == null goto label3;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r3 = interfaceinvoke r3.<com.google.devtools.ksp.symbol.KSNode: com.google.devtools.ksp.symbol.KSNode getParent()>();

        goto label1;

     label3:
        return 0;
    }

    public final java.util.List orderMethods(com.google.devtools.ksp.symbol.KSClassDeclaration, java.util.List)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration r1;
        java.util.List r2, $r14;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r3;
        java.lang.Iterable $r4, $r12;
        java.util.Iterator r5;
        java.lang.Object r6;
        androidx.room.compiler.processing.ksp.KspMethodElement r7;
        boolean $z2, $z3;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r10;
        java.util.Comparator $r11;
        java.lang.String $r13;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        r2 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "methods");

        $z2 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        return r2;

     label1:
        $r10 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type METHOD>;

        $r8 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 INSTANCE>;

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        r3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator getNamesComparator(com.google.devtools.ksp.symbol.KSClassDeclaration,androidx.room.compiler.processing.ksp.KspClassFileUtility$Type,kotlin.jvm.functions.Function1)>(r1, $r10, $r9);

        if r3 != null goto label2;

        $r14 = r2;

        goto label5;

     label2:
        $r4 = (java.lang.Iterable) r2;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.ksp.KspMethodElement) r6;

        $r13 = virtualinvoke r7.<androidx.room.compiler.processing.ksp.KspMethodElement: java.lang.String getJvmName()>();

        virtualinvoke r3.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: void register(java.lang.String)>($r13);

        goto label3;

     label4:
        $r12 = (java.lang.Iterable) r2;

        $r11 = (java.util.Comparator) r3;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r12, $r11);

     label5:
        return $r14;
    }

    private final androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator getNamesComparator(com.google.devtools.ksp.symbol.KSClassDeclaration, androidx.room.compiler.processing.ksp.KspClassFileUtility$Type, kotlin.jvm.functions.Function1)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration r1, $r21, r22;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type r2, $r15;
        kotlin.jvm.functions.Function1 r3;
        java.lang.Object r4, r7, $r10;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r5, $r26, r34;
        java.lang.reflect.InvocationHandler r6;
        com.google.devtools.ksp.symbol.Origin $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.room.compiler.processing.XProcessingConfig $r11, $r19;
        com.google.devtools.ksp.symbol.ClassKind $r13, $r14;
        com.google.devtools.ksp.symbol.KSDeclaration $r16, $r17;
        java.lang.Throwable $r18, r35;
        java.lang.RuntimeException $r20;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion $r23;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences $r24, r25;
        java.lang.Class $r28, $r31;
        java.lang.ClassLoader $r29;
        java.lang.Class[] r30;
        java.lang.reflect.Method $r32;
        java.lang.Object[] r33;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSClassDeclaration;

        r2 := @parameter1: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

     label01:
        $r8 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.Origin getOrigin()>();

        $r9 = <com.google.devtools.ksp.symbol.Origin: com.google.devtools.ksp.symbol.Origin KOTLIN_LIB>;

        if $r8 == $r9 goto label02;

        return null;

     label02:
        $z0 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: boolean isCompanionObject()>();

        if $z0 == 0 goto label03;

        $r15 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type FIELD>;

        if r2 != $r15 goto label03;

        $r16 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getParentDeclaration()>();

        $z2 = $r16 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z2 == 0 goto label03;

        $r17 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSDeclaration getParentDeclaration()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r17, "null cannot be cast to non-null type com.google.devtools.ksp.symbol.KSClassDeclaration");

        $r21 = (com.google.devtools.ksp.symbol.KSClassDeclaration) $r17;

        goto label04;

     label03:
        $r21 = r1;

     label04:
        r22 = $r21;

        $r23 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion Companion>;

        $r24 = virtualinvoke $r23.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences getInstance(java.lang.Object)>(r22);

        if $r24 != null goto label05;

        return null;

     label05:
        r25 = $r24;

        $r10 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: java.lang.Object getBinarySource(androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences,com.google.devtools.ksp.symbol.KSClassDeclaration)>(r25, r22);

        if $r10 != null goto label06;

        return null;

     label06:
        r4 = $r10;

        $r26 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        $r11 = <androidx.room.compiler.processing.XProcessingConfig: androidx.room.compiler.processing.XProcessingConfig INSTANCE>;

        $z1 = virtualinvoke $r11.<androidx.room.compiler.processing.XProcessingConfig: boolean getSTRICT_MODE()>();

        if $z1 == 0 goto label07;

        $r13 = interfaceinvoke r22.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.ClassKind getClassKind()>();

        $r14 = <com.google.devtools.ksp.symbol.ClassKind: com.google.devtools.ksp.symbol.ClassKind INTERFACE>;

        if $r13 == $r14 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        specialinvoke $r26.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: void <init>(kotlin.jvm.functions.Function1,boolean)>(r3, $z4);

        r5 = $r26;

        r6 = dynamicinvoke "invoke" <java.lang.reflect.InvocationHandler (androidx.room.compiler.processing.ksp.KspClassFileUtility$Type,androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences,androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator)>(r2, r25, r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]), methodhandle: "REF_INVOKE_STATIC" <androidx.room.compiler.processing.ksp.KspClassFileUtility: java.lang.Object getNamesComparator$lambda$3(androidx.room.compiler.processing.ksp.KspClassFileUtility$Type,androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences,androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>, methodtype: java.lang.Object __METHODTYPE__(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]));

        $r28 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r30 = newarray (java.lang.Class)[1];

        $r31 = virtualinvoke r25.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class getMemberVisitor()>();

        r30[0] = $r31;

        r7 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r29, r30, r6);

        $r32 = virtualinvoke r25.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getVisitMembersMethod()>();

        r33 = newarray (java.lang.Object)[2];

        r33[0] = r7;

        r33[1] = null;

        virtualinvoke $r32.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, r33);

        virtualinvoke r5.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: void seal()>();

        r34 = r5;

     label09:
        goto label12;

     label10:
        $r18 := @caughtexception;

        r35 = $r18;

        $r19 = <androidx.room.compiler.processing.XProcessingConfig: androidx.room.compiler.processing.XProcessingConfig INSTANCE>;

        $z3 = virtualinvoke $r19.<androidx.room.compiler.processing.XProcessingConfig: boolean getSTRICT_MODE()>();

        if $z3 == 0 goto label11;

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("failed to get fields", r35);

        throw $r20;

     label11:
        r34 = (androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator) null;

     label12:
        return r34;

        catch java.lang.Throwable from label01 to label09 with label10;
    }

    private final java.lang.Object getBinarySource(androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences, com.google.devtools.ksp.symbol.KSClassDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility r0;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r1;
        com.google.devtools.ksp.symbol.KSClassDeclaration r2;
        java.lang.Object r3, r4, $r13, r14, r15;
        java.lang.reflect.Method $r5, $r8, $r11;
        java.lang.Object[] $r6, $r9, $r12;
        java.lang.Class $r7, $r10;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSClassDeclaration;

        $r5 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getGetDescriptorMethod()>();

        $r6 = newarray (java.lang.Object)[0];

        r14 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r6);

        if r14 != null goto label1;

        return null;

     label1:
        r3 = r14;

        $r7 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class getDeserializedClassDescriptor()>();

        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isInstance(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r8 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getDescriptorSourceMethod()>();

        $r9 = newarray (java.lang.Object)[0];

        r4 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r9);

        if r4 != null goto label3;

        return null;

     label3:
        r15 = r4;

        $r10 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class getKotlinJvmBinarySourceElement()>();

        $z1 = virtualinvoke $r10.<java.lang.Class: boolean isInstance(java.lang.Object)>(r15);

        if $z1 != 0 goto label4;

        return null;

     label4:
        $r11 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getBinaryClassMethod()>();

        $r12 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r15, $r12);

        if $r13 != null goto label5;

        return null;

     label5:
        return $r13;
    }

    private static final java.lang.Object getNamesComparator$lambda$3(androidx.room.compiler.processing.ksp.KspClassFileUtility$Type, androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences, androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r0;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences $r1;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator $r2;
        java.lang.Object r3, r6, $r11;
        java.lang.reflect.Method r4, $r9;
        java.lang.Object[] r5, $r10;
        java.lang.String $r7, $r8, $r12;
        boolean $z0, $z1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        $r1 := @parameter1: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r2 := @parameter2: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.reflect.Method;

        r5 := @parameter5: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$typeReferences");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$fieldNameComparator");

        $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = virtualinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: java.lang.String getVisitorName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getAsStringMethod()>();

        $r11 = r5[0];

        $r10 = newarray (java.lang.Object)[0];

        r6 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r10);

        $z1 = r6 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $r12 = (java.lang.String) r6;

        virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: void register(java.lang.String)>($r12);

     label1:
        return null;
    }

    public static final boolean access$isDeclaredInside(androidx.room.compiler.processing.ksp.KspClassFileUtility, com.google.devtools.ksp.symbol.KSPropertyDeclaration, com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility $r0;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r1;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r2;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspClassFileUtility;

        $r1 := @parameter1: com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        r2 := @parameter2: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        $z0 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: boolean isDeclaredInside(com.google.devtools.ksp.symbol.KSPropertyDeclaration,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r1, r2);

        return $z0;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspClassFileUtility;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator
<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: kotlin.jvm.functions.Function1 getName>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean strictMode>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int nextOrder>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean sealed>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: java.util.Map orders>
    public void <init>(kotlin.jvm.functions.Function1, boolean)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        kotlin.jvm.functions.Function1 r1;
        boolean z0;
        java.util.LinkedHashMap $r2;
        java.util.Map $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "getName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: kotlin.jvm.functions.Function1 getName> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean strictMode> = z0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: java.util.Map orders> = $r3;

        return;
    }

    public final kotlin.jvm.functions.Function1 getGetName()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: kotlin.jvm.functions.Function1 getName>;

        return $r1;
    }

    public final boolean getStrictMode()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        $z0 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean strictMode>;

        return $z0;
    }

    public final void seal()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean sealed> = 1;

        return;
    }

    public final void register(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        java.lang.String r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int getOrder(java.lang.String)>(r1);

        return;
    }

    private final int getOrder(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        java.lang.String r1, $r12, $r13;
        java.util.Map $r2;
        java.lang.Object r3, $r14;
        int i0, $i1, $i2;
        java.lang.Integer r4;
        java.lang.Number $r5;
        boolean $z2, $z3;
        java.lang.IllegalStateException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: java.util.Map orders>;

        r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label2;

        $z2 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean sealed>;

        if $z2 == 0 goto label1;

        $z3 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: boolean strictMode>;

        if $z3 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected to find field/method ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it is non-existent");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label1:
        i0 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int nextOrder>;

        $i2 = i0 + 1;

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int nextOrder> = $i2;

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        $r14 = r4;

        goto label3;

     label2:
        $r14 = r3;

     label3:
        $r5 = (java.lang.Number) $r14;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        return $i1;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator r0;
        java.lang.Object r1, r2, $r4, $r7;
        kotlin.jvm.functions.Function1 $r3, $r6;
        java.lang.String $r5, $r8;
        int $i0, $i1, $i2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: kotlin.jvm.functions.Function1 getName>;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        $i0 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int getOrder(java.lang.String)>($r5);

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: kotlin.jvm.functions.Function1 getName>;

        $r7 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r8 = (java.lang.String) $r7;

        $i1 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$MemberNameComparator: int getOrder(java.lang.String)>($r8);

        $i2 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($i0, $i1);

        return $i2;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1
<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 INSTANCE>
    void <init>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1;

        specialinvoke r0.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(java.lang.Class,java.lang.String,java.lang.String,int)>(class "Landroidx/room/compiler/processing/ksp/KspFieldElement;", "name", "getName()Ljava/lang/String;", 0);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.ksp.KspFieldElement $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.compiler.processing.ksp.KspFieldElement) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspFieldElement: java.lang.String getName()>();

        return $r3;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderFields$comparator$1 INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1
<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1: com.google.devtools.ksp.symbol.KSFunctionDeclaration $primaryConstructor$inlined>
    public void <init>(com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1 r0;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1: com.google.devtools.ksp.symbol.KSFunctionDeclaration $primaryConstructor$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2;
        java.lang.Comparable r3, $r12;
        androidx.room.compiler.processing.ksp.KspClassFileUtility $r4, $r8;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r5, $r9;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r6, $r10;
        boolean $z0, $z1;
        java.lang.Integer $r7, $r11;
        int $i0;
        androidx.room.compiler.processing.ksp.KspFieldElement r13, r14;
        byte $b1, $b2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r13 = (androidx.room.compiler.processing.ksp.KspFieldElement) r1;

        $r4 = <androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility INSTANCE>;

        $r5 = virtualinvoke r13.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r6 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1: com.google.devtools.ksp.symbol.KSFunctionDeclaration $primaryConstructor$inlined>;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility: boolean access$isDeclaredInside(androidx.room.compiler.processing.ksp.KspClassFileUtility,com.google.devtools.ksp.symbol.KSPropertyDeclaration,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r4, $r5, $r6);

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b1);

        r14 = (androidx.room.compiler.processing.ksp.KspFieldElement) r2;

        r3 = (java.lang.Comparable) $r7;

        $r8 = <androidx.room.compiler.processing.ksp.KspClassFileUtility: androidx.room.compiler.processing.ksp.KspClassFileUtility INSTANCE>;

        $r9 = virtualinvoke r14.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r10 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderKotlinSourceFields$$inlined$sortedBy$1: com.google.devtools.ksp.symbol.KSFunctionDeclaration $primaryConstructor$inlined>;

        $z1 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility: boolean access$isDeclaredInside(androidx.room.compiler.processing.ksp.KspClassFileUtility,com.google.devtools.ksp.symbol.KSPropertyDeclaration,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r8, $r9, $r10);

        if $z1 == 0 goto label3;

        $b2 = 0;

        goto label4;

     label3:
        $b2 = 1;

     label4:
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        $r12 = (java.lang.Comparable) $r11;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r12);

        return $i0;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1
<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 INSTANCE>
    void <init>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1;

        specialinvoke r0.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(java.lang.Class,java.lang.String,java.lang.String,int)>(class "Landroidx/room/compiler/processing/ksp/KspMethodElement;", "jvmName", "getJvmName()Ljava/lang/String;", 0);

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.ksp.KspMethodElement $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.compiler.processing.ksp.KspMethodElement) r1;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspMethodElement: java.lang.String getJvmName()>();

        return $r3;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1: androidx.room.compiler.processing.ksp.KspClassFileUtility$orderMethods$comparator$1 INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences getInstance(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion r0;
        java.lang.Object r1, $r3, r8, r9;
        java.lang.Throwable r2, $r7;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences $r4, $r10;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ref");

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object access$getInstance$cp()>();

        if $r3 != null goto label5;

     label1:
        $r4 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "ref::class.java.classLoader");

        specialinvoke $r4.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: void <init>(java.lang.ClassLoader,kotlin.jvm.internal.DefaultConstructorMarker)>($r6, null);

        r8 = $r4;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        r8 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object access$getFAILED$cp()>();

     label4:
        staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: void access$setInstance$cp(java.lang.Object)>(r8);

     label5:
        r9 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object access$getInstance$cp()>();

        $z0 = r9 instanceof androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        if $z0 == 0 goto label6;

        $r10 = (androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences) r9;

        goto label7;

     label6:
        $r10 = null;

     label7:
        return $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion Companion>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class deserializedClassDescriptor>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class ksClassDeclarationDescriptorImpl>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinarySourceElement>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinaryClass>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class memberVisitor>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class name>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getDescriptorMethod>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method descriptorSourceMethod>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method binaryClassMethod>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method visitMembersMethod>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method asStringMethod>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object FAILED>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object instance>
    private void <init>(java.lang.ClassLoader)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.ClassLoader r1;
        java.lang.Class[] r2, $r9, $r12, $r15, $r21;
        java.lang.Class $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r13, $r16, $r18, $r19, $r22;
        java.lang.reflect.Method $r11, $r14, $r17, $r20, $r23;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        r1 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jetbrains.kotlin.serialization.deserialization.descriptors.DeserializedClassDescriptor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "classLoader.loadClass(\n \u2026lassDescriptor\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class deserializedClassDescriptor> = $r3;

        $r4 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.google.devtools.ksp.symbol.impl.binary.KSClassDeclarationDescriptorImpl");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "classLoader.loadClass(\n \u2026DescriptorImpl\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class ksClassDeclarationDescriptorImpl> = $r4;

        $r5 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jetbrains.kotlin.load.kotlin.KotlinJvmBinarySourceElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "classLoader.loadClass(\n \u2026ySourceElement\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinarySourceElement> = $r5;

        $r6 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jetbrains.kotlin.load.kotlin.KotlinJvmBinaryClass");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "classLoader.loadClass(\n \u2026JvmBinaryClass\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinaryClass> = $r6;

        $r7 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jetbrains.kotlin.load.kotlin.KotlinJvmBinaryClass$MemberVisitor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "classLoader.loadClass(\n \u2026$MemberVisitor\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class memberVisitor> = $r7;

        $r8 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.jetbrains.kotlin.name.Name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "classLoader.loadClass(\n \u2026tlin.name.Name\"\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class name> = $r8;

        $r10 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class ksClassDeclarationDescriptorImpl>;

        $r9 = newarray (java.lang.Class)[0];

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getDescriptor", $r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "ksClassDeclarationDescri\u2026edMethod(\"getDescriptor\")");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getDescriptorMethod> = $r11;

        $r13 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class deserializedClassDescriptor>;

        $r12 = newarray (java.lang.Class)[0];

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getSource", $r12);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "deserializedClassDescriptor.getMethod(\"getSource\")");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method descriptorSourceMethod> = $r14;

        $r16 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinarySourceElement>;

        $r15 = newarray (java.lang.Class)[0];

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBinaryClass", $r15);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "kotlinJvmBinarySourceEle\u2026tMethod(\"getBinaryClass\")");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method binaryClassMethod> = $r17;

        $r19 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinaryClass>;

        r2 = newarray (java.lang.Class)[2];

        $r18 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class memberVisitor>;

        r2[0] = $r18;

        r2[1] = class "[B";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("visitMembers", r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "kotlinJvmBinaryClass.get\u2026ray::class.java\n        )");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method visitMembersMethod> = $r20;

        $r22 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class name>;

        $r21 = newarray (java.lang.Class)[0];

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("asString", $r21);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "name.getDeclaredMethod(\"asString\")");

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method asStringMethod> = $r23;

        return;
    }

    public final java.lang.Class getDeserializedClassDescriptor()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class deserializedClassDescriptor>;

        return $r1;
    }

    public final java.lang.Class getKsClassDeclarationDescriptorImpl()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class ksClassDeclarationDescriptorImpl>;

        return $r1;
    }

    public final java.lang.Class getKotlinJvmBinarySourceElement()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinarySourceElement>;

        return $r1;
    }

    public final java.lang.Class getKotlinJvmBinaryClass()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class kotlinJvmBinaryClass>;

        return $r1;
    }

    public final java.lang.Class getMemberVisitor()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class memberVisitor>;

        return $r1;
    }

    public final java.lang.Class getName()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.Class $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Class name>;

        return $r1;
    }

    public final java.lang.reflect.Method getGetDescriptorMethod()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method getDescriptorMethod>;

        return $r1;
    }

    public final java.lang.reflect.Method getDescriptorSourceMethod()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method descriptorSourceMethod>;

        return $r1;
    }

    public final java.lang.reflect.Method getBinaryClassMethod()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method binaryClassMethod>;

        return $r1;
    }

    public final java.lang.reflect.Method getVisitMembersMethod()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method visitMembersMethod>;

        return $r1;
    }

    public final java.lang.reflect.Method getAsStringMethod()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.reflect.Method $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.reflect.Method asStringMethod>;

        return $r1;
    }

    public static final java.lang.Object access$getInstance$cp()
    {
        java.lang.Object $r0;

        $r0 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object instance>;

        return $r0;
    }

    public static final void access$setInstance$cp(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object instance> = r0;

        return;
    }

    public void <init>(java.lang.ClassLoader, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences r0;
        java.lang.ClassLoader r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: void <init>(java.lang.ClassLoader)>(r1);

        return;
    }

    public static final java.lang.Object access$getFAILED$cp()
    {
        java.lang.Object $r0;

        $r0 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object FAILED>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion $r0;
        java.lang.Object $r1;

        $r0 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences$Companion Companion> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$ReflectionReferences: java.lang.Object FAILED> = $r1;

        return;
    }

androidx.room.compiler.processing.ksp.KspClassFileUtility$Type
<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: java.lang.String visitorName>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type FIELD>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type METHOD>
<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $VALUES>
    private void <init>(java.lang.String, int, java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type r0;
        java.lang.String $r1, r2;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: java.lang.String visitorName> = r2;

        return;
    }

    public final java.lang.String getVisitorName()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: java.lang.String visitorName>;

        return $r1;
    }

    public static androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] values()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[]) $r1;

        return $r2;
    }

    public static androidx.room.compiler.processing.ksp.KspClassFileUtility$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/room/compiler/processing/ksp/KspClassFileUtility$Type;", r0);

        $r2 = (androidx.room.compiler.processing.ksp.KspClassFileUtility$Type) $r1;

        return $r2;
    }

    private static final androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $values()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] r0;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r1, $r2;

        r0 = newarray (androidx.room.compiler.processing.ksp.KspClassFileUtility$Type)[2];

        $r1 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type FIELD>;

        r0[0] = $r1;

        $r2 = <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type METHOD>;

        r0[1] = $r2;

        return r0;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type $r0, $r1;
        androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $r2;

        $r0 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: void <init>(java.lang.String,int,java.lang.String)>("FIELD", 0, "visitField");

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type FIELD> = $r0;

        $r1 = new androidx.room.compiler.processing.ksp.KspClassFileUtility$Type;

        specialinvoke $r1.<androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: void <init>(java.lang.String,int,java.lang.String)>("METHOD", 1, "visitMethod");

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type METHOD> = $r1;

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $values()>();

        <androidx.room.compiler.processing.ksp.KspClassFileUtility$Type: androidx.room.compiler.processing.ksp.KspClassFileUtility$Type[] $VALUES> = $r2;

        return;
    }

