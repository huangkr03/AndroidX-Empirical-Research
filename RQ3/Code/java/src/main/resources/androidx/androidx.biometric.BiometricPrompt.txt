androidx.biometric.BiometricPrompt
<androidx.biometric.BiometricPrompt: java.lang.String TAG>
<androidx.biometric.BiometricPrompt: int BIOMETRIC_SUCCESS>
<androidx.biometric.BiometricPrompt: int ERROR_HW_UNAVAILABLE>
<androidx.biometric.BiometricPrompt: int ERROR_UNABLE_TO_PROCESS>
<androidx.biometric.BiometricPrompt: int ERROR_TIMEOUT>
<androidx.biometric.BiometricPrompt: int ERROR_NO_SPACE>
<androidx.biometric.BiometricPrompt: int ERROR_CANCELED>
<androidx.biometric.BiometricPrompt: int ERROR_LOCKOUT>
<androidx.biometric.BiometricPrompt: int ERROR_VENDOR>
<androidx.biometric.BiometricPrompt: int ERROR_LOCKOUT_PERMANENT>
<androidx.biometric.BiometricPrompt: int ERROR_USER_CANCELED>
<androidx.biometric.BiometricPrompt: int ERROR_NO_BIOMETRICS>
<androidx.biometric.BiometricPrompt: int ERROR_HW_NOT_PRESENT>
<androidx.biometric.BiometricPrompt: int ERROR_NEGATIVE_BUTTON>
<androidx.biometric.BiometricPrompt: int ERROR_NO_DEVICE_CREDENTIAL>
<androidx.biometric.BiometricPrompt: int ERROR_SECURITY_UPDATE_REQUIRED>
<androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_UNKNOWN>
<androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_DEVICE_CREDENTIAL>
<androidx.biometric.BiometricPrompt: int AUTHENTICATION_RESULT_TYPE_BIOMETRIC>
<androidx.biometric.BiometricPrompt: java.lang.String BIOMETRIC_FRAGMENT_TAG>
<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>
    public void <init>(androidx.fragment.app.FragmentActivity, androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.fragment.app.FragmentActivity r1;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r2;
        androidx.fragment.app.FragmentManager r3;
        androidx.biometric.BiometricViewModel r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.fragment.app.FragmentActivity;

        r2 := @parameter1: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FragmentActivity must not be null.");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AuthenticationCallback must not be null.");

        throw $r5;

     label2:
        r3 = virtualinvoke r1.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        r4 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)>(r1);

        specialinvoke r0.<androidx.biometric.BiometricPrompt: void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)>(r3, r4, null, r2);

        return;
    }

    public void <init>(androidx.fragment.app.Fragment, androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.fragment.app.Fragment r1;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r2;
        androidx.fragment.app.FragmentActivity r3;
        androidx.fragment.app.FragmentManager r4;
        androidx.biometric.BiometricViewModel r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Fragment must not be null.");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AuthenticationCallback must not be null.");

        throw $r6;

     label2:
        r3 = virtualinvoke r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>();

        r4 = virtualinvoke r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        r5 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)>(r3);

        staticinvoke <androidx.biometric.BiometricPrompt: void addObservers(androidx.fragment.app.Fragment,androidx.biometric.BiometricViewModel)>(r1, r5);

        specialinvoke r0.<androidx.biometric.BiometricPrompt: void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)>(r4, r5, null, r2);

        return;
    }

    public void <init>(androidx.fragment.app.FragmentActivity, java.util.concurrent.Executor, androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.fragment.app.FragmentActivity r1;
        java.util.concurrent.Executor r2;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r3;
        androidx.fragment.app.FragmentManager r4;
        androidx.biometric.BiometricViewModel r5;
        java.lang.IllegalArgumentException $r6, $r7, $r8;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.fragment.app.FragmentActivity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("FragmentActivity must not be null.");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Executor must not be null.");

        throw $r7;

     label2:
        if r3 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AuthenticationCallback must not be null.");

        throw $r6;

     label3:
        r4 = virtualinvoke r1.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        r5 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)>(r1);

        specialinvoke r0.<androidx.biometric.BiometricPrompt: void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)>(r4, r5, r2, r3);

        return;
    }

    public void <init>(androidx.fragment.app.Fragment, java.util.concurrent.Executor, androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.fragment.app.Fragment r1;
        java.util.concurrent.Executor r2;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r3;
        androidx.fragment.app.FragmentActivity r4;
        androidx.fragment.app.FragmentManager r5;
        androidx.biometric.BiometricViewModel r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Fragment must not be null.");

        throw $r9;

     label1:
        if r2 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Executor must not be null.");

        throw $r8;

     label2:
        if r3 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("AuthenticationCallback must not be null.");

        throw $r7;

     label3:
        r4 = virtualinvoke r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()>();

        r5 = virtualinvoke r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()>();

        r6 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)>(r4);

        staticinvoke <androidx.biometric.BiometricPrompt: void addObservers(androidx.fragment.app.Fragment,androidx.biometric.BiometricViewModel)>(r1, r6);

        specialinvoke r0.<androidx.biometric.BiometricPrompt: void init(androidx.fragment.app.FragmentManager,androidx.biometric.BiometricViewModel,java.util.concurrent.Executor,androidx.biometric.BiometricPrompt$AuthenticationCallback)>(r5, r6, r2, r3);

        return;
    }

    private void init(androidx.fragment.app.FragmentManager, androidx.biometric.BiometricViewModel, java.util.concurrent.Executor, androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.biometric.BiometricViewModel r2;
        java.util.concurrent.Executor r3;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r4;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: androidx.biometric.BiometricViewModel;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager> = r1;

        if r2 == null goto label2;

        if r3 == null goto label1;

        virtualinvoke r2.<androidx.biometric.BiometricViewModel: void setClientExecutor(java.util.concurrent.Executor)>(r3);

     label1:
        virtualinvoke r2.<androidx.biometric.BiometricViewModel: void setClientCallback(androidx.biometric.BiometricPrompt$AuthenticationCallback)>(r4);

     label2:
        return;
    }

    public void authenticate(androidx.biometric.BiometricPrompt$PromptInfo, androidx.biometric.BiometricPrompt$CryptoObject)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.biometric.BiometricPrompt$PromptInfo r1;
        androidx.biometric.BiometricPrompt$CryptoObject r2;
        int i0, $i1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3, $r4, $r5, $r6;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$PromptInfo;

        r2 := @parameter1: androidx.biometric.BiometricPrompt$CryptoObject;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PromptInfo cannot be null.");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CryptoObject cannot be null.");

        throw $r5;

     label2:
        i0 = staticinvoke <androidx.biometric.AuthenticatorUtils: int getConsolidatedAuthenticators(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)>(r1, r2);

        $z0 = staticinvoke <androidx.biometric.AuthenticatorUtils: boolean isWeakBiometricAllowed(int)>(i0);

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Crypto-based authentication is not supported for Class 2 (Weak) biometrics.");

        throw $r4;

     label3:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 >= 30 goto label4;

        $z1 = staticinvoke <androidx.biometric.AuthenticatorUtils: boolean isDeviceCredentialAllowed(int)>(i0);

        if $z1 == 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Crypto-based authentication is not supported for device credential prior to API 30.");

        throw $r3;

     label4:
        specialinvoke r0.<androidx.biometric.BiometricPrompt: void authenticateInternal(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)>(r1, r2);

        return;
    }

    public void authenticate(androidx.biometric.BiometricPrompt$PromptInfo)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.biometric.BiometricPrompt$PromptInfo r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$PromptInfo;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("PromptInfo cannot be null.");

        throw $r2;

     label1:
        specialinvoke r0.<androidx.biometric.BiometricPrompt: void authenticateInternal(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)>(r1, null);

        return;
    }

    private void authenticateInternal(androidx.biometric.BiometricPrompt$PromptInfo, androidx.biometric.BiometricPrompt$CryptoObject)
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.biometric.BiometricPrompt$PromptInfo r1;
        androidx.biometric.BiometricPrompt$CryptoObject r2;
        androidx.biometric.BiometricFragment r3;
        androidx.fragment.app.FragmentManager $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricPrompt;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$PromptInfo;

        r2 := @parameter1: androidx.biometric.BiometricPrompt$CryptoObject;

        $r4 = r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>;

        if $r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BiometricPromptCompat", "Unable to start authentication. Client fragment manager was null.");

        return;

     label1:
        $r5 = r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>;

        $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: boolean isStateSaved()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BiometricPromptCompat", "Unable to start authentication. Called after onSaveInstanceState().");

        return;

     label2:
        $r6 = r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>;

        r3 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricFragment findOrAddBiometricFragment(androidx.fragment.app.FragmentManager)>($r6);

        virtualinvoke r3.<androidx.biometric.BiometricFragment: void authenticate(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)>(r1, r2);

        return;
    }

    public void cancelAuthentication()
    {
        androidx.biometric.BiometricPrompt r0;
        androidx.biometric.BiometricFragment r1;
        androidx.fragment.app.FragmentManager $r2, $r3;

        r0 := @this: androidx.biometric.BiometricPrompt;

        $r2 = r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BiometricPromptCompat", "Unable to start authentication. Client fragment manager was null.");

        return;

     label1:
        $r3 = r0.<androidx.biometric.BiometricPrompt: androidx.fragment.app.FragmentManager mClientFragmentManager>;

        r1 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricFragment findBiometricFragment(androidx.fragment.app.FragmentManager)>($r3);

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BiometricPromptCompat", "Unable to cancel authentication. BiometricFragment not found.");

        return;

     label2:
        virtualinvoke r1.<androidx.biometric.BiometricFragment: void cancelAuthentication(int)>(3);

        return;
    }

    private static androidx.biometric.BiometricViewModel getViewModel(androidx.fragment.app.FragmentActivity)
    {
        androidx.fragment.app.FragmentActivity r0;
        androidx.lifecycle.ViewModelProvider $r1;
        androidx.lifecycle.ViewModel $r2;
        androidx.biometric.BiometricViewModel $r3;

        r0 := @parameter0: androidx.fragment.app.FragmentActivity;

        if r0 == null goto label1;

        $r1 = new androidx.lifecycle.ViewModelProvider;

        specialinvoke $r1.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStoreOwner)>(r0);

        $r2 = virtualinvoke $r1.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/biometric/BiometricViewModel;");

        $r3 = (androidx.biometric.BiometricViewModel) $r2;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private static void addObservers(androidx.fragment.app.Fragment, androidx.biometric.BiometricViewModel)
    {
        androidx.fragment.app.Fragment r0;
        androidx.biometric.BiometricViewModel r1;
        androidx.lifecycle.Lifecycle $r2;
        androidx.biometric.BiometricPrompt$ResetCallbackObserver $r3;

        r0 := @parameter0: androidx.fragment.app.Fragment;

        r1 := @parameter1: androidx.biometric.BiometricViewModel;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()>();

        $r3 = new androidx.biometric.BiometricPrompt$ResetCallbackObserver;

        specialinvoke $r3.<androidx.biometric.BiometricPrompt$ResetCallbackObserver: void <init>(androidx.biometric.BiometricViewModel)>(r1);

        virtualinvoke $r2.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r3);

     label1:
        return;
    }

    private static androidx.biometric.BiometricFragment findBiometricFragment(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.Fragment $r1;
        androidx.biometric.BiometricFragment $r2;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>("androidx.biometric.BiometricFragment");

        $r2 = (androidx.biometric.BiometricFragment) $r1;

        return $r2;
    }

    private static androidx.biometric.BiometricFragment findOrAddBiometricFragment(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.FragmentManager r0;
        androidx.fragment.app.FragmentTransaction $r1, $r2;
        androidx.biometric.BiometricFragment r3;

        r0 := @parameter0: androidx.fragment.app.FragmentManager;

        r3 = staticinvoke <androidx.biometric.BiometricPrompt: androidx.biometric.BiometricFragment findBiometricFragment(androidx.fragment.app.FragmentManager)>(r0);

        if r3 != null goto label1;

        r3 = staticinvoke <androidx.biometric.BiometricFragment: androidx.biometric.BiometricFragment newInstance()>();

        $r1 = virtualinvoke r0.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()>();

        $r2 = virtualinvoke $r1.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)>(r3, "androidx.biometric.BiometricFragment");

        virtualinvoke $r2.<androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()>();

        virtualinvoke r0.<androidx.fragment.app.FragmentManager: boolean executePendingTransactions()>();

     label1:
        return r3;
    }

