androidx.fragment.app.FragmentManagerViewModel
<androidx.fragment.app.FragmentManagerViewModel: java.lang.String TAG>
<androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>
<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>
<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>
<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>
<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>
<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared>
<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot>
<androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved>
    static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    {
        androidx.lifecycle.ViewModelStore r0;
        androidx.lifecycle.ViewModelProvider r1, $r2;
        androidx.lifecycle.ViewModelProvider$Factory $r3;
        androidx.lifecycle.ViewModel $r4;
        androidx.fragment.app.FragmentManagerViewModel $r5;

        r0 := @parameter0: androidx.lifecycle.ViewModelStore;

        $r2 = new androidx.lifecycle.ViewModelProvider;

        $r3 = <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY>;

        specialinvoke $r2.<androidx.lifecycle.ViewModelProvider: void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)>(r0, $r3);

        r1 = $r2;

        $r4 = virtualinvoke r1.<androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>(class "Landroidx/fragment/app/FragmentManagerViewModel;");

        $r5 = (androidx.fragment.app.FragmentManagerViewModel) $r4;

        return $r5;
    }

    void <init>(boolean)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        boolean z0;
        java.util.HashMap $r1, $r2, $r3;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores> = $r3;

        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared> = 0;

        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 0;

        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved> = 0;

        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved> = z0;

        return;
    }

    void setIsStateSaved(boolean)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        boolean z0;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved> = z0;

        return;
    }

    protected void onCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCleared called for ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label1:
        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared> = 1;

        return;
    }

    boolean isCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $z0 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared>;

        return $z0;
    }

    void addRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r2, $r4, $r10;
        java.util.HashMap $r3, $r5;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved>;

        if $z0 == 0 goto label2;

        $z3 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z3 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring addRetainedFragment as the state is already saved");

     label1:
        return;

     label2:
        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $z1 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        return;

     label3:
        $r5 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r4 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        $z2 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z2 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Added ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r10);

     label4:
        return;
    }

    androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        return $r4;
    }

    java.util.Collection getRetainedFragments()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;
        java.util.Collection $r3;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    boolean shouldDestroy(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment r1;
        java.lang.String $r2;
        java.util.HashMap $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        if $z1 == 0 goto label2;

        $z3 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared>;

        return $z3;

     label2:
        $z2 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot>;

        if $z2 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    void removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r8;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z1 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved>;

        if $z1 == 0 goto label2;

        $z3 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z3 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "Ignoring removeRetainedFragment as the state is already saved");

     label1:
        return;

     label2:
        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        if $r4 == null goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        if z0 == 0 goto label5;

        $z2 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z2 == 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating retained Fragments: Removed ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r8);

     label5:
        return;
    }

    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0, $r5, r9;
        androidx.fragment.app.Fragment r1;
        java.lang.String $r2, $r6;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r9 = (androidx.fragment.app.FragmentManagerViewModel) $r4;

        if r9 != null goto label1;

        $r5 = new androidx.fragment.app.FragmentManagerViewModel;

        $z0 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        specialinvoke $r5.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>($z0);

        r9 = $r5;

        $r7 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r6 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r9);

     label1:
        return r9;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment r1;
        java.lang.String $r2, $r6;
        java.util.HashMap $r3, $r7;
        java.lang.Object $r4;
        androidx.lifecycle.ViewModelStore $r5, r9;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r9 = (androidx.lifecycle.ViewModelStore) $r4;

        if r9 != null goto label1;

        $r5 = new androidx.lifecycle.ViewModelStore;

        specialinvoke $r5.<androidx.lifecycle.ViewModelStore: void <init>()>();

        r9 = $r5;

        $r7 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $r6 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r9);

     label1:
        return r9;
    }

    void clearNonConfigState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment r1;
        boolean $z0;
        java.lang.String $r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing non-config state for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r6);

     label1:
        $r2 = r1.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        specialinvoke r0.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>($r2);

        return;
    }

    void clearNonConfigState(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.lang.String r1, $r5;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(3);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing non-config state for saved state of Fragment ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label1:
        specialinvoke r0.<androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String)>(r1);

        return;
    }

    private void clearNonConfigStateInternal(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerViewModel r0, r2;
        java.lang.String r1;
        androidx.lifecycle.ViewModelStore r3;
        java.util.HashMap $r4, $r6, $r8, $r10;
        java.lang.Object $r5, $r7;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.fragment.app.FragmentManagerViewModel) $r5;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.fragment.app.FragmentManagerViewModel: void onCleared()>();

        $r10 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        $r6 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.lifecycle.ViewModelStore) $r7;

        if r3 == null goto label2;

        virtualinvoke r3.<androidx.lifecycle.ViewModelStore: void clear()>();

        $r8 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerViewModel r0, r4, $r11;
        androidx.fragment.app.FragmentManagerNonConfig r1, $r13;
        java.util.Collection r2;
        java.util.Map$Entry r3;
        java.util.HashMap $r5, $r6, $r7, $r8, $r14, $r20;
        java.util.Set $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10, $r12, $r15, $r18;
        java.lang.String $r16, $r19;
        java.util.Iterator r22, r25;
        androidx.fragment.app.Fragment r23;
        java.util.Map r24, r26;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: androidx.fragment.app.FragmentManagerNonConfig;

        $r5 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        $r6 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        $r7 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        if r1 == null goto label6;

        r2 = virtualinvoke r1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()>();

        if r2 == null goto label3;

        r22 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r18 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (androidx.fragment.app.Fragment) $r18;

        if r23 == null goto label2;

        $r20 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r19 = r23.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r23);

     label2:
        goto label1;

     label3:
        r24 = virtualinvoke r1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getChildNonConfigs()>();

        if r24 == null goto label5;

        $r9 = interfaceinvoke r24.<java.util.Map: java.util.Set entrySet()>();

        r25 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r10;

        $r11 = new androidx.fragment.app.FragmentManagerViewModel;

        $z1 = r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved>;

        specialinvoke $r11.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>($z1);

        r4 = $r11;

        $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (androidx.fragment.app.FragmentManagerNonConfig) $r12;

        virtualinvoke r4.<androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)>($r13);

        $r14 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r4);

        goto label4;

     label5:
        r26 = virtualinvoke r1.<androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getViewModelStores()>();

        if r26 == null goto label6;

        $r8 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        virtualinvoke $r8.<java.util.HashMap: void putAll(java.util.Map)>(r26);

     label6:
        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 0;

        return;
    }

    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
    {
        androidx.fragment.app.FragmentManagerViewModel r0, $r10;
        java.util.HashMap r1, $r5, $r6, $r7, $r14, $r15, $r16, $r17, $r21, $r23, $r24;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        androidx.fragment.app.FragmentManagerNonConfig r4, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r8, $r9, $r11;
        java.lang.String $r12;
        java.util.Set $r18;
        java.util.ArrayList $r20;
        java.util.Collection $r22;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $r5 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r14 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $z4 = virtualinvoke $r14.<java.util.HashMap: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $r15 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $z5 = virtualinvoke $r15.<java.util.HashMap: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        return null;

     label1:
        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r1 = $r16;

        $r17 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (androidx.fragment.app.FragmentManagerViewModel) $r9;

        r4 = virtualinvoke $r10.<androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()>();

        if r4 == null goto label3;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r4);

     label3:
        goto label2;

     label4:
        r0.<androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot> = 1;

        $r6 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $z1 = virtualinvoke $r6.<java.util.HashMap: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r1.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label5;

        $r7 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $z3 = virtualinvoke $r7.<java.util.HashMap: boolean isEmpty()>();

        if $z3 == 0 goto label5;

        return null;

     label5:
        $r19 = new androidx.fragment.app.FragmentManagerNonConfig;

        $r20 = new java.util.ArrayList;

        $r21 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r22);

        $r23 = new java.util.HashMap;

        $r24 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        specialinvoke $r23.<java.util.HashMap: void <init>(java.util.Map)>($r24);

        specialinvoke $r19.<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.Collection,java.util.Map,java.util.Map)>($r20, r1, $r23);

        return $r19;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.fragment.app.FragmentManagerViewModel r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.HashMap $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.fragment.app.FragmentManagerViewModel) r1;

        $r6 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r5 = r2.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $z0 = virtualinvoke $r6.<java.util.HashMap: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r8 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r7 = r2.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $z1 = virtualinvoke $r8.<java.util.HashMap: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r10 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $r9 = r2.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $z2 = virtualinvoke $r10.<java.util.HashMap: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public int hashCode()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.util.HashMap $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5, i6;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $r1 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        i4 = virtualinvoke $r1.<java.util.HashMap: int hashCode()>();

        $i0 = 31 * i4;

        $r2 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int hashCode()>();

        i5 = $i0 + $i1;

        $i2 = 31 * i5;

        $r3 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $i3 = virtualinvoke $r3.<java.util.HashMap: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.lang.StringBuilder r1, $r5;
        java.util.Iterator r2, r3, r4;
        int $i0;
        java.lang.String $r6, $r18, $r20, $r24;
        java.util.HashMap $r9, $r12, $r15;
        java.util.Collection $r10;
        java.util.Set $r13, $r16;
        java.lang.Object $r19, $r23, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("FragmentManagerViewModel{");

        r1 = $r5;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} Fragments (");

        $r9 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r27 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Child Non Config (");

        $r12 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r23 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.lang.String) $r23;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ViewModelStores (");

        $r15 = r0.<androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.util.Set keySet()>();

        r4 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.lang.String) $r19;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label5;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    static void <clinit>()
    {
        androidx.fragment.app.FragmentManagerViewModel$1 $r0;

        $r0 = new androidx.fragment.app.FragmentManagerViewModel$1;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerViewModel$1: void <init>()>();

        <androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY> = $r0;

        return;
    }

androidx.fragment.app.FragmentManagerViewModel$1
    void <init>()
    {
        androidx.fragment.app.FragmentManagerViewModel$1 r0;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.lifecycle.ViewModel create(java.lang.Class)
    {
        androidx.fragment.app.FragmentManagerViewModel$1 r0;
        java.lang.Class r1;
        androidx.fragment.app.FragmentManagerViewModel r2, $r3;

        r0 := @this: androidx.fragment.app.FragmentManagerViewModel$1;

        r1 := @parameter0: java.lang.Class;

        $r3 = new androidx.fragment.app.FragmentManagerViewModel;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerViewModel: void <init>(boolean)>(1);

        r2 = $r3;

        return r2;
    }

