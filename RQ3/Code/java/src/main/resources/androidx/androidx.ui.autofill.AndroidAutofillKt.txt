androidx.ui.autofill.AndroidAutofillKt
    public static final void populateViewStructure(androidx.ui.autofill.AndroidAutofill, android.view.ViewStructure)
    {
        androidx.ui.autofill.AndroidAutofill $r0;
        android.view.ViewStructure r1, r6, r34, r35, r36, r39, r44;
        boolean z0, z1, $z4, $z5, z7, z8, z9, z10, z15;
        java.lang.Object r3, $r10, $r11, $r13;
        androidx.ui.autofill.AutofillType r4;
        java.lang.String r5, $r16, $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9;
        androidx.ui.autofill.AutofillTree $r7, $r8;
        java.util.Set $r9;
        java.lang.Number $r12;
        android.view.View $r14;
        android.content.Context $r15;
        java.util.List $r19, r43;
        java.util.ArrayList $r20;
        java.lang.String[] $r21, $r23;
        java.lang.Object[] $r22, r46;
        android.graphics.Rect $r24, $r47;
        java.lang.NullPointerException $r25;
        java.util.Map r27, r28;
        java.util.Iterator r29, $r41;
        java.util.Map$Entry r30, r31, r32;
        androidx.ui.autofill.AutofillNode r33;
        android.view.autofill.AutofillId $r37;
        java.lang.Iterable $r38;
        java.util.Collection r40, r42, $r45;

        $r0 := @parameter0: androidx.ui.autofill.AndroidAutofill;

        r1 := @parameter1: android.view.ViewStructure;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "root");

        $r7 = virtualinvoke $r0.<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree getAutofillTree()>();

        r27 = virtualinvoke $r7.<androidx.ui.autofill.AutofillTree: java.util.Map getChildren()>();

        r6 = r1;

        z7 = 0;

        i0 = interfaceinvoke r27.<java.util.Map: int size()>();

        i7 = virtualinvoke r6.<android.view.ViewStructure: int addChildCount(int)>(i0);

        $r8 = virtualinvoke $r0.<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree getAutofillTree()>();

        r28 = virtualinvoke $r8.<androidx.ui.autofill.AutofillTree: java.util.Map getChildren()>();

        z8 = 0;

        $r9 = interfaceinvoke r28.<java.util.Map: java.util.Set entrySet()>();

        r29 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r10;

        r31 = r30;

        z9 = 0;

        $r11 = interfaceinvoke r31.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Number) $r11;

        i8 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        r32 = r30;

        z10 = 0;

        $r13 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        r33 = (androidx.ui.autofill.AutofillNode) $r13;

        r34 = virtualinvoke r1.<android.view.ViewStructure: android.view.ViewStructure newChild(int)>(i7);

        if r34 != null goto label2;

        goto label8;

     label2:
        r35 = r34;

        r36 = r35;

        z0 = 0;

        z1 = 0;

        $r37 = virtualinvoke r1.<android.view.ViewStructure: android.view.autofill.AutofillId getAutofillId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r37);

        virtualinvoke r36.<android.view.ViewStructure: void setAutofillId(android.view.autofill.AutofillId,int)>($r37, i8);

        $r14 = virtualinvoke $r0.<androidx.ui.autofill.AndroidAutofill: android.view.View getView()>();

        $r15 = virtualinvoke $r14.<android.view.View: android.content.Context getContext()>();

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.String getPackageName()>();

        $r18 = (java.lang.String) null;

        $r17 = (java.lang.String) null;

        virtualinvoke r36.<android.view.ViewStructure: void setId(int,java.lang.String,java.lang.String,java.lang.String)>(i8, $r16, $r18, $r17);

        virtualinvoke r36.<android.view.ViewStructure: void setAutofillType(int)>(1);

        $r19 = virtualinvoke r33.<androidx.ui.autofill.AutofillNode: java.util.List getAutofillTypes()>();

        $r38 = (java.lang.Iterable) $r19;

        r39 = r36;

        $r20 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r38, 10);

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>($i1);

        r40 = (java.util.Collection) $r20;

        $r41 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        r3 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.ui.autofill.AutofillType) r3;

        r42 = r40;

        r5 = staticinvoke <androidx.ui.autofill.AndroidAutofillTypeKt: java.lang.String getAndroidType(androidx.ui.autofill.AutofillType)>(r4);

        interfaceinvoke r42.<java.util.Collection: boolean add(java.lang.Object)>(r5);

        goto label3;

     label4:
        r43 = (java.util.List) r40;

        r44 = r39;

        $r45 = (java.util.Collection) r43;

        $r21 = newarray (java.lang.String)[0];

        $r22 = interfaceinvoke $r45.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r21);

        if $r22 != null goto label5;

        $r25 = new java.lang.NullPointerException;

        specialinvoke $r25.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Array<T>");

        throw $r25;

     label5:
        r46 = $r22;

        $r23 = (java.lang.String[]) r46;

        virtualinvoke r44.<android.view.ViewStructure: void setAutofillHints(java.lang.String[])>($r23);

        $r24 = virtualinvoke r33.<androidx.ui.autofill.AutofillNode: android.graphics.Rect getBoundingBox()>();

        if $r24 != null goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Autofill Warning", "Bounding box not set. \n                        Did you call perform autofillTree before the component was positioned? ");

     label6:
        $r47 = virtualinvoke r33.<androidx.ui.autofill.AutofillNode: android.graphics.Rect getBoundingBox()>();

        if $r47 != null goto label7;

        goto label8;

     label7:
        z15 = 0;

        $i2 = $r47.<android.graphics.Rect: int left>;

        $i3 = $r47.<android.graphics.Rect: int top>;

        $i4 = virtualinvoke $r47.<android.graphics.Rect: int width()>();

        $i5 = virtualinvoke $r47.<android.graphics.Rect: int height()>();

        virtualinvoke r36.<android.view.ViewStructure: void setDimens(int,int,int,int,int,int)>($i2, $i3, 0, 0, $i4, $i5);

     label8:
        i9 = i7;

        i7 = i9 + 1;

        goto label1;

     label9:
        return;
    }

    public static final void performAutofill(androidx.ui.autofill.AndroidAutofill, android.util.SparseArray)
    {
        androidx.ui.autofill.AndroidAutofill $r0;
        android.util.SparseArray r1;
        int i0, i1, i2, i3, i4;
        android.view.autofill.AutofillValue r2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6;
        kotlin.NotImplementedError $r4, $r10, $r16;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13, $r17, $r18, $r19;
        java.lang.String $r8, $r14, $r20, $r23, r26, r27, r28;
        java.lang.Throwable $r9, $r15, $r21;
        androidx.ui.autofill.AutofillTree $r22;
        java.lang.CharSequence r25;

        $r0 := @parameter0: androidx.ui.autofill.AndroidAutofill;

        r1 := @parameter1: android.util.SparseArray;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "values");

        i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        i4 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label6;

        if i4 > i1 goto label6;

     label1:
        i2 = i4;

        i4 = i4 + 1;

        i3 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i2);

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r2 = (android.view.autofill.AutofillValue) $r3;

        $z0 = virtualinvoke r2.<android.view.autofill.AutofillValue: boolean isText()>();

        if $z0 == 0 goto label2;

        $r22 = virtualinvoke $r0.<androidx.ui.autofill.AndroidAutofill: androidx.ui.autofill.AutofillTree getAutofillTree()>();

        r25 = virtualinvoke r2.<android.view.autofill.AutofillValue: java.lang.CharSequence getTextValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r25, "value.textValue");

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r25);

        virtualinvoke $r22.<androidx.ui.autofill.AutofillTree: kotlin.Unit performAutofill(int,java.lang.String)>(i3, $r23);

        goto label5;

     label2:
        $z1 = virtualinvoke r2.<android.view.autofill.AutofillValue: boolean isDate()>();

        if $z1 == 0 goto label3;

        r26 = "b/138604541: Add onFill() callback for date";

        z4 = 0;

        $r16 = new kotlin.NotImplementedError;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An operation is not implemented: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<kotlin.NotImplementedError: void <init>(java.lang.String)>($r20);

        $r21 = (java.lang.Throwable) $r16;

        throw $r21;

     label3:
        $z2 = virtualinvoke r2.<android.view.autofill.AutofillValue: boolean isList()>();

        if $z2 == 0 goto label4;

        r27 = "b/138604541: Add onFill() callback for list";

        z5 = 0;

        $r10 = new kotlin.NotImplementedError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An operation is not implemented: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<kotlin.NotImplementedError: void <init>(java.lang.String)>($r14);

        $r15 = (java.lang.Throwable) $r10;

        throw $r15;

     label4:
        $z3 = virtualinvoke r2.<android.view.autofill.AutofillValue: boolean isToggle()>();

        if $z3 == 0 goto label5;

        r28 = "b/138604541:  Add onFill() callback for toggle";

        z6 = 0;

        $r4 = new kotlin.NotImplementedError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An operation is not implemented: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<kotlin.NotImplementedError: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r4;

        throw $r9;

     label5:
        if i4 <= i1 goto label1;

     label6:
        return;
    }

