androidx.test.espresso.internal.data.model.TestArtifact
<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>
<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>
    public int hashCode()
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 * 31;

        $r2 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public final androidx.test.espresso.internal.data.model.TestArtifact copy(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        androidx.test.espresso.internal.data.model.TestArtifact r2, r3;

        r2 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "filepath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "contentType");

        r3 = new androidx.test.espresso.internal.data.model.TestArtifact;

        specialinvoke r3.<androidx.test.espresso.internal.data.model.TestArtifact: void <init>(java.lang.String,java.lang.String)>(r0, r1);

        return r3;
    }

    public static androidx.test.espresso.internal.data.model.TestArtifact copy$default(androidx.test.espresso.internal.data.model.TestArtifact, java.lang.String, java.lang.String, int, java.lang.Object)
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.lang.String r3, r4;

        r0 := @parameter0: androidx.test.espresso.internal.data.model.TestArtifact;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

     label2:
        $r2 = virtualinvoke r0.<androidx.test.espresso.internal.data.model.TestArtifact: androidx.test.espresso.internal.data.model.TestArtifact copy(java.lang.String,java.lang.String)>(r3, r4);

        return $r2;
    }

    public final java.lang.String component1()
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        return $r1;
    }

    public final java.lang.String component2()
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        return $r1;
    }

    public final java.lang.String getContentType()
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        return $r1;
    }

    public final java.lang.String getFilepath()
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        $r1 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String r0, $r7, r9;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5, $r6;
        androidx.test.espresso.internal.data.model.TestArtifact r8;

        r8 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        r0 = r8.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        r9 = r8.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TestArtifact(filepath=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contentType=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0;
        java.lang.String r1, r2;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "filepath");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "contentType");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath> = r1;

        r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.test.espresso.internal.data.model.TestArtifact r0, r6;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.Object r5;

        r0 := @this: androidx.test.espresso.internal.data.model.TestArtifact;

        r5 := @parameter0: java.lang.Object;

        if r0 != r5 goto label1;

        return 1;

     label1:
        $z0 = r5 instanceof androidx.test.espresso.internal.data.model.TestArtifact;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r6 = (androidx.test.espresso.internal.data.model.TestArtifact) r5;

        $r2 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        $r1 = r6.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String filepath>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        $r3 = r6.<androidx.test.espresso.internal.data.model.TestArtifact: java.lang.String contentType>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

