org.hamcrest.BaseDescription
    public void <init>()
    {
        org.hamcrest.BaseDescription $r0;

        $r0 := @this: org.hamcrest.BaseDescription;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private org.hamcrest.Description appendList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Iterator $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        org.hamcrest.SelfDescribing $r6;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Iterator;

        $z0 = 0;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r1);

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r2);

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.hamcrest.SelfDescribing) $r5;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

        $z0 = 1;

        goto label1;

     label3:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        return $r0;
    }

    private org.hamcrest.Description appendValueList(java.lang.String, java.lang.String, java.lang.String, java.util.Iterator)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Iterator $r4;
        org.hamcrest.Description $r5;
        org.hamcrest.internal.SelfDescribingValueIterator $r6;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Iterator;

        $r6 = new org.hamcrest.internal.SelfDescribingValueIterator;

        specialinvoke $r6.<org.hamcrest.internal.SelfDescribingValueIterator: void <init>(java.util.Iterator)>($r4);

        $r5 = specialinvoke $r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>($r1, $r2, $r3, $r6);

        return $r5;
    }

    private java.lang.String descriptionOf(java.lang.Object)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.Object $r1;
        java.lang.String $r2, $r5, $r7;
        java.lang.Throwable $r3;
        java.lang.Class $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r6;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r6 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void toJavaSyntax(char)
    {
        org.hamcrest.BaseDescription $r0;
        char $c0;

        $r0 := @this: org.hamcrest.BaseDescription;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 9: goto label5;
            case 10: goto label3;
            case 13: goto label4;
            case 34: goto label2;
            default: goto label1;
        };

     label1:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>($c0);

        return;

     label2:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\\"");

        return;

     label3:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\n");

        return;

     label4:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\r");

        return;

     label5:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("\\t");

        return;
    }

    private void toJavaSyntax(java.lang.String)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.String $r1;
        int $i0, $i1;
        char $c2;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        specialinvoke $r0.<org.hamcrest.BaseDescription: void toJavaSyntax(char)>($c2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        return;
    }

<org.hamcrest.BaseDescription: void append(char)>
    protected void append(java.lang.String)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.String $r1;
        int $i0, $i1;
        char $c2;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>($c2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)
    {
        org.hamcrest.BaseDescription $r0;
        org.hamcrest.SelfDescribing $r1;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: org.hamcrest.SelfDescribing;

        interfaceinvoke $r1.<org.hamcrest.SelfDescribing: void describeTo(org.hamcrest.Description)>($r0);

        return $r0;
    }

    public org.hamcrest.Description appendText(java.lang.String)
    {
        org.hamcrest.BaseDescription $r0;
        java.lang.String $r1;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r1);

        return $r0;
    }

    public org.hamcrest.Description appendValue(java.lang.Object)
    {
        org.hamcrest.BaseDescription $r0;
        org.hamcrest.internal.ArrayIterator $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.String $r3;
        java.lang.Character $r4;
        char $c0;
        java.lang.Class $r5;

        $r0 := @this: org.hamcrest.BaseDescription;

        $r2 := @parameter0: java.lang.Object;

        if $r2 != null goto label1;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("null");

        return $r0;

     label1:
        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r3 = (java.lang.String) $r2;

        specialinvoke $r0.<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>($r3);

        return $r0;

     label2:
        $z0 = $r2 instanceof java.lang.Character;

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        $r4 = (java.lang.Character) $r2;

        $c0 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        specialinvoke $r0.<org.hamcrest.BaseDescription: void toJavaSyntax(char)>($c0);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(34);

        return $r0;

     label3:
        $z0 = $r2 instanceof java.lang.Short;

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r3 = specialinvoke $r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>($r2);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("s>");

        return $r0;

     label4:
        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r3 = specialinvoke $r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>($r2);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("L>");

        return $r0;

     label5:
        $z0 = $r2 instanceof java.lang.Float;

        if $z0 == 0 goto label6;

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r3 = specialinvoke $r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>($r2);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>("F>");

        return $r0;

     label6:
        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label7;

        $r1 = new org.hamcrest.internal.ArrayIterator;

        specialinvoke $r1.<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>($r2);

        specialinvoke $r0.<org.hamcrest.BaseDescription: org.hamcrest.Description appendValueList(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)>("[", ", ", "]", $r1);

        return $r0;

     label7:
        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(60);

        $r3 = specialinvoke $r0.<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>($r2);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(java.lang.String)>($r3);

        virtualinvoke $r0.<org.hamcrest.BaseDescription: void append(char)>(62);

        return $r0;
    }

