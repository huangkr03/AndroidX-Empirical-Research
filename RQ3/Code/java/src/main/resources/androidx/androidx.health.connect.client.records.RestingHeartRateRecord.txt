androidx.health.connect.client.records.RestingHeartRateRecord
<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.RestingHeartRateRecord$Companion Companion>
<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>
<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant time>
<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset zoneOffset>
<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata metadata>
<androidx.health.connect.client.records.RestingHeartRateRecord: java.lang.String REST_HEART_RATE_TYPE_NAME>
<androidx.health.connect.client.records.RestingHeartRateRecord: java.lang.String BPM_FIELD_NAME>
<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_AVG>
<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_MIN>
<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_MAX>
    public void <init>(long, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata)
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        long l0, $l1;
        java.time.Instant r1;
        java.time.ZoneOffset r2;
        androidx.health.connect.client.records.metadata.Metadata r3;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        l0 := @parameter0: long;

        r1 := @parameter1: java.time.Instant;

        r2 := @parameter2: java.time.ZoneOffset;

        r3 := @parameter3: androidx.health.connect.client.records.metadata.Metadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "time");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "metadata");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute> = l0;

        r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant time> = r1;

        r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset zoneOffset> = r2;

        r0.<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata metadata> = r3;

        $l1 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>;

        staticinvoke <androidx.health.connect.client.records.UtilsKt: void requireNonNegative(long,java.lang.String)>($l1, "beatsPerMinute");

        return;
    }

    public void <init>(long, java.time.Instant, java.time.ZoneOffset, androidx.health.connect.client.records.metadata.Metadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        long l0;
        java.time.Instant r1;
        java.time.ZoneOffset r2;
        int i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.health.connect.client.records.metadata.Metadata r4;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        l0 := @parameter0: long;

        r1 := @parameter1: java.time.Instant;

        r2 := @parameter2: java.time.ZoneOffset;

        r4 := @parameter3: androidx.health.connect.client.records.metadata.Metadata;

        i1 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 8;

        if $i2 == 0 goto label1;

        r4 = <androidx.health.connect.client.records.metadata.Metadata: androidx.health.connect.client.records.metadata.Metadata EMPTY>;

     label1:
        specialinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: void <init>(long,java.time.Instant,java.time.ZoneOffset,androidx.health.connect.client.records.metadata.Metadata)>(l0, r1, r2, r4);

        return;
    }

    public final long getBeatsPerMinute()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        long $l0;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        $l0 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>;

        return $l0;
    }

    public java.time.Instant getTime()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        $r1 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant time>;

        return $r1;
    }

    public java.time.ZoneOffset getZoneOffset()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        $r1 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset zoneOffset>;

        return $r1;
    }

    public androidx.health.connect.client.records.metadata.Metadata getMetadata()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        androidx.health.connect.client.records.metadata.Metadata $r1;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        $r1 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata metadata>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0, $r2, $r4, $r7, $r10;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1;
        byte $b2;
        java.time.Instant $r3, $r5;
        java.time.ZoneOffset $r6, $r8;
        androidx.health.connect.client.records.metadata.Metadata $r9, $r11;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.records.RestingHeartRateRecord;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $l1 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>;

        $r2 = (androidx.health.connect.client.records.RestingHeartRateRecord) r1;

        $l0 = $r2.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant getTime()>();

        $r4 = (androidx.health.connect.client.records.RestingHeartRateRecord) r1;

        $r5 = virtualinvoke $r4.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant getTime()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset getZoneOffset()>();

        $r7 = (androidx.health.connect.client.records.RestingHeartRateRecord) r1;

        $r8 = virtualinvoke $r7.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset getZoneOffset()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r8);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r9 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $r10 = (androidx.health.connect.client.records.RestingHeartRateRecord) r1;

        $r11 = virtualinvoke $r10.<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r11);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord r0;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, i9, i10, $i11, i12, i13;
        java.time.Instant $r1;
        java.time.ZoneOffset $r2;
        androidx.health.connect.client.records.metadata.Metadata $r3;
        byte b8;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord;

        b8 = 0;

        $i1 = 31 * b8;

        $l0 = r0.<androidx.health.connect.client.records.RestingHeartRateRecord: long beatsPerMinute>;

        $i2 = staticinvoke <java.lang.Long: int hashCode(long)>($l0);

        i9 = $i1 + $i2;

        $i3 = 31 * i9;

        $r1 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.Instant getTime()>();

        $i4 = virtualinvoke $r1.<java.time.Instant: int hashCode()>();

        i10 = $i3 + $i4;

        $i5 = 31 * i10;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: java.time.ZoneOffset getZoneOffset()>();

        if $r2 == null goto label1;

        $i11 = virtualinvoke $r2.<java.time.ZoneOffset: int hashCode()>();

        goto label2;

     label1:
        $i11 = 0;

     label2:
        i12 = $i5 + $i11;

        $i6 = 31 * i12;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $i7 = virtualinvoke $r3.<androidx.health.connect.client.records.metadata.Metadata: int hashCode()>();

        i13 = $i6 + $i7;

        return i13;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord$Companion $r0;
        androidx.health.connect.client.aggregate.AggregateMetric$AggregationType $r1, $r4, $r7;
        androidx.health.connect.client.aggregate.AggregateMetric$Companion $r2, $r5, $r8;
        androidx.health.connect.client.aggregate.AggregateMetric $r3, $r6, $r9;

        $r0 = new androidx.health.connect.client.records.RestingHeartRateRecord$Companion;

        specialinvoke $r0.<androidx.health.connect.client.records.RestingHeartRateRecord$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.records.RestingHeartRateRecord$Companion Companion> = $r0;

        $r2 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r1 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType AVERAGE>;

        $r3 = virtualinvoke $r2.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric longMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("RestingHeartRate", $r1, "bpm");

        <androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_AVG> = $r3;

        $r5 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r4 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType MINIMUM>;

        $r6 = virtualinvoke $r5.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric longMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("RestingHeartRate", $r4, "bpm");

        <androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_MIN> = $r6;

        $r8 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r7 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType MAXIMUM>;

        $r9 = virtualinvoke $r8.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric longMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("RestingHeartRate", $r7, "bpm");

        <androidx.health.connect.client.records.RestingHeartRateRecord: androidx.health.connect.client.aggregate.AggregateMetric BPM_MAX> = $r9;

        return;
    }

androidx.health.connect.client.records.RestingHeartRateRecord$Companion
    private void <init>()
    {
        androidx.health.connect.client.records.RestingHeartRateRecord$Companion r0;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.RestingHeartRateRecord$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.records.RestingHeartRateRecord$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.records.RestingHeartRateRecord$Companion: void <init>()>();

        return;
    }

