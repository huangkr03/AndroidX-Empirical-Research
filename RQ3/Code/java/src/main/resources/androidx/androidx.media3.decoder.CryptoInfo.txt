androidx.media3.decoder.CryptoInfo
<androidx.media3.decoder.CryptoInfo: byte[] iv>
<androidx.media3.decoder.CryptoInfo: byte[] key>
<androidx.media3.decoder.CryptoInfo: int mode>
<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData>
<androidx.media3.decoder.CryptoInfo: int[] numBytesOfEncryptedData>
<androidx.media3.decoder.CryptoInfo: int numSubSamples>
<androidx.media3.decoder.CryptoInfo: int encryptedBlocks>
<androidx.media3.decoder.CryptoInfo: int clearBlocks>
<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>
<androidx.media3.decoder.CryptoInfo: androidx.media3.decoder.CryptoInfo$PatternHolderV24 patternHolder>
    public void <init>()
    {
        androidx.media3.decoder.CryptoInfo r0;
        android.media.MediaCodec$CryptoInfo $r1, $r2;
        int $i0;
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 $r4;

        r0 := @this: androidx.media3.decoder.CryptoInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.media.MediaCodec$CryptoInfo;

        specialinvoke $r1.<android.media.MediaCodec$CryptoInfo: void <init>()>();

        r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo> = $r1;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r4 = new androidx.media3.decoder.CryptoInfo$PatternHolderV24;

        $r2 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        specialinvoke $r4.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: void <init>(android.media.MediaCodec$CryptoInfo,androidx.media3.decoder.CryptoInfo$1)>($r2, null);

        goto label2;

     label1:
        $r4 = null;

     label2:
        r0.<androidx.media3.decoder.CryptoInfo: androidx.media3.decoder.CryptoInfo$PatternHolderV24 patternHolder> = $r4;

        return;
    }

    public void set(int, int[], int[], byte[], byte[], int, int, int)
    {
        androidx.media3.decoder.CryptoInfo r0;
        int i0, i1, i2, i3, $i4;
        int[] r1, r2;
        byte[] r3, r4;
        android.media.MediaCodec$CryptoInfo $r5, $r6, $r7, $r8, $r9, $r10;
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 $r11, $r13;
        java.lang.Object $r12;

        r0 := @this: androidx.media3.decoder.CryptoInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        r3 := @parameter3: byte[];

        r4 := @parameter4: byte[];

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        r0.<androidx.media3.decoder.CryptoInfo: int numSubSamples> = i0;

        r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData> = r1;

        r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfEncryptedData> = r2;

        r0.<androidx.media3.decoder.CryptoInfo: byte[] key> = r3;

        r0.<androidx.media3.decoder.CryptoInfo: byte[] iv> = r4;

        r0.<androidx.media3.decoder.CryptoInfo: int mode> = i1;

        r0.<androidx.media3.decoder.CryptoInfo: int encryptedBlocks> = i2;

        r0.<androidx.media3.decoder.CryptoInfo: int clearBlocks> = i3;

        $r5 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r5.<android.media.MediaCodec$CryptoInfo: int numSubSamples> = i0;

        $r6 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r6.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfClearData> = r1;

        $r7 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r7.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfEncryptedData> = r2;

        $r8 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r8.<android.media.MediaCodec$CryptoInfo: byte[] key> = r3;

        $r9 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r9.<android.media.MediaCodec$CryptoInfo: byte[] iv> = r4;

        $r10 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r10.<android.media.MediaCodec$CryptoInfo: int mode> = i1;

        $i4 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i4 < 24 goto label1;

        $r11 = r0.<androidx.media3.decoder.CryptoInfo: androidx.media3.decoder.CryptoInfo$PatternHolderV24 patternHolder>;

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (androidx.media3.decoder.CryptoInfo$PatternHolderV24) $r12;

        staticinvoke <androidx.media3.decoder.CryptoInfo$PatternHolderV24: void access$100(androidx.media3.decoder.CryptoInfo$PatternHolderV24,int,int)>($r13, i2, i3);

     label1:
        return;
    }

    public android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo()
    {
        androidx.media3.decoder.CryptoInfo r0;
        android.media.MediaCodec$CryptoInfo $r1;

        r0 := @this: androidx.media3.decoder.CryptoInfo;

        $r1 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        return $r1;
    }

    public void increaseClearDataFirstSubSampleBy(int)
    {
        androidx.media3.decoder.CryptoInfo r0;
        int i0, $i1, $i2;
        int[] $r1, $r2, $r3, $r4;
        android.media.MediaCodec$CryptoInfo $r5;

        r0 := @this: androidx.media3.decoder.CryptoInfo;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData>;

        if $r1 != null goto label2;

        $r3 = newarray (int)[1];

        r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData> = $r3;

        $r5 = r0.<androidx.media3.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r4 = r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData>;

        $r5.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfClearData> = $r4;

     label2:
        $r2 = r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData>;

        $i1 = $r2[0];

        $i2 = $i1 + i0;

        $r2[0] = $i2;

        return;
    }

androidx.media3.decoder.CryptoInfo$1
androidx.media3.decoder.CryptoInfo$PatternHolderV24
<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>
<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo$Pattern pattern>
    private void <init>(android.media.MediaCodec$CryptoInfo)
    {
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 r0;
        android.media.MediaCodec$CryptoInfo r1;
        android.media.MediaCodec$CryptoInfo$Pattern $r2;

        r0 := @this: androidx.media3.decoder.CryptoInfo$PatternHolderV24;

        r1 := @parameter0: android.media.MediaCodec$CryptoInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo> = r1;

        $r2 = new android.media.MediaCodec$CryptoInfo$Pattern;

        specialinvoke $r2.<android.media.MediaCodec$CryptoInfo$Pattern: void <init>(int,int)>(0, 0);

        r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo$Pattern pattern> = $r2;

        return;
    }

    private void set(int, int)
    {
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 r0;
        int i0, i1;
        android.media.MediaCodec$CryptoInfo$Pattern $r1, $r2;
        android.media.MediaCodec$CryptoInfo $r3;

        r0 := @this: androidx.media3.decoder.CryptoInfo$PatternHolderV24;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo$Pattern pattern>;

        virtualinvoke $r1.<android.media.MediaCodec$CryptoInfo$Pattern: void set(int,int)>(i0, i1);

        $r3 = r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo>;

        $r2 = r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo$Pattern pattern>;

        virtualinvoke $r3.<android.media.MediaCodec$CryptoInfo: void setPattern(android.media.MediaCodec$CryptoInfo$Pattern)>($r2);

        return;
    }

    void <init>(android.media.MediaCodec$CryptoInfo, androidx.media3.decoder.CryptoInfo$1)
    {
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 r0;
        android.media.MediaCodec$CryptoInfo r1;
        androidx.media3.decoder.CryptoInfo$1 r2;

        r0 := @this: androidx.media3.decoder.CryptoInfo$PatternHolderV24;

        r1 := @parameter0: android.media.MediaCodec$CryptoInfo;

        r2 := @parameter1: androidx.media3.decoder.CryptoInfo$1;

        specialinvoke r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: void <init>(android.media.MediaCodec$CryptoInfo)>(r1);

        return;
    }

    static void access$100(androidx.media3.decoder.CryptoInfo$PatternHolderV24, int, int)
    {
        androidx.media3.decoder.CryptoInfo$PatternHolderV24 r0;
        int i0, i1;

        r0 := @parameter0: androidx.media3.decoder.CryptoInfo$PatternHolderV24;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.decoder.CryptoInfo$PatternHolderV24: void set(int,int)>(i0, i1);

        return;
    }

