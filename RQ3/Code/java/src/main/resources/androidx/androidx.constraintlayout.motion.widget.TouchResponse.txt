androidx.constraintlayout.motion.widget.TouchResponse
<androidx.constraintlayout.motion.widget.TouchResponse: java.lang.String TAG>
<androidx.constraintlayout.motion.widget.TouchResponse: boolean DEBUG>
<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>
<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>
<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>
<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>
<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>
<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>
<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>
<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>
<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterX>
<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterY>
<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>
<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode>
<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>
<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>
<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>
<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>
<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>
<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX>
<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY>
<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>
<androidx.constraintlayout.motion.widget.TouchResponse: int SEC_TO_MILLISECONDS>
<androidx.constraintlayout.motion.widget.TouchResponse: float EPSILON>
<androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>
<androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_UP>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_DOWN>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_LEFT>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_RIGHT>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_START>
<androidx.constraintlayout.motion.widget.TouchResponse: int TOUCH_END>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_TOP>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_LEFT>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_RIGHT>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_BOTTOM>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_MIDDLE>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_START>
<androidx.constraintlayout.motion.widget.TouchResponse: int SIDE_END>
<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity>
<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration>
<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop>
<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>
<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags>
<androidx.constraintlayout.motion.widget.TouchResponse: int FLAG_DISABLE_POST_SCROLL>
<androidx.constraintlayout.motion.widget.TouchResponse: int FLAG_DISABLE_SCROLL>
<androidx.constraintlayout.motion.widget.TouchResponse: int FLAG_SUPPORT_SCROLL_UP>
<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold>
<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping>
<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass>
<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness>
<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold>
<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary>
<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode>
<androidx.constraintlayout.motion.widget.TouchResponse: int COMPLETE_MODE_CONTINUOUS_VELOCITY>
<androidx.constraintlayout.motion.widget.TouchResponse: int COMPLETE_MODE_SPRING>
    void <init>(android.content.Context, androidx.constraintlayout.motion.widget.MotionLayout, org.xmlpull.v1.XmlPullParser)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.content.Context r1;
        androidx.constraintlayout.motion.widget.MotionLayout r2;
        org.xmlpull.v1.XmlPullParser r3;
        float[] $r4;
        int[] $r5;
        android.util.AttributeSet $r6;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.constraintlayout.motion.widget.MotionLayout;

        r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterX> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterY> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = 0.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        $r4 = newarray (float)[2];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt> = $r4;

        $r5 = newarray (int)[2];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc> = $r5;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = 4.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = 1.2F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = 1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = 10.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping> = 10.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout> = r2;

        $r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r3);

        specialinvoke r0.<androidx.constraintlayout.motion.widget.TouchResponse: void fillFromAttributeList(android.content.Context,android.util.AttributeSet)>(r1, $r6);

        return;
    }

    public void <init>(androidx.constraintlayout.motion.widget.MotionLayout, androidx.constraintlayout.motion.widget.OnSwipe)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        androidx.constraintlayout.motion.widget.MotionLayout r1;
        androidx.constraintlayout.motion.widget.OnSwipe r2;
        float[] $r3, $r7, $r9, $r11, $r13;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        float[][] $r5, $r6, $r8, $r10, $r12;
        float $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: androidx.constraintlayout.motion.widget.MotionLayout;

        r2 := @parameter1: androidx.constraintlayout.motion.widget.OnSwipe;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterX> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mRotateCenterY> = 0.5F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId> = -1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = 0.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        $r3 = newarray (float)[2];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt> = $r3;

        $r4 = newarray (int)[2];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc> = $r4;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = 4.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = 1.2F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = 1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = 10.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping> = 10.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass> = 1.0F;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode> = 0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout> = r1;

        $i0 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getTouchAnchorId()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = $i0;

        $i1 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getTouchAnchorSide()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = $i1;

        $i2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        if $i2 == -1 goto label1;

        $r10 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r11 = $r10[$i15];

        $f11 = $r11[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $f11;

        $r12 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r13 = $r12[$i16];

        $f12 = $r13[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $f12;

     label1:
        $i3 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getDragDirection()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = $i3;

        $i5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r5 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i4 = lengthof $r5;

        if $i5 >= $i4 goto label2;

        $r6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r7 = $r6[$i13];

        $f9 = $r7[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = $f9;

        $r8 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i14 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r9 = $r8[$i14];

        $f10 = $r9[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = $f10;

        goto label3;

     label2:
        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode> = 1;

     label3:
        $f1 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getMaxVelocity()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = $f1;

        $f2 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getMaxAcceleration()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = $f2;

        $z0 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: boolean getMoveWhenScrollAtTop()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = $z0;

        $f3 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getDragScale()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = $f3;

        $f4 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getDragThreshold()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = $f4;

        $i6 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getTouchRegionId()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = $i6;

        $i7 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getOnTouchUp()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = $i7;

        $i8 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getNestedScrollFlags()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = $i8;

        $i9 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getLimitBoundsTo()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = $i9;

        $i10 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getRotationCenterId()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId> = $i10;

        $i11 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getSpringBoundary()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary> = $i11;

        $f5 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getSpringDamping()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping> = $f5;

        $f6 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getSpringMass()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass> = $f6;

        $f7 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getSpringStiffness()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness> = $f7;

        $f8 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: float getSpringStopThreshold()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold> = $f8;

        $i12 = virtualinvoke r2.<androidx.constraintlayout.motion.widget.OnSwipe: int getAutoCompleteMode()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode> = $i12;

        return;
    }

    public void setRTL(boolean)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        boolean z0;
        float[][] $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33;
        float[] $r2, $r5, $r8, $r11, $r14, $r16, $r19, $r21, $r23, $r26, $r29, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r24 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r22 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r23 = $r22[3];

        $r24[4] = $r23;

        $r27 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r25 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r26 = $r25[2];

        $r27[5] = $r26;

        $r30 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r28 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r29 = $r28[2];

        $r30[5] = $r29;

        $r33 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r31 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r32 = $r31[1];

        $r33[6] = $r32;

        goto label2;

     label1:
        $r3 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r1 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r2 = $r1[2];

        $r3[4] = $r2;

        $r6 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r4 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $r5 = $r4[3];

        $r6[5] = $r5;

        $r9 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r7 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r8 = $r7[1];

        $r9[5] = $r8;

        $r12 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r10 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $r11 = $r10[2];

        $r12[6] = $r11;

     label2:
        $r13 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r14 = $r13[$i0];

        $f0 = $r14[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $f0;

        $r15 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r16 = $r15[$i1];

        $f1 = $r16[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $f1;

        $i3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r17 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i2 = lengthof $r17;

        if $i3 < $i2 goto label3;

        return;

     label3:
        $r18 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r19 = $r18[$i4];

        $f2 = $r19[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = $f2;

        $r20 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r21 = $r20[$i5];

        $f3 = $r21[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = $f3;

        return;
    }

    private void fillFromAttributeList(android.content.Context, android.util.AttributeSet)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        int[] $r4;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r4 = <androidx.constraintlayout.widget.R$styleable: int[] OnSwipe>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r4);

        specialinvoke r0.<androidx.constraintlayout.motion.widget.TouchResponse: void fill(android.content.res.TypedArray)>(r3);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void fill(android.content.res.TypedArray)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.content.res.TypedArray r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f17, $f18, $f19, $f20;
        boolean $z0, $z1;
        float[][] $r2, $r3, $r5, $r7, $r9;
        float[] $r4, $r6, $r8, $r10;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.content.res.TypedArray;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getIndexCount()>();

        i45 = 0;

     label01:
        if i45 >= i0 goto label22;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getIndex(int)>(i45);

        $i2 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchAnchorId>;

        if i1 != $i2 goto label02;

        $i43 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $i44 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i43);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = $i44;

        goto label21;

     label02:
        $i3 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchAnchorSide>;

        if i1 != $i3 goto label03;

        $i39 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $i40 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i39);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide> = $i40;

        $r7 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i41 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r8 = $r7[$i41];

        $f19 = $r8[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = $f19;

        $r9 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES>;

        $i42 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorSide>;

        $r10 = $r9[$i42];

        $f20 = $r10[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = $f20;

        goto label21;

     label03:
        $i4 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragDirection>;

        if i1 != $i4 goto label05;

        $i33 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $i34 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i33);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide> = $i34;

        $i36 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r2 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i35 = lengthof $r2;

        if $i36 >= $i35 goto label04;

        $r3 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i37 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r4 = $r3[$i37];

        $f17 = $r4[0];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = $f17;

        $r5 = <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION>;

        $i38 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchSide>;

        $r6 = $r5[$i38];

        $f18 = $r6[1];

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = $f18;

        goto label21;

     label04:
        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX> = #NaNF;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode> = 1;

        goto label21;

     label05:
        $i5 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_maxVelocity>;

        if i1 != $i5 goto label06;

        $f14 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity>;

        $f15 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f14);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = $f15;

        goto label21;

     label06:
        $i6 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_maxAcceleration>;

        if i1 != $i6 goto label07;

        $f12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration>;

        $f13 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f12);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = $f13;

        goto label21;

     label07:
        $i7 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_moveWhenScrollAtTop>;

        if i1 != $i7 goto label08;

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop>;

        $z1 = virtualinvoke r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i1, $z0);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop> = $z1;

        goto label21;

     label08:
        $i8 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragScale>;

        if i1 != $i8 goto label09;

        $f10 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        $f11 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f10);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale> = $f11;

        goto label21;

     label09:
        $i9 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_dragThreshold>;

        if i1 != $i9 goto label10;

        $f8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold>;

        $f9 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f8);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold> = $f9;

        goto label21;

     label10:
        $i10 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_touchRegionId>;

        if i1 != $i10 goto label11;

        $i31 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        $i32 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i31);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId> = $i32;

        goto label21;

     label11:
        $i11 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_onTouchUp>;

        if i1 != $i11 goto label12;

        $i29 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        $i30 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i29);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = $i30;

        goto label21;

     label12:
        $i12 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_nestedScrollFlags>;

        if i1 != $i12 goto label13;

        $i28 = virtualinvoke r1.<android.content.res.TypedArray: int getInteger(int,int)>(i1, 0);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags> = $i28;

        goto label21;

     label13:
        $i13 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_limitBoundsTo>;

        if i1 != $i13 goto label14;

        $i27 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo> = $i27;

        goto label21;

     label14:
        $i14 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_rotationCenterId>;

        if i1 != $i14 goto label15;

        $i25 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>;

        $i26 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, $i25);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId> = $i26;

        goto label21;

     label15:
        $i15 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_springDamping>;

        if i1 != $i15 goto label16;

        $f6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping>;

        $f7 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f6);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping> = $f7;

        goto label21;

     label16:
        $i16 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_springMass>;

        if i1 != $i16 goto label17;

        $f4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass>;

        $f5 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f4);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass> = $f5;

        goto label21;

     label17:
        $i17 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_springStiffness>;

        if i1 != $i17 goto label18;

        $f2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness>;

        $f3 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f2);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness> = $f3;

        goto label21;

     label18:
        $i18 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_springStopThreshold>;

        if i1 != $i18 goto label19;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold>;

        $f1 = virtualinvoke r1.<android.content.res.TypedArray: float getFloat(int,float)>(i1, $f0);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold> = $f1;

        goto label21;

     label19:
        $i19 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_springBoundary>;

        if i1 != $i19 goto label20;

        $i23 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary>;

        $i24 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i23);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary> = $i24;

        goto label21;

     label20:
        $i20 = <androidx.constraintlayout.widget.R$styleable: int OnSwipe_autoCompleteMode>;

        if i1 != $i20 goto label21;

        $i21 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode>;

        $i22 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i1, $i21);

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode> = $i22;

     label21:
        i45 = i45 + 1;

        goto label01;

     label22:
        return;
    }

    void setUpTouchEvent(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = f0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = f1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        return;
    }

    void processTouchRotateEvent(android.view.MotionEvent, androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker, int, androidx.constraintlayout.motion.widget.MotionScene)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.view.MotionEvent r1;
        androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i40, $i42, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i68, $i69, $i70;
        androidx.constraintlayout.motion.widget.MotionScene r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, f64, f65, $f66, f67, $f68, f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, f78, $f79, f80, f81, f82, f83, f84, f85, f86, $f87, f88, f89, f90, f91, f92, f93, $f94, f95, $f96, f97, f98, f99, f100, f101, $f102, f103, $f104;
        androidx.constraintlayout.motion.widget.MotionLayout $r4, $r5, $r6, $r9, $r10, $r11, $r13, $r16, $r17, $r18, $r20, $r23, $r25, $r28, $r29, $r30, $r33, $r36, $r39, $r42, $r43, $r45, $r48, $r50, $r56, $r57, $r61;
        byte $b6, $b8, $b9, $b10, $b11, $b37, $b38, $b39, $b41, $b43, $b44, $b45, $b66, $b67, $b71, $b72;
        boolean $z0, $z1, $z2, $z3;
        float[] $r7, $r8, $r12, $r14, $r15, $r31, $r34, $r37, $r38, $r40, $r41;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, d37, d38;
        int[] $r19, $r21, $r22, $r24, $r26, $r27, $r44, $r46, $r47, $r49, $r51, $r52;
        androidx.constraintlayout.motion.widget.MotionLayout$TransitionState $r32, $r35;
        android.view.View r53, r55, r58, r60;
        androidx.constraintlayout.motion.widget.MotionController r54, r59;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.constraintlayout.motion.widget.MotionScene;

        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label18;
            case 2: goto label02;
            default: goto label34;
        };

     label01:
        $f62 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $f62;

        $f63 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $f63;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        goto label34;

     label02:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY>;

        f0 = $f2 - $f3;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX>;

        f1 = $f4 - $f5;

        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i2 = virtualinvoke $r4.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        $f6 = (float) $i2;

        f64 = $f6 / 2.0F;

        $r5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i3 = virtualinvoke $r5.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $f7 = (float) $i3;

        f65 = $f7 / 2.0F;

        $i4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>;

        if $i4 == -1 goto label03;

        $r23 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i24 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>;

        r53 = virtualinvoke $r23.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i24);

        $r25 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r24 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        virtualinvoke $r25.<androidx.constraintlayout.motion.widget.MotionLayout: void getLocationOnScreen(int[])>($r24);

        $r26 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i25 = $r26[0];

        $f25 = (float) $i25;

        $i26 = virtualinvoke r53.<android.view.View: int getLeft()>();

        $i27 = virtualinvoke r53.<android.view.View: int getRight()>();

        $i28 = $i26 + $i27;

        $f26 = (float) $i28;

        $f27 = $f26 / 2.0F;

        f64 = $f25 + $f27;

        $r27 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i29 = $r27[1];

        $f28 = (float) $i29;

        $i30 = virtualinvoke r53.<android.view.View: int getTop()>();

        $i31 = virtualinvoke r53.<android.view.View: int getBottom()>();

        $i32 = $i30 + $i31;

        $f29 = (float) $i32;

        $f30 = $f29 / 2.0F;

        f65 = $f28 + $f30;

        goto label05;

     label03:
        $i5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i5 == -1 goto label05;

        $r17 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        r54 = virtualinvoke $r17.<androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionController getMotionController(int)>($i13);

        $r18 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i14 = virtualinvoke r54.<androidx.constraintlayout.motion.widget.MotionController: int getAnimateRelativeTo()>();

        r55 = virtualinvoke $r18.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i14);

        if r55 != null goto label04;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TouchResponse", "could not find view to animate to");

        goto label05;

     label04:
        $r20 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r19 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        virtualinvoke $r20.<androidx.constraintlayout.motion.widget.MotionLayout: void getLocationOnScreen(int[])>($r19);

        $r21 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i15 = $r21[0];

        $f19 = (float) $i15;

        $i16 = virtualinvoke r55.<android.view.View: int getLeft()>();

        $i17 = virtualinvoke r55.<android.view.View: int getRight()>();

        $i18 = $i16 + $i17;

        $f20 = (float) $i18;

        $f21 = $f20 / 2.0F;

        f64 = $f19 + $f21;

        $r22 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i19 = $r22[1];

        $f22 = (float) $i19;

        $i20 = virtualinvoke r55.<android.view.View: int getTop()>();

        $i21 = virtualinvoke r55.<android.view.View: int getBottom()>();

        $i22 = $i20 + $i21;

        $f23 = (float) $i22;

        $f24 = $f23 / 2.0F;

        f65 = $f22 + $f24;

     label05:
        $f66 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        f67 = $f66 - f64;

        $f68 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        f69 = $f68 - f65;

        $f70 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f71 = $f70 - f65;

        $d9 = (double) $f71;

        $f72 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f73 = $f72 - f64;

        $d10 = (double) $f73;

        d11 = staticinvoke <java.lang.Math: double atan2(double,double)>($d9, $d10);

        $f74 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY>;

        $f75 = $f74 - f65;

        $d12 = (double) $f75;

        $f76 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX>;

        $f77 = $f76 - f64;

        $d13 = (double) $f77;

        d14 = staticinvoke <java.lang.Math: double atan2(double,double)>($d12, $d13);

        $d15 = d11 - d14;

        $d16 = $d15 * 180.0;

        $d17 = $d16 / 3.141592653589793;

        f78 = (float) $d17;

        $b66 = f78 cmpl 330.0F;

        if $b66 <= 0 goto label06;

        f78 = f78 - 360.0F;

        goto label07;

     label06:
        $b6 = f78 cmpg -330.0F;

        if $b6 >= 0 goto label07;

        f78 = f78 + 360.0F;

     label07:
        $f79 = staticinvoke <java.lang.Math: float abs(float)>(f78);

        $d18 = (double) $f79;

        $b67 = $d18 cmpl 0.01;

        if $b67 > 0 goto label08;

        $z1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if $z1 == 0 goto label34;

     label08:
        $r6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f80 = virtualinvoke $r6.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if $z0 != 0 goto label09;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 1;

        $r16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r16.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f80);

     label09:
        $i7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i7 == -1 goto label10;

        $r13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r13.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i12, f80, $f16, $f15, $r12);

        $r15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r14 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f17 = $r14[1];

        $d0 = (double) $f17;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>($d0);

        $f18 = (float) $d1;

        $r15[1] = $f18;

        goto label11;

     label10:
        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r7[1] = 360.0F;

     label11:
        $f8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        $f10 = f78 * $f8;

        $r8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f9 = $r8[1];

        f81 = $f10 / $f9;

        $f11 = f80 + f81;

        $f12 = staticinvoke <java.lang.Math: float min(float,float)>($f11, 1.0F);

        f82 = staticinvoke <java.lang.Math: float max(float,float)>($f12, 0.0F);

        $r9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f83 = virtualinvoke $r9.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $b8 = f82 cmpl f83;

        if $b8 == 0 goto label16;

        $b9 = f83 cmpl 0.0F;

        if $b9 == 0 goto label12;

        $b11 = f83 cmpl 1.0F;

        if $b11 != 0 goto label15;

     label12:
        $r11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $b10 = f83 cmpl 0.0F;

        if $b10 != 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        virtualinvoke $r11.<androidx.constraintlayout.motion.widget.MotionLayout: void endTrigger(boolean)>($z3);

     label15:
        $r56 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r56.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f82);

        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        f84 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        f85 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        $d19 = (double) f85;

        $d20 = (double) f84;

        $d21 = staticinvoke <java.lang.Math: double hypot(double,double)>($d19, $d20);

        $d22 = (double) f85;

        $d23 = (double) f84;

        $d24 = staticinvoke <java.lang.Math: double atan2(double,double)>($d22, $d23);

        $d25 = $d24 - d11;

        $d26 = staticinvoke <java.lang.Math: double sin(double)>($d25);

        $d27 = $d21 * $d26;

        $d28 = (double) f67;

        $d29 = (double) f69;

        $d30 = staticinvoke <java.lang.Math: double hypot(double,double)>($d28, $d29);

        $d31 = $d27 / $d30;

        f86 = (float) $d31;

        $r57 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $d32 = (double) f86;

        $d33 = staticinvoke <java.lang.Math: double toDegrees(double)>($d32);

        $f87 = (float) $d33;

        $r57.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = $f87;

        goto label17;

     label16:
        $r10 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r10.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = 0.0F;

     label17:
        $f13 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $f13;

        $f14 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $f14;

        goto label34;

     label18:
        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(16);

        f88 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        f89 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        $r28 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f90 = virtualinvoke $r28.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        f91 = f90;

        $r29 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i33 = virtualinvoke $r29.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        $f31 = (float) $i33;

        f92 = $f31 / 2.0F;

        $r30 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i34 = virtualinvoke $r30.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $f32 = (float) $i34;

        f93 = $f32 / 2.0F;

        $i35 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>;

        if $i35 == -1 goto label19;

        $r48 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i57 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mRotationCenterId>;

        r58 = virtualinvoke $r48.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i57);

        $r50 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r49 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        virtualinvoke $r50.<androidx.constraintlayout.motion.widget.MotionLayout: void getLocationOnScreen(int[])>($r49);

        $r51 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i58 = $r51[0];

        $f56 = (float) $i58;

        $i59 = virtualinvoke r58.<android.view.View: int getLeft()>();

        $i60 = virtualinvoke r58.<android.view.View: int getRight()>();

        $i61 = $i59 + $i60;

        $f57 = (float) $i61;

        $f58 = $f57 / 2.0F;

        f92 = $f56 + $f58;

        $r52 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i62 = $r52[1];

        $f59 = (float) $i62;

        $i63 = virtualinvoke r58.<android.view.View: int getTop()>();

        $i64 = virtualinvoke r58.<android.view.View: int getBottom()>();

        $i65 = $i63 + $i64;

        $f60 = (float) $i65;

        $f61 = $f60 / 2.0F;

        f93 = $f59 + $f61;

        goto label20;

     label19:
        $i36 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i36 == -1 goto label20;

        $r42 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i47 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        r59 = virtualinvoke $r42.<androidx.constraintlayout.motion.widget.MotionLayout: androidx.constraintlayout.motion.widget.MotionController getMotionController(int)>($i47);

        $r43 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i48 = virtualinvoke r59.<androidx.constraintlayout.motion.widget.MotionController: int getAnimateRelativeTo()>();

        r60 = virtualinvoke $r43.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i48);

        $r45 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r44 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        virtualinvoke $r45.<androidx.constraintlayout.motion.widget.MotionLayout: void getLocationOnScreen(int[])>($r44);

        $r46 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i49 = $r46[0];

        $f50 = (float) $i49;

        $i50 = virtualinvoke r60.<android.view.View: int getLeft()>();

        $i51 = virtualinvoke r60.<android.view.View: int getRight()>();

        $i52 = $i50 + $i51;

        $f51 = (float) $i52;

        $f52 = $f51 / 2.0F;

        f92 = $f50 + $f52;

        $r47 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int[] mTempLoc>;

        $i53 = $r47[1];

        $f53 = (float) $i53;

        $i54 = virtualinvoke r60.<android.view.View: int getTop()>();

        $i55 = virtualinvoke r60.<android.view.View: int getBottom()>();

        $i56 = $i54 + $i55;

        $f54 = (float) $i56;

        $f55 = $f54 / 2.0F;

        f93 = $f53 + $f55;

     label20:
        $f94 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        f95 = $f94 - f92;

        $f96 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        f97 = $f96 - f93;

        $d34 = (double) f97;

        $d35 = (double) f95;

        $d36 = staticinvoke <java.lang.Math: double atan2(double,double)>($d34, $d35);

        d37 = staticinvoke <java.lang.Math: double toDegrees(double)>($d36);

        $i68 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i68 == -1 goto label21;

        $r39 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i46 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f47 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f46 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r38 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r39.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i46, f91, $f47, $f46, $r38);

        $r41 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r40 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f48 = $r40[1];

        $d7 = (double) $f48;

        $d8 = staticinvoke <java.lang.Math: double toDegrees(double)>($d7);

        $f49 = (float) $d8;

        $r41[1] = $f49;

        goto label22;

     label21:
        $r31 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r31[1] = 360.0F;

     label22:
        $f33 = f89 + f97;

        $d3 = (double) $f33;

        $f34 = f88 + f95;

        $d2 = (double) $f34;

        $d4 = staticinvoke <java.lang.Math: double atan2(double,double)>($d3, $d2);

        d38 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        $d5 = d38 - d37;

        f98 = (float) $d5;

        f99 = 62.5F;

        f100 = f98 * f99;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f100);

        if $z2 != 0 goto label23;

        $f42 = 3.0F * f100;

        $f41 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        $f44 = $f42 * $f41;

        $r37 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f43 = $r37[1];

        $f45 = $f44 / $f43;

        f91 = f91 + $f45;

     label23:
        $b37 = f91 cmpl 0.0F;

        if $b37 == 0 goto label32;

        $b39 = f91 cmpl 1.0F;

        if $b39 == 0 goto label32;

        $i40 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i40 == 3 goto label32;

        $f35 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        $f37 = f100 * $f35;

        $r34 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f36 = $r34[1];

        f101 = $f37 / $f36;

        $d6 = (double) f91;

        $b41 = $d6 cmpg 0.5;

        if $b41 >= 0 goto label24;

        $f102 = 0.0F;

        goto label25;

     label24:
        $f102 = 1.0F;

     label25:
        f103 = $f102;

        $i42 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i42 != 6 goto label27;

        $f40 = f90 + f101;

        $b45 = $f40 cmpg 0.0F;

        if $b45 >= 0 goto label26;

        f101 = staticinvoke <java.lang.Math: float abs(float)>(f101);

     label26:
        f103 = 1.0F;

     label27:
        $i69 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i69 != 7 goto label29;

        $f38 = f90 + f101;

        $b44 = $f38 cmpl 1.0F;

        if $b44 <= 0 goto label28;

        $f39 = staticinvoke <java.lang.Math: float abs(float)>(f101);

        f101 = neg $f39;

     label28:
        f103 = 0.0F;

     label29:
        $r61 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i70 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        $f104 = 3.0F * f101;

        virtualinvoke $r61.<androidx.constraintlayout.motion.widget.MotionLayout: void touchAnimateTo(int,float,float)>($i70, f103, $f104);

        $b71 = 0.0F cmpl f90;

        if $b71 >= 0 goto label30;

        $b43 = 1.0F cmpg f90;

        if $b43 > 0 goto label31;

     label30:
        $r36 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r35 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r36.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($r35);

     label31:
        goto label34;

     label32:
        $b72 = 0.0F cmpl f91;

        if $b72 >= 0 goto label33;

        $b38 = 1.0F cmpg f91;

        if $b38 > 0 goto label34;

     label33:
        $r33 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r32 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r33.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($r32);

     label34:
        return;
    }

    void processTouchEvent(android.view.MotionEvent, androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker, int, androidx.constraintlayout.motion.widget.MotionScene)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.view.MotionEvent r1;
        androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i9, $i10, $i15, $i16, $i17, $i18, $i19, $i24, $i26, $i30, $i32, $i33;
        androidx.constraintlayout.motion.widget.MotionScene r3;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, f57, f58, f59, f60, f61, f62, f63, f64, f65, $f66, $f67, f68, f69, f70, f71, f72, f73, f74, f75, $f76, f77;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b2, $b7, $b8, $b11, $b12, $b13, $b14, $b20, $b21, $b22, $b23, $b25, $b27, $b28, $b29, $b31, $b34, $b35;
        androidx.constraintlayout.motion.widget.MotionLayout $r4, $r5, $r6, $r12, $r13, $r14, $r16, $r22, $r23, $r24, $r25, $r26, $r33, $r35, $r38, $r39, $r40;
        float[] $r7, $r8, $r9, $r10, $r11, $r15, $r17, $r18, $r19, $r20, $r21, $r27, $r28, $r29, $r30, $r31, $r36, $r37;
        double $d0, $d1;
        androidx.constraintlayout.motion.widget.MotionLayout$TransitionState $r32, $r34;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.constraintlayout.motion.widget.MotionScene;

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mIsRotateMode>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<androidx.constraintlayout.motion.widget.TouchResponse: void processTouchRotateEvent(android.view.MotionEvent,androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker,int,androidx.constraintlayout.motion.widget.MotionScene)>(r1, r2, i0, r3);

        return;

     label01:
        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void addMovement(android.view.MotionEvent)>(r1);

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label21;
            case 2: goto label03;
            default: goto label37;
        };

     label02:
        $f55 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $f55;

        $f56 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $f56;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        goto label37;

     label03:
        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        $f4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY>;

        f0 = $f3 - $f4;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        $f6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX>;

        f1 = $f5 - $f6;

        $f7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f10 = f1 * $f7;

        $f8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f9 = f0 * $f8;

        f2 = $f10 + $f9;

        $f11 = staticinvoke <java.lang.Math: float abs(float)>(f2);

        $f12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragThreshold>;

        $b2 = $f11 cmpl $f12;

        if $b2 > 0 goto label04;

        $z2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if $z2 == 0 goto label37;

     label04:
        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f57 = virtualinvoke $r4.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $z1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if $z1 != 0 goto label05;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 1;

        $r23 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r23.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f57);

     label05:
        $i3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i3 == -1 goto label06;

        $r22 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f35 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f34 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r21 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r22.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i15, f57, $f35, $f34, $r21);

        goto label07;

     label06:
        $r5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i4 = virtualinvoke $r5.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        $r6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i5 = virtualinvoke $r6.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);

        f58 = (float) $i6;

        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f14 = f58 * $f13;

        $r7[1] = $f14;

        $r8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f16 = f58 * $f15;

        $r8[0] = $f16;

     label07:
        $f18 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $r9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f17 = $r9[0];

        $f22 = $f18 * $f17;

        $f20 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $r10 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f19 = $r10[1];

        $f21 = $f20 * $f19;

        f59 = $f22 + $f21;

        $f23 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mDragScale>;

        f60 = f59 * $f23;

        $f24 = staticinvoke <java.lang.Math: float abs(float)>(f60);

        $d0 = (double) $f24;

        $b7 = $d0 cmpg 0.01;

        if $b7 >= 0 goto label08;

        $r19 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r19[0] = 0.01F;

        $r20 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r20[1] = 0.01F;

     label08:
        $f25 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b8 = $f25 cmpl 0.0F;

        if $b8 == 0 goto label09;

        $r18 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f33 = $r18[0];

        f61 = f1 / $f33;

        goto label10;

     label09:
        $r11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f26 = $r11[1];

        f61 = f0 / $f26;

     label10:
        $f27 = f57 + f61;

        $f28 = staticinvoke <java.lang.Math: float min(float,float)>($f27, 1.0F);

        f62 = staticinvoke <java.lang.Math: float max(float,float)>($f28, 0.0F);

        $i9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i9 != 6 goto label11;

        f62 = staticinvoke <java.lang.Math: float max(float,float)>(f62, 0.01F);

     label11:
        $i10 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i10 != 7 goto label12;

        f62 = staticinvoke <java.lang.Math: float min(float,float)>(f62, 0.99F);

     label12:
        $r12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f63 = virtualinvoke $r12.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $b11 = f62 cmpl f63;

        if $b11 == 0 goto label19;

        $b12 = f63 cmpl 0.0F;

        if $b12 == 0 goto label13;

        $b14 = f63 cmpl 1.0F;

        if $b14 != 0 goto label16;

     label13:
        $r14 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $b13 = f63 cmpl 0.0F;

        if $b13 != 0 goto label14;

        $z4 = 1;

        goto label15;

     label14:
        $z4 = 0;

     label15:
        virtualinvoke $r14.<androidx.constraintlayout.motion.widget.MotionLayout: void endTrigger(boolean)>($z4);

     label16:
        $r39 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r39.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f62);

        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        f64 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        f65 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        $f66 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b31 = $f66 cmpl 0.0F;

        if $b31 == 0 goto label17;

        $r17 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f32 = $r17[0];

        $f67 = f64 / $f32;

        goto label18;

     label17:
        $r15 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f31 = $r15[1];

        $f67 = f65 / $f31;

     label18:
        f68 = $f67;

        $r16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r16.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = f68;

        goto label20;

     label19:
        $r13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r13.<androidx.constraintlayout.motion.widget.MotionLayout: float mLastVelocity> = 0.0F;

     label20:
        $f29 = virtualinvoke r1.<android.view.MotionEvent: float getRawX()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = $f29;

        $f30 = virtualinvoke r1.<android.view.MotionEvent: float getRawY()>();

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = $f30;

        goto label37;

     label21:
        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: void computeCurrentVelocity(int)>(1000);

        f69 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getXVelocity()>();

        f70 = interfaceinvoke r2.<androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker: float getYVelocity()>();

        $r24 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f71 = virtualinvoke $r24.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        f72 = f71;

        $i16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i16 == -1 goto label22;

        $r38 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i30 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f54 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f53 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r37 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r38.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i30, f72, $f54, $f53, $r37);

        goto label23;

     label22:
        $r25 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i17 = virtualinvoke $r25.<androidx.constraintlayout.motion.widget.MotionLayout: int getWidth()>();

        $r26 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i18 = virtualinvoke $r26.<androidx.constraintlayout.motion.widget.MotionLayout: int getHeight()>();

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i18);

        f73 = (float) $i19;

        $r27 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f36 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f37 = f73 * $f36;

        $r27[1] = $f37;

        $r28 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f38 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f39 = f73 * $f38;

        $r28[0] = $f39;

     label23:
        $f41 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $r29 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f40 = $r29[0];

        $f45 = $f41 * $f40;

        $f43 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $r30 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f42 = $r30[1];

        $f44 = $f43 * $f42;

        f74 = $f45 + $f44;

        $f46 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b20 = $f46 cmpl 0.0F;

        if $b20 == 0 goto label24;

        $r36 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f52 = $r36[0];

        f75 = f69 / $f52;

        goto label25;

     label24:
        $r31 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f47 = $r31[1];

        f75 = f70 / $f47;

     label25:
        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f75);

        if $z3 != 0 goto label26;

        $f51 = f75 / 3.0F;

        f72 = f72 + $f51;

     label26:
        $b21 = f72 cmpl 0.0F;

        if $b21 == 0 goto label35;

        $b23 = f72 cmpl 1.0F;

        if $b23 == 0 goto label35;

        $i24 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i24 == 3 goto label35;

        $d1 = (double) f72;

        $b25 = $d1 cmpg 0.5;

        if $b25 >= 0 goto label27;

        $f76 = 0.0F;

        goto label28;

     label27:
        $f76 = 1.0F;

     label28:
        f77 = $f76;

        $i26 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i26 != 6 goto label30;

        $f50 = f71 + f75;

        $b29 = $f50 cmpg 0.0F;

        if $b29 >= 0 goto label29;

        f75 = staticinvoke <java.lang.Math: float abs(float)>(f75);

     label29:
        f77 = 1.0F;

     label30:
        $i32 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i32 != 7 goto label32;

        $f48 = f71 + f75;

        $b28 = $f48 cmpl 1.0F;

        if $b28 <= 0 goto label31;

        $f49 = staticinvoke <java.lang.Math: float abs(float)>(f75);

        f75 = neg $f49;

     label31:
        f77 = 0.0F;

     label32:
        $r40 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i33 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        virtualinvoke $r40.<androidx.constraintlayout.motion.widget.MotionLayout: void touchAnimateTo(int,float,float)>($i33, f77, f75);

        $b34 = 0.0F cmpl f71;

        if $b34 >= 0 goto label33;

        $b27 = 1.0F cmpg f71;

        if $b27 > 0 goto label34;

     label33:
        $r35 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r34 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r35.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($r34);

     label34:
        goto label37;

     label35:
        $b35 = 0.0F cmpl f72;

        if $b35 >= 0 goto label36;

        $b22 = 1.0F cmpg f72;

        if $b22 > 0 goto label37;

     label36:
        $r33 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r32 = <androidx.constraintlayout.motion.widget.MotionLayout$TransitionState: androidx.constraintlayout.motion.widget.MotionLayout$TransitionState FINISHED>;

        virtualinvoke $r33.<androidx.constraintlayout.motion.widget.MotionLayout: void setState(androidx.constraintlayout.motion.widget.MotionLayout$TransitionState)>($r32);

     label37:
        return;
    }

    void setDown(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchX> = f0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mLastTouchY> = f1;

        return;
    }

    float getProgressDirection(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14;
        androidx.constraintlayout.motion.widget.MotionLayout $r1, $r3;
        float[] $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0;
        byte $b1, $b2, $b3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f2 = virtualinvoke $r1.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $r3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f2, $f4, $f3, $r2);

        $f5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b1 = $f5 cmpl 0.0F;

        if $b1 == 0 goto label2;

        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f10 = $r7[0];

        $b3 = $f10 cmpl 0.0F;

        if $b3 != 0 goto label1;

        $r9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r9[0] = 1.0E-7F;

     label1:
        $f11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f13 = f0 * $f11;

        $r8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f12 = $r8[0];

        f14 = $f13 / $f12;

        goto label4;

     label2:
        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f6 = $r4[1];

        $b2 = $f6 cmpl 0.0F;

        if $b2 != 0 goto label3;

        $r6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r6[1] = 1.0E-7F;

     label3:
        $f7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f9 = f1 * $f7;

        $r5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f8 = $r5[1];

        f14 = $f9 / $f8;

     label4:
        return f14;
    }

    void scrollUp(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, f19, f20, $f21;
        androidx.constraintlayout.motion.widget.MotionLayout $r1, $r3, $r7;
        float[] $r2, $r4, $r5, $r6, $r8;
        int $i0, $i4, $i6;
        byte $b1, $b2, $b3, $b5;
        boolean $z0, $z1, $z2, $z3;
        double $d0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 0;

        $r1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f19 = virtualinvoke $r1.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $r3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f19, $f4, $f3, $r2);

        $f6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f5 = $r4[0];

        $f10 = $f6 * $f5;

        $f8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $r5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f7 = $r5[1];

        $f9 = $f8 * $f7;

        f2 = $f10 + $f9;

        $f11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b1 = $f11 cmpl 0.0F;

        if $b1 == 0 goto label01;

        $f16 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f18 = f0 * $f16;

        $r8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f17 = $r8[0];

        f20 = $f18 / $f17;

        goto label02;

     label01:
        $f12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f14 = f1 * $f12;

        $r6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f13 = $r6[1];

        f20 = $f14 / $f13;

     label02:
        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f20);

        if $z0 != 0 goto label03;

        $f15 = f20 / 3.0F;

        f19 = f19 + $f15;

     label03:
        $b2 = f19 cmpl 0.0F;

        if $b2 == 0 goto label10;

        $b3 = f19 cmpl 1.0F;

        if $b3 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $i4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        if $i4 == 3 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z3 = $z1 & $z2;

        if $z3 == 0 goto label10;

        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp>;

        $d0 = (double) f19;

        $b5 = $d0 cmpg 0.5;

        if $b5 >= 0 goto label08;

        $f21 = 0.0F;

        goto label09;

     label08:
        $f21 = 1.0F;

     label09:
        virtualinvoke $r7.<androidx.constraintlayout.motion.widget.MotionLayout: void touchAnimateTo(int,float,float)>($i6, $f21, f20);

     label10:
        return;
    }

    void scrollMove(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, f27, f28, f29;
        androidx.constraintlayout.motion.widget.MotionLayout $r1, $r3, $r7, $r8, $r12;
        boolean $z0;
        float[] $r2, $r4, $r5, $r6, $r9, $r10, $r11;
        int $i0;
        double $d0;
        byte $b1, $b2, $b3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f7 = f0 * $f4;

        $f5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f6 = f1 * $f5;

        f2 = $f7 + $f6;

        $r1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        f27 = virtualinvoke $r1.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        if $z0 != 0 goto label1;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted> = 1;

        $r12 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r12.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f27);

     label1:
        $r3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $f9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX>;

        $f8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY>;

        $r2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        virtualinvoke $r3.<androidx.constraintlayout.motion.widget.MotionLayout: void getAnchorDpDt(int,float,float,float,float[])>($i0, f27, $f9, $f8, $r2);

        $f11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f10 = $r4[0];

        $f15 = $f11 * $f10;

        $f13 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $r5 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f12 = $r5[1];

        $f14 = $f13 * $f12;

        f3 = $f15 + $f14;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        $d0 = (double) $f16;

        $b1 = $d0 cmpg 0.01;

        if $b1 >= 0 goto label2;

        $r10 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r10[0] = 0.01F;

        $r11 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $r11[1] = 0.01F;

     label2:
        $f17 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $b2 = $f17 cmpl 0.0F;

        if $b2 == 0 goto label3;

        $f24 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f26 = f0 * $f24;

        $r9 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f25 = $r9[0];

        f28 = $f26 / $f25;

        goto label4;

     label3:
        $f18 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f20 = f1 * $f18;

        $r6 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float[] mAnchorDpDt>;

        $f19 = $r6[1];

        f28 = $f20 / $f19;

     label4:
        $f21 = f27 + f28;

        $f22 = staticinvoke <java.lang.Math: float min(float,float)>($f21, 1.0F);

        f29 = staticinvoke <java.lang.Math: float max(float,float)>($f22, 0.0F);

        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $f23 = virtualinvoke $r7.<androidx.constraintlayout.motion.widget.MotionLayout: float getProgress()>();

        $b3 = f29 cmpl $f23;

        if $b3 == 0 goto label5;

        $r8 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        virtualinvoke $r8.<androidx.constraintlayout.motion.widget.MotionLayout: void setProgress(float)>(f29);

     label5:
        return;
    }

    void setupTouch()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        androidx.core.widget.NestedScrollView r1;
        int $i0, $i1, $i2;
        androidx.constraintlayout.motion.widget.TouchResponse$1 $r2;
        androidx.constraintlayout.motion.widget.TouchResponse$2 $r3;
        androidx.constraintlayout.motion.widget.MotionLayout $r4, $r7;
        java.lang.StringBuilder $r5, $r6, $r10;
        android.content.Context $r8;
        java.lang.String $r9, $r11;
        android.view.View r12;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r12 = null;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        if $i0 == -1 goto label1;

        $r4 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $i1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        r12 = virtualinvoke $r4.<androidx.constraintlayout.motion.widget.MotionLayout: android.view.View findViewById(int)>($i1);

        if r12 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find TouchAnchorId @id/");

        $r7 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: androidx.constraintlayout.motion.widget.MotionLayout mMotionLayout>;

        $r8 = virtualinvoke $r7.<androidx.constraintlayout.motion.widget.MotionLayout: android.content.Context getContext()>();

        $i2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        $r9 = staticinvoke <androidx.constraintlayout.motion.widget.Debug: java.lang.String getName(android.content.Context,int)>($r8, $i2);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TouchResponse", $r11);

     label1:
        $z0 = r12 instanceof androidx.core.widget.NestedScrollView;

        if $z0 == 0 goto label2;

        r1 = (androidx.core.widget.NestedScrollView) r12;

        $r2 = new androidx.constraintlayout.motion.widget.TouchResponse$1;

        specialinvoke $r2.<androidx.constraintlayout.motion.widget.TouchResponse$1: void <init>(androidx.constraintlayout.motion.widget.TouchResponse)>(r0);

        virtualinvoke r1.<androidx.core.widget.NestedScrollView: void setOnTouchListener(android.view.View$OnTouchListener)>($r2);

        $r3 = new androidx.constraintlayout.motion.widget.TouchResponse$2;

        specialinvoke $r3.<androidx.constraintlayout.motion.widget.TouchResponse$2: void <init>(androidx.constraintlayout.motion.widget.TouchResponse)>(r0);

        virtualinvoke r1.<androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)>($r3);

     label2:
        return;
    }

    public void setAnchorId(int)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId> = i0;

        return;
    }

    public int getAnchorId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchAnchorId>;

        return $i0;
    }

    public void setTouchAnchorLocation(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorX> = f0;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchAnchorY> = f1;

        return;
    }

    public void setMaxVelocity(float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity> = f0;

        return;
    }

    public void setMaxAcceleration(float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration> = f0;

        return;
    }

    float getMaxAcceleration()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxAcceleration>;

        return $f0;
    }

    public float getMaxVelocity()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mMaxVelocity>;

        return $f0;
    }

    boolean getMoveWhenScrollAtTop()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mMoveWhenScrollAtTop>;

        return $z0;
    }

    public int getAutoCompleteMode()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode>;

        return $i0;
    }

    void setAutoCompleteMode(int)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mAutoCompleteMode> = i0;

        return;
    }

    android.graphics.RectF getTouchRegion(android.view.ViewGroup, android.graphics.RectF)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.view.ViewGroup r1;
        android.graphics.RectF r2;
        android.view.View r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.RectF;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>($i1);

        if r3 != null goto label2;

        return null;

     label2:
        $i2 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f0 = (float) $i2;

        $i3 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f1 = (float) $i3;

        $i4 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f2 = (float) $i4;

        $i5 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        return r2;
    }

    int getTouchRegionId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mTouchRegionId>;

        return $i0;
    }

    android.graphics.RectF getLimitBoundsTo(android.view.ViewGroup, android.graphics.RectF)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        android.view.ViewGroup r1;
        android.graphics.RectF r2;
        android.view.View r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.graphics.RectF;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>;

        r3 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>($i1);

        if r3 != null goto label2;

        return null;

     label2:
        $i2 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $f0 = (float) $i2;

        $i3 = virtualinvoke r3.<android.view.View: int getTop()>();

        $f1 = (float) $i3;

        $i4 = virtualinvoke r3.<android.view.View: int getRight()>();

        $f2 = (float) $i4;

        $i5 = virtualinvoke r3.<android.view.View: int getBottom()>();

        $f3 = (float) $i5;

        virtualinvoke r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        return r2;
    }

    int getLimitBoundsToId()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mLimitBoundsTo>;

        return $i0;
    }

    float dot(float, float)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $f5 = f0 * $f2;

        $f3 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $f4 = f1 * $f3;

        $f6 = $f5 + $f4;

        return $f6;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0, $f1, $f2;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label1;

        $r5 = "rotation";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $f1 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionX>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $f2 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mTouchDirectionY>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r5;
    }

    public int getFlags()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mFlags>;

        return $i0;
    }

    public void setTouchUpMode(int)
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        i0 := @parameter0: int;

        r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mOnTouchUp> = i0;

        return;
    }

    public float getSpringStiffness()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStiffness>;

        return $f0;
    }

    public float getSpringMass()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringMass>;

        return $f0;
    }

    public float getSpringDamping()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringDamping>;

        return $f0;
    }

    public float getSpringStopThreshold()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $f0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: float mSpringStopThreshold>;

        return $f0;
    }

    public int getSpringBoundary()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        int $i0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $i0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: int mSpringBoundary>;

        return $i0;
    }

    boolean isDragStarted()
    {
        androidx.constraintlayout.motion.widget.TouchResponse r0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse;

        $z0 = r0.<androidx.constraintlayout.motion.widget.TouchResponse: boolean mDragStarted>;

        return $z0;
    }

    static void <clinit>()
    {
        float[][] $r0, $r8;
        float[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;

        $r0 = newarray (float[])[7];

        $r1 = newarray (float)[2];

        $r1[0] = 0.5F;

        $r1[1] = 0.0F;

        $r0[0] = $r1;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 0.5F;

        $r0[1] = $r2;

        $r3 = newarray (float)[2];

        $r3[0] = 1.0F;

        $r3[1] = 0.5F;

        $r0[2] = $r3;

        $r4 = newarray (float)[2];

        $r4[0] = 0.5F;

        $r4[1] = 1.0F;

        $r0[3] = $r4;

        $r5 = newarray (float)[2];

        $r5[0] = 0.5F;

        $r5[1] = 0.5F;

        $r0[4] = $r5;

        $r6 = newarray (float)[2];

        $r6[0] = 0.0F;

        $r6[1] = 0.5F;

        $r0[5] = $r6;

        $r7 = newarray (float)[2];

        $r7[0] = 1.0F;

        $r7[1] = 0.5F;

        $r0[6] = $r7;

        <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_SIDES> = $r0;

        $r8 = newarray (float[])[6];

        $r9 = newarray (float)[2];

        $r9[0] = 0.0F;

        $r9[1] = -1.0F;

        $r8[0] = $r9;

        $r10 = newarray (float)[2];

        $r10[0] = 0.0F;

        $r10[1] = 1.0F;

        $r8[1] = $r10;

        $r11 = newarray (float)[2];

        $r11[0] = -1.0F;

        $r11[1] = 0.0F;

        $r8[2] = $r11;

        $r12 = newarray (float)[2];

        $r12[0] = 1.0F;

        $r12[1] = 0.0F;

        $r8[3] = $r12;

        $r13 = newarray (float)[2];

        $r13[0] = -1.0F;

        $r13[1] = 0.0F;

        $r8[4] = $r13;

        $r14 = newarray (float)[2];

        $r14[0] = 1.0F;

        $r14[1] = 0.0F;

        $r8[5] = $r14;

        <androidx.constraintlayout.motion.widget.TouchResponse: float[][] TOUCH_DIRECTION> = $r8;

        return;
    }

androidx.constraintlayout.motion.widget.TouchResponse$1
    void <init>(androidx.constraintlayout.motion.widget.TouchResponse)
    {
        androidx.constraintlayout.motion.widget.TouchResponse$1 r0;
        androidx.constraintlayout.motion.widget.TouchResponse r1;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse$1;

        r1 := @parameter0: androidx.constraintlayout.motion.widget.TouchResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        androidx.constraintlayout.motion.widget.TouchResponse$1 r0;
        android.view.View r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse$1;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        return 0;
    }

androidx.constraintlayout.motion.widget.TouchResponse$2
    void <init>(androidx.constraintlayout.motion.widget.TouchResponse)
    {
        androidx.constraintlayout.motion.widget.TouchResponse$2 r0;
        androidx.constraintlayout.motion.widget.TouchResponse r1;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse$2;

        r1 := @parameter0: androidx.constraintlayout.motion.widget.TouchResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onScrollChange(androidx.core.widget.NestedScrollView, int, int, int, int)
    {
        androidx.constraintlayout.motion.widget.TouchResponse$2 r0;
        androidx.core.widget.NestedScrollView r1;
        int i0, i1, i2, i3;

        r0 := @this: androidx.constraintlayout.motion.widget.TouchResponse$2;

        r1 := @parameter0: androidx.core.widget.NestedScrollView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        return;
    }

