androidx.window.embedding.SplitRule
<androidx.window.embedding.SplitRule: int minWidth>
<androidx.window.embedding.SplitRule: int minSmallestWidth>
<androidx.window.embedding.SplitRule: float splitRatio>
<androidx.window.embedding.SplitRule: int layoutDirection>
    public void <init>(int, int, float, int)
    {
        androidx.window.embedding.SplitRule r0;
        int i0, i1, i2;
        float f0;

        r0 := @this: androidx.window.embedding.SplitRule;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        i2 := @parameter3: int;

        specialinvoke r0.<androidx.window.embedding.EmbeddingRule: void <init>()>();

        r0.<androidx.window.embedding.SplitRule: int minWidth> = i0;

        r0.<androidx.window.embedding.SplitRule: int minSmallestWidth> = i1;

        r0.<androidx.window.embedding.SplitRule: float splitRatio> = f0;

        r0.<androidx.window.embedding.SplitRule: int layoutDirection> = i2;

        return;
    }

    public void <init>(int, int, float, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.embedding.SplitRule r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        float f0;

        r0 := @this: androidx.window.embedding.SplitRule;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        f0 := @parameter2: float;

        i7 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i5 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i6 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        f0 = 0.5F;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        i7 = 3;

     label4:
        specialinvoke r0.<androidx.window.embedding.SplitRule: void <init>(int,int,float,int)>(i5, i6, f0, i7);

        return;
    }

    public final int getMinWidth()
    {
        androidx.window.embedding.SplitRule r0;
        int $i0;

        r0 := @this: androidx.window.embedding.SplitRule;

        $i0 = r0.<androidx.window.embedding.SplitRule: int minWidth>;

        return $i0;
    }

    public final int getMinSmallestWidth()
    {
        androidx.window.embedding.SplitRule r0;
        int $i0;

        r0 := @this: androidx.window.embedding.SplitRule;

        $i0 = r0.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        return $i0;
    }

    public final float getSplitRatio()
    {
        androidx.window.embedding.SplitRule r0;
        float $f0;

        r0 := @this: androidx.window.embedding.SplitRule;

        $f0 = r0.<androidx.window.embedding.SplitRule: float splitRatio>;

        return $f0;
    }

    public final int getLayoutDirection()
    {
        androidx.window.embedding.SplitRule r0;
        int $i0;

        r0 := @this: androidx.window.embedding.SplitRule;

        $i0 = r0.<androidx.window.embedding.SplitRule: int layoutDirection>;

        return $i0;
    }

    public final boolean checkParentMetrics(android.view.WindowMetrics)
    {
        androidx.window.embedding.SplitRule r0;
        android.view.WindowMetrics r1;
        android.graphics.Rect r2;
        boolean z0, z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.window.embedding.SplitRule$Api30Impl $r3;

        r0 := @this: androidx.window.embedding.SplitRule;

        r1 := @parameter0: android.view.WindowMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "parentMetrics");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 30 goto label1;

        return 0;

     label1:
        $r3 = <androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE>;

        r2 = virtualinvoke $r3.<androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)>(r1);

        $i1 = r0.<androidx.window.embedding.SplitRule: int minWidth>;

        if $i1 == 0 goto label2;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i8 = r0.<androidx.window.embedding.SplitRule: int minWidth>;

        if $i7 < $i8 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $i2 = r0.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        if $i2 == 0 goto label5;

        $i3 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i4 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i6 = r0.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        if $i5 < $i6 goto label6;

     label5:
        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        z1 = $z3;

        if z0 == 0 goto label8;

        if z1 == 0 goto label8;

        $z4 = 1;

        goto label9;

     label8:
        $z4 = 0;

     label9:
        return $z4;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.window.embedding.SplitRule r0, $r2, $r3, $r4, $r5;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        float $f0, $f1;
        byte $b4;

        r0 := @this: androidx.window.embedding.SplitRule;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.window.embedding.SplitRule;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = r0.<androidx.window.embedding.SplitRule: int minWidth>;

        $r2 = (androidx.window.embedding.SplitRule) r1;

        $i0 = $r2.<androidx.window.embedding.SplitRule: int minWidth>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        $r3 = (androidx.window.embedding.SplitRule) r1;

        $i2 = $r3.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        $f1 = r0.<androidx.window.embedding.SplitRule: float splitRatio>;

        $r4 = (androidx.window.embedding.SplitRule) r1;

        $f0 = $r4.<androidx.window.embedding.SplitRule: float splitRatio>;

        $b4 = $f1 cmpg $f0;

        if $b4 != 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        if $z1 != 0 goto label7;

        return 0;

     label7:
        $i6 = r0.<androidx.window.embedding.SplitRule: int layoutDirection>;

        $r5 = (androidx.window.embedding.SplitRule) r1;

        $i5 = $r5.<androidx.window.embedding.SplitRule: int layoutDirection>;

        if $i6 == $i5 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        androidx.window.embedding.SplitRule r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        float $f0;

        r0 := @this: androidx.window.embedding.SplitRule;

        i6 = r0.<androidx.window.embedding.SplitRule: int minWidth>;

        $i1 = 31 * i6;

        $i0 = r0.<androidx.window.embedding.SplitRule: int minSmallestWidth>;

        i7 = $i1 + $i0;

        $i2 = 31 * i7;

        $f0 = r0.<androidx.window.embedding.SplitRule: float splitRatio>;

        $i3 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        i8 = $i2 + $i3;

        $i5 = 31 * i8;

        $i4 = r0.<androidx.window.embedding.SplitRule: int layoutDirection>;

        i9 = $i5 + $i4;

        return i9;
    }

    public void <init>()
    {
        androidx.window.embedding.SplitRule r0;

        r0 := @this: androidx.window.embedding.SplitRule;

        specialinvoke r0.<androidx.window.embedding.SplitRule: void <init>(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, 0.0F, 0, 15, null);

        return;
    }

androidx.window.embedding.SplitRule$Api30Impl
<androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE>
    private void <init>()
    {
        androidx.window.embedding.SplitRule$Api30Impl r0;

        r0 := @this: androidx.window.embedding.SplitRule$Api30Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.graphics.Rect getBounds(android.view.WindowMetrics)
    {
        androidx.window.embedding.SplitRule$Api30Impl r0;
        android.view.WindowMetrics r1;
        android.graphics.Rect r2;

        r0 := @this: androidx.window.embedding.SplitRule$Api30Impl;

        r1 := @parameter0: android.view.WindowMetrics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "windowMetrics");

        r2 = virtualinvoke r1.<android.view.WindowMetrics: android.graphics.Rect getBounds()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "windowMetrics.bounds");

        return r2;
    }

    static void <clinit>()
    {
        androidx.window.embedding.SplitRule$Api30Impl $r0;

        $r0 = new androidx.window.embedding.SplitRule$Api30Impl;

        specialinvoke $r0.<androidx.window.embedding.SplitRule$Api30Impl: void <init>()>();

        <androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE> = $r0;

        return;
    }

androidx.window.embedding.SplitRule$LayoutDir
