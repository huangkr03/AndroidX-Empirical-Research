androidx.compose.ui.text.input.InputMethodManagerImpl
<androidx.compose.ui.text.input.InputMethodManagerImpl: kotlin.Lazy imm$delegate>
    public void <init>(android.content.Context)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.content.Context r1;
        androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2 $r2;
        kotlin.LazyThreadSafetyMode $r3;
        kotlin.jvm.functions.Function0 $r4;
        kotlin.Lazy $r5;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r2 = new androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2;

        specialinvoke $r2.<androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2: void <init>(android.content.Context)>(r1);

        $r4 = (kotlin.jvm.functions.Function0) $r2;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r3, $r4);

        r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: kotlin.Lazy imm$delegate> = $r5;

        return;
    }

    private final android.view.inputmethod.InputMethodManager getImm()
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 = r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: kotlin.Lazy imm$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        return $r3;
    }

    public void restartInput(android.view.View)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $r2 = specialinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: android.view.inputmethod.InputMethodManager getImm()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r1);

        return;
    }

    public void showSoftInput(android.view.View)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $r2 = specialinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: android.view.inputmethod.InputMethodManager getImm()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>(r1, 0);

        return;
    }

    public void hideSoftInputFromWindow(android.os.IBinder)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.os.IBinder r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.os.IBinder;

        $r2 = specialinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: android.view.inputmethod.InputMethodManager getImm()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>(r1, 0);

        return;
    }

    public void updateExtractedText(android.view.View, int, android.view.inputmethod.ExtractedText)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.view.View r1;
        int i0;
        android.view.inputmethod.ExtractedText r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.inputmethod.ExtractedText;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "extractedText");

        $r3 = specialinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: android.view.inputmethod.InputMethodManager getImm()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>(r1, i0, r2);

        return;
    }

    public void updateSelection(android.view.View, int, int, int, int)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl r0;
        android.view.View r1;
        int i0, i1, i2, i3;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        $r2 = specialinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl: android.view.inputmethod.InputMethodManager getImm()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2
<androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2: android.content.Context $context>
    void <init>(android.content.Context)
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2 r0;
        android.content.Context $r1;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2;

        $r1 := @parameter0: android.content.Context;

        r0.<androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2: android.content.Context $context> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final android.view.inputmethod.InputMethodManager invoke()
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2 r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2;

        $r1 = r0.<androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2: android.content.Context $context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type android.view.inputmethod.InputMethodManager");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        return $r3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2 r0;
        android.view.inputmethod.InputMethodManager $r1;

        r0 := @this: androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2;

        $r1 = virtualinvoke r0.<androidx.compose.ui.text.input.InputMethodManagerImpl$imm$2: android.view.inputmethod.InputMethodManager invoke()>();

        return $r1;
    }

