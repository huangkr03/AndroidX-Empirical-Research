androidx.media3.common.util.MediaFormatUtil
<androidx.media3.common.util.MediaFormatUtil: java.lang.String KEY_PIXEL_WIDTH_HEIGHT_RATIO_FLOAT>
<androidx.media3.common.util.MediaFormatUtil: java.lang.String KEY_PCM_ENCODING_EXTENDED>
<androidx.media3.common.util.MediaFormatUtil: java.lang.String KEY_MAX_BIT_RATE>
<androidx.media3.common.util.MediaFormatUtil: int MAX_POWER_OF_TWO_INT>
    public static android.media.MediaFormat createMediaFormatFromFormat(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        android.media.MediaFormat r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        androidx.media3.common.ColorInfo $r3;
        java.lang.String $r4, $r5, $r7;
        float $f0, $f1;
        java.util.List $r6;

        r0 := @parameter0: androidx.media3.common.Format;

        $r2 = new android.media.MediaFormat;

        specialinvoke $r2.<android.media.MediaFormat: void <init>()>();

        r1 = $r2;

        $i1 = r0.<androidx.media3.common.Format: int bitrate>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "bitrate", $i1);

        $i2 = r0.<androidx.media3.common.Format: int peakBitrate>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "max-bitrate", $i2);

        $i3 = r0.<androidx.media3.common.Format: int channelCount>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "channel-count", $i3);

        $r3 = r0.<androidx.media3.common.Format: androidx.media3.common.ColorInfo colorInfo>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetColorInfo(android.media.MediaFormat,androidx.media3.common.ColorInfo)>(r1, $r3);

        $r4 = r0.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetString(android.media.MediaFormat,java.lang.String,java.lang.String)>(r1, "mime", $r4);

        $r5 = r0.<androidx.media3.common.Format: java.lang.String codecs>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetString(android.media.MediaFormat,java.lang.String,java.lang.String)>(r1, "codecs-string", $r5);

        $f0 = r0.<androidx.media3.common.Format: float frameRate>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetFloat(android.media.MediaFormat,java.lang.String,float)>(r1, "frame-rate", $f0);

        $i4 = r0.<androidx.media3.common.Format: int width>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "width", $i4);

        $i5 = r0.<androidx.media3.common.Format: int height>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "height", $i5);

        $r6 = r0.<androidx.media3.common.Format: java.util.List initializationData>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void setCsdBuffers(android.media.MediaFormat,java.util.List)>(r1, $r6);

        $i6 = r0.<androidx.media3.common.Format: int pcmEncoding>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetPcmEncoding(android.media.MediaFormat,int)>(r1, $i6);

        $r7 = r0.<androidx.media3.common.Format: java.lang.String language>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetString(android.media.MediaFormat,java.lang.String,java.lang.String)>(r1, "language", $r7);

        $i7 = r0.<androidx.media3.common.Format: int maxInputSize>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "max-input-size", $i7);

        $i8 = r0.<androidx.media3.common.Format: int sampleRate>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "sample-rate", $i8);

        $i9 = r0.<androidx.media3.common.Format: int accessibilityChannel>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r1, "caption-service-number", $i9);

        $i10 = r0.<androidx.media3.common.Format: int rotationDegrees>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("rotation-degrees", $i10);

        i0 = r0.<androidx.media3.common.Format: int selectionFlags>;

        $i11 = i0 & 4;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void setBooleanAsInt(android.media.MediaFormat,java.lang.String,int)>(r1, "is-autoselect", $i11);

        $i12 = i0 & 1;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void setBooleanAsInt(android.media.MediaFormat,java.lang.String,int)>(r1, "is-default", $i12);

        $i13 = i0 & 2;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void setBooleanAsInt(android.media.MediaFormat,java.lang.String,int)>(r1, "is-forced-subtitle", $i13);

        $i14 = r0.<androidx.media3.common.Format: int encoderDelay>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("encoder-delay", $i14);

        $i15 = r0.<androidx.media3.common.Format: int encoderPadding>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("encoder-padding", $i15);

        $f1 = r0.<androidx.media3.common.Format: float pixelWidthHeightRatio>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetPixelAspectRatio(android.media.MediaFormat,float)>(r1, $f1);

        return r1;
    }

    public static void maybeSetString(android.media.MediaFormat, java.lang.String, java.lang.String)
    {
        android.media.MediaFormat r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        virtualinvoke r0.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    public static void setCsdBuffers(android.media.MediaFormat, java.util.List)
    {
        android.media.MediaFormat r0;
        java.util.List r1;
        int $i0, i1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.Object $r6;
        byte[] $r7;
        java.nio.ByteBuffer $r8;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("csd-");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (byte[]) $r6;

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r7);

        virtualinvoke r0.<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>($r5, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void maybeSetInteger(android.media.MediaFormat, java.lang.String, int)
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 == -1 goto label1;

        virtualinvoke r0.<android.media.MediaFormat: void setInteger(java.lang.String,int)>(r1, i0);

     label1:
        return;
    }

    public static void maybeSetFloat(android.media.MediaFormat, java.lang.String, float)
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        float f0;
        byte $b0;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        $b0 = f0 cmpl -1.0F;

        if $b0 == 0 goto label1;

        virtualinvoke r0.<android.media.MediaFormat: void setFloat(java.lang.String,float)>(r1, f0);

     label1:
        return;
    }

    public static void maybeSetByteBuffer(android.media.MediaFormat, java.lang.String, byte[])
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        byte[] r2;
        java.nio.ByteBuffer $r3;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        if r2 == null goto label1;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        virtualinvoke r0.<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>(r1, $r3);

     label1:
        return;
    }

    public static void maybeSetColorInfo(android.media.MediaFormat, androidx.media3.common.ColorInfo)
    {
        android.media.MediaFormat r0;
        androidx.media3.common.ColorInfo r1;
        int $i0, $i1, $i2;
        byte[] $r2;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: androidx.media3.common.ColorInfo;

        if r1 == null goto label1;

        $i0 = r1.<androidx.media3.common.ColorInfo: int colorTransfer>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r0, "color-transfer", $i0);

        $i1 = r1.<androidx.media3.common.ColorInfo: int colorSpace>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r0, "color-standard", $i1);

        $i2 = r1.<androidx.media3.common.ColorInfo: int colorRange>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r0, "color-range", $i2);

        $r2 = r1.<androidx.media3.common.ColorInfo: byte[] hdrStaticInfo>;

        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetByteBuffer(android.media.MediaFormat,java.lang.String,byte[])>(r0, "hdr-static-info", $r2);

     label1:
        return;
    }

    public static androidx.media3.common.ColorInfo getColorInfo(android.media.MediaFormat)
    {
        android.media.MediaFormat r0;
        java.nio.ByteBuffer r1;
        byte[] r2, $r3;
        int $i0, i1, i2, i3;
        boolean $z0, $z1, $z2;
        androidx.media3.common.ColorInfo $r4;

        r0 := @parameter0: android.media.MediaFormat;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 >= 29 goto label1;

        return null;

     label1:
        i1 = virtualinvoke r0.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("color-standard", -1);

        i2 = virtualinvoke r0.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("color-range", -1);

        i3 = virtualinvoke r0.<android.media.MediaFormat: int getInteger(java.lang.String,int)>("color-transfer", -1);

        r1 = virtualinvoke r0.<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>("hdr-static-info");

        if r1 == null goto label2;

        $r3 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: byte[] getArray(java.nio.ByteBuffer)>(r1);

        goto label3;

     label2:
        $r3 = null;

     label3:
        r2 = $r3;

        $z0 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: boolean isValidColorSpace(int)>(i1);

        if $z0 != 0 goto label4;

        i1 = -1;

     label4:
        $z1 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: boolean isValidColorRange(int)>(i2);

        if $z1 != 0 goto label5;

        i2 = -1;

     label5:
        $z2 = staticinvoke <androidx.media3.common.util.MediaFormatUtil: boolean isValidColorTransfer(int)>(i3);

        if $z2 != 0 goto label6;

        i3 = -1;

     label6:
        if i1 != -1 goto label7;

        if i2 != -1 goto label7;

        if i3 != -1 goto label7;

        if r2 == null goto label8;

     label7:
        $r4 = new androidx.media3.common.ColorInfo;

        specialinvoke $r4.<androidx.media3.common.ColorInfo: void <init>(int,int,int,byte[])>(i1, i2, i3, r2);

        return $r4;

     label8:
        return null;
    }

    public static byte[] getArray(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        byte[] r1;
        int $i0;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        r1 = newarray (byte)[$i0];

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

        return r1;
    }

    private static void setBooleanAsInt(android.media.MediaFormat, java.lang.String, int)
    {
        android.media.MediaFormat r0;
        java.lang.String r1;
        int i0;
        byte $b1;

        r0 := @parameter0: android.media.MediaFormat;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r0.<android.media.MediaFormat: void setInteger(java.lang.String,int)>(r1, $b1);

        return;
    }

    private static void maybeSetPixelAspectRatio(android.media.MediaFormat, float)
    {
        android.media.MediaFormat r0;
        float f0, $f1, $f2, $f3, $f4;
        byte $b0, $b1;
        int i2, i3;

        r0 := @parameter0: android.media.MediaFormat;

        f0 := @parameter1: float;

        virtualinvoke r0.<android.media.MediaFormat: void setFloat(java.lang.String,float)>("exo-pixel-width-height-ratio-float", f0);

        i2 = 1;

        i3 = 1;

        $b0 = f0 cmpg 1.0F;

        if $b0 >= 0 goto label1;

        i3 = 1073741824;

        $f3 = (float) i3;

        $f4 = f0 * $f3;

        i2 = (int) $f4;

        goto label2;

     label1:
        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

        i2 = 1073741824;

        $f1 = (float) i2;

        $f2 = $f1 / f0;

        i3 = (int) $f2;

     label2:
        virtualinvoke r0.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("sar-width", i2);

        virtualinvoke r0.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("sar-height", i3);

        return;
    }

    private static void maybeSetPcmEncoding(android.media.MediaFormat, int)
    {
        android.media.MediaFormat r0;
        int i0;
        byte b1;

        r0 := @parameter0: android.media.MediaFormat;

        i0 := @parameter1: int;

        if i0 != -1 goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.common.util.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)>(r0, "exo-pcm-encoding-int", i0);

        lookupswitch(i0)
        {
            case -1: goto label8;
            case 0: goto label7;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            case 268435456: goto label8;
            case 536870912: goto label5;
            case 805306368: goto label6;
            default: goto label8;
        };

     label2:
        b1 = 3;

        goto label9;

     label3:
        b1 = 2;

        goto label9;

     label4:
        b1 = 4;

        goto label9;

     label5:
        b1 = 21;

        goto label9;

     label6:
        b1 = 22;

        goto label9;

     label7:
        b1 = 0;

        goto label9;

     label8:
        return;

     label9:
        virtualinvoke r0.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("pcm-encoding", b1);

        return;
    }

    private static boolean isValidColorSpace(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        if i0 == 6 goto label1;

        if i0 != -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isValidColorRange(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        if i0 != -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static boolean isValidColorTransfer(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 6 goto label1;

        if i0 == 7 goto label1;

        if i0 != -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void <init>()
    {
        androidx.media3.common.util.MediaFormatUtil r0;

        r0 := @this: androidx.media3.common.util.MediaFormatUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

