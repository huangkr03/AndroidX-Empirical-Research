androidx.compose.ui.test.KeyInjectionScopeImpl
<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>
    public void <init>(androidx.compose.ui.test.MultiModalInjectionScopeImpl)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        r1 := @parameter0: androidx.compose.ui.test.MultiModalInjectionScopeImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "baseScope");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope> = r1;

        return;
    }

    public float getBottom()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getBottom()>();

        return $f0;
    }

    public long getBottomCenter-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomCenter-F1C5BW0()>();

        return $l0;
    }

    public long getBottomLeft-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomLeft-F1C5BW0()>();

        return $l0;
    }

    public long getBottomRight-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getBottomRight-F1C5BW0()>();

        return $l0;
    }

    public long getCenter-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenter-F1C5BW0()>();

        return $l0;
    }

    public long getCenterLeft-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenterLeft-F1C5BW0()>();

        return $l0;
    }

    public long getCenterRight-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getCenterRight-F1C5BW0()>();

        return $l0;
    }

    public float getCenterX()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getCenterX()>();

        return $f0;
    }

    public float getCenterY()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getCenterY()>();

        return $f0;
    }

    public float getDensity()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getDensity()>();

        return $f0;
    }

    public long getEventPeriodMillis()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getEventPeriodMillis()>();

        return $l0;
    }

    public float getFontScale()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getFontScale()>();

        return $f0;
    }

    public int getHeight()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int getHeight()>();

        return $i0;
    }

    public float getLeft()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getLeft()>();

        return $f0;
    }

    public float getRight()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getRight()>();

        return $f0;
    }

    public float getTop()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float getTop()>();

        return $f0;
    }

    public long getTopCenter-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopCenter-F1C5BW0()>();

        return $l0;
    }

    public long getTopLeft-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopLeft-F1C5BW0()>();

        return $l0;
    }

    public long getTopRight-F1C5BW0()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getTopRight-F1C5BW0()>();

        return $l0;
    }

    public androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        androidx.compose.ui.platform.ViewConfiguration $r2;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()>();

        return $r2;
    }

    public long getVisibleSize-YbymL2g()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long getVisibleSize-YbymL2g()>();

        return $l0;
    }

    public int getWidth()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int getWidth()>();

        return $i0;
    }

    public void advanceEventTime(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: void advanceEventTime(long)>(l0);

        return;
    }

    public long percentOffset-dBAh8RU(float, float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float f0, f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long percentOffset-dBAh8RU(float,float)>(f0, f1);

        return $l0;
    }

    public int roundToPx-0680j_4(float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int roundToPx-0680j_4(float)>($f0);

        return $i0;
    }

    public int roundToPx--R2X_6o(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        int $i1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $i1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: int roundToPx--R2X_6o(long)>($l0);

        return $i1;
    }

    public float toDp-GaN1DYA(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-GaN1DYA(long)>($l0);

        return $f0;
    }

    public float toDp-u2uoSUM(float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-u2uoSUM(float)>($f0);

        return $f1;
    }

    public float toDp-u2uoSUM(int)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        int $i0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toDp-u2uoSUM(int)>($i0);

        return $f0;
    }

    public long toDpSize-k-rfVVM(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toDpSize-k-rfVVM(long)>($l0);

        return $l1;
    }

    public float toPx-0680j_4(float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toPx-0680j_4(float)>($f0);

        return $f1;
    }

    public float toPx--R2X_6o(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long $l0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        float $f0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $f0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: float toPx--R2X_6o(long)>($l0);

        return $f0;
    }

    public androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.unit.DpRect $r1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r2;
        androidx.compose.ui.geometry.Rect $r3;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 := @parameter0: androidx.compose.ui.unit.DpRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)>($r1);

        return $r3;
    }

    public long toSize-XkaWNTQ(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSize-XkaWNTQ(long)>($l0);

        return $l1;
    }

    public long toSp-0xMU5do(float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-0xMU5do(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(float)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        float $f0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l0 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-kPz2Gy4(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(int)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        int $i0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        long $l1;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $l1 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: long toSp-kPz2Gy4(int)>($i0);

        return $l1;
    }

    private final androidx.compose.ui.test.InputDispatcher getInputDispatcher()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.MultiModalInjectionScopeImpl $r1;
        androidx.compose.ui.test.InputDispatcher $r2;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.MultiModalInjectionScopeImpl baseScope>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.test.MultiModalInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher$ui_test_release()>();

        return $r2;
    }

    public boolean isCapsLockOn()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.InputDispatcher $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: boolean isCapsLockOn()>();

        return $z0;
    }

    public boolean isNumLockOn()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.InputDispatcher $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: boolean isNumLockOn()>();

        return $z0;
    }

    public boolean isScrollLockOn()
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        androidx.compose.ui.test.InputDispatcher $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: boolean isScrollLockOn()>();

        return $z0;
    }

    public void keyDown-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.InputDispatcher $r1, $r2;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueKeyDown-YVgTNJs(long)>(l0);

        $r2 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r2.<androidx.compose.ui.test.InputDispatcher: void flush()>();

        return;
    }

    public void keyUp-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.InputDispatcher $r1, $r2;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: void enqueueKeyUp-YVgTNJs(long)>(l0);

        $r2 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        virtualinvoke $r2.<androidx.compose.ui.test.InputDispatcher: void flush()>();

        return;
    }

    public boolean isKeyDown-YVgTNJs(long)
    {
        androidx.compose.ui.test.KeyInjectionScopeImpl r0;
        long l0;
        androidx.compose.ui.test.InputDispatcher $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.test.KeyInjectionScopeImpl;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<androidx.compose.ui.test.KeyInjectionScopeImpl: androidx.compose.ui.test.InputDispatcher getInputDispatcher()>();

        $z0 = virtualinvoke $r1.<androidx.compose.ui.test.InputDispatcher: boolean isKeyDown-YVgTNJs(long)>(l0);

        return $z0;
    }

