androidx.camera.core.impl.ImageOutputConfig
<androidx.camera.core.impl.ImageOutputConfig: int INVALID_ROTATION>
<androidx.camera.core.impl.ImageOutputConfig: int ROTATION_NOT_SPECIFIED>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ASPECT_RATIO>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ROTATION>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_APP_TARGET_ROTATION>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_RESOLUTION>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_RESOLUTION>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_MAX_RESOLUTION>
<androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_SUPPORTED_RESOLUTIONS>
    public boolean hasTargetAspectRatio()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ASPECT_RATIO>;

        $z0 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: boolean containsOption(androidx.camera.core.impl.Config$Option)>($r1);

        return $z0;
    }

    public int getTargetAspectRatio()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ASPECT_RATIO>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getTargetRotation(int)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        i0 := @parameter0: int;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ROTATION>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int getAppTargetRotation(int)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        int i0, $i1;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        i0 := @parameter0: int;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_APP_TARGET_ROTATION>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r1, $r2);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int getTargetRotation()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ROTATION>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public android.util.Size getTargetResolution(android.util.Size)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        android.util.Size r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        r1 := @parameter0: android.util.Size;

        $r2 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_RESOLUTION>;

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (android.util.Size) $r3;

        return $r4;
    }

    public android.util.Size getTargetResolution()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        android.util.Size $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_RESOLUTION>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (android.util.Size) $r2;

        return $r3;
    }

    public android.util.Size getDefaultResolution(android.util.Size)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        android.util.Size r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        r1 := @parameter0: android.util.Size;

        $r2 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_RESOLUTION>;

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (android.util.Size) $r3;

        return $r4;
    }

    public android.util.Size getDefaultResolution()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        android.util.Size $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_RESOLUTION>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (android.util.Size) $r2;

        return $r3;
    }

    public android.util.Size getMaxResolution(android.util.Size)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        android.util.Size r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        r1 := @parameter0: android.util.Size;

        $r2 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_MAX_RESOLUTION>;

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (android.util.Size) $r3;

        return $r4;
    }

    public android.util.Size getMaxResolution()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        android.util.Size $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_MAX_RESOLUTION>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (android.util.Size) $r2;

        return $r3;
    }

    public java.util.List getSupportedResolutions(java.util.List)
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        java.util.List r1, $r4;
        androidx.camera.core.impl.Config$Option $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        r1 := @parameter0: java.util.List;

        $r2 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_SUPPORTED_RESOLUTIONS>;

        $r3 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option,java.lang.Object)>($r2, r1);

        $r4 = (java.util.List) $r3;

        return $r4;
    }

    public java.util.List getSupportedResolutions()
    {
        androidx.camera.core.impl.ImageOutputConfig r0;
        androidx.camera.core.impl.Config$Option $r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.camera.core.impl.ImageOutputConfig;

        $r1 = <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_SUPPORTED_RESOLUTIONS>;

        $r2 = interfaceinvoke r0.<androidx.camera.core.impl.ImageOutputConfig: java.lang.Object retrieveOption(androidx.camera.core.impl.Config$Option)>($r1);

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.Config$Option $r0, $r2, $r4, $r5, $r6, $r7, $r8;
        java.lang.Class $r1, $r3;

        $r0 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.targetAspectRatio", class "Landroidx/camera/core/AspectRatio;");

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ASPECT_RATIO> = $r0;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.targetRotation", $r1);

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_ROTATION> = $r2;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.appTargetRotation", $r3);

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_APP_TARGET_ROTATION> = $r4;

        $r5 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.targetResolution", class "Landroid/util/Size;");

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_TARGET_RESOLUTION> = $r5;

        $r6 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.defaultResolution", class "Landroid/util/Size;");

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_DEFAULT_RESOLUTION> = $r6;

        $r7 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.maxResolution", class "Landroid/util/Size;");

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_MAX_RESOLUTION> = $r7;

        $r8 = staticinvoke <androidx.camera.core.impl.Config$Option: androidx.camera.core.impl.Config$Option create(java.lang.String,java.lang.Class)>("camerax.core.imageOutput.supportedResolutions", class "Ljava/util/List;");

        <androidx.camera.core.impl.ImageOutputConfig: androidx.camera.core.impl.Config$Option OPTION_SUPPORTED_RESOLUTIONS> = $r8;

        return;
    }

androidx.camera.core.impl.ImageOutputConfig$Builder
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setTargetAspectRatio(int)>
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setTargetRotation(int)>
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)>
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)>
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)>
<androidx.camera.core.impl.ImageOutputConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)>
androidx.camera.core.impl.ImageOutputConfig$OptionalRotationValue
androidx.camera.core.impl.ImageOutputConfig$RotationDegreesValue
androidx.camera.core.impl.ImageOutputConfig$RotationValue
