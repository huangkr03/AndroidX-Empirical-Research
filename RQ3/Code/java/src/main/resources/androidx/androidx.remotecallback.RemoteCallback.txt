androidx.remotecallback.RemoteCallback
<androidx.remotecallback.RemoteCallback: java.lang.String EXTRA_METHOD>
<androidx.remotecallback.RemoteCallback: int TYPE_RECEIVER>
<androidx.remotecallback.RemoteCallback: int TYPE_PROVIDER>
<androidx.remotecallback.RemoteCallback: android.content.Context mContext>
<androidx.remotecallback.RemoteCallback: int mType>
<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent>
<androidx.remotecallback.RemoteCallback: android.os.Bundle mArguments>
<androidx.remotecallback.RemoteCallback: java.lang.String mReceiverClass>
<androidx.remotecallback.RemoteCallback: androidx.remotecallback.RemoteCallback LOCAL>
    public void <init>(android.content.Context, int, android.content.Intent, java.lang.String, android.os.Bundle)
    {
        androidx.remotecallback.RemoteCallback r0;
        android.content.Context r1;
        int i0;
        android.content.Intent r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.remotecallback.RemoteCallback: android.content.Context mContext> = r1;

        r0.<androidx.remotecallback.RemoteCallback: int mType> = i0;

        r0.<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent> = r2;

        r0.<androidx.remotecallback.RemoteCallback: java.lang.String mReceiverClass> = r3;

        r0.<androidx.remotecallback.RemoteCallback: android.os.Bundle mArguments> = r4;

        return;
    }

    public int getType()
    {
        androidx.remotecallback.RemoteCallback r0;
        int $i0;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        $i0 = r0.<androidx.remotecallback.RemoteCallback: int mType>;

        return $i0;
    }

    public java.lang.String getReceiverClass()
    {
        androidx.remotecallback.RemoteCallback r0;
        java.lang.String $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        $r1 = r0.<androidx.remotecallback.RemoteCallback: java.lang.String mReceiverClass>;

        return $r1;
    }

    public java.lang.String getMethodName()
    {
        androidx.remotecallback.RemoteCallback r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        $r1 = r0.<androidx.remotecallback.RemoteCallback: android.os.Bundle mArguments>;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("remotecallback.method");

        return $r2;
    }

    public android.os.Bundle getArgumentBundle()
    {
        androidx.remotecallback.RemoteCallback r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        $r1 = r0.<androidx.remotecallback.RemoteCallback: android.os.Bundle mArguments>;

        return $r1;
    }

    public android.app.PendingIntent toPendingIntent()
    {
        androidx.remotecallback.RemoteCallback r0;
        android.app.PendingIntent r1;
        android.content.Intent $r2, $r3, $r6, $r8;
        android.net.Uri $r4;
        android.content.Context $r9;

        r0 := @this: androidx.remotecallback.RemoteCallback;

        $r3 = r0.<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent>;

        $r2 = r0.<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent>;

        $r4 = staticinvoke <androidx.remotecallback.RemoteCallback: android.net.Uri generateUri(android.content.Intent)>($r2);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r4);

        $r6 = r0.<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent>;

        virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r9 = r0.<androidx.remotecallback.RemoteCallback: android.content.Context mContext>;

        $r8 = r0.<androidx.remotecallback.RemoteCallback: android.content.Intent mIntent>;

        r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r9, 0, $r8, 134217728);

        return r1;
    }

    private static android.net.Uri generateUri(android.content.Intent)
    {
        android.content.Intent r0;
        android.net.Uri$Builder r1, $r6, $r7;
        android.os.Bundle r2;
        java.util.Iterator r3;
        java.lang.String r4, $r12;
        android.net.Uri $r5, $r9, $r14;
        java.util.Set $r8;
        boolean $z0;
        java.lang.Object $r10, $r11;

        r0 := @parameter0: android.content.Intent;

        $r5 = virtualinvoke r0.<android.content.Intent: android.net.Uri getData()>();

        if $r5 == null goto label1;

        $r14 = virtualinvoke r0.<android.content.Intent: android.net.Uri getData()>();

        return $r14;

     label1:
        $r6 = new android.net.Uri$Builder;

        specialinvoke $r6.<android.net.Uri$Builder: void <init>()>();

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("remotecallback");

        r1 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("");

        r2 = virtualinvoke r0.<android.content.Intent: android.os.Bundle getExtras()>();

        $r8 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r10;

        $r11 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r4);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>(r4, $r12);

        goto label2;

     label3:
        $r9 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r9;
    }

    public static androidx.remotecallback.CallbackReceiver create(java.lang.Class, android.content.Context)
    {
        java.lang.Class r0;
        android.content.Context r1;
        androidx.remotecallback.CallbackHandlerRegistry $r2;
        androidx.remotecallback.CallbackReceiver $r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: android.content.Context;

        $r2 = <androidx.remotecallback.CallbackHandlerRegistry: androidx.remotecallback.CallbackHandlerRegistry sInstance>;

        $r3 = virtualinvoke $r2.<androidx.remotecallback.CallbackHandlerRegistry: androidx.remotecallback.CallbackReceiver getAndResetStub(java.lang.Class,android.content.Context,java.lang.String)>(r0, r1, null);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.remotecallback.RemoteCallback$1 $r0;

        $r0 = new androidx.remotecallback.RemoteCallback$1;

        specialinvoke $r0.<androidx.remotecallback.RemoteCallback$1: void <init>(android.content.Context,int,android.content.Intent,java.lang.String,android.os.Bundle)>(null, -1, null, null, null);

        <androidx.remotecallback.RemoteCallback: androidx.remotecallback.RemoteCallback LOCAL> = $r0;

        return;
    }

androidx.remotecallback.RemoteCallback$1
    void <init>(android.content.Context, int, android.content.Intent, java.lang.String, android.os.Bundle)
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        android.content.Context r1;
        int i0;
        android.content.Intent r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Bundle;

        specialinvoke r0.<androidx.remotecallback.RemoteCallback: void <init>(android.content.Context,int,android.content.Intent,java.lang.String,android.os.Bundle)>(r1, i0, r2, r3, r4);

        return;
    }

    public int getType()
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RemoteCallback.LOCAL cannot be used");

        throw $r1;
    }

    public android.os.Bundle getArgumentBundle()
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RemoteCallback.LOCAL cannot be used");

        throw $r1;
    }

    public java.lang.String getMethodName()
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RemoteCallback.LOCAL cannot be used");

        throw $r1;
    }

    public java.lang.String getReceiverClass()
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RemoteCallback.LOCAL cannot be used");

        throw $r1;
    }

    public android.app.PendingIntent toPendingIntent()
    {
        androidx.remotecallback.RemoteCallback$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.remotecallback.RemoteCallback$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("RemoteCallback.LOCAL cannot be used");

        throw $r1;
    }

androidx.remotecallback.RemoteCallback$RemoteCallbackType
