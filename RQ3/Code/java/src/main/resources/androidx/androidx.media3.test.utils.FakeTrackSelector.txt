androidx.media3.test.utils.FakeTrackSelector
<androidx.media3.test.utils.FakeTrackSelector: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory fakeTrackSelectionFactory>
    public void <init>()
    {
        androidx.media3.test.utils.FakeTrackSelector r0;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector;

        specialinvoke r0.<androidx.media3.test.utils.FakeTrackSelector: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        androidx.media3.test.utils.FakeTrackSelector r0;
        boolean z0;
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory $r1;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector;

        z0 := @parameter0: boolean;

        $r1 = new androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        specialinvoke $r1.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: void <init>(boolean)>(z0);

        specialinvoke r0.<androidx.media3.test.utils.FakeTrackSelector: void <init>(androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory)>($r1);

        return;
    }

    private void <init>(androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory)
    {
        androidx.media3.test.utils.FakeTrackSelector r0;
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory r1;
        android.content.Context $r2;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector;

        r1 := @parameter0: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        $r2 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.DefaultTrackSelector: void <init>(android.content.Context,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory)>($r2, r1);

        r0.<androidx.media3.test.utils.FakeTrackSelector: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory fakeTrackSelectionFactory> = r1;

        return;
    }

    protected androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] selectAllTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo, int[][][], int[], androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters)
    {
        androidx.media3.test.utils.FakeTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r1;
        int[][][] r2;
        int[] r3, $r8;
        androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters r4;
        int i0, $i1, $i2, i3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r5;
        androidx.media3.exoplayer.source.TrackGroupArray r6;
        boolean z0, $z1;
        androidx.media3.common.TrackGroup $r7;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition $r10;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r2 := @parameter1: int[][][];

        r3 := @parameter2: int[];

        r4 := @parameter3: androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters;

        i0 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()>();

        r5 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label6;

        r6 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)>(i3);

        $i1 = r6.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if $i1 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        $i2 = i3;

        if z0 == 0 goto label4;

        $r10 = new androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition;

        $r7 = virtualinvoke r6.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(0);

        $r8 = newarray (int)[1];

        $r8[0] = 0;

        specialinvoke $r10.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: void <init>(androidx.media3.common.TrackGroup,int[])>($r7, $r8);

        goto label5;

     label4:
        $r10 = null;

     label5:
        r5[$i2] = $r10;

        i3 = i3 + 1;

        goto label1;

     label6:
        return r5;
    }

    public java.util.List getAllTrackSelections()
    {
        androidx.media3.test.utils.FakeTrackSelector r0;
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory $r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector;

        $r1 = r0.<androidx.media3.test.utils.FakeTrackSelector: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory fakeTrackSelectionFactory>;

        $r2 = staticinvoke <androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List access$000(androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory)>($r1);

        return $r2;
    }

androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory
<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List trackSelections>
<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: boolean mayReuseTrackSelection>
    public void <init>(boolean)
    {
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory r0;
        boolean z0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: boolean mayReuseTrackSelection> = z0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List trackSelections> = $r1;

        return;
    }

    public androidx.media3.exoplayer.trackselection.ExoTrackSelection[] createTrackSelections(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[], androidx.media3.exoplayer.upstream.BandwidthMeter, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.common.Timeline)
    {
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] r1;
        androidx.media3.exoplayer.upstream.BandwidthMeter r2;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r3;
        androidx.media3.common.Timeline r4;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r5;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition r6;
        int $i0, $i1, i2;
        androidx.media3.common.TrackGroup $r7;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r8;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[];

        r2 := @parameter1: androidx.media3.exoplayer.upstream.BandwidthMeter;

        r3 := @parameter2: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r4 := @parameter3: androidx.media3.common.Timeline;

        $i0 = lengthof r1;

        r5 = newarray (androidx.media3.exoplayer.trackselection.ExoTrackSelection)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        r6 = r1[i2];

        if r6 == null goto label2;

        $r7 = r6.<androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition: androidx.media3.common.TrackGroup group>;

        $r8 = specialinvoke r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: androidx.media3.exoplayer.trackselection.ExoTrackSelection createTrackSelection(androidx.media3.common.TrackGroup)>($r7);

        r5[i2] = $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r5;
    }

    private androidx.media3.exoplayer.trackselection.ExoTrackSelection createTrackSelection(androidx.media3.common.TrackGroup)
    {
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory r0;
        androidx.media3.common.TrackGroup r1, $r7;
        androidx.media3.test.utils.FakeTrackSelection r2, $r3, r9;
        boolean $z0, $z2, $z3;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        java.util.Iterator r8;

        r0 := @this: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        $z0 = r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: boolean mayReuseTrackSelection>;

        if $z0 == 0 goto label3;

        $r5 = r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List trackSelections>;

        r8 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r6 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.test.utils.FakeTrackSelection) $r6;

        $r7 = virtualinvoke r2.<androidx.media3.test.utils.FakeTrackSelection: androidx.media3.common.TrackGroup getTrackGroup()>();

        $z3 = virtualinvoke $r7.<androidx.media3.common.TrackGroup: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        $r3 = new androidx.media3.test.utils.FakeTrackSelection;

        specialinvoke $r3.<androidx.media3.test.utils.FakeTrackSelection: void <init>(androidx.media3.common.TrackGroup)>(r1);

        r9 = $r3;

        $r4 = r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List trackSelections>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r9);

        return r9;
    }

    static java.util.List access$000(androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory)
    {
        androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory;

        $r1 = r0.<androidx.media3.test.utils.FakeTrackSelector$FakeTrackSelectionFactory: java.util.List trackSelections>;

        return $r1;
    }

