androidx.test.core.app.InstrumentationActivityInvoker
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String TARGET_ACTIVITY_INTENT_KEY>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String TARGET_ACTIVITY_OPTIONS_BUNDLE_KEY>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String BOOTSTRAP_ACTIVITY_RESULT_RECEIVED>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String BOOTSTRAP_ACTIVITY_RESULT_CODE_KEY>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String BOOTSTRAP_ACTIVITY_RESULT_DATA_KEY>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String CANCEL_ACTIVITY_RESULT_WAITER>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String EMPTY_ACTIVITY_RESUMED>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String EMPTY_FLOATING_ACTIVITY_RESUMED>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String FINISH_BOOTSTRAP_ACTIVITY>
<androidx.test.core.app.InstrumentationActivityInvoker: java.lang.String FINISH_EMPTY_ACTIVITIES>
<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter>
    public android.app.Instrumentation$ActivityResult getActivityResult()
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter $r1, $r2;
        android.app.Instrumentation$ActivityResult $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You must start Activity first. Make sure you are using launchActivityForResult() to launch an Activity.");

        throw $r4;

     label1:
        $r2 = r0.<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter>;

        $r3 = virtualinvoke $r2.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: android.app.Instrumentation$ActivityResult getActivityResult()>();

        return $r3;
    }

    public android.content.Intent getIntentForActivity(java.lang.Class)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        java.lang.Class r1;
        android.content.Intent $r2;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <androidx.test.internal.platform.app.ActivityInvoker$-CC: android.content.Intent $default$getIntentForActivity(androidx.test.internal.platform.app.ActivityInvoker,java.lang.Class)>(r0, r1);

        return $r2;
    }

    static volatile void '-$$Nest$smregisterBroadcastReceiver'(android.content.Context, android.content.BroadcastReceiver, android.content.IntentFilter)
    {
        android.content.Context r0;
        android.content.BroadcastReceiver r1;
        android.content.IntentFilter r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.BroadcastReceiver;

        r2 := @parameter2: android.content.IntentFilter;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void registerBroadcastReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r0, r1, r2);

        return;
    }

    void <init>()
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void checkActivityStageIsIn(android.app.Activity, java.util.Set)
    {
        android.app.Activity r0, r2;
        java.util.Set r1, r3;
        android.app.Instrumentation $r4;
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1 $r5;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: java.util.Set;

        $r4 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        r3 = r1;

        r2 = r0;

        $r5 = new androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1;

        specialinvoke $r5.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: void <init>(android.app.Activity,java.util.Set)>(r2, r3);

        virtualinvoke $r4.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r5);

        return;
    }

    private static transient void checkActivityStageIsIn(android.app.Activity, androidx.test.runner.lifecycle.Stage[])
    {
        android.app.Activity r0;
        androidx.test.runner.lifecycle.Stage[] r1;
        java.util.HashSet $r2;
        java.util.List $r3;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: androidx.test.runner.lifecycle.Stage[];

        $r2 = new java.util.HashSet;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void checkActivityStageIsIn(android.app.Activity,java.util.Set)>(r0, $r2);

        return;
    }

    public void finishActivity(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.app.Activity r1, r16, r17;
        android.app.Instrumentation $r2, $r13;
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2 $r4, $r15;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter $r5, $r8;
        android.content.Context $r6, $r9, $r11;
        android.content.Intent $r7, $r10, $r12;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startEmptyActivitySync()>();

        $r2 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r16 = r1;

        $r4 = new androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2;

        specialinvoke $r4.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2: void <init>(android.app.Activity)>(r16);

        virtualinvoke $r2.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r4);

        $r5 = r0.<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter>;

        if $r5 == null goto label1;

        $r11 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_BOOTSTRAP_ACTIVITY");

        virtualinvoke $r11.<android.content.Context: void sendBroadcast(android.content.Intent)>($r12);

        specialinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startEmptyActivitySync()>();

        $r13 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r17 = r1;

        $r15 = new androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2;

        specialinvoke $r15.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2: void <init>(android.app.Activity)>(r17);

        virtualinvoke $r13.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r15);

     label1:
        $r6 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        virtualinvoke $r6.<android.content.Context: void sendBroadcast(android.content.Intent)>($r7);

        $r8 = r0.<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter>;

        if $r8 == null goto label2;

        $r9 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.CANCEL_ACTIVITY_RESULT_WAITER");

        virtualinvoke $r9.<android.content.Context: void sendBroadcast(android.content.Intent)>($r10);

     label2:
        return;
    }

    static void lambda$checkActivityStageIsIn$0(android.app.Activity, java.util.Set)
    {
        android.app.Activity r0;
        java.util.Set r1;
        androidx.test.runner.lifecycle.Stage r2;
        androidx.test.runner.lifecycle.ActivityLifecycleMonitor $r3;
        boolean $z0;
        java.lang.Object[] $r4;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: java.util.Set;

        $r3 = staticinvoke <androidx.test.runner.lifecycle.ActivityLifecycleMonitorRegistry: androidx.test.runner.lifecycle.ActivityLifecycleMonitor getInstance()>();

        r2 = interfaceinvoke $r3.<androidx.test.runner.lifecycle.ActivityLifecycleMonitor: androidx.test.runner.lifecycle.Stage getLifecycleStageOf(android.app.Activity)>(r0);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r1;

        $r4[1] = r2;

        staticinvoke <androidx.test.internal.util.Checks: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "Activity\'s stage must be %s but was %s", $r4);

        return;
    }

    public void pauseActivity(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.app.Activity r1;
        androidx.test.runner.lifecycle.Stage[] $r2;
        androidx.test.runner.lifecycle.Stage $r3, $r4;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.app.Activity;

        $r2 = newarray (androidx.test.runner.lifecycle.Stage)[2];

        $r3 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r2[0] = $r3;

        $r4 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage PAUSED>;

        $r2[1] = $r4;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void checkActivityStageIsIn(android.app.Activity,androidx.test.runner.lifecycle.Stage[])>(r1, $r2);

        specialinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startFloatingEmptyActivitySync()>();

        return;
    }

    public void recreateActivity(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.app.Activity r1, r2;
        androidx.test.runner.lifecycle.Stage[] $r3;
        androidx.test.runner.lifecycle.Stage $r4, $r5, $r6;
        android.app.Instrumentation $r7;
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0 $r9;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.app.Activity;

        $r3 = newarray (androidx.test.runner.lifecycle.Stage)[3];

        $r4 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r3[0] = $r4;

        $r5 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage PAUSED>;

        $r3[1] = $r5;

        $r6 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage STOPPED>;

        $r3[2] = $r6;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void checkActivityStageIsIn(android.app.Activity,androidx.test.runner.lifecycle.Stage[])>(r1, $r3);

        $r7 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r2 = r1;

        $r9 = new androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0;

        specialinvoke $r9.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0: void <init>(android.app.Activity)>(r2);

        virtualinvoke $r7.<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>($r9);

        return;
    }

    private static void registerBroadcastReceiver(android.content.Context, android.content.BroadcastReceiver, android.content.IntentFilter)
    {
        android.content.Context r0;
        android.content.BroadcastReceiver r1;
        android.content.IntentFilter r2;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.BroadcastReceiver;

        r2 := @parameter2: android.content.IntentFilter;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 33 goto label1;

        virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r1, r2);

        goto label2;

     label1:
        virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)>(r1, r2, 2);

     label2:
        return;
    }

    public void resumeActivity(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.app.Activity r1;
        androidx.test.runner.lifecycle.Stage[] $r2;
        androidx.test.runner.lifecycle.Stage $r3, $r4, $r5;
        android.content.Context $r6;
        android.content.Intent $r7;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.app.Activity;

        $r2 = newarray (androidx.test.runner.lifecycle.Stage)[3];

        $r3 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r2[0] = $r3;

        $r4 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage PAUSED>;

        $r2[1] = $r4;

        $r5 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage STOPPED>;

        $r2[2] = $r5;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void checkActivityStageIsIn(android.app.Activity,androidx.test.runner.lifecycle.Stage[])>(r1, $r2);

        $r6 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        virtualinvoke $r6.<android.content.Context: void sendBroadcast(android.content.Intent)>($r7);

        return;
    }

    public void startActivity(android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.content.Intent r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startActivity(android.content.Intent,android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivity(android.content.Intent, android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.content.Intent r1, $r8, $r10;
        android.os.Bundle r2;
        android.content.pm.ActivityInfo r3;
        java.lang.String r4, $r21;
        android.content.Context $r5, $r7, $r9;
        android.content.pm.PackageManager $r6;
        int $i0;
        android.app.Instrumentation $r12, $r14;
        java.lang.IllegalStateException $r16;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18, $r19, $r20;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        $r5 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r6, 0);

        if r3 != null goto label1;

        $r17 = new java.lang.RuntimeException;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve activity for: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label1:
        $r7 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_BOOTSTRAP_ACTIVITY");

        virtualinvoke $r7.<android.content.Context: void sendBroadcast(android.content.Intent)>($r8);

        $r9 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        virtualinvoke $r9.<android.content.Context: void sendBroadcast(android.content.Intent)>($r10);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(268468224);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 28 goto label3;

        if r2 == null goto label2;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Starting an activity with activityOptions is not supported on APIs below 28.");

        throw $r16;

     label2:
        $r14 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r14.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>(r1);

        goto label4;

     label3:
        $r12 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r12.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent,android.os.Bundle)>(r1, r2);

     label4:
        return;
    }

    public void startActivityForResult(android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.content.Intent r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.content.Intent;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startActivityForResult(android.content.Intent,android.os.Bundle)>(r1, null);

        return;
    }

    public void startActivityForResult(android.content.Intent, android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.content.Intent r1, r4, $r9, $r11, $r14, $r15, $r18;
        android.os.Bundle r2;
        android.content.pm.ActivityInfo r3;
        java.lang.String r5, $r25;
        android.content.Context $r6, $r8, $r10, $r13, $r16, $r19, $r20;
        android.content.pm.PackageManager $r7;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter $r12;
        android.app.PendingIntent $r17;
        int $i0;
        java.lang.IllegalStateException $r21;
        java.lang.StringBuilder $r22, $r23, $r24;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.os.Bundle;

        $r6 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>($r7, 0);

        if r3 != null goto label1;

        $r21 = new java.lang.IllegalStateException;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to resolve activity for: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label1:
        $r8 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_BOOTSTRAP_ACTIVITY");

        virtualinvoke $r8.<android.content.Context: void sendBroadcast(android.content.Intent)>($r9);

        $r10 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        virtualinvoke $r10.<android.content.Context: void sendBroadcast(android.content.Intent)>($r11);

        $r12 = new androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

        $r13 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        specialinvoke $r12.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: void <init>(android.content.Context)>($r13);

        r0.<androidx.test.core.app.InstrumentationActivityInvoker: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter activityResultWaiter> = $r12;

        $r14 = virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: android.content.Intent getIntentForActivity(java.lang.Class)>(class "Landroidx/test/core/app/InstrumentationActivityInvoker$BootstrapActivity;");

        $r15 = virtualinvoke $r14.<android.content.Intent: android.content.Intent setFlags(int)>(268468224);

        $r16 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r17 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r16, 0, r1, 167772160);

        $r18 = virtualinvoke $r15.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("androidx.test.core.app.InstrumentationActivityInvoker.START_TARGET_ACTIVITY_INTENT_KEY", $r17);

        r4 = virtualinvoke $r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("androidx.test.core.app.InstrumentationActivityInvoker.TARGET_ACTIVITY_OPTIONS_BUNDLE_KEY", r2);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label2;

        $r20 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r20.<android.content.Context: void startActivity(android.content.Intent)>(r4);

        goto label3;

     label2:
        $r19 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r19.<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>(r4, r2);

     label3:
        return;
    }

    private void startEmptyActivitySync()
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        java.util.concurrent.CountDownLatch r1, $r5;
        androidx.test.core.app.InstrumentationActivityInvoker$2 r2, $r6;
        java.lang.Throwable r3, r4, $r14, $r16;
        android.content.Context $r7, $r9, $r13, $r17;
        android.content.IntentFilter $r8;
        android.content.Intent $r10, $r11;
        long $l0;
        java.util.concurrent.TimeUnit $r12;
        java.lang.RuntimeException $r15;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        $r5 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r1 = $r5;

        $r6 = new androidx.test.core.app.InstrumentationActivityInvoker$2;

        specialinvoke $r6.<androidx.test.core.app.InstrumentationActivityInvoker$2: void <init>(androidx.test.core.app.InstrumentationActivityInvoker,java.util.concurrent.CountDownLatch)>(r0, r1);

        r2 = $r6;

        $r7 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.EMPTY_ACTIVITY_RESUMED");

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void registerBroadcastReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>($r7, r2, $r8);

        $r9 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r10 = virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: android.content.Intent getIntentForActivity(java.lang.Class)>(class "Landroidx/test/core/app/InstrumentationActivityInvoker$EmptyActivity;");

        $r11 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        virtualinvoke $r9.<android.content.Context: void startActivity(android.content.Intent)>($r11);

     label1:
        $l0 = staticinvoke <androidx.test.internal.platform.app.ActivityLifecycleTimeout: long getMillis()>();

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke r1.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>($l0, $r12);

     label2:
        $r13 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r13.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r2);

        goto label6;

     label3:
        $r14 := @caughtexception;

        r3 = $r14;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to stop activity", r3);

        throw $r15;

     label4:
        $r16 := @caughtexception;

        r4 = $r16;

     label5:
        $r17 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r17.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r2);

        throw r4;

     label6:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    private void startFloatingEmptyActivitySync()
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        java.util.concurrent.CountDownLatch r1, $r5;
        androidx.test.core.app.InstrumentationActivityInvoker$1 r2, $r6;
        java.lang.Throwable r3, r4, $r14, $r16;
        android.content.Context $r7, $r9, $r13, $r15;
        android.content.IntentFilter $r8;
        android.content.Intent $r10, $r11;
        long $l0;
        java.util.concurrent.TimeUnit $r12;
        java.lang.RuntimeException $r17;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        $r5 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r5.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r1 = $r5;

        $r6 = new androidx.test.core.app.InstrumentationActivityInvoker$1;

        specialinvoke $r6.<androidx.test.core.app.InstrumentationActivityInvoker$1: void <init>(androidx.test.core.app.InstrumentationActivityInvoker,java.util.concurrent.CountDownLatch)>(r0, r1);

        r2 = $r6;

        $r7 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.EMPTY_FLOATING_ACTIVITY_RESUMED");

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void registerBroadcastReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>($r7, r2, $r8);

        $r9 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        $r10 = virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: android.content.Intent getIntentForActivity(java.lang.Class)>(class "Landroidx/test/core/app/InstrumentationActivityInvoker$EmptyFloatingActivity;");

        $r11 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        virtualinvoke $r9.<android.content.Context: void startActivity(android.content.Intent)>($r11);

     label1:
        $l0 = staticinvoke <androidx.test.internal.platform.app.ActivityLifecycleTimeout: long getMillis()>();

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke r1.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>($l0, $r12);

     label2:
        $r13 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r13.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r2);

        goto label6;

     label3:
        $r16 := @caughtexception;

        r3 = $r16;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to pause activity", r3);

        throw $r17;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

     label5:
        $r15 = staticinvoke <androidx.test.core.app.ApplicationProvider: android.content.Context getApplicationContext()>();

        virtualinvoke $r15.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r2);

        throw r4;

     label6:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void stopActivity(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker r0;
        android.app.Activity r1;
        androidx.test.runner.lifecycle.Stage[] $r2;
        androidx.test.runner.lifecycle.Stage $r3, $r4, $r5;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker;

        r1 := @parameter0: android.app.Activity;

        $r2 = newarray (androidx.test.runner.lifecycle.Stage)[3];

        $r3 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage RESUMED>;

        $r2[0] = $r3;

        $r4 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage PAUSED>;

        $r2[1] = $r4;

        $r5 = <androidx.test.runner.lifecycle.Stage: androidx.test.runner.lifecycle.Stage STOPPED>;

        $r2[2] = $r5;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void checkActivityStageIsIn(android.app.Activity,androidx.test.runner.lifecycle.Stage[])>(r1, $r2);

        specialinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker: void startEmptyActivitySync()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0
<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0: android.app.Activity f$0>
    public void <init>(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0 r0;
        android.app.Activity r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0: android.app.Activity f$0> = r1;

        return;
    }

    public final void run()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0 r0;
        android.app.Activity $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0;

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda0: android.app.Activity f$0>;

        virtualinvoke $r1.<android.app.Activity: void recreate()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1
<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: android.app.Activity f$0>
<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: java.util.Set f$1>
    public void <init>(android.app.Activity, java.util.Set)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1 r0;
        android.app.Activity r1;
        java.util.Set r2;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: android.app.Activity f$0> = r1;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: java.util.Set f$1> = r2;

        return;
    }

    public final void run()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1 r0;
        java.util.Set $r1;
        android.app.Activity $r2;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1;

        $r2 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: android.app.Activity f$0>;

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda1: java.util.Set f$1>;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void lambda$checkActivityStageIsIn$0(android.app.Activity,java.util.Set)>($r2, $r1);

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2
<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2: android.app.Activity f$0>
    public void <init>(android.app.Activity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2 r0;
        android.app.Activity r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2: android.app.Activity f$0> = r1;

        return;
    }

    public final void run()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2 r0;
        android.app.Activity $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2;

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$$ExternalSyntheticLambda2: android.app.Activity f$0>;

        virtualinvoke $r1.<android.app.Activity: void finish()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$1
<androidx.test.core.app.InstrumentationActivityInvoker$1: java.util.concurrent.CountDownLatch val$latch>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker, java.util.concurrent.CountDownLatch)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$1 r0;
        androidx.test.core.app.InstrumentationActivityInvoker r1;
        java.util.concurrent.CountDownLatch r2;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$1;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker;

        r2 := @parameter1: java.util.concurrent.CountDownLatch;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$1: java.util.concurrent.CountDownLatch val$latch> = r2;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.util.concurrent.CountDownLatch $r3;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$1: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$2
<androidx.test.core.app.InstrumentationActivityInvoker$2: java.util.concurrent.CountDownLatch val$latch>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker, java.util.concurrent.CountDownLatch)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$2 r0;
        androidx.test.core.app.InstrumentationActivityInvoker r1;
        java.util.concurrent.CountDownLatch r2;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$2;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker;

        r2 := @parameter1: java.util.concurrent.CountDownLatch;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$2: java.util.concurrent.CountDownLatch val$latch> = r2;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$2 r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.util.concurrent.CountDownLatch $r3;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$2;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$2: java.util.concurrent.CountDownLatch val$latch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1
<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter this$0>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1 r0;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1 r0;
        android.content.Context r1;
        android.content.Intent r2, $r10, r11;
        int i0;
        java.lang.String $r3, $r4;
        boolean $z0;
        android.os.Parcelable $r5;
        android.app.Instrumentation$ActivityResult $r6;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter $r7, $r8;
        java.util.concurrent.CountDownLatch $r9;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        virtualinvoke r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r0);

        $r3 = "androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_RECEIVED";

        $r4 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_CODE_KEY", 0);

        $r5 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_DATA_KEY");

        r11 = (android.content.Intent) $r5;

        if r11 == null goto label1;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>(r11);

        r11 = $r10;

     label1:
        $r7 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter this$0>;

        $r6 = new android.app.Instrumentation$ActivityResult;

        specialinvoke $r6.<android.app.Instrumentation$ActivityResult: void <init>(int,android.content.Intent)>(i0, r11);

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: void '-$$Nest$fputactivityResult'(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter,android.app.Instrumentation$ActivityResult)>($r7, $r6);

        $r8 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter this$0>;

        $r9 = staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.util.concurrent.CountDownLatch '-$$Nest$fgetlatch'(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter)>($r8);

        virtualinvoke $r9.<java.util.concurrent.CountDownLatch: void countDown()>();

     label2:
        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter
<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.lang.String TAG>
<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.util.concurrent.CountDownLatch latch>
<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: android.app.Instrumentation$ActivityResult activityResult>
    public android.app.Instrumentation$ActivityResult getActivityResult()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter r0;
        java.lang.Throwable r1, $r9;
        java.util.concurrent.CountDownLatch $r2;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Object[] $r4;
        android.app.Instrumentation$ActivityResult $r5, $r8;
        java.lang.Long $r6;
        java.lang.String $r10;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

     label1:
        $r2 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.util.concurrent.CountDownLatch latch>;

        $l0 = staticinvoke <androidx.test.internal.platform.app.ActivityLifecycleTimeout: long getMillis()>();

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>($l0, $r3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = <androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r10, "Waiting activity result was interrupted", r1);

     label4:
        $r5 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: android.app.Instrumentation$ActivityResult activityResult>;

        $r4 = newarray (java.lang.Object)[1];

        $l1 = staticinvoke <androidx.test.internal.platform.app.ActivityLifecycleTimeout: long getMillis()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[0] = $r6;

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r5, "onActivityResult never be called after %d milliseconds", $r4);

        $r8 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: android.app.Instrumentation$ActivityResult activityResult>;

        return $r8;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static volatile java.util.concurrent.CountDownLatch '-$$Nest$fgetlatch'(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter r0;
        java.util.concurrent.CountDownLatch $r1;

        r0 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.util.concurrent.CountDownLatch latch>;

        return $r1;
    }

    static volatile void '-$$Nest$fputactivityResult'(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter, android.app.Instrumentation$ActivityResult)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter r0;
        android.app.Instrumentation$ActivityResult r1;

        r0 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

        r1 := @parameter1: android.app.Instrumentation$ActivityResult;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: android.app.Instrumentation$ActivityResult activityResult> = r1;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/core/app/InstrumentationActivityInvoker$ActivityResultWaiter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter r0;
        android.content.Context r1;
        androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1 r2, $r5;
        android.content.IntentFilter r3, $r6;
        java.util.concurrent.CountDownLatch $r4;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r4.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter: java.util.concurrent.CountDownLatch latch> = $r4;

        $r5 = new androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1;

        specialinvoke $r5.<androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter$1: void <init>(androidx.test.core.app.InstrumentationActivityInvoker$ActivityResultWaiter)>(r0);

        r2 = $r5;

        $r6 = new android.content.IntentFilter;

        specialinvoke $r6.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_RECEIVED");

        r3 = $r6;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.CANCEL_ACTIVITY_RESULT_WAITER");

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void '-$$Nest$smregisterBroadcastReceiver'(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r1, r2, r3);

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1
<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity this$0>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1 r0;
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity $r3, $r4;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity this$0>;

        virtualinvoke $r3.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void finishActivity(int)>(0);

        $r4 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity this$0>;

        virtualinvoke $r4.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void finish()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity
<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: java.lang.String TAG>
<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: java.lang.String IS_TARGET_ACTIVITY_STARTED_KEY>
<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.BroadcastReceiver receiver>
<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: boolean isTargetActivityStarted>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/core/app/InstrumentationActivityInvoker$BootstrapActivity;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: java.lang.String TAG> = $r1;

        return;
    }

    public void <init>()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1 $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = new androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1;

        specialinvoke $r1.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity$1: void <init>(androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity)>(r0);

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.BroadcastReceiver receiver> = $r1;

        return;
    }

    public void finish()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        specialinvoke r0.<android.app.Activity: void finish()>();

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        int i0, i1;
        android.content.Intent r1, r2, $r3;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        if i0 != 0 goto label2;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_RECEIVED");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_CODE_KEY", i1);

        if r1 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("androidx.test.core.app.InstrumentationActivityInvoker.BOOTSTRAP_ACTIVITY_RESULT_DATA_KEY", r1);

     label1:
        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void sendBroadcast(android.content.Intent)>(r2);

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void finish()>();

     label2:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        android.os.Bundle r1;
        android.content.BroadcastReceiver $r3;
        boolean $z0, $z1;
        android.content.IntentFilter r5;
        android.content.Context r6;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.BroadcastReceiver receiver>;

        r5 = new android.content.IntentFilter;

        specialinvoke r5.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_BOOTSTRAP_ACTIVITY");

        r6 = (android.content.Context) r0;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void '-$$Nest$smregisterBroadcastReceiver'(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r6, $r3, r5);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("IS_TARGET_ACTIVITY_STARTED_KEY", 0);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: boolean isTargetActivityStarted> = $z1;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onDestroy()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        android.content.BroadcastReceiver $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.BroadcastReceiver receiver>;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    protected void onResume()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        android.app.PendingIntent r1, $r6;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r11;
        boolean $z0;
        android.content.Intent $r4, $r8;
        android.os.Parcelable $r5;
        java.lang.Object $r7;
        android.content.IntentSender $r9, $r10;
        int $i0;
        java.lang.String $r12;
        java.lang.RuntimeException $r13;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $z0 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: boolean isTargetActivityStarted>;

        if $z0 != 0 goto label6;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: boolean isTargetActivityStarted> = 1;

        $r4 = virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.Intent getIntent()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.START_TARGET_ACTIVITY_INTENT_KEY");

        $r6 = (android.app.PendingIntent) $r5;

        $r7 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r1 = (android.app.PendingIntent) $r7;

        $r8 = virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: android.content.Intent getIntent()>();

        r2 = virtualinvoke $r8.<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.TARGET_ACTIVITY_OPTIONS_BUNDLE_KEY");

     label1:
        if r2 == null goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label3;

     label2:
        $r9 = virtualinvoke r1.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>($r9, 0, null, 268435456, 0, 0);

        goto label4;

     label3:
        $r10 = virtualinvoke r1.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>($r10, 0, null, 268435456, 0, 0, r2);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = <androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, "Failed to start target activity.", r3);

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r13;

     label6:
        return;

        catch android.content.IntentSender$SendIntentException from label1 to label4 with label5;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $z0 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$BootstrapActivity: boolean isTargetActivityStarted>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("IS_TARGET_ACTIVITY_STARTED_KEY", $z0);

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1
<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity this$0>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1 r0;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity $r3;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity this$0>;

        virtualinvoke $r3.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: void finish()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity
<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: android.content.BroadcastReceiver receiver>
    public void <init>()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r0;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1 $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = new androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1;

        specialinvoke $r1.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity$1: void <init>(androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity)>(r0);

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: android.content.BroadcastReceiver receiver> = $r1;

        return;
    }

    public void finish()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r0;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        specialinvoke r0.<android.app.Activity: void finish()>();

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r0;
        android.os.Bundle r1;
        android.content.BroadcastReceiver $r3;
        android.content.IntentFilter r4;
        android.content.Context r5;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: android.content.BroadcastReceiver receiver>;

        r4 = new android.content.IntentFilter;

        specialinvoke r4.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        r5 = (android.content.Context) r0;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void '-$$Nest$smregisterBroadcastReceiver'(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r5, $r3, r4);

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onDestroy()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r0;
        android.content.BroadcastReceiver $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: android.content.BroadcastReceiver receiver>;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    protected void onResume()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity r0;
        android.content.Intent $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.EMPTY_ACTIVITY_RESUMED");

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyActivity: void sendBroadcast(android.content.Intent)>($r1);

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1
<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity this$0>
    void <init>(androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1 r0;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1;

        r1 := @parameter0: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity $r3;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity this$0>;

        virtualinvoke $r3.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: void finish()>();

        return;
    }

androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity
<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: android.content.BroadcastReceiver receiver>
    public void <init>()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r0;
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1 $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = new androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1;

        specialinvoke $r1.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity$1: void <init>(androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity)>(r0);

        r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: android.content.BroadcastReceiver receiver> = $r1;

        return;
    }

    public void finish()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r0;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        specialinvoke r0.<android.app.Activity: void finish()>();

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r0;
        android.os.Bundle r1;
        android.content.BroadcastReceiver $r3;
        android.content.IntentFilter r4;
        android.content.Context r5;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r3 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: android.content.BroadcastReceiver receiver>;

        r4 = new android.content.IntentFilter;

        specialinvoke r4.<android.content.IntentFilter: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.FINISH_EMPTY_ACTIVITIES");

        r5 = (android.content.Context) r0;

        staticinvoke <androidx.test.core.app.InstrumentationActivityInvoker: void '-$$Nest$smregisterBroadcastReceiver'(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r5, $r3, r4);

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    protected void onDestroy()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r0;
        android.content.BroadcastReceiver $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: android.content.BroadcastReceiver receiver>;

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    protected void onResume()
    {
        androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity r0;
        android.content.Intent $r1;

        r0 := @this: androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("androidx.test.core.app.InstrumentationActivityInvoker.EMPTY_FLOATING_ACTIVITY_RESUMED");

        virtualinvoke r0.<androidx.test.core.app.InstrumentationActivityInvoker$EmptyFloatingActivity: void sendBroadcast(android.content.Intent)>($r1);

        return;
    }

