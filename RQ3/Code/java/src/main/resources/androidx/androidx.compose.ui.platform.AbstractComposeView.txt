androidx.compose.ui.platform.AbstractComposeView
<androidx.compose.ui.platform.AbstractComposeView: java.lang.ref.WeakReference cachedViewTreeCompositionContext>
<androidx.compose.ui.platform.AbstractComposeView: android.os.IBinder previousAttachedWindowToken>
<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition>
<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext parentContext>
<androidx.compose.ui.platform.AbstractComposeView: kotlin.jvm.functions.Function0 disposeViewCompositionStrategy>
<androidx.compose.ui.platform.AbstractComposeView: boolean showLayoutBounds>
<androidx.compose.ui.platform.AbstractComposeView: boolean creatingComposition>
<androidx.compose.ui.platform.AbstractComposeView: int $stable>
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        androidx.compose.ui.platform.ViewCompositionStrategy$Companion $r3;
        androidx.compose.ui.platform.ViewCompositionStrategy $r4;
        kotlin.jvm.functions.Function0 $r5;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setClipChildren(boolean)>(0);

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setClipToPadding(boolean)>(0);

        $r3 = <androidx.compose.ui.platform.ViewCompositionStrategy: androidx.compose.ui.platform.ViewCompositionStrategy$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.platform.ViewCompositionStrategy$Companion: androidx.compose.ui.platform.ViewCompositionStrategy getDefault()>();

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.platform.ViewCompositionStrategy: kotlin.jvm.functions.Function0 installFor(androidx.compose.ui.platform.AbstractComposeView)>(r0);

        r0.<androidx.compose.ui.platform.AbstractComposeView: kotlin.jvm.functions.Function0 disposeViewCompositionStrategy> = $r5;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.content.Context r1;
        int i0, $i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        android.util.AttributeSet r3;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: android.util.AttributeSet;

        i3 := @parameter2: int;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        i3 = 0;

     label2:
        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r3, i3);

        return;
    }

    private final void setPreviousAttachedWindowToken(android.os.IBinder)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.os.IBinder r1, $r2;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<androidx.compose.ui.platform.AbstractComposeView: android.os.IBinder previousAttachedWindowToken>;

        if $r2 == r1 goto label1;

        r0.<androidx.compose.ui.platform.AbstractComposeView: android.os.IBinder previousAttachedWindowToken> = r1;

        r0.<androidx.compose.ui.platform.AbstractComposeView: java.lang.ref.WeakReference cachedViewTreeCompositionContext> = null;

     label1:
        return;
    }

    private final void setParentContext(androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext r1, $r3;
        androidx.compose.runtime.Composition r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        $r3 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext parentContext>;

        if $r3 == r1 goto label2;

        r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext parentContext> = r1;

        if r1 == null goto label1;

        r0.<androidx.compose.ui.platform.AbstractComposeView: java.lang.ref.WeakReference cachedViewTreeCompositionContext> = null;

     label1:
        r2 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition>;

        if r2 == null goto label2;

        interfaceinvoke r2.<androidx.compose.runtime.Composition: void dispose()>();

        r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition> = null;

        $z0 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void ensureCompositionCreated()>();

     label2:
        return;
    }

    public final void setParentCompositionContext(androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setParentContext(androidx.compose.runtime.CompositionContext)>(r1);

        return;
    }

    private static void getDisposeViewCompositionStrategy$annotations()
    {
        return;
    }

    public final void setViewCompositionStrategy(androidx.compose.ui.platform.ViewCompositionStrategy)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.ui.platform.ViewCompositionStrategy r1;
        kotlin.jvm.functions.Function0 $r2, $r3;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: androidx.compose.ui.platform.ViewCompositionStrategy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "strategy");

        $r2 = r0.<androidx.compose.ui.platform.AbstractComposeView: kotlin.jvm.functions.Function0 disposeViewCompositionStrategy>;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label1;

     label1:
        $r3 = interfaceinvoke r1.<androidx.compose.ui.platform.ViewCompositionStrategy: kotlin.jvm.functions.Function0 installFor(androidx.compose.ui.platform.AbstractComposeView)>(r0);

        r0.<androidx.compose.ui.platform.AbstractComposeView: kotlin.jvm.functions.Function0 disposeViewCompositionStrategy> = $r3;

        return;
    }

    protected boolean getShouldCreateCompositionOnAttachedToWindow()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        return 1;
    }

    public final boolean getShowLayoutBounds()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $z0 = r0.<androidx.compose.ui.platform.AbstractComposeView: boolean showLayoutBounds>;

        return $z0;
    }

    public final void setShowLayoutBounds(boolean)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        boolean z0;
        android.view.View r1, $r2;
        androidx.compose.ui.node.Owner $r3;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.ui.platform.AbstractComposeView: boolean showLayoutBounds> = z0;

        $r2 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: android.view.View getChildAt(int)>(0);

        if $r2 == null goto label1;

        r1 = $r2;

        $r3 = (androidx.compose.ui.node.Owner) r1;

        interfaceinvoke $r3.<androidx.compose.ui.node.Owner: void setShowLayoutBounds(boolean)>(z0);

        goto label1;

     label1:
        return;
    }

    public static void getShowLayoutBounds$annotations()
    {
        return;
    }

<androidx.compose.ui.platform.AbstractComposeView: void Content(androidx.compose.runtime.Composer,int)>
    public final void createComposition()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r1 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext parentContext>;

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        $r4 = "createComposition requires either a parent reference or the View to be attachedto a window. Attach the View or call setParentCompositionReference.";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label4:
        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void ensureCompositionCreated()>();

        return;
    }

    private final void checkAddView()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $z0 = r0.<androidx.compose.ui.platform.AbstractComposeView: boolean creatingComposition>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add views to ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; only Compose content is supported");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label1:
        return;
    }

    private final boolean isAlive(androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext $r1;
        boolean $z0, $z1;
        androidx.compose.runtime.Recomposer $r2;
        kotlinx.coroutines.flow.StateFlow $r3;
        java.lang.Object $r4;
        androidx.compose.runtime.Recomposer$State $r5, $r7;
        java.lang.Enum $r6;
        int $i0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        $z0 = $r1 instanceof androidx.compose.runtime.Recomposer;

        if $z0 == 0 goto label1;

        $r2 = (androidx.compose.runtime.Recomposer) $r1;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.Recomposer: kotlinx.coroutines.flow.StateFlow getCurrentState()>();

        $r4 = interfaceinvoke $r3.<kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()>();

        $r7 = (androidx.compose.runtime.Recomposer$State) $r4;

        $r5 = <androidx.compose.runtime.Recomposer$State: androidx.compose.runtime.Recomposer$State ShuttingDown>;

        $r6 = (java.lang.Enum) $r5;

        $i0 = virtualinvoke $r7.<androidx.compose.runtime.Recomposer$State: int compareTo(java.lang.Enum)>($r6);

        if $i0 <= 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private final androidx.compose.runtime.CompositionContext cacheIfAlive(androidx.compose.runtime.CompositionContext)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext $r1, r2, r3, r4, r5, r7, $r8, r9;
        boolean $z1;
        java.lang.ref.WeakReference $r6;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r1 := @parameter0: androidx.compose.runtime.CompositionContext;

        r2 = $r1;

        r3 = r2;

        r4 = r3;

        r7 = r4;

        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean isAlive(androidx.compose.runtime.CompositionContext)>(r7);

        if $z1 == 0 goto label1;

        $r8 = r4;

        goto label2;

     label1:
        $r8 = null;

     label2:
        r5 = $r8;

        if r5 == null goto label3;

        r9 = r5;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r9);

        r0.<androidx.compose.ui.platform.AbstractComposeView: java.lang.ref.WeakReference cachedViewTreeCompositionContext> = $r6;

        goto label3;

     label3:
        return r2;
    }

    private final androidx.compose.runtime.CompositionContext resolveParentCompositionContext()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.CompositionContext r1, r2, $r4, $r8, $r10, $r11;
        android.view.View $r3, $r6;
        java.lang.ref.WeakReference $r5;
        androidx.compose.runtime.Recomposer $r7;
        java.lang.Object $r9;
        boolean $z1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r11 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext parentContext>;

        if $r11 != null goto label7;

        $r3 = (android.view.View) r0;

        $r4 = staticinvoke <androidx.compose.ui.platform.WindowRecomposer_androidKt: androidx.compose.runtime.CompositionContext findViewTreeCompositionContext(android.view.View)>($r3);

        if $r4 == null goto label1;

        $r11 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext cacheIfAlive(androidx.compose.runtime.CompositionContext)>($r4);

        goto label2;

     label1:
        $r11 = null;

     label2:
        if $r11 != null goto label7;

        $r5 = r0.<androidx.compose.ui.platform.AbstractComposeView: java.lang.ref.WeakReference cachedViewTreeCompositionContext>;

        if $r5 == null goto label5;

        $r9 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r10 = (androidx.compose.runtime.CompositionContext) $r9;

        if $r10 == null goto label5;

        r1 = $r10;

        r2 = r1;

        $z1 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean isAlive(androidx.compose.runtime.CompositionContext)>(r2);

        if $z1 == 0 goto label3;

        $r11 = r1;

        goto label4;

     label3:
        $r11 = null;

     label4:
        goto label6;

     label5:
        $r11 = null;

     label6:
        if $r11 != null goto label7;

        $r6 = (android.view.View) r0;

        $r7 = staticinvoke <androidx.compose.ui.platform.WindowRecomposer_androidKt: androidx.compose.runtime.Recomposer getWindowRecomposer(android.view.View)>($r6);

        $r8 = (androidx.compose.runtime.CompositionContext) $r7;

        $r11 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext cacheIfAlive(androidx.compose.runtime.CompositionContext)>($r8);

     label7:
        return $r11;
    }

    private final void ensureCompositionCreated()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        java.lang.Throwable r1, $r8;
        androidx.compose.runtime.Composition $r2, $r7;
        androidx.compose.runtime.CompositionContext $r3;
        androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1 $r4;
        androidx.compose.runtime.internal.ComposableLambda $r5;
        kotlin.jvm.functions.Function2 $r6;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r2 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition>;

        if $r2 != null goto label5;

     label1:
        r0.<androidx.compose.ui.platform.AbstractComposeView: boolean creatingComposition> = 1;

        $r3 = specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.CompositionContext resolveParentCompositionContext()>();

        $r4 = new androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1;

        specialinvoke $r4.<androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1: void <init>(androidx.compose.ui.platform.AbstractComposeView)>(r0);

        $r5 = staticinvoke <androidx.compose.runtime.internal.ComposableLambdaKt: androidx.compose.runtime.internal.ComposableLambda composableLambdaInstance(int,boolean,java.lang.Object)>(-656146368, 1, $r4);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r7 = staticinvoke <androidx.compose.ui.platform.Wrapper_androidKt: androidx.compose.runtime.Composition setContent(androidx.compose.ui.platform.AbstractComposeView,androidx.compose.runtime.CompositionContext,kotlin.jvm.functions.Function2)>(r0, $r3, $r6);

        r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition> = $r7;

     label2:
        r0.<androidx.compose.ui.platform.AbstractComposeView: boolean creatingComposition> = 0;

        goto label5;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

     label4:
        r0.<androidx.compose.ui.platform.AbstractComposeView: boolean creatingComposition> = 0;

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void disposeComposition()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.Composition $r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r1 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<androidx.compose.runtime.Composition: void dispose()>();

        goto label1;

     label1:
        r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition> = null;

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void requestLayout()>();

        return;
    }

    public final boolean getHasComposition()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.compose.runtime.Composition $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        $r1 = r0.<androidx.compose.ui.platform.AbstractComposeView: androidx.compose.runtime.Composition composition>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void onAttachedToWindow()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.os.IBinder $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        $r1 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: android.os.IBinder getWindowToken()>();

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setPreviousAttachedWindowToken(android.os.IBinder)>($r1);

        $z0 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: boolean getShouldCreateCompositionOnAttachedToWindow()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void ensureCompositionCreated()>();

     label1:
        return;
    }

    protected final void onMeasure(int, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        int i0, i1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void ensureCompositionCreated()>();

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void internalOnMeasure$ui_release(int,int)>(i0, i1);

        return;
    }

    public void internalOnMeasure$ui_release(int, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        android.view.View r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: android.view.View getChildAt(int)>(0);

        if r1 != null goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onMeasure(int,int)>(i0, i1);

        return;

     label1:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i5 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingLeft()>();

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingRight()>();

        $i8 = $i6 - $i7;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $i9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i10 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingTop()>();

        $i11 = $i9 - $i10;

        $i12 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingBottom()>();

        $i13 = $i11 - $i12;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        $i14 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        $i15 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i2, $i14);

        $i16 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i3, $i16);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i15, $i17);

        $i18 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i19 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingLeft()>();

        $i20 = $i18 + $i19;

        $i21 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingRight()>();

        $i22 = $i20 + $i21;

        $i23 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i24 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingTop()>();

        $i25 = $i23 + $i24;

        $i26 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingBottom()>();

        $i27 = $i25 + $i26;

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void setMeasuredDimension(int,int)>($i22, $i27);

        return;
    }

    protected final void onLayout(boolean, int, int, int, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        boolean z0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void internalOnLayout$ui_release(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        return;
    }

    public void internalOnLayout$ui_release(boolean, int, int, int, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.View $r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: android.view.View getChildAt(int)>(0);

        if $r1 == null goto label1;

        $i4 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingTop()>();

        $i6 = i2 - i0;

        $i7 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingRight()>();

        $i8 = $i6 - $i7;

        $i9 = i3 - i1;

        $i10 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: int getPaddingBottom()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i4, $i5, $i8, $i11);

        goto label1;

     label1:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        int i0;
        android.view.View $r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: android.view.View getChildAt(int)>(0);

        if $r1 != null goto label1;

        goto label2;

     label1:
        virtualinvoke $r1.<android.view.View: void setLayoutDirection(int)>(i0);

     label2:
        return;
    }

    public void addView(android.view.View)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View)>(r1);

        return;
    }

    public void addView(android.view.View, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        int i0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int)>(r1, i0);

        return;
    }

    public void addView(android.view.View, int, int)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        int i0, i1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,int)>(r1, i0, i1);

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    protected boolean addViewInLayout(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        boolean $z0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return $z0;
    }

    protected boolean addViewInLayout(android.view.View, int, android.view.ViewGroup$LayoutParams, boolean)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        boolean z0, $z1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        z0 := @parameter3: boolean;

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void checkAddView()>();

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, r2, z0);

        return $z1;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.compose.ui.platform.AbstractComposeView r0;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        return 0;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, 0, 4, null);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        android.content.Context r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<androidx.compose.ui.platform.AbstractComposeView: void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, 0, 6, null);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.platform.AbstractComposeView: int $stable> = 8;

        return;
    }

androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1
<androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1: androidx.compose.ui.platform.AbstractComposeView this$0>
    void <init>(androidx.compose.ui.platform.AbstractComposeView)
    {
        androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1 r0;
        androidx.compose.ui.platform.AbstractComposeView $r1;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1;

        $r1 := @parameter0: androidx.compose.ui.platform.AbstractComposeView;

        r0.<androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1: androidx.compose.ui.platform.AbstractComposeView this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.platform.AbstractComposeView $r2;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C249@10517L9:ComposeView.android.kt#itgzvw");

        $i1 = $i0 & 11;

        if $i1 != 2 goto label1;

        $z2 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z2 != 0 goto label3;

     label1:
        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label2;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-656146368, $i0, -1, "androidx.compose.ui.platform.AbstractComposeView.ensureCompositionCreated.<anonymous> (ComposeView.android.kt:248)");

     label2:
        $r2 = r0.<androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1: androidx.compose.ui.platform.AbstractComposeView this$0>;

        virtualinvoke $r2.<androidx.compose.ui.platform.AbstractComposeView: void Content(androidx.compose.runtime.Composer,int)>($r1, 8);

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

        goto label4;

     label3:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label4:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.ui.platform.AbstractComposeView$ensureCompositionCreated$1: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

