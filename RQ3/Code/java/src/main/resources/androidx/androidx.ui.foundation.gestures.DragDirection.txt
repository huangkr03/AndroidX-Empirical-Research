androidx.ui.foundation.gestures.DragDirection
    private void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.ui.foundation.gestures.DragDirection: kotlin.jvm.functions.Function1 getXProjection$ui_foundation_release()>
<androidx.ui.foundation.gestures.DragDirection: kotlin.jvm.functions.Function1 getYProjection$ui_foundation_release()>
<androidx.ui.foundation.gestures.DragDirection: kotlin.jvm.functions.Function2 isDraggableInDirection$ui_foundation_release()>
    public float project$ui_foundation_release(androidx.ui.geometry.Offset)
    {
        androidx.ui.foundation.gestures.DragDirection r0;
        androidx.ui.geometry.Offset r1;
        kotlin.jvm.functions.Function1 $r2, $r6;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Float $r3, $r7;
        java.lang.Object $r4, $r8;
        java.lang.Number $r5, $r9;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pos");

        $r2 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection: kotlin.jvm.functions.Function1 getXProjection$ui_foundation_release()>();

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getX()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Number) $r4;

        $f1 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $r6 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection: kotlin.jvm.functions.Function1 getYProjection$ui_foundation_release()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r8 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r9 = (java.lang.Number) $r8;

        $f3 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        $f4 = $f1 + $f3;

        return $f4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.foundation.gestures.DragDirection r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.foundation.gestures.DragDirection: void <init>()>();

        return;
    }

androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final boolean invoke(androidx.ui.core.Direction, float)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1 r0;
        androidx.ui.core.Direction r1, r2;
        float $f0;
        int i0, $i1;
        int[] $r3;
        boolean $z0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1;

        r1 := @parameter0: androidx.ui.core.Direction;

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "direction");

        r2 = r1;

        $r3 = <androidx.ui.foundation.gestures.DragDirection$Horizontal$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r2.<androidx.ui.core.Direction: int ordinal()>();

        i0 = $r3[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.ui.core.Direction $r4;
        float $f0;
        boolean $z0;
        java.lang.Boolean $r5;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.ui.core.Direction) r1;

        $r3 = (java.lang.Number) r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $z0 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1: boolean invoke(androidx.ui.core.Direction,float)>($r4, $f0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r5;
    }

androidx.ui.foundation.gestures.DragDirection$Horizontal$WhenMappings
<androidx.ui.foundation.gestures.DragDirection$Horizontal$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.ui.core.Direction[] $r1;
        int $i0, $i1, $i2;
        androidx.ui.core.Direction $r2, $r3;

        $r1 = staticinvoke <androidx.ui.core.Direction: androidx.ui.core.Direction[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.ui.core.Direction: androidx.ui.core.Direction RIGHT>;

        $i1 = virtualinvoke $r2.<androidx.ui.core.Direction: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.ui.core.Direction: androidx.ui.core.Direction LEFT>;

        $i2 = virtualinvoke $r3.<androidx.ui.core.Direction: int ordinal()>();

        r0[$i2] = 2;

        <androidx.ui.foundation.gestures.DragDirection$Horizontal$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final float invoke(float)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1 r0;
        float f0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1;

        f0 := @parameter0: float;

        return f0;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0, $f1;
        java.lang.Float $r3;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1: float invoke(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r3;
    }

androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final float invoke(float)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1 r0;
        float f0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1;

        f0 := @parameter0: float;

        return 0.0F;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0, $f1;
        java.lang.Float $r3;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1: float invoke(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r3;
    }

androidx.ui.foundation.gestures.DragDirection$Horizontal
<androidx.ui.foundation.gestures.DragDirection$Horizontal: androidx.ui.foundation.gestures.DragDirection$Horizontal INSTANCE>
<androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 xProjection>
<androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 yProjection>
<androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function2 isDraggableInDirection>
    private void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal;

        specialinvoke r0.<androidx.ui.foundation.gestures.DragDirection: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        return;
    }

    public kotlin.jvm.functions.Function1 getXProjection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 xProjection>;

        return $r1;
    }

    public kotlin.jvm.functions.Function1 getYProjection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 yProjection>;

        return $r1;
    }

    public kotlin.jvm.functions.Function2 isDraggableInDirection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Horizontal;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function2 isDraggableInDirection>;

        return $r1;
    }

    public static final void <clinit>()
    {
        androidx.ui.foundation.gestures.DragDirection$Horizontal $r0;
        androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1 $r1;
        kotlin.jvm.functions.Function1 $r2, $r4;
        androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1 $r3;
        androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1 $r5;
        kotlin.jvm.functions.Function2 $r6;

        $r0 = new androidx.ui.foundation.gestures.DragDirection$Horizontal;

        specialinvoke $r0.<androidx.ui.foundation.gestures.DragDirection$Horizontal: void <init>()>();

        <androidx.ui.foundation.gestures.DragDirection$Horizontal: androidx.ui.foundation.gestures.DragDirection$Horizontal INSTANCE> = $r0;

        $r1 = new androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1;

        specialinvoke $r1.<androidx.ui.foundation.gestures.DragDirection$Horizontal$xProjection$1: void <init>()>();

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 xProjection> = $r2;

        $r3 = new androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1;

        specialinvoke $r3.<androidx.ui.foundation.gestures.DragDirection$Horizontal$yProjection$1: void <init>()>();

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function1 yProjection> = $r4;

        $r5 = new androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1;

        specialinvoke $r5.<androidx.ui.foundation.gestures.DragDirection$Horizontal$isDraggableInDirection$1: void <init>()>();

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        <androidx.ui.foundation.gestures.DragDirection$Horizontal: kotlin.jvm.functions.Function2 isDraggableInDirection> = $r6;

        return;
    }

androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final boolean invoke(androidx.ui.core.Direction, float)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1 r0;
        androidx.ui.core.Direction r1, r2;
        float $f0;
        int i0, $i1;
        int[] $r3;
        boolean $z0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1;

        r1 := @parameter0: androidx.ui.core.Direction;

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "direction");

        r2 = r1;

        $r3 = <androidx.ui.foundation.gestures.DragDirection$Vertical$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r2.<androidx.ui.core.Direction: int ordinal()>();

        i0 = $r3[$i1];

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $z0 = 1;

        goto label4;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.ui.core.Direction $r4;
        float $f0;
        boolean $z0;
        java.lang.Boolean $r5;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.ui.core.Direction) r1;

        $r3 = (java.lang.Number) r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $z0 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1: boolean invoke(androidx.ui.core.Direction,float)>($r4, $f0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r5;
    }

androidx.ui.foundation.gestures.DragDirection$Vertical$WhenMappings
<androidx.ui.foundation.gestures.DragDirection$Vertical$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.ui.core.Direction[] $r1;
        int $i0, $i1, $i2;
        androidx.ui.core.Direction $r2, $r3;

        $r1 = staticinvoke <androidx.ui.core.Direction: androidx.ui.core.Direction[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.ui.core.Direction: androidx.ui.core.Direction UP>;

        $i1 = virtualinvoke $r2.<androidx.ui.core.Direction: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.ui.core.Direction: androidx.ui.core.Direction DOWN>;

        $i2 = virtualinvoke $r3.<androidx.ui.core.Direction: int ordinal()>();

        r0[$i2] = 2;

        <androidx.ui.foundation.gestures.DragDirection$Vertical$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final float invoke(float)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1 r0;
        float f0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1;

        f0 := @parameter0: float;

        return 0.0F;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0, $f1;
        java.lang.Float $r3;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1: float invoke(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r3;
    }

androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1
    void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1 r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final float invoke(float)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1 r0;
        float f0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1;

        f0 := @parameter0: float;

        return f0;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0, $f1;
        java.lang.Float $r3;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke r0.<androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1: float invoke(float)>($f0);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        return $r3;
    }

androidx.ui.foundation.gestures.DragDirection$Vertical
<androidx.ui.foundation.gestures.DragDirection$Vertical: androidx.ui.foundation.gestures.DragDirection$Vertical INSTANCE>
<androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 xProjection>
<androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 yProjection>
<androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function2 isDraggableInDirection>
    private void <init>()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical r0;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical;

        specialinvoke r0.<androidx.ui.foundation.gestures.DragDirection: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        return;
    }

    public kotlin.jvm.functions.Function1 getXProjection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 xProjection>;

        return $r1;
    }

    public kotlin.jvm.functions.Function1 getYProjection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 yProjection>;

        return $r1;
    }

    public kotlin.jvm.functions.Function2 isDraggableInDirection$ui_foundation_release()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical r0;
        kotlin.jvm.functions.Function2 $r1;

        r0 := @this: androidx.ui.foundation.gestures.DragDirection$Vertical;

        $r1 = <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function2 isDraggableInDirection>;

        return $r1;
    }

    public static final void <clinit>()
    {
        androidx.ui.foundation.gestures.DragDirection$Vertical $r0;
        androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1 $r1;
        kotlin.jvm.functions.Function1 $r2, $r4;
        androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1 $r3;
        androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1 $r5;
        kotlin.jvm.functions.Function2 $r6;

        $r0 = new androidx.ui.foundation.gestures.DragDirection$Vertical;

        specialinvoke $r0.<androidx.ui.foundation.gestures.DragDirection$Vertical: void <init>()>();

        <androidx.ui.foundation.gestures.DragDirection$Vertical: androidx.ui.foundation.gestures.DragDirection$Vertical INSTANCE> = $r0;

        $r1 = new androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1;

        specialinvoke $r1.<androidx.ui.foundation.gestures.DragDirection$Vertical$xProjection$1: void <init>()>();

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 xProjection> = $r2;

        $r3 = new androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1;

        specialinvoke $r3.<androidx.ui.foundation.gestures.DragDirection$Vertical$yProjection$1: void <init>()>();

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function1 yProjection> = $r4;

        $r5 = new androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1;

        specialinvoke $r5.<androidx.ui.foundation.gestures.DragDirection$Vertical$isDraggableInDirection$1: void <init>()>();

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        <androidx.ui.foundation.gestures.DragDirection$Vertical: kotlin.jvm.functions.Function2 isDraggableInDirection> = $r6;

        return;
    }

