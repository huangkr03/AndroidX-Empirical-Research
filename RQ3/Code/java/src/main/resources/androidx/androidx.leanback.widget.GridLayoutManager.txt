androidx.leanback.widget.GridLayoutManager
<androidx.leanback.widget.GridLayoutManager: java.lang.String TAG>
<androidx.leanback.widget.GridLayoutManager: boolean DEBUG>
<androidx.leanback.widget.GridLayoutManager: boolean TRACE>
<androidx.leanback.widget.GridLayoutManager: int DEFAULT_MAX_PENDING_MOVES>
<androidx.leanback.widget.GridLayoutManager: float mSmoothScrollSpeedFactor>
<androidx.leanback.widget.GridLayoutManager: int mMaxPendingMoves>
<androidx.leanback.widget.GridLayoutManager: int MIN_MS_SMOOTH_SCROLL_MAIN_SCREEN>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>
<androidx.leanback.widget.GridLayoutManager: int mOrientation>
<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>
<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel>
<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>
<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>
<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout>
<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout>
<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>
<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>
<androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>
<androidx.leanback.widget.GridLayoutManager: int PF_STAGE_MASK>
<androidx.leanback.widget.GridLayoutManager: int PF_STAGE_LAYOUT>
<androidx.leanback.widget.GridLayoutManager: int PF_STAGE_SCROLL>
<androidx.leanback.widget.GridLayoutManager: int PF_FAST_RELAYOUT>
<androidx.leanback.widget.GridLayoutManager: int PF_FAST_RELAYOUT_UPDATED_SELECTED_POSITION>
<androidx.leanback.widget.GridLayoutManager: int PF_IN_LAYOUT_SEARCH_FOCUS>
<androidx.leanback.widget.GridLayoutManager: int PF_IN_SELECTION>
<androidx.leanback.widget.GridLayoutManager: int PF_SLIDING>
<androidx.leanback.widget.GridLayoutManager: int PF_LAYOUT_EATEN_IN_SLIDING>
<androidx.leanback.widget.GridLayoutManager: int PF_FORCE_FULL_LAYOUT>
<androidx.leanback.widget.GridLayoutManager: int PF_LAYOUT_ENABLED>
<androidx.leanback.widget.GridLayoutManager: int PF_ROW_SECONDARY_SIZE_REFRESH>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_FRONT>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_END>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_MASKS>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_SIDE_START>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_SIDE_END>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_OUT_SIDE_MASKS>
<androidx.leanback.widget.GridLayoutManager: int PF_FOCUS_SEARCH_DISABLED>
<androidx.leanback.widget.GridLayoutManager: int PF_PRUNE_CHILD>
<androidx.leanback.widget.GridLayoutManager: int PF_SCROLL_ENABLED>
<androidx.leanback.widget.GridLayoutManager: int PF_REVERSE_FLOW_PRIMARY>
<androidx.leanback.widget.GridLayoutManager: int PF_REVERSE_FLOW_SECONDARY>
<androidx.leanback.widget.GridLayoutManager: int PF_REVERSE_FLOW_MASK>
<androidx.leanback.widget.GridLayoutManager: int mFlag>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>
<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>
<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildLaidOutListener mChildLaidOutListener>
<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>
<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>
<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>
<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra>
<androidx.leanback.widget.GridLayoutManager: int mChildVisibility>
<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary>
<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>
<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>
<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>
<androidx.leanback.widget.GridLayoutManager: int mMaxSizeSecondary>
<androidx.leanback.widget.GridLayoutManager: int mHorizontalSpacing>
<androidx.leanback.widget.GridLayoutManager: int mVerticalSpacing>
<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary>
<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>
<androidx.leanback.widget.GridLayoutManager: int mGravity>
<androidx.leanback.widget.GridLayoutManager: int mNumRows>
<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>
<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>
<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>
<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>
<androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>
<androidx.leanback.widget.GridLayoutManager: int[] mMeasuredDimension>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.FacetProviderAdapter mFacetProviderAdapter>
<androidx.leanback.widget.GridLayoutManager: java.lang.Runnable mRequestLayoutRunnable>
<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid$Provider mGridProvider>
<androidx.leanback.widget.GridLayoutManager: int PREV_ITEM>
<androidx.leanback.widget.GridLayoutManager: int NEXT_ITEM>
<androidx.leanback.widget.GridLayoutManager: int PREV_ROW>
<androidx.leanback.widget.GridLayoutManager: int NEXT_ROW>
    java.lang.String getTag()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        androidx.leanback.widget.BaseGridView $r3;
        int $i0;
        java.lang.String $r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridLayoutManager:");

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i0 = virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: int getId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void <init>()
    {
        androidx.leanback.widget.GridLayoutManager r0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void <init>(androidx.leanback.widget.BaseGridView)>(null);

        return;
    }

    void <init>(androidx.leanback.widget.BaseGridView)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.BaseGridView r1;
        androidx.recyclerview.widget.OrientationHelper $r2;
        android.util.SparseIntArray $r3;
        androidx.leanback.widget.WindowAlignment $r4;
        androidx.leanback.widget.ItemAlignment $r5;
        int[] $r6;
        androidx.leanback.widget.ViewsStateBundle $r7;
        androidx.leanback.widget.GridLayoutManager$1 $r8;
        androidx.leanback.widget.GridLayoutManager$2 $r9;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.BaseGridView;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: float mSmoothScrollSpeedFactor> = 1.0F;

        r0.<androidx.leanback.widget.GridLayoutManager: int mMaxPendingMoves> = 10;

        r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation> = 0;

        $r2 = staticinvoke <androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)>(r0);

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout> = $r3;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = 221696;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildLaidOutListener mChildLaidOutListener> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = -1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mGravity> = 8388659;

        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested> = 1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy> = 0;

        $r4 = new androidx.leanback.widget.WindowAlignment;

        specialinvoke $r4.<androidx.leanback.widget.WindowAlignment: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment> = $r4;

        $r5 = new androidx.leanback.widget.ItemAlignment;

        specialinvoke $r5.<androidx.leanback.widget.ItemAlignment: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment> = $r5;

        $r6 = newarray (int)[2];

        r0.<androidx.leanback.widget.GridLayoutManager: int[] mMeasuredDimension> = $r6;

        $r7 = new androidx.leanback.widget.ViewsStateBundle;

        specialinvoke $r7.<androidx.leanback.widget.ViewsStateBundle: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates> = $r7;

        $r8 = new androidx.leanback.widget.GridLayoutManager$1;

        specialinvoke $r8.<androidx.leanback.widget.GridLayoutManager$1: void <init>(androidx.leanback.widget.GridLayoutManager)>(r0);

        r0.<androidx.leanback.widget.GridLayoutManager: java.lang.Runnable mRequestLayoutRunnable> = $r8;

        $r9 = new androidx.leanback.widget.GridLayoutManager$2;

        specialinvoke $r9.<androidx.leanback.widget.GridLayoutManager$2: void <init>(androidx.leanback.widget.GridLayoutManager)>(r0);

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid$Provider mGridProvider> = $r9;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView> = r1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility> = -1;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setItemPrefetchEnabled(boolean)>(0);

        return;
    }

    void setGridView(androidx.leanback.widget.BaseGridView)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.BaseGridView r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.BaseGridView;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView> = r1;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid> = null;

        return;
    }

    public void setOrientation(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3;
        androidx.recyclerview.widget.OrientationHelper $r1;
        androidx.leanback.widget.WindowAlignment $r2;
        androidx.leanback.widget.ItemAlignment $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        return;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation> = i0;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        $r1 = staticinvoke <androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)>(r0, $i1);

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper> = $r1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: void setOrientation(int)>(i0);

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        virtualinvoke $r3.<androidx.leanback.widget.ItemAlignment: void setOrientation(int)>(i0);

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 | 256;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i3;

        return;
    }

    void onRtlPropertiesChanged(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label3;

        if i0 != 1 goto label1;

        $i7 = 262144;

        goto label2;

     label1:
        $i7 = 0;

     label2:
        i8 = $i7;

        goto label6;

     label3:
        if i0 != 1 goto label4;

        $i9 = 524288;

        goto label5;

     label4:
        $i9 = 0;

     label5:
        i8 = $i9;

     label6:
        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i11 = $i10 & 786432;

        if $i11 != i8 goto label7;

        return;

     label7:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & -786433;

        $i4 = $i3 | i8;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 | 256;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i6;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis horizontal>;

        if i0 != 1 goto label8;

        $z0 = 1;

        goto label9;

     label8:
        $z0 = 0;

     label9:
        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: void setReversedFlow(boolean)>($z0);

        return;
    }

    int getFocusScrollStrategy()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        return $i0;
    }

    void setFocusScrollStrategy(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy> = i0;

        return;
    }

    void setWindowAlignment(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: void setWindowAlignment(int)>(i0);

        return;
    }

    int getWindowAlignment()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i0 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: int getWindowAlignment()>();

        return $i0;
    }

    void setWindowAlignmentOffset(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: void setWindowAlignmentOffset(int)>(i0);

        return;
    }

    int getWindowAlignmentOffset()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i0 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: int getWindowAlignmentOffset()>();

        return $i0;
    }

    void setWindowAlignmentOffsetPercent(float)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        float f0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: void setWindowAlignmentOffsetPercent(float)>(f0);

        return;
    }

    float getWindowAlignmentOffsetPercent()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment $r1;
        androidx.leanback.widget.WindowAlignment$Axis $r2;
        float $f0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $f0 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: float getWindowAlignmentOffsetPercent()>();

        return $f0;
    }

    void setItemAlignmentOffset(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: void setItemAlignmentOffset(int)>(i0);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments()>();

        return;
    }

    int getItemAlignmentOffset()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        $i0 = virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: int getItemAlignmentOffset()>();

        return $i0;
    }

    void setItemAlignmentOffsetWithPadding(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: void setItemAlignmentOffsetWithPadding(boolean)>(z0);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments()>();

        return;
    }

    boolean isItemAlignmentOffsetWithPadding()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        $z0 = virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: boolean isItemAlignmentOffsetWithPadding()>();

        return $z0;
    }

    void setItemAlignmentOffsetPercent(float)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        float f0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: void setItemAlignmentOffsetPercent(float)>(f0);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments()>();

        return;
    }

    float getItemAlignmentOffsetPercent()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;
        float $f0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        $f0 = virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: float getItemAlignmentOffsetPercent()>();

        return $f0;
    }

    void setItemAlignmentViewId(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: void setItemAlignmentViewId(int)>(i0);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments()>();

        return;
    }

    int getItemAlignmentViewId()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.ItemAlignment $r1;
        androidx.leanback.widget.ItemAlignment$Axis $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis mainAxis()>();

        $i0 = virtualinvoke $r2.<androidx.leanback.widget.ItemAlignment$Axis: int getItemAlignmentViewId()>();

        return $i0;
    }

    void setFocusOutAllowed(boolean, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3;
        short $s4, $s5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & -6145;

        if z0 == 0 goto label1;

        $s4 = 2048;

        goto label2;

     label1:
        $s4 = 0;

     label2:
        $i2 = $i1 | $s4;

        if z1 == 0 goto label3;

        $s5 = 4096;

        goto label4;

     label3:
        $s5 = 0;

     label4:
        $i3 = $i2 | $s5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i3;

        return;
    }

    void setFocusOutSideAllowed(boolean, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3;
        short $s4, $s5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & -24577;

        if z0 == 0 goto label1;

        $s4 = 8192;

        goto label2;

     label1:
        $s4 = 0;

     label2:
        $i2 = $i1 | $s4;

        if z1 == 0 goto label3;

        $s5 = 16384;

        goto label4;

     label3:
        $s5 = 0;

     label4:
        $i3 = $i2 | $s5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i3;

        return;
    }

    void setNumRows(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested> = i0;

        return;
    }

    void setRowHeight(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        if i0 != -2 goto label2;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested> = i0;

        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid row height: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        return;
    }

    void setItemSpacing(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager: int mHorizontalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mVerticalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary> = i0;

        return;
    }

    void setVerticalSpacing(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 1 goto label1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mVerticalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary> = i0;

        goto label2;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mVerticalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary> = i0;

     label2:
        return;
    }

    void setHorizontalSpacing(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mHorizontalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary> = i0;

        goto label2;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mHorizontalSpacing> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary> = i0;

     label2:
        return;
    }

    int getVerticalSpacing()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mVerticalSpacing>;

        return $i0;
    }

    int getHorizontalSpacing()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mHorizontalSpacing>;

        return $i0;
    }

    void setGravity(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager: int mGravity> = i0;

        return;
    }

    boolean hasDoneFirstLayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.Grid $r1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setOnChildSelectedListener(androidx.leanback.widget.OnChildSelectedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.OnChildSelectedListener r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.OnChildSelectedListener;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener> = r1;

        return;
    }

    void setOnChildViewHolderSelectedListener(androidx.leanback.widget.OnChildViewHolderSelectedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.OnChildViewHolderSelectedListener r1;
        java.util.ArrayList $r2, $r3, $r4, $r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.OnChildViewHolderSelectedListener;

        if r1 != null goto label1;

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners> = null;

        return;

     label1:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r2 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners> = $r5;

        goto label3;

     label2:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label3:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addOnChildViewHolderSelectedListener(androidx.leanback.widget.OnChildViewHolderSelectedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.OnChildViewHolderSelectedListener r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.OnChildViewHolderSelectedListener;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners> = $r4;

     label1:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void removeOnChildViewHolderSelectedListener(androidx.leanback.widget.OnChildViewHolderSelectedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.OnChildViewHolderSelectedListener r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.OnChildViewHolderSelectedListener;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    boolean hasOnChildViewHolderSelectedListener()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        java.util.ArrayList $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void fireOnChildViewHolderSelected(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        androidx.leanback.widget.OnChildViewHolderSelectedListener $r7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label2:
        if i3 < 0 goto label3;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (androidx.leanback.widget.OnChildViewHolderSelectedListener) $r6;

        virtualinvoke $r7.<androidx.leanback.widget.OnChildViewHolderSelectedListener: void onChildViewHolderSelected(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>(r1, r2, i0, i1);

        i3 = i3 + -1;

        goto label2;

     label3:
        return;
    }

    void fireOnChildViewHolderSelectedAndPositioned(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        int i0, i1, $i2, i3;
        java.util.ArrayList $r3, $r4, $r5;
        java.lang.Object $r6;
        androidx.leanback.widget.OnChildViewHolderSelectedListener $r7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = $i2 - 1;

     label2:
        if i3 < 0 goto label3;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mChildViewHolderSelectedListeners>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (androidx.leanback.widget.OnChildViewHolderSelectedListener) $r6;

        virtualinvoke $r7.<androidx.leanback.widget.OnChildViewHolderSelectedListener: void onChildViewHolderSelectedAndPositioned(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>(r1, r2, i0, i1);

        i3 = i3 + -1;

        goto label2;

     label3:
        return;
    }

    void addOnLayoutCompletedListener(androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners> = $r4;

     label1:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void removeOnLayoutCompletedListener(androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener r1;
        java.util.ArrayList $r2, $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    void setOnChildLaidOutListener(androidx.leanback.widget.OnChildLaidOutListener)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.OnChildLaidOutListener r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.leanback.widget.OnChildLaidOutListener;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildLaidOutListener mChildLaidOutListener> = r1;

        return;
    }

    private int getAdapterPositionByView(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return -1;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z0 == 0 goto label3;

     label2:
        return -1;

     label3:
        $i0 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAbsoluteAdapterPosition()>();

        return $i0;
    }

    int getSubPositionByView(android.view.View, android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r8;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        androidx.leanback.widget.ItemAlignmentFacet r3;
        androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] r4;
        int i0, $i1, $i2, $i3, i4;
        android.view.ViewGroup$LayoutParams $r5;
        android.view.ViewParent $r6;
        androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef $r7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r8 := @parameter1: android.view.View;

        if r1 == null goto label1;

        if r8 != null goto label2;

     label1:
        return 0;

     label2:
        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r5;

        r3 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet getItemAlignmentFacet()>();

        if r3 == null goto label7;

        r4 = virtualinvoke r3.<androidx.leanback.widget.ItemAlignmentFacet: androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] getAlignmentDefs()>();

        $i1 = lengthof r4;

        if $i1 <= 1 goto label7;

     label3:
        if r8 == r1 goto label7;

        i0 = virtualinvoke r8.<android.view.View: int getId()>();

        if i0 == -1 goto label6;

        i4 = 1;

     label4:
        $i2 = lengthof r4;

        if i4 >= $i2 goto label6;

        $r7 = r4[i4];

        $i3 = virtualinvoke $r7.<androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef: int getItemAlignmentFocusViewId()>();

        if $i3 != i0 goto label5;

        return i4;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        $r6 = virtualinvoke r8.<android.view.View: android.view.ViewParent getParent()>();

        r8 = (android.view.View) $r6;

        goto label3;

     label7:
        return 0;
    }

    private int getAdapterPositionByIndex(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i0);

        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>($r1);

        return $i1;
    }

    void dispatchChildSelected()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, $r6, $r14;
        androidx.leanback.widget.OnChildSelectedListener $r2, $r3, $r8, $r10, $r11;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, i8, i9;
        androidx.leanback.widget.BaseGridView $r4, $r5, $r7, $r9, $r12, $r16;
        boolean $z0, $z1, $z2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r15;
        long $l3;
        android.view.ViewGroup r17, r18;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        if $r2 != null goto label01;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasOnChildViewHolderSelectedListener()>();

        if $z2 != 0 goto label01;

        return;

     label01:
        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i0 != -1 goto label02;

        $r14 = null;

        goto label03;

     label02:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $r14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i1);

     label03:
        r1 = $r14;

        if r1 == null goto label07;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r15 = virtualinvoke $r9.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r1);

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        if $r10 == null goto label06;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if r15 != null goto label04;

        $l3 = -1L;

        goto label05;

     label04:
        $l3 = virtualinvoke r15.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

     label05:
        r17 = (android.view.ViewGroup) $r12;

        interfaceinvoke $r11.<androidx.leanback.widget.OnChildSelectedListener: void onChildSelected(android.view.ViewGroup,android.view.View,int,long)>(r17, r1, $i2, $l3);

     label06:
        $r16 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fireOnChildViewHolderSelected(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>($r16, r15, $i4, $i5);

        goto label09;

     label07:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        if $r3 == null goto label08;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r18 = (android.view.ViewGroup) $r7;

        interfaceinvoke $r8.<androidx.leanback.widget.OnChildSelectedListener: void onChildSelected(android.view.ViewGroup,android.view.View,int,long)>(r18, null, -1, -1L);

     label08:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fireOnChildViewHolderSelected(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>($r4, null, -1, 0);

     label09:
        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & 3;

        if $i7 == 1 goto label12;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z0 = virtualinvoke $r5.<androidx.leanback.widget.BaseGridView: boolean isLayoutRequested()>();

        if $z0 != 0 goto label12;

        i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        i9 = 0;

     label10:
        if i9 >= i8 goto label12;

        $r6 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i9);

        $z1 = virtualinvoke $r6.<android.view.View: boolean isLayoutRequested()>();

        if $z1 == 0 goto label11;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void forceRequestLayout()>();

        goto label12;

     label11:
        i9 = i9 + 1;

        goto label10;

     label12:
        return;
    }

    void dispatchChildSelectedAndPositioned()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, $r9;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        androidx.leanback.widget.OnChildSelectedListener $r3, $r6;
        androidx.leanback.widget.BaseGridView $r4, $r5, $r7, $r8;
        android.view.ViewGroup r10;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasOnChildViewHolderSelectedListener()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i0 != -1 goto label2;

        $r9 = null;

        goto label3;

     label2:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $r9 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i1);

     label3:
        r1 = $r9;

        if r1 == null goto label4;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r2 = virtualinvoke $r7.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r1);

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fireOnChildViewHolderSelectedAndPositioned(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>($r8, r2, $i3, $i2);

        goto label6;

     label4:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        if $r3 == null goto label5;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildSelectedListener mChildSelectedListener>;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r10 = (android.view.ViewGroup) $r5;

        interfaceinvoke $r6.<androidx.leanback.widget.OnChildSelectedListener: void onChildSelected(android.view.ViewGroup,android.view.View,int,long)>(r10, null, -1, -1L);

     label5:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fireOnChildViewHolderSelectedAndPositioned(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int)>($r4, null, -1, 0);

     label6:
        return;
    }

    public boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = r1 instanceof androidx.leanback.widget.GridLayoutManager$LayoutParams;

        return $z0;
    }

    public boolean canScrollHorizontally()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 == 0 goto label1;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i1 <= 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean canScrollVertically()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 == 1 goto label1;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i1 <= 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r1.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r2, $r3, $r5, $r7, $r8;
        android.view.ViewGroup$MarginLayoutParams $r4;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.leanback.widget.GridLayoutManager$LayoutParams;

        if $z0 == 0 goto label1;

        $r7 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $r8 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) r1;

        specialinvoke $r7.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(androidx.leanback.widget.GridLayoutManager$LayoutParams)>($r8);

        return $r7;

     label1:
        $z1 = r1 instanceof androidx.recyclerview.widget.RecyclerView$LayoutParams;

        if $z1 == 0 goto label2;

        $r5 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $r6 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) r1;

        specialinvoke $r5.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>($r6);

        return $r5;

     label2:
        $z2 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label3;

        $r3 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label3:
        $r2 = new androidx.leanback.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    android.view.View getViewForPosition(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.leanback.widget.BaseGridView $r6;
        java.lang.Object $r7;
        androidx.leanback.widget.ItemAlignmentFacet $r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        r1 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)>(i0);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r5;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r3 = virtualinvoke $r6.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r1);

        $r7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: java.lang.Object getFacet(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.lang.Class)>(r3, class "Landroidx/leanback/widget/ItemAlignmentFacet;");

        $r8 = (androidx.leanback.widget.ItemAlignmentFacet) $r7;

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setItemAlignmentFacet(androidx.leanback.widget.ItemAlignmentFacet)>($r8);

        return r1;
    }

    int getOpticalLeft(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalLeft(android.view.View)>(r1);

        return $i0;
    }

    int getOpticalRight(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalRight(android.view.View)>(r1);

        return $i0;
    }

    int getOpticalTop(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalTop(android.view.View)>(r1);

        return $i0;
    }

    int getOpticalBottom(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalBottom(android.view.View)>(r1);

        return $i0;
    }

    public int getDecoratedLeft(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)>(r1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i1 = $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getDecoratedTop(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)>(r1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i1 = $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getDecoratedRight(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)>(r1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i1 = $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedBottom(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)>(r1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r2;

        $i1 = $r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public void getDecoratedBoundsWithMargins(android.view.View, android.graphics.Rect)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r1, r2);

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r4;

        $i1 = r2.<android.graphics.Rect: int left>;

        $i0 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>;

        $i2 = $i1 + $i0;

        r2.<android.graphics.Rect: int left> = $i2;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i3 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>;

        $i5 = $i4 + $i3;

        r2.<android.graphics.Rect: int top> = $i5;

        $i7 = r2.<android.graphics.Rect: int right>;

        $i6 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>;

        $i8 = $i7 - $i6;

        r2.<android.graphics.Rect: int right> = $i8;

        $i10 = r2.<android.graphics.Rect: int bottom>;

        $i9 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>;

        $i11 = $i10 - $i9;

        r2.<android.graphics.Rect: int bottom> = $i11;

        return;
    }

    int getViewMin(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.OrientationHelper $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r1);

        return $i0;
    }

    int getViewMax(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.recyclerview.widget.OrientationHelper $r2;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r1);

        return $i0;
    }

    int getViewPrimarySize(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        android.graphics.Rect $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r1, $r2);

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $r4 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i1 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        goto label2;

     label1:
        $r3 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

     label2:
        return $i1;
    }

    private int getViewCenter(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenterX(android.view.View)>(r1);

        goto label2;

     label1:
        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenterY(android.view.View)>(r1);

     label2:
        return $i1;
    }

    private int getViewCenterSecondary(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenterY(android.view.View)>(r1);

        goto label2;

     label1:
        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenterX(android.view.View)>(r1);

     label2:
        return $i1;
    }

    private int getViewCenterX(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $i0 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalLeft(android.view.View)>(r1);

        $i1 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAlignX()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    private int getViewCenterY(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $i0 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getOpticalTop(android.view.View)>(r1);

        $i1 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAlignY()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    private void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel>;

        if $i0 != 0 goto label1;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler> = r1;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState> = r2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout> = 0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout> = 0;

     label1:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel>;

        $i2 = $i1 + 1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel> = $i2;

        return;
    }

    private void leaveContext()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel>;

        $i1 = $i0 - 1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel> = $i1;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mSaveContextLevel>;

        if $i2 != 0 goto label1;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout> = 0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout> = 0;

     label1:
        return;
    }

    private boolean layoutInit()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        androidx.recyclerview.widget.RecyclerView$State $r1, $r9;
        androidx.leanback.widget.Grid $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r15, $r17;
        boolean $z0, $z1, $z2, $z3;
        androidx.leanback.widget.Grid$Provider $r14;
        androidx.recyclerview.widget.RecyclerView$Recycler $r16;
        androidx.leanback.widget.WindowAlignment $r18, $r20;
        androidx.leanback.widget.WindowAlignment$Axis $r19, $r21;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i0 != 0 goto label01;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = -1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        goto label03;

     label01:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i1 < i0 goto label02;

        $i13 = i0 - 1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = $i13;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        goto label03;

     label02:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i2 != -1 goto label03;

        if i0 <= 0 goto label03;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = 0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

     label03:
        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r9.<androidx.recyclerview.widget.RecyclerView$State: boolean didStructureChange()>();

        if $z1 != 0 goto label04;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r5 == null goto label04;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i7 = virtualinvoke $r6.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i7 < 0 goto label04;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i9 = $i8 & 256;

        if $i9 != 0 goto label04;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i10 = virtualinvoke $r7.<androidx.leanback.widget.Grid: int getNumRows()>();

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i10 != $i11 goto label04;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateScrollController()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateSecondaryScrollLimits()>();

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary>;

        virtualinvoke $r8.<androidx.leanback.widget.Grid: void setSpacing(int)>($i12);

        return 1;

     label04:
        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i15 = $i14 & -257;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i15;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r11 == null goto label07;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i4 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getNumRows()>();

        if $i3 != $i4 goto label07;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 262144;

        if $i6 == 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z0 = virtualinvoke $r4.<androidx.leanback.widget.Grid: boolean isReversedFlow()>();

        if $z2 == $z0 goto label10;

     label07:
        $i16 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $r12 = staticinvoke <androidx.leanback.widget.Grid: androidx.leanback.widget.Grid createGrid(int)>($i16);

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid> = $r12;

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid$Provider mGridProvider>;

        virtualinvoke $r13.<androidx.leanback.widget.Grid: void setProvider(androidx.leanback.widget.Grid$Provider)>($r14);

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i17 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i18 = $i17 & 262144;

        if $i18 == 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        virtualinvoke $r2.<androidx.leanback.widget.Grid: void setReversedFlow(boolean)>($z3);

     label10:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void initScrollController()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateSecondaryScrollLimits()>();

        $r15 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i19 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingPrimary>;

        virtualinvoke $r15.<androidx.leanback.widget.Grid: void setSpacing(int)>($i19);

        $r16 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)>($r16);

        $r17 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        virtualinvoke $r17.<androidx.leanback.widget.Grid: void resetVisibleIndex()>();

        $r18 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r19 = virtualinvoke $r18.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r19.<androidx.leanback.widget.WindowAlignment$Axis: void invalidateScrollMin()>();

        $r20 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r21 = virtualinvoke $r20.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r21.<androidx.leanback.widget.WindowAlignment$Axis: void invalidateScrollMax()>();

        return 0;
    }

    private int getRowSizeSecondary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        if $i1 == 0 goto label1;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        return $i3;

     label1:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        if $r1 != null goto label2;

        return 0;

     label2:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        $i2 = $r2[i0];

        return $i2;
    }

    int getRowStartSecondary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i10 = 0;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 524288;

        if $i2 == 0 goto label3;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        i11 = $i6 - 1;

     label1:
        if i11 <= i0 goto label2;

        $i7 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowSizeSecondary(int)>(i11);

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i9 = $i7 + $i8;

        i10 = i10 + $i9;

        i11 = i11 + -1;

        goto label1;

     label2:
        goto label5;

     label3:
        i12 = 0;

     label4:
        if i12 >= i0 goto label5;

        $i3 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowSizeSecondary(int)>(i12);

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i5 = $i3 + $i4;

        i10 = i10 + $i5;

        i12 = i12 + 1;

        goto label4;

     label5:
        return i10;
    }

    private int getSizeSecondary()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 524288;

        if $i2 == 0 goto label1;

        $i7 = 0;

        goto label2;

     label1:
        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i7 = $i3 - 1;

     label2:
        i0 = $i7;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowStartSecondary(int)>(i0);

        $i5 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowSizeSecondary(int)>(i0);

        $i6 = $i4 + $i5;

        return $i6;
    }

    int getDecoratedMeasuredWidthWithMargin(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidth(android.view.View)>(r1);

        $i1 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i3 = $i0 + $i1;

        $i2 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    int getDecoratedMeasuredHeightWithMargin(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeight(android.view.View)>(r1);

        $i1 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i3 = $i0 + $i1;

        $i2 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    private void measureScrapChild(int, int, int, int[])
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        int[] r1;
        android.view.View r2;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r4, $r11;
        android.view.ViewGroup$LayoutParams $r5;
        android.graphics.Rect $r6, $r7, $r8, $r9, $r10;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: int[];

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        r2 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)>(i0);

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r5;

        $r6 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>(r2, $r6);

        $i8 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i7 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        $i10 = $i8 + $i7;

        $r7 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i9 = $r7.<android.graphics.Rect: int left>;

        $i12 = $i10 + $i9;

        $r8 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i11 = $r8.<android.graphics.Rect: int right>;

        i3 = $i12 + $i11;

        $i14 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i13 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        $i16 = $i14 + $i13;

        $r9 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i15 = $r9.<android.graphics.Rect: int top>;

        $i18 = $i16 + $i15;

        $r10 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i17 = $r10.<android.graphics.Rect: int bottom>;

        i4 = $i18 + $i17;

        $i19 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingLeft()>();

        $i20 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingRight()>();

        $i21 = $i19 + $i20;

        $i23 = $i21 + i3;

        $i22 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int width>;

        i5 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>(i1, $i23, $i22);

        $i24 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingTop()>();

        $i25 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingBottom()>();

        $i26 = $i24 + $i25;

        $i28 = $i26 + i4;

        $i27 = r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int height>;

        i6 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>(i2, $i28, $i27);

        virtualinvoke r2.<android.view.View: void measure(int,int)>(i5, i6);

        $i29 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidthWithMargin(android.view.View)>(r2);

        r1[0] = $i29;

        $i30 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeightWithMargin(android.view.View)>(r2);

        r1[1] = $i30;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r2);

     label1:
        return;
    }

    private boolean processRowSizeSecondary(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1, z2;
        androidx.collection.CircularIntArray[] r1, $r20;
        androidx.collection.CircularIntArray r2, $r21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, i20, i21, i22, i23, i24, $i25, i26, i27, $i28, i29, i30, $i31, $i32;
        android.view.View r3, $r15, $r18;
        int[] $r4, $r9, $r10, $r11, $r12, $r13;
        androidx.leanback.widget.Grid $r5, $r6;
        androidx.recyclerview.widget.RecyclerView$State $r7;
        androidx.leanback.widget.BaseGridView $r8, $r14, $r17;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r16, $r19;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        if $i2 != 0 goto label01;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        if $r4 != null goto label02;

     label01:
        return 0;

     label02:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r5 != null goto label03;

        $r20 = null;

        goto label04;

     label03:
        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r20 = virtualinvoke $r6.<androidx.leanback.widget.Grid: androidx.collection.CircularIntArray[] getItemPositionsInRows()>();

     label04:
        r1 = $r20;

        z2 = 0;

        i16 = -1;

        i17 = 0;

     label05:
        $i18 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if i17 >= $i18 goto label31;

        if r1 != null goto label06;

        $r21 = null;

        goto label07;

     label06:
        $r21 = r1[i17];

     label07:
        r2 = $r21;

        if r2 != null goto label08;

        $i19 = 0;

        goto label09;

     label08:
        $i19 = virtualinvoke r2.<androidx.collection.CircularIntArray: int size()>();

     label09:
        i0 = $i19;

        i20 = -1;

        i21 = 0;

     label10:
        if i21 >= i0 goto label18;

        i22 = virtualinvoke r2.<androidx.collection.CircularIntArray: int get(int)>(i21);

        $i12 = i21 + 1;

        i23 = virtualinvoke r2.<androidx.collection.CircularIntArray: int get(int)>($i12);

        i24 = i22;

     label11:
        if i24 > i23 goto label17;

        $i13 = r0.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i14 = i24 - $i13;

        r3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i14);

        if r3 != null goto label12;

        goto label16;

     label12:
        if z0 == 0 goto label13;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void measureChild(android.view.View)>(r3);

     label13:
        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i15 != 0 goto label14;

        $i25 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeightWithMargin(android.view.View)>(r3);

        goto label15;

     label14:
        $i25 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidthWithMargin(android.view.View)>(r3);

     label15:
        i1 = $i25;

        if i1 <= i20 goto label16;

        i20 = i1;

     label16:
        i24 = i24 + 1;

        goto label11;

     label17:
        i21 = i21 + 2;

        goto label10;

     label18:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        i26 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z1 = virtualinvoke $r8.<androidx.leanback.widget.BaseGridView: boolean hasFixedSize()>();

        if $z1 != 0 goto label28;

        if z0 == 0 goto label28;

        if i20 >= 0 goto label28;

        if i26 <= 0 goto label28;

        if i16 >= 0 goto label27;

        i27 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i27 >= 0 goto label19;

        i27 = 0;

        goto label20;

     label19:
        if i27 < i26 goto label20;

        i27 = i26 - 1;

     label20:
        $i28 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i28 <= 0 goto label24;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        $r16 = virtualinvoke $r14.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r15);

        i29 = virtualinvoke $r16.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        $r17 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i8 = $i7 - 1;

        $r18 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>($i8);

        $r19 = virtualinvoke $r17.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r18);

        i30 = virtualinvoke $r19.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()>();

        if i27 < i29 goto label24;

        if i27 > i30 goto label24;

        $i10 = i27 - i29;

        $i9 = i30 - i27;

        if $i10 > $i9 goto label21;

        $i31 = i29 - 1;

        goto label22;

     label21:
        $i31 = i30 + 1;

     label22:
        i27 = $i31;

        if i27 >= 0 goto label23;

        $i11 = i26 - 1;

        if i30 >= $i11 goto label23;

        i27 = i30 + 1;

        goto label24;

     label23:
        if i27 < i26 goto label24;

        if i29 <= 0 goto label24;

        i27 = i29 - 1;

     label24:
        if i27 < 0 goto label27;

        if i27 >= i26 goto label27;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mMeasuredDimension>;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void measureScrapChild(int,int,int,int[])>(i27, $i4, $i5, $r11);

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 0 goto label25;

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mMeasuredDimension>;

        $i32 = $r13[1];

        goto label26;

     label25:
        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mMeasuredDimension>;

        $i32 = $r12[0];

     label26:
        i16 = $i32;

     label27:
        if i16 < 0 goto label28;

        i20 = i16;

     label28:
        if i20 >= 0 goto label29;

        i20 = 0;

     label29:
        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        $i3 = $r9[i17];

        if $i3 == i20 goto label30;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        $r10[i17] = i20;

        z2 = 1;

     label30:
        i17 = i17 + 1;

        goto label05;

     label31:
        return z2;
    }

    private void updateRowSecondarySizeRefresh()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        short $s5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & -1025;

        $z0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean processRowSizeSecondary(boolean)>(0);

        if $z0 == 0 goto label1;

        $s5 = 1024;

        goto label2;

     label1:
        $s5 = 0;

     label2:
        $i2 = $i1 | $s5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i2;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 1024;

        if $i4 == 0 goto label3;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void forceRequestLayout()>();

     label3:
        return;
    }

    private void forceRequestLayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        java.lang.Runnable $r1;
        androidx.leanback.widget.BaseGridView $r2;
        android.view.View r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: java.lang.Runnable mRequestLayoutRunnable>;

        r3 = (android.view.View) $r2;

        staticinvoke <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r3, $r1);

        return;
    }

    public void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2, $r11;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, i58, i59, i60, i61, $i62, i63, $i64, $i65, $i66;
        java.lang.IllegalStateException $r5, $r8;
        int[] $r6, $r7, $r9;
        boolean $z1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i3 != 0 goto label01;

        i58 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i59 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i60 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        $i56 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingTop()>();

        $i57 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingBottom()>();

        i61 = $i56 + $i57;

        goto label02;

     label01:
        i59 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i58 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i60 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingRight()>();

        i61 = $i4 + $i5;

     label02:
        r0.<androidx.leanback.widget.GridLayoutManager: int mMaxSizeSecondary> = i59;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        if $i6 != -2 goto label12;

        $i48 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        if $i48 != 0 goto label03;

        $i62 = 1;

        goto label04;

     label03:
        $i62 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

     label04:
        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = $i62;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = 0;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        if $r6 == null goto label05;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary>;

        $i55 = lengthof $r9;

        $i54 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i55 == $i54 goto label06;

     label05:
        $i49 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $r7 = newarray (int)[$i49];

        r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary> = $r7;

     label06:
        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r11.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 == 0 goto label07;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updatePositionDeltaInPreLayout()>();

     label07:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean processRowSizeSecondary(boolean)>(1);

        lookupswitch(i60)
        {
            case -2147483648: goto label09;
            case 0: goto label08;
            case 1073741824: goto label10;
            default: goto label11;
        };

     label08:
        $i50 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSizeSecondary()>();

        i63 = $i50 + i61;

        goto label25;

     label09:
        $i51 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSizeSecondary()>();

        $i53 = $i51 + i61;

        $i52 = r0.<androidx.leanback.widget.GridLayoutManager: int mMaxSizeSecondary>;

        i63 = staticinvoke <java.lang.Math: int min(int,int)>($i53, $i52);

        goto label25;

     label10:
        i63 = r0.<androidx.leanback.widget.GridLayoutManager: int mMaxSizeSecondary>;

        goto label25;

     label11:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("wrong spec");

        throw $r8;

     label12:
        lookupswitch(i60)
        {
            case -2147483648: goto label18;
            case 0: goto label13;
            case 1073741824: goto label18;
            default: goto label24;
        };

     label13:
        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        if $i7 != 0 goto label14;

        $i64 = i59 - i61;

        goto label15;

     label14:
        $i64 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

     label15:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = $i64;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        if $i8 != 0 goto label16;

        $i65 = 1;

        goto label17;

     label16:
        $i65 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

     label17:
        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = $i65;

        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i15 = $i10 * $i9;

        $i13 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i12 = $i11 - 1;

        $i14 = $i13 * $i12;

        $i16 = $i15 + $i14;

        i63 = $i16 + i61;

        goto label25;

     label18:
        $i17 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        if $i17 != 0 goto label19;

        $i46 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        if $i46 != 0 goto label19;

        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = 1;

        $i47 = i59 - i61;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = $i47;

        goto label22;

     label19:
        $i18 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        if $i18 != 0 goto label20;

        $i39 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = $i39;

        $i40 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i44 = i59 + $i40;

        $i42 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        $i41 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i43 = $i42 + $i41;

        $i45 = $i44 / $i43;

        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = $i45;

        goto label22;

     label20:
        $i19 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        if $i19 != 0 goto label21;

        $i30 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = $i30;

        $i35 = i59 - i61;

        $i33 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i31 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i32 = $i31 - 1;

        $i34 = $i33 * $i32;

        $i37 = $i35 - $i34;

        $i36 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i38 = $i37 / $i36;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = $i38;

        goto label22;

     label21:
        $i20 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRowsRequested>;

        r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows> = $i20;

        $i21 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary> = $i21;

     label22:
        i63 = i59;

        if i60 != -2147483648 goto label25;

        $i23 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        $i22 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i28 = $i23 * $i22;

        $i26 = r0.<androidx.leanback.widget.GridLayoutManager: int mSpacingSecondary>;

        $i24 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i25 = $i24 - 1;

        $i27 = $i26 * $i25;

        $i29 = $i28 + $i27;

        i2 = $i29 + i61;

        if i2 >= i63 goto label23;

        i63 = i2;

     label23:
        goto label25;

     label24:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("wrong spec");

        throw $r5;

     label25:
        $i66 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i66 != 0 goto label26;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setMeasuredDimension(int,int)>(i58, i63);

        goto label27;

     label26:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setMeasuredDimension(int,int)>(i63, i58);

     label27:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return;
    }

    void measureChild(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        android.view.ViewGroup$LayoutParams $r3;
        android.graphics.Rect $r4, $r5, $r6, $r7, $r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $r4 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>(r1, $r4);

        $i4 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i3 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        $i6 = $i4 + $i3;

        $r5 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i5 = $r5.<android.graphics.Rect: int left>;

        $i8 = $i6 + $i5;

        $r6 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i7 = $r6.<android.graphics.Rect: int right>;

        i0 = $i8 + $i7;

        $i10 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i9 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        $i12 = $i10 + $i9;

        $r7 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i11 = $r7.<android.graphics.Rect: int top>;

        $i14 = $i12 + $i11;

        $r8 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i13 = $r8.<android.graphics.Rect: int bottom>;

        i1 = $i14 + $i13;

        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mRowSizeSecondaryRequested>;

        if $i15 != -2 goto label1;

        $i24 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        goto label2;

     label1:
        $i16 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        $i24 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i16, 1073741824);

     label2:
        i2 = $i24;

        $i17 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i17 != 0 goto label3;

        $i21 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i22 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int width>;

        i25 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i21, i0, $i22);

        $i23 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int height>;

        i26 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>(i2, i1, $i23);

        goto label4;

     label3:
        $i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        $i19 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int height>;

        i26 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>($i18, i1, $i19);

        $i20 = r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int width>;

        i25 = staticinvoke <android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>(i2, i0, $i20);

     label4:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i25, i26);

        return;
    }

    java.lang.Object getFacet(androidx.recyclerview.widget.RecyclerView$ViewHolder, java.lang.Class)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        java.lang.Class r2;
        androidx.leanback.widget.FacetProvider r3, $r6;
        boolean $z0;
        androidx.leanback.widget.FacetProviderAdapter $r4, $r5;
        int $i0;
        java.lang.Object r7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        r2 := @parameter1: java.lang.Class;

        r7 = null;

        $z0 = r1 instanceof androidx.leanback.widget.FacetProvider;

        if $z0 == 0 goto label1;

        $r6 = (androidx.leanback.widget.FacetProvider) r1;

        r7 = interfaceinvoke $r6.<androidx.leanback.widget.FacetProvider: java.lang.Object getFacet(java.lang.Class)>(r2);

     label1:
        if r7 != null goto label2;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.FacetProviderAdapter mFacetProviderAdapter>;

        if $r4 == null goto label2;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.FacetProviderAdapter mFacetProviderAdapter>;

        $i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        r3 = interfaceinvoke $r5.<androidx.leanback.widget.FacetProviderAdapter: androidx.leanback.widget.FacetProvider getFacetProvider(int)>($i0);

        if r3 == null goto label2;

        r7 = interfaceinvoke r3.<androidx.leanback.widget.FacetProvider: java.lang.Object getFacet(java.lang.Class)>(r2);

     label2:
        return r7;
    }

    void layoutChild(int, android.view.View, int, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, $i34, i35, $i36, $i37, i38, i39, i40, i41;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.graphics.Rect $r4, $r5, $r6, $r7, $r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i33 := @parameter4: int;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i5 != 0 goto label01;

        $i34 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeightWithMargin(android.view.View)>(r1);

        goto label02;

     label01:
        $i34 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidthWithMargin(android.view.View)>(r1);

     label02:
        i35 = $i34;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        if $i6 <= 0 goto label03;

        $i32 = r0.<androidx.leanback.widget.GridLayoutManager: int mFixedRowSizeSecondary>;

        i35 = staticinvoke <java.lang.Math: int min(int,int)>(i35, $i32);

     label03:
        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mGravity>;

        i3 = $i7 & 112;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i9 = $i8 & 786432;

        if $i9 == 0 goto label04;

        $i30 = r0.<androidx.leanback.widget.GridLayoutManager: int mGravity>;

        $i31 = $i30 & 8388615;

        $i36 = staticinvoke <android.view.Gravity: int getAbsoluteGravity(int,int)>($i31, 1);

        goto label05;

     label04:
        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mGravity>;

        $i36 = $i10 & 7;

     label05:
        i4 = $i36;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i11 != 0 goto label06;

        if i3 == 48 goto label13;

     label06:
        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i12 != 1 goto label07;

        if i4 != 3 goto label07;

        goto label13;

     label07:
        $i13 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i13 != 0 goto label08;

        if i3 == 80 goto label09;

     label08:
        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i14 != 1 goto label10;

        if i4 != 5 goto label10;

     label09:
        $i28 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowSizeSecondary(int)>(i0);

        $i29 = $i28 - i35;

        i33 = i33 + $i29;

        goto label13;

     label10:
        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i15 != 0 goto label11;

        if i3 == 16 goto label12;

     label11:
        $i16 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i16 != 1 goto label13;

        if i4 != 1 goto label13;

     label12:
        $i25 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowSizeSecondary(int)>(i0);

        $i26 = $i25 - i35;

        $i27 = $i26 / 2;

        i33 = i33 + $i27;

     label13:
        $i37 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i37 != 0 goto label14;

        i38 = i1;

        i39 = i33;

        i40 = i2;

        i41 = i33 + i35;

        goto label15;

     label14:
        i39 = i1;

        i38 = i33;

        i41 = i2;

        i40 = i33 + i35;

     label15:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)>(r1, i38, i39, i40, i41);

        $r4 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)>(r1, $r4);

        $r5 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i17 = $r5.<android.graphics.Rect: int left>;

        $i24 = i38 - $i17;

        $r6 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i18 = $r6.<android.graphics.Rect: int top>;

        $i23 = i39 - $i18;

        $r7 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i19 = $r7.<android.graphics.Rect: int right>;

        $i22 = $i19 - i40;

        $r8 = <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect>;

        $i20 = $r8.<android.graphics.Rect: int bottom>;

        $i21 = $i20 - i41;

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setOpticalInsets(int,int,int,int)>($i24, $i23, $i22, $i21);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments(android.view.View)>(r1);

        return;
    }

    private void updateChildAlignments(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.leanback.widget.ItemAlignmentFacet $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.leanback.widget.ItemAlignment $r5, $r7, $r9, $r11;
        androidx.leanback.widget.ItemAlignment$Axis $r6, $r8, $r10, $r12;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $r4 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet getItemAlignmentFacet()>();

        if $r4 != null goto label1;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r10 = $r9.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis horizontal>;

        $i4 = virtualinvoke $r10.<androidx.leanback.widget.ItemAlignment$Axis: int getAlignmentPosition(android.view.View)>(r1);

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setAlignX(int)>($i4);

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r12 = $r11.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis vertical>;

        $i5 = virtualinvoke $r12.<androidx.leanback.widget.ItemAlignment$Axis: int getAlignmentPosition(android.view.View)>(r1);

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setAlignY(int)>($i5);

        goto label3;

     label1:
        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void calculateItemAlignments(int,android.view.View)>($i0, r1);

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label2;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r8 = $r7.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis vertical>;

        $i3 = virtualinvoke $r8.<androidx.leanback.widget.ItemAlignment$Axis: int getAlignmentPosition(android.view.View)>(r1);

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setAlignY(int)>($i3);

        goto label3;

     label2:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ItemAlignment mItemAlignment>;

        $r6 = $r5.<androidx.leanback.widget.ItemAlignment: androidx.leanback.widget.ItemAlignment$Axis horizontal>;

        $i2 = virtualinvoke $r6.<androidx.leanback.widget.ItemAlignment$Axis: int getAlignmentPosition(android.view.View)>(r1);

        virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: void setAlignX(int)>($i2);

     label3:
        return;
    }

    private void updateChildAlignments()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1;
        android.view.View $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i1 = 0;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label1:
        if i1 >= i0 goto label2;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateChildAlignments(android.view.View)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void setExtraLayoutSpace(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        if $i1 != i0 goto label1;

        return;

     label1:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        if $i2 >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ExtraLayoutSpace must >= 0");

        throw $r1;

     label2:
        r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace> = i0;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

        return;
    }

    int getExtraLayoutSpace()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        return $i0;
    }

    private void removeInvisibleViewsAtEnd()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.leanback.widget.Grid $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 65600;

        if $i1 != 65536 goto label3;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & 262144;

        if $i3 == 0 goto label1;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = neg $i7;

        goto label2;

     label1:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = $i5 + $i4;

     label2:
        virtualinvoke $r1.<androidx.leanback.widget.Grid: void removeInvisibleItemsAtEnd(int,int)>($i6, $i8);

     label3:
        return;
    }

    private void removeInvisibleViewsAtFront()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.leanback.widget.Grid $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 65600;

        if $i1 != 65536 goto label3;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & 262144;

        if $i3 == 0 goto label1;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = $i7 + $i6;

        goto label2;

     label1:
        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = neg $i4;

     label2:
        virtualinvoke $r1.<androidx.leanback.widget.Grid: void removeInvisibleItemsAtFront(int,int)>($i5, $i8);

     label3:
        return;
    }

    private boolean appendOneColumnVisibleItems()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.Grid $r1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z0 = virtualinvoke $r1.<androidx.leanback.widget.Grid: boolean appendOneColumnVisibleItems()>();

        return $z0;
    }

    void slideIn()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        androidx.leanback.widget.BaseGridView $r1, $r3;
        androidx.leanback.widget.GridLayoutManager$3 $r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 64;

        if $i1 == 0 goto label5;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & -65;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i3;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i4 < 0 goto label1;

        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i13 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToSelection(int,int,boolean,int)>($i14, $i13, 1, $i12);

        goto label2;

     label1:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & -129;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i6;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label2:
        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & 128;

        if $i8 == 0 goto label5;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i10 = $i9 & -129;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i10;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i11 = virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: int getScrollState()>();

        if $i11 != 0 goto label3;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isSmoothScrolling()>();

        if $z0 == 0 goto label4;

     label3:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r2 = new androidx.leanback.widget.GridLayoutManager$3;

        specialinvoke $r2.<androidx.leanback.widget.GridLayoutManager$3: void <init>(androidx.leanback.widget.GridLayoutManager)>(r0);

        virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)>($r2);

        goto label5;

     label4:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label5:
        return;
    }

    int getSlideOutDistance()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        android.view.View $r1, $r2, $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label2;

        $i6 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getHeight()>();

        i8 = neg $i6;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i7 <= 0 goto label5;

        $r3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        i9 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if i9 >= 0 goto label1;

        i8 = i8 + i9;

     label1:
        goto label5;

     label2:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 262144;

        if $i2 == 0 goto label4;

        i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getWidth()>();

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i5 <= 0 goto label5;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        i10 = virtualinvoke $r2.<android.view.View: int getRight()>();

        if i10 <= i8 goto label3;

        i8 = i10;

     label3:
        goto label5;

     label4:
        $i3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getWidth()>();

        i8 = neg $i3;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i4 <= 0 goto label5;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        i11 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        if i11 >= 0 goto label5;

        i8 = i8 + i11;

     label5:
        return i8;
    }

    boolean isSlidingChildViews()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 64;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void slideOut()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.leanback.widget.BaseGridView $r1, $r3;
        android.view.animation.AccelerateDecelerateInterpolator $r2, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 64;

        if $i1 == 0 goto label1;

        return;

     label1:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 | 64;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i3;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i4 != 0 goto label2;

        return;

     label2:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i5 != 1 goto label3;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSlideOutDistance()>();

        $r4 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r4.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>(0, $i7, $r4);

        goto label4;

     label3:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i6 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSlideOutDistance()>();

        $r2 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>($i6, 0, $r2);

     label4:
        return;
    }

    private boolean prependOneColumnVisibleItems()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.Grid $r1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z0 = virtualinvoke $r1.<androidx.leanback.widget.Grid: boolean prependOneColumnVisibleItems()>();

        return $z0;
    }

    private void appendVisibleItems()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.leanback.widget.Grid $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = neg $i6;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout>;

        $i9 = $i8 - $i7;

        goto label2;

     label1:
        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i5 = $i3 + $i2;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout>;

        $i9 = $i5 + $i4;

     label2:
        virtualinvoke $r1.<androidx.leanback.widget.Grid: void appendVisibleItems(int)>($i9);

        return;
    }

    private void prependVisibleItems()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.leanback.widget.Grid $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i8 = $i6 + $i5;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout>;

        $i9 = $i8 + $i7;

        goto label2;

     label1:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i4 = neg $i2;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout>;

        $i9 = $i4 - $i3;

     label2:
        virtualinvoke $r1.<androidx.leanback.widget.Grid: void prependVisibleItems(int)>($i9);

        return;
    }

    private void fastRelayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i26, i27, i28;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r1;
        androidx.leanback.widget.Grid $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        boolean $z0, $z2, z3;
        androidx.recyclerview.widget.RecyclerView$Recycler $r9, $r14;
        androidx.leanback.widget.WindowAlignment $r11;
        androidx.leanback.widget.WindowAlignment$Axis $r12;
        android.view.ViewGroup$LayoutParams $r13;
        android.view.View r15, r17;
        androidx.leanback.widget.Grid$Location r16;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z3 = 0;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i22 = virtualinvoke $r2.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        i23 = 0;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & -9;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

     label01:
        if i23 >= i0 goto label08;

        r15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i23);

        $i12 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r15);

        if i22 == $i12 goto label02;

        z3 = 1;

        goto label08;

     label02:
        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        r16 = virtualinvoke $r10.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i22);

        if r16 != null goto label03;

        z3 = 1;

        goto label08;

     label03:
        $i13 = r16.<androidx.leanback.widget.Grid$Location: int mRow>;

        $i14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowStartSecondary(int)>($i13);

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r12 = virtualinvoke $r11.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis secondAxis()>();

        $i15 = virtualinvoke $r12.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $i17 = $i14 + $i15;

        $i16 = r0.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary>;

        i24 = $i17 - $i16;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r15);

        i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewPrimarySize(android.view.View)>(r15);

        $r13 = virtualinvoke r15.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r13;

        $z2 = virtualinvoke r1.<androidx.leanback.widget.GridLayoutManager$LayoutParams: boolean viewNeedsUpdate()>();

        if $z2 == 0 goto label04;

        $i20 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i21 = $i20 | 8;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i21;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)>(r15, $r14);

        r15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getViewForPosition(int)>(i22);

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void addView(android.view.View,int)>(r15, i23);

     label04:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void measureChild(android.view.View)>(r15);

        $i18 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i18 != 0 goto label05;

        i25 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidthWithMargin(android.view.View)>(r15);

        i26 = i1 + i25;

        goto label06;

     label05:
        i25 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeightWithMargin(android.view.View)>(r15);

        i26 = i1 + i25;

     label06:
        $i19 = r16.<androidx.leanback.widget.Grid$Location: int mRow>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void layoutChild(int,android.view.View,int,int,int)>($i19, r15, i1, i26, i24);

        if i2 == i25 goto label07;

        z3 = 1;

        goto label08;

     label07:
        i23 = i23 + 1;

        i22 = i22 + 1;

        goto label01;

     label08:
        if z3 == 0 goto label13;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i27 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        i28 = i0 - 1;

     label09:
        if i28 < i23 goto label10;

        r17 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i28);

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)>(r17, $r9);

        i28 = i28 + -1;

        goto label09;

     label10:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        virtualinvoke $r4.<androidx.leanback.widget.Grid: void invalidateItemsAfter(int)>(i22);

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 65536;

        if $i6 == 0 goto label12;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void appendVisibleItems()>();

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i8 < 0 goto label13;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i9 > i27 goto label13;

     label11:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i10 = virtualinvoke $r7.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i10 >= $i11 goto label13;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        virtualinvoke $r8.<androidx.leanback.widget.Grid: boolean appendOneColumnVisibleItems()>();

        goto label11;

     label12:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z0 = virtualinvoke $r5.<androidx.leanback.widget.Grid: boolean appendOneColumnVisibleItems()>();

        if $z0 == 0 goto label13;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i7 = virtualinvoke $r6.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        if $i7 >= i27 goto label13;

        goto label12;

     label13:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateScrollLimits()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateSecondaryScrollLimits()>();

        return;
    }

    public void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        int $i0, i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)>(i1, r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void focusToViewInLayout(boolean, boolean, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, i2, $i3, i4;
        androidx.leanback.widget.BaseGridView $r1, $r2, $r3;
        android.view.View r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        r4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i3);

        if r4 == null goto label1;

        if z1 == 0 goto label1;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean,int,int)>(r4, 0, i0, i1);

     label1:
        if r4 == null goto label2;

        if z0 == 0 goto label2;

        $z6 = virtualinvoke r4.<android.view.View: boolean hasFocus()>();

        if $z6 != 0 goto label2;

        virtualinvoke r4.<android.view.View: boolean requestFocus()>();

        goto label7;

     label2:
        if z0 != 0 goto label7;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z2 = virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: boolean hasFocus()>();

        if $z2 != 0 goto label7;

        if r4 == null goto label3;

        $z5 = virtualinvoke r4.<android.view.View: boolean hasFocusable()>();

        if $z5 == 0 goto label3;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: void focusableViewAvailable(android.view.View)>(r4);

        goto label6;

     label3:
        i4 = 0;

        i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label4:
        if i4 >= i2 goto label6;

        r4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        if r4 == null goto label5;

        $z4 = virtualinvoke r4.<android.view.View: boolean hasFocusable()>();

        if $z4 == 0 goto label5;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: void focusableViewAvailable(android.view.View)>(r4);

        goto label6;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        if z1 == 0 goto label7;

        if r4 == null goto label7;

        $z3 = virtualinvoke r4.<android.view.View: boolean hasFocus()>();

        if $z3 == 0 goto label7;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean,int,int)>(r4, 0, i0, i1);

     label7:
        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener $r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: java.util.ArrayList mOnLayoutCompletedListeners>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener) $r5;

        interfaceinvoke $r6.<androidx.leanback.widget.BaseGridView$OnLayoutCompletedListener: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        androidx.leanback.widget.GridLayoutManager r0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        return 1;
    }

    void updatePositionToRowMapInPostLayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, i3;
        androidx.leanback.widget.Grid$Location r1;
        android.util.SparseIntArray $r2, $r7;
        androidx.leanback.widget.BaseGridView $r3;
        android.view.View $r4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r5;
        androidx.leanback.widget.Grid $r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i3);

        $r5 = virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r4);

        i1 = virtualinvoke $r5.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()>();

        if i1 < 0 goto label2;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        r1 = virtualinvoke $r6.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i1);

        if r1 == null goto label2;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout>;

        $i2 = r1.<androidx.leanback.widget.Grid$Location: int mRow>;

        virtualinvoke $r7.<android.util.SparseIntArray: void put(int,int)>(i1, $i2);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    void fillScrapViewsInPostLayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        java.util.List r1;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7;
        androidx.recyclerview.widget.RecyclerView$Recycler $r2;
        int[] $r3, $r4, $r5, $r6, $r8, $r10, $r14, $r15;
        android.util.SparseIntArray $r7, $r9;
        androidx.leanback.widget.Grid $r11;
        java.lang.Object $r12;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r13;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        r1 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()>();

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        if $r3 == null goto label02;

        $r15 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        $i3 = lengthof $r15;

        if i0 <= $i3 goto label07;

     label02:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        if $r4 != null goto label03;

        $i4 = 16;

        goto label04;

     label03:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        $i4 = lengthof $r5;

     label04:
        i5 = $i4;

     label05:
        if i5 >= i0 goto label06;

        i5 = i5 << 1;

        goto label05;

     label06:
        $r6 = newarray (int)[i5];

        r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions> = $r6;

     label07:
        i6 = 0;

        i7 = 0;

     label08:
        if i7 >= i0 goto label10;

        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        $r13 = (androidx.recyclerview.widget.RecyclerView$ViewHolder) $r12;

        i1 = virtualinvoke $r13.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

        if i1 < 0 goto label09;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        $i2 = i6;

        i6 = i6 + 1;

        $r14[$i2] = i1;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        if i6 <= 0 goto label11;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        staticinvoke <java.util.Arrays: void sort(int[],int,int)>($r8, 0, i6);

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: int[] mDisappearingPositions>;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout>;

        virtualinvoke $r11.<androidx.leanback.widget.Grid: void fillDisappearingItems(int[],int,android.util.SparseIntArray)>($r10, i6, $r9);

     label11:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: android.util.SparseIntArray mPositionToRowInPostLayout>;

        virtualinvoke $r7.<android.util.SparseIntArray: void clear()>();

        return;
    }

    void updatePositionDeltaInPreLayout()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r2;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.leanback.widget.Grid $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i0 <= 0 goto label1;

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r3;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i1 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        $i2 = virtualinvoke r2.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        $i3 = $i1 - $i2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout> = $i3;

        goto label2;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout> = 0;

     label2:
        return;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52, i53, i54, i55, i56, i57, i58, $i59, $i60, $i61, $i62, $i63, $i64, i65, i66, $i67, i68, $i69, i70, i71, i72, $i74, i75, i76, i77, i78, $i79, $i80, $i81, $i82, $i83;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13;
        androidx.leanback.widget.Grid $r3, $r4, $r9, $r10, $r11, $r12, $r26, $r27, $r28, $r29, $r30;
        android.view.View $r6, $r7, $r14, $r17, r21, r24;
        androidx.leanback.widget.BaseGridView $r13, $r16, $r20, $r25;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r15, $r18;
        android.view.ViewGroup$LayoutParams $r19;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r22;
        byte $b73;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i1 != 0 goto label01;

        return;

     label01:
        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if i0 >= 0 goto label02;

        return;

     label02:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & 64;

        if $i3 == 0 goto label03;

        $i49 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i49 <= 0 goto label03;

        $i50 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i51 = $i50 | 128;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i51;

        return;

     label03:
        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i5 = $i4 & 512;

        if $i5 != 0 goto label04;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void discardLayoutInfo()>();

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)>(r1);

        return;

     label04:
        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & -4;

        $i8 = $i7 | 1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i8;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label13;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updatePositionDeltaInPreLayout()>();

        i52 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r12 == null goto label12;

        if i52 <= 0 goto label12;

        i53 = 2147483647;

        i54 = -2147483648;

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        $r15 = virtualinvoke $r13.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r14);

        i55 = virtualinvoke $r15.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()>();

        $r16 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i43 = i52 - 1;

        $r17 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>($i43);

        $r18 = virtualinvoke $r16.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>($r17);

        i56 = virtualinvoke $r18.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()>();

        i57 = 0;

     label05:
        if i57 >= i52 goto label10;

        r21 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i57);

        $r19 = virtualinvoke r21.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r22 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r19;

        $r20 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        i58 = virtualinvoke $r20.<androidx.leanback.widget.BaseGridView: int getChildAdapterPosition(android.view.View)>(r21);

        $z6 = virtualinvoke r22.<androidx.leanback.widget.GridLayoutManager$LayoutParams: boolean isItemChanged()>();

        if $z6 != 0 goto label08;

        $z7 = virtualinvoke r22.<androidx.leanback.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z7 != 0 goto label08;

        $z8 = virtualinvoke r21.<android.view.View: boolean isLayoutRequested()>();

        if $z8 != 0 goto label08;

        $z9 = virtualinvoke r21.<android.view.View: boolean hasFocus()>();

        if $z9 != 0 goto label06;

        $i47 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i48 = virtualinvoke r22.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAbsoluteAdapterPosition()>();

        if $i47 == $i48 goto label08;

     label06:
        $z10 = virtualinvoke r21.<android.view.View: boolean hasFocus()>();

        if $z10 == 0 goto label07;

        $i45 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i46 = virtualinvoke r22.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAbsoluteAdapterPosition()>();

        if $i45 != $i46 goto label08;

     label07:
        if i58 < i55 goto label08;

        if i58 <= i56 goto label09;

     label08:
        $i59 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r21);

        i53 = staticinvoke <java.lang.Math: int min(int,int)>(i53, $i59);

        $i60 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r21);

        i54 = staticinvoke <java.lang.Math: int max(int,int)>(i54, $i60);

     label09:
        i57 = i57 + 1;

        goto label05;

     label10:
        if i54 <= i53 goto label11;

        $i44 = i54 - i53;

        r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpaceInPreLayout> = $i44;

     label11:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void appendVisibleItems()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void prependVisibleItems()>();

     label12:
        $i61 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i62 = $i61 & -4;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i62;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return;

     label13:
        $z1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()>();

        if $z1 == 0 goto label14;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updatePositionToRowMapInPostLayout()>();

     label14:
        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isSmoothScrolling()>();

        if $z2 != 0 goto label15;

        $i42 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        if $i42 != 0 goto label15;

        $z11 = 1;

        goto label16;

     label15:
        $z11 = 0;

     label16:
        z12 = $z11;

        $i63 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i63 == -1 goto label17;

        $i38 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        if $i38 == -2147483648 goto label17;

        $i40 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i39 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i41 = $i40 + $i39;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = $i41;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

     label17:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        $i64 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        r24 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i64);

        i65 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        i66 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        $r25 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        z13 = virtualinvoke $r25.<androidx.leanback.widget.BaseGridView: boolean hasFocus()>();

        $r26 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r26 == null goto label18;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i67 = virtualinvoke $r11.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        goto label19;

     label18:
        $i67 = -1;

     label19:
        i68 = $i67;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r3 == null goto label20;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i69 = virtualinvoke $r10.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        goto label21;

     label20:
        $i69 = -1;

     label21:
        i70 = $i69;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i9 != 0 goto label22;

        i71 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollHorizontal()>();

        i72 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollVertical()>();

        goto label23;

     label22:
        i72 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollHorizontal()>();

        i71 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollVertical()>();

     label23:
        $z3 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean layoutInit()>();

        if $z3 == 0 goto label24;

        $i35 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i36 = $i35 | 4;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i36;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i37 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        virtualinvoke $r9.<androidx.leanback.widget.Grid: void setStart(int)>($i37);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fastRelayout()>();

        goto label31;

     label24:
        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i11 = $i10 & -5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i11;

        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i13 = $i12 & -17;

        if z12 == 0 goto label25;

        $b73 = 16;

        goto label26;

     label25:
        $b73 = 0;

     label26:
        $i14 = $i13 | $b73;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i14;

        if z12 == 0 goto label28;

        if i68 < 0 goto label27;

        $i33 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i33 > i70 goto label27;

        $i34 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i34 >= i68 goto label28;

     label27:
        $i74 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        i75 = $i74;

        i76 = $i74;

        goto label29;

     label28:
        i76 = i68;

        i75 = i70;

     label29:
        $r27 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        virtualinvoke $r27.<androidx.leanback.widget.Grid: void setStart(int)>(i76);

        if i75 == -1 goto label31;

     label30:
        $z5 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean appendOneColumnVisibleItems()>();

        if $z5 == 0 goto label31;

        $r7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>(i75);

        if $r7 != null goto label31;

        goto label30;

     label31:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateScrollLimits()>();

        $r28 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i77 = virtualinvoke $r28.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        $r29 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i78 = virtualinvoke $r29.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        $i79 = neg i71;

        $i80 = neg i72;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void focusToViewInLayout(boolean,boolean,int,int)>(z13, z12, $i79, $i80);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void appendVisibleItems()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void prependVisibleItems()>();

        $r30 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i81 = virtualinvoke $r30.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i81 != i77 goto label31;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i15 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        if $i15 != i78 goto label31;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeInvisibleViewsAtFront()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeInvisibleViewsAtEnd()>();

        $z4 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()>();

        if $z4 == 0 goto label32;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void fillScrapViewsInPostLayout()>();

     label32:
        $i16 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i17 = $i16 & 1024;

        if $i17 == 0 goto label33;

        $i31 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i32 = $i31 & -1025;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i32;

        goto label34;

     label33:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateRowSecondarySizeRefresh()>();

     label34:
        $i18 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i19 = $i18 & 4;

        if $i19 == 0 goto label36;

        $i26 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i26 != i65 goto label35;

        $i27 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        if $i27 != i66 goto label35;

        $i28 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $r6 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i28);

        if $r6 != r24 goto label35;

        $i29 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i30 = $i29 & 8;

        if $i30 == 0 goto label36;

     label35:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

        goto label37;

     label36:
        $i20 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i21 = $i20 & 20;

        if $i21 != 16 goto label37;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

     label37:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelectedAndPositioned()>();

        $i82 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i83 = $i82 & 64;

        if $i83 == 0 goto label38;

        $i24 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSlideOutDistance()>();

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionPrimary(int)>($i24);

     label38:
        $i22 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i23 = $i22 & -4;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i23;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return;
    }

    private void offsetChildrenSecondary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, i3, i4;
        android.view.View $r1, $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 0 goto label3;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i3);

        virtualinvoke $r2.<android.view.View: void offsetTopAndBottom(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i4 = 0;

     label4:
        if i4 >= i1 goto label5;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>(i0);

        i4 = i4 + 1;

        goto label4;

     label5:
        return;
    }

    private void offsetChildrenPrimary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, i3, i4;
        android.view.View $r1, $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 1 goto label3;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i3);

        virtualinvoke $r2.<android.view.View: void offsetTopAndBottom(int)>(i0);

        i3 = i3 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i4 = 0;

     label4:
        if i4 >= i1 goto label5;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>(i0);

        i4 = i4 + 1;

        goto label4;

     label5:
        return;
    }

    public int scrollHorizontallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 512;

        if $i2 == 0 goto label1;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasDoneFirstLayout()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & -4;

        $i5 = $i4 | 2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i5;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 0 goto label3;

        i9 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionPrimary(int)>(i0);

        goto label4;

     label3:
        i9 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionSecondary(int)>(i0);

     label4:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & -4;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i8;

        return i9;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 512;

        if $i2 == 0 goto label1;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasDoneFirstLayout()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & -4;

        $i5 = $i4 | 2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i5;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 1 goto label3;

        i9 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionPrimary(int)>(i0);

        goto label4;

     label3:
        i9 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionSecondary(int)>(i0);

     label4:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & -4;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i8;

        return i9;
    }

    private int scrollDirectionPrimary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, i16, $i17;
        androidx.leanback.widget.BaseGridView $r1;
        androidx.leanback.widget.WindowAlignment $r2, $r4, $r6, $r8;
        androidx.leanback.widget.WindowAlignment$Axis $r3, $r5, $r7, $r9;
        boolean $z1, $z2, $z3, z4, $z5, z6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i11 := @parameter0: int;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 64;

        if $i1 != 0 goto label03;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i10 = $i9 & 3;

        if $i10 == 1 goto label03;

        if i11 <= 0 goto label02;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r7 = virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $z2 = virtualinvoke $r7.<androidx.leanback.widget.WindowAlignment$Axis: boolean isMaxUnknown()>();

        if $z2 != 0 goto label03;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r9 = virtualinvoke $r8.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i12 = virtualinvoke $r9.<androidx.leanback.widget.WindowAlignment$Axis: int getMaxScroll()>();

        if i11 <= i12 goto label01;

        i11 = i12;

     label01:
        goto label03;

     label02:
        if i11 >= 0 goto label03;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r3 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $z1 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment$Axis: boolean isMinUnknown()>();

        if $z1 != 0 goto label03;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r5 = virtualinvoke $r4.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i13 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment$Axis: int getMinScroll()>();

        if i11 >= i13 goto label03;

        i11 = i13;

     label03:
        if i11 != 0 goto label04;

        return 0;

     label04:
        $i2 = neg i11;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void offsetChildrenPrimary(int)>($i2);

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 3;

        if $i4 != 1 goto label05;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateScrollLimits()>();

        return i11;

     label05:
        i14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 262144;

        if $i6 == 0 goto label06;

        if i11 <= 0 goto label08;

        goto label07;

     label06:
        if i11 >= 0 goto label08;

     label07:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void prependVisibleItems()>();

        goto label09;

     label08:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void appendVisibleItems()>();

     label09:
        $i15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i15 <= i14 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        z4 = $z3;

        i16 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & 262144;

        if $i8 == 0 goto label12;

        if i11 <= 0 goto label14;

        goto label13;

     label12:
        if i11 >= 0 goto label14;

     label13:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeInvisibleViewsAtEnd()>();

        goto label15;

     label14:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void removeInvisibleViewsAtFront()>();

     label15:
        $i17 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i17 >= i16 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        z6 = z4 | $z5;

        if z6 == 0 goto label18;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateRowSecondarySizeRefresh()>();

     label18:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: void invalidate()>();

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateScrollLimits()>();

        return i11;
    }

    private int scrollDirectionSecondary(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3;
        androidx.leanback.widget.BaseGridView $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = neg i0;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void offsetChildrenSecondary(int)>($i1);

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary>;

        $i3 = $i2 + i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary> = $i3;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void updateSecondaryScrollLimits()>();

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: void invalidate()>();

        return i0;
    }

    public void collectAdjacentPrefetchPositions(int, int, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r2;
        java.lang.Throwable r3, $r5;
        androidx.leanback.widget.Grid $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter3: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

     label01:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(null, r1);

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i4 != 0 goto label02;

        $i9 = i0;

        goto label03;

     label02:
        $i9 = i1;

     label03:
        i2 = $i9;

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i5 == 0 goto label04;

        if i2 != 0 goto label05;

     label04:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return;

     label05:
        if i2 >= 0 goto label06;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i10 = neg $i8;

        goto label07;

     label06:
        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mExtraLayoutSpace>;

        $i10 = $i7 + $i6;

     label07:
        i3 = $i10;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        virtualinvoke $r4.<androidx.leanback.widget.Grid: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)>(i3, i2, r2);

     label08:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        goto label11;

     label09:
        $r5 := @caughtexception;

        r3 = $r5;

     label10:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void collectInitialPrefetchPositions(int, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r1;
        androidx.leanback.widget.BaseGridView $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        i1 = $r2.<androidx.leanback.widget.BaseGridView: int mInitialPrefetchItemCount>;

        if i0 == 0 goto label2;

        if i1 == 0 goto label2;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i3 = i1 - 1;

        $i4 = $i3 / 2;

        $i7 = $i5 - $i4;

        $i6 = i0 - i1;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        i10 = i2;

     label1:
        if i10 >= i0 goto label2;

        $i9 = i2 + i1;

        if i10 >= $i9 goto label2;

        interfaceinvoke r1.<androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i10, 0);

        i10 = i10 + 1;

        goto label1;

     label2:
        return;
    }

    void updateScrollLimits()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        androidx.recyclerview.widget.RecyclerView$State $r1, $r4, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20;
        androidx.leanback.widget.Grid $r2, $r3, $r8, $r11, $r18, $r20;
        androidx.leanback.widget.WindowAlignment $r5, $r14, $r16;
        androidx.leanback.widget.WindowAlignment$Axis $r6, $r15, $r17;
        int[] $r7, $r9, $r10, $r12, r23;
        android.view.ViewGroup$LayoutParams $r13;
        android.view.View r21, r24;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r22;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 262144;

        if $i2 != 0 goto label02;

        $r18 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i13 = virtualinvoke $r18.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        $r19 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i12 = virtualinvoke $r19.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        i14 = $i12 - 1;

        $r20 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i15 = virtualinvoke $r20.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        i16 = 0;

        goto label03;

     label02:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i13 = virtualinvoke $r2.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        i14 = 0;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i15 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i3 = virtualinvoke $r4.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        i16 = $i3 - 1;

     label03:
        if i13 < 0 goto label04;

        if i15 >= 0 goto label05;

     label04:
        return;

     label05:
        if i13 != i14 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z0 = $z4;

        if i15 != i16 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z1 = $z5;

        if z0 != 0 goto label10;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r15 = virtualinvoke $r14.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $z2 = virtualinvoke $r15.<androidx.leanback.widget.WindowAlignment$Axis: boolean isMaxUnknown()>();

        if $z2 == 0 goto label10;

        if z1 != 0 goto label10;

        $r16 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r17 = virtualinvoke $r16.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $z3 = virtualinvoke $r17.<androidx.leanback.widget.WindowAlignment$Axis: boolean isMinUnknown()>();

        if $z3 == 0 goto label10;

        return;

     label10:
        if z0 == 0 goto label12;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r10 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i17 = virtualinvoke $r11.<androidx.leanback.widget.Grid: int findRowMax(boolean,int[])>(1, $r10);

        $r12 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $i5 = $r12[1];

        r21 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i5);

        i18 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenter(android.view.View)>(r21);

        $r13 = virtualinvoke r21.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r22 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r13;

        r23 = virtualinvoke r22.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] getAlignMultiple()>();

        if r23 == null goto label11;

        $i6 = lengthof r23;

        if $i6 <= 0 goto label11;

        $i7 = lengthof r23;

        $i8 = $i7 - 1;

        $i10 = r23[$i8];

        $i9 = r23[0];

        $i11 = $i10 - $i9;

        i18 = i18 + $i11;

     label11:
        goto label13;

     label12:
        i17 = 2147483647;

        i18 = 2147483647;

     label13:
        if z1 == 0 goto label14;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r7 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i19 = virtualinvoke $r8.<androidx.leanback.widget.Grid: int findRowMin(boolean,int[])>(0, $r7);

        $r9 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $i4 = $r9[1];

        r24 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i4);

        i20 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenter(android.view.View)>(r24);

        goto label15;

     label14:
        i19 = -2147483648;

        i20 = -2147483648;

     label15:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: void updateMinMax(int,int,int,int)>(i19, i17, i20, i18);

        return;
    }

    private void updateSecondaryScrollLimits()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment$Axis r1;
        int i0, i1, $i2, $i3, $i4;
        androidx.leanback.widget.WindowAlignment $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        r1 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis secondAxis()>();

        $i2 = virtualinvoke r1.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary>;

        i0 = $i2 - $i3;

        $i4 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSizeSecondary()>();

        i1 = i0 + $i4;

        virtualinvoke r1.<androidx.leanback.widget.WindowAlignment$Axis: void updateMinMax(int,int,int,int)>(i0, i1, i0, i1);

        return;
    }

    private void initScrollController()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment $r1, $r2, $r4, $r6, $r8, $r10;
        androidx.leanback.widget.WindowAlignment$Axis $r3, $r5, $r7, $r9, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        virtualinvoke $r1.<androidx.leanback.widget.WindowAlignment: void reset()>();

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r3 = $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis horizontal>;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getWidth()>();

        virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment$Axis: void setSize(int)>($i0);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r5 = $r4.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis vertical>;

        $i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getHeight()>();

        virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment$Axis: void setSize(int)>($i1);

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r7 = $r6.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis horizontal>;

        $i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingRight()>();

        virtualinvoke $r7.<androidx.leanback.widget.WindowAlignment$Axis: void setPadding(int,int)>($i2, $i3);

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r9 = $r8.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis vertical>;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingBottom()>();

        virtualinvoke $r9.<androidx.leanback.widget.WindowAlignment$Axis: void setPadding(int,int)>($i4, $i5);

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r11 = virtualinvoke $r10.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i6 = virtualinvoke $r11.<androidx.leanback.widget.WindowAlignment$Axis: int getSize()>();

        r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary> = $i6;

        r0.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary> = 0;

        return;
    }

    private void updateScrollController()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.WindowAlignment $r1, $r3, $r5, $r7, $r9;
        androidx.leanback.widget.WindowAlignment$Axis $r2, $r4, $r6, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r2 = $r1.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis horizontal>;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getWidth()>();

        virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment$Axis: void setSize(int)>($i0);

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r4 = $r3.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis vertical>;

        $i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getHeight()>();

        virtualinvoke $r4.<androidx.leanback.widget.WindowAlignment$Axis: void setSize(int)>($i1);

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis horizontal>;

        $i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingRight()>();

        virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: void setPadding(int,int)>($i2, $i3);

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r8 = $r7.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis vertical>;

        $i4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingTop()>();

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPaddingBottom()>();

        virtualinvoke $r8.<androidx.leanback.widget.WindowAlignment$Axis: void setPadding(int,int)>($i4, $i5);

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r10 = virtualinvoke $r9.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i6 = virtualinvoke $r10.<androidx.leanback.widget.WindowAlignment$Axis: int getSize()>();

        r0.<androidx.leanback.widget.GridLayoutManager: int mSizePrimary> = $i6;

        return;
    }

    public void scrollToPosition(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, 0, 0, 0);

        return;
    }

    public void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, 0, 1, 0);

        return;
    }

    void setSelection(int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, 0, 0, i1);

        return;
    }

    void setSelectionSmooth(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, 0, 1, 0);

        return;
    }

    void setSelectionWithSub(int, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, i1, 0, i2);

        return;
    }

    void setSelectionSmoothWithSub(int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void setSelection(int,int,boolean,int)>(i0, i1, 1, 0);

        return;
    }

    int getSelection()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        return $i0;
    }

    int getSubSelection()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        return $i0;
    }

    void setSelection(int, int, boolean, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i3 == i0 goto label1;

        if i0 != -1 goto label2;

     label1:
        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        if i1 != $i4 goto label2;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra>;

        if i2 == $i5 goto label3;

     label2:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToSelection(int,int,boolean,int)>(i0, i1, z0, i2);

     label3:
        return;
    }

    void scrollToSelection(int, int, boolean, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, i19, $i20, $i21;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.view.View r1;
        androidx.leanback.widget.BaseGridView $r2, $r3, $r4, $r6;
        java.lang.String $r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i16 := @parameter0: int;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        r0.<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra> = i1;

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>(i16);

        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isSmoothScrolling()>();

        if $z2 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z1 = $z7;

        if z1 == 0 goto label03;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z6 = virtualinvoke $r6.<androidx.leanback.widget.BaseGridView: boolean isLayoutRequested()>();

        if $z6 != 0 goto label03;

        if r1 == null goto label03;

        $i11 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r1);

        if $i11 != i16 goto label03;

        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i13 = $i12 | 32;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i13;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean)>(r1, z0);

        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i15 = $i14 & -33;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i15;

        goto label10;

     label03:
        $i17 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i18 = $i17 & 512;

        if $i18 == 0 goto label04;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & 64;

        if $i3 == 0 goto label05;

     label04:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i16;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = -2147483648;

        return;

     label05:
        if z0 == 0 goto label07;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z4 = virtualinvoke $r4.<androidx.leanback.widget.BaseGridView: boolean isLayoutRequested()>();

        if $z4 != 0 goto label07;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i16;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = -2147483648;

        $z5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasDoneFirstLayout()>();

        if $z5 != 0 goto label06;

        $r5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: java.lang.String getTag()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "setSelectionSmooth should not be called before first layout pass");

        return;

     label06:
        i19 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int startPositionSmoothScroller(int)>(i16);

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i19 == $i9 goto label10;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i19;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        goto label10;

     label07:
        if z1 != 0 goto label08;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void skipSmoothScrollerOnStopInternal()>();

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: void stopScroll()>();

     label08:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z3 = virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: boolean isLayoutRequested()>();

        if $z3 != 0 goto label09;

        if r1 == null goto label09;

        $i4 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r1);

        if $i4 != i16 goto label09;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 | 32;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i6;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean)>(r1, z0);

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & -33;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i8;

        goto label10;

     label09:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i16;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = -2147483648;

        $i20 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i21 = $i20 | 256;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i21;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label10:
        return;
    }

    int startPositionSmoothScroller(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;
        androidx.leanback.widget.GridLayoutManager$4 r1, r3;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r3 = new androidx.leanback.widget.GridLayoutManager$4;

        specialinvoke r3.<androidx.leanback.widget.GridLayoutManager$4: void <init>(androidx.leanback.widget.GridLayoutManager)>(r0);

        r1 = r3;

        virtualinvoke r1.<androidx.recyclerview.widget.LinearSmoothScroller: void setTargetPosition(int)>(i0);

        r4 = (androidx.recyclerview.widget.RecyclerView$SmoothScroller) r1;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>(r4);

        $i1 = virtualinvoke r1.<androidx.recyclerview.widget.LinearSmoothScroller: int getTargetPosition()>();

        return $i1;
    }

    void skipSmoothScrollerOnStopInternal()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller $r1, $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>;

        $r2.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: boolean mSkipOnStopInternal> = 1;

     label1:
        return;
    }

    public void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r1;
        boolean $z0, $z1, $z2;
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller $r2, $r3, $r4;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller $r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$SmoothScroller;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void skipSmoothScrollerOnStopInternal()>();

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>(r1);

        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        if $z1 == 0 goto label2;

        $r2 = (androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller) r1;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller> = $r2;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>;

        $z2 = $r3 instanceof androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        if $z2 == 0 goto label1;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>;

        $r5 = (androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller) $r4;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller> = $r5;

        goto label3;

     label1:
        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller> = null;

        goto label3;

     label2:
        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller> = null;

     label3:
        return;
    }

    void processPendingMovement(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1, $z2, $z3;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r1, $r2, $r3, $r4, r7;
        int $i0;
        byte $b1;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label01;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedLastItem()>();

        if $z2 == 0 goto label03;

        goto label02;

     label01:
        $z1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedFirstItem()>();

        if $z1 == 0 goto label03;

     label02:
        return;

     label03:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r2 != null goto label08;

        r7 = new androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        if z0 == 0 goto label04;

        $b1 = 1;

        goto label05;

     label04:
        $b1 = -1;

     label05:
        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        if $i0 <= 1 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        specialinvoke r7.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void <init>(androidx.leanback.widget.GridLayoutManager,int,boolean)>(r0, $b1, $z3);

        r1 = r7;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        r8 = (androidx.recyclerview.widget.RecyclerView$SmoothScroller) r1;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)>(r8);

        goto label10;

     label08:
        if z0 == 0 goto label09;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        virtualinvoke $r4.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void increasePendingMoves()>();

        goto label10;

     label09:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void decreasePendingMoves()>();

     label10:
        return;
    }

    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.leanback.widget.Grid $r2, $r3;
        androidx.leanback.widget.ViewsStateBundle $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i3 == -1 goto label1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i4 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i4 < 0 goto label1;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        if $i5 == -2147483648 goto label1;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        i2 = $i7 + $i6;

        if i0 > i2 goto label1;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i9 = $i8 + i1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i9;

     label1:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r4.<androidx.leanback.widget.ViewsStateBundle: void clear()>();

        return;
    }

    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.leanback.widget.ViewsStateBundle $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r2.<androidx.leanback.widget.ViewsStateBundle: void clear()>();

        return;
    }

    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        androidx.leanback.widget.Grid $r2, $r3;
        androidx.leanback.widget.ViewsStateBundle $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i3 == -1 goto label2;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i4 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i4 < 0 goto label2;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        if $i5 == -2147483648 goto label2;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        i2 = $i7 + $i6;

        if i0 > i2 goto label2;

        $i8 = i0 + i1;

        if $i8 <= i2 goto label1;

        $i12 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i11 = i0 - i2;

        $i13 = $i12 + $i11;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i13;

        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i16 = $i15 + $i14;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = $i16;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = -2147483648;

        goto label2;

     label1:
        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i10 = $i9 - i1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i10;

     label2:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r4.<androidx.leanback.widget.ViewsStateBundle: void clear()>();

        return;
    }

    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView, int, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        androidx.leanback.widget.ViewsStateBundle $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i4 == -1 goto label3;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        if $i5 == -2147483648 goto label3;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        i3 = $i7 + $i6;

        if i0 > i3 goto label1;

        $i13 = i0 + i2;

        if i3 >= $i13 goto label1;

        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i14 = i1 - i0;

        $i16 = $i15 + $i14;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i16;

        goto label3;

     label1:
        if i0 >= i3 goto label2;

        $i10 = i3 - i2;

        if i1 <= $i10 goto label2;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i12 = $i11 - i2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i12;

        goto label3;

     label2:
        if i0 <= i3 goto label3;

        if i1 >= i3 goto label3;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset>;

        $i9 = $i8 + i2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = $i9;

     label3:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r2.<androidx.leanback.widget.ViewsStateBundle: void clear()>();

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, i3;
        androidx.leanback.widget.ViewsStateBundle $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 = i0;

        i2 = i0 + i1;

     label1:
        if i3 >= i2 goto label2;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r2.<androidx.leanback.widget.ViewsStateBundle: void remove(int)>(i3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$State, android.view.View, android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3, r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.View;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 32768;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r3);

        if $i2 != -1 goto label2;

        return 1;

     label2:
        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 35;

        if $i4 != 0 goto label3;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,android.view.View,boolean)>(r3, r4, 1);

     label3:
        return 1;
    }

    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.View r2;
        android.graphics.Rect r3;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        return 0;
    }

    void getViewSelectedOffsets(android.view.View, int[])
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int[] r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: int[];

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i3 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPrimaryAlignedScrollDistance(android.view.View)>(r1);

        r2[0] = $i3;

        $i4 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSecondaryScrollDistance(android.view.View)>(r1);

        r2[1] = $i4;

        goto label2;

     label1:
        $i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPrimaryAlignedScrollDistance(android.view.View)>(r1);

        r2[1] = $i1;

        $i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSecondaryScrollDistance(android.view.View)>(r1);

        r2[0] = $i2;

     label2:
        return;
    }

    private int getPrimaryAlignedScrollDistance(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        androidx.leanback.widget.WindowAlignment $r2;
        androidx.leanback.widget.WindowAlignment$Axis $r3;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r3 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenter(android.view.View)>(r1);

        $i1 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment$Axis: int getScroll(int)>($i0);

        return $i1;
    }

    private int getAdjustedPrimaryAlignedScrollDistance(int, android.view.View, android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r2;
        int i0, $i1, $i2, $i3, i4;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r4;
        int[] $r5, $r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i4 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.View;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSubPositionByView(android.view.View,android.view.View)>(r1, r2);

        if i0 == 0 goto label1;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r4;

        $r5 = virtualinvoke r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] getAlignMultiple()>();

        $i1 = $r5[i0];

        $r6 = virtualinvoke r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] getAlignMultiple()>();

        $i2 = $r6[0];

        $i3 = $i1 - $i2;

        i4 = i4 + $i3;

     label1:
        return i4;
    }

    private int getSecondaryScrollDistance(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int i0, $i1;
        androidx.leanback.widget.WindowAlignment $r2;
        androidx.leanback.widget.WindowAlignment$Axis $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewCenterSecondary(android.view.View)>(r1);

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r3 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis secondAxis()>();

        $i1 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment$Axis: int getScroll(int)>(i0);

        return $i1;
    }

    void scrollToView(android.view.View, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, $r4;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.view.View: android.view.View findFocus()>();

     label2:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,android.view.View,boolean)>(r1, $r4, z0);

        return;
    }

    void scrollToView(android.view.View, boolean, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, $r4;
        boolean z0;
        int i0, i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.view.View: android.view.View findFocus()>();

     label2:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,android.view.View,boolean,int,int)>(r1, $r4, z0, i0, i1);

        return;
    }

    private void scrollToView(android.view.View, android.view.View, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r2;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,android.view.View,boolean,int,int)>(r1, r2, z0, 0, 0);

        return;
    }

    private void scrollToView(android.view.View, android.view.View, boolean, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r2;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        androidx.leanback.widget.BaseGridView $r3, $r5, $r6;
        int[] $r4, $r7, $r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i5 = $i4 & 64;

        if $i5 == 0 goto label1;

        return;

     label1:
        i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r1);

        i3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSubPositionByView(android.view.View,android.view.View)>(r1, r2);

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i2 != $i6 goto label2;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        if i3 == $i9 goto label4;

     label2:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i2;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = i3;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & 3;

        if $i8 == 1 goto label3;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

     label3:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z1 = virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: boolean isChildrenDrawingOrderEnabledInternal()>();

        if $z1 == 0 goto label4;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r6.<androidx.leanback.widget.BaseGridView: void invalidate()>();

     label4:
        if r1 != null goto label5;

        return;

     label5:
        $z2 = virtualinvoke r1.<android.view.View: boolean hasFocus()>();

        if $z2 != 0 goto label6;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $z4 = virtualinvoke $r5.<androidx.leanback.widget.BaseGridView: boolean hasFocus()>();

        if $z4 == 0 goto label6;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label6:
        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i11 = $i10 & 131072;

        if $i11 != 0 goto label7;

        if z0 == 0 goto label7;

        return;

     label7:
        $r4 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $z3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean getScrollPosition(android.view.View,android.view.View,int[])>(r1, r2, $r4);

        if $z3 != 0 goto label8;

        if i0 != 0 goto label8;

        if i1 == 0 goto label9;

     label8:
        $r7 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $i12 = $r7[0];

        $i13 = $i12 + i0;

        $r8 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $i14 = $r8[1];

        $i15 = $i14 + i1;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollGrid(int,int,boolean)>($i13, $i15, z0);

     label9:
        return;
    }

    boolean getScrollPosition(android.view.View, android.view.View, int[])
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r2;
        int[] r3;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: int[];

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $z1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean getAlignedPosition(android.view.View,android.view.View,int[])>(r1, r2, r3);

        return $z1;

     label2:
        $z0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean getNoneAlignedPosition(android.view.View,int[])>(r1, r3);

        return $z0;
    }

    private boolean getNoneAlignedPosition(android.view.View, int[])
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r14, r15, r18;
        int[] r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        androidx.leanback.widget.WindowAlignment $r3, $r5;
        androidx.leanback.widget.WindowAlignment$Axis $r4, $r6;
        androidx.leanback.widget.Grid $r7, $r8, $r9, $r11, $r12;
        androidx.collection.CircularIntArray[] $r10, $r13;
        boolean $z0, $z1;
        androidx.collection.CircularIntArray r16, r17;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: int[];

        i0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r1);

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r1);

        i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r1);

        r14 = null;

        r15 = null;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r4 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i3 = virtualinvoke $r4.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i4 = virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: int getClientSize()>();

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i5 = virtualinvoke $r7.<androidx.leanback.widget.Grid: int getRowIndex(int)>(i0);

        if i1 >= i3 goto label03;

        r14 = r1;

        $i18 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        if $i18 != 2 goto label08;

     label01:
        $z1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean prependOneColumnVisibleItems()>();

        if $z1 == 0 goto label08;

        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i19 = virtualinvoke $r11.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        $r13 = virtualinvoke $r12.<androidx.leanback.widget.Grid: androidx.collection.CircularIntArray[] getItemPositionsInRows(int,int)>($i19, i0);

        r16 = $r13[i5];

        $i20 = virtualinvoke r16.<androidx.collection.CircularIntArray: int get(int)>(0);

        r14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i20);

        $i21 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r14);

        $i22 = i2 - $i21;

        if $i22 <= i4 goto label02;

        $i23 = virtualinvoke r16.<androidx.collection.CircularIntArray: int size()>();

        if $i23 <= 2 goto label08;

        $i24 = virtualinvoke r16.<androidx.collection.CircularIntArray: int get(int)>(2);

        r14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i24);

        goto label08;

     label02:
        goto label01;

     label03:
        $i7 = i4 + i3;

        if i2 <= $i7 goto label08;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        if $i11 != 2 goto label07;

        r14 = r1;

     label04:
        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i12 = virtualinvoke $r8.<androidx.leanback.widget.Grid: int getLastVisibleIndex()>();

        $r10 = virtualinvoke $r9.<androidx.leanback.widget.Grid: androidx.collection.CircularIntArray[] getItemPositionsInRows(int,int)>(i0, $i12);

        r17 = $r10[i5];

        $i13 = virtualinvoke r17.<androidx.collection.CircularIntArray: int size()>();

        $i14 = $i13 - 1;

        $i15 = virtualinvoke r17.<androidx.collection.CircularIntArray: int get(int)>($i14);

        r15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i15);

        $i16 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r15);

        $i17 = $i16 - i1;

        if $i17 <= i4 goto label05;

        r15 = null;

        goto label06;

     label05:
        $z0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean appendOneColumnVisibleItems()>();

        if $z0 != 0 goto label04;

     label06:
        if r15 == null goto label08;

        r14 = null;

        goto label08;

     label07:
        r15 = r1;

     label08:
        i25 = 0;

        if r14 == null goto label09;

        $i10 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r14);

        i25 = $i10 - i3;

        goto label10;

     label09:
        if r15 == null goto label10;

        $i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r15);

        $i9 = i3 + i4;

        i25 = $i8 - $i9;

     label10:
        if r14 == null goto label11;

        r18 = r14;

        goto label13;

     label11:
        if r15 == null goto label12;

        r18 = r15;

        goto label13;

     label12:
        r18 = r1;

     label13:
        i6 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSecondaryScrollDistance(android.view.View)>(r18);

        if i25 != 0 goto label14;

        if i6 == 0 goto label15;

     label14:
        r2[0] = i25;

        r2[1] = i6;

        return 1;

     label15:
        return 0;
    }

    private boolean getAlignedPosition(android.view.View, android.view.View, int[])
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, r2;
        int[] r3;
        int i0, $i1, i2, i3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: int[];

        i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getPrimaryAlignedScrollDistance(android.view.View)>(r1);

        if r2 == null goto label1;

        i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdjustedPrimaryAlignedScrollDistance(int,android.view.View,android.view.View)>(i2, r1, r2);

     label1:
        i0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSecondaryScrollDistance(android.view.View)>(r1);

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra>;

        i3 = i2 + $i1;

        if i3 != 0 goto label2;

        if i0 == 0 goto label3;

     label2:
        r3[0] = i3;

        r3[1] = i0;

        return 1;

     label3:
        r3[0] = 0;

        r3[1] = 0;

        return 0;
    }

    private void scrollGrid(int, int, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, $i4, i7, i8;
        boolean z0;
        androidx.leanback.widget.BaseGridView $r1, $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & 3;

        if $i3 != 1 goto label1;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionPrimary(int)>(i0);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int scrollDirectionSecondary(int)>(i1);

        goto label5;

     label1:
        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i4 != 0 goto label2;

        i7 = i0;

        i8 = i1;

        goto label3;

     label2:
        i7 = i1;

        i8 = i0;

     label3:
        if z0 == 0 goto label4;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: void smoothScrollBy(int,int)>(i7, i8);

        goto label5;

     label4:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: void scrollBy(int,int)>(i7, i8);

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelectedAndPositioned()>();

     label5:
        return;
    }

    void setPruneChild(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 65536;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == z0 goto label5;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & -65537;

        if z0 == 0 goto label3;

        $i5 = 65536;

        goto label4;

     label3:
        $i5 = 0;

     label4:
        $i4 = $i3 | $i5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

        if z0 == 0 goto label5;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label5:
        return;
    }

    boolean getPruneChild()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 65536;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setScrollEnabled(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == z0 goto label5;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & -131073;

        if z0 == 0 goto label3;

        $i12 = 131072;

        goto label4;

     label3:
        $i12 = 0;

     label4:
        $i4 = $i3 | $i12;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 131072;

        if $i6 == 0 goto label5;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        if $i7 != 0 goto label5;

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i8 == -1 goto label5;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mPrimaryScrollExtra>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToSelection(int,int,boolean,int)>($i11, $i10, 1, $i9);

     label5:
        return;
    }

    boolean isScrollEnabled()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int findImmediateChildIndex(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1;
        androidx.leanback.widget.BaseGridView $r1, $r2;
        android.view.View $r3, r4, r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r4 := @parameter0: android.view.View;

        if r4 == null goto label3;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        if $r1 == null goto label3;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        if r4 == $r2 goto label3;

        r5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findContainingItemView(android.view.View)>(r4);

        if r5 == null goto label3;

        i1 = 0;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i1);

        if $r3 != r5 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1;
        int i0, $i1, i2;
        android.graphics.Rect r1;
        android.view.View r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        if z0 == 0 goto label4;

        i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

     label1:
        r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>(i2);

        if r2 != null goto label2;

        goto label4;

     label2:
        $i1 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label3;

        $z1 = virtualinvoke r2.<android.view.View: boolean hasFocusable()>();

        if $z1 == 0 goto label3;

        virtualinvoke r2.<android.view.View: boolean requestFocus()>();

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    void setFocusSearchDisabled(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & -32769;

        if z0 == 0 goto label1;

        $c3 = 32768;

        goto label2;

     label1:
        $c3 = 0;

     label2:
        $i2 = $i1 | $c3;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i2;

        return;
    }

    boolean isFocusSearchDisabled()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 32768;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1, $r9, r13, r14, r19;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i18, $i19, $i20, $i21, $i22;
        android.view.FocusFinder r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, z9;
        androidx.leanback.widget.BaseGridView $r3, $r4, $r5, $r7, $r10, $r11, $r12;
        android.view.ViewParent $r6, $r8;
        short $s14, s15;
        byte $b16, b17;
        java.lang.Object $r15;
        android.view.ViewGroup r16, r17, r18;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 32768;

        if $i2 == 0 goto label01;

        return r1;

     label01:
        r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r13 = null;

        if i0 == 2 goto label02;

        if i0 != 1 goto label12;

     label02:
        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label05;

        if i0 != 2 goto label03;

        $s14 = 130;

        goto label04;

     label03:
        $s14 = 33;

     label04:
        s15 = $s14;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r16 = (android.view.ViewGroup) $r11;

        r13 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r16, r1, s15);

     label05:
        $z4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean canScrollHorizontally()>();

        if $z4 == 0 goto label13;

        $i13 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getLayoutDirection()>();

        if $i13 != 1 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        z6 = $z5;

        if i0 != 2 goto label08;

        $z7 = 1;

        goto label09;

     label08:
        $z7 = 0;

     label09:
        $z3 = $z7 ^ z6;

        if $z3 == 0 goto label10;

        $b16 = 66;

        goto label11;

     label10:
        $b16 = 17;

     label11:
        b17 = $b16;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r17 = (android.view.ViewGroup) $r10;

        r13 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r17, r1, b17);

        goto label13;

     label12:
        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r18 = (android.view.ViewGroup) $r12;

        r13 = virtualinvoke r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r18, r1, i0);

     label13:
        if r13 == null goto label14;

        return r13;

     label14:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i3 = virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: int getDescendantFocusability()>();

        if $i3 != 393216 goto label15;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r8 = virtualinvoke $r7.<androidx.leanback.widget.BaseGridView: android.view.ViewParent getParent()>();

        $r9 = interfaceinvoke $r8.<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>(r1, i0);

        return $r9;

     label15:
        i18 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getMovement(int)>(i0);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i4 = virtualinvoke $r4.<androidx.leanback.widget.BaseGridView: int getScrollState()>();

        if $i4 == 0 goto label16;

        $z8 = 1;

        goto label17;

     label16:
        $z8 = 0;

     label17:
        z9 = $z8;

        if i18 != 1 goto label20;

        if z9 != 0 goto label18;

        $i11 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i12 = $i11 & 4096;

        if $i12 != 0 goto label19;

     label18:
        r13 = r1;

     label19:
        $i19 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i20 = $i19 & 131072;

        if $i20 == 0 goto label27;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedLastItem()>();

        if $z2 != 0 goto label27;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void processPendingMovement(boolean)>(1);

        r13 = r1;

        goto label27;

     label20:
        if i18 != 0 goto label23;

        if z9 != 0 goto label21;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i10 = $i9 & 2048;

        if $i10 != 0 goto label22;

     label21:
        r13 = r1;

     label22:
        $i21 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i22 = $i21 & 131072;

        if $i22 == 0 goto label27;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedFirstItem()>();

        if $z1 != 0 goto label27;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void processPendingMovement(boolean)>(0);

        r13 = r1;

        goto label27;

     label23:
        if i18 != 3 goto label25;

        if z9 != 0 goto label24;

        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & 16384;

        if $i8 != 0 goto label27;

     label24:
        r13 = r1;

        goto label27;

     label25:
        if i18 != 2 goto label27;

        if z9 != 0 goto label26;

        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 8192;

        if $i6 != 0 goto label27;

     label26:
        r13 = r1;

     label27:
        if r13 == null goto label28;

        return r13;

     label28:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.BaseGridView: android.view.ViewParent getParent()>();

        r14 = interfaceinvoke $r6.<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>(r1, i0);

        if r14 == null goto label29;

        return r14;

     label29:
        if r1 == null goto label30;

        $r15 = r1;

        goto label31;

     label30:
        $r15 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

     label31:
        r19 = (android.view.View) $r15;

        return r19;
    }

    boolean hasPreviousViewInSameRow(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        androidx.leanback.widget.Grid$Location r1, $r6;
        androidx.leanback.widget.Grid $r2, $r3, $r4, $r5, $r7;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r2 == null goto label1;

        if i0 == -1 goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i3 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i3 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i4 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getFirstVisibleIndex()>();

        if $i4 <= 0 goto label3;

        return 1;

     label3:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i0);

        i1 = $r6.<androidx.leanback.widget.Grid$Location: int mRow>;

        $i5 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        i7 = $i5 - 1;

     label4:
        if i7 < 0 goto label6;

        i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByIndex(int)>(i7);

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        r1 = virtualinvoke $r7.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i2);

        if r1 == null goto label5;

        $i6 = r1.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i6 != i1 goto label5;

        if i2 >= i0 goto label5;

        return 1;

     label5:
        i7 = i7 + -1;

        goto label4;

     label6:
        return 0;
    }

    public boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        java.util.ArrayList r2;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32, $i33, i34, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, $i47;
        byte b3, $b35;
        android.view.View r3, r16, $r17, r18, r19, r20, r21;
        androidx.leanback.widget.Grid$Location r4, $r15;
        boolean $z0, $z1, $z3;
        androidx.leanback.widget.WindowAlignment $r5, $r7;
        androidx.leanback.widget.WindowAlignment$Axis $r6, $r8;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller $r9;
        androidx.leanback.widget.Grid $r10, $r11, $r12, $r13, $r14;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & 32768;

        if $i7 == 0 goto label01;

        return 1;

     label01:
        $z0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label36;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r9 == null goto label02;

        return 1;

     label02:
        i30 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getMovement(int)>(i0);

        r16 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: android.view.View findFocus()>();

        i31 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int findImmediateChildIndex(android.view.View)>(r16);

        i32 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByIndex(int)>(i31);

        if i32 != -1 goto label03;

        $r17 = null;

        goto label04;

     label03:
        $r17 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>(i32);

     label04:
        r18 = $r17;

        if r18 == null goto label05;

        virtualinvoke r18.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

     label05:
        $r10 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r10 == null goto label06;

        $i16 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        if $i16 != 0 goto label07;

     label06:
        return 1;

     label07:
        if i30 == 3 goto label08;

        if i30 != 2 goto label09;

     label08:
        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i17 = virtualinvoke $r11.<androidx.leanback.widget.Grid: int getNumRows()>();

        if $i17 > 1 goto label09;

        return 1;

     label09:
        $r12 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r12 == null goto label10;

        if r18 == null goto label10;

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $r15 = virtualinvoke $r14.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i32);

        $i33 = $r15.<androidx.leanback.widget.Grid$Location: int mRow>;

        goto label11;

     label10:
        $i33 = -1;

     label11:
        i34 = $i33;

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i30 == 1 goto label12;

        if i30 != 3 goto label13;

     label12:
        $b35 = 1;

        goto label14;

     label13:
        $b35 = -1;

     label14:
        b3 = $b35;

        if b3 <= 0 goto label15;

        $i29 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i36 = $i29 - 1;

        goto label16;

     label15:
        $i36 = 0;

     label16:
        i4 = $i36;

        if i31 != -1 goto label19;

        if b3 <= 0 goto label17;

        $i37 = 0;

        goto label18;

     label17:
        $i28 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i37 = $i28 - 1;

     label18:
        i38 = $i37;

        goto label20;

     label19:
        i38 = i31 + b3;

     label20:
        i39 = i38;

     label21:
        if b3 <= 0 goto label22;

        if i39 > i4 goto label35;

        goto label23;

     label22:
        if i39 < i4 goto label35;

     label23:
        r3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i39);

        $i18 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i18 != 0 goto label34;

        $z3 = virtualinvoke r3.<android.view.View: boolean hasFocusable()>();

        if $z3 != 0 goto label24;

        goto label34;

     label24:
        if r18 != null goto label25;

        virtualinvoke r3.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

        $i27 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i27 <= i2 goto label34;

        goto label35;

     label25:
        i5 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByIndex(int)>(i39);

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        r4 = virtualinvoke $r13.<androidx.leanback.widget.Grid: androidx.leanback.widget.Grid$Location getLocation(int)>(i5);

        if r4 != null goto label26;

        goto label34;

     label26:
        if i30 != 1 goto label27;

        $i25 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i25 != i34 goto label34;

        if i5 <= i32 goto label34;

        virtualinvoke r3.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

        $i26 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i26 <= i2 goto label34;

        goto label35;

     label27:
        if i30 != 0 goto label28;

        $i23 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i23 != i34 goto label34;

        if i5 >= i32 goto label34;

        virtualinvoke r3.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

        $i24 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i24 <= i2 goto label34;

        goto label35;

     label28:
        if i30 != 3 goto label31;

        $i21 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i21 != i34 goto label29;

        goto label34;

     label29:
        $i22 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i22 >= i34 goto label30;

        goto label35;

     label30:
        virtualinvoke r3.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

        goto label34;

     label31:
        if i30 != 2 goto label34;

        $i19 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i19 != i34 goto label32;

        goto label34;

     label32:
        $i20 = r4.<androidx.leanback.widget.Grid$Location: int mRow>;

        if $i20 <= i34 goto label33;

        goto label35;

     label33:
        virtualinvoke r3.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

     label34:
        i39 = i39 + b3;

        goto label21;

     label35:
        goto label46;

     label36:
        i40 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i8 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        if $i8 == 0 goto label43;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i41 = virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r8 = virtualinvoke $r7.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i10 = virtualinvoke $r8.<androidx.leanback.widget.WindowAlignment$Axis: int getClientSize()>();

        i42 = $i10 + i41;

        i43 = 0;

        i44 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label37:
        if i43 >= i44 goto label39;

        r19 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i43);

        $i13 = virtualinvoke r19.<android.view.View: int getVisibility()>();

        if $i13 != 0 goto label38;

        $i14 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r19);

        if $i14 < i41 goto label38;

        $i15 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r19);

        if $i15 > i42 goto label38;

        virtualinvoke r19.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

     label38:
        i43 = i43 + 1;

        goto label37;

     label39:
        $i11 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i11 != i40 goto label42;

        i45 = 0;

        i46 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label40:
        if i45 >= i46 goto label42;

        r20 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i45);

        $i12 = virtualinvoke r20.<android.view.View: int getVisibility()>();

        if $i12 != 0 goto label41;

        virtualinvoke r20.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

     label41:
        i45 = i45 + 1;

        goto label40;

     label42:
        goto label44;

     label43:
        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        r21 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i9);

        if r21 == null goto label44;

        virtualinvoke r21.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r2, i0, i1);

     label44:
        $i47 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i47 == i40 goto label45;

        return 1;

     label45:
        $z1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: boolean isFocusable()>();

        if $z1 == 0 goto label46;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label46:
        return 1;
    }

    boolean hasCreatedLastItem()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;
        androidx.leanback.widget.BaseGridView $r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getItemCount()>();

        if i0 == 0 goto label1;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i1 = i0 - 1;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>($i1);

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean hasCreatedFirstItem()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0;
        androidx.leanback.widget.BaseGridView $r1;
        androidx.recyclerview.widget.RecyclerView$ViewHolder $r2;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getItemCount()>();

        if i0 == 0 goto label1;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r2 = virtualinvoke $r1.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(0);

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean isItemFullyVisible(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        androidx.leanback.widget.BaseGridView $r2, $r5, $r8;
        android.view.View $r3, $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r1 = virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)>(i0);

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i1 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i1 < 0 goto label2;

        $r4 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i2 = virtualinvoke $r4.<android.view.View: int getRight()>();

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i3 = virtualinvoke $r5.<androidx.leanback.widget.BaseGridView: int getWidth()>();

        if $i2 > $i3 goto label2;

        $r6 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i4 = virtualinvoke $r6.<android.view.View: int getTop()>();

        if $i4 < 0 goto label2;

        $r7 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $i5 = virtualinvoke $r7.<android.view.View: int getBottom()>();

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $i6 = virtualinvoke $r8.<androidx.leanback.widget.BaseGridView: int getHeight()>();

        if $i5 > $i6 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    boolean canScrollTo(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.View r1;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label2;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.view.View: boolean hasFocusable()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    boolean gridOnRequestFocusInDescendants(androidx.recyclerview.widget.RecyclerView, int, android.graphics.Rect)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, $i1;
        android.graphics.Rect r2;
        boolean $z0, $z1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusScrollStrategy>;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $z1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean gridOnRequestFocusInDescendantsAligned(int,android.graphics.Rect)>(i0, r2);

        return $z1;

     label2:
        $z0 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean gridOnRequestFocusInDescendantsUnaligned(int,android.graphics.Rect)>(i0, r2);

        return $z0;
    }

    private boolean gridOnRequestFocusInDescendantsAligned(int, android.graphics.Rect)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1;
        android.graphics.Rect r1;
        android.view.View r2;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i1);

        if r2 == null goto label2;

        z0 = virtualinvoke r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, r1);

        if z0 != 0 goto label1;

     label1:
        return z0;

     label2:
        return 0;
    }

    private boolean gridOnRequestFocusInDescendantsUnaligned(int, android.graphics.Rect)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i11, i12;
        android.graphics.Rect r1;
        android.view.View r2;
        androidx.leanback.widget.WindowAlignment $r3, $r5;
        androidx.leanback.widget.WindowAlignment$Axis $r4, $r6;
        boolean $z0;
        byte b10;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        $i4 = i0 & 2;

        if $i4 == 0 goto label1;

        i9 = 0;

        b10 = 1;

        i11 = i1;

        goto label2;

     label1:
        i9 = i1 - 1;

        b10 = -1;

        i11 = -1;

     label2:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r4 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        i2 = virtualinvoke $r4.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i5 = virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: int getClientSize()>();

        i3 = $i5 + i2;

        i12 = i9;

     label3:
        if i12 == i11 goto label5;

        r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i12);

        $i6 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i6 != 0 goto label4;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r2);

        if $i7 < i2 goto label4;

        $i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r2);

        if $i8 > i3 goto label4;

        $z0 = virtualinvoke r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i12 = i12 + b10;

        goto label3;

     label5:
        return 0;
    }

    private int getMovement(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte b11, $b12, $b13, $b14, $b15;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        b11 = 17;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label10;

        lookupswitch(i0)
        {
            case 17: goto label01;
            case 33: goto label07;
            case 66: goto label04;
            case 130: goto label08;
            default: goto label09;
        };

     label01:
        $i9 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i10 = $i9 & 262144;

        if $i10 != 0 goto label02;

        $b12 = 0;

        goto label03;

     label02:
        $b12 = 1;

     label03:
        b11 = $b12;

        goto label09;

     label04:
        $i7 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & 262144;

        if $i8 != 0 goto label05;

        $b13 = 1;

        goto label06;

     label05:
        $b13 = 0;

     label06:
        b11 = $b13;

        goto label09;

     label07:
        b11 = 2;

        goto label09;

     label08:
        b11 = 3;

     label09:
        goto label19;

     label10:
        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 1 goto label19;

        lookupswitch(i0)
        {
            case 17: goto label11;
            case 33: goto label17;
            case 66: goto label14;
            case 130: goto label18;
            default: goto label19;
        };

     label11:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & 524288;

        if $i6 != 0 goto label12;

        $b14 = 2;

        goto label13;

     label12:
        $b14 = 3;

     label13:
        b11 = $b14;

        goto label19;

     label14:
        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 524288;

        if $i4 != 0 goto label15;

        $b15 = 3;

        goto label16;

     label15:
        $b15 = 2;

     label16:
        b11 = $b15;

        goto label19;

     label17:
        b11 = 0;

        goto label19;

     label18:
        b11 = 1;

     label19:
        return b11;
    }

    int getChildDrawingOrder(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i3);

        if r2 != null goto label1;

        return i1;

     label1:
        i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView: int indexOfChild(android.view.View)>(r2);

        if i1 >= i2 goto label2;

        return i1;

     label2:
        $i4 = i0 - 1;

        if i1 >= $i4 goto label3;

        $i5 = i2 + i0;

        $i6 = $i5 - 1;

        $i7 = $i6 - i1;

        return $i7;

     label3:
        return i2;
    }

    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Adapter r1, r2;
        boolean $z0;
        androidx.leanback.widget.FacetProviderAdapter $r3;
        androidx.leanback.widget.ViewsStateBundle $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$Adapter;

        if r1 == null goto label1;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void discardLayoutInfo()>();

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = -1;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r4.<androidx.leanback.widget.ViewsStateBundle: void clear()>();

     label1:
        $z0 = r2 instanceof androidx.leanback.widget.FacetProviderAdapter;

        if $z0 == 0 goto label2;

        $r3 = (androidx.leanback.widget.FacetProviderAdapter) r2;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.FacetProviderAdapter mFacetProviderAdapter> = $r3;

        goto label3;

     label2:
        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.FacetProviderAdapter mFacetProviderAdapter> = null;

     label3:
        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)>(r1, r2);

        return;
    }

    private void discardLayoutInfo()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid> = null;

        r0.<androidx.leanback.widget.GridLayoutManager: int[] mRowSizeSecondary> = null;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & -1025;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i1;

        return;
    }

    void setLayoutEnabled(boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1;
        int $i0, $i1, $i2, $i3, $i4;
        short $s5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == z0 goto label5;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i3 = $i2 & -513;

        if z0 == 0 goto label3;

        $s5 = 512;

        goto label4;

     label3:
        $s5 = 0;

     label4:
        $i4 = $i3 | $s5;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label5:
        return;
    }

    void setChildrenVisibility(int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, i4;
        android.view.View $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility> = i0;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility>;

        if $i2 == -1 goto label2;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.leanback.widget.GridLayoutManager$SavedState r1, $r3;
        int i0, i1, $i2, i3;
        android.view.View r2;
        androidx.leanback.widget.ViewsStateBundle $r4, $r5;
        android.os.Bundle r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        $r3 = new androidx.leanback.widget.GridLayoutManager$SavedState;

        specialinvoke $r3.<androidx.leanback.widget.GridLayoutManager$SavedState: void <init>()>();

        r1 = $r3;

        $i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSelection()>();

        r1.<androidx.leanback.widget.GridLayoutManager$SavedState: int mIndex> = $i2;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        r6 = virtualinvoke $r4.<androidx.leanback.widget.ViewsStateBundle: android.os.Bundle saveAsBundle()>();

        i3 = 0;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label1:
        if i3 >= i0 goto label3;

        r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i3);

        i1 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByView(android.view.View)>(r2);

        if i1 == -1 goto label2;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        r6 = virtualinvoke $r5.<androidx.leanback.widget.ViewsStateBundle: android.os.Bundle saveOnScreenView(android.os.Bundle,android.view.View,int)>(r6, r2, i1);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r1.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates> = r6;

        return r1;
    }

    void onChildRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r1;
        int i0;
        android.view.View $r2;
        androidx.leanback.widget.ViewsStateBundle $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$ViewHolder;

        i0 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAbsoluteAdapterPosition()>();

        if i0 == -1 goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        $r2 = r1.<androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r3.<androidx.leanback.widget.ViewsStateBundle: void saveOffscreenView(android.view.View,int)>($r2, i0);

     label1:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.os.Parcelable r1;
        androidx.leanback.widget.GridLayoutManager$SavedState r2;
        boolean $z0;
        int $i0, $i1, $i2;
        android.os.Bundle $r3;
        androidx.leanback.widget.ViewsStateBundle $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof androidx.leanback.widget.GridLayoutManager$SavedState;

        if $z0 != 0 goto label1;

        return;

     label1:
        r2 = (androidx.leanback.widget.GridLayoutManager$SavedState) r1;

        $i0 = r2.<androidx.leanback.widget.GridLayoutManager$SavedState: int mIndex>;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = $i0;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPositionOffset> = 0;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        $r3 = r2.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates>;

        virtualinvoke $r4.<androidx.leanback.widget.ViewsStateBundle: void loadFromBundle(android.os.Bundle)>($r3);

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 | 256;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i2;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

        return;
    }

    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0, $i1, $i2;
        androidx.leanback.widget.Grid $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i2 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getNumRows()>();

        return $i2;

     label1:
        $i1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        return $i1;
    }

    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0, $i1, $i2;
        androidx.leanback.widget.Grid $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i2 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getNumRows()>();

        return $i2;

     label1:
        $i1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        return $i1;
    }

    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r4;
        android.view.ViewGroup$LayoutParams r5;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r6;
        int i0, i1, i2, $i3, $i4, $i5;
        androidx.leanback.widget.Grid $r7, $r8, $r11;
        boolean $z0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r9, $r10;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r7 == null goto label1;

        $z0 = r5 instanceof androidx.leanback.widget.GridLayoutManager$LayoutParams;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        r6 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) r5;

        i0 = virtualinvoke r6.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int getAbsoluteAdapterPosition()>();

        if i0 < 0 goto label3;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i5 = virtualinvoke $r11.<androidx.leanback.widget.Grid: int getRowIndex(int)>(i0);

        goto label4;

     label3:
        $i5 = -1;

     label4:
        i1 = $i5;

        if i1 >= 0 goto label5;

        return;

     label5:
        $r8 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i3 = virtualinvoke $r8.<androidx.leanback.widget.Grid: int getNumRows()>();

        i2 = i0 / $i3;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i4 != 0 goto label6;

        $r10 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>(i1, 1, i2, 1, 0, 0);

        virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r10);

        goto label7;

     label6:
        $r9 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>(i2, 1, i1, 1, 0, 0);

        virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r9);

     label7:
        return;
    }

    public boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, android.os.Bundle)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, i11, $i14, $i15, $i16, $i17;
        android.os.Bundle r3;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r4, $r5, $r6, $r7;
        short $s12, $s13;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $z3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isScrollEnabled()>();

        if $z3 != 0 goto label01;

        return 1;

     label01:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        i11 = i0;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 262144;

        if $i2 == 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z0 = $z4;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 < 23 goto label11;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 0 goto label09;

        $r6 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT>;

        $i9 = virtualinvoke $r6.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        if i0 != $i9 goto label06;

        if z0 == 0 goto label04;

        $s12 = 4096;

        goto label05;

     label04:
        $s12 = 8192;

     label05:
        i11 = $s12;

        goto label11;

     label06:
        $r7 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT>;

        $i10 = virtualinvoke $r7.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        if i0 != $i10 goto label11;

        if z0 == 0 goto label07;

        $s13 = 8192;

        goto label08;

     label07:
        $s13 = 4096;

     label08:
        i11 = $s13;

        goto label11;

     label09:
        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP>;

        $i7 = virtualinvoke $r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        if i0 != $i7 goto label10;

        i11 = 8192;

        goto label11;

     label10:
        $r5 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN>;

        $i8 = virtualinvoke $r5.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        if i0 != $i8 goto label11;

        i11 = 4096;

     label11:
        $i14 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if $i14 != 0 goto label12;

        if i11 != 8192 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z1 = $z5;

        $i15 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i16 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i17 = $i16 - 1;

        if $i15 != $i17 goto label14;

        if i11 != 4096 goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        z2 = $z6;

        if z1 != 0 goto label16;

        if z2 == 0 goto label17;

     label16:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void sendTypeViewScrolledAccessibilityEvent()>();

        goto label20;

     label17:
        lookupswitch(i11)
        {
            case 4096: goto label19;
            case 8192: goto label18;
            default: goto label20;
        };

     label18:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void processPendingMovement(boolean)>(0);

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int processSelectionMoves(boolean,int)>(0, -1);

        goto label20;

     label19:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void processPendingMovement(boolean)>(1);

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int processSelectionMoves(boolean,int)>(0, 1);

     label20:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return 1;
    }

    private void sendTypeViewScrolledAccessibilityEvent()
    {
        androidx.leanback.widget.GridLayoutManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        androidx.leanback.widget.BaseGridView $r2, $r3, $r4;
        android.view.View r5;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(4096);

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r5 = (android.view.View) $r3;

        virtualinvoke $r4.<androidx.leanback.widget.BaseGridView: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r5, r1);

        return;
    }

    int processSelectionMoves(boolean, int)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        boolean z0, $z1, $z3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, i12, i13, $i14;
        android.view.View r1, r5;
        androidx.leanback.widget.Grid $r2, $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        i9 := @parameter1: int;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        if $r2 != null goto label01;

        return i9;

     label01:
        i10 = r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i10 == -1 goto label02;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $i11 = virtualinvoke $r4.<androidx.leanback.widget.Grid: int getRowIndex(int)>(i10);

        goto label03;

     label02:
        $i11 = -1;

     label03:
        i12 = $i11;

        r5 = null;

        i13 = 0;

        i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getChildCount()>();

     label04:
        if i13 >= i0 goto label13;

        if i9 == 0 goto label13;

        if i9 <= 0 goto label05;

        $i14 = i13;

        goto label06;

     label05:
        $i8 = i0 - 1;

        $i14 = $i8 - i13;

     label06:
        i1 = $i14;

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(i1);

        $z3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean canScrollTo(android.view.View)>(r1);

        if $z3 != 0 goto label07;

        goto label12;

     label07:
        i2 = specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getAdapterPositionByIndex(int)>(i1);

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        i3 = virtualinvoke $r3.<androidx.leanback.widget.Grid: int getRowIndex(int)>(i2);

        if i12 != -1 goto label08;

        i10 = i2;

        r5 = r1;

        i12 = i3;

        goto label12;

     label08:
        if i3 != i12 goto label12;

        if i9 <= 0 goto label09;

        if i2 > i10 goto label10;

     label09:
        if i9 >= 0 goto label12;

        if i2 >= i10 goto label12;

     label10:
        i10 = i2;

        r5 = r1;

        if i9 <= 0 goto label11;

        i9 = i9 + -1;

        goto label12;

     label11:
        i9 = i9 + 1;

     label12:
        i13 = i13 + 1;

        goto label04;

     label13:
        if r5 == null goto label16;

        if z0 == 0 goto label15;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean hasFocus()>();

        if $z1 == 0 goto label14;

        $i4 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i5 = $i4 | 32;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i5;

        virtualinvoke r5.<android.view.View: boolean requestFocus()>();

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & -33;

        r0.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i7;

     label14:
        r0.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i10;

        r0.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        goto label16;

     label15:
        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean)>(r5, 1);

     label16:
        return i9;
    }

    private void addA11yActionMovingBackward(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        boolean z0;
        int $i0, $i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r2, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label4;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label3;

        if z0 == 0 goto label1;

        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT>;

        goto label2;

     label1:
        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT>;

     label2:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r4);

        goto label5;

     label3:
        $r2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r2);

        goto label5;

     label4:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(8192);

     label5:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

        return;
    }

    private void addA11yActionMovingForward(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, boolean)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        boolean z0;
        int $i0, $i1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat $r2, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label4;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i1 != 0 goto label3;

        if z0 == 0 goto label1;

        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT>;

        goto label2;

     label1:
        $r4 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT>;

     label2:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r4);

        goto label5;

     label3:
        $r2 = <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>($r2);

        goto label5;

     label4:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(4096);

     label5:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.leanback.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void saveContext(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i2 = $i1 & 262144;

        if $i2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 2048;

        if $i4 == 0 goto label3;

        if i0 <= 1 goto label4;

        $z2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isItemFullyVisible(int)>(0);

        if $z2 != 0 goto label4;

     label3:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void addA11yActionMovingBackward(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,boolean)>(r3, z0);

     label4:
        $i6 = r0.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & 4096;

        if $i7 == 0 goto label5;

        if i0 <= 1 goto label6;

        $i5 = i0 - 1;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isItemFullyVisible(int)>($i5);

        if $z1 != 0 goto label6;

     label5:
        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void addA11yActionMovingForward(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,boolean)>(r3, z0);

     label6:
        $i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i9 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $z4 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        $i10 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        r4 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>($i8, $i9, $z4, $i10);

        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>(r4);

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager: void leaveContext()>();

        return;
    }

    static void <clinit>()
    {
        android.graphics.Rect $r0;
        int[] $r1;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

        <androidx.leanback.widget.GridLayoutManager: android.graphics.Rect sTempRect> = $r0;

        $r1 = newarray (int)[2];

        <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts> = $r1;

        return;
    }

androidx.leanback.widget.GridLayoutManager$1
<androidx.leanback.widget.GridLayoutManager$1: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager)
    {
        androidx.leanback.widget.GridLayoutManager$1 r0;
        androidx.leanback.widget.GridLayoutManager r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$1;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager$1: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.leanback.widget.GridLayoutManager$1 r0;
        androidx.leanback.widget.GridLayoutManager $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$1;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$1: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r1.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

        return;
    }

androidx.leanback.widget.GridLayoutManager$2
<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        androidx.leanback.widget.GridLayoutManager r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getMinIndex()
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        androidx.leanback.widget.GridLayoutManager $r1;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i0 = $r1.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        return $i0;
    }

    public int getCount()
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        androidx.leanback.widget.GridLayoutManager $r1, $r3;
        androidx.recyclerview.widget.RecyclerView$State $r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = $r1.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $i0 = virtualinvoke $r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i1 = $r3.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int createItem(int, boolean, java.lang.Object[], boolean)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        boolean z0, z1, $z2, $z3;
        java.lang.Object[] r1;
        android.view.View r2, $r13;
        androidx.leanback.widget.GridLayoutManager$LayoutParams r3;
        androidx.leanback.widget.GridLayoutManager $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller $r11, $r28, $r31;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Object[];

        z1 := @parameter3: boolean;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i2 = $r4.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i3 = i0 - $i2;

        r2 = virtualinvoke $r5.<androidx.leanback.widget.GridLayoutManager: android.view.View getViewForPosition(int)>($i3);

        $r6 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.leanback.widget.GridLayoutManager$LayoutParams) $r6;

        $z2 = virtualinvoke r3.<androidx.leanback.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z2 != 0 goto label10;

        if z1 == 0 goto label02;

        if z0 == 0 goto label01;

        $r35 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r35.<androidx.leanback.widget.GridLayoutManager: void addDisappearingView(android.view.View)>(r2);

        goto label04;

     label01:
        $r34 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r34.<androidx.leanback.widget.GridLayoutManager: void addDisappearingView(android.view.View,int)>(r2, 0);

        goto label04;

     label02:
        if z0 == 0 goto label03;

        $r33 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r33.<androidx.leanback.widget.GridLayoutManager: void addView(android.view.View)>(r2);

        goto label04;

     label03:
        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r9.<androidx.leanback.widget.GridLayoutManager: void addView(android.view.View,int)>(r2, 0);

     label04:
        $r36 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i18 = $r36.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility>;

        if $i18 == -1 goto label05;

        $r32 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i17 = $r32.<androidx.leanback.widget.GridLayoutManager: int mChildVisibility>;

        virtualinvoke r2.<android.view.View: void setVisibility(int)>($i17);

     label05:
        $r10 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r11 = $r10.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r11 == null goto label06;

        $r30 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r31 = $r30.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        virtualinvoke $r31.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void consumePendingMovesBeforeLayout()>();

     label06:
        $r12 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r13 = virtualinvoke r2.<android.view.View: android.view.View findFocus()>();

        i1 = virtualinvoke $r12.<androidx.leanback.widget.GridLayoutManager: int getSubPositionByView(android.view.View,android.view.View)>(r2, $r13);

        $r14 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i4 = $r14.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i5 = $i4 & 3;

        if $i5 == 1 goto label07;

        $r25 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i15 = $r25.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i0 != $i15 goto label09;

        $r26 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i16 = $r26.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        if i1 != $i16 goto label09;

        $r27 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r28 = $r27.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r28 != null goto label09;

        $r29 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r29.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

        goto label09;

     label07:
        $r15 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i6 = $r15.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i7 = $i6 & 4;

        if $i7 != 0 goto label09;

        $r16 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i8 = $r16.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i9 = $i8 & 16;

        if $i9 != 0 goto label08;

        $r22 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i13 = $r22.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i0 != $i13 goto label08;

        $r23 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i14 = $r23.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition>;

        if i1 != $i14 goto label08;

        $r24 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r24.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

        goto label09;

     label08:
        $r37 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i19 = $r37.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i20 = $i19 & 16;

        if $i20 == 0 goto label09;

        $r17 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i10 = $r17.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        if i0 < $i10 goto label09;

        $z3 = virtualinvoke r2.<android.view.View: boolean hasFocusable()>();

        if $z3 == 0 goto label09;

        $r18 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r18.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i0;

        $r19 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r19.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = i1;

        $r20 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i11 = $r20.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i12 = $i11 & -17;

        $r20.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i12;

        $r21 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r21.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

     label09:
        $r38 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r38.<androidx.leanback.widget.GridLayoutManager: void measureChild(android.view.View)>(r2);

     label10:
        r1[0] = r2;

        $r39 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i21 = $r39.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i21 != 0 goto label11;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i22 = virtualinvoke $r8.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredWidthWithMargin(android.view.View)>(r2);

        goto label12;

     label11:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i22 = virtualinvoke $r7.<androidx.leanback.widget.GridLayoutManager: int getDecoratedMeasuredHeightWithMargin(android.view.View)>(r2);

     label12:
        return $i22;
    }

    public void addItem(java.lang.Object, int, int, int, int)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        java.lang.Object r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, $i14, i15, i16;
        android.view.View r2;
        boolean z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.RecyclerView$ViewHolder r3;
        androidx.leanback.widget.GridLayoutManager $r4, $r6, $r9, $r12, $r13, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r30, $r32, $r34, $r35, $r38, $r40;
        androidx.leanback.widget.Grid $r5, $r39;
        androidx.leanback.widget.WindowAlignment $r7, $r10, $r14, $r36;
        androidx.leanback.widget.WindowAlignment$Axis $r8, $r11, $r15, $r37;
        androidx.leanback.widget.ViewsStateBundle $r18;
        androidx.recyclerview.widget.RecyclerView$State $r21;
        androidx.leanback.widget.BaseGridView $r24, $r28;
        androidx.leanback.widget.OnChildLaidOutListener $r27, $r41;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller $r31, $r33;
        long $l17;
        android.view.ViewGroup r42;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i13 := @parameter4: int;

        r2 = (android.view.View) r1;

        if i13 == -2147483648 goto label01;

        if i13 != 2147483647 goto label04;

     label01:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r5 = $r4.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z1 = virtualinvoke $r5.<androidx.leanback.widget.Grid: boolean isReversedFlow()>();

        if $z1 != 0 goto label02;

        $r35 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r36 = $r35.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r37 = virtualinvoke $r36.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i14 = virtualinvoke $r37.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        goto label03;

     label02:
        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r7 = $r6.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r8 = virtualinvoke $r7.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i4 = virtualinvoke $r8.<androidx.leanback.widget.WindowAlignment$Axis: int getSize()>();

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r10 = $r9.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r11 = virtualinvoke $r10.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i5 = virtualinvoke $r11.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMax()>();

        $i14 = $i4 - $i5;

     label03:
        i13 = $i14;

     label04:
        $r38 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r39 = $r38.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.Grid mGrid>;

        $z3 = virtualinvoke $r39.<androidx.leanback.widget.Grid: boolean isReversedFlow()>();

        if $z3 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z0 = $z4;

        if z0 == 0 goto label07;

        i15 = i13;

        i16 = i13 + i1;

        goto label08;

     label07:
        i15 = i13 - i1;

        i16 = i13;

     label08:
        $r12 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i6 = virtualinvoke $r12.<androidx.leanback.widget.GridLayoutManager: int getRowStartSecondary(int)>(i2);

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r14 = $r13.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r15 = virtualinvoke $r14.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis secondAxis()>();

        $i7 = virtualinvoke $r15.<androidx.leanback.widget.WindowAlignment$Axis: int getPaddingMin()>();

        $i9 = $i6 + $i7;

        $r16 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i8 = $r16.<androidx.leanback.widget.GridLayoutManager: int mScrollOffsetSecondary>;

        i3 = $i9 - $i8;

        $r17 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r18 = $r17.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.ViewsStateBundle mChildrenStates>;

        virtualinvoke $r18.<androidx.leanback.widget.ViewsStateBundle: void loadView(android.view.View,int)>(r2, i0);

        $r19 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r19.<androidx.leanback.widget.GridLayoutManager: void layoutChild(int,android.view.View,int,int,int)>(i2, r2, i15, i16, i3);

        $r20 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r21 = $r20.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$State mState>;

        $z2 = virtualinvoke $r21.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z2 != 0 goto label09;

        $r34 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r34.<androidx.leanback.widget.GridLayoutManager: void updateScrollLimits()>();

     label09:
        $r22 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i10 = $r22.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i11 = $i10 & 3;

        if $i11 == 1 goto label10;

        $r30 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r31 = $r30.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r31 == null goto label10;

        $r32 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r33 = $r32.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        virtualinvoke $r33.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void consumePendingMovesAfterLayout()>();

     label10:
        $r40 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r41 = $r40.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildLaidOutListener mChildLaidOutListener>;

        if $r41 == null goto label13;

        $r23 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r24 = $r23.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        r3 = virtualinvoke $r24.<androidx.leanback.widget.BaseGridView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)>(r2);

        $r25 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r27 = $r25.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.OnChildLaidOutListener mChildLaidOutListener>;

        $r26 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r28 = $r26.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        if r3 != null goto label11;

        $l17 = -1L;

        goto label12;

     label11:
        $l17 = virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()>();

     label12:
        r42 = (android.view.ViewGroup) $r28;

        interfaceinvoke $r27.<androidx.leanback.widget.OnChildLaidOutListener: void onChildLaidOut(android.view.ViewGroup,android.view.View,int,long)>(r42, r2, i0, $l17);

     label13:
        return;
    }

    public void removeItem(int)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager $r2, $r3, $r4, $r5, $r7, $r8, $r10;
        androidx.recyclerview.widget.RecyclerView$Recycler $r6, $r9;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i1 = $r2.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i2 = i0 - $i1;

        r1 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i2);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = $r4.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 3;

        if $i4 != 1 goto label1;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r9 = $r8.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r10.<androidx.leanback.widget.GridLayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)>(r1, $r9);

        goto label2;

     label1:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r6 = $r5.<androidx.leanback.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler>;

        virtualinvoke $r7.<androidx.leanback.widget.GridLayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)>(r1, $r6);

     label2:
        return;
    }

    public int getEdge(int)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View r1;
        androidx.leanback.widget.GridLayoutManager $r2, $r3, $r4, $r5, $r6;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i1 = $r2.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i2 = i0 - $i1;

        r1 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i2);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = $r4.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 262144;

        if $i4 == 0 goto label1;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i5 = virtualinvoke $r6.<androidx.leanback.widget.GridLayoutManager: int getViewMax(android.view.View)>(r1);

        goto label2;

     label1:
        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i5 = virtualinvoke $r5.<androidx.leanback.widget.GridLayoutManager: int getViewMin(android.view.View)>(r1);

     label2:
        return $i5;
    }

    public int getSize(int)
    {
        androidx.leanback.widget.GridLayoutManager$2 r0;
        int i0, $i1, $i2, $i3;
        androidx.leanback.widget.GridLayoutManager $r1, $r2, $r3;
        android.view.View $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$2;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$2: androidx.leanback.widget.GridLayoutManager this$0>;

        $i1 = $r1.<androidx.leanback.widget.GridLayoutManager: int mPositionDeltaInPreLayout>;

        $i2 = i0 - $i1;

        $r4 = virtualinvoke $r2.<androidx.leanback.widget.GridLayoutManager: android.view.View findViewByPosition(int)>($i2);

        $i3 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager: int getViewPrimarySize(android.view.View)>($r4);

        return $i3;
    }

androidx.leanback.widget.GridLayoutManager$3
<androidx.leanback.widget.GridLayoutManager$3: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager)
    {
        androidx.leanback.widget.GridLayoutManager$3 r0;
        androidx.leanback.widget.GridLayoutManager r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$3;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager$3: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$OnScrollListener: void <init>()>();

        return;
    }

    public void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView, int)
    {
        androidx.leanback.widget.GridLayoutManager$3 r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0;
        androidx.leanback.widget.GridLayoutManager $r2, $r4;
        androidx.leanback.widget.BaseGridView $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$3;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$3: androidx.leanback.widget.GridLayoutManager this$0>;

        $r3 = $r2.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        virtualinvoke $r3.<androidx.leanback.widget.BaseGridView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)>(r0);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$3: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r4.<androidx.leanback.widget.GridLayoutManager: void requestLayout()>();

     label1:
        return;
    }

androidx.leanback.widget.GridLayoutManager$4
<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager)
    {
        androidx.leanback.widget.GridLayoutManager$4 r0;
        androidx.leanback.widget.GridLayoutManager r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$4;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: void <init>(androidx.leanback.widget.GridLayoutManager)>(r1);

        return;
    }

    public android.graphics.PointF computeScrollVectorForPosition(int)
    {
        androidx.leanback.widget.GridLayoutManager$4 r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        boolean z0, $z1;
        byte b2, $b7;
        androidx.leanback.widget.GridLayoutManager $r1, $r2, $r4, $r5;
        android.view.View $r3;
        android.graphics.PointF $r6, $r7;
        float $f0, $f1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$4;

        i0 := @parameter0: int;

        $i3 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$4: int getChildCount()>();

        if $i3 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0>;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0>;

        $r3 = virtualinvoke $r1.<androidx.leanback.widget.GridLayoutManager: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r2.<androidx.leanback.widget.GridLayoutManager: int getPosition(android.view.View)>($r3);

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0>;

        $i4 = $r4.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i5 = $i4 & 262144;

        if $i5 == 0 goto label3;

        if i0 <= i1 goto label2;

        $z1 = 1;

        goto label5;

     label2:
        $z1 = 0;

        goto label5;

     label3:
        if i0 >= i1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;

        if z0 == 0 goto label6;

        $b7 = -1;

        goto label7;

     label6:
        $b7 = 1;

     label7:
        b2 = $b7;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$4: androidx.leanback.widget.GridLayoutManager this$0>;

        $i6 = $r5.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 0 goto label8;

        $r7 = new android.graphics.PointF;

        $f1 = (float) b2;

        specialinvoke $r7.<android.graphics.PointF: void <init>(float,float)>($f1, 0.0F);

        return $r7;

     label8:
        $r6 = new android.graphics.PointF;

        $f0 = (float) b2;

        specialinvoke $r6.<android.graphics.PointF: void <init>(float,float)>(0.0F, $f0);

        return $r6;
    }

androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller
<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: boolean mSkipOnStopInternal>
<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager)
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0;
        androidx.leanback.widget.GridLayoutManager r1;
        androidx.leanback.widget.BaseGridView $r2;
        android.content.Context $r3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        $r2 = r1.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.BaseGridView mBaseGridView>;

        $r3 = virtualinvoke $r2.<androidx.leanback.widget.BaseGridView: android.content.Context getContext()>();

        specialinvoke r0.<androidx.recyclerview.widget.LinearSmoothScroller: void <init>(android.content.Context)>($r3);

        return;
    }

    protected void onStop()
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0, $r2;
        boolean $z0;
        androidx.leanback.widget.GridLayoutManager $r1, $r3, $r5, $r6;
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        specialinvoke r0.<androidx.recyclerview.widget.LinearSmoothScroller: void onStop()>();

        $z0 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: boolean mSkipOnStopInternal>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: void onStopInternal()>();

     label1:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = $r1.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller>;

        if $r2 != r0 goto label2;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r6.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller mCurrentSmoothScroller> = null;

     label2:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r4 = $r3.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller>;

        if $r4 != r0 goto label3;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r5.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller mPendingMoveSmoothScroller> = null;

     label3:
        return;
    }

    protected void onStopInternal()
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        androidx.leanback.widget.GridLayoutManager $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int getTargetPosition()>();

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: android.view.View findViewByPosition(int)>($i0);

        if r1 != null goto label2;

        $i8 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int getTargetPosition()>();

        if $i8 < 0 goto label1;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i9 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int getTargetPosition()>();

        virtualinvoke $r9.<androidx.leanback.widget.GridLayoutManager: void scrollToSelection(int,int,boolean,int)>($i9, 0, 0, 0);

     label1:
        return;

     label2:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i1 = $r2.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $i2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int getTargetPosition()>();

        if $i1 == $i2 goto label3;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i7 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int getTargetPosition()>();

        $r8.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = $i7;

     label3:
        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $z0 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager: boolean hasFocus()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = $r6.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 | 32;

        $r6.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i4;

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i5 = $r7.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 & -33;

        $r7.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i6;

     label4:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r4.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelected()>();

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r5.<androidx.leanback.widget.GridLayoutManager: void dispatchChildSelectedAndPositioned()>();

        return;
    }

    protected float calculateSpeedPerPixel(android.util.DisplayMetrics)
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0;
        android.util.DisplayMetrics r1;
        float $f0, $f1, $f2;
        androidx.leanback.widget.GridLayoutManager $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        r1 := @parameter0: android.util.DisplayMetrics;

        $f0 = specialinvoke r0.<androidx.recyclerview.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)>(r1);

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $f1 = $r2.<androidx.leanback.widget.GridLayoutManager: float mSmoothScrollSpeedFactor>;

        $f2 = $f0 * $f1;

        return $f2;
    }

    protected int calculateTimeForScrolling(int)
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0;
        int i0, $i1, $i2, i4;
        float f0, $f1, $f2, $f3, $f4;
        androidx.leanback.widget.GridLayoutManager $r1, $r4;
        androidx.leanback.widget.WindowAlignment $r2, $r5;
        androidx.leanback.widget.WindowAlignment$Axis $r3, $r6;
        byte $b3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        i0 := @parameter0: int;

        i4 = specialinvoke r0.<androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)>(i0);

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r2 = $r1.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r3 = virtualinvoke $r2.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i1 = virtualinvoke $r3.<androidx.leanback.widget.WindowAlignment$Axis: int getSize()>();

        if $i1 <= 0 goto label1;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r5 = $r4.<androidx.leanback.widget.GridLayoutManager: androidx.leanback.widget.WindowAlignment mWindowAlignment>;

        $r6 = virtualinvoke $r5.<androidx.leanback.widget.WindowAlignment: androidx.leanback.widget.WindowAlignment$Axis mainAxis()>();

        $i2 = virtualinvoke $r6.<androidx.leanback.widget.WindowAlignment$Axis: int getSize()>();

        $f1 = (float) $i2;

        $f3 = 30.0F / $f1;

        $f2 = (float) i0;

        f0 = $f3 * $f2;

        $f4 = (float) i4;

        $b3 = $f4 cmpg f0;

        if $b3 >= 0 goto label1;

        i4 = (int) f0;

     label1:
        return i4;
    }

    protected void onTargetFound(android.view.View, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    {
        androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller r0;
        android.view.View r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action r3;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        int[] $r4, $r7, $r8, $r10, $r11;
        androidx.leanback.widget.GridLayoutManager $r5, $r6;
        boolean $z0;
        double $d0, $d1;
        android.view.animation.DecelerateInterpolator $r9;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r4 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        $z0 = virtualinvoke $r5.<androidx.leanback.widget.GridLayoutManager: boolean getScrollPosition(android.view.View,android.view.View,int[])>(r1, null, $r4);

        if $z0 == 0 goto label3;

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i2 = $r6.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 0 goto label1;

        $r10 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i6 = $r10[0];

        $r11 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i7 = $r11[1];

        goto label2;

     label1:
        $r7 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i6 = $r7[1];

        $r8 = <androidx.leanback.widget.GridLayoutManager: int[] sTwoInts>;

        i7 = $r8[0];

     label2:
        $i4 = i6 * i6;

        $i3 = i7 * i7;

        $i5 = $i4 + $i3;

        $d0 = (double) $i5;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i0 = (int) $d1;

        i1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: int calculateTimeForDeceleration(int)>(i0);

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke r3.<androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>(i6, i7, i1, $r9);

     label3:
        return;
    }

androidx.leanback.widget.GridLayoutManager$LayoutParams
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignX>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignY>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>
<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet mAlignmentFacet>
    void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    void <init>(int, int)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int i0, i1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(int,int)>(i0, i1);

        return;
    }

    void <init>(android.view.ViewGroup$MarginLayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.ViewGroup$MarginLayoutParams r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        return;
    }

    void <init>(android.view.ViewGroup$LayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return;
    }

    void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1);

        return;
    }

    void <init>(androidx.leanback.widget.GridLayoutManager$LayoutParams)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0, r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1);

        return;
    }

    int getAlignX()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignX>;

        return $i0;
    }

    int getAlignY()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignY>;

        return $i0;
    }

    int getOpticalLeft(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    int getOpticalTop(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>;

        $i2 = $i0 + $i1;

        return $i2;
    }

    int getOpticalRight(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    int getOpticalBottom(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    int getOpticalWidth(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>;

        $i3 = $i0 - $i1;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    int getOpticalHeight(android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>;

        $i3 = $i0 - $i1;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    int getOpticalLeftInset()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset>;

        return $i0;
    }

    int getOpticalRightInset()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset>;

        return $i0;
    }

    int getOpticalTopInset()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset>;

        return $i0;
    }

    int getOpticalBottomInset()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset>;

        return $i0;
    }

    void setAlignX(int)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignX> = i0;

        return;
    }

    void setAlignY(int)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int i0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignY> = i0;

        return;
    }

    void setItemAlignmentFacet(androidx.leanback.widget.ItemAlignmentFacet)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        androidx.leanback.widget.ItemAlignmentFacet r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: androidx.leanback.widget.ItemAlignmentFacet;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet mAlignmentFacet> = r1;

        return;
    }

    androidx.leanback.widget.ItemAlignmentFacet getItemAlignmentFacet()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        androidx.leanback.widget.ItemAlignmentFacet $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet mAlignmentFacet>;

        return $r1;
    }

    void calculateItemAlignments(int, android.view.View)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        android.view.View r1;
        androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] r2;
        androidx.leanback.widget.ItemAlignmentFacet $r3;
        int[] $r4, $r5, $r6, $r7, $r9, $r10;
        androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef $r8;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: androidx.leanback.widget.ItemAlignmentFacet mAlignmentFacet>;

        r2 = virtualinvoke $r3.<androidx.leanback.widget.ItemAlignmentFacet: androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef[] getAlignmentDefs()>();

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        if $r4 == null goto label1;

        $r10 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        $i6 = lengthof $r10;

        $i5 = lengthof r2;

        if $i6 == $i5 goto label2;

     label1:
        $i1 = lengthof r2;

        $r5 = newarray (int)[$i1];

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple> = $r5;

     label2:
        i7 = 0;

     label3:
        $i8 = lengthof r2;

        if i7 >= $i8 goto label4;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        $r8 = r2[i7];

        $i4 = staticinvoke <androidx.leanback.widget.ItemAlignmentFacetHelper: int getAlignmentPosition(android.view.View,androidx.leanback.widget.ItemAlignmentFacet$ItemAlignmentDef,int)>(r1, $r8, i0);

        $r9[i7] = $i4;

        i7 = i7 + 1;

        goto label3;

     label4:
        if i0 != 0 goto label5;

        $r7 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        $i3 = $r7[0];

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignX> = $i3;

        goto label6;

     label5:
        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        $i2 = $r6[0];

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mAlignY> = $i2;

     label6:
        return;
    }

    int[] getAlignMultiple()
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int[] $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int[] mAlignMultiple>;

        return $r1;
    }

    void setOpticalInsets(int, int, int, int)
    {
        androidx.leanback.widget.GridLayoutManager$LayoutParams r0;
        int i0, i1, i2, i3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mLeftInset> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mTopInset> = i1;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mRightInset> = i2;

        r0.<androidx.leanback.widget.GridLayoutManager$LayoutParams: int mBottomInset> = i3;

        return;
    }

androidx.leanback.widget.GridLayoutManager$OnLayoutCompleteListener
    public void <init>()
    {
        androidx.leanback.widget.GridLayoutManager$OnLayoutCompleteListener r0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$OnLayoutCompleteListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.leanback.widget.GridLayoutManager$OnLayoutCompleteListener r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$OnLayoutCompleteListener;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        return;
    }

androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller
<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int TARGET_UNDEFINED>
<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: boolean mStaggeredGrid>
<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>
<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>
    void <init>(androidx.leanback.widget.GridLayoutManager, int, boolean)
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        androidx.leanback.widget.GridLayoutManager r1;
        int i0;
        boolean z0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        r1 := @parameter0: androidx.leanback.widget.GridLayoutManager;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0> = r1;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: void <init>(androidx.leanback.widget.GridLayoutManager)>(r1);

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = i0;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: boolean mStaggeredGrid> = z0;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void setTargetPosition(int)>(-2);

        return;
    }

    void increasePendingMoves()
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        androidx.leanback.widget.GridLayoutManager $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i0 = $r1.<androidx.leanback.widget.GridLayoutManager: int mMaxPendingMoves>;

        if $i1 >= $i0 goto label1;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $i3 = $i2 + 1;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = $i3;

     label1:
        return;
    }

    void decreasePendingMoves()
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        androidx.leanback.widget.GridLayoutManager $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i0 = $r1.<androidx.leanback.widget.GridLayoutManager: int mMaxPendingMoves>;

        $i1 = neg $i0;

        if $i2 <= $i1 goto label1;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $i4 = $i3 - 1;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = $i4;

     label1:
        return;
    }

    void consumePendingMovesBeforeLayout()
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, $i22;
        android.view.View r1, r14;
        boolean $z0, $z1, $z3;
        androidx.leanback.widget.GridLayoutManager $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        $z0 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: boolean mStaggeredGrid>;

        if $z0 != 0 goto label01;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i1 != 0 goto label02;

     label01:
        return;

     label02:
        r14 = null;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i2 <= 0 goto label03;

        $r12 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i17 = $r12.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $r13 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i16 = $r13.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i18 = $i17 + $i16;

        goto label04;

     label03:
        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i4 = $r2.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = $r3.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i18 = $i4 - $i3;

     label04:
        i0 = $i18;

        i19 = i0;

     label05:
        $i20 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i20 == 0 goto label12;

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: android.view.View findViewByPosition(int)>(i19);

        if r1 != null goto label06;

        goto label12;

     label06:
        $r7 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $z3 = virtualinvoke $r7.<androidx.leanback.widget.GridLayoutManager: boolean canScrollTo(android.view.View)>(r1);

        if $z3 != 0 goto label07;

        goto label09;

     label07:
        r14 = r1;

        $r8 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r8.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition> = i19;

        $r9 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $r9.<androidx.leanback.widget.GridLayoutManager: int mSubFocusPosition> = 0;

        $i9 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i9 <= 0 goto label08;

        $i14 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $i15 = $i14 - 1;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = $i15;

        goto label09;

     label08:
        $i10 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $i11 = $i10 + 1;

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = $i11;

     label09:
        $i21 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i21 <= 0 goto label10;

        $r11 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i13 = $r11.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i22 = i19 + $i13;

        goto label11;

     label10:
        $r10 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i12 = $r10.<androidx.leanback.widget.GridLayoutManager: int mNumRows>;

        $i22 = i19 - $i12;

     label11:
        i19 = $i22;

        goto label05;

     label12:
        if r14 == null goto label13;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $z1 = virtualinvoke $r4.<androidx.leanback.widget.GridLayoutManager: boolean hasFocus()>();

        if $z1 == 0 goto label13;

        $r5 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i5 = $r5.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i6 = $i5 | 32;

        $r5.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i6;

        virtualinvoke r14.<android.view.View: boolean requestFocus()>();

        $r6 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i7 = $r6.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i8 = $i7 & -33;

        $r6.<androidx.leanback.widget.GridLayoutManager: int mFlag> = $i8;

     label13:
        return;
    }

    void consumePendingMovesAfterLayout()
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.leanback.widget.GridLayoutManager $r1, $r2, $r3, $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        $z0 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: boolean mStaggeredGrid>;

        if $z0 == 0 goto label1;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i2 == 0 goto label1;

        $r3 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        $i4 = virtualinvoke $r3.<androidx.leanback.widget.GridLayoutManager: int processSelectionMoves(boolean,int)>(1, $i3);

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = $i4;

     label1:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i5 == 0 goto label3;

        $i0 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i0 <= 0 goto label2;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $z2 = virtualinvoke $r2.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedLastItem()>();

        if $z2 != 0 goto label3;

     label2:
        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i1 >= 0 goto label4;

        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $z1 = virtualinvoke $r1.<androidx.leanback.widget.GridLayoutManager: boolean hasCreatedFirstItem()>();

        if $z1 == 0 goto label4;

     label3:
        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i6 = $r4.<androidx.leanback.widget.GridLayoutManager: int mFocusPosition>;

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void setTargetPosition(int)>($i6);

        virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: void stop()>();

     label4:
        return;
    }

    public android.graphics.PointF computeScrollVectorForPosition(int)
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8;
        byte b1, $b7;
        androidx.leanback.widget.GridLayoutManager $r1, $r4;
        android.graphics.PointF $r2, $r3;
        float $f0, $f1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i2 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i3 = $r1.<androidx.leanback.widget.GridLayoutManager: int mFlag>;

        $i4 = $i3 & 262144;

        if $i4 == 0 goto label2;

        $i6 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i6 <= 0 goto label4;

        goto label3;

     label2:
        $i5 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves>;

        if $i5 >= 0 goto label4;

     label3:
        $b7 = -1;

        goto label5;

     label4:
        $b7 = 1;

     label5:
        b1 = $b7;

        $r4 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        $i8 = $r4.<androidx.leanback.widget.GridLayoutManager: int mOrientation>;

        if $i8 != 0 goto label6;

        $r3 = new android.graphics.PointF;

        $f1 = (float) b1;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>($f1, 0.0F);

        return $r3;

     label6:
        $r2 = new android.graphics.PointF;

        $f0 = (float) b1;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>(0.0F, $f0);

        return $r2;
    }

    protected void onStopInternal()
    {
        androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller r0;
        android.view.View r1;
        int $i0;
        androidx.leanback.widget.GridLayoutManager $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller;

        specialinvoke r0.<androidx.leanback.widget.GridLayoutManager$GridLinearSmoothScroller: void onStopInternal()>();

        r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int mPendingMoves> = 0;

        $i0 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: int getTargetPosition()>();

        r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: android.view.View findViewByPosition(int)>($i0);

        if r1 == null goto label1;

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$PendingMoveSmoothScroller: androidx.leanback.widget.GridLayoutManager this$0>;

        virtualinvoke $r2.<androidx.leanback.widget.GridLayoutManager: void scrollToView(android.view.View,boolean)>(r1, 1);

     label1:
        return;
    }

androidx.leanback.widget.GridLayoutManager$SavedState$1
    void <init>()
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 r0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.leanback.widget.GridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.leanback.widget.GridLayoutManager$SavedState $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.leanback.widget.GridLayoutManager$SavedState;

        specialinvoke $r2.<androidx.leanback.widget.GridLayoutManager$SavedState: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.leanback.widget.GridLayoutManager$SavedState[] newArray(int)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 r0;
        int i0;
        androidx.leanback.widget.GridLayoutManager$SavedState[] $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.leanback.widget.GridLayoutManager$SavedState)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 r0;
        int i0;
        androidx.leanback.widget.GridLayoutManager$SavedState[] $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$SavedState$1: androidx.leanback.widget.GridLayoutManager$SavedState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 r0;
        android.os.Parcel r1;
        androidx.leanback.widget.GridLayoutManager$SavedState $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.GridLayoutManager$SavedState$1: androidx.leanback.widget.GridLayoutManager$SavedState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

androidx.leanback.widget.GridLayoutManager$SavedState
<androidx.leanback.widget.GridLayoutManager$SavedState: int mIndex>
<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates>
<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR>
    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState r0;
        android.os.Parcel r1;
        int i0, $i1;
        android.os.Bundle $r2;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.leanback.widget.GridLayoutManager$SavedState: int mIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r2);

        return;
    }

    public int describeContents()
    {
        androidx.leanback.widget.GridLayoutManager$SavedState r0;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState;

        return 0;
    }

    void <init>(android.os.Parcel)
    {
        androidx.leanback.widget.GridLayoutManager$SavedState r0;
        android.os.Parcel r1;
        android.os.Bundle $r2, $r5;
        int $i0;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.leanback.widget.GridLayoutManager$SavedState: int mIndex> = $i0;

        $r3 = class "Landroidx/leanback/widget/GridLayoutManager;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>($r4);

        r0.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates> = $r5;

        return;
    }

    void <init>()
    {
        androidx.leanback.widget.GridLayoutManager$SavedState r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.leanback.widget.GridLayoutManager$SavedState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Bundle mChildStates> = $r1;

        return;
    }

    static void <clinit>()
    {
        androidx.leanback.widget.GridLayoutManager$SavedState$1 $r0;

        $r0 = new androidx.leanback.widget.GridLayoutManager$SavedState$1;

        specialinvoke $r0.<androidx.leanback.widget.GridLayoutManager$SavedState$1: void <init>()>();

        <androidx.leanback.widget.GridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

