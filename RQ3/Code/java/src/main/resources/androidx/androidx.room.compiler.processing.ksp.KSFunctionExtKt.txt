androidx.room.compiler.processing.ksp.KSFunctionExtKt
    public static final androidx.room.compiler.processing.ksp.KspType returnKspType(com.google.devtools.ksp.symbol.KSFunctionDeclaration, androidx.room.compiler.processing.ksp.KspProcessingEnv, androidx.room.compiler.processing.ksp.KspType)
    {
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        androidx.room.compiler.processing.ksp.KspType r2, $r17;
        com.google.devtools.ksp.symbol.KSTypeReference r3, $r6, $r12;
        java.lang.String r4, r5, $r11, $r15;
        com.google.devtools.ksp.symbol.KSType $r7, $r13, $r18;
        java.lang.IllegalStateException $r10, $r14;
        androidx.room.compiler.processing.ksp.KspTypeElement $r16;
        boolean $z0, $z1;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r1 := @parameter1: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter2: androidx.room.compiler.processing.ksp.KspType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        if r2 == null goto label2;

        $r16 = virtualinvoke r2.<androidx.room.compiler.processing.ksp.KspType: androidx.room.compiler.processing.ksp.KspTypeElement getTypeElement()>();

        if $r16 == null goto label2;

        $z0 = virtualinvoke $r16.<androidx.room.compiler.processing.ksp.KspTypeElement: boolean isAnnotationClass()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: com.google.devtools.ksp.symbol.KSTypeReference getReturnType()>();

        if $r12 != null goto label4;

        r5 = "Required value was null.";

        $r14 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label4:
        r3 = $r12;

        $r13 = interfaceinvoke r3.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r17 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.KSType)>(r3, $r13);

        goto label9;

     label5:
        $r6 = staticinvoke <androidx.room.compiler.processing.ksp.KSFunctionExtKt: com.google.devtools.ksp.symbol.KSTypeReference getOriginatingReference(com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r0);

        if $r6 != null goto label6;

        r4 = "Required value was null.";

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label6:
        if r2 == null goto label7;

        $r18 = virtualinvoke r2.<androidx.room.compiler.processing.ksp.KspType: com.google.devtools.ksp.symbol.KSType getKsType()>();

        goto label8;

     label7:
        $r18 = null;

     label8:
        $r7 = staticinvoke <androidx.room.compiler.processing.ksp.KSAsMemberOfKt: com.google.devtools.ksp.symbol.KSType returnTypeAsMemberOf(com.google.devtools.ksp.symbol.KSFunctionDeclaration,com.google.devtools.ksp.symbol.KSType)>($r0, $r18);

        $r17 = virtualinvoke r1.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSTypeReference,com.google.devtools.ksp.symbol.KSType)>($r6, $r7);

     label9:
        return $r17;
    }

    private static final com.google.devtools.ksp.symbol.KSTypeReference getOriginatingReference(com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r0, $r17;
        com.google.devtools.ksp.symbol.KSDeclaration r1, r2;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;
        java.lang.String $r10, $r13, $r14, $r15;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r16;
        com.google.devtools.ksp.symbol.KSTypeReference $r18, $r20;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r1 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: com.google.devtools.ksp.symbol.KSDeclaration findOverridee()>();

        r2 = r1;

        $z0 = r2 instanceof com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        if $z0 == 0 goto label1;

        $r17 = (com.google.devtools.ksp.symbol.KSFunctionDeclaration) r1;

        $r18 = interfaceinvoke $r17.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: com.google.devtools.ksp.symbol.KSTypeReference getReturnType()>();

        $r20 = $r18;

        goto label4;

     label1:
        $z1 = r2 instanceof com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        if $z1 == 0 goto label2;

        $r16 = (com.google.devtools.ksp.symbol.KSPropertyDeclaration) r1;

        $r20 = interfaceinvoke $r16.<com.google.devtools.ksp.symbol.KSPropertyDeclaration: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        goto label4;

     label2:
        if r2 != null goto label3;

        $r20 = null;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n            Unexpected overridee type for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").\n            Please file a bug at ");

        $r10 = staticinvoke <androidx.room.compiler.processing.util.ErrorMessagesKt: java.lang.String getISSUE_TRACKER_LINK()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n            ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r3;

     label4:
        if $r20 != null goto label5;

        $r20 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: com.google.devtools.ksp.symbol.KSTypeReference getReturnType()>();

     label5:
        return $r20;
    }

