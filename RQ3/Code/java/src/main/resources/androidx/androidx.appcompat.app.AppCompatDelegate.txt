androidx.appcompat.app.AppCompatDelegate
<androidx.appcompat.app.AppCompatDelegate: boolean DEBUG>
<androidx.appcompat.app.AppCompatDelegate: java.lang.String TAG>
<androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor sSerialExecutorForLocalesStorage>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_FOLLOW_SYSTEM>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_TIME>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_NO>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_YES>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_BATTERY>
<androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_UNSPECIFIED>
<androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode>
<androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>
<androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>
<androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn>
<androidx.appcompat.app.AppCompatDelegate: boolean sIsFrameworkSyncChecked>
<androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>
<androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>
<androidx.appcompat.app.AppCompatDelegate: java.lang.Object sAppLocalesStorageSyncLock>
<androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR>
<androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR_OVERLAY>
<androidx.appcompat.app.AppCompatDelegate: int FEATURE_ACTION_MODE_OVERLAY>
    public static androidx.appcompat.app.AppCompatDelegate create(android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        android.app.Activity r0;
        androidx.appcompat.app.AppCompatCallback r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        $r2 = new androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)>(r0, r1);

        return $r2;
    }

    public static androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog, androidx.appcompat.app.AppCompatCallback)
    {
        android.app.Dialog r0;
        androidx.appcompat.app.AppCompatCallback r1;
        androidx.appcompat.app.AppCompatDelegateImpl $r2;

        r0 := @parameter0: android.app.Dialog;

        r1 := @parameter1: androidx.appcompat.app.AppCompatCallback;

        $r2 = new androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke $r2.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)>(r0, r1);

        return $r2;
    }

    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context r0;
        android.view.Window r1;
        androidx.appcompat.app.AppCompatCallback r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.view.Window;

        r2 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)>(r0, r1, r2);

        return $r3;
    }

    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context, android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context r0;
        android.app.Activity r1;
        androidx.appcompat.app.AppCompatCallback r2;
        androidx.appcompat.app.AppCompatDelegateImpl $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.Activity;

        r2 := @parameter2: androidx.appcompat.app.AppCompatCallback;

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl;

        specialinvoke $r3.<androidx.appcompat.app.AppCompatDelegateImpl: void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)>(r0, r1, r2);

        return $r3;
    }

    void <init>()
    {
        androidx.appcompat.app.AppCompatDelegate r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBar getSupportActionBar()>
<androidx.appcompat.app.AppCompatDelegate: void setSupportActionBar(androidx.appcompat.widget.Toolbar)>
<androidx.appcompat.app.AppCompatDelegate: android.view.MenuInflater getMenuInflater()>
<androidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)>
<androidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)>
<androidx.appcompat.app.AppCompatDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<androidx.appcompat.app.AppCompatDelegate: void onStart()>
<androidx.appcompat.app.AppCompatDelegate: void onStop()>
<androidx.appcompat.app.AppCompatDelegate: void onPostResume()>
    public void setTheme(int)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        int i0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        i0 := @parameter0: int;

        return;
    }

<androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)>
<androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)>
<androidx.appcompat.app.AppCompatDelegate: void setContentView(int)>
<androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<androidx.appcompat.app.AppCompatDelegate: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
    public void attachBaseContext(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        android.content.Context r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        r1 := @parameter0: android.content.Context;

        return;
    }

    public android.content.Context attachBaseContext2(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        android.content.Context r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)>(r1);

        return r1;
    }

<androidx.appcompat.app.AppCompatDelegate: void setTitle(java.lang.CharSequence)>
<androidx.appcompat.app.AppCompatDelegate: void invalidateOptionsMenu()>
<androidx.appcompat.app.AppCompatDelegate: void onDestroy()>
<androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>
<androidx.appcompat.app.AppCompatDelegate: boolean requestWindowFeature(int)>
<androidx.appcompat.app.AppCompatDelegate: boolean hasWindowFeature(int)>
<androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)>
<androidx.appcompat.app.AppCompatDelegate: void installViewFactory()>
<androidx.appcompat.app.AppCompatDelegate: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<androidx.appcompat.app.AppCompatDelegate: void setHandleNativeActionModesEnabled(boolean)>
<androidx.appcompat.app.AppCompatDelegate: boolean isHandleNativeActionModesEnabled()>
<androidx.appcompat.app.AppCompatDelegate: void onSaveInstanceState(android.os.Bundle)>
<androidx.appcompat.app.AppCompatDelegate: boolean applyDayNight()>
    public void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        android.window.OnBackInvokedDispatcher r1;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        r1 := @parameter0: android.window.OnBackInvokedDispatcher;

        return;
    }

    boolean applyAppLocales()
    {
        androidx.appcompat.app.AppCompatDelegate r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        return 0;
    }

    public android.content.Context getContextForDelegate()
    {
        androidx.appcompat.app.AppCompatDelegate r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        return null;
    }

<androidx.appcompat.app.AppCompatDelegate: void setLocalNightMode(int)>
    public int getLocalNightMode()
    {
        androidx.appcompat.app.AppCompatDelegate r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        return -100;
    }

    public static void setDefaultNightMode(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        $i1 = <androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode>;

        if $i1 == i0 goto label3;

        <androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode> = i0;

        staticinvoke <androidx.appcompat.app.AppCompatDelegate: void applyDayNightToActiveDelegates()>();

        goto label3;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppCompatDelegate", "setDefaultNightMode() called with an unknown mode");

     label3:
        return;
    }

    public static void setApplicationLocales(androidx.core.os.LocaleListCompat)
    {
        androidx.core.os.LocaleListCompat r0, $r3;
        java.lang.Throwable r1, $r7;
        boolean $z0, $z1;
        java.lang.Object $r4, r8, r9;
        java.lang.String $r5;
        android.os.LocaleList $r6;

        r0 := @parameter0: androidx.core.os.LocaleListCompat;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label2;

        r8 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: java.lang.Object getLocaleManagerForApplication()>();

        if r8 == null goto label1;

        $r5 = virtualinvoke r0.<androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>();

        $r6 = staticinvoke <androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)>($r5);

        staticinvoke <androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)>(r8, $r6);

     label1:
        goto label7;

     label2:
        $r3 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        $z1 = virtualinvoke r0.<androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label7;

        $r4 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>;

        r9 = $r4;

        entermonitor $r4;

     label3:
        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales> = r0;

        staticinvoke <androidx.appcompat.app.AppCompatDelegate: void applyLocalesToActiveDelegates()>();

        exitmonitor r9;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r9;

     label6:
        throw r1;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static androidx.core.os.LocaleListCompat getApplicationLocales()
    {
        java.lang.Object r0;
        boolean $z0;
        androidx.core.os.LocaleListCompat $r1, $r2, $r3, $r5;
        android.os.LocaleList $r4;

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z0 == 0 goto label2;

        r0 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: java.lang.Object getLocaleManagerForApplication()>();

        if r0 == null goto label1;

        $r4 = staticinvoke <androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)>(r0);

        $r5 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)>($r4);

        return $r5;

     label1:
        goto label3;

     label2:
        $r1 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        if $r1 == null goto label3;

        $r3 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        return $r3;

     label3:
        $r2 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()>();

        return $r2;
    }

    public static int getDefaultNightMode()
    {
        int $i0;

        $i0 = <androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode>;

        return $i0;
    }

    static androidx.core.os.LocaleListCompat getRequestedAppLocales()
    {
        androidx.core.os.LocaleListCompat $r0;

        $r0 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        return $r0;
    }

    static androidx.core.os.LocaleListCompat getStoredAppLocales()
    {
        androidx.core.os.LocaleListCompat $r0;

        $r0 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>;

        return $r0;
    }

    static void resetStaticRequestedAndStoredLocales()
    {
        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales> = null;

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales> = null;

        return;
    }

    static void setIsAutoStoreLocalesOptedIn(boolean)
    {
        boolean z0;
        java.lang.Boolean $r0;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn> = $r0;

        return;
    }

    static java.lang.Object getLocaleManagerForApplication()
    {
        java.util.Iterator r0;
        java.lang.ref.WeakReference r1;
        androidx.appcompat.app.AppCompatDelegate r2;
        android.content.Context r3;
        androidx.collection.ArraySet $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        $r4 = <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>;

        r0 = virtualinvoke $r4.<androidx.collection.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.ref.WeakReference) $r5;

        $r6 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.appcompat.app.AppCompatDelegate) $r6;

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<androidx.appcompat.app.AppCompatDelegate: android.content.Context getContextForDelegate()>();

        if r3 == null goto label2;

        $r7 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("locale");

        return $r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    static boolean isAutoStorageOptedIn(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Boolean $r1, $r4, $r6, $r9;
        android.os.Bundle $r2, $r3;
        boolean $z0, $z1;
        java.lang.Throwable $r5, r8;
        android.content.pm.ServiceInfo r7;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn>;

        if $r1 != null goto label4;

     label1:
        r7 = staticinvoke <androidx.appcompat.app.AppLocalesMetadataHolderService: android.content.pm.ServiceInfo getServiceInfo(android.content.Context)>(r0);

        $r2 = r7.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        if $r2 == null goto label2;

        $r3 = r7.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $z0 = virtualinvoke $r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>("autoStoreLocales");

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppCompatDelegate", "Checking for metadata for AppLocalesMetadataHolderService : Service not found");

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn> = $r6;

     label4:
        $r9 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn>;

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    void asyncExecuteSyncRequestedAndStoredLocales(android.content.Context)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        android.content.Context r1;
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate;

        r1 := @parameter0: android.content.Context;

        $r2 = <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor sSerialExecutorForLocalesStorage>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (android.content.Context)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.appcompat.app.AppCompatDelegate: void lambda$asyncExecuteSyncRequestedAndStoredLocales$0(android.content.Context)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r2.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    static void syncRequestedAndStoredLocales(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.core.os.LocaleListCompat $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14;
        java.lang.String $r9, $r13;
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor $r15;
        java.lang.Runnable $r16;

        r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <androidx.appcompat.app.AppCompatDelegate: boolean isAutoStorageOptedIn(android.content.Context)>(r0);

        if $z0 != 0 goto label01;

        return;

     label01:
        $z1 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastT()>();

        if $z1 == 0 goto label02;

        $z4 = <androidx.appcompat.app.AppCompatDelegate: boolean sIsFrameworkSyncChecked>;

        if $z4 != 0 goto label12;

        $r15 = <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor sSerialExecutorForLocalesStorage>;

        $r16 = dynamicinvoke "run" <java.lang.Runnable (android.content.Context)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.appcompat.app.AppCompatDelegate: void lambda$syncRequestedAndStoredLocales$1(android.content.Context)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r15.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void execute(java.lang.Runnable)>($r16);

        goto label12;

     label02:
        $r3 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sAppLocalesStorageSyncLock>;

        r1 = $r3;

        entermonitor $r3;

     label03:
        $r4 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        if $r4 != null goto label07;

        $r10 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>;

        if $r10 != null goto label04;

        $r13 = staticinvoke <androidx.appcompat.app.AppLocalesStorageHelper: java.lang.String readLocales(android.content.Context)>(r0);

        $r14 = staticinvoke <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>($r13);

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales> = $r14;

     label04:
        $r11 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>;

        $z3 = virtualinvoke $r11.<androidx.core.os.LocaleListCompat: boolean isEmpty()>();

        if $z3 == 0 goto label06;

        exitmonitor r1;

     label05:
        return;

     label06:
        $r12 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>;

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales> = $r12;

        goto label08;

     label07:
        $r6 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        $r5 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales>;

        $z2 = virtualinvoke $r6.<androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label08;

        $r7 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales> = $r7;

        $r8 = <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales>;

        $r9 = virtualinvoke $r8.<androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>();

        staticinvoke <androidx.appcompat.app.AppLocalesStorageHelper: void persistLocales(android.content.Context,java.lang.String)>(r0, $r9);

     label08:
        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r2 = $r17;

        exitmonitor r1;

     label11:
        throw r2;

     label12:
        return;

        catch java.lang.Throwable from label03 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void setCompatVectorFromResourcesEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: void setCompatVectorFromResourcesEnabled(boolean)>(z0);

        return;
    }

    public static boolean isCompatVectorFromResourcesEnabled()
    {
        boolean $z0;

        $z0 = staticinvoke <androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()>();

        return $z0;
    }

    static void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.lang.ref.WeakReference $r4;
        androidx.collection.ArraySet $r5;

        r0 := @parameter0: androidx.appcompat.app.AppCompatDelegate;

        $r3 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        staticinvoke <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>(r0);

        $r5 = <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r5.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r4);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)
    {
        androidx.appcompat.app.AppCompatDelegate r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @parameter0: androidx.appcompat.app.AppCompatDelegate;

        $r3 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        staticinvoke <androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)>(r0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
    {
        androidx.appcompat.app.AppCompatDelegate r0, r3;
        java.lang.Object r1, $r5, $r7, $r9;
        java.util.Iterator r2;
        java.lang.Throwable r4, $r10;
        androidx.collection.ArraySet $r6;
        boolean $z0;
        java.lang.ref.WeakReference $r8;

        r0 := @parameter0: androidx.appcompat.app.AppCompatDelegate;

        $r5 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>;

        r2 = virtualinvoke $r6.<androidx.collection.ArraySet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.ref.WeakReference) $r7;

        $r9 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.appcompat.app.AppCompatDelegate) $r9;

        if r3 == r0 goto label3;

        if r3 != null goto label4;

     label3:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static void applyDayNightToActiveDelegates()
    {
        java.lang.Object r0, $r5, $r7, $r8;
        java.util.Iterator r1;
        java.lang.ref.WeakReference r2;
        androidx.appcompat.app.AppCompatDelegate r3;
        java.lang.Throwable r4, $r9;
        androidx.collection.ArraySet $r6;
        boolean $z0;

        $r5 = <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock>;

        r0 = $r5;

        entermonitor $r5;

     label1:
        $r6 = <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>;

        r1 = virtualinvoke $r6.<androidx.collection.ArraySet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.ref.WeakReference) $r7;

        $r8 = virtualinvoke r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.appcompat.app.AppCompatDelegate) $r8;

        if r3 == null goto label3;

        virtualinvoke r3.<androidx.appcompat.app.AppCompatDelegate: boolean applyDayNight()>();

     label3:
        goto label2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r0;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static void applyLocalesToActiveDelegates()
    {
        java.util.Iterator r0;
        java.lang.ref.WeakReference r1;
        androidx.appcompat.app.AppCompatDelegate r2;
        androidx.collection.ArraySet $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;

        $r3 = <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates>;

        r0 = virtualinvoke $r3.<androidx.collection.ArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.ref.WeakReference) $r4;

        $r5 = virtualinvoke r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.appcompat.app.AppCompatDelegate) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<androidx.appcompat.app.AppCompatDelegate: boolean applyAppLocales()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private static void lambda$syncRequestedAndStoredLocales$1(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <androidx.appcompat.app.AppLocalesStorageHelper: void syncLocalesToFramework(android.content.Context)>(r0);

        <androidx.appcompat.app.AppCompatDelegate: boolean sIsFrameworkSyncChecked> = 1;

        return;
    }

    private static void lambda$asyncExecuteSyncRequestedAndStoredLocales$0(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <androidx.appcompat.app.AppCompatDelegate: void syncRequestedAndStoredLocales(android.content.Context)>(r0);

        return;
    }

    static void <clinit>()
    {
        androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor $r0;
        androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor $r1;
        androidx.collection.ArraySet $r2;
        java.lang.Object $r3, $r4;

        $r0 = new androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor;

        $r1 = new androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor;

        specialinvoke $r1.<androidx.appcompat.app.AppLocalesStorageHelper$ThreadPerTaskExecutor: void <init>()>();

        specialinvoke $r0.<androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor: void <init>(java.util.concurrent.Executor)>($r1);

        <androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppLocalesStorageHelper$SerialExecutor sSerialExecutorForLocalesStorage> = $r0;

        <androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode> = -100;

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sRequestedAppLocales> = null;

        <androidx.appcompat.app.AppCompatDelegate: androidx.core.os.LocaleListCompat sStoredAppLocales> = null;

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Boolean sIsAutoStoreLocalesOptedIn> = null;

        <androidx.appcompat.app.AppCompatDelegate: boolean sIsFrameworkSyncChecked> = 0;

        $r2 = new androidx.collection.ArraySet;

        specialinvoke $r2.<androidx.collection.ArraySet: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        <androidx.appcompat.app.AppCompatDelegate: java.lang.Object sAppLocalesStorageSyncLock> = $r4;

        return;
    }

androidx.appcompat.app.AppCompatDelegate$Api24Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegate$Api24Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate$Api24Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.os.LocaleList localeListForLanguageTags(java.lang.String)
    {
        java.lang.String r0;
        android.os.LocaleList $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>(r0);

        return $r1;
    }

androidx.appcompat.app.AppCompatDelegate$Api33Impl
    private void <init>()
    {
        androidx.appcompat.app.AppCompatDelegate$Api33Impl r0;

        r0 := @this: androidx.appcompat.app.AppCompatDelegate$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void localeManagerSetApplicationLocales(java.lang.Object, android.os.LocaleList)
    {
        java.lang.Object r0;
        android.os.LocaleList r1;
        android.app.LocaleManager r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.os.LocaleList;

        r2 = (android.app.LocaleManager) r0;

        virtualinvoke r2.<android.app.LocaleManager: void setApplicationLocales(android.os.LocaleList)>(r1);

        return;
    }

    static android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
    {
        java.lang.Object r0;
        android.app.LocaleManager r1;
        android.os.LocaleList $r2;

        r0 := @parameter0: java.lang.Object;

        r1 = (android.app.LocaleManager) r0;

        $r2 = virtualinvoke r1.<android.app.LocaleManager: android.os.LocaleList getApplicationLocales()>();

        return $r2;
    }

androidx.appcompat.app.AppCompatDelegate$NightMode
