androidx.room.compiler.processing.ksp.KspRoundEnv
<androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
<androidx.room.compiler.processing.ksp.KspRoundEnv: boolean isProcessingOver>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, boolean)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        boolean z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: boolean isProcessingOver> = z0;

        return;
    }

    public boolean isProcessingOver()
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv r0;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv;

        $z0 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: boolean isProcessingOver>;

        return $z0;
    }

    public java.util.Set getRootElements()
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv r0;
        java.lang.String r1, $r6;
        kotlin.NotImplementedError $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv;

        r1 = "not supported";

        $r2 = new kotlin.NotImplementedError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An operation is not implemented: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<kotlin.NotImplementedError: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public java.util.Set getElementsAnnotatedWith(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv r0;
        kotlin.reflect.KClass r1;
        java.lang.String $r2, $r8, $r9;
        java.util.Set $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv;

        r1 := @parameter0: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "klass");

        $r2 = interfaceinvoke r1.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        if $r2 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No qualified name for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: java.util.Set getElementsAnnotatedWith(java.lang.String)>($r2);

        return $r3;
    }

    public java.util.Set getElementsAnnotatedWith(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv r0;
        java.lang.String r1;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        com.google.devtools.ksp.processing.Resolver $r3;
        kotlin.sequences.Sequence $r4, $r7;
        androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        java.util.Set $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationQualifiedName");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: com.google.devtools.ksp.processing.Resolver getResolver()>();

        $r4 = staticinvoke <com.google.devtools.ksp.processing.Resolver: kotlin.sequences.Sequence getSymbolsWithAnnotation$default(com.google.devtools.ksp.processing.Resolver,java.lang.String,boolean,int,java.lang.Object)>($r3, r1, 0, 2, null);

        $r5 = new androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: void <init>(androidx.room.compiler.processing.ksp.KspRoundEnv,java.lang.String)>(r0, r1);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.util.Set toSet(kotlin.sequences.Sequence)>($r7);

        return $r8;
    }

    public static final androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv $r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspRoundEnv;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1
<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>
<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: java.lang.String $annotationQualifiedName>
    void <init>(androidx.room.compiler.processing.ksp.KspRoundEnv, java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1 r0;
        androidx.room.compiler.processing.ksp.KspRoundEnv $r1;
        java.lang.String $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspRoundEnv;

        $r2 := @parameter1: java.lang.String;

        r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: java.lang.String $annotationQualifiedName> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.room.compiler.processing.XElement invoke(com.google.devtools.ksp.symbol.KSAnnotated)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1 r0;
        com.google.devtools.ksp.symbol.KSAnnotated r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r8, $r10, $r11;
        androidx.room.compiler.processing.ksp.KspRoundEnv $r12, $r17, $r22, $r27, $r32;
        androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion $r13;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r14, $r19, $r24, $r29, $r34;
        com.google.devtools.ksp.symbol.KSValueParameter $r15;
        androidx.room.compiler.processing.XExecutableParameterElement $r16;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement$Companion $r18;
        com.google.devtools.ksp.symbol.KSPropertyAccessor $r20;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement $r21;
        androidx.room.compiler.processing.ksp.KspExecutableElement$Companion $r23;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r25;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r26;
        androidx.room.compiler.processing.ksp.KspTypeElement$Companion $r28;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r30;
        androidx.room.compiler.processing.ksp.KspTypeElement $r31;
        androidx.room.compiler.processing.ksp.KspFieldElement$Companion $r33;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r35;
        androidx.room.compiler.processing.ksp.KspFieldElement $r36;
        androidx.room.compiler.processing.XElement $r37;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotated;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "symbol");

        r2 = r1;

        $z0 = r2 instanceof com.google.devtools.ksp.symbol.KSPropertyDeclaration;

        if $z0 == 0 goto label1;

        $r33 = <androidx.room.compiler.processing.ksp.KspFieldElement: androidx.room.compiler.processing.ksp.KspFieldElement$Companion Companion>;

        $r32 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>;

        $r34 = staticinvoke <androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)>($r32);

        $r35 = (com.google.devtools.ksp.symbol.KSPropertyDeclaration) r1;

        $r36 = virtualinvoke $r33.<androidx.room.compiler.processing.ksp.KspFieldElement$Companion: androidx.room.compiler.processing.ksp.KspFieldElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSPropertyDeclaration)>($r34, $r35);

        $r37 = (androidx.room.compiler.processing.XElement) $r36;

        goto label6;

     label1:
        $z1 = r2 instanceof com.google.devtools.ksp.symbol.KSClassDeclaration;

        if $z1 == 0 goto label2;

        $r28 = <androidx.room.compiler.processing.ksp.KspTypeElement: androidx.room.compiler.processing.ksp.KspTypeElement$Companion Companion>;

        $r27 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>;

        $r29 = staticinvoke <androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)>($r27);

        $r30 = (com.google.devtools.ksp.symbol.KSClassDeclaration) r1;

        $r31 = virtualinvoke $r28.<androidx.room.compiler.processing.ksp.KspTypeElement$Companion: androidx.room.compiler.processing.ksp.KspTypeElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSClassDeclaration)>($r29, $r30);

        $r37 = (androidx.room.compiler.processing.XElement) $r31;

        goto label6;

     label2:
        $z2 = r2 instanceof com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        if $z2 == 0 goto label3;

        $r23 = <androidx.room.compiler.processing.ksp.KspExecutableElement: androidx.room.compiler.processing.ksp.KspExecutableElement$Companion Companion>;

        $r22 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>;

        $r24 = staticinvoke <androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)>($r22);

        $r25 = (com.google.devtools.ksp.symbol.KSFunctionDeclaration) r1;

        $r26 = virtualinvoke $r23.<androidx.room.compiler.processing.ksp.KspExecutableElement$Companion: androidx.room.compiler.processing.ksp.KspExecutableElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r24, $r25);

        $r37 = (androidx.room.compiler.processing.XElement) $r26;

        goto label6;

     label3:
        $z3 = r2 instanceof com.google.devtools.ksp.symbol.KSPropertyAccessor;

        if $z3 == 0 goto label4;

        $r18 = <androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement$Companion Companion>;

        $r17 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>;

        $r19 = staticinvoke <androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)>($r17);

        $r20 = (com.google.devtools.ksp.symbol.KSPropertyAccessor) r1;

        $r21 = virtualinvoke $r18.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement$Companion: androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSPropertyAccessor)>($r19, $r20);

        $r37 = (androidx.room.compiler.processing.XElement) $r21;

        goto label6;

     label4:
        $z4 = r2 instanceof com.google.devtools.ksp.symbol.KSValueParameter;

        if $z4 == 0 goto label5;

        $r13 = <androidx.room.compiler.processing.ksp.KspExecutableParameterElement: androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion Companion>;

        $r12 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.ksp.KspRoundEnv this$0>;

        $r14 = staticinvoke <androidx.room.compiler.processing.ksp.KspRoundEnv: androidx.room.compiler.processing.ksp.KspProcessingEnv access$getEnv$p(androidx.room.compiler.processing.ksp.KspRoundEnv)>($r12);

        $r15 = (com.google.devtools.ksp.symbol.KSValueParameter) r1;

        $r16 = virtualinvoke $r13.<androidx.room.compiler.processing.ksp.KspExecutableParameterElement$Companion: androidx.room.compiler.processing.XExecutableParameterElement create(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSValueParameter)>($r14, $r15);

        $r37 = (androidx.room.compiler.processing.XElement) $r16;

        goto label6;

     label5:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with annotation ");

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: java.lang.String $annotationQualifiedName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label6:
        return $r37;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1 r0;
        java.lang.Object r1;
        com.google.devtools.ksp.symbol.KSAnnotated $r2;
        androidx.room.compiler.processing.XElement $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotated) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspRoundEnv$getElementsAnnotatedWith$1: androidx.room.compiler.processing.XElement invoke(com.google.devtools.ksp.symbol.KSAnnotated)>($r2);

        return $r3;
    }

