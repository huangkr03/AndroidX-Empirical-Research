androidx.media3.test.utils.AssetContentProvider
<androidx.media3.test.utils.AssetContentProvider: java.lang.String AUTHORITY>
<androidx.media3.test.utils.AssetContentProvider: java.lang.String PARAM_PIPE_MODE>
    public void <init>()
    {
        androidx.media3.test.utils.AssetContentProvider r0;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    public static android.net.Uri buildUri(java.lang.String, boolean)
    {
        java.lang.String r0;
        boolean z0;
        android.net.Uri$Builder r1, $r2, $r3, $r4;
        android.net.Uri $r5;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("androidx.media3.test.utils.AssetContentProvider");

        r1 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>(r0);

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("pipe-mode", "1");

     label1:
        $r5 = virtualinvoke r1.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public boolean onCreate()
    {
        androidx.media3.test.utils.AssetContentProvider r0;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        return 1;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2, $r4, $r5, $r12, r14;
        android.os.ParcelFileDescriptor r3;
        android.content.Context $r6;
        android.content.res.AssetManager $r7;
        android.content.res.AssetFileDescriptor $r8, $r9;
        java.lang.Throwable $r10, r15;
        java.io.FileNotFoundException $r11, r16;
        boolean $z0, z1;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getPath()>();

        if $r4 != null goto label1;

        return null;

     label1:
        r14 = staticinvoke <androidx.media3.test.utils.AssetContentProvider: java.lang.String getFileName(android.net.Uri)>(r1);

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("pipe-mode");

        if $r5 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        z1 = $z0;

        if z1 == 0 goto label5;

        r3 = virtualinvoke r0.<androidx.media3.test.utils.AssetContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)>(r1, null, null, null, r0);

        $r9 = new android.content.res.AssetFileDescriptor;

        specialinvoke $r9.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>(r3, 0L, -1L);

     label4:
        return $r9;

     label5:
        $r6 = virtualinvoke r0.<androidx.media3.test.utils.AssetContentProvider: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>(r14);

     label6:
        return $r8;

     label7:
        $r10 := @caughtexception;

        r15 = $r10;

        $r11 = new java.io.FileNotFoundException;

        $r12 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r12);

        r16 = $r11;

        virtualinvoke r16.<java.io.FileNotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r15);

        throw r16;

        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public java.lang.String getType(android.net.Uri)
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r5;
    }

    public void writeDataToPipe(android.os.ParcelFileDescriptor, android.net.Uri, java.lang.String, android.os.Bundle, java.lang.Object)
    {
        androidx.media3.test.utils.AssetContentProvider r0;
        android.os.ParcelFileDescriptor r1;
        android.net.Uri r2;
        java.lang.String r3, $r10;
        android.os.Bundle r4;
        java.lang.Object r5;
        java.lang.Throwable r6, $r11, $r13, $r14, r17, r18;
        java.io.FileOutputStream $r7, r15;
        java.io.FileDescriptor $r8;
        android.content.Context $r9;
        boolean $z0;
        java.lang.RuntimeException $r12;
        byte[] r16;

        r0 := @this: androidx.media3.test.utils.AssetContentProvider;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: java.lang.Object;

     label01:
        $r7 = new java.io.FileOutputStream;

        $r8 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r8);

        r15 = $r7;

     label02:
        $r9 = virtualinvoke r0.<androidx.media3.test.utils.AssetContentProvider: android.content.Context getContext()>();

        $r10 = staticinvoke <androidx.media3.test.utils.AssetContentProvider: java.lang.String getFileName(android.net.Uri)>(r2);

        r16 = staticinvoke <androidx.media3.test.utils.TestUtil: byte[] getByteArray(android.content.Context,java.lang.String)>($r9, $r10);

        virtualinvoke r15.<java.io.FileOutputStream: void write(byte[])>(r16);

     label03:
        virtualinvoke r15.<java.io.FileOutputStream: void close()>();

        goto label09;

     label04:
        $r14 := @caughtexception;

        r17 = $r14;

     label05:
        virtualinvoke r15.<java.io.FileOutputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

        r6 = $r13;

        virtualinvoke r17.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r6);

     label08:
        throw r17;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        r18 = $r11;

        $z0 = staticinvoke <androidx.media3.test.utils.AssetContentProvider: boolean isBrokenPipe(java.io.IOException)>(r18);

        if $z0 == 0 goto label11;

        return;

     label11:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error writing to pipe", r18);

        throw $r12;

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label01 to label09 with label10;
    }

    private static java.lang.String getFileName(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getPath()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("/", "");

        return $r2;
    }

    private static boolean isBrokenPipe(java.io.IOException)
    {
        java.io.IOException r0;
        int $i0, $i1, $i2;
        java.lang.Throwable $r1, $r2;
        boolean $z0, $z1;
        android.system.ErrnoException $r3;

        r0 := @parameter0: java.io.IOException;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = virtualinvoke r0.<java.io.IOException: java.lang.Throwable getCause()>();

        $z0 = $r1 instanceof android.system.ErrnoException;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<java.io.IOException: java.lang.Throwable getCause()>();

        $r3 = (android.system.ErrnoException) $r2;

        $i2 = $r3.<android.system.ErrnoException: int errno>;

        $i1 = <android.system.OsConstants: int EPIPE>;

        if $i2 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

