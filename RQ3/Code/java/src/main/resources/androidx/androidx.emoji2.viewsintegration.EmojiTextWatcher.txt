androidx.emoji2.viewsintegration.EmojiTextWatcher
<androidx.emoji2.viewsintegration.EmojiTextWatcher: android.widget.EditText mEditText>
<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mExpectInitializedEmojiCompat>
<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback>
<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mMaxEmojiCount>
<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mEmojiReplaceStrategy>
<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled>
    void <init>(android.widget.EditText, boolean)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        android.widget.EditText r1;
        boolean z0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        r1 := @parameter0: android.widget.EditText;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mMaxEmojiCount> = 2147483647;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mEmojiReplaceStrategy> = 0;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: android.widget.EditText mEditText> = r1;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mExpectInitializedEmojiCompat> = z0;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled> = 1;

        return;
    }

    void setMaxEmojiCount(int)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        int i0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        i0 := @parameter0: int;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mMaxEmojiCount> = i0;

        return;
    }

    int getMaxEmojiCount()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        int $i0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        $i0 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mMaxEmojiCount>;

        return $i0;
    }

    int getEmojiReplaceStrategy()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        int $i0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        $i0 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mEmojiReplaceStrategy>;

        return $i0;
    }

    void setEmojiReplaceStrategy(int)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        int i0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        i0 := @parameter0: int;

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mEmojiReplaceStrategy> = i0;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.text.Spannable r2;
        android.widget.EditText $r3;
        boolean $z0, $z1, $z2;
        androidx.emoji2.text.EmojiCompat $r4, $r5, $r7;
        androidx.emoji2.text.EmojiCompat$InitCallback $r8;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: android.widget.EditText mEditText>;

        $z0 = virtualinvoke $r3.<android.widget.EditText: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean shouldSkipForDisabledOrNotConfigured()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        if i1 > i2 goto label5;

        $z2 = r1 instanceof android.text.Spannable;

        if $z2 == 0 goto label5;

        $r4 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $i3 = virtualinvoke $r4.<androidx.emoji2.text.EmojiCompat: int getLoadState()>();

        tableswitch($i3)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label5;
            case 3: goto label4;
            default: goto label5;
        };

     label3:
        r2 = (android.text.Spannable) r1;

        $r5 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $i6 = i0 + i2;

        $i5 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mMaxEmojiCount>;

        $i4 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: int mEmojiReplaceStrategy>;

        virtualinvoke $r5.<androidx.emoji2.text.EmojiCompat: java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int)>(r2, i0, $i6, $i5, $i4);

        goto label5;

     label4:
        $r7 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $r8 = specialinvoke r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback()>();

        virtualinvoke $r7.<androidx.emoji2.text.EmojiCompat: void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback)>($r8);

        goto label5;

     label5:
        return;
    }

    private boolean shouldSkipForDisabledOrNotConfigured()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        $z0 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mExpectInitializedEmojiCompat>;

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <androidx.emoji2.text.EmojiCompat: boolean isConfigured()>();

        if $z2 != 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        android.text.Editable r1;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    private androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        androidx.emoji2.text.EmojiCompat$InitCallback $r1, $r2;
        androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl $r3;
        android.widget.EditText $r4;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        $r1 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback>;

        if $r1 != null goto label1;

        $r3 = new androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl;

        $r4 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: android.widget.EditText mEditText>;

        specialinvoke $r3.<androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl: void <init>(android.widget.EditText)>($r4);

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback> = $r3;

     label1:
        $r2 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback>;

        return $r2;
    }

    public boolean isEnabled()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        boolean $z0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        $z0 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled>;

        return $z0;
    }

    public void setEnabled(boolean)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher r0;
        boolean z0, $z1, $z2;
        androidx.emoji2.text.EmojiCompat$InitCallback $r1, $r5;
        android.widget.EditText $r2;
        androidx.emoji2.text.EmojiCompat $r3, $r4;
        int $i0;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled>;

        if $z1 == z0 goto label2;

        $r1 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback>;

        if $r1 == null goto label1;

        $r4 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $r5 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: androidx.emoji2.text.EmojiCompat$InitCallback mInitCallback>;

        virtualinvoke $r4.<androidx.emoji2.text.EmojiCompat: void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback)>($r5);

     label1:
        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled> = z0;

        $z2 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: boolean mEnabled>;

        if $z2 == 0 goto label2;

        $r2 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher: android.widget.EditText mEditText>;

        $r3 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        $i0 = virtualinvoke $r3.<androidx.emoji2.text.EmojiCompat: int getLoadState()>();

        staticinvoke <androidx.emoji2.viewsintegration.EmojiTextWatcher: void processTextOnEnablingEvent(android.widget.EditText,int)>($r2, $i0);

     label2:
        return;
    }

    static void processTextOnEnablingEvent(android.widget.EditText, int)
    {
        android.widget.EditText r0;
        int i0, i1, i2;
        android.text.Editable r1;
        boolean $z0;
        androidx.emoji2.text.EmojiCompat $r2;

        r0 := @parameter0: android.widget.EditText;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<android.widget.EditText: boolean isAttachedToWindow()>();

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<android.widget.EditText: android.text.Editable getEditableText()>();

        i1 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r1);

        i2 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r1);

        $r2 = staticinvoke <androidx.emoji2.text.EmojiCompat: androidx.emoji2.text.EmojiCompat get()>();

        virtualinvoke $r2.<androidx.emoji2.text.EmojiCompat: java.lang.CharSequence process(java.lang.CharSequence)>(r1);

        staticinvoke <androidx.emoji2.viewsintegration.EmojiInputFilter: void updateSelection(android.text.Spannable,int,int)>(r1, i1, i2);

     label1:
        return;
    }

androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl
<androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef>
    void <init>(android.widget.EditText)
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl r0;
        android.widget.EditText r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl;

        r1 := @parameter0: android.widget.EditText;

        specialinvoke r0.<androidx.emoji2.text.EmojiCompat$InitCallback: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef> = $r2;

        return;
    }

    public void onInitialized()
    {
        androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl r0;
        android.widget.EditText r1;
        java.lang.ref.Reference $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl;

        specialinvoke r0.<androidx.emoji2.text.EmojiCompat$InitCallback: void onInitialized()>();

        $r2 = r0.<androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl: java.lang.ref.Reference mViewRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.Reference: java.lang.Object get()>();

        r1 = (android.widget.EditText) $r3;

        staticinvoke <androidx.emoji2.viewsintegration.EmojiTextWatcher: void processTextOnEnablingEvent(android.widget.EditText,int)>(r1, 1);

        return;
    }

