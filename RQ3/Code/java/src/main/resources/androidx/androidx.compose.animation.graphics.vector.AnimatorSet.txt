androidx.compose.animation.graphics.vector.AnimatorSet
<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>
<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>
<androidx.compose.animation.graphics.vector.AnimatorSet: int totalDuration>
    public void <init>(java.util.List, androidx.compose.animation.graphics.vector.Ordering)
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0, r8, $r14, r16;
        java.util.List r1, $r7, r17;
        androidx.compose.animation.graphics.vector.Ordering r2, $r5;
        androidx.compose.animation.graphics.vector.Animator r3, r11, r13, $r15;
        int i0, $i1, $i2, i3, $i4, i5, i6, $i7, $i8, $i9, i10, i11, i12;
        int[] $r4;
        boolean $z1, z6;
        kotlin.NoWhenBranchMatchedException $r6;
        java.lang.Object $r9, r10, r12, r18, r19;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.compose.animation.graphics.vector.Ordering;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animators");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ordering");

        specialinvoke r0.<androidx.compose.animation.graphics.vector.Animator: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators> = r1;

        r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering> = r2;

        $r5 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        $r4 = <androidx.compose.animation.graphics.vector.AnimatorSet$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke $r5.<androidx.compose.animation.graphics.vector.Ordering: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label01;
            case 2: goto label08;
            default: goto label11;
        };

     label01:
        $r7 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        r8 = r0;

        $z1 = interfaceinvoke $r7.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label02;

        $r9 = null;

        goto label06;

     label02:
        r10 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        r11 = (androidx.compose.animation.graphics.vector.Animator) r10;

        i3 = virtualinvoke r11.<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>();

        $i4 = 1;

        i5 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r7);

        if 1 > i5 goto label05;

     label03:
        r12 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i4);

        r13 = (androidx.compose.animation.graphics.vector.Animator) r12;

        i6 = virtualinvoke r13.<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>();

        if i3 >= i6 goto label04;

        r10 = r12;

        i3 = i6;

     label04:
        if $i4 == i5 goto label05;

        $i4 = $i4 + 1;

        goto label03;

     label05:
        $r9 = r10;

     label06:
        $r14 = r8;

        $r15 = (androidx.compose.animation.graphics.vector.Animator) $r9;

        if $r15 == null goto label07;

        $i7 = virtualinvoke $r15.<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>();

        goto label12;

     label07:
        $i7 = 0;

        goto label12;

     label08:
        r16 = r0;

        $i8 = 0;

        r17 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        z6 = 0;

        $i9 = 0;

        i10 = interfaceinvoke r17.<java.util.List: int size()>();

     label09:
        if $i9 >= i10 goto label10;

        r18 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>($i9);

        r19 = r18;

        r3 = (androidx.compose.animation.graphics.vector.Animator) r19;

        i11 = $i8;

        i0 = virtualinvoke r3.<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>();

        $i8 = i11 + i0;

        $i9 = $i9 + 1;

        goto label09;

     label10:
        i12 = $i8;

        $r14 = r16;

        $i7 = i12;

        goto label12;

     label11:
        $r6 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r6.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r6;

     label12:
        $r14.<androidx.compose.animation.graphics.vector.AnimatorSet: int totalDuration> = $i7;

        return;
    }

    public final java.util.List getAnimators()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        return $r1;
    }

    public final androidx.compose.animation.graphics.vector.Ordering getOrdering()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        androidx.compose.animation.graphics.vector.Ordering $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        return $r1;
    }

    public int getTotalDuration()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        int $i0;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $i0 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: int totalDuration>;

        return $i0;
    }

    public void collectPropertyValues(java.util.Map, int, int)
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        java.util.Map r1;
        int i0, i1, $i2, $i3, $i4, i5, i6, $i7, i8, i9;
        int[] $r2;
        androidx.compose.animation.graphics.vector.Ordering $r3;
        java.util.List $r4, $r7;
        java.lang.Object r5, r8;
        androidx.compose.animation.graphics.vector.Animator r6, $r9;
        boolean z4;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "propertyValuesMap");

        $r3 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        $r2 = <androidx.compose.animation.graphics.vector.AnimatorSet$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r3.<androidx.compose.animation.graphics.vector.Ordering: int ordinal()>();

        $i3 = $r2[$i2];

        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label6;
        };

     label1:
        $r4 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        i5 = 0;

        i6 = interfaceinvoke $r4.<java.util.List: int size()>();

     label2:
        if i5 >= i6 goto label3;

        r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i5);

        r6 = (androidx.compose.animation.graphics.vector.Animator) r5;

        virtualinvoke r6.<androidx.compose.animation.graphics.vector.Animator: void collectPropertyValues(java.util.Map,int,int)>(r1, i0, i1);

        i5 = i5 + 1;

        goto label2;

     label3:
        goto label6;

     label4:
        $i7 = i1;

        $r7 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        z4 = 0;

        i8 = 0;

        i9 = interfaceinvoke $r7.<java.util.List: int size()>();

     label5:
        if i8 >= i9 goto label6;

        r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i8);

        $r9 = (androidx.compose.animation.graphics.vector.Animator) r8;

        virtualinvoke $r9.<androidx.compose.animation.graphics.vector.Animator: void collectPropertyValues(java.util.Map,int,int)>(r1, i0, $i7);

        $i4 = virtualinvoke $r9.<androidx.compose.animation.graphics.vector.Animator: int getTotalDuration()>();

        $i7 = $i7 + $i4;

        i8 = i8 + 1;

        goto label5;

     label6:
        return;
    }

    public final java.util.List component1()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        java.util.List $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        return $r1;
    }

    public final androidx.compose.animation.graphics.vector.Ordering component2()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        androidx.compose.animation.graphics.vector.Ordering $r1;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        return $r1;
    }

    public final androidx.compose.animation.graphics.vector.AnimatorSet copy(java.util.List, androidx.compose.animation.graphics.vector.Ordering)
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0, $r3;
        java.util.List r1;
        androidx.compose.animation.graphics.vector.Ordering r2;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: androidx.compose.animation.graphics.vector.Ordering;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animators");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ordering");

        $r3 = new androidx.compose.animation.graphics.vector.AnimatorSet;

        specialinvoke $r3.<androidx.compose.animation.graphics.vector.AnimatorSet: void <init>(java.util.List,androidx.compose.animation.graphics.vector.Ordering)>(r1, r2);

        return $r3;
    }

    public static androidx.compose.animation.graphics.vector.AnimatorSet copy$default(androidx.compose.animation.graphics.vector.AnimatorSet, java.util.List, androidx.compose.animation.graphics.vector.Ordering, int, java.lang.Object)
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        java.util.List r3;
        androidx.compose.animation.graphics.vector.Ordering r4;

        r0 := @parameter0: androidx.compose.animation.graphics.vector.AnimatorSet;

        r3 := @parameter1: java.util.List;

        r4 := @parameter2: androidx.compose.animation.graphics.vector.Ordering;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.AnimatorSet copy(java.util.List,androidx.compose.animation.graphics.vector.Ordering)>(r3, r4);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8;
        java.util.List $r3;
        androidx.compose.animation.graphics.vector.Ordering $r6;
        java.lang.String $r9;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnimatorSet(animators=");

        $r3 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ordering=");

        $r6 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public int hashCode()
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0;
        java.util.List $r1;
        androidx.compose.animation.graphics.vector.Ordering $r2;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        $r1 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = i2 * 31;

        $r2 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        $i1 = virtualinvoke $r2.<androidx.compose.animation.graphics.vector.Ordering: int hashCode()>();

        i3 = $i0 + $i1;

        return i3;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.animation.graphics.vector.AnimatorSet r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;
        androidx.compose.animation.graphics.vector.Ordering $r5, $r6;

        r0 := @this: androidx.compose.animation.graphics.vector.AnimatorSet;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.animation.graphics.vector.AnimatorSet;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.compose.animation.graphics.vector.AnimatorSet) r1;

        $r4 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        $r3 = r2.<androidx.compose.animation.graphics.vector.AnimatorSet: java.util.List animators>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        $r5 = r2.<androidx.compose.animation.graphics.vector.AnimatorSet: androidx.compose.animation.graphics.vector.Ordering ordering>;

        if $r6 == $r5 goto label4;

        return 0;

     label4:
        return 1;
    }

