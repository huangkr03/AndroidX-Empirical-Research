androidx.test.espresso.core.internal.deps.guava.base.Throwables
<androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object jla>
<androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getStackTraceElementMethod>
<androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getStackTraceDepthMethod>
    private static java.lang.Object getJLA()
    {
        java.lang.Class $r0;
        java.lang.Class[] $r1;
        java.lang.Object[] $r2;
        java.lang.Throwable $r3, $r4, r7;
        java.lang.reflect.Method r5;
        java.lang.Object r6;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("sun.misc.SharedSecrets", 0, null);

        $r1 = newarray (java.lang.Class)[0];

        r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getJavaLangAccess", $r1);

     label2:
        $r2 = newarray (java.lang.Object)[0];

        r6 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

        throw r7;

     label5:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ThreadDeath from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.ThreadDeath from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    private static java.lang.reflect.Method getGetMethod()
    {
        java.lang.Class[] r0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;

        r0 = newarray (java.lang.Class)[2];

        r0[0] = class "Ljava/lang/Throwable;";

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        r0[1] = $r1;

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])>("getStackTraceElement", r0);

        return $r2;
    }

    private static transient java.lang.reflect.Method getJlaMethod(java.lang.String, java.lang.Class[]) throws java.lang.ThreadDeath
    {
        java.lang.Class[] r0;
        java.lang.Class $r1;
        java.lang.Throwable $r2, $r3, r6;
        java.lang.String r4;
        java.lang.reflect.Method r5;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Class[];

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("sun.misc.JavaLangAccess", 0, null);

        r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r4, r0);

     label2:
        return r5;

     label3:
        $r2 := @caughtexception;

        r6 = $r2;

        throw r6;

     label4:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ThreadDeath from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private static java.lang.reflect.Method getSizeMethod(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r3;
        java.lang.String r4;
        java.lang.Class[] r5;
        java.lang.reflect.Method r6;
        java.lang.Object[] r7;

        r0 := @parameter0: java.lang.Object;

     label1:
        r4 = "getStackTraceDepth";

        r5 = newarray (java.lang.Class)[1];

     label2:
        r5[0] = class "Ljava/lang/Throwable;";

        r6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])>(r4, r5);

     label3:
        if r6 != null goto label4;

        return null;

     label4:
        r7 = newarray (java.lang.Object)[1];

     label5:
        r1 = new java.lang.Throwable;

        specialinvoke r1.<java.lang.Throwable: void <init>()>();

        r7[0] = r1;

        virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r7);

     label6:
        return r6;

     label7:
        $r3 := @caughtexception;

        return null;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label7;
        catch java.lang.IllegalAccessException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.UnsupportedOperationException from label2 to label3 with label7;
        catch java.lang.IllegalAccessException from label2 to label3 with label7;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label7;
        catch java.lang.UnsupportedOperationException from label4 to label5 with label7;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
        catch java.lang.reflect.InvocationTargetException from label4 to label5 with label7;
        catch java.lang.UnsupportedOperationException from label5 to label6 with label7;
        catch java.lang.IllegalAccessException from label5 to label6 with label7;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label7;
    }

    static void <clinit>()
    {
        java.lang.Object $r0, $r1, $r2, $r3;
        java.lang.reflect.Method r4, r5;

        $r0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object getJLA()>();

        <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object jla> = $r0;

        $r1 = <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object jla>;

        if $r1 != null goto label4;

        r4 = null;

     label1:
        <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getStackTraceElementMethod> = r4;

        $r2 = <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object jla>;

        if $r2 != null goto label3;

        r5 = null;

     label2:
        <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getStackTraceDepthMethod> = r5;

        return;

     label3:
        $r3 = <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.Object jla>;

        r5 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getSizeMethod(java.lang.Object)>($r3);

        goto label2;

     label4:
        r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: java.lang.reflect.Method getGetMethod()>();

        goto label1;
    }

    public static void throwIfUnchecked(java.lang.Throwable)
    {
        java.lang.Throwable r0, r4;
        boolean $z0, $z1;
        java.lang.Error $r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.Throwable;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = r0 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.RuntimeException) r0;

        r4 = (java.lang.Throwable) $r3;

        throw r4;

     label1:
        $z1 = r0 instanceof java.lang.Error;

        if $z1 == 0 goto label2;

        $r2 = (java.lang.Error) r0;

        throw $r2;

     label2:
        return;
    }

