androidx.benchmark.IsolationActivity
<androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>
<androidx.benchmark.IsolationActivity: boolean destroyed>
<androidx.benchmark.IsolationActivity: java.lang.String TAG>
<androidx.benchmark.IsolationActivity: java.util.concurrent.atomic.AtomicReference singleton>
<androidx.benchmark.IsolationActivity: boolean firstInit>
<androidx.benchmark.IsolationActivity: boolean sustainedPerformanceModeInUse>
<androidx.benchmark.IsolationActivity: boolean resumed>
<androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 activityLifecycleCallbacks>
    public void <init>()
    {
        androidx.benchmark.IsolationActivity r0;

        r0 := @this: androidx.benchmark.IsolationActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        androidx.benchmark.IsolationActivity r0, r2;
        android.os.Bundle r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.IllegalStateException $r3;
        androidx.benchmark.CpuInfo $r4, $r20;
        androidx.benchmark.IsolationActivity$Companion $r5, $r9, $r10;
        androidx.benchmark.IsolationActivity$onCreate$1 $r6;
        kotlin.jvm.functions.Function0 $r7;
        android.app.Application $r11;
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 $r12, $r14;
        android.app.Application$ActivityLifecycleCallbacks $r13;
        android.app.Activity $r15;
        java.util.concurrent.atomic.AtomicReference $r16;
        java.lang.Object $r17;
        android.view.View $r18;
        android.widget.TextView $r19;
        java.lang.CharSequence $r21;

        r0 := @this: androidx.benchmark.IsolationActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $i0 = <androidx.benchmark.R$layout: int isolation_activity>;

        virtualinvoke r0.<androidx.benchmark.IsolationActivity: void setContentView(int)>($i0);

        virtualinvoke r0.<androidx.benchmark.IsolationActivity: void overridePendingTransition(int,int)>(0, 0);

        $z0 = <androidx.benchmark.IsolationActivity: boolean firstInit>;

        if $z0 == 0 goto label3;

        $r4 = <androidx.benchmark.CpuInfo: androidx.benchmark.CpuInfo INSTANCE>;

        $z4 = virtualinvoke $r4.<androidx.benchmark.CpuInfo: boolean getLocked()>();

        if $z4 != 0 goto label1;

        $r9 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        $z5 = virtualinvoke $r9.<androidx.benchmark.IsolationActivity$Companion: boolean isSustainedPerformanceModeSupported$benchmark_common_release()>();

        if $z5 == 0 goto label1;

        $r10 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        <androidx.benchmark.IsolationActivity: boolean sustainedPerformanceModeInUse> = 1;

     label1:
        $r11 = virtualinvoke r0.<androidx.benchmark.IsolationActivity: android.app.Application getApplication()>();

        $r12 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 activityLifecycleCallbacks>;

        $r13 = (android.app.Application$ActivityLifecycleCallbacks) $r12;

        virtualinvoke $r11.<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>($r13);

        $r14 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 activityLifecycleCallbacks>;

        $r15 = (android.app.Activity) r0;

        virtualinvoke $r14.<androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1: void onActivityCreated(android.app.Activity,android.os.Bundle)>($r15, r1);

        $z6 = <androidx.benchmark.IsolationActivity: boolean sustainedPerformanceModeInUse>;

        if $z6 == 0 goto label2;

        $r6 = <androidx.benchmark.IsolationActivity$onCreate$1: androidx.benchmark.IsolationActivity$onCreate$1 INSTANCE>;

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        staticinvoke <kotlin.concurrent.ThreadsKt: java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object)>(0, 0, null, "BenchSpinThread", 0, $r7, 23, null);

     label2:
        $r5 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        <androidx.benchmark.IsolationActivity: boolean firstInit> = 0;

     label3:
        $r16 = <androidx.benchmark.IsolationActivity: java.util.concurrent.atomic.AtomicReference singleton>;

        $r17 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(r0);

        r2 = (androidx.benchmark.IsolationActivity) $r17;

        if r2 == null goto label4;

        $z2 = r2.<androidx.benchmark.IsolationActivity: boolean destroyed>;

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r2.<androidx.benchmark.IsolationActivity: boolean isFinishing()>();

        if $z3 != 0 goto label4;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Only one IsolationActivity should exist");

        throw $r3;

     label4:
        $i1 = <androidx.benchmark.R$id: int clock_state>;

        $r18 = virtualinvoke r0.<androidx.benchmark.IsolationActivity: android.view.View findViewById(int)>($i1);

        $r19 = (android.widget.TextView) $r18;

        $r20 = <androidx.benchmark.CpuInfo: androidx.benchmark.CpuInfo INSTANCE>;

        $z7 = virtualinvoke $r20.<androidx.benchmark.CpuInfo: boolean getLocked()>();

        if $z7 == 0 goto label5;

        $r21 = (java.lang.CharSequence) "Locked Clocks";

        goto label7;

     label5:
        $z1 = <androidx.benchmark.IsolationActivity: boolean sustainedPerformanceModeInUse>;

        if $z1 == 0 goto label6;

        $r21 = (java.lang.CharSequence) "Sustained Performance Mode";

        goto label7;

     label6:
        $r21 = (java.lang.CharSequence) "";

     label7:
        virtualinvoke $r19.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);

        return;
    }

    protected void onResume()
    {
        androidx.benchmark.IsolationActivity r0;
        androidx.benchmark.IsolationActivity$Companion $r1;

        r0 := @this: androidx.benchmark.IsolationActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r1 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        <androidx.benchmark.IsolationActivity: boolean resumed> = 1;

        return;
    }

    protected void onPause()
    {
        androidx.benchmark.IsolationActivity r0;
        androidx.benchmark.IsolationActivity$Companion $r1;

        r0 := @this: androidx.benchmark.IsolationActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $r1 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        <androidx.benchmark.IsolationActivity: boolean resumed> = 0;

        return;
    }

    protected void onDestroy()
    {
        androidx.benchmark.IsolationActivity r0;

        r0 := @this: androidx.benchmark.IsolationActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        r0.<androidx.benchmark.IsolationActivity: boolean destroyed> = 1;

        return;
    }

    public void finish()
    {
        androidx.benchmark.IsolationActivity r0;

        r0 := @this: androidx.benchmark.IsolationActivity;

        return;
    }

    public final void actuallyFinish()
    {
        androidx.benchmark.IsolationActivity r0;

        r0 := @this: androidx.benchmark.IsolationActivity;

        virtualinvoke r0.<androidx.benchmark.IsolationActivity: void overridePendingTransition(int,int)>(0, 0);

        specialinvoke r0.<android.app.Activity: void finish()>();

        return;
    }

    public static final java.util.concurrent.atomic.AtomicReference access$getSingleton$cp()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = <androidx.benchmark.IsolationActivity: java.util.concurrent.atomic.AtomicReference singleton>;

        return $r0;
    }

    public static final boolean access$getSustainedPerformanceModeInUse$cp()
    {
        boolean $z0;

        $z0 = <androidx.benchmark.IsolationActivity: boolean sustainedPerformanceModeInUse>;

        return $z0;
    }

    public static final boolean access$getResumed$cp()
    {
        boolean $z0;

        $z0 = <androidx.benchmark.IsolationActivity: boolean resumed>;

        return $z0;
    }

    static void <clinit>()
    {
        androidx.benchmark.IsolationActivity$Companion $r0;
        java.util.concurrent.atomic.AtomicReference $r1;
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 $r2;

        $r0 = new androidx.benchmark.IsolationActivity$Companion;

        specialinvoke $r0.<androidx.benchmark.IsolationActivity$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        <androidx.benchmark.IsolationActivity: java.util.concurrent.atomic.AtomicReference singleton> = $r1;

        <androidx.benchmark.IsolationActivity: boolean firstInit> = 1;

        $r2 = new androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        specialinvoke $r2.<androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1: void <init>()>();

        <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 activityLifecycleCallbacks> = $r2;

        return;
    }

androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1
    void <init>()
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onActivityCreated(android.app.Activity, android.os.Bundle)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        androidx.benchmark.IsolationActivity$Companion $r3;
        boolean $z0;
        android.view.Window $r4, $r5;
        int $i0, $i1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r3 = <androidx.benchmark.IsolationActivity: androidx.benchmark.IsolationActivity$Companion Companion>;

        $z0 = virtualinvoke $r3.<androidx.benchmark.IsolationActivity$Companion: boolean getSustainedPerformanceModeInUse$benchmark_common_release()>();

        if $z0 == 0 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        staticinvoke <androidx.benchmark.Api24Kt: void setSustainedPerformanceMode(android.app.Activity,boolean)>(r1, 1);

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 27 goto label2;

        staticinvoke <androidx.benchmark.Api27Kt: void requestDismissKeyguard(android.app.Activity)>(r1);

        staticinvoke <androidx.benchmark.Api27Kt: void setShowWhenLocked(android.app.Activity)>(r1);

        staticinvoke <androidx.benchmark.Api27Kt: void setTurnScreenOn(android.app.Activity)>(r1);

        $r5 = virtualinvoke r1.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r5.<android.view.Window: void addFlags(int)>(128);

        goto label3;

     label2:
        $r4 = virtualinvoke r1.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r4.<android.view.Window: void addFlags(int)>(6815872);

     label3:
        return;
    }

    public void onActivityDestroyed(android.app.Activity)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        return;
    }

    public void onActivitySaveInstanceState(android.app.Activity, android.os.Bundle)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;
        android.os.Bundle r2;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "bundle");

        return;
    }

    public void onActivityStarted(android.app.Activity)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        return;
    }

    public void onActivityStopped(android.app.Activity)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        return;
    }

    public void onActivityPaused(android.app.Activity)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        return;
    }

    public void onActivityResumed(android.app.Activity)
    {
        androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1 r0;
        android.app.Activity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$activityLifecycleCallbacks$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        return;
    }

androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1
<androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1: androidx.benchmark.IsolationActivity $this_apply>
    public final void run()
    {
        androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1 r0;
        androidx.benchmark.IsolationActivity $r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1;

        $r1 = r0.<androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1: androidx.benchmark.IsolationActivity $this_apply>;

        virtualinvoke $r1.<androidx.benchmark.IsolationActivity: void actuallyFinish()>();

        return;
    }

    void <init>(androidx.benchmark.IsolationActivity)
    {
        androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1 r0;
        androidx.benchmark.IsolationActivity r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1;

        r1 := @parameter0: androidx.benchmark.IsolationActivity;

        r0.<androidx.benchmark.IsolationActivity$Companion$finishSingleton$1$1: androidx.benchmark.IsolationActivity $this_apply> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.benchmark.IsolationActivity$Companion
    private void <init>()
    {
        androidx.benchmark.IsolationActivity$Companion r0;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.concurrent.atomic.AtomicReference getSingleton$benchmark_common_release()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        java.util.concurrent.atomic.AtomicReference $r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $r1 = staticinvoke <androidx.benchmark.IsolationActivity: java.util.concurrent.atomic.AtomicReference access$getSingleton$cp()>();

        return $r1;
    }

    public final boolean getSustainedPerformanceModeInUse$benchmark_common_release()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $z0 = staticinvoke <androidx.benchmark.IsolationActivity: boolean access$getSustainedPerformanceModeInUse$cp()>();

        return $z0;
    }

    public final boolean getResumed()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $z0 = staticinvoke <androidx.benchmark.IsolationActivity: boolean access$getResumed$cp()>();

        return $z0;
    }

    public final void launchSingleton()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        android.content.Intent r1, r2, $r4;
        android.app.Instrumentation $r5, $r13;
        android.content.Context $r6;
        java.lang.String $r7, $r9;
        java.lang.Class $r8;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Benchmark", "launching Benchmark IsolationActivity");

        $r5 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r6 = virtualinvoke $r5.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = class "Landroidx/benchmark/IsolationActivity;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r7, $r9);

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        r1 = r2;

        $r13 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r13.<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>(r1);

        return;
    }

    public final void finishSingleton()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        androidx.benchmark.IsolationActivity r1, $r5;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        java.lang.Runnable $r6;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Benchmark", "Benchmark runner being destroyed, tearing down activities");

        $r3 = virtualinvoke r0.<androidx.benchmark.IsolationActivity$Companion: java.util.concurrent.atomic.AtomicReference getSingleton$benchmark_common_release()>();

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        $r5 = (androidx.benchmark.IsolationActivity) $r4;

        if $r5 != null goto label1;

        goto label2;

     label1:
        r1 = $r5;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.benchmark.IsolationActivity)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.benchmark.IsolationActivity$Companion: void finishSingleton$lambda-2$lambda-1(androidx.benchmark.IsolationActivity)>, methodtype: void __METHODTYPE__());

        virtualinvoke r1.<androidx.benchmark.IsolationActivity: void runOnUiThread(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    public final boolean isSustainedPerformanceModeSupported$benchmark_common_release()
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        android.app.Instrumentation r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        r1 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "getInstrumentation()");

        $z0 = staticinvoke <androidx.benchmark.Api24Kt: boolean isSustainedPerformanceModeSupported(android.app.Instrumentation)>(r1);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static final void finishSingleton$lambda-2$lambda-1(androidx.benchmark.IsolationActivity)
    {
        androidx.benchmark.IsolationActivity $r0;

        $r0 := @parameter0: androidx.benchmark.IsolationActivity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this_apply");

        virtualinvoke $r0.<androidx.benchmark.IsolationActivity: void actuallyFinish()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.IsolationActivity$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.IsolationActivity$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.IsolationActivity$Companion: void <init>()>();

        return;
    }

androidx.benchmark.IsolationActivity$onCreate$1
<androidx.benchmark.IsolationActivity$onCreate$1: androidx.benchmark.IsolationActivity$onCreate$1 INSTANCE>
    void <init>()
    {
        androidx.benchmark.IsolationActivity$onCreate$1 r0;

        r0 := @this: androidx.benchmark.IsolationActivity$onCreate$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.benchmark.IsolationActivity$onCreate$1 r0;

        r0 := @this: androidx.benchmark.IsolationActivity$onCreate$1;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(19);

     label1:
        goto label1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.benchmark.IsolationActivity$onCreate$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.benchmark.IsolationActivity$onCreate$1;

        virtualinvoke r0.<androidx.benchmark.IsolationActivity$onCreate$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.benchmark.IsolationActivity$onCreate$1 $r0;

        $r0 = new androidx.benchmark.IsolationActivity$onCreate$1;

        specialinvoke $r0.<androidx.benchmark.IsolationActivity$onCreate$1: void <init>()>();

        <androidx.benchmark.IsolationActivity$onCreate$1: androidx.benchmark.IsolationActivity$onCreate$1 INSTANCE> = $r0;

        return;
    }

