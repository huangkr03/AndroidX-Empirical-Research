androidx.compose.runtime.saveable.SaveableStateHolderImpl
<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion Companion>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map savedStates>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map registryHolders>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateRegistry parentSaveableStateRegistry>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.Saver Saver>
    public void <init>(java.util.Map)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        java.util.Map r1, $r3;
        java.util.LinkedHashMap $r2;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "savedStates");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map savedStates> = r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (java.util.Map) $r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map registryHolders> = $r3;

        return;
    }

    public void <init>(java.util.Map, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.util.LinkedHashMap $r2;
        java.util.Map r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r3 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r3 = (java.util.Map) $r2;

     label1:
        specialinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: void <init>(java.util.Map)>(r3);

        return;
    }

    public final androidx.compose.runtime.saveable.SaveableStateRegistry getParentSaveableStateRegistry()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r1 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateRegistry parentSaveableStateRegistry>;

        return $r1;
    }

    public final void setParentSaveableStateRegistry(androidx.compose.runtime.saveable.SaveableStateRegistry)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateRegistry;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateRegistry parentSaveableStateRegistry> = r1;

        return;
    }

    public void SaveableStateProvider(java.lang.Object, kotlin.jvm.functions.Function2, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        java.lang.Object r1, r5, r7, $r10, $r31;
        kotlin.jvm.functions.Function2 r2, $r19;
        int $i0, $i4, $i5;
        boolean z3, $z7, $z8, $z9, $z11;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r6, r8, $r21;
        byte $b2, $b3, $b6;
        androidx.compose.runtime.Composer$Companion $r9;
        androidx.compose.runtime.ProvidableCompositionLocal $r11;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r12, $r20;
        androidx.compose.runtime.ProvidedValue $r13;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1 $r14;
        kotlin.Unit $r15;
        kotlin.jvm.functions.Function1 $r16;
        androidx.compose.runtime.ScopeUpdateScope $r17;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2 $r18;
        java.lang.StringBuilder $r22, $r23, $r24, $r25;
        java.lang.IllegalArgumentException $r26;
        java.lang.String $r27, $r30;
        androidx.compose.runtime.Composer $r28, $r29;
        androidx.compose.runtime.ProvidedValue[] $r32;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        $r28 := @parameter2: androidx.compose.runtime.Composer;

        $i0 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r29 = interfaceinvoke $r28.<androidx.compose.runtime.Composer: androidx.compose.runtime.Composer startRestartGroup(int)>(-1198538093);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r29, "C(SaveableStateProvider)P(1)75@2967L923:SaveableStateHolder.kt#r2ddri");

        $z7 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z7 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1198538093, $i0, -1, "androidx.compose.runtime.saveable.SaveableStateHolderImpl.SaveableStateProvider (SaveableStateHolder.kt:74)");

     label01:
        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(444418301);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r29, "C(ReusableContent)P(1)145@5313L9:Composables.kt#9igjgp");

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void startReusableGroup(int,java.lang.Object)>(207, r1);

        $b2 = 8 >> 3;

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-642722479);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r29, "C76@3023L321,83@3357L150,87@3520L360:SaveableStateHolder.kt#r2ddri");

        $b6 = 14 & $b2;

        $b3 = $b6 & 11;

        if $b3 != 2 goto label02;

        $z9 = interfaceinvoke $r29.<androidx.compose.runtime.Composer: boolean getSkipping()>();

        if $z9 != 0 goto label08;

     label02:
        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r29, "C(remember):Composables.kt#9igjgp");

        z3 = 0;

        r5 = interfaceinvoke $r29.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r9 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r5 != $r10 goto label06;

        $r20 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateRegistry getParentSaveableStateRegistry()>();

        if $r20 == null goto label03;

        $z11 = interfaceinvoke $r20.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        goto label04;

     label03:
        $z11 = 1;

     label04:
        if $z11 != 0 goto label05;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type of the key ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported. On Android you can only use types which can be stored inside the Bundle.");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new java.lang.IllegalArgumentException;

        $r27 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label05:
        $r21 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        specialinvoke $r21.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl,java.lang.Object)>(r0, r1);

        r6 = $r21;

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r6);

        $r31 = r6;

        goto label07;

     label06:
        $r31 = r5;

     label07:
        r7 = $r31;

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r8 = (androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder) r7;

        $r32 = newarray (androidx.compose.runtime.ProvidedValue)[1];

        $r11 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalSaveableStateRegistry()>();

        $r12 = virtualinvoke r8.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateRegistry getRegistry()>();

        $r13 = virtualinvoke $r11.<androidx.compose.runtime.ProvidableCompositionLocal: androidx.compose.runtime.ProvidedValue provides(java.lang.Object)>($r12);

        $r32[0] = $r13;

        $i4 = 112 & $i0;

        $i5 = 8 | $i4;

        staticinvoke <androidx.compose.runtime.CompositionLocalKt: void CompositionLocalProvider(androidx.compose.runtime.ProvidedValue[],kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r32, r2, $r29, $i5);

        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r14 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1;

        specialinvoke $r14.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl,java.lang.Object,androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder)>(r0, r1, r8);

        $r16 = (kotlin.jvm.functions.Function1) $r14;

        staticinvoke <androidx.compose.runtime.EffectsKt: void DisposableEffect(java.lang.Object,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)>($r15, $r16, $r29, 0);

        goto label09;

     label08:
        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void skipToGroupEnd()>();

     label09:
        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void endReusableGroup()>();

        interfaceinvoke $r29.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $z8 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z8 == 0 goto label10;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label10:
        $r17 = interfaceinvoke $r29.<androidx.compose.runtime.Composer: androidx.compose.runtime.ScopeUpdateScope endRestartGroup()>();

        if $r17 != null goto label11;

        goto label12;

     label11:
        $r18 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2;

        specialinvoke $r18.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl,java.lang.Object,kotlin.jvm.functions.Function2,int)>(r0, r1, r2, $i0);

        $r19 = (kotlin.jvm.functions.Function2) $r18;

        interfaceinvoke $r17.<androidx.compose.runtime.ScopeUpdateScope: void updateScope(kotlin.jvm.functions.Function2)>($r19);

     label12:
        return;
    }

    private final java.util.Map saveAll()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        java.util.Map r1, $r5, $r6, $r10;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r4;
        java.util.Collection $r7;
        boolean $z1, $z2;
        java.lang.Iterable $r8;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r5 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map savedStates>;

        r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMutableMap(java.util.Map)>($r5);

        $r6 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map registryHolders>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        $r8 = (java.lang.Iterable) $r7;

        r2 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder) r3;

        virtualinvoke r4.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: void saveTo(java.util.Map)>(r1);

        goto label1;

     label2:
        $z2 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r10 = null;

        goto label4;

     label3:
        $r10 = r1;

     label4:
        return $r10;
    }

    public void removeState(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;
        java.lang.Object r1, $r4;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r2;
        java.util.Map $r3, $r5;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map registryHolders>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: void setShouldSave(boolean)>(0);

        goto label2;

     label1:
        $r5 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map savedStates>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void <init>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        specialinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: void <init>(java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

    public static final java.util.Map access$getSavedStates$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r1 = $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map savedStates>;

        return $r1;
    }

    public static final androidx.compose.runtime.saveable.Saver access$getSaver$cp()
    {
        androidx.compose.runtime.saveable.Saver $r0;

        $r0 = <androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.Saver Saver>;

        return $r0;
    }

    public static final java.util.Map access$getRegistryHolders$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r1 = $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map registryHolders>;

        return $r1;
    }

    public static final java.util.Map access$saveAll(androidx.compose.runtime.saveable.SaveableStateHolderImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r0;
        java.util.Map $r1;

        $r0 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r1 = specialinvoke $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map saveAll()>();

        return $r1;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion $r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 $r1;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 $r2;
        kotlin.jvm.functions.Function1 $r3;
        kotlin.jvm.functions.Function2 $r4;
        androidx.compose.runtime.saveable.Saver $r5;

        $r0 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion;

        specialinvoke $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion Companion> = $r0;

        $r1 = <androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r1;

        $r2 = <androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r5 = staticinvoke <androidx.compose.runtime.saveable.SaverKt: androidx.compose.runtime.saveable.Saver Saver(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)>($r4, $r3);

        <androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.Saver Saver> = $r5;

        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 INSTANCE>
    void <init>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 r0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.util.Map invoke(androidx.compose.runtime.saveable.SaverScope, androidx.compose.runtime.saveable.SaveableStateHolderImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 r0;
        androidx.compose.runtime.saveable.SaverScope $r1;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r2;
        java.util.Map $r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaverScope;

        r2 := @parameter1: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$Saver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "it");

        $r3 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$saveAll(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>(r2);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 r0;
        java.lang.Object r1, r2;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r3;
        androidx.compose.runtime.saveable.SaverScope $r4;
        java.util.Map $r5;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.saveable.SaverScope) r1;

        $r3 = (androidx.compose.runtime.saveable.SaveableStateHolderImpl) r2;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1: java.util.Map invoke(androidx.compose.runtime.saveable.SaverScope,androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 $r0;

        $r0 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1;

        specialinvoke $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1: void <init>()>();

        <androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 INSTANCE>
    void <init>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 r0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.runtime.saveable.SaveableStateHolderImpl invoke(java.util.Map)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 r0;
        java.util.Map r1;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r2;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        specialinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: void <init>(java.util.Map)>(r1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 r0;
        java.lang.Object r1;
        java.util.Map $r2;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl invoke(java.util.Map)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 $r0;

        $r0 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2;

        specialinvoke $r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2: void <init>()>();

        <androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion$Saver$2 INSTANCE> = $r0;

        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion
    private void <init>()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion r0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.saveable.Saver getSaver()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion r0;
        androidx.compose.runtime.saveable.Saver $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion;

        $r1 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.Saver access$getSaver$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$Companion: void <init>()>();

        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>
    void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1 r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r2;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: androidx.compose.runtime.saveable.SaveableStateRegistry getParentSaveableStateRegistry()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateRegistry: boolean canBeSaved(java.lang.Object)>(r1);

        goto label2;

     label1:
        $z0 = 1;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1: java.lang.Boolean invoke(java.lang.Object)>(r1);

        return $r2;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: boolean shouldSave>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateRegistry registry>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>
    public void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl, java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r1, $r3, $r8;
        java.lang.Object r2, $r5, $r6;
        java.util.Map $r4, $r9;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1 $r7;
        kotlin.jvm.functions.Function1 $r10;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r11;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "key");

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key> = r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: boolean shouldSave> = 1;

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r4 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getSavedStates$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r3);

        $r5 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r9 = (java.util.Map) $r6;

        $r7 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1;

        $r8 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        specialinvoke $r7.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder$registry$1: void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r8);

        $r10 = (kotlin.jvm.functions.Function1) $r7;

        $r11 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateRegistryKt: androidx.compose.runtime.saveable.SaveableStateRegistry SaveableStateRegistry(java.util.Map,kotlin.jvm.functions.Function1)>($r9, $r10);

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateRegistry registry> = $r11;

        return;
    }

    public final java.lang.Object getKey()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        $r1 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key>;

        return $r1;
    }

    public final boolean getShouldSave()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        $z0 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: boolean shouldSave>;

        return $z0;
    }

    public final void setShouldSave(boolean)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        boolean z0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: boolean shouldSave> = z0;

        return;
    }

    public final androidx.compose.runtime.saveable.SaveableStateRegistry getRegistry()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r1;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        $r1 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateRegistry registry>;

        return $r1;
    }

    public final void saveTo(java.util.Map)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r0;
        java.util.Map r1, r2;
        boolean $z0, $z1;
        androidx.compose.runtime.saveable.SaveableStateRegistry $r3;
        java.lang.Object $r4, $r6;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        $z0 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: boolean shouldSave>;

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: androidx.compose.runtime.saveable.SaveableStateRegistry registry>;

        r2 = interfaceinvoke $r3.<androidx.compose.runtime.saveable.SaveableStateRegistry: java.util.Map performSave()>();

        $z1 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        goto label2;

     label1:
        $r4 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: java.lang.Object key>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

     label2:
        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder$inlined>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined>
    public void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder, androidx.compose.runtime.saveable.SaveableStateHolderImpl, java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1 r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder r1;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl r2;
        java.lang.Object r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1;

        r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        r2 := @parameter1: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        r3 := @parameter2: java.lang.Object;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder$inlined> = r1;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0> = r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dispose()
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1 r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r1, $r4;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1;

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder$inlined>;

        $r1 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r3 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getSavedStates$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r1);

        virtualinvoke $r2.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder: void saveTo(java.util.Map)>($r3);

        $r4 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r5 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getRegistryHolders$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r4);

        $r6 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: java.lang.Object $key$inlined>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        return;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder>
    void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl, java.lang.Object, androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1 r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r1;
        java.lang.Object $r2;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0> = $r1;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key> = $r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1 r0;
        androidx.compose.runtime.DisposableEffectScope $r1, r25;
        java.lang.Object r2, $r5, $r8, $r13, r23;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r3, $r6, $r10, $r27;
        java.util.Map $r4, $r7, $r11;
        boolean $z1, $z2, z3;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $r12, r26;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1 $r15;
        androidx.compose.runtime.DisposableEffectResult $r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.String $r22, $r24;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1;

        $r1 := @parameter0: androidx.compose.runtime.DisposableEffectScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$DisposableEffect");

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r4 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getRegistryHolders$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r3);

        $r5 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z3 = $z2;

        r23 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>;

        if z3 != 0 goto label3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was used multiple times ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label3:
        $r6 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r7 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getSavedStates$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r6);

        $r8 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

        $r10 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        $r11 = staticinvoke <androidx.compose.runtime.saveable.SaveableStateHolderImpl: java.util.Map access$getRegistryHolders$p(androidx.compose.runtime.saveable.SaveableStateHolderImpl)>($r10);

        $r13 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>;

        $r12 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r12);

        r25 = $r1;

        r26 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder $registryHolder>;

        $r27 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.saveable.SaveableStateHolderImpl this$0>;

        r2 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: java.lang.Object $key>;

        $r15 = new androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1;

        specialinvoke $r15.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1$invoke$$inlined$onDispose$1: void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl$RegistryHolder,androidx.compose.runtime.saveable.SaveableStateHolderImpl,java.lang.Object)>(r26, $r27, r2);

        $r16 = (androidx.compose.runtime.DisposableEffectResult) $r15;

        return $r16;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.DisposableEffectScope $r2;
        androidx.compose.runtime.DisposableEffectResult $r3;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.runtime.DisposableEffectScope) r1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$1$1: androidx.compose.runtime.DisposableEffectResult invoke(androidx.compose.runtime.DisposableEffectScope)>($r2);

        return $r3;
    }

androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl $tmp0_rcvr>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: java.lang.Object $key>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content>
<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: int $$changed>
    void <init>(androidx.compose.runtime.saveable.SaveableStateHolderImpl, java.lang.Object, kotlin.jvm.functions.Function2, int)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2 r0;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r1;
        java.lang.Object $r2;
        kotlin.jvm.functions.Function2 $r3;
        int $i0;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaveableStateHolderImpl;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.jvm.functions.Function2;

        $i0 := @parameter3: int;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl $tmp0_rcvr> = $r1;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: java.lang.Object $key> = $r2;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content> = $r3;

        r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: int $$changed> = $i0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final void invoke(androidx.compose.runtime.Composer, int)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2 r0;
        androidx.compose.runtime.Composer $r1;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        androidx.compose.runtime.saveable.SaveableStateHolderImpl $r4;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2;

        $r1 := @parameter0: androidx.compose.runtime.Composer;

        $i0 := @parameter1: int;

        $r4 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: androidx.compose.runtime.saveable.SaveableStateHolderImpl $tmp0_rcvr>;

        $r3 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: java.lang.Object $key>;

        $r2 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: kotlin.jvm.functions.Function2 $content>;

        $i1 = r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: int $$changed>;

        $i2 = $i1 | 1;

        virtualinvoke $r4.<androidx.compose.runtime.saveable.SaveableStateHolderImpl: void SaveableStateProvider(java.lang.Object,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)>($r3, $r2, $r1, $i2);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.runtime.Composer $r4;
        int $i0;
        kotlin.Unit $r5;

        r0 := @this: androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.Composer) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.compose.runtime.saveable.SaveableStateHolderImpl$SaveableStateProvider$2: void invoke(androidx.compose.runtime.Composer,int)>($r4, $i0);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r5;
    }

