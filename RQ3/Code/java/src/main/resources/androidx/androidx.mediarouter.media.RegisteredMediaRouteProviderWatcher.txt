androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.Context mContext>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback mCallback>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.pm.PackageManager mPackageManager>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.lang.Runnable mScanPackagesRunnable>
    void <init>(android.content.Context, androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        android.content.Context r1;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback r2;
        java.util.ArrayList $r3;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1 $r4;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2 $r5;
        android.os.Handler $r6;
        android.content.pm.PackageManager $r7;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders> = $r3;

        $r4 = new androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1;

        specialinvoke $r4.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher)>(r0);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver> = $r4;

        $r5 = new androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2;

        specialinvoke $r5.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2: void <init>(androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher)>(r0);

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.lang.Runnable mScanPackagesRunnable> = $r5;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.Context mContext> = r1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback mCallback> = r2;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.pm.PackageManager mPackageManager> = $r7;

        return;
    }

    public void start()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        android.content.IntentFilter r1, $r2;
        boolean $z0;
        android.os.Handler $r3, $r8;
        android.content.BroadcastReceiver $r4;
        android.content.Context $r5;
        java.lang.Runnable $r7;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning>;

        if $z0 != 0 goto label1;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning> = 1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REPLACED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.Context mContext>;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver>;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r4, r1, null, $r3);

        $r8 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler>;

        $r7 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.lang.Runnable mScanPackagesRunnable>;

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

     label1:
        return;
    }

    public void rescan()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler>;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.lang.Runnable mScanPackagesRunnable>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void stop()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        boolean $z0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;
        java.lang.Runnable $r3;
        android.os.Handler $r4;
        java.util.ArrayList $r5, $r6;
        int $i0, i1;
        java.lang.Object $r7;
        androidx.mediarouter.media.RegisteredMediaRouteProvider $r8;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning>;

        if $z0 == 0 goto label2;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning> = 0;

        $r2 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.Context mContext>;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.BroadcastReceiver mScanPackagesReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.os.Handler mHandler>;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.lang.Runnable mScanPackagesRunnable>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r6 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (androidx.mediarouter.media.RegisteredMediaRouteProvider) $r7;

        virtualinvoke $r8.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void stop()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    void scanPackages()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        android.content.Intent r1, r34;
        android.content.pm.ServiceInfo r2;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        boolean $z0, $z2, $z3, $z4;
        android.content.pm.PackageManager $r5;
        java.util.List $r6, r37;
        java.util.ArrayList $r7, $r8, $r9, $r12, $r16, $r18, $r25, r33;
        java.lang.Object $r10, $r13, $r17, r27;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback $r11, $r26;
        java.lang.String $r14, $r15, $r21, $r22;
        android.content.Context $r23;
        androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback $r24;
        java.util.Iterator r28;
        android.content.pm.ResolveInfo r29;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r30, r31, r32, r36;
        android.content.ComponentName r35;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        $z0 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean mRunning>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r33 = new java.util.ArrayList;

        specialinvoke r33.<java.util.ArrayList: void <init>()>();

        r27 = r33;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 30 goto label02;

        r27 = virtualinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.List getMediaRoute2ProviderServices()>();

     label02:
        i6 = 0;

        r34 = new android.content.Intent;

        specialinvoke r34.<android.content.Intent: void <init>(java.lang.String)>("android.media.MediaRouteProviderService");

        r1 = r34;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.pm.PackageManager mPackageManager>;

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r1, 0);

        r28 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r13 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.content.pm.ResolveInfo) $r13;

        r2 = r29.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        if r2 != null goto label04;

        goto label03;

     label04:
        $z2 = staticinvoke <androidx.mediarouter.media.MediaRouter: boolean isMediaTransferEnabled()>();

        if $z2 == 0 goto label05;

        r37 = (java.util.List) r27;

        $z3 = staticinvoke <androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: boolean listContainsServiceInfo(java.util.List,android.content.pm.ServiceInfo)>(r37, r2);

        if $z3 == 0 goto label05;

        goto label03;

     label05:
        $r15 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r14 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        i0 = specialinvoke r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: int findProvider(java.lang.String,java.lang.String)>($r15, $r14);

        if i0 >= 0 goto label06;

        r36 = new androidx.mediarouter.media.RegisteredMediaRouteProvider;

        $r23 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.Context mContext>;

        r35 = new android.content.ComponentName;

        $r22 = r2.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r21 = r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke r35.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r22, $r21);

        specialinvoke r36.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void <init>(android.content.Context,android.content.ComponentName)>($r23, r35);

        r30 = r36;

        $r24 = dynamicinvoke "onControllerReleasedByProvider" <androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback (androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher,androidx.mediarouter.media.RegisteredMediaRouteProvider)>(r0, r30) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.mediarouter.media.MediaRouteProvider$RouteController), methodhandle: "REF_INVOKE_SPECIAL" <androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: void lambda$scanPackages$0(androidx.mediarouter.media.RegisteredMediaRouteProvider,androidx.mediarouter.media.MediaRouteProvider$RouteController)>, methodtype: void __METHODTYPE__(androidx.mediarouter.media.MediaRouteProvider$RouteController));

        virtualinvoke r30.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void setControllerCallback(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback)>($r24);

        virtualinvoke r30.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void start()>();

        $r25 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $i5 = i6;

        i6 = i6 + 1;

        virtualinvoke $r25.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, r30);

        $r26 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback mCallback>;

        interfaceinvoke $r26.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void addProvider(androidx.mediarouter.media.MediaRouteProvider)>(r30);

        goto label07;

     label06:
        if i0 < i6 goto label07;

        $r16 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r31 = (androidx.mediarouter.media.RegisteredMediaRouteProvider) $r17;

        virtualinvoke r31.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void start()>();

        virtualinvoke r31.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void rebindIfDisconnected()>();

        $r18 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $i4 = i6;

        i6 = i6 + 1;

        staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>($r18, i0, $i4);

     label07:
        goto label03;

     label08:
        $r7 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i6 >= $i2 goto label10;

        $r8 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i7 = $i3 - 1;

     label09:
        if i7 < i6 goto label10;

        $r9 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r32 = (androidx.mediarouter.media.RegisteredMediaRouteProvider) $r10;

        $r11 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback mCallback>;

        interfaceinvoke $r11.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void removeProvider(androidx.mediarouter.media.MediaRouteProvider)>(r32);

        $r12 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>(r32);

        virtualinvoke r32.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void setControllerCallback(androidx.mediarouter.media.RegisteredMediaRouteProvider$ControllerCallback)>(null);

        virtualinvoke r32.<androidx.mediarouter.media.RegisteredMediaRouteProvider: void stop()>();

        i7 = i7 + -1;

        goto label09;

     label10:
        return;
    }

    static boolean listContainsServiceInfo(java.util.List, android.content.pm.ServiceInfo)
    {
        java.util.List r0;
        android.content.pm.ServiceInfo r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4;
        java.lang.String $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: android.content.pm.ServiceInfo;

        if r1 == null goto label1;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.pm.ServiceInfo) $r4;

        $r6 = r1.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r5 = r3.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label4;

        $r8 = r1.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r7 = r3.<android.content.pm.ServiceInfo: java.lang.String name>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    java.util.List getMediaRoute2ProviderServices()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        android.content.Intent r1, $r5;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.content.pm.ResolveInfo r4;
        android.content.pm.PackageManager $r7;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;
        android.content.pm.ServiceInfo $r10;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.MediaRoute2ProviderService");

        r1 = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: android.content.pm.PackageManager mPackageManager>;

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r1, 0);

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.pm.ResolveInfo) $r9;

        $r10 = r4.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return r2;
    }

    private int findProvider(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        java.lang.String r1, r2;
        int i0, i1;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: java.util.ArrayList mProviders>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (androidx.mediarouter.media.RegisteredMediaRouteProvider) $r6;

        $z0 = virtualinvoke r3.<androidx.mediarouter.media.RegisteredMediaRouteProvider: boolean hasComponentName(java.lang.String,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void lambda$scanPackages$0(androidx.mediarouter.media.RegisteredMediaRouteProvider, androidx.mediarouter.media.MediaRouteProvider$RouteController)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r0;
        androidx.mediarouter.media.RegisteredMediaRouteProvider r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProvider;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback mCallback>;

        interfaceinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void releaseProviderController(androidx.mediarouter.media.RegisteredMediaRouteProvider,androidx.mediarouter.media.MediaRouteProvider$RouteController)>(r1, r2);

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher $r3;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$1: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0>;

        virtualinvoke $r3.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: void scanPackages()>();

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0>
    void <init>(androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher)
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2;

        r1 := @parameter0: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher;

        r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2 r0;
        androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher $r1;

        r0 := @this: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2;

        $r1 = r0.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$2: androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher this$0>;

        virtualinvoke $r1.<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher: void scanPackages()>();

        return;
    }

androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void addProvider(androidx.mediarouter.media.MediaRouteProvider)>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void removeProvider(androidx.mediarouter.media.MediaRouteProvider)>
<androidx.mediarouter.media.RegisteredMediaRouteProviderWatcher$Callback: void releaseProviderController(androidx.mediarouter.media.RegisteredMediaRouteProvider,androidx.mediarouter.media.MediaRouteProvider$RouteController)>
