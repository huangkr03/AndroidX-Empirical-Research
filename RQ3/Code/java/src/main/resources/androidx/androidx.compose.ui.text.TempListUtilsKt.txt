androidx.compose.ui.text.TempListUtilsKt
    public static final java.util.List fastFilter(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r7;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList r2, $r6;
        int i0, $i1, i2;
        java.lang.Object r4, r5, $r8;
        java.lang.Boolean $r9;
        boolean $z3;
        java.util.Collection $r10;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r6;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = r4;

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r9 = (java.lang.Boolean) $r8;

        $z3 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label2;

        $r10 = (java.util.Collection) r2;

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r7 = (java.util.List) r2;

        return $r7;
    }

    public static final java.util.List fastDistinctBy(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r10;
        kotlin.jvm.functions.Function1 r1;
        java.util.HashSet r2, $r8;
        java.util.ArrayList r3, $r9;
        int i0, $i1, $i2, i3;
        java.lang.Object r5, r6, r7;
        boolean $z3;
        java.util.Collection $r11;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        $r8 = new java.util.HashSet;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.HashSet: void <init>(int)>($i1);

        r2 = $r8;

        $r9 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = $r9;

        i3 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i3 >= i0 goto label3;

        r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i3);

        r6 = r5;

        r7 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        $z3 = virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r7);

        if $z3 == 0 goto label2;

        $r11 = (java.util.Collection) r3;

        interfaceinvoke $r11.<java.util.Collection: boolean add(java.lang.Object)>(r6);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r10 = (java.util.List) r3;

        return $r10;
    }

    public static final java.lang.Object fastMinByOrNull(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, i2;
        java.lang.Object r2, $r4, $r5, r6;
        java.lang.Comparable r3, r7;
        boolean $z1;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "selector");

        $z1 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return null;

     label1:
        r6 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r6);

        r7 = (java.lang.Comparable) $r4;

        i2 = 1;

        i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        if i2 > i0 goto label4;

     label2:
        r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        r3 = (java.lang.Comparable) $r5;

        $i1 = interfaceinvoke r7.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);

        if $i1 <= 0 goto label3;

        r6 = r2;

        r7 = r3;

     label3:
        if i2 == i0 goto label4;

        i2 = i2 + 1;

        goto label2;

     label4:
        return r6;
    }

    public static final java.lang.Object fastFold(java.util.List, java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.util.List $r0;
        java.lang.Object r1, r4, r5, r6;
        kotlin.jvm.functions.Function2 r2;
        int i0, i1;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "operation");

        r6 = r1;

        i1 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label2;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = r4;

        r6 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r6, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r6;
    }

    public static final java.util.List fastFlatMap(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r8;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList r2, $r7;
        int i0, $i1, i2;
        java.lang.Object r4, r5, $r9;
        java.lang.Iterable r6;
        java.util.Collection $r10;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transform");

        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r7;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label2;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = r4;

        $r9 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        r6 = (java.lang.Iterable) $r9;

        $r10 = (java.util.Collection) r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r10, r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = (java.util.List) r2;

        return $r8;
    }

    public static final java.util.List fastFilterNot(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r7;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList r2, $r6;
        int i0, $i1, i2;
        java.lang.Object r4, r5, $r8;
        java.lang.Boolean $r9;
        boolean $z3;
        java.util.Collection $r10;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r6 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r6;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = r4;

        $r8 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r5);

        $r9 = (java.lang.Boolean) $r8;

        $z3 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label2;

        $r10 = (java.util.Collection) r2;

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r7 = (java.util.List) r2;

        return $r7;
    }

    public static final java.util.List fastFilterNotNull(java.util.List)
    {
        java.util.List $r0, $r6;
        java.util.ArrayList r1, $r5;
        int i0, $i1, i2;
        java.lang.Object r3, r4;
        java.util.Collection $r7;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r1 = $r5;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = r3;

        if r4 == null goto label2;

        $r7 = (java.util.Collection) r1;

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>(r4);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r6 = (java.util.List) r1;

        return $r6;
    }

    public static final java.util.List fastTakeWhile(java.util.List, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0, $r5;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList r2, $r4;
        int i0, $i1, i2;
        java.lang.Object r3, $r6;
        java.lang.Boolean $r7;
        boolean $z1;
        java.util.Collection $r8;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r4 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r4;

        i2 = 0;

        i0 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i2 >= i0 goto label3;

        r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r8 = (java.util.Collection) r2;

        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r5 = (java.util.List) r2;

        return $r5;
    }

    public static final java.util.List fastDrop(java.util.List, int)
    {
        java.util.List $r0, $r2, $r6, $r7;
        int i0, i1, i2, $i3, i4;
        java.util.ArrayList $r1;
        java.util.Collection $r3;
        java.lang.Object $r4, $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.String $r13, $r14;
        boolean $z1;

        $r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        if i0 != 0 goto label4;

        return $r0;

     label4:
        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        i1 = $i3 - i0;

        if i1 > 0 goto label5;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r7;

     label5:
        if i1 != 1 goto label6;

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r0);

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r5);

        return $r6;

     label6:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i1);

        i4 = i0;

        i2 = interfaceinvoke $r0.<java.util.List: int size()>();

     label7:
        if i4 >= i2 goto label8;

        $r3 = (java.util.Collection) $r1;

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label7;

     label8:
        $r2 = (java.util.List) $r1;

        return $r2;
    }

    public static final java.lang.String fastJoinToString(java.util.List, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        java.lang.CharSequence r1, r2, r3, r4;
        int i0;
        kotlin.jvm.functions.Function1 r5;
        java.lang.StringBuilder $r6, $r9;
        java.lang.Appendable $r7, $r8;
        java.lang.String $r10;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: java.lang.CharSequence;

        r3 := @parameter3: java.lang.CharSequence;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.CharSequence;

        r5 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "truncated");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = (java.lang.Appendable) $r6;

        $r8 = staticinvoke <androidx.compose.ui.text.TempListUtilsKt: java.lang.Appendable fastJoinTo(java.util.List,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r7, r1, r2, r3, i0, r4, r5);

        $r9 = (java.lang.StringBuilder) $r8;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "fastJoinTo(StringBuilder\u2026form)\n        .toString()");

        return $r10;
    }

    public static java.lang.String fastJoinToString$default(java.util.List, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.CharSequence r3, r4, r5, r6;
        kotlin.jvm.functions.Function1 r7;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.CharSequence;

        r4 := @parameter2: java.lang.CharSequence;

        r5 := @parameter3: java.lang.CharSequence;

        i7 := @parameter4: int;

        r6 := @parameter5: java.lang.CharSequence;

        r7 := @parameter6: kotlin.jvm.functions.Function1;

        i0 := @parameter7: int;

        r1 := @parameter8: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = (java.lang.CharSequence) ", ";

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r4 = (java.lang.CharSequence) "";

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r5 = (java.lang.CharSequence) "";

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        i7 = -1;

     label4:
        $i5 = i0 & 16;

        if $i5 == 0 goto label5;

        r6 = (java.lang.CharSequence) "...";

     label5:
        $i6 = i0 & 32;

        if $i6 == 0 goto label6;

        r7 = null;

     label6:
        $r2 = staticinvoke <androidx.compose.ui.text.TempListUtilsKt: java.lang.String fastJoinToString(java.util.List,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>(r0, r3, r4, r5, i7, r6, r7);

        return $r2;
    }

    private static final java.lang.Appendable fastJoinTo(java.util.List, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.util.List $r0;
        java.lang.Appendable r1;
        java.lang.CharSequence r2, r3, r4, r5;
        int i0, i1, i2, i3;
        kotlin.jvm.functions.Function1 r6;
        java.lang.Object r7;

        $r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Appendable;

        r2 := @parameter2: java.lang.CharSequence;

        r3 := @parameter3: java.lang.CharSequence;

        r4 := @parameter4: java.lang.CharSequence;

        i0 := @parameter5: int;

        r5 := @parameter6: java.lang.CharSequence;

        r6 := @parameter7: kotlin.jvm.functions.Function1;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r3);

        i2 = 0;

        i3 = 0;

        i1 = interfaceinvoke $r0.<java.util.List: int size()>();

     label1:
        if i3 >= i1 goto label6;

        r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i3);

        i2 = i2 + 1;

        if i2 <= 1 goto label2;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r2);

     label2:
        if i0 < 0 goto label3;

        if i2 > i0 goto label4;

     label3:
        staticinvoke <androidx.compose.ui.text.TempListUtilsKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)>(r1, r7, r6);

        goto label5;

     label4:
        goto label6;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        if i0 < 0 goto label7;

        if i2 <= i0 goto label7;

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r5);

     label7:
        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(r4);

        return r1;
    }

    static java.lang.Appendable fastJoinTo$default(java.util.List, java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.util.List r0;
        java.lang.Appendable r1, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.Object r2;
        java.lang.CharSequence r4, r5, r6, r7;
        kotlin.jvm.functions.Function1 r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.Appendable;

        r4 := @parameter2: java.lang.CharSequence;

        r5 := @parameter3: java.lang.CharSequence;

        r6 := @parameter4: java.lang.CharSequence;

        i7 := @parameter5: int;

        r7 := @parameter6: java.lang.CharSequence;

        r8 := @parameter7: kotlin.jvm.functions.Function1;

        i0 := @parameter8: int;

        r2 := @parameter9: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = (java.lang.CharSequence) ", ";

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = (java.lang.CharSequence) "";

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        r6 = (java.lang.CharSequence) "";

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        i7 = -1;

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        r7 = (java.lang.CharSequence) "...";

     label5:
        $i6 = i0 & 64;

        if $i6 == 0 goto label6;

        r8 = null;

     label6:
        $r3 = staticinvoke <androidx.compose.ui.text.TempListUtilsKt: java.lang.Appendable fastJoinTo(java.util.List,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>(r0, r1, r4, r5, r6, i7, r7, r8);

        return $r3;
    }

    private static final void appendElement(java.lang.Appendable, java.lang.Object, kotlin.jvm.functions.Function1)
    {
        java.lang.Appendable $r0;
        java.lang.Object r1, $r10;
        kotlin.jvm.functions.Function1 r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        java.lang.CharSequence $r4, $r8, $r11;
        java.lang.Character $r6;
        char $c0;

        $r0 := @parameter0: java.lang.Appendable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        if r2 == null goto label1;

        $r10 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r11 = (java.lang.CharSequence) $r10;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r11);

        goto label6;

     label1:
        if r1 != null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = r1 instanceof java.lang.CharSequence;

     label3:
        if $z1 == 0 goto label4;

        $r8 = (java.lang.CharSequence) r1;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r8);

        goto label6;

     label4:
        $z0 = r1 instanceof java.lang.Character;

        if $z0 == 0 goto label5;

        $r6 = (java.lang.Character) r1;

        $c0 = virtualinvoke $r6.<java.lang.Character: char charValue()>();

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(char)>($c0);

        goto label6;

     label5:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r4 = (java.lang.CharSequence) $r3;

        interfaceinvoke $r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label6:
        return;
    }

