androidx.datastore.core.SharedCounter
<androidx.datastore.core.SharedCounter: androidx.datastore.core.SharedCounter$Factory Factory>
<androidx.datastore.core.SharedCounter: long mappedAddress>
<androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter nativeSharedCounter>
    private void <init>(long)
    {
        androidx.datastore.core.SharedCounter r0;
        long l0;

        r0 := @this: androidx.datastore.core.SharedCounter;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.datastore.core.SharedCounter: long mappedAddress> = l0;

        return;
    }

    public final int getValue()
    {
        androidx.datastore.core.SharedCounter r0;
        long $l0;
        androidx.datastore.core.NativeSharedCounter $r1;
        int $i1;

        r0 := @this: androidx.datastore.core.SharedCounter;

        $r1 = <androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter nativeSharedCounter>;

        $l0 = r0.<androidx.datastore.core.SharedCounter: long mappedAddress>;

        $i1 = virtualinvoke $r1.<androidx.datastore.core.NativeSharedCounter: int nativeGetCounterValue(long)>($l0);

        return $i1;
    }

    public final int incrementAndGetValue()
    {
        androidx.datastore.core.SharedCounter r0;
        long $l0;
        androidx.datastore.core.NativeSharedCounter $r1;
        int $i1;

        r0 := @this: androidx.datastore.core.SharedCounter;

        $r1 = <androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter nativeSharedCounter>;

        $l0 = r0.<androidx.datastore.core.SharedCounter: long mappedAddress>;

        $i1 = virtualinvoke $r1.<androidx.datastore.core.NativeSharedCounter: int nativeIncrementAndGetCounterValue(long)>($l0);

        return $i1;
    }

    public static final androidx.datastore.core.NativeSharedCounter access$getNativeSharedCounter$cp()
    {
        androidx.datastore.core.NativeSharedCounter $r0;

        $r0 = <androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter nativeSharedCounter>;

        return $r0;
    }

    public void <init>(long, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.core.SharedCounter r0;
        long l0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.core.SharedCounter;

        l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.core.SharedCounter: void <init>(long)>(l0);

        return;
    }

    static void <clinit>()
    {
        androidx.datastore.core.SharedCounter$Factory $r0;
        androidx.datastore.core.NativeSharedCounter $r1;

        $r0 = new androidx.datastore.core.SharedCounter$Factory;

        specialinvoke $r0.<androidx.datastore.core.SharedCounter$Factory: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.datastore.core.SharedCounter: androidx.datastore.core.SharedCounter$Factory Factory> = $r0;

        $r1 = new androidx.datastore.core.NativeSharedCounter;

        specialinvoke $r1.<androidx.datastore.core.NativeSharedCounter: void <init>()>();

        <androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter nativeSharedCounter> = $r1;

        return;
    }

androidx.datastore.core.SharedCounter$Factory
    private void <init>()
    {
        androidx.datastore.core.SharedCounter$Factory r0;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.datastore.core.NativeSharedCounter getNativeSharedCounter$datastore_core_release()
    {
        androidx.datastore.core.SharedCounter$Factory r0;
        androidx.datastore.core.NativeSharedCounter $r1;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        $r1 = staticinvoke <androidx.datastore.core.SharedCounter: androidx.datastore.core.NativeSharedCounter access$getNativeSharedCounter$cp()>();

        return $r1;
    }

    public final void loadLib()
    {
        androidx.datastore.core.SharedCounter$Factory r0;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("datastore_shared_counter");

        return;
    }

    private final androidx.datastore.core.SharedCounter createCounterFromFd(android.os.ParcelFileDescriptor, boolean)
    {
        androidx.datastore.core.SharedCounter$Factory r0;
        android.os.ParcelFileDescriptor r1;
        boolean z0;
        int i0, $i2;
        long l1;
        androidx.datastore.core.NativeSharedCounter $r2, $r3;
        byte $b3;
        java.io.IOException r7, r8;
        androidx.datastore.core.SharedCounter r9;
        java.lang.Throwable r10, r11;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r1.<android.os.ParcelFileDescriptor: int getFd()>();

        $r2 = virtualinvoke r0.<androidx.datastore.core.SharedCounter$Factory: androidx.datastore.core.NativeSharedCounter getNativeSharedCounter$datastore_core_release()>();

        $i2 = virtualinvoke $r2.<androidx.datastore.core.NativeSharedCounter: int nativeTruncateFile(int)>(i0);

        if $i2 == 0 goto label1;

        r7 = new java.io.IOException;

        specialinvoke r7.<java.io.IOException: void <init>(java.lang.String)>("Failed to truncate counter file");

        r10 = (java.lang.Throwable) r7;

        throw r10;

     label1:
        $r3 = virtualinvoke r0.<androidx.datastore.core.SharedCounter$Factory: androidx.datastore.core.NativeSharedCounter getNativeSharedCounter$datastore_core_release()>();

        l1 = virtualinvoke $r3.<androidx.datastore.core.NativeSharedCounter: long nativeCreateSharedCounter(int,boolean)>(i0, z0);

        $b3 = l1 cmp 0L;

        if $b3 >= 0 goto label2;

        r8 = new java.io.IOException;

        specialinvoke r8.<java.io.IOException: void <init>(java.lang.String)>("Failed to mmap counter file");

        r11 = (java.lang.Throwable) r8;

        throw r11;

     label2:
        r9 = new androidx.datastore.core.SharedCounter;

        specialinvoke r9.<androidx.datastore.core.SharedCounter: void <init>(long,kotlin.jvm.internal.DefaultConstructorMarker)>(l1, null);

        return r9;
    }

    public final androidx.datastore.core.SharedCounter create$datastore_core_release(boolean, kotlin.jvm.functions.Function0)
    {
        androidx.datastore.core.SharedCounter$Factory r0;
        boolean z0;
        kotlin.jvm.functions.Function0 r1;
        java.io.File r2;
        java.lang.Object $r3;
        java.lang.Throwable $r4, r7;
        android.os.ParcelFileDescriptor r5;
        androidx.datastore.core.SharedCounter r6;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        z0 := @parameter0: boolean;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "produceFile");

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r2 = (java.io.File) $r3;

        r5 = null;

     label1:
        r5 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>(r2, 939524096);

        r6 = specialinvoke r0.<androidx.datastore.core.SharedCounter$Factory: androidx.datastore.core.SharedCounter createCounterFromFd(android.os.ParcelFileDescriptor,boolean)>(r5, z0);

     label2:
        if r5 == null goto label3;

        virtualinvoke r5.<android.os.ParcelFileDescriptor: void close()>();

        goto label3;

     label3:
        return r6;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

     label5:
        if r5 == null goto label6;

        virtualinvoke r5.<android.os.ParcelFileDescriptor: void close()>();

        goto label6;

     label6:
        throw r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static androidx.datastore.core.SharedCounter create$datastore_core_release$default(androidx.datastore.core.SharedCounter$Factory, boolean, kotlin.jvm.functions.Function0, int, java.lang.Object)
    {
        androidx.datastore.core.SharedCounter$Factory r0;
        kotlin.jvm.functions.Function0 r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.datastore.core.SharedCounter $r3;
        boolean z0;

        r0 := @parameter0: androidx.datastore.core.SharedCounter$Factory;

        z0 := @parameter1: boolean;

        r1 := @parameter2: kotlin.jvm.functions.Function0;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        $r3 = virtualinvoke r0.<androidx.datastore.core.SharedCounter$Factory: androidx.datastore.core.SharedCounter create$datastore_core_release(boolean,kotlin.jvm.functions.Function0)>(z0, r1);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.core.SharedCounter$Factory r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.core.SharedCounter$Factory;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.core.SharedCounter$Factory: void <init>()>();

        return;
    }

