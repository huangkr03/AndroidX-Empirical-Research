androidx.compose.foundation.lazy.grid.LazyGridMeasureKt
    public static final androidx.compose.foundation.lazy.grid.LazyGridMeasureResult measureLazyGrid-0cYbdkg(int, androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider, androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider, int, int, int, int, int, int, float, long, boolean, androidx.compose.foundation.layout.Arrangement$Vertical, androidx.compose.foundation.layout.Arrangement$Horizontal, boolean, androidx.compose.ui.unit.Density, androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator, androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider, kotlin.jvm.functions.Function3)
    {
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i42, $i43, i44, i45, i46, i47, i48, $i49, i50, i51, $i52, i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i63, i64, $i65, $i66, $i67, i68, i69;
        androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider r0;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider r1;
        float f0, $f1, $f2;
        long l7;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10;
        androidx.compose.foundation.layout.Arrangement$Vertical r2;
        androidx.compose.foundation.layout.Arrangement$Horizontal r3;
        androidx.compose.ui.unit.Density r4;
        androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator r5;
        androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider r6;
        kotlin.jvm.functions.Function3 r7;
        java.util.List r8, $r31, r48;
        androidx.compose.ui.layout.MeasureResult r9, $r30;
        androidx.compose.foundation.gestures.Orientation r10, $r38, $r50;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItem[] $r11;
        java.lang.Object $r12, $r14, $r18, $r20, $r22, $r29, r42;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItem $r13;
        java.lang.Integer $r15, $r16, $r26, $r27;
        androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$3 $r17;
        androidx.compose.foundation.lazy.grid.LazyGridMeasureResult $r19, $r25;
        androidx.compose.foundation.lazy.grid.LazyMeasuredLine $r21, $r40, r43, $r44, r45, r47, $r49;
        java.lang.IllegalArgumentException $r23, $r32, $r34;
        java.lang.String $r24, $r33, $r35, r36, r37, r46;
        androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$1 $r28;
        java.util.ArrayList $r39;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider;

        r1 := @parameter2: androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        f0 := @parameter9: float;

        l7 := @parameter10: long;

        z0 := @parameter11: boolean;

        r2 := @parameter12: androidx.compose.foundation.layout.Arrangement$Vertical;

        r3 := @parameter13: androidx.compose.foundation.layout.Arrangement$Horizontal;

        z1 := @parameter14: boolean;

        r4 := @parameter15: androidx.compose.ui.unit.Density;

        r5 := @parameter16: androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator;

        r6 := @parameter17: androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider;

        r7 := @parameter18: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "measuredLineProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measuredItemProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "density");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "placementAnimator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "spanLayoutProvider");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "layout");

        if i2 < 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        if $z6 != 0 goto label03;

        r36 = "Failed requirement.";

        $r34 = new java.lang.IllegalArgumentException;

        $r35 = virtualinvoke r36.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label03:
        if i3 < 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        if $z7 != 0 goto label06;

        r37 = "Failed requirement.";

        $r32 = new java.lang.IllegalArgumentException;

        $r33 = virtualinvoke r37.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label06:
        if i0 > 0 goto label09;

        $r25 = new androidx.compose.foundation.lazy.grid.LazyGridMeasureResult;

        $i35 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinWidth-impl(long)>(l7);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i35);

        $i36 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMinHeight-impl(long)>(l7);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i36);

        $r28 = <androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$1: androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$1 INSTANCE>;

        $r29 = interfaceinvoke r7.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r26, $r27, $r28);

        $r30 = (androidx.compose.ui.layout.MeasureResult) $r29;

        $r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $i38 = neg i2;

        $i37 = i1 + i3;

        if z0 == 0 goto label07;

        $r38 = <androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation Vertical>;

        goto label08;

     label07:
        $r38 = <androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation Horizontal>;

     label08:
        specialinvoke $r25.<androidx.compose.foundation.lazy.grid.LazyGridMeasureResult: void <init>(androidx.compose.foundation.lazy.grid.LazyMeasuredLine,int,boolean,float,androidx.compose.ui.layout.MeasureResult,java.util.List,int,int,int,boolean,androidx.compose.foundation.gestures.Orientation,int)>(null, 0, 0, 0.0F, $r30, $r31, $i38, $i37, 0, z1, $r38, i3);

        return $r25;

     label09:
        i39 = i5;

        i40 = i6;

        i41 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f0);

        i42 = i40 - i41;

        $i12 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>(0);

        $z2 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: boolean equals-impl0(int,int)>(i39, $i12);

        if $z2 == 0 goto label10;

        if i42 >= 0 goto label10;

        i41 = i41 + i42;

        i42 = 0;

     label10:
        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        r8 = (java.util.List) $r39;

        $i13 = neg i2;

        if i4 >= 0 goto label11;

        $i43 = i4;

        goto label12;

     label11:
        $i43 = 0;

     label12:
        i8 = $i13 + $i43;

        i9 = i1;

        i44 = i42 + i8;

     label13:
        if i44 >= 0 goto label14;

        i45 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>(0);

        $i32 = i39 - i45;

        if $i32 <= 0 goto label14;

        $i33 = i39 - 1;

        i46 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i33);

        $r40 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.compose.foundation.lazy.grid.LazyMeasuredLine getAndMeasure-bKFJvoY(int)>(i46);

        interfaceinvoke r8.<java.util.List: void add(int,java.lang.Object)>(0, $r40);

        $i34 = virtualinvoke $r40.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        i44 = i44 + $i34;

        i39 = i46;

        goto label13;

     label14:
        if i44 >= i8 goto label15;

        i41 = i41 + i44;

        i44 = i8;

     label15:
        i47 = i44 - i8;

        i48 = i39;

        $i14 = i9 + i3;

        $i49 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i14, 0);

        i50 = neg i47;

        i51 = 0;

        $i52 = interfaceinvoke r8.<java.util.List: int size()>();

     label16:
        if i51 >= $i52 goto label17;

        r42 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i51);

        r43 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) r42;

        i53 = i48;

        $i30 = i53 + 1;

        i48 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i30);

        $i31 = virtualinvoke r43.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        i50 = i50 + $i31;

        i51 = i51 + 1;

        goto label16;

     label17:
        if i50 <= $i49 goto label18;

        $z4 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label22;

     label18:
        $r44 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.compose.foundation.lazy.grid.LazyMeasuredLine getAndMeasure-bKFJvoY(int)>(i48);

        $z3 = virtualinvoke $r44.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: boolean isEmpty()>();

        if $z3 == 0 goto label19;

        $i20 = i48 - 1;

        staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i20);

        goto label22;

     label19:
        $i15 = virtualinvoke $r44.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        i50 = i50 + $i15;

        if i50 > i8 goto label20;

        $r11 = virtualinvoke $r44.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: androidx.compose.foundation.lazy.grid.LazyMeasuredItem[] getItems()>();

        $r12 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object last(java.lang.Object[])>($r11);

        $r13 = (androidx.compose.foundation.lazy.grid.LazyMeasuredItem) $r12;

        $i16 = virtualinvoke $r13.<androidx.compose.foundation.lazy.grid.LazyMeasuredItem: int getIndex-VZbfaAc()>();

        $i17 = i0 - 1;

        if $i16 == $i17 goto label20;

        $i18 = i48 + 1;

        i39 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i18);

        $i19 = virtualinvoke $r44.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        i47 = i47 - $i19;

        goto label21;

     label20:
        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r44);

     label21:
        $i54 = i48 + 1;

        i48 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i54);

        goto label17;

     label22:
        if i50 >= i9 goto label25;

        $i55 = i9 - i50;

        i47 = i47 - $i55;

        i50 = i50 + $i55;

     label23:
        if i47 >= i2 goto label24;

        $i56 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>(0);

        $i27 = i39 - $i56;

        if $i27 <= 0 goto label24;

        $i28 = i39 - 1;

        $i57 = staticinvoke <androidx.compose.foundation.lazy.grid.LineIndex: int constructor-impl(int)>($i28);

        r45 = virtualinvoke r0.<androidx.compose.foundation.lazy.grid.LazyMeasuredLineProvider: androidx.compose.foundation.lazy.grid.LazyMeasuredLine getAndMeasure-bKFJvoY(int)>($i57);

        interfaceinvoke r8.<java.util.List: void add(int,java.lang.Object)>(0, r45);

        $i29 = virtualinvoke r45.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        i47 = i47 + $i29;

        i39 = $i57;

        goto label23;

     label24:
        i41 = i41 + $i55;

        if i47 >= 0 goto label25;

        i41 = i41 + i47;

        i50 = i50 + i47;

        i47 = 0;

     label25:
        $i58 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f0);

        $i59 = staticinvoke <kotlin.math.MathKt: int getSign(int)>($i58);

        $i60 = staticinvoke <kotlin.math.MathKt: int getSign(int)>(i41);

        if $i59 != $i60 goto label26;

        $i24 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>(f0);

        $i25 = staticinvoke <java.lang.Math: int abs(int)>($i24);

        $i26 = staticinvoke <java.lang.Math: int abs(int)>(i41);

        if $i25 < $i26 goto label26;

        $f1 = (float) i41;

        goto label27;

     label26:
        $f1 = f0;

     label27:
        $f2 = $f1;

        if i47 < 0 goto label28;

        $z8 = 1;

        goto label29;

     label28:
        $z8 = 0;

     label29:
        if $z8 != 0 goto label30;

        r46 = "Failed requirement.";

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = virtualinvoke r46.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r23;

     label30:
        $i61 = neg i47;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>(r8);

        r47 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) $r14;

        if i2 > 0 goto label31;

        if i4 >= 0 goto label35;

     label31:
        $i62 = 0;

        i63 = interfaceinvoke r8.<java.util.List: int size()>();

     label32:
        if $i62 >= i63 goto label35;

        $r20 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>($i62);

        $r21 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) $r20;

        i64 = virtualinvoke $r21.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        if i47 == 0 goto label33;

        if i64 > i47 goto label33;

        $i22 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>(r8);

        if $i62 == $i22 goto label33;

        i47 = i47 - i64;

        $i23 = $i62 + 1;

        $r22 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>($i23);

        r47 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) $r22;

        goto label34;

     label33:
        goto label35;

     label34:
        $i62 = $i62 + 1;

        goto label32;

     label35:
        if z0 == 0 goto label36;

        $i65 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxWidth-impl(long)>(l7);

        goto label37;

     label36:
        $i65 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: int constrainWidth-K40F9xA(long,int)>(l7, i50);

     label37:
        $i66 = $i65;

        if z0 == 0 goto label38;

        $i67 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: int constrainHeight-K40F9xA(long,int)>(l7, i50);

        goto label39;

     label38:
        $i67 = staticinvoke <androidx.compose.ui.unit.Constraints: int getMaxHeight-impl(long)>(l7);

     label39:
        i68 = $i67;

        r48 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridMeasureKt: java.util.List calculateItemsOffsets(java.util.List,int,int,int,int,int,boolean,androidx.compose.foundation.layout.Arrangement$Vertical,androidx.compose.foundation.layout.Arrangement$Horizontal,boolean,androidx.compose.ui.unit.Density)>(r8, $i66, i68, i50, i9, $i61, z0, r2, r3, z1, r4);

        $i21 = (int) $f2;

        virtualinvoke r5.<androidx.compose.foundation.lazy.grid.LazyGridItemPlacementAnimator: void onMeasured(int,int,int,boolean,java.util.List,androidx.compose.foundation.lazy.grid.LazyMeasuredItemProvider,androidx.compose.foundation.lazy.grid.LazyGridSpanLayoutProvider)>($i21, $i66, i68, z1, r48, r1, r6);

        $r49 = r47;

        i69 = i47;

        if i50 <= i9 goto label40;

        $z9 = 1;

        goto label41;

     label40:
        $z9 = 0;

     label41:
        $z10 = $z9;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i66);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i68);

        $r17 = new androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$3;

        specialinvoke $r17.<androidx.compose.foundation.lazy.grid.LazyGridMeasureKt$measureLazyGrid$3: void <init>(java.util.List)>(r48);

        $r18 = interfaceinvoke r7.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r15, $r16, $r17);

        r9 = (androidx.compose.ui.layout.MeasureResult) $r18;

        i10 = neg i2;

        i11 = i1 + i3;

        if z0 == 0 goto label42;

        $r50 = <androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation Vertical>;

        goto label43;

     label42:
        $r50 = <androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation Horizontal>;

     label43:
        r10 = $r50;

        $r19 = new androidx.compose.foundation.lazy.grid.LazyGridMeasureResult;

        specialinvoke $r19.<androidx.compose.foundation.lazy.grid.LazyGridMeasureResult: void <init>(androidx.compose.foundation.lazy.grid.LazyMeasuredLine,int,boolean,float,androidx.compose.ui.layout.MeasureResult,java.util.List,int,int,int,boolean,androidx.compose.foundation.gestures.Orientation,int)>($r49, i69, $z10, $f2, r9, r48, i10, i11, i0, z1, r10, i3);

        return $r19;
    }

    private static final java.util.List calculateItemsOffsets(java.util.List, int, int, int, int, int, boolean, androidx.compose.foundation.layout.Arrangement$Vertical, androidx.compose.foundation.layout.Arrangement$Horizontal, boolean, androidx.compose.ui.unit.Density)
    {
        java.util.List r0, $r7, $r11, $r41;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, $i19, i20, $i22, i23, $i24, i25, i26, i27, $i28, $i29, $i30, $i31, $i32;
        boolean z0, z1, z2, $z6, $z7, z11, z12, z14, z15;
        androidx.compose.foundation.layout.Arrangement$Vertical r1;
        androidx.compose.foundation.layout.Arrangement$Horizontal r2;
        androidx.compose.ui.unit.Density r3;
        java.util.ArrayList r4, $r6;
        androidx.compose.foundation.lazy.grid.LazyMeasuredLine r5, $r20, r37, r40;
        java.util.Collection $r8, $r12;
        androidx.compose.ui.unit.LayoutDirection $r9;
        kotlin.ranges.IntRange $r10, $r13;
        kotlin.ranges.IntProgression $r14, $r34;
        java.lang.IllegalArgumentException $r15, $r17;
        java.lang.String $r16, $r18, $r23, $r24, $r32, $r33;
        java.lang.Object $r19, r26, r27, $r36, r39;
        androidx.compose.foundation.lazy.grid.LazyMeasuredItem[] $r21;
        java.lang.IllegalStateException $r22;
        int[] $r28, $r30, r31;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        z0 := @parameter6: boolean;

        r1 := @parameter7: androidx.compose.foundation.layout.Arrangement$Vertical;

        r2 := @parameter8: androidx.compose.foundation.layout.Arrangement$Horizontal;

        z1 := @parameter9: boolean;

        r3 := @parameter10: androidx.compose.ui.unit.Density;

        if z0 == 0 goto label01;

        $i15 = i1;

        goto label02;

     label01:
        $i15 = i0;

     label02:
        i5 = $i15;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i3);

        if i2 >= $i9 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z2 = $z6;

        if z2 == 0 goto label07;

        if i4 != 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        if $z7 != 0 goto label07;

        $r24 = "Check failed.";

        $r22 = new java.lang.IllegalStateException;

        $r23 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label07:
        i16 = 0;

        i17 = 0;

        i18 = interfaceinvoke r0.<java.util.List: int size()>();

     label08:
        if i17 >= i18 goto label09;

        r26 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i17);

        r27 = r26;

        r5 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) r27;

        i6 = i16;

        $r21 = virtualinvoke r5.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: androidx.compose.foundation.lazy.grid.LazyMeasuredItem[] getItems()>();

        i7 = lengthof $r21;

        i16 = i6 + i7;

        i17 = i17 + 1;

        goto label08;

     label09:
        i8 = i16;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i8);

        r4 = $r6;

        if z2 == 0 goto label24;

        $i19 = interfaceinvoke r0.<java.util.List: int size()>();

        i20 = 0;

        $r28 = newarray (int)[$i19];

     label10:
        if i20 >= $i19 goto label11;

        $i13 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridMeasureKt: int calculateItemsOffsets$reverseAware(int,boolean,int)>(i20, z1, $i19);

        $r19 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i13);

        $r20 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) $r19;

        $i14 = virtualinvoke $r20.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSize()>();

        $r28[i20] = $i14;

        i20 = i20 + 1;

        goto label10;

     label11:
        $i22 = 0;

        $r30 = newarray (int)[$i19];

     label12:
        if $i22 >= $i19 goto label13;

        i23 = $i22;

        $r30[i23] = 0;

        $i22 = $i22 + 1;

        goto label12;

     label13:
        r31 = $r30;

        if z0 == 0 goto label15;

        if r1 != null goto label14;

        $r32 = "Required value was null.";

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label14:
        z11 = 0;

        interfaceinvoke r1.<androidx.compose.foundation.layout.Arrangement$Vertical: void arrange(androidx.compose.ui.unit.Density,int,int[],int[])>(r3, i5, $r28, r31);

        goto label17;

     label15:
        if r2 != null goto label16;

        $r33 = "Required value was null.";

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label16:
        z12 = 0;

        $r9 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        interfaceinvoke r2.<androidx.compose.foundation.layout.Arrangement$Horizontal: void arrange(androidx.compose.ui.unit.Density,int,int[],androidx.compose.ui.unit.LayoutDirection,int[])>(r3, i5, $r28, $r9, r31);

     label17:
        if z1 == 0 goto label18;

        $r13 = staticinvoke <kotlin.collections.ArraysKt: kotlin.ranges.IntRange getIndices(int[])>(r31);

        $r14 = (kotlin.ranges.IntProgression) $r13;

        $r34 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression)>($r14);

        goto label19;

     label18:
        $r10 = staticinvoke <kotlin.collections.ArraysKt: kotlin.ranges.IntRange getIndices(int[])>(r31);

        $r34 = (kotlin.ranges.IntProgression) $r10;

     label19:
        $i24 = virtualinvoke $r34.<kotlin.ranges.IntProgression: int getFirst()>();

        i25 = virtualinvoke $r34.<kotlin.ranges.IntProgression: int getLast()>();

        i26 = virtualinvoke $r34.<kotlin.ranges.IntProgression: int getStep()>();

        if i26 <= 0 goto label20;

        if $i24 <= i25 goto label21;

     label20:
        if i26 >= 0 goto label26;

        if i25 > $i24 goto label26;

     label21:
        i27 = r31[$i24];

        $i28 = staticinvoke <androidx.compose.foundation.lazy.grid.LazyGridMeasureKt: int calculateItemsOffsets$reverseAware(int,boolean,int)>($i24, z1, $i19);

        $r36 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i28);

        r37 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) $r36;

        if z1 == 0 goto label22;

        $i11 = i5 - i27;

        $i12 = virtualinvoke r37.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSize()>();

        $i29 = $i11 - $i12;

        goto label23;

     label22:
        $i29 = i27;

     label23:
        $r11 = virtualinvoke r37.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: java.util.List position(int,int,int)>($i29, i0, i1);

        $r12 = (java.util.Collection) $r11;

        virtualinvoke r4.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r12);

        if $i24 == i25 goto label26;

        $i24 = $i24 + i26;

        goto label21;

     label24:
        $i30 = i4;

        z14 = 0;

        $i31 = 0;

        $i32 = interfaceinvoke r0.<java.util.List: int size()>();

     label25:
        if $i31 >= $i32 goto label26;

        r39 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i31);

        r40 = (androidx.compose.foundation.lazy.grid.LazyMeasuredLine) r39;

        z15 = 0;

        $r7 = virtualinvoke r40.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: java.util.List position(int,int,int)>($i30, i0, i1);

        $r8 = (java.util.Collection) $r7;

        virtualinvoke r4.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r8);

        $i10 = virtualinvoke r40.<androidx.compose.foundation.lazy.grid.LazyMeasuredLine: int getMainAxisSizeWithSpacings()>();

        $i30 = $i30 + $i10;

        $i31 = $i31 + 1;

        goto label25;

     label26:
        $r41 = (java.util.List) r4;

        return $r41;
    }

    private static final int calculateItemsOffsets$reverseAware(int, boolean, int)
    {
        int $i0, i1, $i2, $i3;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        if $z0 != 0 goto label1;

        $i3 = $i0;

        goto label2;

     label1:
        $i2 = i1 - $i0;

        $i3 = $i2 - 1;

     label2:
        return $i3;
    }

