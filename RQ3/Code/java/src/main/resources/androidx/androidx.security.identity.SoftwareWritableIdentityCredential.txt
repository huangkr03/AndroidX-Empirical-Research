androidx.security.identity.SoftwareWritableIdentityCredential
<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String TAG>
<androidx.security.identity.SoftwareWritableIdentityCredential: java.security.KeyPair mKeyPair>
<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates>
<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mDocType>
<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mCredentialName>
<androidx.security.identity.SoftwareWritableIdentityCredential: android.content.Context mContext>
    void <init>(android.content.Context, java.lang.String, java.lang.String) throws androidx.security.identity.AlreadyPersonalizedException
    {
        androidx.security.identity.SoftwareWritableIdentityCredential r0;
        android.content.Context r1;
        java.lang.String r2, r3;
        boolean $z0;
        androidx.security.identity.AlreadyPersonalizedException r5;
        java.lang.Throwable r6;

        r0 := @this: androidx.security.identity.SoftwareWritableIdentityCredential;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<androidx.security.identity.WritableIdentityCredential: void <init>()>();

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.security.KeyPair mKeyPair> = null;

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates> = null;

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: android.content.Context mContext> = r1;

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mDocType> = r3;

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mCredentialName> = r2;

        $z0 = staticinvoke <androidx.security.identity.CredentialData: boolean credentialAlreadyExists(android.content.Context,java.lang.String)>(r1, r2);

        if $z0 == 0 goto label1;

        r5 = new androidx.security.identity.AlreadyPersonalizedException;

        specialinvoke r5.<androidx.security.identity.AlreadyPersonalizedException: void <init>(java.lang.String)>("Credential with given name already exists");

        r6 = (java.lang.Throwable) r5;

        throw r6;

     label1:
        return;
    }

    private java.util.Collection ensureCredentialKey(byte[])
    {
        androidx.security.identity.SoftwareWritableIdentityCredential r0;
        java.lang.String r1, $r8;
        java.security.KeyPairGenerator r2;
        android.security.keystore.KeyGenParameterSpec$Builder r3, $r9;
        java.security.cert.Certificate[] r4, r5;
        int i0, i1;
        java.security.cert.Certificate r6;
        java.security.KeyPair $r7, $r13;
        boolean $z0;
        java.lang.String[] $r10;
        android.security.keystore.KeyGenParameterSpec $r12;
        java.util.ArrayList $r14;
        java.util.Collection $r15, $r17;
        java.security.cert.X509Certificate $r16;
        java.lang.Throwable $r18, r22;
        java.lang.RuntimeException $r19;
        byte[] r20;
        java.security.KeyStore r21;

        r0 := @this: androidx.security.identity.SoftwareWritableIdentityCredential;

        r20 := @parameter0: byte[];

        $r7 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.security.KeyPair mKeyPair>;

        if $r7 == null goto label1;

        return null;

     label1:
        $r8 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mCredentialName>;

        r1 = staticinvoke <androidx.security.identity.CredentialData: java.lang.String getAliasFromCredentialName(java.lang.String)>($r8);

     label2:
        r21 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("AndroidKeyStore");

        virtualinvoke r21.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(null);

        $z0 = virtualinvoke r21.<java.security.KeyStore: boolean containsAlias(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        virtualinvoke r21.<java.security.KeyStore: void deleteEntry(java.lang.String)>(r1);

     label3:
        r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>("EC", "AndroidKeyStore");

        $r9 = new android.security.keystore.KeyGenParameterSpec$Builder;

        specialinvoke $r9.<android.security.keystore.KeyGenParameterSpec$Builder: void <init>(java.lang.String,int)>(r1, 12);

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "SHA-256";

        $r10[1] = "SHA-512";

        r3 = virtualinvoke $r9.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setDigests(java.lang.String[])>($r10);

        if r20 != null goto label4;

        r20 = newarray (byte)[0];

     label4:
        virtualinvoke r3.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec$Builder setAttestationChallenge(byte[])>(r20);

        $r12 = virtualinvoke r3.<android.security.keystore.KeyGenParameterSpec$Builder: android.security.keystore.KeyGenParameterSpec build()>();

        virtualinvoke r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r12);

        $r13 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.security.KeyPair mKeyPair> = $r13;

        r4 = virtualinvoke r21.<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>(r1);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates> = $r14;

        r5 = r4;

        i0 = lengthof r5;

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        r6 = r5[i1];

        $r17 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates>;

        $r16 = (java.security.cert.X509Certificate) r6;

        interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        i1 = i1 + 1;

        goto label5;

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        r22 = $r18;

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error creating CredentialKey", r22);

        throw $r19;

     label8:
        $r15 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates>;

        return $r15;

        catch java.security.InvalidAlgorithmParameterException from label2 to label6 with label7;
        catch java.security.NoSuchAlgorithmException from label2 to label6 with label7;
        catch java.security.NoSuchProviderException from label2 to label6 with label7;
        catch java.security.cert.CertificateException from label2 to label6 with label7;
        catch java.security.KeyStoreException from label2 to label6 with label7;
        catch java.io.IOException from label2 to label6 with label7;
    }

    public java.util.Collection getCredentialKeyCertificateChain(byte[])
    {
        androidx.security.identity.SoftwareWritableIdentityCredential r0;
        byte[] r1;
        java.util.Collection r2;
        java.lang.RuntimeException $r3;

        r0 := @this: androidx.security.identity.SoftwareWritableIdentityCredential;

        r1 := @parameter0: byte[];

        r2 = specialinvoke r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection ensureCredentialKey(byte[])>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("getCredentialKeyCertificateChain() must be called before personalize()");

        throw $r3;

     label1:
        return r2;
    }

    static co.nstant.in.cbor.model.DataItem buildProofOfProvisioningWithSignature(java.lang.String, androidx.security.identity.PersonalizationData, java.security.PrivateKey)
    {
        java.lang.String r0, $r31;
        androidx.security.identity.PersonalizationData r1;
        java.security.PrivateKey r2;
        co.nstant.in.cbor.CborBuilder r3, $r7, $r9, $r11, r41, r45;
        co.nstant.in.cbor.builder.ArrayBuilder r4, $r12, $r13, $r14, $r18, $r22;
        co.nstant.in.cbor.CborEncoder r5, $r25;
        byte[] r6;
        java.util.Collection $r8, $r10;
        boolean $z0, $z1;
        java.util.List $r15, $r19, $r26;
        java.lang.Object $r16, $r20, $r27, $r29, $r34;
        co.nstant.in.cbor.model.DataItem $r17, $r21, $r28, $r32, $r35, r47;
        java.io.ByteArrayOutputStream $r24, r46;
        co.nstant.in.cbor.model.UnicodeString $r30;
        java.lang.Throwable $r37, r48;
        java.lang.RuntimeException $r38;
        java.util.Iterator r39, r43;
        androidx.security.identity.AccessControlProfile r40;
        co.nstant.in.cbor.builder.MapBuilder r42;
        androidx.security.identity.PersonalizationData$NamespaceData r44;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.security.identity.PersonalizationData;

        r2 := @parameter2: java.security.PrivateKey;

        $r7 = new co.nstant.in.cbor.CborBuilder;

        specialinvoke $r7.<co.nstant.in.cbor.CborBuilder: void <init>()>();

        r3 = $r7;

        r4 = virtualinvoke r3.<co.nstant.in.cbor.CborBuilder: co.nstant.in.cbor.builder.ArrayBuilder addArray()>();

        $r8 = virtualinvoke r1.<androidx.security.identity.PersonalizationData: java.util.Collection getAccessControlProfiles()>();

        r39 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r34 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (androidx.security.identity.AccessControlProfile) $r34;

        $r35 = staticinvoke <androidx.security.identity.Util: co.nstant.in.cbor.model.DataItem accessControlProfileToCbor(androidx.security.identity.AccessControlProfile)>(r40);

        virtualinvoke r4.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(co.nstant.in.cbor.model.DataItem)>($r35);

        goto label1;

     label2:
        $r9 = new co.nstant.in.cbor.CborBuilder;

        specialinvoke $r9.<co.nstant.in.cbor.CborBuilder: void <init>()>();

        r41 = $r9;

        r42 = virtualinvoke r41.<co.nstant.in.cbor.CborBuilder: co.nstant.in.cbor.builder.MapBuilder addMap()>();

        $r10 = virtualinvoke r1.<androidx.security.identity.PersonalizationData: java.util.Collection getNamespaceDatas()>();

        r43 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r29 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (androidx.security.identity.PersonalizationData$NamespaceData) $r29;

        $r30 = new co.nstant.in.cbor.model.UnicodeString;

        $r31 = virtualinvoke r44.<androidx.security.identity.PersonalizationData$NamespaceData: java.lang.String getNamespaceName()>();

        specialinvoke $r30.<co.nstant.in.cbor.model.UnicodeString: void <init>(java.lang.String)>($r31);

        $r32 = staticinvoke <androidx.security.identity.Util: co.nstant.in.cbor.model.DataItem namespaceDataToCbor(androidx.security.identity.PersonalizationData$NamespaceData)>(r44);

        virtualinvoke r42.<co.nstant.in.cbor.builder.MapBuilder: co.nstant.in.cbor.builder.MapBuilder put(co.nstant.in.cbor.model.DataItem,co.nstant.in.cbor.model.DataItem)>($r30, $r32);

        goto label3;

     label4:
        $r11 = new co.nstant.in.cbor.CborBuilder;

        specialinvoke $r11.<co.nstant.in.cbor.CborBuilder: void <init>()>();

        r45 = $r11;

        $r12 = virtualinvoke r45.<co.nstant.in.cbor.CborBuilder: co.nstant.in.cbor.builder.ArrayBuilder addArray()>();

        $r13 = virtualinvoke $r12.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(java.lang.String)>("ProofOfProvisioning");

        $r14 = virtualinvoke $r13.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(java.lang.String)>(r0);

        $r15 = virtualinvoke r3.<co.nstant.in.cbor.CborBuilder: java.util.List build()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (co.nstant.in.cbor.model.DataItem) $r16;

        $r18 = virtualinvoke $r14.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(co.nstant.in.cbor.model.DataItem)>($r17);

        $r19 = virtualinvoke r41.<co.nstant.in.cbor.CborBuilder: java.util.List build()>();

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (co.nstant.in.cbor.model.DataItem) $r20;

        $r22 = virtualinvoke $r18.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(co.nstant.in.cbor.model.DataItem)>($r21);

        virtualinvoke $r22.<co.nstant.in.cbor.builder.ArrayBuilder: co.nstant.in.cbor.builder.ArrayBuilder add(boolean)>(0);

     label5:
        $r24 = new java.io.ByteArrayOutputStream;

        specialinvoke $r24.<java.io.ByteArrayOutputStream: void <init>()>();

        r46 = $r24;

        $r25 = new co.nstant.in.cbor.CborEncoder;

        specialinvoke $r25.<co.nstant.in.cbor.CborEncoder: void <init>(java.io.OutputStream)>(r46);

        r5 = $r25;

        $r26 = virtualinvoke r45.<co.nstant.in.cbor.CborBuilder: java.util.List build()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0);

        $r28 = (co.nstant.in.cbor.model.DataItem) $r27;

        virtualinvoke r5.<co.nstant.in.cbor.CborEncoder: void encode(co.nstant.in.cbor.model.DataItem)>($r28);

        r6 = virtualinvoke r46.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r47 = staticinvoke <androidx.security.identity.Util: co.nstant.in.cbor.model.DataItem coseSign1Sign(java.security.PrivateKey,byte[],byte[],java.util.Collection)>(r2, r6, null, null);

     label6:
        goto label8;

     label7:
        $r37 := @caughtexception;

        r48 = $r37;

        $r38 = new java.lang.RuntimeException;

        specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error building ProofOfProvisioning", r48);

        throw $r38;

     label8:
        return r47;

        catch java.security.NoSuchAlgorithmException from label5 to label6 with label7;
        catch java.security.InvalidKeyException from label5 to label6 with label7;
        catch java.security.cert.CertificateEncodingException from label5 to label6 with label7;
        catch co.nstant.in.cbor.CborException from label5 to label6 with label7;
    }

    public byte[] personalize(androidx.security.identity.PersonalizationData)
    {
        androidx.security.identity.SoftwareWritableIdentityCredential r0;
        androidx.security.identity.PersonalizationData r1;
        byte[] r2, r3, $r16;
        java.security.KeyPair $r5;
        java.lang.String $r6, $r9, $r11, $r12, $r13;
        java.security.PrivateKey $r7;
        java.security.MessageDigest $r8;
        android.content.Context $r10;
        java.util.Collection $r14;
        java.lang.Throwable $r17, r20;
        java.lang.RuntimeException $r18;
        co.nstant.in.cbor.model.DataItem r19;

        r0 := @this: androidx.security.identity.SoftwareWritableIdentityCredential;

        r1 := @parameter0: androidx.security.identity.PersonalizationData;

     label1:
        specialinvoke r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection ensureCredentialKey(byte[])>(null);

        $r6 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mDocType>;

        $r5 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.security.KeyPair mKeyPair>;

        $r7 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        r19 = staticinvoke <androidx.security.identity.SoftwareWritableIdentityCredential: co.nstant.in.cbor.model.DataItem buildProofOfProvisioningWithSignature(java.lang.String,androidx.security.identity.PersonalizationData,java.security.PrivateKey)>($r6, r1, $r7);

        r2 = staticinvoke <androidx.security.identity.Util: byte[] coseSign1GetData(co.nstant.in.cbor.model.DataItem)>(r19);

        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        r3 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>(r2);

        $r10 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: android.content.Context mContext>;

        $r11 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mDocType>;

        $r12 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mCredentialName>;

        $r9 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.lang.String mCredentialName>;

        $r13 = staticinvoke <androidx.security.identity.CredentialData: java.lang.String getAliasFromCredentialName(java.lang.String)>($r9);

        $r14 = r0.<androidx.security.identity.SoftwareWritableIdentityCredential: java.util.Collection mCertificates>;

        staticinvoke <androidx.security.identity.CredentialData: androidx.security.identity.CredentialData createCredentialData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Collection,androidx.security.identity.PersonalizationData,byte[],boolean)>($r10, $r11, $r12, $r13, $r14, r1, r3, 0);

        $r16 = staticinvoke <androidx.security.identity.Util: byte[] cborEncode(co.nstant.in.cbor.model.DataItem)>(r19);

     label2:
        return $r16;

     label3:
        $r17 := @caughtexception;

        r20 = $r17;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error digesting ProofOfProvisioning", r20);

        throw $r18;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

