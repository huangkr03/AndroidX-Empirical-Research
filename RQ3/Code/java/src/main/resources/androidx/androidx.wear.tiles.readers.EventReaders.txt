androidx.wear.tiles.readers.EventReaders
    private void <init>()
    {
        androidx.wear.tiles.readers.EventReaders r0;

        r0 := @this: androidx.wear.tiles.readers.EventReaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.wear.tiles.readers.EventReaders$TileAddEvent
<androidx.wear.tiles.readers.EventReaders$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent mProto>
    private void <init>(androidx.wear.tiles.proto.EventProto$TileAddEvent)
    {
        androidx.wear.tiles.readers.EventReaders$TileAddEvent r0;
        androidx.wear.tiles.proto.EventProto$TileAddEvent r1;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileAddEvent;

        r1 := @parameter0: androidx.wear.tiles.proto.EventProto$TileAddEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.readers.EventReaders$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent mProto> = r1;

        return;
    }

    public static androidx.wear.tiles.readers.EventReaders$TileAddEvent fromParcelable(androidx.wear.tiles.TileAddEventData)
    {
        androidx.wear.tiles.TileAddEventData r0;
        java.lang.Throwable r1, $r6;
        androidx.wear.tiles.readers.EventReaders$TileAddEvent $r2;
        byte[] $r3;
        androidx.wear.tiles.protobuf.ExtensionRegistryLite $r4;
        androidx.wear.tiles.proto.EventProto$TileAddEvent $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: androidx.wear.tiles.TileAddEventData;

     label1:
        $r2 = new androidx.wear.tiles.readers.EventReaders$TileAddEvent;

        $r3 = virtualinvoke r0.<androidx.wear.tiles.TileAddEventData: byte[] getContents()>();

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ExtensionRegistryLite: androidx.wear.tiles.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $r5 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent parseFrom(byte[],androidx.wear.tiles.protobuf.ExtensionRegistryLite)>($r3, $r4);

        specialinvoke $r2.<androidx.wear.tiles.readers.EventReaders$TileAddEvent: void <init>(androidx.wear.tiles.proto.EventProto$TileAddEvent)>($r5);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Passed TileAddEventData did not contain a valid proto payload", r1);

        throw $r7;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public int getTileId()
    {
        androidx.wear.tiles.readers.EventReaders$TileAddEvent r0;
        androidx.wear.tiles.proto.EventProto$TileAddEvent $r1;
        int $i0;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileAddEvent;

        $r1 = r0.<androidx.wear.tiles.readers.EventReaders$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent mProto>;

        $i0 = virtualinvoke $r1.<androidx.wear.tiles.proto.EventProto$TileAddEvent: int getTileId()>();

        return $i0;
    }

androidx.wear.tiles.readers.EventReaders$TileEnterEvent
<androidx.wear.tiles.readers.EventReaders$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent mProto>
    private void <init>(androidx.wear.tiles.proto.EventProto$TileEnterEvent)
    {
        androidx.wear.tiles.readers.EventReaders$TileEnterEvent r0;
        androidx.wear.tiles.proto.EventProto$TileEnterEvent r1;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileEnterEvent;

        r1 := @parameter0: androidx.wear.tiles.proto.EventProto$TileEnterEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.readers.EventReaders$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent mProto> = r1;

        return;
    }

    public static androidx.wear.tiles.readers.EventReaders$TileEnterEvent fromParcelable(androidx.wear.tiles.TileEnterEventData)
    {
        androidx.wear.tiles.TileEnterEventData r0;
        java.lang.Throwable r1, $r6;
        androidx.wear.tiles.readers.EventReaders$TileEnterEvent $r2;
        byte[] $r3;
        androidx.wear.tiles.protobuf.ExtensionRegistryLite $r4;
        androidx.wear.tiles.proto.EventProto$TileEnterEvent $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: androidx.wear.tiles.TileEnterEventData;

     label1:
        $r2 = new androidx.wear.tiles.readers.EventReaders$TileEnterEvent;

        $r3 = virtualinvoke r0.<androidx.wear.tiles.TileEnterEventData: byte[] getContents()>();

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ExtensionRegistryLite: androidx.wear.tiles.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $r5 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent parseFrom(byte[],androidx.wear.tiles.protobuf.ExtensionRegistryLite)>($r3, $r4);

        specialinvoke $r2.<androidx.wear.tiles.readers.EventReaders$TileEnterEvent: void <init>(androidx.wear.tiles.proto.EventProto$TileEnterEvent)>($r5);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Passed TileEnterEventData did not contain a valid proto payload", r1);

        throw $r7;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public int getTileId()
    {
        androidx.wear.tiles.readers.EventReaders$TileEnterEvent r0;
        androidx.wear.tiles.proto.EventProto$TileEnterEvent $r1;
        int $i0;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileEnterEvent;

        $r1 = r0.<androidx.wear.tiles.readers.EventReaders$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent mProto>;

        $i0 = virtualinvoke $r1.<androidx.wear.tiles.proto.EventProto$TileEnterEvent: int getTileId()>();

        return $i0;
    }

androidx.wear.tiles.readers.EventReaders$TileLeaveEvent
<androidx.wear.tiles.readers.EventReaders$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent mProto>
    private void <init>(androidx.wear.tiles.proto.EventProto$TileLeaveEvent)
    {
        androidx.wear.tiles.readers.EventReaders$TileLeaveEvent r0;
        androidx.wear.tiles.proto.EventProto$TileLeaveEvent r1;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileLeaveEvent;

        r1 := @parameter0: androidx.wear.tiles.proto.EventProto$TileLeaveEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.readers.EventReaders$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent mProto> = r1;

        return;
    }

    public static androidx.wear.tiles.readers.EventReaders$TileLeaveEvent fromParcelable(androidx.wear.tiles.TileLeaveEventData)
    {
        androidx.wear.tiles.TileLeaveEventData r0;
        java.lang.Throwable r1, $r6;
        androidx.wear.tiles.readers.EventReaders$TileLeaveEvent $r2;
        byte[] $r3;
        androidx.wear.tiles.protobuf.ExtensionRegistryLite $r4;
        androidx.wear.tiles.proto.EventProto$TileLeaveEvent $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: androidx.wear.tiles.TileLeaveEventData;

     label1:
        $r2 = new androidx.wear.tiles.readers.EventReaders$TileLeaveEvent;

        $r3 = virtualinvoke r0.<androidx.wear.tiles.TileLeaveEventData: byte[] getContents()>();

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ExtensionRegistryLite: androidx.wear.tiles.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $r5 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent parseFrom(byte[],androidx.wear.tiles.protobuf.ExtensionRegistryLite)>($r3, $r4);

        specialinvoke $r2.<androidx.wear.tiles.readers.EventReaders$TileLeaveEvent: void <init>(androidx.wear.tiles.proto.EventProto$TileLeaveEvent)>($r5);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Passed TileLeaveEventData did not contain a valid proto payload", r1);

        throw $r7;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public int getTileId()
    {
        androidx.wear.tiles.readers.EventReaders$TileLeaveEvent r0;
        androidx.wear.tiles.proto.EventProto$TileLeaveEvent $r1;
        int $i0;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileLeaveEvent;

        $r1 = r0.<androidx.wear.tiles.readers.EventReaders$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent mProto>;

        $i0 = virtualinvoke $r1.<androidx.wear.tiles.proto.EventProto$TileLeaveEvent: int getTileId()>();

        return $i0;
    }

androidx.wear.tiles.readers.EventReaders$TileRemoveEvent
<androidx.wear.tiles.readers.EventReaders$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent mProto>
    private void <init>(androidx.wear.tiles.proto.EventProto$TileRemoveEvent)
    {
        androidx.wear.tiles.readers.EventReaders$TileRemoveEvent r0;
        androidx.wear.tiles.proto.EventProto$TileRemoveEvent r1;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileRemoveEvent;

        r1 := @parameter0: androidx.wear.tiles.proto.EventProto$TileRemoveEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.readers.EventReaders$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent mProto> = r1;

        return;
    }

    public static androidx.wear.tiles.readers.EventReaders$TileRemoveEvent fromParcelable(androidx.wear.tiles.TileRemoveEventData)
    {
        androidx.wear.tiles.TileRemoveEventData r0;
        java.lang.Throwable r1, $r6;
        androidx.wear.tiles.readers.EventReaders$TileRemoveEvent $r2;
        byte[] $r3;
        androidx.wear.tiles.protobuf.ExtensionRegistryLite $r4;
        androidx.wear.tiles.proto.EventProto$TileRemoveEvent $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: androidx.wear.tiles.TileRemoveEventData;

     label1:
        $r2 = new androidx.wear.tiles.readers.EventReaders$TileRemoveEvent;

        $r3 = virtualinvoke r0.<androidx.wear.tiles.TileRemoveEventData: byte[] getContents()>();

        $r4 = staticinvoke <androidx.wear.tiles.protobuf.ExtensionRegistryLite: androidx.wear.tiles.protobuf.ExtensionRegistryLite getEmptyRegistry()>();

        $r5 = staticinvoke <androidx.wear.tiles.proto.EventProto$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent parseFrom(byte[],androidx.wear.tiles.protobuf.ExtensionRegistryLite)>($r3, $r4);

        specialinvoke $r2.<androidx.wear.tiles.readers.EventReaders$TileRemoveEvent: void <init>(androidx.wear.tiles.proto.EventProto$TileRemoveEvent)>($r5);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Passed TileRemoveEventData did not contain a valid proto payload", r1);

        throw $r7;

        catch androidx.wear.tiles.protobuf.InvalidProtocolBufferException from label1 to label2 with label3;
    }

    public int getTileId()
    {
        androidx.wear.tiles.readers.EventReaders$TileRemoveEvent r0;
        androidx.wear.tiles.proto.EventProto$TileRemoveEvent $r1;
        int $i0;

        r0 := @this: androidx.wear.tiles.readers.EventReaders$TileRemoveEvent;

        $r1 = r0.<androidx.wear.tiles.readers.EventReaders$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent mProto>;

        $i0 = virtualinvoke $r1.<androidx.wear.tiles.proto.EventProto$TileRemoveEvent: int getTileId()>();

        return $i0;
    }

