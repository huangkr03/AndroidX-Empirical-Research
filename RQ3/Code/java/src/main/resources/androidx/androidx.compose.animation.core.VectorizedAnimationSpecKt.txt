androidx.compose.animation.core.VectorizedAnimationSpecKt
<androidx.compose.animation.core.VectorizedAnimationSpecKt: int InfiniteIterations>
    public static final long getDurationMillis(androidx.compose.animation.core.VectorizedAnimationSpec, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedAnimationSpec $r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3;
        long $l0, $l1;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $l0 = interfaceinvoke $r0.<androidx.compose.animation.core.VectorizedAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3);

        $l1 = $l0 / 1000000L;

        return $l1;
    }

    public static final androidx.compose.animation.core.AnimationVector getValueFromMillis(androidx.compose.animation.core.VectorizedAnimationSpec, long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedAnimationSpec $r0;
        long l0, $l1;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        l0 := @parameter1: long;

        r1 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter3: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter4: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $l1 = l0 * 1000000L;

        $r4 = interfaceinvoke $r0.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l1, r1, r2, r3);

        return $r4;
    }

    private static final long clampPlayTime(androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, long)
    {
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec $r0;
        long l0, $l2, $l3, $l5, $l6;
        int $i1, $i4;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        l0 := @parameter1: long;

        $i1 = interfaceinvoke $r0.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: int getDelayMillis()>();

        $l2 = (long) $i1;

        $l3 = l0 - $l2;

        $i4 = interfaceinvoke $r0.<androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec: int getDurationMillis()>();

        $l5 = (long) $i4;

        $l6 = staticinvoke <kotlin.ranges.RangesKt: long coerceIn(long,long,long)>($l3, 0L, $l5);

        return $l6;
    }

    private static final androidx.compose.animation.core.Animations createSpringAnimations(androidx.compose.animation.core.AnimationVector, float, float)
    {
        androidx.compose.animation.core.AnimationVector r0;
        float f0, f1;
        androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$2 $r1;
        androidx.compose.animation.core.Animations $r2, $r4;
        androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$1 $r3;

        r0 := @parameter0: androidx.compose.animation.core.AnimationVector;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        if r0 == null goto label1;

        $r3 = new androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$1;

        specialinvoke $r3.<androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$1: void <init>(androidx.compose.animation.core.AnimationVector,float,float)>(r0, f0, f1);

        $r4 = (androidx.compose.animation.core.Animations) $r3;

        return $r4;

     label1:
        $r1 = new androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$2;

        specialinvoke $r1.<androidx.compose.animation.core.VectorizedAnimationSpecKt$createSpringAnimations$2: void <init>(float,float)>(f0, f1);

        $r2 = (androidx.compose.animation.core.Animations) $r1;

        return $r2;
    }

    public static final long access$clampPlayTime(androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec, long)
    {
        androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec $r0;
        long l0, $l1;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec;

        l0 := @parameter1: long;

        $l1 = staticinvoke <androidx.compose.animation.core.VectorizedAnimationSpecKt: long clampPlayTime(androidx.compose.animation.core.VectorizedDurationBasedAnimationSpec,long)>($r0, l0);

        return $l1;
    }

    public static final androidx.compose.animation.core.Animations access$createSpringAnimations(androidx.compose.animation.core.AnimationVector, float, float)
    {
        androidx.compose.animation.core.AnimationVector r0;
        float f0, f1;
        androidx.compose.animation.core.Animations $r1;

        r0 := @parameter0: androidx.compose.animation.core.AnimationVector;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r1 = staticinvoke <androidx.compose.animation.core.VectorizedAnimationSpecKt: androidx.compose.animation.core.Animations createSpringAnimations(androidx.compose.animation.core.AnimationVector,float,float)>(r0, f0, f1);

        return $r1;
    }

