androidx.camera.viewfinder.CameraViewfinderExt
<androidx.camera.viewfinder.CameraViewfinderExt: androidx.camera.viewfinder.CameraViewfinderExt INSTANCE>
    private void <init>()
    {
        androidx.camera.viewfinder.CameraViewfinderExt r0;

        r0 := @this: androidx.camera.viewfinder.CameraViewfinderExt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object requestSurface(androidx.camera.viewfinder.CameraViewfinder, androidx.camera.viewfinder.ViewfinderSurfaceRequest, kotlin.coroutines.Continuation)
    {
        androidx.camera.viewfinder.CameraViewfinderExt r0;
        androidx.camera.viewfinder.CameraViewfinder $r1;
        androidx.camera.viewfinder.ViewfinderSurfaceRequest r2;
        kotlin.coroutines.Continuation r3, r13;
        com.google.common.util.concurrent.ListenableFuture r4;
        java.lang.Object $r5, r6, $r10;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1 $r9, r11;
        java.lang.IllegalStateException r12;

        r0 := @this: androidx.camera.viewfinder.CameraViewfinderExt;

        $r1 := @parameter0: androidx.camera.viewfinder.CameraViewfinder;

        r2 := @parameter1: androidx.camera.viewfinder.ViewfinderSurfaceRequest;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = r3 instanceof androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1;

        if $z0 == 0 goto label1;

        $r9 = (androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1) r3;

        $i0 = $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: int label>;

        $i3 = $i2 - -2147483648;

        $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: int label> = $i3;

        goto label2;

     label1:
        r11 = new androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1;

        specialinvoke r11.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: void <init>(androidx.camera.viewfinder.CameraViewfinderExt,kotlin.coroutines.Continuation)>(r0, r3);

        $r9 = r11;

     label2:
        $r5 = $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: java.lang.Object result>;

        r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        r4 = virtualinvoke $r1.<androidx.camera.viewfinder.CameraViewfinder: com.google.common.util.concurrent.ListenableFuture requestSurfaceAsync(androidx.camera.viewfinder.ViewfinderSurfaceRequest)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "requestSurfaceAsync(viewfinderSurfaceRequest)");

        $r9.<androidx.camera.viewfinder.CameraViewfinderExt$requestSurface$1: int label> = 1;

        r13 = (kotlin.coroutines.Continuation) $r9;

        $r10 = staticinvoke <androidx.concurrent.futures.ListenableFutureKt: java.lang.Object await(com.google.common.util.concurrent.ListenableFuture,kotlin.coroutines.Continuation)>(r4, r13);

        if $r10 != r6 goto label5;

        return r6;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5);

        $r10 = $r5;

     label5:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "requestSurfaceAsync(view\u2026erSurfaceRequest).await()");

        return $r10;

     label6:
        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r12;
    }

    static void <clinit>()
    {
        androidx.camera.viewfinder.CameraViewfinderExt $r0;

        $r0 = new androidx.camera.viewfinder.CameraViewfinderExt;

        specialinvoke $r0.<androidx.camera.viewfinder.CameraViewfinderExt: void <init>()>();

        <androidx.camera.viewfinder.CameraViewfinderExt: androidx.camera.viewfinder.CameraViewfinderExt INSTANCE> = $r0;

        return;
    }

