androidx.test.espresso.assertion.ViewAssertions
<androidx.test.espresso.assertion.ViewAssertions: java.lang.String TAG>
    public static androidx.test.espresso.ViewAssertion doesNotExist()
    {
        androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion r0;

        r0 = new androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion;

        specialinvoke r0.<androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion: void <init>(androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion-IA)>(null);

        return r0;
    }

    public static androidx.test.espresso.ViewAssertion matches(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r3;
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion r1;
        java.lang.Object $r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 = new androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion;

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (org.hamcrest.Matcher) $r2;

        specialinvoke r1.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: void <init>(org.hamcrest.Matcher,androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion-IA)>($r3, null);

        return r1;
    }

    public static androidx.test.espresso.ViewAssertion selectedDescendantsMatch(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r2;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r2 = new androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        specialinvoke r2.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion-IA)>(r0, r1, null);

        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Landroidx/test/espresso/assertion/ViewAssertions;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.assertion.ViewAssertions: java.lang.String TAG> = $r1;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.assertion.ViewAssertions r0;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion-IA
androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion
    private void <init>()
    {
        androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion r0;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion-IA)
    {
        androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion r0;
        androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion-IA r1;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion;

        r1 := @parameter0: androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion-IA;

        specialinvoke r0.<androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion: void <init>()>();

        return;
    }

    public void check(android.view.View, androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        java.lang.StringBuilder $r1, $r2, r10;
        java.lang.String $r3, r9;
        java.lang.Boolean $r4, $r5;
        org.hamcrest.Matcher $r6;
        androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion r7;
        android.view.View r8;

        r7 := @this: androidx.test.espresso.assertion.ViewAssertions$DoesNotExistViewAssertion;

        r8 := @parameter0: android.view.View;

        r0 := @parameter1: androidx.test.espresso.NoMatchingViewException;

        if r8 == null goto label1;

        r9 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String describe(android.view.View)>(r8);

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View is present in the hierarchy: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r5);

        staticinvoke <androidx.test.espresso.matcher.ViewMatchers: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>($r3, $r4, $r6);

        return;

     label1:
        return;
    }

androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion-IA
androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion
<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: org.hamcrest.Matcher viewMatcher>
    public java.lang.String toString()
    {
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion r0;
        java.util.Locale r1;
        java.lang.Object[] r2;
        org.hamcrest.Matcher $r3;
        java.lang.String $r4;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: org.hamcrest.Matcher viewMatcher>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "MatchesViewAssertion{viewMatcher=%s}", r2);

        return $r4;
    }

    private void <init>(org.hamcrest.Matcher)
    {
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion;

        r1 := @parameter0: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: org.hamcrest.Matcher viewMatcher> = r1;

        return;
    }

    void <init>(org.hamcrest.Matcher, androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion-IA)
    {
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion r0;
        org.hamcrest.Matcher r1;
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion-IA r2;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion-IA;

        specialinvoke r0.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: void <init>(org.hamcrest.Matcher)>(r1);

        return;
    }

    public void check(android.view.View, androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion r0;
        android.view.View r1;
        org.hamcrest.Matcher $r3, $r6;
        java.lang.String $r5;
        androidx.test.espresso.NoMatchingViewException r7;
        org.hamcrest.StringDescription r8, r9;
        java.lang.Throwable r10;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion;

        r1 := @parameter0: android.view.View;

        r7 := @parameter1: androidx.test.espresso.NoMatchingViewException;

        if r7 == null goto label1;

        r10 = (java.lang.Throwable) r7;

        throw r10;

     label1:
        r9 = new org.hamcrest.StringDescription;

        r8 = r9;

        specialinvoke r9.<org.hamcrest.StringDescription: void <init>()>();

        virtualinvoke r8.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\'");

        $r3 = r0.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: org.hamcrest.Matcher viewMatcher>;

        interfaceinvoke $r3.<org.hamcrest.Matcher: void describeTo(org.hamcrest.Description)>(r8);

        virtualinvoke r8.<org.hamcrest.StringDescription: org.hamcrest.Description appendText(java.lang.String)>("\' doesn\'t match the selected view.");

        $r5 = virtualinvoke r8.<org.hamcrest.StringDescription: java.lang.String toString()>();

        $r6 = r0.<androidx.test.espresso.assertion.ViewAssertions$MatchesViewAssertion: org.hamcrest.Matcher viewMatcher>;

        staticinvoke <androidx.test.espresso.matcher.ViewMatchers: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>($r5, r1, $r6);

        return;
    }

androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1
<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion this$0>
    void <init>(androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1 r0;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r1;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1;

        r1 := @parameter0: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(android.view.View)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1 r0;
        android.view.View r1;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion $r2;
        org.hamcrest.Matcher $r3;
        boolean $z0;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion this$0>;

        $r3 = staticinvoke <androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher '-$$Nest$fgetselector'(androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion)>($r2);

        $z0 = interfaceinvoke $r3.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1 r0;
        java.lang.Object r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.view.View) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1: boolean apply(android.view.View)>($r2);

        return $z0;
    }

androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion-IA
androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion
<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher selector>
<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher matcher>
    public java.lang.String toString()
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r0;
        java.util.Locale r1;
        java.lang.Object[] r2;
        org.hamcrest.Matcher $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher selector>;

        r2[0] = $r3;

        $r4 = r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher matcher>;

        r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "SelectedDescendantsMatchViewAssertion{selector=%s, matcher=%s}", r2);

        return $r5;
    }

    static volatile org.hamcrest.Matcher '-$$Nest$fgetselector'(androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        $r1 = r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher selector>;

        return $r1;
    }

    private void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r0;
        org.hamcrest.Matcher r1, r2;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher selector> = r1;

        r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher matcher> = r2;

        return;
    }

    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion-IA)
    {
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r0;
        org.hamcrest.Matcher r1, r2;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion-IA r3;

        r0 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        r3 := @parameter2: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion-IA;

        specialinvoke r0.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher)>(r1, r2);

        return;
    }

    public void check(android.view.View, androidx.test.espresso.NoMatchingViewException)
    {
        java.util.ArrayList r0, r19;
        java.lang.Iterable $r2, $r3;
        int $i0;
        org.hamcrest.Matcher $r4, $r6;
        java.lang.Object $r5;
        boolean $z0, $z2;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion r7;
        android.view.View r8, r12;
        androidx.test.espresso.NoMatchingViewException r9;
        androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1 r10, r18;
        java.util.Iterator r11;
        java.util.Locale r13;
        java.lang.Object[] r14;
        java.lang.String r15, r16;
        junit.framework.AssertionFailedError r17, r20;
        java.util.List r21, r22, r23;

        r7 := @this: androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion;

        r8 := @parameter0: android.view.View;

        r9 := @parameter1: androidx.test.espresso.NoMatchingViewException;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r8);

        r18 = new androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1;

        r10 = r18;

        specialinvoke r18.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion$1: void <init>(androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion)>(r7);

        $r2 = staticinvoke <androidx.test.espresso.util.TreeIterables: java.lang.Iterable breadthFirstViewTraversal(android.view.View)>(r8);

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,androidx.test.espresso.core.internal.deps.guava.base.Predicate)>($r2, r10);

        r11 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        r19 = new java.util.ArrayList;

        r0 = r19;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

     label1:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.view.View) $r5;

        $r6 = r7.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher matcher>;

        $z0 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r12);

        if $z0 != 0 goto label1;

        r21 = (java.util.List) r0;

        interfaceinvoke r21.<java.util.List: boolean add(java.lang.Object)>(r12);

        goto label1;

     label2:
        r22 = (java.util.List) r0;

        $i0 = interfaceinvoke r22.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        r13 = <java.util.Locale: java.util.Locale ROOT>;

        r14 = newarray (java.lang.Object)[1];

        $r4 = r7.<androidx.test.espresso.assertion.ViewAssertions$SelectedDescendantsMatchViewAssertion: org.hamcrest.Matcher matcher>;

        r14[0] = $r4;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r13, "At least one view did not match the required matcher: %s", r14);

        r23 = (java.util.List) r0;

        r16 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String getViewHierarchyErrorMessage(android.view.View,java.util.List,java.lang.String,java.lang.String)>(r8, r23, r15, "****DOES NOT MATCH****");

        r20 = new junit.framework.AssertionFailedError;

        r17 = r20;

        specialinvoke r20.<junit.framework.AssertionFailedError: void <init>(java.lang.String)>(r16);

        throw r17;

     label3:
        return;
    }

