androidx.media3.exoplayer.offline.DownloadManager
<androidx.media3.exoplayer.offline.DownloadManager: int DEFAULT_MAX_PARALLEL_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadManager: int DEFAULT_MIN_RETRY_COUNT>
<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.Requirements DEFAULT_REQUIREMENTS>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_INITIALIZED>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_PROCESSED>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_DOWNLOAD_UPDATE>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_INITIALIZE>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_SET_DOWNLOADS_PAUSED>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_SET_NOT_MET_REQUIREMENTS>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_SET_STOP_REASON>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_SET_MAX_PARALLEL_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_SET_MIN_RETRY_COUNT>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_ADD_DOWNLOAD>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_REMOVE_DOWNLOAD>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_REMOVE_ALL_DOWNLOADS>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_TASK_STOPPED>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_CONTENT_LENGTH_CHANGED>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_UPDATE_PROGRESS>
<androidx.media3.exoplayer.offline.DownloadManager: int MSG_RELEASE>
<androidx.media3.exoplayer.offline.DownloadManager: java.lang.String TAG>
<androidx.media3.exoplayer.offline.DownloadManager: android.content.Context context>
<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>
<androidx.media3.exoplayer.offline.DownloadManager: android.os.Handler applicationHandler>
<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>
<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener requirementsListener>
<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>
<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>
<androidx.media3.exoplayer.offline.DownloadManager: int activeTaskCount>
<androidx.media3.exoplayer.offline.DownloadManager: boolean initialized>
<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused>
<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads>
<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount>
<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements>
<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements>
<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads>
<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>
    public void <init>(android.content.Context, androidx.media3.database.DatabaseProvider, androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource$Factory)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        android.content.Context r1;
        androidx.media3.database.DatabaseProvider r2;
        androidx.media3.datasource.cache.Cache r3;
        androidx.media3.datasource.DataSource$Factory r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.database.DatabaseProvider;

        r3 := @parameter2: androidx.media3.datasource.cache.Cache;

        r4 := @parameter3: androidx.media3.datasource.DataSource$Factory;

        $r5 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void <init>(android.content.Context,androidx.media3.database.DatabaseProvider,androidx.media3.datasource.cache.Cache,androidx.media3.datasource.DataSource$Factory,java.util.concurrent.Executor)>(r1, r2, r3, r4, $r5);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.database.DatabaseProvider, androidx.media3.datasource.cache.Cache, androidx.media3.datasource.DataSource$Factory, java.util.concurrent.Executor)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        android.content.Context r1;
        androidx.media3.database.DatabaseProvider r2;
        androidx.media3.datasource.cache.Cache r3;
        androidx.media3.datasource.DataSource$Factory r4;
        java.util.concurrent.Executor r5;
        androidx.media3.exoplayer.offline.DefaultDownloadIndex $r6;
        androidx.media3.exoplayer.offline.DefaultDownloaderFactory $r7;
        androidx.media3.datasource.cache.CacheDataSource$Factory $r8, $r9, $r10;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.database.DatabaseProvider;

        r3 := @parameter2: androidx.media3.datasource.cache.Cache;

        r4 := @parameter3: androidx.media3.datasource.DataSource$Factory;

        r5 := @parameter4: java.util.concurrent.Executor;

        $r6 = new androidx.media3.exoplayer.offline.DefaultDownloadIndex;

        specialinvoke $r6.<androidx.media3.exoplayer.offline.DefaultDownloadIndex: void <init>(androidx.media3.database.DatabaseProvider)>(r2);

        $r7 = new androidx.media3.exoplayer.offline.DefaultDownloaderFactory;

        $r8 = new androidx.media3.datasource.cache.CacheDataSource$Factory;

        specialinvoke $r8.<androidx.media3.datasource.cache.CacheDataSource$Factory: void <init>()>();

        $r9 = virtualinvoke $r8.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource$Factory setCache(androidx.media3.datasource.cache.Cache)>(r3);

        $r10 = virtualinvoke $r9.<androidx.media3.datasource.cache.CacheDataSource$Factory: androidx.media3.datasource.cache.CacheDataSource$Factory setUpstreamDataSourceFactory(androidx.media3.datasource.DataSource$Factory)>(r4);

        specialinvoke $r7.<androidx.media3.exoplayer.offline.DefaultDownloaderFactory: void <init>(androidx.media3.datasource.cache.CacheDataSource$Factory,java.util.concurrent.Executor)>($r10, r5);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void <init>(android.content.Context,androidx.media3.exoplayer.offline.WritableDownloadIndex,androidx.media3.exoplayer.offline.DownloaderFactory)>(r1, $r6, $r7);

        return;
    }

    public void <init>(android.content.Context, androidx.media3.exoplayer.offline.WritableDownloadIndex, androidx.media3.exoplayer.offline.DownloaderFactory)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        android.content.Context r1, $r7;
        androidx.media3.exoplayer.offline.WritableDownloadIndex r2;
        androidx.media3.exoplayer.offline.DownloaderFactory r3;
        android.os.Handler r4;
        android.os.HandlerThread r5, $r11;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener r6;
        java.util.List $r8;
        java.util.concurrent.CopyOnWriteArraySet $r9;
        android.os.Handler$Callback $r10;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r12, $r16;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher $r13, $r15;
        androidx.media3.exoplayer.scheduler.Requirements $r14;
        android.os.Message $r17;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.exoplayer.offline.WritableDownloadIndex;

        r3 := @parameter2: androidx.media3.exoplayer.offline.DownloaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager: android.content.Context context> = $r7;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex> = r2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads> = 3;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount> = 5;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused> = 1;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads> = $r8;

        $r9 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r9.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners> = $r9;

        $r10 = dynamicinvoke "handleMessage" <android.os.Handler$Callback (androidx.media3.exoplayer.offline.DownloadManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(android.os.Message), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.offline.DownloadManager: boolean handleMainMessage(android.os.Message)>, methodtype: boolean __METHODTYPE__(android.os.Message));

        r4 = staticinvoke <androidx.media3.common.util.Util: android.os.Handler createHandlerForCurrentOrMainLooper(android.os.Handler$Callback)>($r10);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: android.os.Handler applicationHandler> = r4;

        $r11 = new android.os.HandlerThread;

        specialinvoke $r11.<android.os.HandlerThread: void <init>(java.lang.String)>("ExoPlayer:DownloadManager");

        r5 = $r11;

        virtualinvoke r5.<android.os.HandlerThread: void start()>();

        $r12 = new androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads>;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount>;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused>;

        specialinvoke $r12.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void <init>(android.os.HandlerThread,androidx.media3.exoplayer.offline.WritableDownloadIndex,androidx.media3.exoplayer.offline.DownloaderFactory,android.os.Handler,int,int,boolean)>(r5, r2, r3, r4, $i1, $i0, $z0);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler> = $r12;

        r6 = dynamicinvoke "onRequirementsStateChanged" <androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener (androidx.media3.exoplayer.offline.DownloadManager)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.exoplayer.scheduler.RequirementsWatcher,int), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.exoplayer.offline.DownloadManager: void onRequirementsStateChanged(androidx.media3.exoplayer.scheduler.RequirementsWatcher,int)>, methodtype: void __METHODTYPE__(androidx.media3.exoplayer.scheduler.RequirementsWatcher,int));

        r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener requirementsListener> = r6;

        $r13 = new androidx.media3.exoplayer.scheduler.RequirementsWatcher;

        $r14 = <androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.Requirements DEFAULT_REQUIREMENTS>;

        specialinvoke $r13.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: void <init>(android.content.Context,androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener,androidx.media3.exoplayer.scheduler.Requirements)>(r1, r6, $r14);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher> = $r13;

        $r15 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        $i2 = virtualinvoke $r15.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: int start()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements> = $i2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = 1;

        $r16 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $i3 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements>;

        $r17 = virtualinvoke $r16.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int)>(0, $i3, 0);

        virtualinvoke $r17.<android.os.Message: void sendToTarget()>();

        return;
    }

    public android.os.Looper getApplicationLooper()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        android.os.Handler $r1;
        android.os.Looper $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: android.os.Handler applicationHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        return $r2;
    }

    public boolean isInitialized()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean initialized>;

        return $z0;
    }

    public boolean isIdle()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int activeTaskCount>;

        if $i0 != 0 goto label1;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isWaitingForRequirements()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements>;

        return $z0;
    }

    public void addListener(androidx.media3.exoplayer.offline.DownloadManager$Listener)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r1;
        java.util.concurrent.CopyOnWriteArraySet $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(androidx.media3.exoplayer.offline.DownloadManager$Listener)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r1;
        java.util.concurrent.CopyOnWriteArraySet $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public androidx.media3.exoplayer.scheduler.Requirements getRequirements()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher $r1;
        androidx.media3.exoplayer.scheduler.Requirements $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: androidx.media3.exoplayer.scheduler.Requirements getRequirements()>();

        return $r2;
    }

    public int getNotMetRequirements()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements>;

        return $i0;
    }

    public void setRequirements(androidx.media3.exoplayer.scheduler.Requirements)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.scheduler.Requirements r1, $r3;
        int i0;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher $r2, $r4, $r5, $r8, $r9;
        boolean $z0;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener $r6;
        android.content.Context $r7;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.scheduler.Requirements;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: androidx.media3.exoplayer.scheduler.Requirements getRequirements()>();

        $z0 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        virtualinvoke $r4.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: void stop()>();

        $r5 = new androidx.media3.exoplayer.scheduler.RequirementsWatcher;

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager: android.content.Context context>;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener requirementsListener>;

        specialinvoke $r5.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: void <init>(android.content.Context,androidx.media3.exoplayer.scheduler.RequirementsWatcher$Listener,androidx.media3.exoplayer.scheduler.Requirements)>($r7, $r6, r1);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher> = $r5;

        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        i0 = virtualinvoke $r8.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: int start()>();

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void onRequirementsStateChanged(androidx.media3.exoplayer.scheduler.RequirementsWatcher,int)>($r9, i0);

        return;
    }

    public int getMaxParallelDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads>;

        return $i0;
    }

    public void setMaxParallelDownloads(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r1;
        android.os.Message $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads>;

        if $i1 != i0 goto label3;

        return;

     label3:
        r0.<androidx.media3.exoplayer.offline.DownloadManager: int maxParallelDownloads> = i0;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i3 = $i2 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i3;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int)>(4, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public int getMinRetryCount()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount>;

        return $i0;
    }

    public void setMinRetryCount(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r1;
        android.os.Message $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount>;

        if $i1 != i0 goto label3;

        return;

     label3:
        r0.<androidx.media3.exoplayer.offline.DownloadManager: int minRetryCount> = i0;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i3 = $i2 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i3;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int)>(5, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public androidx.media3.exoplayer.offline.DownloadIndex getDownloadIndex()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        return $r1;
    }

    public java.util.List getCurrentDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        java.util.List $r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads>;

        return $r1;
    }

    public boolean getDownloadsPaused()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused>;

        return $z0;
    }

    public void resumeDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void setDownloadsPaused(boolean)>(0);

        return;
    }

    public void pauseDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void setDownloadsPaused(boolean)>(1);

        return;
    }

    public void setStopReason(java.lang.String, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r2;
        android.os.Message $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i2;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, i0, 0, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void addDownload(androidx.media3.exoplayer.offline.DownloadRequest)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void addDownload(androidx.media3.exoplayer.offline.DownloadRequest,int)>(r1, 0);

        return;
    }

    public void addDownload(androidx.media3.exoplayer.offline.DownloadRequest, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        int i0, $i1, $i2;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r2;
        android.os.Message $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        i0 := @parameter1: int;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i2;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(6, i0, 0, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void removeDownload(java.lang.String)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        java.lang.String r1;
        int $i0, $i1;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r2;
        android.os.Message $r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i1;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(7, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void removeAllDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int $i0, $i1;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r1;
        android.os.Message $r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i1;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r2 = virtualinvoke $r1.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int)>(8);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r1, $r4, $r5, $r6, $r11, $r14;
        java.lang.Throwable r2, r3, $r12, $r13;
        boolean $z0, z2, $z3;
        android.os.Handler $r7;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher $r8;
        java.util.List $r9;
        java.lang.Thread $r10;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $z0 = $r5.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean released>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        virtualinvoke $r6.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean sendEmptyMessage(int)>(12);

        z2 = 0;

     label04:
        $r14 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $z3 = $r14.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean released>;

        if $z3 != 0 goto label08;

     label05:
        $r11 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        virtualinvoke $r11.<java.lang.Object: void wait()>();

     label06:
        goto label04;

     label07:
        $r13 := @caughtexception;

        r2 = $r13;

        z2 = 1;

        goto label04;

     label08:
        if z2 == 0 goto label09;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r10.<java.lang.Thread: void interrupt()>();

     label09:
        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager: android.os.Handler applicationHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.RequirementsWatcher requirementsWatcher>;

        virtualinvoke $r8.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: void stop()>();

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads> = $r9;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = 0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int activeTaskCount> = 0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean initialized> = 0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements> = 0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements> = 0;

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r1;

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void setDownloadsPaused(boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r1;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r2;
        int $i0, $i1;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r3;
        android.os.Message $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        java.lang.Object $r6;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter0: boolean;

        $z2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused>;

        if $z2 != z0 goto label1;

        return;

     label1:
        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused> = z0;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        if z0 == 0 goto label2;

        $b3 = 1;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        $r4 = virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int)>(1, $b3, 0);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        z1 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean updateWaitingForRequirements()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r1 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r6;

        interfaceinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onDownloadsPausedChanged(androidx.media3.exoplayer.offline.DownloadManager,boolean)>(r0, z0);

        goto label4;

     label5:
        if z1 == 0 goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void notifyWaitingForRequirementsChanged()>();

     label6:
        return;
    }

    private void onRequirementsStateChanged(androidx.media3.exoplayer.scheduler.RequirementsWatcher, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.scheduler.RequirementsWatcher r1;
        int i0, $i1, $i2, $i3;
        androidx.media3.exoplayer.scheduler.Requirements r2;
        boolean z0, $z1;
        java.util.Iterator r3;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        java.lang.Object $r6;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler $r7;
        android.os.Message $r8;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.scheduler.RequirementsWatcher;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.RequirementsWatcher: androidx.media3.exoplayer.scheduler.Requirements getRequirements()>();

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements>;

        if $i1 == i0 goto label1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements> = i0;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i3 = $i2 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i3;

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        $r8 = virtualinvoke $r7.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Message obtainMessage(int,int,int)>(2, i0, 0);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

     label1:
        z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean updateWaitingForRequirements()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r3 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r6;

        interfaceinvoke r4.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onRequirementsStateChanged(androidx.media3.exoplayer.offline.DownloadManager,androidx.media3.exoplayer.scheduler.Requirements,int)>(r0, r2, i0);

        goto label2;

     label3:
        if z0 == 0 goto label4;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void notifyWaitingForRequirementsChanged()>();

     label4:
        return;
    }

    private boolean updateWaitingForRequirements()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        boolean $z0, z1, $z2, $z3, z4;
        int $i0, $i1, $i2, i3;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        androidx.media3.exoplayer.offline.Download $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        z1 = 0;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean downloadsPaused>;

        if $z0 != 0 goto label3;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int notMetRequirements>;

        if $i0 == 0 goto label3;

        i3 = 0;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i3 >= $i1 goto label3;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (androidx.media3.exoplayer.offline.Download) $r3;

        $i2 = $r4.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i2 != 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $z2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements>;

        if $z2 == z1 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z4 = $z3;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements> = z1;

        return z4;
    }

    private void notifyWaitingForRequirementsChanged()
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        java.util.Iterator r1;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r2;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r4;

        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean waitingForRequirements>;

        interfaceinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onWaitingForRequirementsChanged(androidx.media3.exoplayer.offline.DownloadManager,boolean)>(r0, $z1);

        goto label1;

     label2:
        return;
    }

    private boolean handleMainMessage(android.os.Message)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        android.os.Message r1;
        java.util.List r2;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate r3;
        int i0, i1, $i2;
        java.lang.Object $r4, $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: android.os.Message;

        $i2 = r1.<android.os.Message: int what>;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label2;
            default: goto label4;
        };

     label1:
        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (java.util.List) $r5;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void onInitialized(java.util.List)>(r2);

        goto label5;

     label2:
        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate) $r4;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void onDownloadUpdate(androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate)>(r3);

        goto label5;

     label3:
        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void onMessageProcessed(int,int)>(i0, i1);

        goto label5;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label5:
        return 1;
    }

    private void onInitialized(java.util.List)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        java.util.List r1, $r4;
        boolean z0, $z1;
        java.util.Iterator r2;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r3;
        java.util.concurrent.CopyOnWriteArraySet $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: java.util.List;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean initialized> = 1;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads> = $r4;

        z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean updateWaitingForRequirements()>();

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r2 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r6;

        interfaceinvoke r3.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onInitialized(androidx.media3.exoplayer.offline.DownloadManager)>(r0);

        goto label1;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void notifyWaitingForRequirementsChanged()>();

     label3:
        return;
    }

    private void onDownloadUpdate(androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate r1;
        androidx.media3.exoplayer.offline.Download r2;
        boolean z0, $z1, $z2, $z3;
        java.util.List $r3, $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5, $r8;
        java.lang.Object $r6, $r9;
        java.lang.Exception $r7;
        java.util.Iterator r10, r12;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r11, r13;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        $r3 = r1.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.util.List downloads>;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.List downloads> = $r4;

        r2 = r1.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: androidx.media3.exoplayer.offline.Download download>;

        z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean updateWaitingForRequirements()>();

        $z1 = r1.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: boolean isRemove>;

        if $z1 == 0 goto label3;

        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r10 = virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r9 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r9;

        interfaceinvoke r11.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onDownloadRemoved(androidx.media3.exoplayer.offline.DownloadManager,androidx.media3.exoplayer.offline.Download)>(r0, r2);

        goto label1;

     label2:
        goto label5;

     label3:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r12 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r6;

        $r7 = r1.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.lang.Exception finalException>;

        interfaceinvoke r13.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onDownloadChanged(androidx.media3.exoplayer.offline.DownloadManager,androidx.media3.exoplayer.offline.Download,java.lang.Exception)>(r0, r2, $r7);

        goto label4;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: void notifyWaitingForRequirementsChanged()>();

     label6:
        return;
    }

    private void onMessageProcessed(int, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager r0;
        int i0, i1, $i2, $i3;
        java.util.Iterator r1;
        androidx.media3.exoplayer.offline.DownloadManager$Listener r2;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArraySet $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages>;

        $i3 = $i2 - i0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int pendingMessages> = $i3;

        r0.<androidx.media3.exoplayer.offline.DownloadManager: int activeTaskCount> = i1;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager: boolean isIdle()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager: java.util.concurrent.CopyOnWriteArraySet listeners>;

        r1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.media3.exoplayer.offline.DownloadManager$Listener) $r4;

        interfaceinvoke r2.<androidx.media3.exoplayer.offline.DownloadManager$Listener: void onIdle(androidx.media3.exoplayer.offline.DownloadManager)>(r0);

        goto label1;

     label2:
        return;
    }

    static androidx.media3.exoplayer.offline.Download mergeRequest(androidx.media3.exoplayer.offline.Download, androidx.media3.exoplayer.offline.DownloadRequest, int, long)
    {
        androidx.media3.exoplayer.offline.Download r0, $r2;
        androidx.media3.exoplayer.offline.DownloadRequest r1, $r3, $r4;
        int i0, i3;
        long l1, l2, $l4;
        boolean $z0;
        byte b5;

        r0 := @parameter0: androidx.media3.exoplayer.offline.Download;

        r1 := @parameter1: androidx.media3.exoplayer.offline.DownloadRequest;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        i3 = r0.<androidx.media3.exoplayer.offline.Download: int state>;

        if i3 == 5 goto label1;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.offline.Download: boolean isTerminalState()>();

        if $z0 == 0 goto label2;

     label1:
        $l4 = l1;

        goto label3;

     label2:
        $l4 = r0.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

     label3:
        l2 = $l4;

        if i3 == 5 goto label4;

        if i3 != 7 goto label5;

     label4:
        b5 = 7;

        goto label7;

     label5:
        if i0 == 0 goto label6;

        b5 = 1;

        goto label7;

     label6:
        b5 = 0;

     label7:
        $r2 = new androidx.media3.exoplayer.offline.Download;

        $r3 = r0.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r4 = virtualinvoke $r3.<androidx.media3.exoplayer.offline.DownloadRequest: androidx.media3.exoplayer.offline.DownloadRequest copyWithMergedRequest(androidx.media3.exoplayer.offline.DownloadRequest)>(r1);

        specialinvoke $r2.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int)>($r4, b5, l2, l1, -1L, i0, 0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.media3.exoplayer.scheduler.Requirements $r0;

        $r0 = new androidx.media3.exoplayer.scheduler.Requirements;

        specialinvoke $r0.<androidx.media3.exoplayer.scheduler.Requirements: void <init>(int)>(1);

        <androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.scheduler.Requirements DEFAULT_REQUIREMENTS> = $r0;

        return;
    }

androidx.media3.exoplayer.offline.DownloadManager$1
androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate
<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: androidx.media3.exoplayer.offline.Download download>
<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: boolean isRemove>
<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.util.List downloads>
<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.lang.Exception finalException>
    public void <init>(androidx.media3.exoplayer.offline.Download, boolean, java.util.List, java.lang.Exception)
    {
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate r0;
        androidx.media3.exoplayer.offline.Download r1;
        boolean z0;
        java.util.List r2;
        java.lang.Exception r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.Exception;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: androidx.media3.exoplayer.offline.Download download> = r1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: boolean isRemove> = z0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.util.List downloads> = r2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: java.lang.Exception finalException> = r3;

        return;
    }

androidx.media3.exoplayer.offline.DownloadManager$InternalHandler
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int UPDATE_PROGRESS_INTERVAL_MS>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean released>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.HandlerThread thread>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.DownloaderFactory downloaderFactory>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int notMetRequirements>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean downloadsPaused>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int maxParallelDownloads>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int minRetryCount>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount>
<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean hasActiveRemoveTask>
    public void <init>(android.os.HandlerThread, androidx.media3.exoplayer.offline.WritableDownloadIndex, androidx.media3.exoplayer.offline.DownloaderFactory, android.os.Handler, int, int, boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        android.os.HandlerThread r1;
        androidx.media3.exoplayer.offline.WritableDownloadIndex r2;
        androidx.media3.exoplayer.offline.DownloaderFactory r3;
        android.os.Handler r4;
        int i0, i1;
        boolean z0;
        android.os.Looper $r5;
        java.util.ArrayList $r6;
        java.util.HashMap $r7;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: android.os.HandlerThread;

        r2 := @parameter1: androidx.media3.exoplayer.offline.WritableDownloadIndex;

        r3 := @parameter2: androidx.media3.exoplayer.offline.DownloaderFactory;

        r4 := @parameter3: android.os.Handler;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        z0 := @parameter6: boolean;

        $r5 = virtualinvoke r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.HandlerThread thread> = r1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex> = r2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.DownloaderFactory downloaderFactory> = r3;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler> = r4;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int maxParallelDownloads> = i0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int minRetryCount> = i1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean downloadsPaused> = z0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks> = $r7;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        android.os.Message r1, $r7;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, i9, i10, i11, i12;
        androidx.media3.exoplayer.offline.DownloadRequest r2;
        java.lang.Object $r3, $r4, $r8, $r9, $r10;
        long $l5;
        java.util.HashMap $r5;
        android.os.Handler $r6;
        java.lang.IllegalStateException $r11;
        java.lang.String r12, r13;
        androidx.media3.exoplayer.offline.DownloadManager$Task r14, r15;
        byte $b13;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: android.os.Message;

        z1 = 1;

        $i2 = r1.<android.os.Message: int what>;

        tableswitch($i2)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            default: goto label16;
        };

     label01:
        i9 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void initialize(int)>(i9);

        goto label17;

     label02:
        $i8 = r1.<android.os.Message: int arg1>;

        if $i8 == 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setDownloadsPaused(boolean)>(z0);

        goto label17;

     label05:
        i10 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setNotMetRequirements(int)>(i10);

        goto label17;

     label06:
        $r10 = r1.<android.os.Message: java.lang.Object obj>;

        r12 = (java.lang.String) $r10;

        i11 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setStopReason(java.lang.String,int)>(r12, i11);

        goto label17;

     label07:
        i0 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setMaxParallelDownloads(int)>(i0);

        goto label17;

     label08:
        i1 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setMinRetryCount(int)>(i1);

        goto label17;

     label09:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (androidx.media3.exoplayer.offline.DownloadRequest) $r9;

        i12 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void addDownload(androidx.media3.exoplayer.offline.DownloadRequest,int)>(r2, i12);

        goto label17;

     label10:
        $r8 = r1.<android.os.Message: java.lang.Object obj>;

        r13 = (java.lang.String) $r8;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void removeDownload(java.lang.String)>(r13);

        goto label17;

     label11:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void removeAllDownloads()>();

        goto label17;

     label12:
        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r14 = (androidx.media3.exoplayer.offline.DownloadManager$Task) $r4;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void onTaskStopped(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r14);

        z1 = 0;

        goto label17;

     label13:
        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r15 = (androidx.media3.exoplayer.offline.DownloadManager$Task) $r3;

        $i4 = r1.<android.os.Message: int arg1>;

        $i3 = r1.<android.os.Message: int arg2>;

        $l5 = staticinvoke <androidx.media3.common.util.Util: long toLong(int,int)>($i4, $i3);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void onContentLengthChanged(androidx.media3.exoplayer.offline.DownloadManager$Task,long)>(r15, $l5);

        return;

     label14:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void updateProgress()>();

        return;

     label15:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void release()>();

        return;

     label16:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label17:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        if z1 == 0 goto label18;

        $b13 = 1;

        goto label19;

     label18:
        $b13 = 0;

     label19:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        $i7 = virtualinvoke $r5.<java.util.HashMap: int size()>();

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(1, $b13, $i7);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void initialize(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        int i0;
        java.lang.Throwable r1, $r11, $r13, r15;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r2, $r4;
        int[] $r3;
        boolean $z0;
        java.util.ArrayList $r5, $r6, $r9, $r12, r16;
        android.os.Handler $r7;
        android.os.Message $r8;
        androidx.media3.exoplayer.offline.Download $r10;
        androidx.media3.exoplayer.offline.DownloadCursor r14;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int notMetRequirements> = i0;

        r14 = null;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void setDownloadingStatesToQueued()>();

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        $r3 = newarray (int)[5];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 2;

        $r3[3] = 5;

        $r3[4] = 7;

        r14 = interfaceinvoke $r4.<androidx.media3.exoplayer.offline.WritableDownloadIndex: androidx.media3.exoplayer.offline.DownloadCursor getDownloads(int[])>($r3);

     label2:
        $z0 = interfaceinvoke r14.<androidx.media3.exoplayer.offline.DownloadCursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r10 = interfaceinvoke r14.<androidx.media3.exoplayer.offline.DownloadCursor: androidx.media3.exoplayer.offline.Download getDownload()>();

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r14);

        goto label8;

     label4:
        $r11 := @caughtexception;

        r15 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to load index.", r15);

        $r12 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

     label5:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r14);

        goto label8;

     label6:
        $r13 := @caughtexception;

        r1 = $r13;

     label7:
        staticinvoke <androidx.media3.common.util.Util: void closeQuietly(java.io.Closeable)>(r14);

        throw r1;

     label8:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r16 = $r5;

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, r16);

        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void setDownloadsPaused(boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean downloadsPaused> = z0;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void setNotMetRequirements(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int notMetRequirements> = i0;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void setStopReason(java.lang.String, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.lang.String r1, $r13;
        int i0, $i1, i2;
        java.lang.Throwable r2, $r9, $r14, r15;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r3, $r5;
        java.util.ArrayList $r4, $r6;
        java.lang.Object $r7;
        androidx.media3.exoplayer.offline.Download $r8, r16;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 != null goto label5;

        i2 = 0;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label2;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r8 = (androidx.media3.exoplayer.offline.Download) $r7;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setStopReason(androidx.media3.exoplayer.offline.Download,int)>($r8, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void setStopReason(int)>(i0);

     label3:
        goto label9;

     label4:
        $r14 := @caughtexception;

        r15 = $r14;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to set manual stop reason", r15);

        goto label9;

     label5:
        r16 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String,boolean)>(r1, 0);

        if r16 == null goto label6;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void setStopReason(androidx.media3.exoplayer.offline.Download,int)>(r16, i0);

        goto label9;

     label6:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void setStopReason(java.lang.String,int)>(r1, i0);

     label7:
        goto label9;

     label8:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set manual stop reason: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", $r13, r2);

     label9:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private void setStopReason(androidx.media3.exoplayer.offline.Download, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1, $r4;
        int i0, $i1, $i2, i3;
        androidx.media3.exoplayer.offline.DownloadRequest $r5;
        long $l4, $l5, $l6;
        androidx.media3.exoplayer.offline.DownloadProgress $r6;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $i2 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i2 != 1 goto label4;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r1, 0, 0);

        goto label4;

     label1:
        $i1 = r1.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        if i0 == $i1 goto label4;

        i3 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if i3 == 0 goto label2;

        if i3 != 2 goto label3;

     label2:
        i3 = 1;

     label3:
        $r4 = new androidx.media3.exoplayer.offline.Download;

        $r5 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $l4 = r1.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = r1.<androidx.media3.exoplayer.offline.Download: long contentLength>;

        $r6 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        specialinvoke $r4.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>($r5, i3, $l4, $l5, $l6, i0, 0, $r6);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)>($r4);

     label4:
        return;
    }

    private void setMaxParallelDownloads(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int maxParallelDownloads> = i0;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void setMinRetryCount(int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i0 := @parameter0: int;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int minRetryCount> = i0;

        return;
    }

    private void addDownload(androidx.media3.exoplayer.offline.DownloadRequest, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        int i0;
        androidx.media3.exoplayer.offline.Download r2, $r4, $r8;
        long l1;
        java.lang.String $r3;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        i0 := @parameter1: int;

        $r3 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        r2 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String,boolean)>($r3, 1);

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if r2 == null goto label1;

        $r8 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager: androidx.media3.exoplayer.offline.Download mergeRequest(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.DownloadRequest,int,long)>(r2, r1, i0, l1);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)>($r8);

        goto label4;

     label1:
        $r4 = new androidx.media3.exoplayer.offline.Download;

        if i0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        specialinvoke $r4.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int)>(r1, $b2, l1, l1, -1L, i0, 0);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)>($r4);

     label4:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void removeDownload(java.lang.String)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.lang.String r1, $r7;
        androidx.media3.exoplayer.offline.Download r2;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String,boolean)>(r1, 1);

        if r2 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove nonexistent download: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadManager", $r7);

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r2, 5, 0);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void removeAllDownloads()
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.util.ArrayList r1, $r2, $r5, $r8, $r9, $r11, $r16, $r20, $r21, $r35, r37, $r38;
        int[] $r3;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r4, $r7;
        boolean $z0;
        int $i0, i1, $i2, i3, i4, $i5;
        java.util.Comparator $r6;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate $r10, r39;
        java.lang.Object $r12, $r17, $r22;
        androidx.media3.exoplayer.offline.Download $r13, $r18, $r19, $r23, $r24, $r26;
        android.os.Handler $r14;
        android.os.Message $r15;
        java.lang.Throwable $r27, $r28, $r29, $r30, r32, r33, r34, r36;
        androidx.media3.exoplayer.offline.DownloadCursor r31;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

     label01:
        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        $r3 = newarray (int)[2];

        $r3[0] = 3;

        $r3[1] = 4;

        r31 = interfaceinvoke $r4.<androidx.media3.exoplayer.offline.WritableDownloadIndex: androidx.media3.exoplayer.offline.DownloadCursor getDownloads(int[])>($r3);

     label02:
        $z0 = interfaceinvoke r31.<androidx.media3.exoplayer.offline.DownloadCursor: boolean moveToNext()>();

        if $z0 == 0 goto label03;

        $r26 = interfaceinvoke r31.<androidx.media3.exoplayer.offline.DownloadCursor: androidx.media3.exoplayer.offline.Download getDownload()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label02;

     label03:
        if r31 == null goto label09;

        interfaceinvoke r31.<androidx.media3.exoplayer.offline.DownloadCursor: void close()>();

        goto label09;

     label04:
        $r30 := @caughtexception;

        r32 = $r30;

        if r31 == null goto label08;

     label05:
        interfaceinvoke r31.<androidx.media3.exoplayer.offline.DownloadCursor: void close()>();

     label06:
        goto label08;

     label07:
        $r28 := @caughtexception;

        r33 = $r28;

        virtualinvoke r32.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r33);

     label08:
        throw r32;

     label09:
        goto label11;

     label10:
        $r29 := @caughtexception;

        r34 = $r29;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadManager", "Failed to load downloads.");

     label11:
        i1 = 0;

     label12:
        $r35 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i2 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label13;

        $r21 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r20 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r22 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r23 = (androidx.media3.exoplayer.offline.Download) $r22;

        $r24 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download copyDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>($r23, 5, 0);

        virtualinvoke $r21.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, $r24);

        i1 = i1 + 1;

        goto label12;

     label13:
        i3 = 0;

     label14:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label15;

        $r16 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r18 = (androidx.media3.exoplayer.offline.Download) $r17;

        $r19 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download copyDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>($r18, 5, 0);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        i3 = i3 + 1;

        goto label14;

     label15:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r6 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int compareStartTimes(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r5, $r6);

     label16:
        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r7.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void setStatesToRemoving()>();

     label17:
        goto label19;

     label18:
        $r27 := @caughtexception;

        r36 = $r27;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to update index.", r36);

     label19:
        $r8 = new java.util.ArrayList;

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r37 = $r8;

        i4 = 0;

     label20:
        $r38 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i5 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if i4 >= $i5 goto label21;

        $r10 = new androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        $r11 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r13 = (androidx.media3.exoplayer.offline.Download) $r12;

        specialinvoke $r10.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: void <init>(androidx.media3.exoplayer.offline.Download,boolean,java.util.List,java.lang.Exception)>($r13, 0, r37, null);

        r39 = $r10;

        $r14 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        $r15 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r39);

        virtualinvoke $r15.<android.os.Message: void sendToTarget()>();

        i4 = i4 + 1;

        goto label20;

     label21:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.io.IOException from label01 to label09 with label10;
        catch java.io.IOException from label16 to label17 with label18;
    }

    private void release()
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0, r14;
        androidx.media3.exoplayer.offline.DownloadManager$Task r1;
        java.lang.Throwable r2, $r10, $r11, r13;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r5;
        java.util.ArrayList $r6;
        android.os.HandlerThread $r7;
        java.lang.Object $r9;
        java.util.Iterator r12;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r12 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r1 = (androidx.media3.exoplayer.offline.DownloadManager$Task) $r9;

        virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager$Task: void cancel(boolean)>(1);

        goto label01;

     label02:
        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r5.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void setDownloadingStatesToQueued()>();

     label03:
        goto label05;

     label04:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to update index.", r13);

     label05:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        virtualinvoke $r6.<java.util.ArrayList: void clear()>();

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.HandlerThread thread>;

        virtualinvoke $r7.<android.os.HandlerThread: boolean quit()>();

        r14 = r0;

        entermonitor r0;

     label06:
        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean released> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r14;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r14;

     label09:
        throw r2;

     label10:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void syncTasks()
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, i2, i3;
        java.lang.Object $r4, $r8;
        androidx.media3.exoplayer.offline.DownloadRequest $r5;
        java.lang.String $r6;
        java.util.HashMap $r7;
        boolean $z0;
        java.lang.IllegalStateException $r10;
        androidx.media3.exoplayer.offline.DownloadManager$Task r11;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i2 = 0;

        i3 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label9;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (androidx.media3.exoplayer.offline.Download) $r4;

        $r7 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        $r5 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r6 = $r5.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r11 = (androidx.media3.exoplayer.offline.DownloadManager$Task) $r8;

        $i1 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label5;
            default: goto label6;
        };

     label2:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncStoppedDownload(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r11);

        goto label7;

     label3:
        r11 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.DownloadManager$Task syncQueuedDownload(androidx.media3.exoplayer.offline.DownloadManager$Task,androidx.media3.exoplayer.offline.Download)>(r11, r1);

        goto label7;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r11);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncDownloadingDownload(androidx.media3.exoplayer.offline.DownloadManager$Task,androidx.media3.exoplayer.offline.Download,int)>(r11, r1, i2);

        goto label7;

     label5:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncRemovingDownload(androidx.media3.exoplayer.offline.DownloadManager$Task,androidx.media3.exoplayer.offline.Download)>(r11, r1);

        goto label7;

     label6:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label7:
        if r11 == null goto label8;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r11);

        if $z0 != 0 goto label8;

        i2 = i2 + 1;

     label8:
        i3 = i3 + 1;

        goto label1;

     label9:
        return;
    }

    private void syncStoppedDownload(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.DownloadManager$Task r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        if r1 == null goto label3;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager$Task: void cancel(boolean)>(0);

     label3:
        return;
    }

    private androidx.media3.exoplayer.offline.DownloadManager$Task syncQueuedDownload(androidx.media3.exoplayer.offline.DownloadManager$Task, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Downloader r1;
        boolean $z0, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.media3.exoplayer.offline.DownloadRequest $r2, $r6, $r7;
        androidx.media3.exoplayer.offline.DownloaderFactory $r3;
        androidx.media3.exoplayer.offline.DownloadManager$Task $r4, r11, r14;
        androidx.media3.exoplayer.offline.DownloadProgress $r5;
        java.lang.String $r8;
        java.util.HashMap $r9;
        androidx.media3.exoplayer.offline.Download r12, r13;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r11 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        r12 := @parameter1: androidx.media3.exoplayer.offline.Download;

        if r11 == null goto label3;

        $z2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r11);

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z3);

        virtualinvoke r11.<androidx.media3.exoplayer.offline.DownloadManager$Task: void cancel(boolean)>(0);

        return r11;

     label3:
        $z0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean canDownloadsRun()>();

        if $z0 == 0 goto label4;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount>;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int maxParallelDownloads>;

        if $i1 < $i0 goto label5;

     label4:
        return null;

     label5:
        r13 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r12, 2, 0);

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.DownloaderFactory downloaderFactory>;

        $r2 = r13.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        r1 = interfaceinvoke $r3.<androidx.media3.exoplayer.offline.DownloaderFactory: androidx.media3.exoplayer.offline.Downloader createDownloader(androidx.media3.exoplayer.offline.DownloadRequest)>($r2);

        $r4 = new androidx.media3.exoplayer.offline.DownloadManager$Task;

        $r6 = r13.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r5 = r13.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int minRetryCount>;

        specialinvoke $r4.<androidx.media3.exoplayer.offline.DownloadManager$Task: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,androidx.media3.exoplayer.offline.Downloader,androidx.media3.exoplayer.offline.DownloadProgress,boolean,int,androidx.media3.exoplayer.offline.DownloadManager$InternalHandler,androidx.media3.exoplayer.offline.DownloadManager$1)>($r6, r1, $r5, 0, $i2, r0, null);

        r14 = $r4;

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        $r7 = r13.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r8 = $r7.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r14);

        $i3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount>;

        $i4 = $i3 + 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount> = $i4;

        if $i3 != 0 goto label6;

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean sendEmptyMessageDelayed(int,long)>(11, 5000L);

     label6:
        virtualinvoke r14.<androidx.media3.exoplayer.offline.DownloadManager$Task: void start()>();

        return r14;
    }

    private void syncDownloadingDownload(androidx.media3.exoplayer.offline.DownloadManager$Task, androidx.media3.exoplayer.offline.Download, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.DownloadManager$Task r1;
        androidx.media3.exoplayer.offline.Download r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        i0 := @parameter2: int;

        $z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean canDownloadsRun()>();

        if $z1 == 0 goto label3;

        $i1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int maxParallelDownloads>;

        if i0 < $i1 goto label4;

     label3:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r2, 0, 0);

        virtualinvoke r1.<androidx.media3.exoplayer.offline.DownloadManager$Task: void cancel(boolean)>(0);

     label4:
        return;
    }

    private void syncRemovingDownload(androidx.media3.exoplayer.offline.DownloadManager$Task, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1;
        androidx.media3.exoplayer.offline.Downloader r2;
        boolean $z0, $z1;
        androidx.media3.exoplayer.offline.DownloadRequest $r3, $r7, $r8;
        androidx.media3.exoplayer.offline.DownloaderFactory $r4;
        androidx.media3.exoplayer.offline.DownloadManager$Task $r5, r12, r13;
        int $i0;
        androidx.media3.exoplayer.offline.DownloadProgress $r6;
        java.lang.String $r9;
        java.util.HashMap $r10;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r12 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        r1 := @parameter1: androidx.media3.exoplayer.offline.Download;

        if r12 == null goto label2;

        $z1 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r12);

        if $z1 != 0 goto label1;

        virtualinvoke r12.<androidx.media3.exoplayer.offline.DownloadManager$Task: void cancel(boolean)>(0);

     label1:
        return;

     label2:
        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean hasActiveRemoveTask>;

        if $z0 == 0 goto label3;

        return;

     label3:
        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.DownloaderFactory downloaderFactory>;

        $r3 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        r2 = interfaceinvoke $r4.<androidx.media3.exoplayer.offline.DownloaderFactory: androidx.media3.exoplayer.offline.Downloader createDownloader(androidx.media3.exoplayer.offline.DownloadRequest)>($r3);

        $r5 = new androidx.media3.exoplayer.offline.DownloadManager$Task;

        $r7 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r6 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int minRetryCount>;

        specialinvoke $r5.<androidx.media3.exoplayer.offline.DownloadManager$Task: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,androidx.media3.exoplayer.offline.Downloader,androidx.media3.exoplayer.offline.DownloadProgress,boolean,int,androidx.media3.exoplayer.offline.DownloadManager$InternalHandler,androidx.media3.exoplayer.offline.DownloadManager$1)>($r7, r2, $r6, 1, $i0, r0, null);

        r13 = $r5;

        $r10 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        $r8 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r9 = $r8.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r13);

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean hasActiveRemoveTask> = 1;

        virtualinvoke r13.<androidx.media3.exoplayer.offline.DownloadManager$Task: void start()>();

        return;
    }

    private void onContentLengthChanged(androidx.media3.exoplayer.offline.DownloadManager$Task, long)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.DownloadManager$Task r1;
        long l0, $l1, $l5, $l6;
        java.lang.String r2;
        androidx.media3.exoplayer.offline.Download r3, $r5, $r7;
        androidx.media3.exoplayer.offline.DownloadRequest $r4, $r8;
        java.lang.Object $r6;
        byte $b2, $b3;
        int $i4, $i7, $i8;
        androidx.media3.exoplayer.offline.DownloadProgress $r9;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        l0 := @parameter1: long;

        $r4 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest access$200(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        r2 = $r4.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r5 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String,boolean)>(r2, 0);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r3 = (androidx.media3.exoplayer.offline.Download) $r6;

        $l1 = r3.<androidx.media3.exoplayer.offline.Download: long contentLength>;

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp -1L;

        if $b3 != 0 goto label2;

     label1:
        return;

     label2:
        $r7 = new androidx.media3.exoplayer.offline.Download;

        $r8 = r3.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $i4 = r3.<androidx.media3.exoplayer.offline.Download: int state>;

        $l5 = r3.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i8 = r3.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        $i7 = r3.<androidx.media3.exoplayer.offline.Download: int failureReason>;

        $r9 = r3.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        specialinvoke $r7.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>($r8, $i4, $l5, $l6, l0, $i8, $i7, $r9);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)>($r7);

        return;
    }

    private void onTaskStopped(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.DownloadManager$Task r1;
        java.lang.String r2, $r17;
        boolean z0, $z1, $z2;
        java.lang.Exception r3;
        androidx.media3.exoplayer.offline.Download r4, $r8;
        androidx.media3.exoplayer.offline.DownloadRequest $r5, $r13;
        java.util.HashMap $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r9;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, r18;
        java.lang.IllegalStateException r19;
        java.lang.Throwable r20;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        $r5 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest access$200(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        r2 = $r5.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.HashMap activeTasks>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r2);

        z0 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        if z0 == 0 goto label01;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean hasActiveRemoveTask> = 0;

        goto label02;

     label01:
        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount>;

        $i1 = $i0 - 1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int activeDownloadTaskCount> = $i1;

        if $i1 != 0 goto label02;

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void removeMessages(int)>(11);

     label02:
        $z1 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: boolean access$300(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        if $z1 == 0 goto label03;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;

     label03:
        r3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: java.lang.Exception access$400(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        if r3 == null goto label04;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task failed: ");

        $r13 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest access$200(androidx.media3.exoplayer.offline.DownloadManager$Task)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = (java.lang.Throwable) r3;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", $r17, r20);

     label04:
        $r8 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String,boolean)>(r2, 0);

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        r4 = (androidx.media3.exoplayer.offline.Download) $r9;

        $i2 = r4.<androidx.media3.exoplayer.offline.Download: int state>;

        tableswitch($i2)
        {
            case 0: goto label09;
            case 1: goto label09;
            case 2: goto label05;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label08;
            default: goto label09;
        };

     label05:
        if z0 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z2);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void onDownloadTaskStopped(androidx.media3.exoplayer.offline.Download,java.lang.Exception)>(r4, r3);

        goto label10;

     label08:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>(z0);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void onRemoveTaskStopped(androidx.media3.exoplayer.offline.Download)>(r4);

        goto label10;

     label09:
        r19 = new java.lang.IllegalStateException;

        specialinvoke r19.<java.lang.IllegalStateException: void <init>()>();

        throw r19;

     label10:
        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        return;
    }

    private void onDownloadTaskStopped(androidx.media3.exoplayer.offline.Download, java.lang.Exception)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.lang.Exception r1;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate $r3, r19;
        java.util.ArrayList $r4, $r5, $r14;
        android.os.Handler $r6;
        android.os.Message $r7;
        java.lang.Throwable $r8, r18;
        androidx.media3.exoplayer.offline.Download r9, $r10, r13;
        androidx.media3.exoplayer.offline.DownloadRequest $r11, $r15;
        byte $b2, $b7;
        long $l3, $l4, $l5;
        int $i6, $i8;
        androidx.media3.exoplayer.offline.DownloadProgress $r12;
        java.lang.String $r16;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r17;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r9 := @parameter0: androidx.media3.exoplayer.offline.Download;

        r1 := @parameter1: java.lang.Exception;

        $r10 = new androidx.media3.exoplayer.offline.Download;

        $r11 = r9.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        if r1 != null goto label1;

        $b2 = 3;

        goto label2;

     label1:
        $b2 = 4;

     label2:
        $l3 = r9.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = r9.<androidx.media3.exoplayer.offline.Download: long contentLength>;

        $i6 = r9.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        if r1 != null goto label3;

        $b7 = 0;

        goto label4;

     label3:
        $b7 = 1;

     label4:
        $r12 = r9.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        specialinvoke $r10.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>($r11, $b2, $l3, $l4, $l5, $i6, $b7, $r12);

        r13 = $r10;

        $r14 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r15 = r13.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r16 = $r15.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $i8 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int getDownloadIndex(java.lang.String)>($r16);

        virtualinvoke $r14.<java.util.ArrayList: java.lang.Object remove(int)>($i8);

     label5:
        $r17 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r17.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void putDownload(androidx.media3.exoplayer.offline.Download)>(r13);

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        r18 = $r8;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to update index.", r18);

     label8:
        $r3 = new androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        specialinvoke $r3.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: void <init>(androidx.media3.exoplayer.offline.Download,boolean,java.util.List,java.lang.Exception)>(r13, 0, $r4, r1);

        r19 = $r3;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        $r7 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r19);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;

        catch java.io.IOException from label5 to label6 with label7;
    }

    private void onRemoveTaskStopped(androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1;
        int $i0, $i1, $i2, i5;
        androidx.media3.exoplayer.offline.DownloadRequest $r2, $r6;
        java.lang.String $r3, $r7;
        java.util.ArrayList $r4, $r10, $r11;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r8;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate $r9, r17;
        android.os.Handler $r12;
        android.os.Message $r13;
        java.lang.Throwable $r15, r16;
        byte $b3, b4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        $i0 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i0 != 7 goto label3;

        $i1 = r1.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        if $i1 != 0 goto label1;

        $b3 = 0;

        goto label2;

     label1:
        $b3 = 1;

     label2:
        b4 = $b3;

        $i2 = r1.<androidx.media3.exoplayer.offline.Download: int stopReason>;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r1, b4, $i2);

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: void syncTasks()>();

        goto label8;

     label3:
        $r2 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r3 = $r2.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        i5 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int getDownloadIndex(java.lang.String)>($r3);

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>(i5);

     label4:
        $r8 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        $r6 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r7 = $r6.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        interfaceinvoke $r8.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void removeDownload(java.lang.String)>($r7);

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        r16 = $r15;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("DownloadManager", "Failed to remove from database");

     label7:
        $r9 = new androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        $r10 = new java.util.ArrayList;

        $r11 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        specialinvoke $r9.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: void <init>(androidx.media3.exoplayer.offline.Download,boolean,java.util.List,java.lang.Exception)>(r1, 1, $r10, null);

        r17 = $r9;

        $r12 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        $r13 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r17);

        virtualinvoke $r13.<android.os.Message: void sendToTarget()>();

     label8:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    private void updateProgress()
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1;
        java.lang.Throwable r2, $r7;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r6;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        i2 = 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label6;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (androidx.media3.exoplayer.offline.Download) $r5;

        $i1 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i1 != 2 goto label5;

     label2:
        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r6.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void putDownload(androidx.media3.exoplayer.offline.Download)>(r1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to update index.", r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean sendEmptyMessageDelayed(int,long)>(11, 5000L);

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private boolean canDownloadsRun()
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: boolean downloadsPaused>;

        if $z0 != 0 goto label1;

        $i0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int notMetRequirements>;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private androidx.media3.exoplayer.offline.Download putDownloadWithState(androidx.media3.exoplayer.offline.Download, int, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1, $r2, $r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 == 3 goto label1;

        if i0 == 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r2 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download copyDownloadWithState(androidx.media3.exoplayer.offline.Download,int,int)>(r1, i0, i1);

        $r3 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)>($r2);

        return $r3;
    }

    private androidx.media3.exoplayer.offline.Download putDownload(androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        androidx.media3.exoplayer.offline.Download r1, $r4;
        int i0, $i1, $i5;
        java.util.ArrayList $r2, $r5, $r8, $r9, $r12, $r14, $r15;
        long $l2, $l3;
        java.lang.Object $r3;
        byte $b4;
        androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate $r7, r22;
        android.os.Handler $r10;
        android.os.Message $r11;
        java.util.Comparator $r13, $r16;
        java.lang.Throwable $r17, r21;
        boolean $z1, $z2, z3;
        androidx.media3.exoplayer.offline.DownloadRequest $r18;
        java.lang.String $r19;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r20;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: androidx.media3.exoplayer.offline.Download;

        $i1 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i1 == 3 goto label1;

        $i5 = r1.<androidx.media3.exoplayer.offline.Download: int state>;

        if $i5 == 4 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        $r18 = r1.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r19 = $r18.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        i0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int getDownloadIndex(java.lang.String)>($r19);

        if i0 != -1 goto label3;

        $r14 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r15 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r16 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int compareStartTimes(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r15, $r16);

        goto label6;

     label3:
        $l2 = r1.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (androidx.media3.exoplayer.offline.Download) $r3;

        $l3 = $r4.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $b4 = $l2 cmp $l3;

        if $b4 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z3 = $z2;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        if z3 == 0 goto label6;

        $r12 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r13 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int compareStartTimes(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.offline.Download,androidx.media3.exoplayer.offline.Download));

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r12, $r13);

     label6:
        $r20 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        interfaceinvoke $r20.<androidx.media3.exoplayer.offline.WritableDownloadIndex: void putDownload(androidx.media3.exoplayer.offline.Download)>(r1);

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;

        r21 = $r17;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", "Failed to update index.", r21);

     label9:
        $r7 = new androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate;

        $r8 = new java.util.ArrayList;

        $r9 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        specialinvoke $r7.<androidx.media3.exoplayer.offline.DownloadManager$DownloadUpdate: void <init>(androidx.media3.exoplayer.offline.Download,boolean,java.util.List,java.lang.Exception)>(r1, 0, $r8, null);

        r22 = $r7;

        $r10 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: android.os.Handler mainHandler>;

        $r11 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r22);

        virtualinvoke $r11.<android.os.Message: void sendToTarget()>();

        return r1;

        catch java.io.IOException from label6 to label7 with label8;
    }

    private androidx.media3.exoplayer.offline.Download getDownload(java.lang.String, boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.lang.String r1, $r12;
        boolean z0;
        int i0;
        java.lang.Throwable r2, $r8;
        androidx.media3.exoplayer.offline.WritableDownloadIndex $r3;
        androidx.media3.exoplayer.offline.Download $r4, $r7;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 = specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: int getDownloadIndex(java.lang.String)>(r1);

        if i0 == -1 goto label1;

        $r5 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (androidx.media3.exoplayer.offline.Download) $r6;

        return $r7;

     label1:
        if z0 == 0 goto label5;

     label2:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: androidx.media3.exoplayer.offline.WritableDownloadIndex downloadIndex>;

        $r4 = interfaceinvoke $r3.<androidx.media3.exoplayer.offline.WritableDownloadIndex: androidx.media3.exoplayer.offline.Download getDownload(java.lang.String)>(r1);

     label3:
        return $r4;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load download: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DownloadManager", $r12, r2);

     label5:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private int getDownloadIndex(java.lang.String)
    {
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r0;
        java.lang.String r1, $r7;
        androidx.media3.exoplayer.offline.Download r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        androidx.media3.exoplayer.offline.DownloadRequest $r6;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r1 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$InternalHandler: java.util.ArrayList downloads>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (androidx.media3.exoplayer.offline.Download) $r5;

        $r6 = r2.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $r7 = $r6.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private static androidx.media3.exoplayer.offline.Download copyDownloadWithState(androidx.media3.exoplayer.offline.Download, int, int)
    {
        androidx.media3.exoplayer.offline.Download r0, $r1;
        int i0, i1;
        androidx.media3.exoplayer.offline.DownloadRequest $r2;
        long $l2, $l3, $l4;
        androidx.media3.exoplayer.offline.DownloadProgress $r3;

        r0 := @parameter0: androidx.media3.exoplayer.offline.Download;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new androidx.media3.exoplayer.offline.Download;

        $r2 = r0.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadRequest request>;

        $l2 = r0.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = r0.<androidx.media3.exoplayer.offline.Download: long contentLength>;

        $r3 = r0.<androidx.media3.exoplayer.offline.Download: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        specialinvoke $r1.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>($r2, i0, $l2, $l3, $l4, i1, 0, $r3);

        return $r1;
    }

    private static int compareStartTimes(androidx.media3.exoplayer.offline.Download, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.Download r0, r1;
        long $l0, $l1;
        int $i2;

        r0 := @parameter0: androidx.media3.exoplayer.offline.Download;

        r1 := @parameter1: androidx.media3.exoplayer.offline.Download;

        $l1 = r0.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $l0 = r1.<androidx.media3.exoplayer.offline.Download: long startTimeMs>;

        $i2 = staticinvoke <androidx.media3.common.util.Util: int compareLong(long,long)>($l1, $l0);

        return $i2;
    }

androidx.media3.exoplayer.offline.DownloadManager$Listener
    public void onInitialized(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        return;
    }

    public void onDownloadsPausedChanged(androidx.media3.exoplayer.offline.DownloadManager, boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter1: boolean;

        return;
    }

    public void onDownloadChanged(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download, java.lang.Exception)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;
        java.lang.Exception r3;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        r3 := @parameter2: java.lang.Exception;

        return;
    }

    public void onDownloadRemoved(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.offline.Download)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.offline.Download r2;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Download;

        return;
    }

    public void onIdle(androidx.media3.exoplayer.offline.DownloadManager)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        return;
    }

    public void onRequirementsStateChanged(androidx.media3.exoplayer.offline.DownloadManager, androidx.media3.exoplayer.scheduler.Requirements, int)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        androidx.media3.exoplayer.scheduler.Requirements r2;
        int i0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        r2 := @parameter1: androidx.media3.exoplayer.scheduler.Requirements;

        i0 := @parameter2: int;

        return;
    }

    public void onWaitingForRequirementsChanged(androidx.media3.exoplayer.offline.DownloadManager, boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Listener r0;
        androidx.media3.exoplayer.offline.DownloadManager r1;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Listener;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager;

        z0 := @parameter1: boolean;

        return;
    }

androidx.media3.exoplayer.offline.DownloadManager$Task
<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest request>
<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.Downloader downloader>
<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadProgress downloadProgress>
<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isRemove>
<androidx.media3.exoplayer.offline.DownloadManager$Task: int minRetryCount>
<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>
<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled>
<androidx.media3.exoplayer.offline.DownloadManager$Task: java.lang.Exception finalException>
<androidx.media3.exoplayer.offline.DownloadManager$Task: long contentLength>
    private void <init>(androidx.media3.exoplayer.offline.DownloadRequest, androidx.media3.exoplayer.offline.Downloader, androidx.media3.exoplayer.offline.DownloadProgress, boolean, int, androidx.media3.exoplayer.offline.DownloadManager$InternalHandler)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        androidx.media3.exoplayer.offline.Downloader r2;
        androidx.media3.exoplayer.offline.DownloadProgress r3;
        boolean z0;
        int i0;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Task;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Downloader;

        r3 := @parameter2: androidx.media3.exoplayer.offline.DownloadProgress;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r4 := @parameter5: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest request> = r1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.Downloader downloader> = r2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadProgress downloadProgress> = r3;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isRemove> = z0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: int minRetryCount> = i0;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler> = r4;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: long contentLength> = -1L;

        return;
    }

    public void cancel(boolean)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        boolean z0, $z1;
        androidx.media3.exoplayer.offline.Downloader $r1;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Task;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler> = null;

     label1:
        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled>;

        if $z1 != 0 goto label2;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled> = 1;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.Downloader downloader>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.offline.Downloader: void cancel()>();

        virtualinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: void interrupt()>();

     label2:
        return;
    }

    public void run()
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        java.lang.Throwable r1, $r5, $r7, $r8, r10, r11;
        long l0, $l4, l6;
        boolean $z0, $z1, $z2;
        android.os.Message $r2;
        androidx.media3.exoplayer.offline.Downloader $r3, $r4;
        androidx.media3.exoplayer.offline.DownloadProgress $r6;
        byte $b1;
        int $i2, $i3, i5;
        java.lang.Thread $r9;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r12;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Task;

     label01:
        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isRemove>;

        if $z0 == 0 goto label02;

        $r4 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.Downloader downloader>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.offline.Downloader: void remove()>();

        goto label10;

     label02:
        i5 = 0;

        l6 = -1L;

     label03:
        $z1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled>;

        if $z1 != 0 goto label10;

     label04:
        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.Downloader downloader>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.offline.Downloader: void download(androidx.media3.exoplayer.offline.Downloader$ProgressListener)>(r0);

     label05:
        goto label10;

     label06:
        $r5 := @caughtexception;

        r1 = $r5;

        $z2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled>;

        if $z2 != 0 goto label09;

        $r6 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadProgress downloadProgress>;

        l0 = $r6.<androidx.media3.exoplayer.offline.DownloadProgress: long bytesDownloaded>;

        $b1 = l0 cmp l6;

        if $b1 == 0 goto label07;

        l6 = l0;

        i5 = 0;

     label07:
        i5 = i5 + 1;

        $i2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: int minRetryCount>;

        if i5 <= $i2 goto label08;

        throw r1;

     label08:
        $i3 = staticinvoke <androidx.media3.exoplayer.offline.DownloadManager$Task: int getRetryDelayMillis(int)>(i5);

        $l4 = (long) $i3;

        staticinvoke <java.lang.Thread: void sleep(long)>($l4);

     label09:
        goto label03;

     label10:
        goto label13;

     label11:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

        goto label13;

     label12:
        $r7 := @caughtexception;

        r11 = $r7;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: java.lang.Exception finalException> = r11;

     label13:
        r12 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        if r12 == null goto label14;

        $r2 = virtualinvoke r12.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, r0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

     label14:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.InterruptedException from label01 to label10 with label11;
        catch java.lang.Exception from label01 to label10 with label12;
    }

    public void onProgress(long, long, float)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        long l0, l1, $l2, $l4;
        float f0;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r1;
        androidx.media3.exoplayer.offline.DownloadProgress $r2, $r3;
        byte $b3;
        int $i5, $i6;
        android.os.Message $r4;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Task;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        $r2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadProgress downloadProgress>;

        $r2.<androidx.media3.exoplayer.offline.DownloadProgress: long bytesDownloaded> = l1;

        $r3 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadProgress downloadProgress>;

        $r3.<androidx.media3.exoplayer.offline.DownloadProgress: float percentDownloaded> = f0;

        $l2 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: long contentLength>;

        $b3 = l0 cmp $l2;

        if $b3 == 0 goto label1;

        r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: long contentLength> = l0;

        r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler internalHandler>;

        if r1 == null goto label1;

        $l4 = l0 >> 32;

        $i6 = (int) $l4;

        $i5 = (int) l0;

        $r4 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(10, $i6, $i5, r0);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }

    private static int getRetryDelayMillis(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = $i1 * 1000;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 5000);

        return $i3;
    }

    static boolean access$000(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isRemove>;

        return $z0;
    }

    void <init>(androidx.media3.exoplayer.offline.DownloadRequest, androidx.media3.exoplayer.offline.Downloader, androidx.media3.exoplayer.offline.DownloadProgress, boolean, int, androidx.media3.exoplayer.offline.DownloadManager$InternalHandler, androidx.media3.exoplayer.offline.DownloadManager$1)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        androidx.media3.exoplayer.offline.Downloader r2;
        androidx.media3.exoplayer.offline.DownloadProgress r3;
        boolean z0;
        int i0;
        androidx.media3.exoplayer.offline.DownloadManager$InternalHandler r4;
        androidx.media3.exoplayer.offline.DownloadManager$1 r5;

        r0 := @this: androidx.media3.exoplayer.offline.DownloadManager$Task;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        r2 := @parameter1: androidx.media3.exoplayer.offline.Downloader;

        r3 := @parameter2: androidx.media3.exoplayer.offline.DownloadProgress;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        r4 := @parameter5: androidx.media3.exoplayer.offline.DownloadManager$InternalHandler;

        r5 := @parameter6: androidx.media3.exoplayer.offline.DownloadManager$1;

        specialinvoke r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,androidx.media3.exoplayer.offline.Downloader,androidx.media3.exoplayer.offline.DownloadProgress,boolean,int,androidx.media3.exoplayer.offline.DownloadManager$InternalHandler)>(r1, r2, r3, z0, i0, r4);

        return;
    }

    static androidx.media3.exoplayer.offline.DownloadRequest access$200(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        androidx.media3.exoplayer.offline.DownloadRequest $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: androidx.media3.exoplayer.offline.DownloadRequest request>;

        return $r1;
    }

    static boolean access$300(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        $z0 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: boolean isCanceled>;

        return $z0;
    }

    static java.lang.Exception access$400(androidx.media3.exoplayer.offline.DownloadManager$Task)
    {
        androidx.media3.exoplayer.offline.DownloadManager$Task r0;
        java.lang.Exception $r1;

        r0 := @parameter0: androidx.media3.exoplayer.offline.DownloadManager$Task;

        $r1 = r0.<androidx.media3.exoplayer.offline.DownloadManager$Task: java.lang.Exception finalException>;

        return $r1;
    }

