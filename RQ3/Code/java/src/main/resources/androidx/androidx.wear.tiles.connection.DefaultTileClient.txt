androidx.wear.tiles.connection.DefaultTileClient
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.DefaultTileClient$Companion Companion>
<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineScope coroutineScope>
<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher>
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.TilesConnectionBinder connectionBinder>
<androidx.wear.tiles.connection.DefaultTileClient: long TIMEOUT_MILLIS>
<androidx.wear.tiles.connection.DefaultTileClient: int TILE_ID>
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileAddEventData TILE_ADD_EVENT>
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileRemoveEventData TILE_REMOVE_EVENT>
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileEnterEventData TILE_ENTER_EVENT>
<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileLeaveEventData TILE_LEAVE_EVENT>
    public void <init>(android.content.Context, android.content.ComponentName, kotlinx.coroutines.CoroutineScope, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        kotlinx.coroutines.CoroutineScope r3;
        kotlinx.coroutines.CoroutineDispatcher r4;
        androidx.wear.tiles.connection.TilesConnectionBinder $r5;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: kotlinx.coroutines.CoroutineScope;

        r4 := @parameter3: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "componentName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "coroutineScope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "coroutineDispatcher");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineScope coroutineScope> = r3;

        r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher> = r4;

        $r5 = new androidx.wear.tiles.connection.TilesConnectionBinder;

        specialinvoke $r5.<androidx.wear.tiles.connection.TilesConnectionBinder: void <init>(android.content.Context,android.content.ComponentName,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher)>(r1, r2, r3, r4);

        r0.<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.TilesConnectionBinder connectionBinder> = $r5;

        return;
    }

    public void <init>(android.content.Context, android.content.ComponentName, java.util.concurrent.Executor)
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        android.content.Context r1;
        android.content.ComponentName r2;
        java.util.concurrent.Executor r3;
        kotlinx.coroutines.CoroutineDispatcher $r4, $r5, $r9;
        kotlin.coroutines.CoroutineContext $r6;
        kotlinx.coroutines.CoroutineScope $r7, $r10;
        androidx.wear.tiles.connection.TilesConnectionBinder $r8;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        r3 := @parameter2: java.util.concurrent.Executor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "componentName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executor");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = staticinvoke <kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher 'from'(java.util.concurrent.Executor)>(r3);

        r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher> = $r4;

        $r5 = r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher>;

        $r6 = (kotlin.coroutines.CoroutineContext) $r5;

        $r7 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r6);

        r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineScope coroutineScope> = $r7;

        $r8 = new androidx.wear.tiles.connection.TilesConnectionBinder;

        $r10 = r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r9 = r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher>;

        specialinvoke $r8.<androidx.wear.tiles.connection.TilesConnectionBinder: void <init>(android.content.Context,android.content.ComponentName,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineDispatcher)>(r1, r2, $r10, $r9);

        r0.<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.TilesConnectionBinder connectionBinder> = $r8;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture requestApiVersion()
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.connection.DefaultTileClient$requestApiVersion$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = new androidx.wear.tiles.connection.DefaultTileClient$requestApiVersion$1;

        specialinvoke $r1.<androidx.wear.tiles.connection.DefaultTileClient$requestApiVersion$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture requestTile(androidx.wear.tiles.RequestBuilders$TileRequest)
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.RequestBuilders$TileRequest r1;
        androidx.wear.tiles.connection.DefaultTileClient$requestTile$1 $r2;
        kotlin.jvm.functions.Function2 $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        r1 := @parameter0: androidx.wear.tiles.RequestBuilders$TileRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestParams");

        $r2 = new androidx.wear.tiles.connection.DefaultTileClient$requestTile$1;

        specialinvoke $r2.<androidx.wear.tiles.connection.DefaultTileClient$requestTile$1: void <init>(androidx.wear.tiles.RequestBuilders$TileRequest,kotlin.coroutines.Continuation)>(r1, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r4 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture requestResources(androidx.wear.tiles.RequestBuilders$ResourcesRequest)
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.RequestBuilders$ResourcesRequest r1;
        androidx.wear.tiles.connection.DefaultTileClient$requestResources$1 $r2;
        kotlin.jvm.functions.Function2 $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        r1 := @parameter0: androidx.wear.tiles.RequestBuilders$ResourcesRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "requestParams");

        $r2 = new androidx.wear.tiles.connection.DefaultTileClient$requestResources$1;

        specialinvoke $r2.<androidx.wear.tiles.connection.DefaultTileClient$requestResources$1: void <init>(androidx.wear.tiles.RequestBuilders$ResourcesRequest,kotlin.coroutines.Continuation)>(r1, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r4 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture sendOnTileAddedEvent()
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.connection.DefaultTileClient$sendOnTileAddedEvent$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = new androidx.wear.tiles.connection.DefaultTileClient$sendOnTileAddedEvent$1;

        specialinvoke $r1.<androidx.wear.tiles.connection.DefaultTileClient$sendOnTileAddedEvent$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendOnTileEnterEvent()
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.connection.DefaultTileClient$sendOnTileEnterEvent$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = new androidx.wear.tiles.connection.DefaultTileClient$sendOnTileEnterEvent$1;

        specialinvoke $r1.<androidx.wear.tiles.connection.DefaultTileClient$sendOnTileEnterEvent$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendOnTileLeaveEvent()
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.connection.DefaultTileClient$sendOnTileLeaveEvent$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = new androidx.wear.tiles.connection.DefaultTileClient$sendOnTileLeaveEvent$1;

        specialinvoke $r1.<androidx.wear.tiles.connection.DefaultTileClient$sendOnTileLeaveEvent$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture sendOnTileRemovedEvent()
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        androidx.wear.tiles.connection.DefaultTileClient$sendOnTileRemovedEvent$1 $r1;
        kotlin.jvm.functions.Function2 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = new androidx.wear.tiles.connection.DefaultTileClient$sendOnTileRemovedEvent$1;

        specialinvoke $r1.<androidx.wear.tiles.connection.DefaultTileClient$sendOnTileRemovedEvent$1: void <init>(kotlin.coroutines.Continuation)>(null);

        $r2 = (kotlin.jvm.functions.Function2) $r1;

        $r3 = specialinvoke r0.<androidx.wear.tiles.connection.DefaultTileClient: com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)>($r2);

        return $r3;
    }

    private final com.google.common.util.concurrent.ListenableFuture runForFuture(kotlin.jvm.functions.Function2)
    {
        androidx.wear.tiles.connection.DefaultTileClient r0;
        kotlin.jvm.functions.Function2 r1, $r7;
        androidx.concurrent.futures.ResolvableFuture r2;
        kotlinx.coroutines.CoroutineDispatcher $r3;
        androidx.wear.tiles.connection.DefaultTileClient$runForFuture$1 $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        kotlin.coroutines.CoroutineContext $r6;
        com.google.common.util.concurrent.ListenableFuture $r9;

        r0 := @this: androidx.wear.tiles.connection.DefaultTileClient;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r5 = r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineScope coroutineScope>;

        $r3 = r0.<androidx.wear.tiles.connection.DefaultTileClient: kotlinx.coroutines.CoroutineDispatcher coroutineDispatcher>;

        $r6 = (kotlin.coroutines.CoroutineContext) $r3;

        $r4 = new androidx.wear.tiles.connection.DefaultTileClient$runForFuture$1;

        specialinvoke $r4.<androidx.wear.tiles.connection.DefaultTileClient$runForFuture$1: void <init>(androidx.concurrent.futures.ResolvableFuture,androidx.wear.tiles.connection.DefaultTileClient,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(r2, r0, r1, null);

        $r7 = (kotlin.jvm.functions.Function2) $r4;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, $r6, null, $r7, 2, null);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "future");

        $r9 = (com.google.common.util.concurrent.ListenableFuture) r2;

        return $r9;
    }

    public static final androidx.wear.tiles.TileAddEventData access$getTILE_ADD_EVENT$cp()
    {
        androidx.wear.tiles.TileAddEventData $r0;

        $r0 = <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileAddEventData TILE_ADD_EVENT>;

        return $r0;
    }

    public static final androidx.wear.tiles.TileEnterEventData access$getTILE_ENTER_EVENT$cp()
    {
        androidx.wear.tiles.TileEnterEventData $r0;

        $r0 = <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileEnterEventData TILE_ENTER_EVENT>;

        return $r0;
    }

    public static final androidx.wear.tiles.TileLeaveEventData access$getTILE_LEAVE_EVENT$cp()
    {
        androidx.wear.tiles.TileLeaveEventData $r0;

        $r0 = <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileLeaveEventData TILE_LEAVE_EVENT>;

        return $r0;
    }

    public static final androidx.wear.tiles.TileRemoveEventData access$getTILE_REMOVE_EVENT$cp()
    {
        androidx.wear.tiles.TileRemoveEventData $r0;

        $r0 = <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileRemoveEventData TILE_REMOVE_EVENT>;

        return $r0;
    }

    public static final androidx.wear.tiles.connection.TilesConnectionBinder access$getConnectionBinder$p(androidx.wear.tiles.connection.DefaultTileClient)
    {
        androidx.wear.tiles.connection.DefaultTileClient $r0;
        androidx.wear.tiles.connection.TilesConnectionBinder $r1;

        $r0 := @parameter0: androidx.wear.tiles.connection.DefaultTileClient;

        $r1 = $r0.<androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.TilesConnectionBinder connectionBinder>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.tiles.connection.DefaultTileClient$Companion $r0;
        androidx.wear.tiles.TileAddEventData $r1;
        androidx.wear.tiles.EventBuilders$TileAddEvent$Builder $r2;
        androidx.wear.tiles.EventBuilders$TileAddEvent $r3;
        androidx.wear.tiles.proto.EventProto$TileAddEvent $r4;
        byte[] $r5, $r10, $r15, $r20;
        androidx.wear.tiles.TileRemoveEventData $r6;
        androidx.wear.tiles.EventBuilders$TileRemoveEvent$Builder $r7;
        androidx.wear.tiles.EventBuilders$TileRemoveEvent $r8;
        androidx.wear.tiles.proto.EventProto$TileRemoveEvent $r9;
        androidx.wear.tiles.TileEnterEventData $r11;
        androidx.wear.tiles.EventBuilders$TileEnterEvent$Builder $r12;
        androidx.wear.tiles.EventBuilders$TileEnterEvent $r13;
        androidx.wear.tiles.proto.EventProto$TileEnterEvent $r14;
        androidx.wear.tiles.TileLeaveEventData $r16;
        androidx.wear.tiles.EventBuilders$TileLeaveEvent$Builder $r17;
        androidx.wear.tiles.EventBuilders$TileLeaveEvent $r18;
        androidx.wear.tiles.proto.EventProto$TileLeaveEvent $r19;

        $r0 = new androidx.wear.tiles.connection.DefaultTileClient$Companion;

        specialinvoke $r0.<androidx.wear.tiles.connection.DefaultTileClient$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.connection.DefaultTileClient$Companion Companion> = $r0;

        $r1 = new androidx.wear.tiles.TileAddEventData;

        $r2 = new androidx.wear.tiles.EventBuilders$TileAddEvent$Builder;

        specialinvoke $r2.<androidx.wear.tiles.EventBuilders$TileAddEvent$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<androidx.wear.tiles.EventBuilders$TileAddEvent$Builder: androidx.wear.tiles.EventBuilders$TileAddEvent build()>();

        $r4 = virtualinvoke $r3.<androidx.wear.tiles.EventBuilders$TileAddEvent: androidx.wear.tiles.proto.EventProto$TileAddEvent toProto()>();

        $r5 = virtualinvoke $r4.<androidx.wear.tiles.proto.EventProto$TileAddEvent: byte[] toByteArray()>();

        specialinvoke $r1.<androidx.wear.tiles.TileAddEventData: void <init>(byte[],int)>($r5, 1);

        <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileAddEventData TILE_ADD_EVENT> = $r1;

        $r6 = new androidx.wear.tiles.TileRemoveEventData;

        $r7 = new androidx.wear.tiles.EventBuilders$TileRemoveEvent$Builder;

        specialinvoke $r7.<androidx.wear.tiles.EventBuilders$TileRemoveEvent$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<androidx.wear.tiles.EventBuilders$TileRemoveEvent$Builder: androidx.wear.tiles.EventBuilders$TileRemoveEvent build()>();

        $r9 = virtualinvoke $r8.<androidx.wear.tiles.EventBuilders$TileRemoveEvent: androidx.wear.tiles.proto.EventProto$TileRemoveEvent toProto()>();

        $r10 = virtualinvoke $r9.<androidx.wear.tiles.proto.EventProto$TileRemoveEvent: byte[] toByteArray()>();

        specialinvoke $r6.<androidx.wear.tiles.TileRemoveEventData: void <init>(byte[],int)>($r10, 1);

        <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileRemoveEventData TILE_REMOVE_EVENT> = $r6;

        $r11 = new androidx.wear.tiles.TileEnterEventData;

        $r12 = new androidx.wear.tiles.EventBuilders$TileEnterEvent$Builder;

        specialinvoke $r12.<androidx.wear.tiles.EventBuilders$TileEnterEvent$Builder: void <init>()>();

        $r13 = virtualinvoke $r12.<androidx.wear.tiles.EventBuilders$TileEnterEvent$Builder: androidx.wear.tiles.EventBuilders$TileEnterEvent build()>();

        $r14 = virtualinvoke $r13.<androidx.wear.tiles.EventBuilders$TileEnterEvent: androidx.wear.tiles.proto.EventProto$TileEnterEvent toProto()>();

        $r15 = virtualinvoke $r14.<androidx.wear.tiles.proto.EventProto$TileEnterEvent: byte[] toByteArray()>();

        specialinvoke $r11.<androidx.wear.tiles.TileEnterEventData: void <init>(byte[],int)>($r15, 1);

        <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileEnterEventData TILE_ENTER_EVENT> = $r11;

        $r16 = new androidx.wear.tiles.TileLeaveEventData;

        $r17 = new androidx.wear.tiles.EventBuilders$TileLeaveEvent$Builder;

        specialinvoke $r17.<androidx.wear.tiles.EventBuilders$TileLeaveEvent$Builder: void <init>()>();

        $r18 = virtualinvoke $r17.<androidx.wear.tiles.EventBuilders$TileLeaveEvent$Builder: androidx.wear.tiles.EventBuilders$TileLeaveEvent build()>();

        $r19 = virtualinvoke $r18.<androidx.wear.tiles.EventBuilders$TileLeaveEvent: androidx.wear.tiles.proto.EventProto$TileLeaveEvent toProto()>();

        $r20 = virtualinvoke $r19.<androidx.wear.tiles.proto.EventProto$TileLeaveEvent: byte[] toByteArray()>();

        specialinvoke $r16.<androidx.wear.tiles.TileLeaveEventData: void <init>(byte[],int)>($r20, 1);

        <androidx.wear.tiles.connection.DefaultTileClient: androidx.wear.tiles.TileLeaveEventData TILE_LEAVE_EVENT> = $r16;

        return;
    }

