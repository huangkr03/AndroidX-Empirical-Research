androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt
    public static final androidx.room.compiler.processing.util.compiler.TestCompilationArguments withAtLeastOneKotlinSource(androidx.room.compiler.processing.util.compiler.TestCompilationArguments)
    {
        androidx.room.compiler.processing.util.compiler.TestCompilationArguments $r0, $r11;
        boolean z0, $z3, $z4, $z5, $z6, $z7;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.room.compiler.processing.util.Source r4, $r9;
        java.util.List $r5, $r6, $r10;
        androidx.room.compiler.processing.util.Source$Companion $r7;
        java.util.Collection $r8, $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.util.compiler.TestCompilationArguments;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getSources()>();

        $r1 = (java.lang.Iterable) $r5;

        $z3 = $r1 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r12 = (java.util.Collection) $r1;

        $z5 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 0;

        goto label4;

     label1:
        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.room.compiler.processing.util.Source) r3;

        $z4 = r4 instanceof androidx.room.compiler.processing.util.Source$KotlinSource;

        if $z4 == 0 goto label2;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z0 = $z6;

        if z0 == 0 goto label5;

        return $r0;

     label5:
        $r6 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getSources()>();

        $r8 = (java.util.Collection) $r6;

        $r7 = <androidx.room.compiler.processing.util.Source: androidx.room.compiler.processing.util.Source$Companion Companion>;

        $r9 = virtualinvoke $r7.<androidx.room.compiler.processing.util.Source$Companion: androidx.room.compiler.processing.util.Source kotlin(java.lang.String,java.lang.String)>("SyntheticSource", "package xprocessing.generated\nclass SyntheticKotlinSource");

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r8, $r9);

        $r11 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestCompilationArguments: androidx.room.compiler.processing.util.compiler.TestCompilationArguments copy$default(androidx.room.compiler.processing.util.compiler.TestCompilationArguments,java.util.List,java.util.List,boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.Map,int,java.lang.Object)>($r0, $r10, null, 0, null, null, null, null, null, 254, null);

        return $r11;
    }

    private static final java.io.File copyTo(androidx.room.compiler.processing.util.Source, java.io.File, java.io.File)
    {
        androidx.room.compiler.processing.util.Source $r0, r17;
        java.io.File r1, r2, r3, $r6, $r18, r19;
        boolean $z0, $z1, $z2, $z4;
        kotlin.NoWhenBranchMatchedException $r4;
        java.lang.String $r5, $r7, $r16, $r20;
        java.nio.charset.Charset $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r15;

        $r0 := @parameter0: androidx.room.compiler.processing.util.Source;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File;

        r17 = $r0;

        $z0 = r17 instanceof androidx.room.compiler.processing.util.Source$KotlinSource;

        if $z0 == 0 goto label1;

        $r18 = r1;

        goto label3;

     label1:
        $z1 = r17 instanceof androidx.room.compiler.processing.util.Source$JavaSource;

        if $z1 == 0 goto label2;

        $r18 = r2;

        goto label3;

     label2:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label3:
        r3 = $r18;

        $r5 = virtualinvoke $r0.<androidx.room.compiler.processing.util.Source: java.lang.String getRelativePath()>();

        r19 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r3, $r5);

        $z2 = virtualinvoke r19.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 != 0 goto label6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate source file: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r20 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label6:
        $r6 = virtualinvoke r19.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        $r7 = virtualinvoke $r0.<androidx.room.compiler.processing.util.Source: java.lang.String getContents()>();

        $r8 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        staticinvoke <kotlin.io.FilesKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)>(r19, $r7, $r8);

        return r19;
    }

    private static final androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments toInternal(androidx.room.compiler.processing.util.compiler.TestCompilationArguments, java.io.File)
    {
        androidx.room.compiler.processing.util.compiler.TestCompilationArguments $r0;
        java.io.File r1, r3, $r9, $r10, $r23, r24, r25;
        kotlin.Pair r2;
        java.util.Collection r4, r8;
        java.util.Iterator r5;
        java.lang.Object r6, $r11, $r12;
        androidx.room.compiler.processing.util.Source r7;
        java.util.List $r13, $r15, $r19, $r20, $r21, $r22;
        java.util.ArrayList $r14;
        int $i0;
        boolean $z3, $z4;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments $r16;
        androidx.room.compiler.processing.util.compiler.SourceSet $r17, $r18;
        java.lang.Iterable $r26;
        androidx.room.compiler.processing.util.compiler.SourceSet[] $r27;

        $r0 := @parameter0: androidx.room.compiler.processing.util.compiler.TestCompilationArguments;

        r1 := @parameter1: java.io.File;

        r24 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r1, "src");

        $r9 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r24, "kotlin");

        $r10 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r24, "java");

        r2 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r11 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component1()>();

        r3 = (java.io.File) $r11;

        $r12 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component2()>();

        r25 = (java.io.File) $r12;

        $r13 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getSources()>();

        $r26 = (java.lang.Iterable) $r13;

        $r14 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r26, 10);

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = (java.util.Collection) $r14;

        r5 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.util.Source) r6;

        r8 = r4;

        $r23 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: java.io.File copyTo(androidx.room.compiler.processing.util.Source,java.io.File,java.io.File)>(r7, r3, r25);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r23);

        goto label1;

     label2:
        $r15 = (java.util.List) r4;

        $r16 = new androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments;

        $r27 = newarray (androidx.room.compiler.processing.util.compiler.SourceSet)[2];

        $r17 = staticinvoke <androidx.room.compiler.processing.util.compiler.SourceSetKt: androidx.room.compiler.processing.util.compiler.SourceSet toSourceSet(java.io.File)>(r25);

        $r27[0] = $r17;

        $r18 = staticinvoke <androidx.room.compiler.processing.util.compiler.SourceSetKt: androidx.room.compiler.processing.util.compiler.SourceSet toSourceSet(java.io.File)>(r3);

        $r27[1] = $r18;

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])>($r27);

        $r20 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getClasspath()>();

        $z4 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: boolean getInheritClasspath()>();

        $r21 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getJavacArguments()>();

        $r22 = virtualinvoke $r0.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getKotlincArguments()>();

        specialinvoke $r16.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments: void <init>(java.util.List,java.util.List,boolean,java.util.List,java.util.List)>($r19, $r20, $z4, $r21, $r22);

        return $r16;
    }

    public static final androidx.room.compiler.processing.util.compiler.TestCompilationResult compile(java.io.File, androidx.room.compiler.processing.util.compiler.TestCompilationArguments)
    {
        java.io.File r0, $r27, $r45;
        androidx.room.compiler.processing.util.compiler.TestCompilationArguments r1;
        java.util.List r2, r3, r4, r11, r12, r14, $r16, $r20, $r29, $r30, $r31, $r35, $r36, $r38, $r39, r51, r55, $r57, $r65, r78, r79;
        java.lang.Object r5, r9, $r42, r53, r61, $r66, r69, $r75, $r83;
        androidx.room.compiler.processing.util.DiagnosticMessage r6;
        javax.tools.Diagnostic$Kind r8;
        java.util.Map r10, r13, $r17, $r21, $r58;
        boolean z2, $z3, $z4, $z5, $z6, $z9, $z10, $z11, $z13, z16, z17, z18, z20, $z21, $z22, z23, z24, z25, z26, $z27, z29, z30, z31;
        androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep $r15;
        androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep $r18, $r22, $r24, $r26, r54;
        androidx.room.compiler.processing.util.compiler.steps.KspCompilationStep $r19;
        androidx.room.compiler.processing.util.compiler.steps.KotlinSourceCompilationStep $r23;
        androidx.room.compiler.processing.util.compiler.steps.JavaSourceCompilationStep $r25;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult $r28, $r47, r56, r62, r70, r76, r84;
        java.util.LinkedHashMap $r32;
        java.util.ArrayList $r33, $r40, $r71;
        androidx.room.compiler.processing.util.compiler.TestCompilationResult $r34;
        java.util.Collection $r37, $r43, r72, r81;
        java.lang.String $r44;
        androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments $r46, r49;
        androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep[] r48;
        java.lang.Iterable $r50, $r59, $r63, $r67, $r73, r77, $r80, r85;
        java.util.Iterator $r52, $r60, $r64, $r68, r74, r82;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: androidx.room.compiler.processing.util.compiler.TestCompilationArguments;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "workingDir");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "arguments");

        r48 = newarray (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep)[4];

        $r15 = new androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep;

        $r16 = virtualinvoke r1.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getKaptProcessors()>();

        $r17 = virtualinvoke r1.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.Map getProcessorOptions()>();

        specialinvoke $r15.<androidx.room.compiler.processing.util.compiler.steps.KaptCompilationStep: void <init>(java.util.List,java.util.Map)>($r16, $r17);

        $r18 = (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep) $r15;

        r48[0] = $r18;

        $r19 = new androidx.room.compiler.processing.util.compiler.steps.KspCompilationStep;

        $r20 = virtualinvoke r1.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.List getSymbolProcessorProviders()>();

        $r21 = virtualinvoke r1.<androidx.room.compiler.processing.util.compiler.TestCompilationArguments: java.util.Map getProcessorOptions()>();

        specialinvoke $r19.<androidx.room.compiler.processing.util.compiler.steps.KspCompilationStep: void <init>(java.util.List,java.util.Map)>($r20, $r21);

        $r22 = (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep) $r19;

        r48[1] = $r22;

        $r23 = <androidx.room.compiler.processing.util.compiler.steps.KotlinSourceCompilationStep: androidx.room.compiler.processing.util.compiler.steps.KotlinSourceCompilationStep INSTANCE>;

        $r24 = (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep) $r23;

        r48[2] = $r24;

        $r25 = <androidx.room.compiler.processing.util.compiler.steps.JavaSourceCompilationStep: androidx.room.compiler.processing.util.compiler.steps.JavaSourceCompilationStep INSTANCE>;

        $r26 = (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep) $r25;

        r48[3] = $r26;

        r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r48);

        staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: void ensureEmptyDirectory(java.io.File)>(r0);

        $r27 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r0, "input");

        r49 = staticinvoke <androidx.room.compiler.processing.util.compiler.TestKotlinCompilerKt: androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments toInternal(androidx.room.compiler.processing.util.compiler.TestCompilationArguments,java.io.File)>(r1, $r27);

        $r28 = new androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult;

        $r29 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r30 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r31 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r28.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: void <init>(boolean,java.util.List,java.util.List,androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments,java.util.List)>(1, $r29, $r30, r49, $r31);

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r28);

        $r50 = (java.lang.Iterable) r2;

        r51 = r3;

        $r52 = interfaceinvoke $r50.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r54 = (androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep) r53;

        r55 = r51;

        $r42 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>(r55);

        r56 = (androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult) $r42;

        $z13 = virtualinvoke r56.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: boolean getSuccess()>();

        if $z13 == 0 goto label02;

        $r43 = (java.util.Collection) r55;

        $r44 = interfaceinvoke r54.<androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep: java.lang.String getName()>();

        $r45 = staticinvoke <kotlin.io.FilesKt: java.io.File resolve(java.io.File,java.lang.String)>(r0, $r44);

        $r46 = virtualinvoke r56.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments getNextCompilerArguments()>();

        $r47 = interfaceinvoke r54.<androidx.room.compiler.processing.util.compiler.steps.KotlinCompilationStep: androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult execute(java.io.File,androidx.room.compiler.processing.util.compiler.steps.CompilationStepArguments)>($r45, $r46);

        $r57 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)>($r43, $r47);

        goto label03;

     label02:
        $r57 = r55;

     label03:
        r51 = $r57;

        goto label01;

     label04:
        r4 = r51;

        $r32 = new java.util.LinkedHashMap;

        specialinvoke $r32.<java.util.LinkedHashMap: void <init>()>();

        $r58 = (java.util.Map) $r32;

        $r59 = (java.lang.Iterable) r4;

        z16 = 0;

        $r60 = interfaceinvoke $r59.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r62 = (androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult) r61;

        z17 = 0;

        $r38 = virtualinvoke r62.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: java.util.List getDiagnostics()>();

        $r63 = (java.lang.Iterable) $r38;

        z18 = 0;

        $r64 = interfaceinvoke $r63.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z11 = interfaceinvoke $r64.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label09;

        r5 = interfaceinvoke $r64.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.room.compiler.processing.util.DiagnosticMessage) r5;

        r8 = virtualinvoke r6.<androidx.room.compiler.processing.util.DiagnosticMessage: javax.tools.Diagnostic$Kind getKind()>();

        r9 = interfaceinvoke $r58.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        if r9 != null goto label07;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        $r65 = (java.util.List) $r40;

        interfaceinvoke $r58.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r65);

        $r66 = $r65;

        goto label08;

     label07:
        $r66 = r9;

     label08:
        $r39 = (java.util.List) $r66;

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label06;

     label09:
        goto label05;

     label10:
        $r67 = (java.lang.Iterable) r4;

        z20 = 0;

        $z5 = $r67 instanceof java.util.Collection;

        if $z5 == 0 goto label11;

        $r37 = (java.util.Collection) $r67;

        $z10 = interfaceinvoke $r37.<java.util.Collection: boolean isEmpty()>();

        if $z10 == 0 goto label11;

        $z21 = 1;

        goto label14;

     label11:
        $r68 = interfaceinvoke $r67.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z22 = interfaceinvoke $r68.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label13;

        r69 = interfaceinvoke $r68.<java.util.Iterator: java.lang.Object next()>();

        r70 = (androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult) r69;

        z23 = 0;

        $z9 = virtualinvoke r70.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: boolean getSuccess()>();

        if $z9 != 0 goto label12;

        $z21 = 0;

        goto label14;

     label13:
        $z21 = 1;

     label14:
        z24 = $z21;

        z25 = 0;

        $r71 = new java.util.ArrayList;

        specialinvoke $r71.<java.util.ArrayList: void <init>()>();

        r72 = (java.util.Collection) $r71;

        z26 = 0;

        $r73 = (java.lang.Iterable) r4;

        r74 = interfaceinvoke $r73.<java.lang.Iterable: java.util.Iterator iterator()>();

     label15:
        $z27 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label16;

        $r75 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        r76 = (androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult) $r75;

        $r36 = virtualinvoke r76.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: java.util.List getGeneratedSources()>();

        r77 = (java.lang.Iterable) $r36;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r72, r77);

        goto label15;

     label16:
        r78 = (java.util.List) r72;

        r10 = $r58;

        r79 = r78;

        z29 = z24;

        z30 = 0;

        $r80 = (java.lang.Iterable) r4;

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        r81 = (java.util.Collection) $r33;

        z31 = 0;

        r82 = interfaceinvoke $r80.<java.lang.Iterable: java.util.Iterator iterator()>();

     label17:
        $z6 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label18;

        $r83 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r84 = (androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult) $r83;

        $r35 = virtualinvoke r84.<androidx.room.compiler.processing.util.compiler.steps.CompilationStepResult: java.util.List getOutputClasspath()>();

        r85 = (java.lang.Iterable) $r35;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r81, r85);

        goto label17;

     label18:
        r11 = (java.util.List) r81;

        r12 = r11;

        r13 = r10;

        r14 = r79;

        z2 = z29;

        $r34 = new androidx.room.compiler.processing.util.compiler.TestCompilationResult;

        specialinvoke $r34.<androidx.room.compiler.processing.util.compiler.TestCompilationResult: void <init>(boolean,java.util.List,java.util.Map,java.util.List)>(z2, r14, r13, r12);

        return $r34;
    }

    public static final void ensureEmptyDirectory(java.io.File)
    {
        java.io.File $r0;
        java.io.File[] r1;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r16, $r17, $r18;
        java.lang.IllegalStateException $r6, $r12, $r19;
        java.lang.String $r7, $r13, $r15, $r20, $r21, $r22, $r23;
        java.lang.CharSequence $r14;
        int $i0;

        $r0 := @parameter0: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label09;

        $z2 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label01;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be a file");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.IllegalStateException;

        $r20 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label01:
        r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label04;

        $i0 = lengthof r1;

        if $i0 != 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        if $z4 == 0 goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        if $z5 != 0 goto label10;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be empty, found: ");

        if r1 == null goto label07;

        $r14 = (java.lang.CharSequence) "\n";

        $r22 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>(r1, $r14, null, null, 0, null, null, 62, null);

        goto label08;

     label07:
        $r22 = null;

     label08:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r12 = new java.lang.IllegalStateException;

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label09:
        $z1 = virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create working directory (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r23 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label10:
        return;
    }

