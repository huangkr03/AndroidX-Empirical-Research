androidx.compose.material.TextFieldMeasurePolicy
<androidx.compose.material.TextFieldMeasurePolicy: boolean singleLine>
<androidx.compose.material.TextFieldMeasurePolicy: float animationProgress>
<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>
    public void <init>(boolean, float, androidx.compose.foundation.layout.PaddingValues)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        boolean z0;
        float f0;
        androidx.compose.foundation.layout.PaddingValues r1;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.foundation.layout.PaddingValues;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paddingValues");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.TextFieldMeasurePolicy: boolean singleLine> = z0;

        r0.<androidx.compose.material.TextFieldMeasurePolicy: float animationProgress> = f0;

        r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues> = r1;

        return;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, java.util.List, long)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        java.util.List r2;
        long l0, l4, $l21, l27, l33, $l34, $l35;
        int i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i23, i24, i25, i26, i28, $i29, i30, i31, $i32, i36, i37;
        androidx.compose.ui.layout.Placeable r3, r4, $r33, $r40, $r45, r46, r50, $r54, r55;
        java.lang.Iterable r5, $r21, $r26, r34, $r51;
        java.util.Iterator r6, r29, r35, $r41, r47;
        java.lang.Object r7, $r14, $r20, $r25, $r27, $r28, r30, $r32, r36, $r38, r42, $r44, r48, $r52;
        androidx.compose.ui.layout.Measurable r8, $r11, $r12, $r15, r31, $r37, r39, r43, r49, r53;
        androidx.compose.foundation.layout.PaddingValues $r9, $r10, $r16;
        float $f0, $f1, $f2, $f3;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z11, z13, $z15, $z17;
        java.util.NoSuchElementException $r13;
        androidx.compose.material.TextFieldMeasurePolicy$measure$1 $r17;
        kotlin.jvm.functions.Function1 $r18;
        androidx.compose.ui.layout.MeasureResult $r19;
        androidx.compose.ui.layout.HorizontalAlignmentLine $r22;
        androidx.compose.ui.layout.AlignmentLine $r23;
        byte b22;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r9 = r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>;

        $f0 = interfaceinvoke $r9.<androidx.compose.foundation.layout.PaddingValues: float calculateTopPadding-D9Ej5fM()>();

        i1 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: int roundToPx-0680j_4(float)>($f0);

        $r10 = r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>;

        $f1 = interfaceinvoke $r10.<androidx.compose.foundation.layout.PaddingValues: float calculateBottomPadding-D9Ej5fM()>();

        i2 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: int roundToPx-0680j_4(float)>($f1);

        $f2 = staticinvoke <androidx.compose.material.TextFieldKt: float getTextFieldTopPadding()>();

        i3 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: int roundToPx-0680j_4(float)>($f2);

        b22 = 0;

        l4 = staticinvoke <androidx.compose.ui.unit.Constraints: long copy-Zbe2FdA$default(long,int,int,int,int,int,java.lang.Object)>(l0, 0, 0, 0, 0, 10, null);

        r5 = (java.lang.Iterable) r2;

        r29 = interfaceinvoke r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (androidx.compose.ui.layout.Measurable) r30;

        $r28 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>(r31);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r28, "Leading");

        if $z7 == 0 goto label01;

        $r32 = r30;

        goto label03;

     label02:
        $r32 = null;

     label03:
        $r11 = (androidx.compose.ui.layout.Measurable) $r32;

        if $r11 == null goto label04;

        $r33 = interfaceinvoke $r11.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l4);

        goto label05;

     label04:
        $r33 = null;

     label05:
        r3 = $r33;

        $i5 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r3);

        i23 = b22 + $i5;

        r34 = (java.lang.Iterable) r2;

        r35 = interfaceinvoke r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z9 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label07;

        r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        $r37 = (androidx.compose.ui.layout.Measurable) r36;

        $r27 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>($r37);

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, "Trailing");

        if $z6 == 0 goto label06;

        $r38 = r36;

        goto label08;

     label07:
        $r38 = null;

     label08:
        r39 = (androidx.compose.ui.layout.Measurable) $r38;

        if r39 == null goto label09;

        $i20 = neg i23;

        $l21 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long offset-NN6Ew-U$default(long,int,int,int,java.lang.Object)>(l4, $i20, 0, 2, null);

        $r40 = interfaceinvoke r39.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>($l21);

        goto label10;

     label09:
        $r40 = null;

     label10:
        r4 = $r40;

        $i6 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r4);

        i24 = i23 + $i6;

        i25 = neg i2;

        i26 = neg i24;

        l27 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long offset-NN6Ew-U(long,int,int)>(l4, i26, i25);

        $r26 = (java.lang.Iterable) r2;

        $r41 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z11 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label12;

        r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (androidx.compose.ui.layout.Measurable) r42;

        $r25 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>(r43);

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, "Label");

        if $z5 == 0 goto label11;

        $r44 = r42;

        goto label13;

     label12:
        $r44 = null;

     label13:
        $r12 = (androidx.compose.ui.layout.Measurable) $r44;

        if $r12 == null goto label14;

        $r45 = interfaceinvoke $r12.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l27);

        goto label15;

     label14:
        $r45 = null;

     label15:
        r46 = $r45;

        if r46 == null goto label18;

        $r22 = staticinvoke <androidx.compose.ui.layout.AlignmentLineKt: androidx.compose.ui.layout.HorizontalAlignmentLine getLastBaseline()>();

        $r23 = (androidx.compose.ui.layout.AlignmentLine) $r22;

        i28 = virtualinvoke r46.<androidx.compose.ui.layout.Placeable: int get(androidx.compose.ui.layout.AlignmentLine)>($r23);

        z13 = 0;

        if i28 == -2147483648 goto label16;

        $i29 = i28;

        goto label17;

     label16:
        $i29 = virtualinvoke r46.<androidx.compose.ui.layout.Placeable: int getHeight()>();

     label17:
        goto label19;

     label18:
        $i29 = 0;

     label19:
        i30 = $i29;

        i31 = staticinvoke <java.lang.Math: int max(int,int)>(i30, i1);

        if r46 == null goto label20;

        $i17 = neg i2;

        $i18 = $i17 - i3;

        $i32 = $i18 - i31;

        goto label21;

     label20:
        $i7 = neg i1;

        $i32 = $i7 - i2;

     label21:
        l33 = staticinvoke <androidx.compose.ui.unit.Constraints: long copy-Zbe2FdA$default(long,int,int,int,int,int,java.lang.Object)>(l0, 0, 0, 0, 0, 11, null);

        $i19 = neg i24;

        $l34 = staticinvoke <androidx.compose.ui.unit.ConstraintsKt: long offset-NN6Ew-U(long,int,int)>(l33, $i19, $i32);

        $r21 = (java.lang.Iterable) r2;

        r47 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label22:
        $z15 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label23;

        r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r49 = (androidx.compose.ui.layout.Measurable) r48;

        $r14 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>(r49);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, "TextField");

        if $z2 == 0 goto label22;

        goto label24;

     label23:
        $r13 = new java.util.NoSuchElementException;

        specialinvoke $r13.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        throw $r13;

     label24:
        $r15 = (androidx.compose.ui.layout.Measurable) r48;

        r50 = interfaceinvoke $r15.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>($l34);

        $l35 = staticinvoke <androidx.compose.ui.unit.Constraints: long copy-Zbe2FdA$default(long,int,int,int,int,int,java.lang.Object)>($l34, 0, 0, 0, 0, 14, null);

        $r51 = (java.lang.Iterable) r2;

        r6 = interfaceinvoke $r51.<java.lang.Iterable: java.util.Iterator iterator()>();

     label25:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (androidx.compose.ui.layout.Measurable) r7;

        $r20 = staticinvoke <androidx.compose.ui.layout.LayoutIdKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.Measurable)>(r8);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r20, "Hint");

        if $z4 == 0 goto label25;

        $r52 = r7;

        goto label27;

     label26:
        $r52 = null;

     label27:
        r53 = (androidx.compose.ui.layout.Measurable) $r52;

        if r53 == null goto label28;

        $r54 = interfaceinvoke r53.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>($l35);

        goto label29;

     label28:
        $r54 = null;

     label29:
        r55 = $r54;

        $i8 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r3);

        $i9 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r4);

        $i10 = virtualinvoke r50.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i11 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r46);

        $i12 = staticinvoke <androidx.compose.material.TextFieldImplKt: int widthOrZero(androidx.compose.ui.layout.Placeable)>(r55);

        i36 = staticinvoke <androidx.compose.material.TextFieldKt: int access$calculateWidth-VsPV1Ek(int,int,int,int,int,long)>($i8, $i9, $i10, $i11, $i12, l0);

        $i13 = virtualinvoke r50.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        if r46 == null goto label30;

        $z17 = 1;

        goto label31;

     label30:
        $z17 = 0;

     label31:
        $i14 = staticinvoke <androidx.compose.material.TextFieldImplKt: int heightOrZero(androidx.compose.ui.layout.Placeable)>(r3);

        $i15 = staticinvoke <androidx.compose.material.TextFieldImplKt: int heightOrZero(androidx.compose.ui.layout.Placeable)>(r4);

        $i16 = staticinvoke <androidx.compose.material.TextFieldImplKt: int heightOrZero(androidx.compose.ui.layout.Placeable)>(r55);

        $f3 = interfaceinvoke $r1.<androidx.compose.ui.layout.MeasureScope: float getDensity()>();

        $r16 = r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>;

        i37 = staticinvoke <androidx.compose.material.TextFieldKt: int access$calculateHeight-O3s9Psw(int,boolean,int,int,int,int,long,float,androidx.compose.foundation.layout.PaddingValues)>($i13, $z17, i31, $i14, $i15, $i16, l0, $f3, $r16);

        $r17 = new androidx.compose.material.TextFieldMeasurePolicy$measure$1;

        specialinvoke $r17.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: void <init>(androidx.compose.ui.layout.Placeable,int,int,int,int,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.material.TextFieldMeasurePolicy,int,int,androidx.compose.ui.layout.MeasureScope)>(r46, i1, i30, i36, i37, r50, r55, r3, r4, r0, i31, i3, $r1);

        $r18 = (kotlin.jvm.functions.Function1) $r17;

        $r19 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, i36, i37, null, $r18, 4, null);

        return $r19;
    }

    public int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = <androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $i1 = specialinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy: int intrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,java.util.List,int,kotlin.jvm.functions.Function2)>($r1, r2, i0, $r4);

        return $i1;
    }

    public int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = <androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $i1 = specialinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy: int intrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,java.util.List,int,kotlin.jvm.functions.Function2)>($r1, r2, i0, $r4);

        return $i1;
    }

    public int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = <androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $i1 = specialinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy: int intrinsicWidth(java.util.List,int,kotlin.jvm.functions.Function2)>(r2, i0, $r4);

        return $i1;
    }

    public int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, $i1;
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r3 = <androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        $i1 = specialinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy: int intrinsicWidth(java.util.List,int,kotlin.jvm.functions.Function2)>(r2, i0, $r4);

        return $i1;
    }

    private final int intrinsicWidth(java.util.List, int, kotlin.jvm.functions.Function2)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        java.util.List r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, i11;
        kotlin.jvm.functions.Function2 r2, r3;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z12, z14, $z15, $z18;
        java.util.NoSuchElementException $r4;
        java.lang.Object $r5, $r7, $r14, $r16, $r18, $r20, $r22, $r25, $r27, $r29, r32, $r36, $r38, r42, $r44, $r46, $r48, $r52, $r54;
        java.lang.Integer $r6, $r13, $r17, $r21, $r26;
        java.lang.Number $r8, $r15, $r19, $r23, $r28;
        androidx.compose.ui.layout.IntrinsicMeasurable $r9, $r10, $r11, $r12, r33, r37, r39, $r43, $r47, r49, $r53;
        long $l2;
        java.lang.Iterable $r24, $r30, r34, r40, r50;
        java.util.Iterator r31, r35, $r41, r45, $r51;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        $r30 = (java.lang.Iterable) r1;

        r3 = r2;

        r31 = interfaceinvoke $r30.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        r32 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (androidx.compose.ui.layout.IntrinsicMeasurable) r32;

        $r5 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>(r33);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, "TextField");

        if $z2 == 0 goto label01;

        goto label03;

     label02:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        throw $r4;

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r32, $r6);

        $r8 = (java.lang.Number) $r7;

        i1 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        r34 = (java.lang.Iterable) r1;

        r35 = interfaceinvoke r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r36;

        $r29 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>(r37);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r29, "Label");

        if $z7 == 0 goto label04;

        $r38 = $r36;

        goto label06;

     label05:
        $r38 = null;

     label06:
        $r9 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r38;

        if $r9 == null goto label07;

        r39 = $r9;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r27 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r39, $r26);

        $r28 = (java.lang.Number) $r27;

        $i4 = virtualinvoke $r28.<java.lang.Number: int intValue()>();

        goto label08;

     label07:
        $i4 = 0;

     label08:
        $i5 = $i4;

        r40 = (java.lang.Iterable) r1;

        $r41 = interfaceinvoke r40.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z12 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label10;

        r42 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        $r43 = (androidx.compose.ui.layout.IntrinsicMeasurable) r42;

        $r25 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r43);

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, "Trailing");

        if $z6 == 0 goto label09;

        $r44 = r42;

        goto label11;

     label10:
        $r44 = null;

     label11:
        $r10 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r44;

        if $r10 == null goto label12;

        z14 = 0;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r22 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r10, $r21);

        $r23 = (java.lang.Number) $r22;

        $i6 = virtualinvoke $r23.<java.lang.Number: int intValue()>();

        goto label13;

     label12:
        $i6 = 0;

     label13:
        $i7 = $i6;

        $r24 = (java.lang.Iterable) r1;

        r45 = interfaceinvoke $r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z15 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label15;

        $r46 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        $r47 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r46;

        $r20 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r47);

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r20, "Leading");

        if $z5 == 0 goto label14;

        $r48 = $r46;

        goto label16;

     label15:
        $r48 = null;

     label16:
        $r11 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r48;

        if $r11 == null goto label17;

        r49 = $r11;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r49, $r17);

        $r19 = (java.lang.Number) $r18;

        $i8 = virtualinvoke $r19.<java.lang.Number: int intValue()>();

        goto label18;

     label17:
        $i8 = 0;

     label18:
        i9 = $i8;

        r50 = (java.lang.Iterable) r1;

        $r51 = interfaceinvoke r50.<java.lang.Iterable: java.util.Iterator iterator()>();

     label19:
        $z18 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label20;

        $r52 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        $r53 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r52;

        $r16 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r53);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r16, "Hint");

        if $z4 == 0 goto label19;

        $r54 = $r52;

        goto label21;

     label20:
        $r54 = null;

     label21:
        $r12 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r54;

        if $r12 == null goto label22;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r14 = interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r15 = (java.lang.Number) $r14;

        $i10 = virtualinvoke $r15.<java.lang.Number: int intValue()>();

        goto label23;

     label22:
        $i10 = 0;

     label23:
        i11 = $i10;

        $l2 = staticinvoke <androidx.compose.material.TextFieldImplKt: long getZeroConstraints()>();

        $i3 = staticinvoke <androidx.compose.material.TextFieldKt: int access$calculateWidth-VsPV1Ek(int,int,int,int,int,long)>(i9, $i7, i1, $i5, i11, $l2);

        return $i3;
    }

    private final int intrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, java.util.List, int, kotlin.jvm.functions.Function2)
    {
        androidx.compose.material.TextFieldMeasurePolicy r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        java.util.List r2;
        int i0, i1, $i3, $i5, $i6, $i7, $i8, $i9, i10, $i11, i12;
        kotlin.jvm.functions.Function2 r3, r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z12, z14, $z15, $z18, $z20;
        java.util.NoSuchElementException $r5;
        java.lang.Object $r6, $r8, $r16, $r18, $r20, $r22, $r24, $r27, $r29, $r31, r34, $r38, $r40, r44, $r46, $r48, $r50, $r54, $r56;
        java.lang.Integer $r7, $r15, $r19, $r23, $r28;
        java.lang.Number $r9, $r17, $r21, $r25, $r30;
        androidx.compose.ui.layout.IntrinsicMeasurable $r10, $r11, $r12, $r13, r35, r39, r41, $r45, $r49, r51, $r55;
        long $l2;
        float $f0;
        androidx.compose.foundation.layout.PaddingValues $r14;
        java.lang.Iterable $r26, $r32, r36, r42, r52;
        java.util.Iterator r33, r37, $r43, r47, $r53;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        $r32 = (java.lang.Iterable) r2;

        r4 = r3;

        r33 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label02;

        r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r35 = (androidx.compose.ui.layout.IntrinsicMeasurable) r34;

        $r6 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>(r35);

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, "TextField");

        if $z2 == 0 goto label01;

        goto label03;

     label02:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Collection contains no element matching the predicate.");

        throw $r5;

     label03:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = interfaceinvoke r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r34, $r7);

        $r9 = (java.lang.Number) $r8;

        i1 = virtualinvoke $r9.<java.lang.Number: int intValue()>();

        r36 = (java.lang.Iterable) r2;

        r37 = interfaceinvoke r36.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r38 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r39 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r38;

        $r31 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>(r39);

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r31, "Label");

        if $z7 == 0 goto label04;

        $r40 = $r38;

        goto label06;

     label05:
        $r40 = null;

     label06:
        $r10 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r40;

        if $r10 == null goto label07;

        r41 = $r10;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r29 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r41, $r28);

        $r30 = (java.lang.Number) $r29;

        $i5 = virtualinvoke $r30.<java.lang.Number: int intValue()>();

        goto label08;

     label07:
        $i5 = 0;

     label08:
        $i6 = $i5;

        r42 = (java.lang.Iterable) r2;

        $r43 = interfaceinvoke r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z12 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label10;

        r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        $r45 = (androidx.compose.ui.layout.IntrinsicMeasurable) r44;

        $r27 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r45);

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, "Trailing");

        if $z6 == 0 goto label09;

        $r46 = r44;

        goto label11;

     label10:
        $r46 = null;

     label11:
        $r11 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r46;

        if $r11 == null goto label12;

        z14 = 0;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r24 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r11, $r23);

        $r25 = (java.lang.Number) $r24;

        $i7 = virtualinvoke $r25.<java.lang.Number: int intValue()>();

        goto label13;

     label12:
        $i7 = 0;

     label13:
        $i8 = $i7;

        $r26 = (java.lang.Iterable) r2;

        r47 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z15 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label15;

        $r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        $r49 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r48;

        $r22 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r49);

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, "Leading");

        if $z5 == 0 goto label14;

        $r50 = $r48;

        goto label16;

     label15:
        $r50 = null;

     label16:
        $r12 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r50;

        if $r12 == null goto label17;

        r51 = $r12;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r20 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r51, $r19);

        $r21 = (java.lang.Number) $r20;

        $i9 = virtualinvoke $r21.<java.lang.Number: int intValue()>();

        goto label18;

     label17:
        $i9 = 0;

     label18:
        i10 = $i9;

        r52 = (java.lang.Iterable) r2;

        $r53 = interfaceinvoke r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label19:
        $z18 = interfaceinvoke $r53.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label20;

        $r54 = interfaceinvoke $r53.<java.util.Iterator: java.lang.Object next()>();

        $r55 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r54;

        $r18 = staticinvoke <androidx.compose.material.TextFieldImplKt: java.lang.Object getLayoutId(androidx.compose.ui.layout.IntrinsicMeasurable)>($r55);

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r18, "Hint");

        if $z4 == 0 goto label19;

        $r56 = $r54;

        goto label21;

     label20:
        $r56 = null;

     label21:
        $r13 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r56;

        if $r13 == null goto label22;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16 = interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r13, $r15);

        $r17 = (java.lang.Number) $r16;

        $i11 = virtualinvoke $r17.<java.lang.Number: int intValue()>();

        goto label23;

     label22:
        $i11 = 0;

     label23:
        i12 = $i11;

        if $i6 <= 0 goto label24;

        $z20 = 1;

        goto label25;

     label24:
        $z20 = 0;

     label25:
        $l2 = staticinvoke <androidx.compose.material.TextFieldImplKt: long getZeroConstraints()>();

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.layout.IntrinsicMeasureScope: float getDensity()>();

        $r14 = r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>;

        $i3 = staticinvoke <androidx.compose.material.TextFieldKt: int access$calculateHeight-O3s9Psw(int,boolean,int,int,int,int,long,float,androidx.compose.foundation.layout.PaddingValues)>(i1, $z20, $i6, i10, $i8, i12, $l2, $f0, $r14);

        return $i3;
    }

    public static final boolean access$getSingleLine$p(androidx.compose.material.TextFieldMeasurePolicy)
    {
        androidx.compose.material.TextFieldMeasurePolicy $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.material.TextFieldMeasurePolicy;

        $z0 = $r0.<androidx.compose.material.TextFieldMeasurePolicy: boolean singleLine>;

        return $z0;
    }

    public static final float access$getAnimationProgress$p(androidx.compose.material.TextFieldMeasurePolicy)
    {
        androidx.compose.material.TextFieldMeasurePolicy $r0;
        float $f0;

        $r0 := @parameter0: androidx.compose.material.TextFieldMeasurePolicy;

        $f0 = $r0.<androidx.compose.material.TextFieldMeasurePolicy: float animationProgress>;

        return $f0;
    }

    public static final androidx.compose.foundation.layout.PaddingValues access$getPaddingValues$p(androidx.compose.material.TextFieldMeasurePolicy)
    {
        androidx.compose.material.TextFieldMeasurePolicy $r0;
        androidx.compose.foundation.layout.PaddingValues $r1;

        $r0 := @parameter0: androidx.compose.material.TextFieldMeasurePolicy;

        $r1 = $r0.<androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues paddingValues>;

        return $r1;
    }

androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1
<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 INSTANCE>
    void <init>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 r0;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasurable");

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicHeight(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $i0);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 $r0;

        $r0 = new androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1;

        specialinvoke $r0.<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1: void <init>()>();

        <androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicHeight$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1
<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 INSTANCE>
    void <init>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 r0;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasurable");

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int maxIntrinsicWidth(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $i0);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 $r0;

        $r0 = new androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1;

        specialinvoke $r0.<androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1: void <init>()>();

        <androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$maxIntrinsicWidth$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.material.TextFieldMeasurePolicy$measure$1
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $labelPlaceable>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPaddingValue>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $lastBaseline>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $width>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $height>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $textFieldPlaceable>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $placeholderPlaceable>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $leadingPlaceable>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $trailingPlaceable>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $effectiveLabelBaseline>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPadding>
<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.MeasureScope $this_measure>
    void <init>(androidx.compose.ui.layout.Placeable, int, int, int, int, androidx.compose.ui.layout.Placeable, androidx.compose.ui.layout.Placeable, androidx.compose.ui.layout.Placeable, androidx.compose.ui.layout.Placeable, androidx.compose.material.TextFieldMeasurePolicy, int, int, androidx.compose.ui.layout.MeasureScope)
    {
        androidx.compose.material.TextFieldMeasurePolicy$measure$1 r0;
        androidx.compose.ui.layout.Placeable $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.material.TextFieldMeasurePolicy $r6;
        androidx.compose.ui.layout.MeasureScope $r7;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: androidx.compose.ui.layout.Placeable;

        $r3 := @parameter6: androidx.compose.ui.layout.Placeable;

        $r4 := @parameter7: androidx.compose.ui.layout.Placeable;

        $r5 := @parameter8: androidx.compose.ui.layout.Placeable;

        $r6 := @parameter9: androidx.compose.material.TextFieldMeasurePolicy;

        $i4 := @parameter10: int;

        $i5 := @parameter11: int;

        $r7 := @parameter12: androidx.compose.ui.layout.MeasureScope;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $labelPlaceable> = $r1;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPaddingValue> = $i0;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $lastBaseline> = $i1;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $width> = $i2;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $height> = $i3;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $textFieldPlaceable> = $r2;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $placeholderPlaceable> = $r3;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $leadingPlaceable> = $r4;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $trailingPlaceable> = $r5;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0> = $r6;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $effectiveLabelBaseline> = $i4;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPadding> = $i5;

        r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.MeasureScope $this_measure> = $r7;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.material.TextFieldMeasurePolicy$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        androidx.compose.ui.layout.Placeable $r2, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16;
        androidx.compose.material.TextFieldMeasurePolicy $r3, $r9, $r11, $r17;
        boolean $z0, $z1;
        androidx.compose.ui.layout.MeasureScope $r8, $r18;
        float $f0, $f1, $f2;
        androidx.compose.foundation.layout.PaddingValues $r10;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $labelPlaceable>;

        if $r2 == null goto label1;

        $i4 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPaddingValue>;

        $i3 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $lastBaseline>;

        $i5 = $i4 - $i3;

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i5, 0);

        $i6 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $width>;

        $i7 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $height>;

        $r12 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $textFieldPlaceable>;

        $r13 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $labelPlaceable>;

        $r14 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $placeholderPlaceable>;

        $r15 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $leadingPlaceable>;

        $r16 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $trailingPlaceable>;

        $r11 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0>;

        $z1 = staticinvoke <androidx.compose.material.TextFieldMeasurePolicy: boolean access$getSingleLine$p(androidx.compose.material.TextFieldMeasurePolicy)>($r11);

        $i9 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $effectiveLabelBaseline>;

        $i8 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $topPadding>;

        $i10 = $i9 + $i8;

        $r17 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0>;

        $f1 = staticinvoke <androidx.compose.material.TextFieldMeasurePolicy: float access$getAnimationProgress$p(androidx.compose.material.TextFieldMeasurePolicy)>($r17);

        $r18 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.MeasureScope $this_measure>;

        $f2 = interfaceinvoke $r18.<androidx.compose.ui.layout.MeasureScope: float getDensity()>();

        staticinvoke <androidx.compose.material.TextFieldKt: void access$placeWithLabel(androidx.compose.ui.layout.Placeable$PlacementScope,int,int,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,boolean,int,int,float,float)>($r1, $i6, $i7, $r12, $r13, $r14, $r15, $r16, $z1, i0, $i10, $f1, $f2);

        goto label2;

     label1:
        $i1 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $width>;

        $i2 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: int $height>;

        $r4 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $textFieldPlaceable>;

        $r5 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $placeholderPlaceable>;

        $r6 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $leadingPlaceable>;

        $r7 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.Placeable $trailingPlaceable>;

        $r3 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0>;

        $z0 = staticinvoke <androidx.compose.material.TextFieldMeasurePolicy: boolean access$getSingleLine$p(androidx.compose.material.TextFieldMeasurePolicy)>($r3);

        $r8 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.ui.layout.MeasureScope $this_measure>;

        $f0 = interfaceinvoke $r8.<androidx.compose.ui.layout.MeasureScope: float getDensity()>();

        $r9 = r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: androidx.compose.material.TextFieldMeasurePolicy this$0>;

        $r10 = staticinvoke <androidx.compose.material.TextFieldMeasurePolicy: androidx.compose.foundation.layout.PaddingValues access$getPaddingValues$p(androidx.compose.material.TextFieldMeasurePolicy)>($r9);

        staticinvoke <androidx.compose.material.TextFieldKt: void access$placeWithoutLabel(androidx.compose.ui.layout.Placeable$PlacementScope,int,int,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,androidx.compose.ui.layout.Placeable,boolean,float,androidx.compose.foundation.layout.PaddingValues)>($r1, $i1, $i2, $r4, $r5, $r6, $r7, $z0, $f0, $r10);

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.material.TextFieldMeasurePolicy$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1
<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 INSTANCE>
    void <init>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 r0;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasurable");

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicHeight(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $i0);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 $r0;

        $r0 = new androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1;

        specialinvoke $r0.<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1: void <init>()>();

        <androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicHeight$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1
<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 INSTANCE>
    void <init>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 r0;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 r0;
        androidx.compose.ui.layout.IntrinsicMeasurable r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intrinsicMeasurable");

        $i1 = interfaceinvoke r1.<androidx.compose.ui.layout.IntrinsicMeasurable: int minIntrinsicWidth(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) r1;

        $r3 = (java.lang.Number) r2;

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $r5 = virtualinvoke r0.<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1: java.lang.Integer invoke(androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $i0);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 $r0;

        $r0 = new androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1;

        specialinvoke $r0.<androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1: void <init>()>();

        <androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1: androidx.compose.material.TextFieldMeasurePolicy$minIntrinsicWidth$1 INSTANCE> = $r0;

        return;
    }

