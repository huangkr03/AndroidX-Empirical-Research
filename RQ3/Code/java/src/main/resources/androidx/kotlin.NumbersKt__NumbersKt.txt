kotlin.NumbersKt__NumbersKt
    public void <init>()
    {
        kotlin.NumbersKt__NumbersKt $r0;

        $r0 := @this: kotlin.NumbersKt__NumbersKt;

        specialinvoke $r0.<kotlin.NumbersKt__NumbersJVMKt: void <init>()>();

        return;
    }

    private static final int countLeadingZeroBits(byte)
    {
        int $i0;
        byte $b1;
        short $s2;

        $b1 := @parameter0: byte;

        $s2 = $b1 & 255;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($s2);

        $i0 = $i0 + -24;

        return $i0;
    }

    private static final int countLeadingZeroBits(short)
    {
        int $i0;
        short $s1;
        char $c2;

        $s1 := @parameter0: short;

        $c2 = (char) $s1;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($c2);

        $i0 = $i0 + -16;

        return $i0;
    }

    private static final int countOneBits(byte)
    {
        int $i0;
        byte $b1;
        short $s2;

        $b1 := @parameter0: byte;

        $s2 = $b1 & 255;

        $i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($s2);

        return $i0;
    }

    private static final int countOneBits(short)
    {
        int $i0;
        short $s1;
        char $c2;

        $s1 := @parameter0: short;

        $c2 = (char) $s1;

        $i0 = staticinvoke <java.lang.Integer: int bitCount(int)>($c2);

        return $i0;
    }

    private static final int countTrailingZeroBits(byte)
    {
        int $i0;
        byte $b1;
        short $s2;

        $b1 := @parameter0: byte;

        $s2 = $b1 | 256;

        $i0 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($s2);

        return $i0;
    }

    private static final int countTrailingZeroBits(short)
    {
        int $i0;
        short $s1;

        $s1 := @parameter0: short;

        $i0 = $s1 | 65536;

        $i0 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>($i0);

        return $i0;
    }

    public static final byte rotateLeft(byte, int)
    {
        byte $b0;
        int $i1, $i2;
        short $s3;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i2 = $i1 & 7;

        $i2 = $b0 << $i2;

        $s3 = $b0 & 255;

        $i1 = $i1 & 7;

        $i1 = 8 - $i1;

        $s3 = $s3 >>> $i1;

        $i1 = $s3 | $i2;

        $b0 = (byte) $i1;

        return $b0;
    }

    public static final short rotateLeft(short, int)
    {
        short $s0;
        int $i1, $i2;
        char $c3;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        $i2 = $i1 & 15;

        $i2 = $s0 << $i2;

        $c3 = (char) $s0;

        $i1 = $i1 & 15;

        $i1 = 16 - $i1;

        $c3 = $c3 >>> $i1;

        $i1 = $c3 | $i2;

        $s0 = (short) $i1;

        return $s0;
    }

    public static final byte rotateRight(byte, int)
    {
        byte $b0;
        int $i1, $i2;
        short $s3;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        $i2 = $i1 & 7;

        $i2 = 8 - $i2;

        $i2 = $b0 << $i2;

        $s3 = $b0 & 255;

        $i1 = $i1 & 7;

        $s3 = $s3 >>> $i1;

        $i1 = $s3 | $i2;

        $b0 = (byte) $i1;

        return $b0;
    }

    public static final short rotateRight(short, int)
    {
        short $s0;
        int $i1, $i2;
        char $c3;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        $i2 = $i1 & 15;

        $i2 = 16 - $i2;

        $i2 = $s0 << $i2;

        $c3 = (char) $s0;

        $i1 = $i1 & 15;

        $c3 = $c3 >>> $i1;

        $i1 = $c3 | $i2;

        $s0 = (short) $i1;

        return $s0;
    }

    private static final byte takeHighestOneBit(byte)
    {
        int $i0;
        byte $b1;
        short $s2;

        $b1 := @parameter0: byte;

        $s2 = $b1 & 255;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($s2);

        $b1 = (byte) $i0;

        return $b1;
    }

    private static final short takeHighestOneBit(short)
    {
        int $i0;
        short $s1;
        char $c2;

        $s1 := @parameter0: short;

        $c2 = (char) $s1;

        $i0 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($c2);

        $s1 = (short) $i0;

        return $s1;
    }

    private static final byte takeLowestOneBit(byte)
    {
        int $i0;
        byte $b1;

        $b1 := @parameter0: byte;

        $i0 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>($b1);

        $b1 = (byte) $i0;

        return $b1;
    }

    private static final short takeLowestOneBit(short)
    {
        int $i0;
        short $s1;

        $s1 := @parameter0: short;

        $i0 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>($s1);

        $s1 = (short) $i0;

        return $s1;
    }

