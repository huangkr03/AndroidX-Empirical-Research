androidx.media2.exoplayer.ExoPlayerWrapper
<androidx.media2.exoplayer.ExoPlayerWrapper: java.lang.String TAG>
<androidx.media2.exoplayer.ExoPlayerWrapper: java.lang.String USER_AGENT_NAME>
<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>
<androidx.media2.exoplayer.ExoPlayerWrapper: android.os.Looper mLooper>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter mBandwidthMeter>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.audio.DefaultAudioSink mAudioSink>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>
<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mHasAudioAttributes>
<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>
<androidx.media2.exoplayer.ExoPlayerWrapper: int mAuxEffectId>
<androidx.media2.exoplayer.ExoPlayerWrapper: float mAuxEffectSendLevel>
<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared>
<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared>
<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering>
<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPendingSeek>
<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoWidth>
<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoHeight>
<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams>
    void <init>(android.content.Context, androidx.media2.exoplayer.ExoPlayerWrapper$Listener, android.os.Looper)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        android.content.Context r1, $r4;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener r2;
        android.os.Looper r3;
        androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter $r5;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.exoplayer.ExoPlayerWrapper$Listener;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext> = $r4;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener> = r2;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.os.Looper mLooper> = r3;

        $r5 = new androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter;

        specialinvoke $r5.<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter mBandwidthMeter> = $r5;

        return;
    }

    public android.os.Looper getLooper()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        android.os.Looper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.os.Looper mLooper>;

        return $r1;
    }

    public void setMediaItem(androidx.media2.MediaItem)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.MediaItem r1, $r4;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media2.MediaItem;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r3 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (androidx.media2.MediaItem) $r3;

        virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void setMediaItem(androidx.media2.MediaItem)>($r4);

        return;
    }

    public androidx.media2.MediaItem getCurrentMediaItem()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;
        androidx.media2.MediaItem $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r2 = virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        return $r2;
    }

    public void prepare()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean $z0, $z1;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $z0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z1);

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void preparePlayer()>();

        return;
    }

    public void play()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1, $r2, $r3;
        int $i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared> = 0;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $i0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getPlaybackState()>();

        if $i0 != 4 goto label1;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r3.<androidx.media2.exoplayer.external.SimpleExoPlayer: void seekTo(long)>(0L);

     label1:
        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setPlayWhenReady(boolean)>(1);

        return;
    }

    public void pause()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared> = 0;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setPlayWhenReady(boolean)>(0);

        return;
    }

    public void seekTo(long, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        androidx.media2.MediaItem r1;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2, $r9;
        androidx.media2.exoplayer.external.SeekParameters $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r4;
        long $l1, $l3, l5, $l6;
        byte $b2, $b4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        l5 := @parameter0: long;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r3 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.SeekParameters getSeekParameters(int)>(i0);

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setSeekParameters(androidx.media2.exoplayer.external.SeekParameters)>($r3);

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        r1 = virtualinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        if r1 == null goto label3;

        $l1 = virtualinvoke r1.<androidx.media2.MediaItem: long getStartPosition()>();

        $b2 = $l1 cmp l5;

        if $b2 > 0 goto label1;

        $l3 = virtualinvoke r1.<androidx.media2.MediaItem: long getEndPosition()>();

        $b4 = $l3 cmp l5;

        if $b4 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested seek position is out of range : ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r8);

        $l6 = virtualinvoke r1.<androidx.media2.MediaItem: long getStartPosition()>();

        l5 = l5 - $l6;

     label3:
        $r9 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r9.<androidx.media2.exoplayer.external.SimpleExoPlayer: void seekTo(long)>(l5);

        return;
    }

    public long getCurrentPosition()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.MediaItem r1;
        int $i0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r3;
        long $l1, l2;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $i0 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int getState()>();

        if $i0 == 1001 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z0);

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        l2 = virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: long getCurrentPosition()>();

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        r1 = virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        if r1 == null goto label3;

        $l1 = virtualinvoke r1.<androidx.media2.MediaItem: long getStartPosition()>();

        l2 = l2 + $l1;

     label3:
        return l2;
    }

    public long getDuration()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        long l0, $l2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;
        byte $b1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        l0 = virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long getCurrentMediaItemDuration()>();

        $b1 = l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label1;

        $l2 = -1L;

        goto label2;

     label1:
        $l2 = l0;

     label2:
        return $l2;
    }

    public long getBufferedPosition()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.MediaItem r1;
        int $i0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r3;
        long $l1, l2;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $i0 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int getState()>();

        if $i0 == 1001 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z0);

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        l2 = virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: long getBufferedPosition()>();

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        r1 = virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        if r1 == null goto label3;

        $l1 = virtualinvoke r1.<androidx.media2.MediaItem: long getStartPosition()>();

        l2 = l2 + $l1;

     label3:
        return l2;
    }

    public int getState()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        boolean z0, $z1, $z2;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1, $r2;
        java.lang.IllegalStateException $r3;
        short $s1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $z1 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean hasError()>();

        if $z1 == 0 goto label1;

        return 1005;

     label1:
        $z2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared>;

        if $z2 == 0 goto label2;

        return 1002;

     label2:
        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        i0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getPlaybackState()>();

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        z0 = virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: boolean getPlayWhenReady()>();

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label4;
            default: goto label8;
        };

     label3:
        return 1001;

     label4:
        return 1003;

     label5:
        if z0 == 0 goto label6;

        $s1 = 1004;

        goto label7;

     label6:
        $s1 = 1003;

     label7:
        return $s1;

     label8:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }

    public void loopCurrent(boolean)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean z0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        byte $b0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setRepeatMode(int)>($b0);

        return;
    }

    public void skipToNext()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void skipToNext()>();

        return;
    }

    public void setNextMediaItem(androidx.media2.MediaItem)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.MediaItem r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r2, $r3;
        boolean $z0, $z1;
        java.util.List $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media2.MediaItem;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $z0 = virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z1);

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void setNextMediaItems(java.util.List)>($r4);

        return;
    }

    public void setNextMediaItems(java.util.List)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        java.util.List r1, $r5;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $z0 = virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z1);

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (java.util.List) $r4;

        virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void setNextMediaItems(java.util.List)>($r5);

        return;
    }

    public void setAudioAttributes(androidx.media.AudioAttributesCompat)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media.AudioAttributesCompat r1;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;
        androidx.media2.exoplayer.external.audio.AudioAttributes $r3;
        int $i0, $i1;
        androidx.media2.exoplayer.external.audio.DefaultAudioSink $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media.AudioAttributesCompat;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mHasAudioAttributes> = 1;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r3 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.audio.AudioAttributes getAudioAttributes(androidx.media.AudioAttributesCompat)>(r1);

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setAudioAttributes(androidx.media2.exoplayer.external.audio.AudioAttributes)>($r3);

        $i0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

        if $i0 == 0 goto label1;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.audio.DefaultAudioSink mAudioSink>;

        $i1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

        virtualinvoke $r4.<androidx.media2.exoplayer.external.audio.DefaultAudioSink: void setAudioSessionId(int)>($i1);

     label1:
        return;
    }

    public androidx.media.AudioAttributesCompat getAudioAttributes()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean $z0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        androidx.media2.exoplayer.external.audio.AudioAttributes $r2;
        androidx.media.AudioAttributesCompat $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $z0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mHasAudioAttributes>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r2 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: androidx.media2.exoplayer.external.audio.AudioAttributes getAudioAttributes()>();

        $r3 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media.AudioAttributesCompat getAudioAttributesCompat(androidx.media2.exoplayer.external.audio.AudioAttributes)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setAudioSessionId(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0, $i1;
        androidx.media2.exoplayer.external.audio.DefaultAudioSink $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId> = i0;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.audio.DefaultAudioSink mAudioSink>;

        $i1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

        virtualinvoke $r1.<androidx.media2.exoplayer.external.audio.DefaultAudioSink: void setAudioSessionId(int)>($i1);

        return;
    }

    public int getAudioSessionId()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.Context $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $i1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

        if $i1 != 0 goto label1;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>;

        $i2 = staticinvoke <androidx.media2.exoplayer.external.C: int generateAudioSessionIdV21(android.content.Context)>($r1);

        virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void setAudioSessionId(int)>($i2);

     label1:
        $i3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

        if $i3 != 0 goto label2;

        $i4 = 0;

        goto label3;

     label2:
        $i4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId>;

     label3:
        return $i4;
    }

    public void attachAuxEffect(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        androidx.media2.exoplayer.external.audio.AuxEffectInfo $r1;
        float $f0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAuxEffectId> = i0;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r1 = new androidx.media2.exoplayer.external.audio.AuxEffectInfo;

        $f0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: float mAuxEffectSendLevel>;

        specialinvoke $r1.<androidx.media2.exoplayer.external.audio.AuxEffectInfo: void <init>(int,float)>(i0, $f0);

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setAuxEffectInfo(androidx.media2.exoplayer.external.audio.AuxEffectInfo)>($r1);

        return;
    }

    public void setAuxEffectSendLevel(float)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        float f0;
        androidx.media2.exoplayer.external.audio.AuxEffectInfo $r1;
        int $i0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        f0 := @parameter0: float;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: float mAuxEffectSendLevel> = f0;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r1 = new androidx.media2.exoplayer.external.audio.AuxEffectInfo;

        $i0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAuxEffectId>;

        specialinvoke $r1.<androidx.media2.exoplayer.external.audio.AuxEffectInfo: void <init>(int,float)>($i0, f0);

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setAuxEffectInfo(androidx.media2.exoplayer.external.audio.AuxEffectInfo)>($r1);

        return;
    }

    public void setPlaybackParams(androidx.media2.PlaybackParams)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.PlaybackParams r1, $r2;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r3;
        androidx.media2.exoplayer.external.PlaybackParameters $r4;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r5;
        androidx.media2.MediaItem $r6;
        androidx.media2.MediaTimestamp $r7;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media2.PlaybackParams;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams> = r1;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams>;

        $r4 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.PlaybackParameters getPlaybackParameters(androidx.media2.PlaybackParams)>($r2);

        virtualinvoke $r3.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setPlaybackParameters(androidx.media2.exoplayer.external.PlaybackParameters)>($r4);

        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r6 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r7 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaTimestamp getTimestamp()>();

        interfaceinvoke $r5.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaTimeDiscontinuity(androidx.media2.MediaItem,androidx.media2.MediaTimestamp)>($r6, $r7);

        return;
    }

    public androidx.media2.PlaybackParams getPlaybackParams()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.PlaybackParams $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams>;

        return $r1;
    }

    public int getVideoWidth()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $i0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoWidth>;

        return $i0;
    }

    public int getVideoHeight()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int $i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $i0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoHeight>;

        return $i0;
    }

    public void setSurface(android.view.Surface)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        android.view.Surface r1;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: android.view.Surface;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setVideoSurface(android.view.Surface)>(r1);

        return;
    }

    public void setVolume(float)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        float f0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setVolume(float)>(f0);

        return;
    }

    public float getVolume()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        float $f0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $f0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: float getVolume()>();

        return $f0;
    }

    public java.util.List getTrackInfo()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.TrackSelector $r1;
        java.util.List $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $r2 = virtualinvoke $r1.<androidx.media2.exoplayer.TrackSelector: java.util.List getTrackInfos()>();

        return $r2;
    }

    public int getSelectedTrack(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0, $i1;
        androidx.media2.exoplayer.TrackSelector $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $i1 = virtualinvoke $r1.<androidx.media2.exoplayer.TrackSelector: int getSelectedTrack(int)>(i0);

        return $i1;
    }

    public void selectTrack(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        androidx.media2.exoplayer.TrackSelector $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        virtualinvoke $r1.<androidx.media2.exoplayer.TrackSelector: void selectTrack(int)>(i0);

        return;
    }

    public void deselectTrack(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        androidx.media2.exoplayer.TrackSelector $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        virtualinvoke $r1.<androidx.media2.exoplayer.TrackSelector: void deselectTrack(int)>(i0);

        return;
    }

    public android.os.PersistableBundle getMetricsV21()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.source.TrackGroupArray r1;
        long l0, l1, $l5;
        androidx.media2.exoplayer.external.source.TrackGroup r2;
        java.lang.String r3, r11, r12;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r4, $r5;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r6;
        int $i2, i4;
        android.os.PersistableBundle $r7, r13;
        byte $b3;
        androidx.media2.exoplayer.external.Format $r10;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        r1 = virtualinvoke $r4.<androidx.media2.exoplayer.external.SimpleExoPlayer: androidx.media2.exoplayer.external.source.TrackGroupArray getCurrentTrackGroups()>();

        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        l0 = virtualinvoke $r5.<androidx.media2.exoplayer.external.SimpleExoPlayer: long getDuration()>();

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        l1 = virtualinvoke $r6.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long getCurrentMediaItemPlayingTimeMs()>();

        r11 = null;

        r12 = null;

        i4 = 0;

     label1:
        $i2 = r1.<androidx.media2.exoplayer.external.source.TrackGroupArray: int length>;

        if i4 >= $i2 goto label4;

        r2 = virtualinvoke r1.<androidx.media2.exoplayer.external.source.TrackGroupArray: androidx.media2.exoplayer.external.source.TrackGroup get(int)>(i4);

        $r10 = virtualinvoke r2.<androidx.media2.exoplayer.external.source.TrackGroup: androidx.media2.exoplayer.external.Format getFormat(int)>(0);

        r3 = $r10.<androidx.media2.exoplayer.external.Format: java.lang.String sampleMimeType>;

        if r12 != null goto label2;

        $z1 = staticinvoke <androidx.media2.exoplayer.external.util.MimeTypes: boolean isVideo(java.lang.String)>(r3);

        if $z1 == 0 goto label2;

        r12 = r3;

        goto label3;

     label2:
        if r11 != null goto label3;

        $z0 = staticinvoke <androidx.media2.exoplayer.external.util.MimeTypes: boolean isAudio(java.lang.String)>(r3);

        if $z0 == 0 goto label3;

        r11 = r3;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        $r7 = new android.os.PersistableBundle;

        specialinvoke $r7.<android.os.PersistableBundle: void <init>()>();

        r13 = $r7;

        if r12 == null goto label5;

        virtualinvoke r13.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("android.media.mediaplayer.video.mime", r12);

     label5:
        if r11 == null goto label6;

        virtualinvoke r13.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("android.media.mediaplayer.audio.mime", r11);

     label6:
        $b3 = l0 cmp -9223372036854775807L;

        if $b3 != 0 goto label7;

        $l5 = -1L;

        goto label8;

     label7:
        $l5 = l0;

     label8:
        virtualinvoke r13.<android.os.PersistableBundle: void putLong(java.lang.String,long)>("android.media.mediaplayer.durationMs", $l5);

        virtualinvoke r13.<android.os.PersistableBundle: void putLong(java.lang.String,long)>("android.media.mediaplayer.playingMs", l1);

        return r13;
    }

    public androidx.media2.MediaTimestamp getTimestamp()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean z0, $z1, $z2;
        float f0, $f1;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1, $r5;
        int $i0;
        androidx.media2.MediaTimestamp $r2;
        long $l1, $l2, $l3;
        androidx.media2.PlaybackParams $r3;
        java.lang.Float $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $i0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getPlaybackState()>();

        if $i0 != 3 goto label1;

        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $z1 = virtualinvoke $r5.<androidx.media2.exoplayer.external.SimpleExoPlayer: boolean getPlayWhenReady()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams>;

        $r4 = virtualinvoke $r3.<androidx.media2.PlaybackParams: java.lang.Float getSpeed()>();

        $f1 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        goto label4;

     label3:
        $f1 = 0.0F;

     label4:
        f0 = $f1;

        $r2 = new androidx.media2.MediaTimestamp;

        $l1 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: long getCurrentPosition()>();

        $l2 = staticinvoke <androidx.media2.exoplayer.external.C: long msToUs(long)>($l1);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        specialinvoke $r2.<androidx.media2.MediaTimestamp: void <init>(long,long,float)>($l2, $l3, f0);

        return $r2;
    }

    public void reset()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r1, r40;
        androidx.media2.exoplayer.TextRenderer r2, r42;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r3, $r4, $r5, $r27, $r30, $r32, $r33, $r34;
        int $i0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r6, r47;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r7, $r31;
        androidx.media2.MediaItem $r8;
        androidx.media2.MediaTimestamp $r9;
        android.content.Context $r12, $r17, $r19, $r29;
        androidx.media2.exoplayer.external.audio.AudioCapabilities $r13;
        androidx.media2.exoplayer.external.audio.AudioProcessor[] $r14;
        androidx.media2.exoplayer.external.audio.DefaultAudioSink $r20, r41;
        androidx.media2.exoplayer.TrackSelector $r21, r43;
        androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector $r22;
        androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter $r24;
        android.os.Looper $r26;
        androidx.media2.PlaybackParams$Builder $r36, $r37, $r38, r48;
        androidx.media2.PlaybackParams $r39;
        androidx.media2.exoplayer.RenderersFactory r44;
        androidx.media2.exoplayer.external.DefaultLoadControl r45;
        androidx.media2.exoplayer.external.analytics.AnalyticsCollector$Factory r46;
        androidx.media2.exoplayer.external.RenderersFactory r49;
        androidx.media2.exoplayer.external.Player$EventListener r50;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        if $r3 == null goto label2;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r4.<androidx.media2.exoplayer.external.SimpleExoPlayer: void setPlayWhenReady(boolean)>(0);

        $i0 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int getState()>();

        if $i0 == 1001 goto label1;

        $r7 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r8 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r9 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaTimestamp getTimestamp()>();

        interfaceinvoke $r7.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaTimeDiscontinuity(androidx.media2.MediaItem,androidx.media2.MediaTimestamp)>($r8, $r9);

     label1:
        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r5.<androidx.media2.exoplayer.external.SimpleExoPlayer: void release()>();

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r6.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void clear()>();

     label2:
        r40 = new androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        specialinvoke r40.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: void <init>(androidx.media2.exoplayer.ExoPlayerWrapper)>(r0);

        r1 = r40;

        r41 = new androidx.media2.exoplayer.external.audio.DefaultAudioSink;

        $r12 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>;

        $r13 = staticinvoke <androidx.media2.exoplayer.external.audio.AudioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities getCapabilities(android.content.Context)>($r12);

        $r14 = newarray (androidx.media2.exoplayer.external.audio.AudioProcessor)[0];

        specialinvoke r41.<androidx.media2.exoplayer.external.audio.DefaultAudioSink: void <init>(androidx.media2.exoplayer.external.audio.AudioCapabilities,androidx.media2.exoplayer.external.audio.AudioProcessor[])>($r13, $r14);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.audio.DefaultAudioSink mAudioSink> = r41;

        r42 = new androidx.media2.exoplayer.TextRenderer;

        specialinvoke r42.<androidx.media2.exoplayer.TextRenderer: void <init>(androidx.media2.exoplayer.TextRenderer$Output)>(r1);

        r2 = r42;

        r43 = new androidx.media2.exoplayer.TrackSelector;

        specialinvoke r43.<androidx.media2.exoplayer.TrackSelector: void <init>(androidx.media2.exoplayer.TextRenderer)>(r2);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector> = r43;

        $r17 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>;

        r44 = new androidx.media2.exoplayer.RenderersFactory;

        $r19 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>;

        $r20 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.audio.DefaultAudioSink mAudioSink>;

        specialinvoke r44.<androidx.media2.exoplayer.RenderersFactory: void <init>(android.content.Context,androidx.media2.exoplayer.external.audio.AudioSink,androidx.media2.exoplayer.TextRenderer)>($r19, $r20, r2);

        $r21 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $r22 = virtualinvoke $r21.<androidx.media2.exoplayer.TrackSelector: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector getPlayerTrackSelector()>();

        r45 = new androidx.media2.exoplayer.external.DefaultLoadControl;

        specialinvoke r45.<androidx.media2.exoplayer.external.DefaultLoadControl: void <init>()>();

        $r24 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter mBandwidthMeter>;

        r46 = new androidx.media2.exoplayer.external.analytics.AnalyticsCollector$Factory;

        specialinvoke r46.<androidx.media2.exoplayer.external.analytics.AnalyticsCollector$Factory: void <init>()>();

        $r26 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.os.Looper mLooper>;

        r49 = (androidx.media2.exoplayer.external.RenderersFactory) r44;

        $r27 = staticinvoke <androidx.media2.exoplayer.external.ExoPlayerFactory: androidx.media2.exoplayer.external.SimpleExoPlayer newSimpleInstance(android.content.Context,androidx.media2.exoplayer.external.RenderersFactory,androidx.media2.exoplayer.external.trackselection.TrackSelector,androidx.media2.exoplayer.external.LoadControl,androidx.media2.exoplayer.external.drm.DrmSessionManager,androidx.media2.exoplayer.external.upstream.BandwidthMeter,androidx.media2.exoplayer.external.analytics.AnalyticsCollector$Factory,android.os.Looper)>($r17, r49, $r22, r45, null, $r24, r46, $r26);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer> = $r27;

        r47 = new androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r29 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: android.content.Context mContext>;

        $r30 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r31 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        specialinvoke r47.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void <init>(android.content.Context,androidx.media2.exoplayer.external.SimpleExoPlayer,androidx.media2.exoplayer.ExoPlayerWrapper$Listener)>($r29, $r30, $r31);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue> = r47;

        $r32 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        r50 = (androidx.media2.exoplayer.external.Player$EventListener) r1;

        virtualinvoke $r32.<androidx.media2.exoplayer.external.SimpleExoPlayer: void addListener(androidx.media2.exoplayer.external.Player$EventListener)>(r50);

        $r33 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r33.<androidx.media2.exoplayer.external.SimpleExoPlayer: void addVideoListener(androidx.media2.exoplayer.external.video.VideoListener)>(r1);

        $r34 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r34.<androidx.media2.exoplayer.external.SimpleExoPlayer: void addMetadataOutput(androidx.media2.exoplayer.external.metadata.MetadataOutput)>(r1);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoWidth> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoHeight> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPendingSeek> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mHasAudioAttributes> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAuxEffectId> = 0;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: float mAuxEffectSendLevel> = 0.0F;

        r48 = new androidx.media2.PlaybackParams$Builder;

        specialinvoke r48.<androidx.media2.PlaybackParams$Builder: void <init>()>();

        $r36 = virtualinvoke r48.<androidx.media2.PlaybackParams$Builder: androidx.media2.PlaybackParams$Builder setSpeed(float)>(1.0F);

        $r37 = virtualinvoke $r36.<androidx.media2.PlaybackParams$Builder: androidx.media2.PlaybackParams$Builder setPitch(float)>(1.0F);

        $r38 = virtualinvoke $r37.<androidx.media2.PlaybackParams$Builder: androidx.media2.PlaybackParams$Builder setAudioFallbackMode(int)>(0);

        $r39 = virtualinvoke $r38.<androidx.media2.PlaybackParams$Builder: androidx.media2.PlaybackParams build()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.PlaybackParams mPlaybackParams> = $r39;

        return;
    }

    public void close()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1, $r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void release()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer> = null;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void clear()>();

     label1:
        return;
    }

    public boolean hasError()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        androidx.media2.exoplayer.external.ExoPlaybackException $r2;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r2 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: androidx.media2.exoplayer.external.ExoPlaybackException getPlaybackError()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void handleVideoSizeChanged(int, int, float)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0, i1, $i3;
        float f0, $f1, $f2;
        byte $b2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r2;
        androidx.media2.MediaItem $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $b2 = f0 cmpl 1.0F;

        if $b2 == 0 goto label1;

        $f1 = (float) i0;

        $f2 = f0 * $f1;

        $i3 = (int) $f2;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoWidth> = $i3;

        goto label2;

     label1:
        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoWidth> = i0;

     label2:
        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mVideoHeight> = i1;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r3 = virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onVideoSizeChanged(androidx.media2.MediaItem,int,int)>($r3, i0, i1);

        return;
    }

    void handleRenderedFirstFrame()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r2;
        androidx.media2.MediaItem $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        $r3 = virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onVideoRenderingStart(androidx.media2.MediaItem)>($r3);

        return;
    }

    void handlePlayerStateChanged(boolean, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean z0;
        int i0;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r1;
        androidx.media2.MediaItem $r2;
        androidx.media2.MediaTimestamp $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r2 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r3 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaTimestamp getTimestamp()>();

        interfaceinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaTimeDiscontinuity(androidx.media2.MediaItem,androidx.media2.MediaTimestamp)>($r2, $r3);

        if i0 != 3 goto label1;

        if z0 == 0 goto label1;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void maybeUpdateTimerForPlaying()>();

        goto label2;

     label1:
        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void maybeUpdateTimerForStopped()>();

     label2:
        tableswitch(i0)
        {
            case 1: goto label6;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label3:
        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void maybeNotifyBufferingEvents()>();

        goto label6;

     label4:
        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void maybeNotifyReadyEvents()>();

        goto label6;

     label5:
        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onPlayerEnded()>();

        goto label6;

     label6:
        return;
    }

    void handleTextRendererChannelAvailable(int, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0, i1;
        androidx.media2.exoplayer.TrackSelector $r1, $r2;
        boolean $z0;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r3;
        androidx.media2.MediaItem $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        virtualinvoke $r1.<androidx.media2.exoplayer.TrackSelector: void handleTextRendererChannelAvailable(int,int)>(i0, i1);

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $z0 = virtualinvoke $r2.<androidx.media2.exoplayer.TrackSelector: boolean hasPendingMetadataUpdate()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r4 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMetadataChanged(androidx.media2.MediaItem)>($r4);

     label1:
        return;
    }

    void handlePlayerTracksChanged()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        androidx.media2.exoplayer.TrackSelector $r2, $r3;
        boolean $z0;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r4;
        androidx.media2.MediaItem $r5;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        virtualinvoke $r2.<androidx.media2.exoplayer.TrackSelector: void handlePlayerTracksChanged(androidx.media2.exoplayer.external.Player)>($r1);

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        $z0 = virtualinvoke $r3.<androidx.media2.exoplayer.TrackSelector: boolean hasPendingMetadataUpdate()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r5 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMetadataChanged(androidx.media2.MediaItem)>($r5);

     label1:
        return;
    }

    void handleSeekProcessed()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r1;
        int $i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPendingSeek> = 1;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $i0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getPlaybackState()>();

        if $i0 != 3 goto label1;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: void maybeNotifyReadyEvents()>();

     label1:
        return;
    }

    void handlePositionDiscontinuity(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r1;
        androidx.media2.MediaItem $r2;
        androidx.media2.MediaTimestamp $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r4;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r2 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r3 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaTimestamp getTimestamp()>();

        interfaceinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaTimeDiscontinuity(androidx.media2.MediaItem,androidx.media2.MediaTimestamp)>($r2, $r3);

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onPositionDiscontinuity(boolean)>($z0);

        return;
    }

    void handlePlayerError(androidx.media2.exoplayer.external.ExoPlaybackException)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.ExoPlaybackException r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r2;
        androidx.media2.MediaItem $r3;
        int $i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media2.exoplayer.external.ExoPlaybackException;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r3 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $i0 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: int getError(androidx.media2.exoplayer.external.ExoPlaybackException)>(r1);

        interfaceinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onError(androidx.media2.MediaItem,int)>($r3, $i0);

        return;
    }

    void handleAudioSessionId(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        int i0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        i0 := @parameter0: int;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: int mAudioSessionId> = i0;

        return;
    }

    void handleSubtitleData(byte[], long)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        byte[] r1;
        long l0;
        int i1;
        androidx.media2.exoplayer.TrackSelector $r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r3;
        androidx.media2.MediaItem $r4;
        androidx.media2.SubtitleData $r5;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: byte[];

        l0 := @parameter1: long;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.TrackSelector mTrackSelector>;

        i1 = virtualinvoke $r2.<androidx.media2.exoplayer.TrackSelector: int getSelectedTrack(int)>(4);

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r4 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r5 = new androidx.media2.SubtitleData;

        specialinvoke $r5.<androidx.media2.SubtitleData: void <init>(int,long,long,byte[])>(i1, l0, 0L, r1);

        interfaceinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onSubtitleData(androidx.media2.MediaItem,androidx.media2.SubtitleData)>($r4, $r5);

        return;
    }

    void handleMetadata(androidx.media2.exoplayer.external.metadata.Metadata)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.external.metadata.Metadata r1;
        int i0, i2;
        androidx.media2.exoplayer.ByteArrayFrame r2;
        androidx.media2.exoplayer.external.metadata.Metadata$Entry $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r4;
        androidx.media2.MediaItem $r5;
        androidx.media2.TimedMetaData $r6;
        byte[] $r7;
        long $l1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        r1 := @parameter0: androidx.media2.exoplayer.external.metadata.Metadata;

        i0 = virtualinvoke r1.<androidx.media2.exoplayer.external.metadata.Metadata: int length()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r1.<androidx.media2.exoplayer.external.metadata.Metadata: androidx.media2.exoplayer.external.metadata.Metadata$Entry get(int)>(i2);

        r2 = (androidx.media2.exoplayer.ByteArrayFrame) $r3;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r5 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r6 = new androidx.media2.TimedMetaData;

        $l1 = r2.<androidx.media2.exoplayer.ByteArrayFrame: long mTimestamp>;

        $r7 = r2.<androidx.media2.exoplayer.ByteArrayFrame: byte[] mData>;

        specialinvoke $r6.<androidx.media2.TimedMetaData: void <init>(long,byte[])>($l1, $r7);

        interfaceinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onTimedMetadata(androidx.media2.MediaItem,androidx.media2.TimedMetaData)>($r5, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private void maybeUpdateTimerForPlaying()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onPlaying()>();

        return;
    }

    private void maybeUpdateTimerForStopped()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onStopped()>();

        return;
    }

    private void maybeNotifyBufferingEvents()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        boolean $z0, $z1;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r1, $r4;
        androidx.media2.MediaItem $r2, $r5;
        androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter $r3;
        long $l0, $l1;
        int $i2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $z0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering>;

        if $z1 != 0 goto label1;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering> = 1;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r2 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter mBandwidthMeter>;

        $l0 = virtualinvoke $r3.<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter: long getBitrateEstimate()>();

        $l1 = $l0 / 1000L;

        $i2 = (int) $l1;

        interfaceinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBandwidthSample(androidx.media2.MediaItem,int)>($r2, $i2);

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r5 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBufferingStarted(androidx.media2.MediaItem)>($r5);

     label1:
        return;
    }

    private void maybeNotifyReadyEvents()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper r0;
        androidx.media2.MediaItem r1, $r4, $r7;
        boolean z0, z1, $z2, $z3, $z4;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue $r2, $r9;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r3, $r6, $r8, $r10;
        androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter $r5;
        long $l0, $l1, $l3;
        int $i2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        r1 = virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        $z2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared>;

        if $z2 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        z1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPendingSeek>;

        if z0 == 0 goto label3;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPrepared> = 1;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mNewlyPrepared> = 1;

        $r9 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue mMediaItemQueue>;

        virtualinvoke $r9.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onPositionDiscontinuity(boolean)>(0);

        $r10 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r10.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onPrepared(androidx.media2.MediaItem)>(r1);

        goto label5;

     label3:
        if z1 == 0 goto label4;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mPendingSeek> = 0;

        $r8 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $l3 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: long getCurrentPosition()>();

        interfaceinvoke $r8.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onSeekCompleted(long)>($l3);

        goto label5;

     label4:
        $z3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering>;

        if $z3 == 0 goto label5;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper: boolean mRebuffering> = 0;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r4 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter mBandwidthMeter>;

        $l0 = virtualinvoke $r5.<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter: long getBitrateEstimate()>();

        $l1 = $l0 / 1000L;

        $i2 = (int) $l1;

        interfaceinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBandwidthSample(androidx.media2.MediaItem,int)>($r4, $i2);

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r7 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r6.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBufferingEnded(androidx.media2.MediaItem)>($r7);

     label5:
        return;
    }

androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener
<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>
    void <init>(androidx.media2.exoplayer.ExoPlayerWrapper)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.ExoPlayerWrapper r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: androidx.media2.exoplayer.ExoPlayerWrapper;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0> = r1;

        specialinvoke r0.<androidx.media2.exoplayer.external.Player$DefaultEventListener: void <init>()>();

        return;
    }

    public void onPlayerStateChanged(boolean, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        boolean z0;
        int i0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handlePlayerStateChanged(boolean,int)>(z0, i0);

        return;
    }

    public void onTracksChanged(androidx.media2.exoplayer.external.source.TrackGroupArray, androidx.media2.exoplayer.external.trackselection.TrackSelectionArray)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.external.source.TrackGroupArray r1;
        androidx.media2.exoplayer.external.trackselection.TrackSelectionArray r2;
        androidx.media2.exoplayer.ExoPlayerWrapper $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: androidx.media2.exoplayer.external.source.TrackGroupArray;

        r2 := @parameter1: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper: void handlePlayerTracksChanged()>();

        return;
    }

    public void onSeekProcessed()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleSeekProcessed()>();

        return;
    }

    public void onPositionDiscontinuity(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        int i0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handlePositionDiscontinuity(int)>(i0);

        return;
    }

    public void onPlayerError(androidx.media2.exoplayer.external.ExoPlaybackException)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.external.ExoPlaybackException r1;
        androidx.media2.exoplayer.ExoPlayerWrapper $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: androidx.media2.exoplayer.external.ExoPlaybackException;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper: void handlePlayerError(androidx.media2.exoplayer.external.ExoPlaybackException)>(r1);

        return;
    }

    public void onVideoSizeChanged(int, int, int, float)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        int i0, i1, i2;
        float f0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleVideoSizeChanged(int,int,float)>(i0, i1, f0);

        return;
    }

    public void onRenderedFirstFrame()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleRenderedFirstFrame()>();

        return;
    }

    public void onSurfaceSizeChanged(int, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        int i0, i1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void onAudioSessionId(int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        int i0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleAudioSessionId(int)>(i0);

        return;
    }

    public void onAudioAttributesChanged(androidx.media2.exoplayer.external.audio.AudioAttributes)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.external.audio.AudioAttributes r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: androidx.media2.exoplayer.external.audio.AudioAttributes;

        return;
    }

    public void onVolumeChanged(float)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        float f0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        f0 := @parameter0: float;

        return;
    }

    public void onCcData(byte[], long)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        byte[] r1;
        long l0;
        androidx.media2.exoplayer.ExoPlayerWrapper $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: byte[];

        l0 := @parameter1: long;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleSubtitleData(byte[],long)>(r1, l0);

        return;
    }

    public void onChannelAvailable(int, int)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        int i0, i1;
        androidx.media2.exoplayer.ExoPlayerWrapper $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r1.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleTextRendererChannelAvailable(int,int)>(i0, i1);

        return;
    }

    public void onMetadata(androidx.media2.exoplayer.external.metadata.Metadata)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener r0;
        androidx.media2.exoplayer.external.metadata.Metadata r1;
        androidx.media2.exoplayer.ExoPlayerWrapper $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener;

        r1 := @parameter0: androidx.media2.exoplayer.external.metadata.Metadata;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$ComponentListener: androidx.media2.exoplayer.ExoPlayerWrapper this$0>;

        virtualinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper: void handleMetadata(androidx.media2.exoplayer.external.metadata.Metadata)>(r1);

        return;
    }

androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry
<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: java.lang.Object mLock>
<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: int mMediaItemCount>
    void <init>()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry r0;
        java.lang.Object $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: java.lang.Object mLock> = $r1;

        return;
    }

androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry
<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>
    void <init>()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries> = $r1;

        return;
    }

    public java.lang.Object registerMediaItemAndGetLock(java.io.FileDescriptor)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry r0;
        java.io.FileDescriptor r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry r2, $r8;
        java.util.Map $r3, $r4, $r9;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;
        int $i0, $i1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry;

        r1 := @parameter0: java.io.FileDescriptor;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r9 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>;

        $r8 = new androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry;

        specialinvoke $r8.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: void <init>()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

     label1:
        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r6 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry) $r6;

        $i0 = r2.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: int mMediaItemCount>;

        $i1 = $i0 + 1;

        r2.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: int mMediaItemCount> = $i1;

        $r7 = r2.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: java.lang.Object mLock>;

        return $r7;
    }

    public void unregisterMediaItem(java.io.FileDescriptor)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry r0;
        java.io.FileDescriptor r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry r2;
        java.util.Map $r3, $r6;
        java.lang.Object $r4, $r5;
        int $i0, $i1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry;

        r1 := @parameter0: java.io.FileDescriptor;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        r2 = (androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry) $r5;

        $i0 = r2.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: int mMediaItemCount>;

        $i1 = $i0 - 1;

        r2.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry$Entry: int mMediaItemCount> = $i1;

        if $i1 != 0 goto label1;

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.util.Map mEntries>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

androidx.media2.exoplayer.ExoPlayerWrapper$Listener
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onPrepared(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMetadataChanged(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onSeekCompleted(long)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBufferingStarted(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBufferingEnded(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onBandwidthSample(androidx.media2.MediaItem,int)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onVideoRenderingStart(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onVideoSizeChanged(androidx.media2.MediaItem,int,int)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onSubtitleData(androidx.media2.MediaItem,androidx.media2.SubtitleData)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onTimedMetadata(androidx.media2.MediaItem,androidx.media2.TimedMetaData)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaItemStartedAsNext(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaItemEnded(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onLoop(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaTimeDiscontinuity(androidx.media2.MediaItem,androidx.media2.MediaTimestamp)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onPlaybackEnded(androidx.media2.MediaItem)>
<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onError(androidx.media2.MediaItem,int)>
androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.MediaItem mMediaItem>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.exoplayer.DurationProvidingMediaSource mDurationProvidingMediaSource>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: java.io.FileDescriptor mFileDescriptor>
    void <init>(androidx.media2.MediaItem, androidx.media2.exoplayer.DurationProvidingMediaSource, java.io.FileDescriptor)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo r0;
        androidx.media2.MediaItem r1;
        androidx.media2.exoplayer.DurationProvidingMediaSource r2;
        java.io.FileDescriptor r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo;

        r1 := @parameter0: androidx.media2.MediaItem;

        r2 := @parameter1: androidx.media2.exoplayer.DurationProvidingMediaSource;

        r3 := @parameter2: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.MediaItem mMediaItem> = r1;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.exoplayer.DurationProvidingMediaSource mDurationProvidingMediaSource> = r2;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: java.io.FileDescriptor mFileDescriptor> = r3;

        return;
    }

androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.upstream.DataSource$Factory mDataSourceFactory>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry mFileDescriptorRegistry>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs>
<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mCurrentMediaItemPlayingTimeUs>
    void <init>(android.content.Context, androidx.media2.exoplayer.external.SimpleExoPlayer, androidx.media2.exoplayer.ExoPlayerWrapper$Listener)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        android.content.Context r1;
        androidx.media2.exoplayer.external.SimpleExoPlayer r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener r3;
        java.lang.String r4;
        androidx.media2.exoplayer.external.source.MediaSource[] $r7;
        androidx.media2.exoplayer.external.upstream.DefaultDataSourceFactory r10;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource r11;
        java.util.ArrayDeque r12;
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry r13;
        androidx.media2.exoplayer.external.upstream.DataSource$Factory r14;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.exoplayer.external.SimpleExoPlayer;

        r3 := @parameter2: androidx.media2.exoplayer.ExoPlayerWrapper$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer> = r2;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener> = r3;

        r4 = staticinvoke <androidx.media2.exoplayer.external.util.Util: java.lang.String getUserAgent(android.content.Context,java.lang.String)>(r1, "MediaPlayer2");

        r10 = new androidx.media2.exoplayer.external.upstream.DefaultDataSourceFactory;

        specialinvoke r10.<androidx.media2.exoplayer.external.upstream.DefaultDataSourceFactory: void <init>(android.content.Context,java.lang.String)>(r1, r4);

        r14 = (androidx.media2.exoplayer.external.upstream.DataSource$Factory) r10;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.upstream.DataSource$Factory mDataSourceFactory> = r14;

        r11 = new androidx.media2.exoplayer.external.source.ConcatenatingMediaSource;

        $r7 = newarray (androidx.media2.exoplayer.external.source.MediaSource)[0];

        specialinvoke r11.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void <init>(androidx.media2.exoplayer.external.source.MediaSource[])>($r7);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource> = r11;

        r12 = new java.util.ArrayDeque;

        specialinvoke r12.<java.util.ArrayDeque: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos> = r12;

        r13 = new androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry;

        specialinvoke r13.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: void <init>()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry mFileDescriptorRegistry> = r13;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs> = -1L;

        return;
    }

    public void clear()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        java.util.ArrayDeque $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

     label1:
        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $z0 = virtualinvoke $r1.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r3 = virtualinvoke $r2.<java.util.ArrayDeque: java.lang.Object remove()>();

        $r4 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r3;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void releaseMediaItem(androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo)>($r4);

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        $i0 = virtualinvoke $r1.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: int getSize()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setMediaItem(androidx.media2.MediaItem)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.MediaItem r1;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r2;
        java.util.List $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 := @parameter0: androidx.media2.MediaItem;

        virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void clear()>();

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void clear()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void setNextMediaItems(java.util.List)>($r3);

        return;
    }

    public void setNextMediaItems(java.util.List)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        java.util.List r1;
        int i0, $i1, $i2;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        androidx.media2.MediaItem r4;
        java.lang.Throwable r5, $r17;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r6, $r8, $r12;
        java.lang.Object $r9, $r15;
        java.util.ArrayDeque $r10, $r13, $r14;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r11, $r18;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r16;
        boolean $z0;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 := @parameter0: java.util.List;

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        i0 = virtualinvoke $r6.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: int getSize()>();

        if i0 <= 1 goto label2;

        $r12 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r12.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void removeMediaSourceRange(int,int)>(1, i0);

     label1:
        $r13 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $i2 = virtualinvoke $r13.<java.util.ArrayDeque: int size()>();

        if $i2 <= 1 goto label2;

        $r14 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r15 = virtualinvoke $r14.<java.util.ArrayDeque: java.lang.Object removeLast()>();

        $r16 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r15;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void releaseMediaItem(androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo)>($r16);

        goto label1;

     label2:
        $r7 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r7;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.media2.MediaItem) $r9;

        if r4 != null goto label4;

        $r11 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r11.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onError(androidx.media2.MediaItem,int)>(null, 1);

        return;

     label4:
        $r10 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void appendMediaItem(androidx.media2.MediaItem,java.util.Collection,java.util.Collection)>(r4, $r10, r2);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        r5 = $r17;

        $r18 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r18.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onError(androidx.media2.MediaItem,int)>(r4, 1);

     label7:
        goto label3;

     label8:
        $r8 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r8.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void addMediaSources(java.util.Collection)>(r2);

        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public void preparePlayer()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r1;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.SimpleExoPlayer: void prepare(androidx.media2.exoplayer.external.source.MediaSource)>($r1);

        return;
    }

    public androidx.media2.MediaItem getCurrentMediaItem()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        java.util.ArrayDeque $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r4;
        androidx.media2.MediaItem $r5;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $z0 = virtualinvoke $r1.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r3 = virtualinvoke $r2.<java.util.ArrayDeque: java.lang.Object peekFirst()>();

        $r4 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r3;

        $r5 = $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.MediaItem mMediaItem>;

     label2:
        return $r5;
    }

    public long getCurrentMediaItemDuration()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.exoplayer.DurationProvidingMediaSource r1;
        java.util.ArrayDeque $r2;
        java.lang.Object $r3;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r4;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r5;
        long $l0, $l1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r3 = virtualinvoke $r2.<java.util.ArrayDeque: java.lang.Object peekFirst()>();

        $r4 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r3;

        r1 = $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.exoplayer.DurationProvidingMediaSource mDurationProvidingMediaSource>;

        if r1 == null goto label1;

        $l1 = virtualinvoke r1.<androidx.media2.exoplayer.DurationProvidingMediaSource: long getDurationMs()>();

        return $l1;

     label1:
        $r5 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $l0 = virtualinvoke $r5.<androidx.media2.exoplayer.external.SimpleExoPlayer: long getDuration()>();

        return $l0;
    }

    public long getCurrentMediaItemPlayingTimeMs()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        long $l0, $l1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $l0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mCurrentMediaItemPlayingTimeUs>;

        $l1 = staticinvoke <androidx.media2.exoplayer.external.C: long usToMs(long)>($l0);

        return $l1;
    }

    public void skipToNext()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        java.util.ArrayDeque $r1;
        java.lang.Object $r2;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r3;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r4;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $r1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r2 = virtualinvoke $r1.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        $r3 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r2;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void releaseMediaItem(androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo)>($r3);

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r4.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void removeMediaSource(int)>(0);

        return;
    }

    public void onPlaying()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $l0 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        return;

     label1:
        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs> = $l2;

        return;
    }

    public void onStopped()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        long l0, $l1, $l3, $l4, $l5, $l6, $l7, $l8;
        byte $b2;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        $l1 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        return;

     label1:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l7 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mCurrentMediaItemPlayingTimeUs>;

        $l3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs>;

        $l4 = l0 - $l3;

        $l5 = $l4 + 500L;

        $l6 = $l5 / 1000L;

        $l8 = $l7 + $l6;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mCurrentMediaItemPlayingTimeUs> = $l8;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs> = -1L;

        return;
    }

    public void onPlayerEnded()
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.MediaItem r1;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r2, $r3;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r2.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaItemEnded(androidx.media2.MediaItem)>(r1);

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r3.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onPlaybackEnded(androidx.media2.MediaItem)>(r1);

        return;
    }

    public void onPositionDiscontinuity(boolean)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        boolean z0;
        androidx.media2.MediaItem r1, $r5, $r10;
        int i0, $i1, $i2, i3;
        androidx.media2.exoplayer.external.source.ConcatenatingMediaSource $r2;
        androidx.media2.exoplayer.external.SimpleExoPlayer $r3, $r11, $r13;
        androidx.media2.exoplayer.ExoPlayerWrapper$Listener $r4, $r9, $r12;
        java.util.ArrayDeque $r6;
        java.lang.Object $r7;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo $r8;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        if z0 == 0 goto label1;

        $r11 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $i2 = virtualinvoke $r11.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getRepeatMode()>();

        if $i2 == 0 goto label1;

        $r12 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        interfaceinvoke $r12.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onLoop(androidx.media2.MediaItem)>(r1);

     label1:
        $r13 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        i0 = virtualinvoke $r13.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getCurrentWindowIndex()>();

        if i0 <= 0 goto label6;

        if z0 == 0 goto label2;

        $r9 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r10 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r9.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaItemEnded(androidx.media2.MediaItem)>($r10);

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: java.util.ArrayDeque mMediaItemInfos>;

        $r7 = virtualinvoke $r6.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        $r8 = (androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo) $r7;

        specialinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void releaseMediaItem(androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo)>($r8);

        i3 = i3 + 1;

        goto label3;

     label4:
        if z0 == 0 goto label5;

        $r4 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$Listener mListener>;

        $r5 = virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.MediaItem getCurrentMediaItem()>();

        interfaceinvoke $r4.<androidx.media2.exoplayer.ExoPlayerWrapper$Listener: void onMediaItemStartedAsNext(androidx.media2.MediaItem)>($r5);

     label5:
        $r2 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource mConcatenatingMediaSource>;

        virtualinvoke $r2.<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource: void removeMediaSourceRange(int,int)>(0, i0);

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mCurrentMediaItemPlayingTimeUs> = 0L;

        r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: long mStartPlayingTimeNs> = -1L;

        $r3 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.SimpleExoPlayer mPlayer>;

        $i1 = virtualinvoke $r3.<androidx.media2.exoplayer.external.SimpleExoPlayer: int getPlaybackState()>();

        if $i1 != 3 goto label6;

        virtualinvoke r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: void onPlaying()>();

     label6:
        return;
    }

    private void appendMediaItem(androidx.media2.MediaItem, java.util.Collection, java.util.Collection) throws java.io.IOException
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.MediaItem r1;
        java.util.Collection r2, r3;
        boolean $z0;
        byte $b0, $b3;
        long $l1, $l2, l4, l5, l6, l7;
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry $r6;
        java.io.FileDescriptor $r7, $r8, r10;
        androidx.media2.exoplayer.external.upstream.DataSource$Factory r9;
        androidx.media2.FileMediaItem r11;
        java.lang.Object r12, r13;
        androidx.media2.exoplayer.DurationProvidingMediaSource r14, r16;
        androidx.media2.exoplayer.external.source.ClippingMediaSource r17;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo r18;
        androidx.media2.exoplayer.external.source.MediaSource r19, r20;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 := @parameter0: androidx.media2.MediaItem;

        r2 := @parameter1: java.util.Collection;

        r3 := @parameter2: java.util.Collection;

        r9 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.external.upstream.DataSource$Factory mDataSourceFactory>;

        r10 = null;

        $z0 = r1 instanceof androidx.media2.FileMediaItem;

        if $z0 == 0 goto label1;

        r11 = (androidx.media2.FileMediaItem) r1;

        $r6 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry mFileDescriptorRegistry>;

        $r7 = virtualinvoke r11.<androidx.media2.FileMediaItem: java.io.FileDescriptor getFileDescriptor()>();

        r12 = virtualinvoke $r6.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: java.lang.Object registerMediaItemAndGetLock(java.io.FileDescriptor)>($r7);

        $r8 = virtualinvoke r11.<androidx.media2.FileMediaItem: java.io.FileDescriptor getFileDescriptor()>();

        r10 = staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: java.io.FileDescriptor dup(java.io.FileDescriptor)>($r8);

        l4 = virtualinvoke r11.<androidx.media2.FileMediaItem: long getFileDescriptorOffset()>();

        l5 = virtualinvoke r11.<androidx.media2.FileMediaItem: long getFileDescriptorLength()>();

        r9 = staticinvoke <androidx.media2.exoplayer.FileDescriptorDataSource: androidx.media2.exoplayer.external.upstream.DataSource$Factory getFactory(java.io.FileDescriptor,long,long,java.lang.Object)>(r10, l4, l5, r12);

     label1:
        r13 = staticinvoke <androidx.media2.exoplayer.ExoPlayerUtils: androidx.media2.exoplayer.external.source.MediaSource createUnclippedMediaSource(androidx.media2.exoplayer.external.upstream.DataSource$Factory,androidx.media2.MediaItem)>(r9, r1);

        r14 = null;

        l6 = virtualinvoke r1.<androidx.media2.MediaItem: long getStartPosition()>();

        l7 = virtualinvoke r1.<androidx.media2.MediaItem: long getEndPosition()>();

        $b0 = l6 cmp 0L;

        if $b0 != 0 goto label2;

        $b3 = l7 cmp 576460752303423487L;

        if $b3 == 0 goto label3;

     label2:
        r16 = new androidx.media2.exoplayer.DurationProvidingMediaSource;

        r19 = (androidx.media2.exoplayer.external.source.MediaSource) r13;

        specialinvoke r16.<androidx.media2.exoplayer.DurationProvidingMediaSource: void <init>(androidx.media2.exoplayer.external.source.MediaSource)>(r19);

        r14 = r16;

        r17 = new androidx.media2.exoplayer.external.source.ClippingMediaSource;

        $l1 = staticinvoke <androidx.media2.exoplayer.external.C: long msToUs(long)>(l6);

        $l2 = staticinvoke <androidx.media2.exoplayer.external.C: long msToUs(long)>(l7);

        r20 = (androidx.media2.exoplayer.external.source.MediaSource) r14;

        specialinvoke r17.<androidx.media2.exoplayer.external.source.ClippingMediaSource: void <init>(androidx.media2.exoplayer.external.source.MediaSource,long,long,boolean,boolean,boolean)>(r20, $l1, $l2, 0, 0, 1);

        r13 = r17;

     label3:
        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r13);

        r18 = new androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo;

        specialinvoke r18.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: void <init>(androidx.media2.MediaItem,androidx.media2.exoplayer.DurationProvidingMediaSource,java.io.FileDescriptor)>(r1, r14, r10);

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r18);

        return;
    }

    private void releaseMediaItem(androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo)
    {
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue r0;
        androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo r1;
        androidx.media2.MediaItem r2, $r3;
        boolean $z0, $z1;
        androidx.media2.CallbackMediaItem $r4;
        androidx.media2.DataSourceCallback $r5;
        java.io.FileDescriptor $r6, r14;
        androidx.media2.FileMediaItem $r7;
        androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry $r8;
        java.lang.Throwable $r9, r15;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue;

        r1 := @parameter0: androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo;

        r2 = r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.MediaItem mMediaItem>;

     label1:
        $z0 = r2 instanceof androidx.media2.FileMediaItem;

        if $z0 == 0 goto label2;

        $r6 = r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: java.io.FileDescriptor mFileDescriptor>;

        staticinvoke <androidx.media2.exoplayer.FileDescriptorUtil: void close(java.io.FileDescriptor)>($r6);

        $r7 = (androidx.media2.FileMediaItem) r2;

        r14 = virtualinvoke $r7.<androidx.media2.FileMediaItem: java.io.FileDescriptor getFileDescriptor()>();

        $r8 = r0.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemQueue: androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry mFileDescriptorRegistry>;

        virtualinvoke $r8.<androidx.media2.exoplayer.ExoPlayerWrapper$FileDescriptorRegistry: void unregisterMediaItem(java.io.FileDescriptor)>(r14);

        goto label3;

     label2:
        $z1 = r2 instanceof androidx.media2.CallbackMediaItem;

        if $z1 == 0 goto label3;

        $r3 = r1.<androidx.media2.exoplayer.ExoPlayerWrapper$MediaItemInfo: androidx.media2.MediaItem mMediaItem>;

        $r4 = (androidx.media2.CallbackMediaItem) $r3;

        $r5 = virtualinvoke $r4.<androidx.media2.CallbackMediaItem: androidx.media2.DataSourceCallback getDataSourceCallback()>();

        virtualinvoke $r5.<androidx.media2.DataSourceCallback: void close()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r15 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error releasing media item ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ExoPlayerWrapper", $r13, r15);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

