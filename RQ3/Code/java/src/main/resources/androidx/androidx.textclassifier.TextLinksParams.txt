androidx.textclassifier.TextLinksParams
<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory DEFAULT_SPAN_FACTORY>
<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinksParams DEFAULT_PARAMS>
<androidx.textclassifier.TextLinksParams: int mApplyStrategy>
<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory>
<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>
<androidx.textclassifier.TextLinksParams: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextLinksParams: java.lang.Long mReferenceTime>
    void <init>(int, androidx.textclassifier.TextLinks$SpanFactory, androidx.textclassifier.TextClassifier$EntityConfig, androidx.core.os.LocaleListCompat, java.lang.Long)
    {
        androidx.textclassifier.TextLinksParams r0;
        int i0;
        androidx.textclassifier.TextLinks$SpanFactory r1;
        androidx.textclassifier.TextClassifier$EntityConfig r2;
        androidx.core.os.LocaleListCompat r3;
        java.lang.Long r4;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.textclassifier.TextLinks$SpanFactory;

        r2 := @parameter2: androidx.textclassifier.TextClassifier$EntityConfig;

        r3 := @parameter3: androidx.core.os.LocaleListCompat;

        r4 := @parameter4: java.lang.Long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextLinksParams: int mApplyStrategy> = i0;

        r0.<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory> = r1;

        r0.<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig> = r2;

        r0.<androidx.textclassifier.TextLinksParams: androidx.core.os.LocaleListCompat mDefaultLocales> = r3;

        r0.<androidx.textclassifier.TextLinksParams: java.lang.Long mReferenceTime> = r4;

        return;
    }

    androidx.textclassifier.TextClassifier$EntityConfig getEntityConfig()
    {
        androidx.textclassifier.TextLinksParams r0;
        androidx.textclassifier.TextClassifier$EntityConfig $r1;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        $r1 = r0.<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        return $r1;
    }

    androidx.core.os.LocaleListCompat getDefaultLocales()
    {
        androidx.textclassifier.TextLinksParams r0;
        androidx.core.os.LocaleListCompat $r1;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        $r1 = r0.<androidx.textclassifier.TextLinksParams: androidx.core.os.LocaleListCompat mDefaultLocales>;

        return $r1;
    }

    int apply(android.text.Spannable, androidx.textclassifier.TextLinks, androidx.textclassifier.TextClassifier)
    {
        androidx.textclassifier.TextLinksParams r0;
        android.text.Spannable r1;
        androidx.textclassifier.TextLinks r2;
        androidx.textclassifier.TextClassifier r3;
        java.util.Iterator r4;
        androidx.textclassifier.TextLinks$TextLink r5;
        androidx.textclassifier.TextLinks$TextLinkSpanData r6, $r17;
        androidx.textclassifier.TextLinks$TextLinkSpan r7;
        android.text.style.ClickableSpan[] r8, r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.text.style.ClickableSpan r10;
        boolean $z0, $z1, $z2;
        java.util.Collection $r14, $r15;
        java.lang.Object $r16;
        java.lang.Long $r18;
        androidx.textclassifier.TextLinks$SpanFactory $r19;
        java.lang.Object[] $r20;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: androidx.textclassifier.TextLinks;

        r3 := @parameter2: androidx.textclassifier.TextClassifier;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $z0 = virtualinvoke r0.<androidx.textclassifier.TextLinksParams: boolean canApply(android.text.Spannable,androidx.textclassifier.TextLinks)>(r1, r2);

        if $z0 != 0 goto label1;

        return 3;

     label1:
        $r14 = virtualinvoke r2.<androidx.textclassifier.TextLinks: java.util.Collection getLinks()>();

        $z1 = interfaceinvoke $r14.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i9 = 0;

        $r15 = virtualinvoke r2.<androidx.textclassifier.TextLinks: java.util.Collection getLinks()>();

        r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.textclassifier.TextLinks$TextLink) $r16;

        $r17 = new androidx.textclassifier.TextLinks$TextLinkSpanData;

        $r18 = r0.<androidx.textclassifier.TextLinksParams: java.lang.Long mReferenceTime>;

        specialinvoke $r17.<androidx.textclassifier.TextLinks$TextLinkSpanData: void <init>(androidx.textclassifier.TextLinks$TextLink,androidx.textclassifier.TextClassifier,java.lang.Long)>(r5, r3, $r18);

        r6 = $r17;

        $r19 = r0.<androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory>;

        r7 = interfaceinvoke $r19.<androidx.textclassifier.TextLinks$SpanFactory: androidx.textclassifier.TextLinks$TextLinkSpan createSpan(androidx.textclassifier.TextLinks$TextLinkSpanData)>(r6);

        if r7 == null goto label7;

        $i1 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getStart()>();

        $i2 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getEnd()>();

        $r20 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i1, $i2, class "Landroid/text/style/ClickableSpan;");

        r8 = (android.text.style.ClickableSpan[]) $r20;

        $i3 = lengthof r8;

        if $i3 <= 0 goto label6;

        $i6 = r0.<androidx.textclassifier.TextLinksParams: int mApplyStrategy>;

        if $i6 != 1 goto label7;

        r9 = r8;

        i0 = lengthof r9;

        i10 = 0;

     label4:
        if i10 >= i0 goto label5;

        r10 = r9[i10];

        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>(r10);

        i10 = i10 + 1;

        goto label4;

     label5:
        $i7 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getStart()>();

        $i8 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getEnd()>();

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r7, $i7, $i8, 33);

        i9 = i9 + 1;

        goto label7;

     label6:
        $i4 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getStart()>();

        $i5 = virtualinvoke r5.<androidx.textclassifier.TextLinks$TextLink: int getEnd()>();

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r7, $i4, $i5, 33);

        i9 = i9 + 1;

     label7:
        goto label3;

     label8:
        if i9 != 0 goto label9;

        return 2;

     label9:
        return 0;
    }

    public java.lang.Long getReferenceTime()
    {
        androidx.textclassifier.TextLinksParams r0;
        java.lang.Long $r1;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        $r1 = r0.<androidx.textclassifier.TextLinksParams: java.lang.Long mReferenceTime>;

        return $r1;
    }

    boolean canApply(android.text.Spannable, androidx.textclassifier.TextLinks)
    {
        androidx.textclassifier.TextLinksParams r0;
        android.text.Spannable r1;
        androidx.textclassifier.TextLinks r2;
        java.lang.String $r3, $r5;
        java.lang.CharSequence $r4;
        boolean $z0;

        r0 := @this: androidx.textclassifier.TextLinksParams;

        r1 := @parameter0: android.text.Spannable;

        r2 := @parameter1: androidx.textclassifier.TextLinks;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke r2.<androidx.textclassifier.TextLinks: java.lang.CharSequence getText()>();

        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r5);

        return $z0;
    }

    static int checkApplyStrategy(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid apply strategy. See TextLinksParams.ApplyStrategy for options.");

        throw $r0;

     label1:
        return i0;
    }

    static void <clinit>()
    {
        androidx.textclassifier.TextLinksParams$1 $r0;
        androidx.textclassifier.TextLinksParams$Builder $r1;
        androidx.textclassifier.TextLinksParams $r2;

        $r0 = new androidx.textclassifier.TextLinksParams$1;

        specialinvoke $r0.<androidx.textclassifier.TextLinksParams$1: void <init>()>();

        <androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory DEFAULT_SPAN_FACTORY> = $r0;

        $r1 = new androidx.textclassifier.TextLinksParams$Builder;

        specialinvoke $r1.<androidx.textclassifier.TextLinksParams$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextLinksParams build()>();

        <androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinksParams DEFAULT_PARAMS> = $r2;

        return;
    }

androidx.textclassifier.TextLinksParams$1
    void <init>()
    {
        androidx.textclassifier.TextLinksParams$1 r0;

        r0 := @this: androidx.textclassifier.TextLinksParams$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.textclassifier.TextLinks$TextLinkSpan createSpan(androidx.textclassifier.TextLinks$TextLinkSpanData)
    {
        androidx.textclassifier.TextLinksParams$1 r0;
        androidx.textclassifier.TextLinks$TextLinkSpanData r1;
        androidx.textclassifier.TextLinks$DefaultTextLinkSpan $r2;

        r0 := @this: androidx.textclassifier.TextLinksParams$1;

        r1 := @parameter0: androidx.textclassifier.TextLinks$TextLinkSpanData;

        $r2 = new androidx.textclassifier.TextLinks$DefaultTextLinkSpan;

        specialinvoke $r2.<androidx.textclassifier.TextLinks$DefaultTextLinkSpan: void <init>(androidx.textclassifier.TextLinks$TextLinkSpanData)>(r1);

        return $r2;
    }

androidx.textclassifier.TextLinksParams$Builder
<androidx.textclassifier.TextLinksParams$Builder: int mApplyStrategy>
<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory>
<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>
<androidx.textclassifier.TextLinksParams$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>
<androidx.textclassifier.TextLinksParams$Builder: java.lang.Long mReferenceTime>
    public void <init>()
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        androidx.textclassifier.TextLinks$SpanFactory $r1;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.textclassifier.TextLinksParams$Builder: int mApplyStrategy> = 0;

        $r1 = <androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory DEFAULT_SPAN_FACTORY>;

        r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory> = $r1;

        return;
    }

    public androidx.textclassifier.TextLinksParams$Builder setApplyStrategy(int)
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        int i0, $i1;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.textclassifier.TextLinksParams: int checkApplyStrategy(int)>(i0);

        r0.<androidx.textclassifier.TextLinksParams$Builder: int mApplyStrategy> = $i1;

        return r0;
    }

    public androidx.textclassifier.TextLinksParams$Builder setSpanFactory(androidx.textclassifier.TextLinks$SpanFactory)
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        androidx.textclassifier.TextLinks$SpanFactory r1, $r3;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        r1 := @parameter0: androidx.textclassifier.TextLinks$SpanFactory;

        if r1 != null goto label1;

        $r3 = <androidx.textclassifier.TextLinksParams: androidx.textclassifier.TextLinks$SpanFactory DEFAULT_SPAN_FACTORY>;

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory> = $r3;

        return r0;
    }

    public androidx.textclassifier.TextLinksParams$Builder setEntityConfig(androidx.textclassifier.TextClassifier$EntityConfig)
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        androidx.textclassifier.TextClassifier$EntityConfig r1;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        r1 := @parameter0: androidx.textclassifier.TextClassifier$EntityConfig;

        r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinksParams$Builder setDefaultLocales(androidx.core.os.LocaleListCompat)
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        androidx.core.os.LocaleListCompat r1;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        r1 := @parameter0: androidx.core.os.LocaleListCompat;

        r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.core.os.LocaleListCompat mDefaultLocales> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinksParams$Builder setReferenceTime(java.lang.Long)
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        java.lang.Long r1;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        r1 := @parameter0: java.lang.Long;

        r0.<androidx.textclassifier.TextLinksParams$Builder: java.lang.Long mReferenceTime> = r1;

        return r0;
    }

    public androidx.textclassifier.TextLinksParams build()
    {
        androidx.textclassifier.TextLinksParams$Builder r0;
        androidx.textclassifier.TextLinksParams $r1;
        java.lang.Long $r2;
        androidx.core.os.LocaleListCompat $r3;
        androidx.textclassifier.TextClassifier$EntityConfig $r4;
        androidx.textclassifier.TextLinks$SpanFactory $r5;
        int $i0;

        r0 := @this: androidx.textclassifier.TextLinksParams$Builder;

        $r1 = new androidx.textclassifier.TextLinksParams;

        $i0 = r0.<androidx.textclassifier.TextLinksParams$Builder: int mApplyStrategy>;

        $r5 = r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextLinks$SpanFactory mSpanFactory>;

        $r4 = r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.textclassifier.TextClassifier$EntityConfig mEntityConfig>;

        $r3 = r0.<androidx.textclassifier.TextLinksParams$Builder: androidx.core.os.LocaleListCompat mDefaultLocales>;

        $r2 = r0.<androidx.textclassifier.TextLinksParams$Builder: java.lang.Long mReferenceTime>;

        specialinvoke $r1.<androidx.textclassifier.TextLinksParams: void <init>(int,androidx.textclassifier.TextLinks$SpanFactory,androidx.textclassifier.TextClassifier$EntityConfig,androidx.core.os.LocaleListCompat,java.lang.Long)>($i0, $r5, $r4, $r3, $r2);

        return $r1;
    }

