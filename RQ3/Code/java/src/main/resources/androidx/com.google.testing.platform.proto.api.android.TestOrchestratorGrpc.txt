com.google.testing.platform.proto.api.android.TestOrchestratorGrpc
<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc: io.grpc.MethodDescriptor getDiagnosticsWorkerMethod>
    private void <init>()
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc $r0;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.grpc.MethodDescriptor getDiagnosticsWorkerMethod()
    {
        io.grpc.MethodDescriptor $r0, $r7;
        io.grpc.MethodDescriptor$Builder $r1;
        io.grpc.MethodDescriptor$MethodType $r2;
        java.lang.String $r3;
        com.google.testing.platform.proto.api.android.DiagnosticEventProto$DiagnosticEvent $r4;
        io.grpc.MethodDescriptor$Marshaller $r5;
        com.google.protobuf.Empty $r6;
        java.lang.Throwable $r8;

        $r0 = <com.google.testing.platform.proto.api.android.TestOrchestratorGrpc: io.grpc.MethodDescriptor getDiagnosticsWorkerMethod>;

        if $r0 != null goto label5;

        entermonitor class "Lcom/google/testing/platform/proto/api/android/TestOrchestratorGrpc;";

     label1:
        $r0 = <com.google.testing.platform.proto.api.android.TestOrchestratorGrpc: io.grpc.MethodDescriptor getDiagnosticsWorkerMethod>;

        if $r0 != null goto label2;

        $r1 = staticinvoke <io.grpc.MethodDescriptor: io.grpc.MethodDescriptor$Builder newBuilder()>();

        $r2 = <io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType BIDI_STREAMING>;

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setType(io.grpc.MethodDescriptor$MethodType)>($r2);

        $r3 = staticinvoke <io.grpc.MethodDescriptor: java.lang.String generateFullMethodName(java.lang.String,java.lang.String)>("google.testing.platform.android.core.api.proto.TestOrchestrator", "DiagnosticsWorker");

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setFullMethodName(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setSampledToLocalTracing(boolean)>(1);

        $r4 = staticinvoke <com.google.testing.platform.proto.api.android.DiagnosticEventProto$DiagnosticEvent: com.google.testing.platform.proto.api.android.DiagnosticEventProto$DiagnosticEvent getDefaultInstance()>();

        $r5 = staticinvoke <io.grpc.protobuf.lite.ProtoLiteUtils: io.grpc.MethodDescriptor$Marshaller marshaller(com.google.protobuf.MessageLite)>($r4);

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setRequestMarshaller(io.grpc.MethodDescriptor$Marshaller)>($r5);

        $r6 = staticinvoke <com.google.protobuf.Empty: com.google.protobuf.Empty getDefaultInstance()>();

        $r5 = staticinvoke <io.grpc.protobuf.lite.ProtoLiteUtils: io.grpc.MethodDescriptor$Marshaller marshaller(com.google.protobuf.MessageLite)>($r6);

        $r1 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor$Builder setResponseMarshaller(io.grpc.MethodDescriptor$Marshaller)>($r5);

        $r7 = virtualinvoke $r1.<io.grpc.MethodDescriptor$Builder: io.grpc.MethodDescriptor build()>();

        $r0 = $r7;

        <com.google.testing.platform.proto.api.android.TestOrchestratorGrpc: io.grpc.MethodDescriptor getDiagnosticsWorkerMethod> = $r7;

     label2:
        exitmonitor class "Lcom/google/testing/platform/proto/api/android/TestOrchestratorGrpc;";

        return $r0;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor class "Lcom/google/testing/platform/proto/api/android/TestOrchestratorGrpc;";

        throw $r8;

     label5:
        return $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub newStub(io.grpc.Channel)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1 $r0;
        io.grpc.stub.AbstractStub $r1;
        io.grpc.Channel $r2;
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r3;

        $r2 := @parameter0: io.grpc.Channel;

        $r0 = new com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1;

        specialinvoke $r0.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1: void <init>()>();

        $r1 = staticinvoke <com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub: io.grpc.stub.AbstractStub newStub(io.grpc.stub.AbstractStub$StubFactory,io.grpc.Channel)>($r0, $r2);

        $r3 = (com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub) $r1;

        return $r3;
    }

com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1
    void <init>()
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1 $r0;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub newStub(io.grpc.Channel, io.grpc.CallOptions)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1 $r0;
        io.grpc.Channel $r1;
        io.grpc.CallOptions $r2;
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r3;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1;

        $r1 := @parameter0: io.grpc.Channel;

        $r2 := @parameter1: io.grpc.CallOptions;

        $r3 = new com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub;

        specialinvoke $r3.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub: void <init>(io.grpc.Channel,io.grpc.CallOptions,com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub-IA)>($r1, $r2, null);

        return $r3;
    }

    public volatile io.grpc.stub.AbstractStub newStub(io.grpc.Channel, io.grpc.CallOptions)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1 $r0;
        io.grpc.CallOptions $r1;
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r2;
        io.grpc.Channel $r3;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1;

        $r3 := @parameter0: io.grpc.Channel;

        $r1 := @parameter1: io.grpc.CallOptions;

        $r2 = virtualinvoke $r0.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$1: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub newStub(io.grpc.Channel,io.grpc.CallOptions)>($r3, $r1);

        return $r2;
    }

com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub-IA
com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub
    private void <init>(io.grpc.Channel, io.grpc.CallOptions)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r0;
        io.grpc.Channel $r1;
        io.grpc.CallOptions $r2;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub;

        $r1 := @parameter0: io.grpc.Channel;

        $r2 := @parameter1: io.grpc.CallOptions;

        specialinvoke $r0.<io.grpc.stub.AbstractAsyncStub: void <init>(io.grpc.Channel,io.grpc.CallOptions)>($r1, $r2);

        return;
    }

    void <init>(io.grpc.Channel, io.grpc.CallOptions, com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub-IA)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r0;
        io.grpc.Channel $r1;
        io.grpc.CallOptions $r2;
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub-IA $r3;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub;

        $r1 := @parameter0: io.grpc.Channel;

        $r2 := @parameter1: io.grpc.CallOptions;

        $r3 := @parameter2: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub-IA;

        specialinvoke $r0.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub: void <init>(io.grpc.Channel,io.grpc.CallOptions)>($r1, $r2);

        return;
    }

    public io.grpc.stub.StreamObserver diagnosticsWorker(io.grpc.stub.StreamObserver)
    {
        com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub $r0;
        io.grpc.stub.StreamObserver $r1;
        io.grpc.Channel $r2;
        io.grpc.MethodDescriptor $r3;
        io.grpc.CallOptions $r4;
        io.grpc.ClientCall $r5;

        $r0 := @this: com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub;

        $r1 := @parameter0: io.grpc.stub.StreamObserver;

        $r2 = virtualinvoke $r0.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub: io.grpc.Channel getChannel()>();

        $r3 = staticinvoke <com.google.testing.platform.proto.api.android.TestOrchestratorGrpc: io.grpc.MethodDescriptor getDiagnosticsWorkerMethod()>();

        $r4 = virtualinvoke $r0.<com.google.testing.platform.proto.api.android.TestOrchestratorGrpc$TestOrchestratorStub: io.grpc.CallOptions getCallOptions()>();

        $r5 = virtualinvoke $r2.<io.grpc.Channel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r3, $r4);

        $r1 = staticinvoke <io.grpc.stub.ClientCalls: io.grpc.stub.StreamObserver asyncBidiStreamingCall(io.grpc.ClientCall,io.grpc.stub.StreamObserver)>($r5, $r1);

        return $r1;
    }

