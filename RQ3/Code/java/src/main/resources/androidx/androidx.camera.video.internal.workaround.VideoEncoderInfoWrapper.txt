androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: java.lang.String TAG>
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: int WIDTH_4KDCI>
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: int HEIGHT_4KDCI>
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: androidx.camera.video.internal.encoder.VideoEncoderInfo mVideoEncoderInfo>
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths>
<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights>
    public static androidx.camera.video.internal.encoder.VideoEncoderInfo 'from'(androidx.camera.video.internal.encoder.VideoEncoderInfo, android.util.Size)
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfo r0, $r7;
        android.util.Size r1;
        androidx.camera.core.impl.Quirk $r2;
        boolean $z0, z1;
        java.lang.Object[] $r3;
        android.util.Range $r4, $r5;
        java.lang.String $r6;
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r8;

        r0 := @parameter0: androidx.camera.video.internal.encoder.VideoEncoderInfo;

        r1 := @parameter1: android.util.Size;

        z1 = 0;

        $r2 = staticinvoke <androidx.camera.video.internal.compat.quirk.DeviceQuirks: androidx.camera.core.impl.Quirk get(java.lang.Class)>(class "Landroidx/camera/video/internal/compat/quirk/MediaCodecInfoReportIncorrectInfoQuirk;");

        if $r2 == null goto label1;

        z1 = 1;

        goto label2;

     label1:
        $z0 = staticinvoke <androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: boolean isSizeSupported(androidx.camera.video.internal.encoder.VideoEncoderInfo,android.util.Size)>(r0, r1);

        if $z0 != 0 goto label2;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r1;

        $r4 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedWidths()>();

        $r3[1] = $r4;

        $r5 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedHeights()>();

        $r3[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Detected that the device does not support a size %s that should be valid in widths/heights = %s/%s", $r3);

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String)>("VideoEncoderInfoWrapper", $r6);

        z1 = 1;

     label2:
        if z1 == 0 goto label3;

        r8 = new androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r7 = r8;

        specialinvoke r8.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: void <init>(androidx.camera.video.internal.encoder.VideoEncoderInfo)>(r0);

        goto label4;

     label3:
        $r7 = r0;

     label4:
        return $r7;
    }

    void <init>(androidx.camera.video.internal.encoder.VideoEncoderInfo)
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        androidx.camera.video.internal.encoder.VideoEncoderInfo r1;
        int i0, i1, i2, i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Integer $r2, $r3, $r5, $r6;
        android.util.Range $r4, $r7;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        r1 := @parameter0: androidx.camera.video.internal.encoder.VideoEncoderInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: androidx.camera.video.internal.encoder.VideoEncoderInfo mVideoEncoderInfo> = r1;

        i0 = interfaceinvoke r1.<androidx.camera.video.internal.encoder.VideoEncoderInfo: int getWidthAlignment()>();

        $d0 = (double) i0;

        $d1 = 4096.0 / $d0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i4 = (int) $d2;

        i1 = $i4 * i0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r2, $r3);

        r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths> = $r4;

        i2 = interfaceinvoke r1.<androidx.camera.video.internal.encoder.VideoEncoderInfo: int getHeightAlignment()>();

        $d3 = (double) i2;

        $d4 = 2160.0 / $d3;

        $d5 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        $i5 = (int) $d5;

        i3 = $i5 * i2;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r5, $r6);

        r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights> = $r7;

        return;
    }

    public java.lang.String getName()
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        androidx.camera.video.internal.encoder.VideoEncoderInfo $r1;
        java.lang.String $r2;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: androidx.camera.video.internal.encoder.VideoEncoderInfo mVideoEncoderInfo>;

        $r2 = interfaceinvoke $r1.<androidx.camera.video.internal.encoder.VideoEncoderInfo: java.lang.String getName()>();

        return $r2;
    }

    public android.util.Range getSupportedWidths()
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        android.util.Range $r1;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths>;

        return $r1;
    }

    public android.util.Range getSupportedHeights()
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        android.util.Range $r1;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights>;

        return $r1;
    }

    public android.util.Range getSupportedWidthsFor(int)
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        int i0;
        android.util.Range $r1, $r7, $r10;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<android.util.Range: boolean contains(java.lang.Comparable)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not supported height: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r9);

        $r10 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths>;

        return $r10;
    }

    public android.util.Range getSupportedHeightsFor(int)
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        int i0;
        android.util.Range $r1, $r7, $r10;
        java.lang.Integer $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r1.<android.util.Range: boolean contains(java.lang.Comparable)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not supported width: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r7 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedWidths>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r9);

        $r10 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: android.util.Range mSupportedHeights>;

        return $r10;
    }

    public int getWidthAlignment()
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        androidx.camera.video.internal.encoder.VideoEncoderInfo $r1;
        int $i0;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: androidx.camera.video.internal.encoder.VideoEncoderInfo mVideoEncoderInfo>;

        $i0 = interfaceinvoke $r1.<androidx.camera.video.internal.encoder.VideoEncoderInfo: int getWidthAlignment()>();

        return $i0;
    }

    public int getHeightAlignment()
    {
        androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper r0;
        androidx.camera.video.internal.encoder.VideoEncoderInfo $r1;
        int $i0;

        r0 := @this: androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper;

        $r1 = r0.<androidx.camera.video.internal.workaround.VideoEncoderInfoWrapper: androidx.camera.video.internal.encoder.VideoEncoderInfo mVideoEncoderInfo>;

        $i0 = interfaceinvoke $r1.<androidx.camera.video.internal.encoder.VideoEncoderInfo: int getHeightAlignment()>();

        return $i0;
    }

    private static boolean isSizeSupported(androidx.camera.video.internal.encoder.VideoEncoderInfo, android.util.Size)
    {
        androidx.camera.video.internal.encoder.VideoEncoderInfo r0;
        android.util.Size r1;
        java.lang.Throwable r2, $r11;
        android.util.Range $r3, $r5, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: androidx.camera.video.internal.encoder.VideoEncoderInfo;

        r1 := @parameter1: android.util.Size;

        $r3 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedWidths()>();

        $i0 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = virtualinvoke $r3.<android.util.Range: boolean contains(java.lang.Comparable)>($r4);

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedHeights()>();

        $i1 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = virtualinvoke $r5.<android.util.Range: boolean contains(java.lang.Comparable)>($r6);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i2 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $r7 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedHeightsFor(int)>($i2);

        $i3 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z2 = virtualinvoke $r7.<android.util.Range: boolean contains(java.lang.Comparable)>($r8);

        if $z2 == 0 goto label3;

        $i4 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $r9 = interfaceinvoke r0.<androidx.camera.video.internal.encoder.VideoEncoderInfo: android.util.Range getSupportedWidthsFor(int)>($i4);

        $i5 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $z3 = virtualinvoke $r9.<android.util.Range: boolean contains(java.lang.Comparable)>($r10);

        if $z3 != 0 goto label4;

     label3:
        return 0;

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <androidx.camera.core.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("VideoEncoderInfoWrapper", "size is not supported", r2);

        return 0;

     label6:
        return 1;

        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
    }

