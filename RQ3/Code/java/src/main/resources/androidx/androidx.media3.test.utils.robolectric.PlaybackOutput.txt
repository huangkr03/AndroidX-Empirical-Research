androidx.media3.test.utils.robolectric.PlaybackOutput
<androidx.media3.test.utils.robolectric.PlaybackOutput: androidx.media3.test.utils.CapturingRenderersFactory capturingRenderersFactory>
<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas>
<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>
<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitlesFromDeprecatedTextOutput>
    private void <init>(androidx.media3.exoplayer.ExoPlayer, androidx.media3.test.utils.CapturingRenderersFactory)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        androidx.media3.exoplayer.ExoPlayer r1;
        androidx.media3.test.utils.CapturingRenderersFactory r2;
        java.util.ArrayList $r3, $r5, $r7;
        java.util.List $r4, $r6, $r8;
        androidx.media3.test.utils.robolectric.PlaybackOutput$1 $r9;

        r0 := @this: androidx.media3.test.utils.robolectric.PlaybackOutput;

        r1 := @parameter0: androidx.media3.exoplayer.ExoPlayer;

        r2 := @parameter1: androidx.media3.test.utils.CapturingRenderersFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: androidx.media3.test.utils.CapturingRenderersFactory capturingRenderersFactory> = r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r3);

        r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r5);

        r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r7);

        r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitlesFromDeprecatedTextOutput> = $r8;

        $r9 = new androidx.media3.test.utils.robolectric.PlaybackOutput$1;

        specialinvoke $r9.<androidx.media3.test.utils.robolectric.PlaybackOutput$1: void <init>(androidx.media3.test.utils.robolectric.PlaybackOutput)>(r0);

        interfaceinvoke r1.<androidx.media3.exoplayer.ExoPlayer: void addListener(androidx.media3.common.Player$Listener)>($r9);

        return;
    }

    public static androidx.media3.test.utils.robolectric.PlaybackOutput register(androidx.media3.exoplayer.ExoPlayer, androidx.media3.test.utils.CapturingRenderersFactory)
    {
        androidx.media3.exoplayer.ExoPlayer r0;
        androidx.media3.test.utils.CapturingRenderersFactory r1;
        androidx.media3.test.utils.robolectric.PlaybackOutput $r2;

        r0 := @parameter0: androidx.media3.exoplayer.ExoPlayer;

        r1 := @parameter1: androidx.media3.test.utils.CapturingRenderersFactory;

        $r2 = new androidx.media3.test.utils.robolectric.PlaybackOutput;

        specialinvoke $r2.<androidx.media3.test.utils.robolectric.PlaybackOutput: void <init>(androidx.media3.exoplayer.ExoPlayer,androidx.media3.test.utils.CapturingRenderersFactory)>(r0, r1);

        return $r2;
    }

    public void dump(androidx.media3.test.utils.Dumper)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        androidx.media3.test.utils.Dumper r1;
        androidx.media3.test.utils.CapturingRenderersFactory $r2;

        r0 := @this: androidx.media3.test.utils.robolectric.PlaybackOutput;

        r1 := @parameter0: androidx.media3.test.utils.Dumper;

        $r2 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: androidx.media3.test.utils.CapturingRenderersFactory capturingRenderersFactory>;

        virtualinvoke $r2.<androidx.media3.test.utils.CapturingRenderersFactory: void dump(androidx.media3.test.utils.Dumper)>(r1);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpMetadata(androidx.media3.test.utils.Dumper)>(r1);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpSubtitles(androidx.media3.test.utils.Dumper)>(r1);

        return;
    }

    private void dumpMetadata(androidx.media3.test.utils.Dumper)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        androidx.media3.test.utils.Dumper r1;
        androidx.media3.common.Metadata r2;
        java.util.List $r3, $r5, $r13;
        boolean $z0;
        int $i0, $i2, i3, i4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r18, $r19, $r20, $r21;
        java.lang.String $r11, $r22, $r24;
        java.lang.Object $r14;
        long $l1;
        java.lang.Long $r15;
        androidx.media3.common.Metadata$Entry $r23;

        r0 := @this: androidx.media3.test.utils.robolectric.PlaybackOutput;

        r1 := @parameter0: androidx.media3.test.utils.Dumper;

        $r3 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper startBlock(java.lang.String)>("MetadataOutput");

        i3 = 0;

     label2:
        $r5 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i3 >= $i0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Metadata[");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper startBlock(java.lang.String)>($r11);

        $r13 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (androidx.media3.common.Metadata) $r14;

        $l1 = r2.<androidx.media3.common.Metadata: long presentationTimeUs>;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>("presentationTimeUs", $r15);

        i4 = 0;

     label3:
        $i2 = virtualinvoke r2.<androidx.media3.common.Metadata: int length()>();

        if i4 >= $i2 goto label4;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entry[");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = virtualinvoke r2.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i4);

        $r24 = staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: java.lang.String getEntryAsString(androidx.media3.common.Metadata$Entry)>($r23);

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>($r22, $r24);

        i4 = i4 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper endBlock()>();

        i3 = i3 + 1;

        goto label2;

     label5:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper endBlock()>();

        return;
    }

    private static java.lang.String getEntryAsString(androidx.media3.common.Metadata$Entry)
    {
        androidx.media3.common.Metadata$Entry r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r1, $r3, $r5, $r6;
        java.lang.Class $r2, $r4;

        r0 := @parameter0: androidx.media3.common.Metadata$Entry;

        $z0 = r0 instanceof androidx.media3.extractor.metadata.emsg.EventMessage;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof androidx.media3.extractor.metadata.flac.PictureFrame;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof androidx.media3.extractor.metadata.vorbis.VorbisComment;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof androidx.media3.extractor.metadata.id3.Id3Frame;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof androidx.media3.extractor.metadata.mp4.MdtaMetadataEntry;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata;

        if $z5 != 0 goto label1;

        $z6 = r0 instanceof androidx.media3.extractor.metadata.mp4.SlowMotionData;

        if $z6 != 0 goto label1;

        $z7 = r0 instanceof androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry;

        if $z7 != 0 goto label1;

        $z8 = r0 instanceof androidx.media3.extractor.metadata.dvbsi.AppInfoTable;

        if $z8 != 0 goto label1;

        $z9 = r0 instanceof androidx.media3.extractor.metadata.icy.IcyHeaders;

        if $z9 != 0 goto label1;

        $z10 = r0 instanceof androidx.media3.extractor.metadata.icy.IcyInfo;

        if $z10 != 0 goto label1;

        $z11 = r0 instanceof androidx.media3.extractor.metadata.scte35.SpliceCommand;

        if $z11 != 0 goto label1;

        $r1 = "androidx.media3.exoplayer.hls.HlsTrackMetadataEntry";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getCanonicalName()>();

        $z12 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z12 == 0 goto label2;

     label1:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label2:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r5;
    }

    private void dumpSubtitles(androidx.media3.test.utils.Dumper)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        androidx.media3.test.utils.Dumper r1;
        com.google.common.collect.ImmutableList r2, $r60;
        androidx.media3.common.text.Cue r3;
        java.util.List $r4, $r5, $r6, $r8, $r16, $r21, $r24;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r27, $r28, $r29, $r30, $r63, $r64, $r65;
        java.lang.String $r14, $r31, $r66;
        java.lang.Object $r17, $r22, $r25, $r33;
        androidx.media3.common.text.CueGroup $r18, $r23;
        long $l3, $l4;
        java.lang.Long $r19;
        java.lang.CharSequence $r34;
        android.text.Layout$Alignment $r35;
        android.graphics.Bitmap $r36;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Float $r37, $r38, $r43, $r44, $r47, $r48, $r49, $r50, $r53, $r54;
        java.lang.Integer $r39, $r40, $r41, $r42, $r45, $r46, $r51, $r52, $r55, $r56, $r58;
        java.lang.IllegalStateException $r62, $r67;

        r0 := @this: androidx.media3.test.utils.robolectric.PlaybackOutput;

        r1 := @parameter0: androidx.media3.test.utils.Dumper;

        $r4 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitlesFromDeprecatedTextOutput>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r67 = new java.lang.IllegalStateException;

        specialinvoke $r67.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected subtitles to be of equal length from both implementations of onCues method.");

        throw $r67;

     label1:
        $r6 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper startBlock(java.lang.String)>("TextOutput");

        i11 = 0;

     label3:
        $r8 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i11 >= $i2 goto label9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtitle[");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper startBlock(java.lang.String)>($r14);

        $r16 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i11);

        $r18 = (androidx.media3.common.text.CueGroup) $r17;

        $l3 = $r18.<androidx.media3.common.text.CueGroup: long presentationTimeUs>;

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l3);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>("presentationTimeUs", $r19);

        $r21 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i11);

        $r23 = (androidx.media3.common.text.CueGroup) $r22;

        r2 = $r23.<androidx.media3.common.text.CueGroup: com.google.common.collect.ImmutableList cues>;

        $r24 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitlesFromDeprecatedTextOutput>;

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i11);

        $z1 = virtualinvoke r2.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r25);

        if $z1 != 0 goto label4;

        $r62 = new java.lang.IllegalStateException;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected subtitle to be equal from both implementations of onCues method for index ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r66);

        throw $r62;

     label4:
        $z2 = virtualinvoke r2.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z2 == 0 goto label5;

        $r60 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>("Cues", $r60);

     label5:
        i12 = 0;

     label6:
        $i13 = virtualinvoke r2.<com.google.common.collect.ImmutableList: int size()>();

        if i12 >= $i13 goto label8;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cue[");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper startBlock(java.lang.String)>($r31);

        $r33 = virtualinvoke r2.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i12);

        r3 = (androidx.media3.common.text.Cue) $r33;

        $r34 = r3.<androidx.media3.common.text.Cue: java.lang.CharSequence text>;

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "text", $r34, null);

        $r35 = r3.<androidx.media3.common.text.Cue: android.text.Layout$Alignment textAlignment>;

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "textAlignment", $r35, null);

        $r36 = r3.<androidx.media3.common.text.Cue: android.graphics.Bitmap bitmap>;

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpBitmap(androidx.media3.test.utils.Dumper,android.graphics.Bitmap)>(r1, $r36);

        $f0 = r3.<androidx.media3.common.text.Cue: float line>;

        $r37 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r38 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-3.4028235E38F);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "line", $r37, $r38);

        $i5 = r3.<androidx.media3.common.text.Cue: int lineType>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "lineType", $r39, $r40);

        $i6 = r3.<androidx.media3.common.text.Cue: int lineAnchor>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "lineAnchor", $r41, $r42);

        $f1 = r3.<androidx.media3.common.text.Cue: float position>;

        $r43 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r44 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-3.4028235E38F);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "position", $r43, $r44);

        $i7 = r3.<androidx.media3.common.text.Cue: int positionAnchor>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "positionAnchor", $r45, $r46);

        $f2 = r3.<androidx.media3.common.text.Cue: float size>;

        $r47 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        $r48 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-3.4028235E38F);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "size", $r47, $r48);

        $f3 = r3.<androidx.media3.common.text.Cue: float bitmapHeight>;

        $r49 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        $r50 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-3.4028235E38F);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "bitmapHeight", $r49, $r50);

        $z3 = r3.<androidx.media3.common.text.Cue: boolean windowColorSet>;

        if $z3 == 0 goto label7;

        $i10 = r3.<androidx.media3.common.text.Cue: int windowColor>;

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>("cue.windowColor", $r58);

     label7:
        $i8 = r3.<androidx.media3.common.text.Cue: int textSizeType>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "textSizeType", $r51, $r52);

        $f4 = r3.<androidx.media3.common.text.Cue: float textSize>;

        $r53 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        $r54 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(-3.4028235E38F);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "textSize", $r53, $r54);

        $i9 = r3.<androidx.media3.common.text.Cue: int verticalType>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        staticinvoke <androidx.media3.test.utils.robolectric.PlaybackOutput: void dumpIfNotEqual(androidx.media3.test.utils.Dumper,java.lang.String,java.lang.Object,java.lang.Object)>(r1, "verticalType", $r55, $r56);

        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper endBlock()>();

        i12 = i12 + 1;

        goto label6;

     label8:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper endBlock()>();

        i11 = i11 + 1;

        goto label3;

     label9:
        virtualinvoke r1.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper endBlock()>();

        return;
    }

    private static void dumpIfNotEqual(androidx.media3.test.utils.Dumper, java.lang.String, java.lang.Object, java.lang.Object)
    {
        androidx.media3.test.utils.Dumper r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @parameter0: androidx.media3.test.utils.Dumper;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,java.lang.Object)>(r1, r2);

     label1:
        return;
    }

    private static void dumpBitmap(androidx.media3.test.utils.Dumper, android.graphics.Bitmap)
    {
        androidx.media3.test.utils.Dumper r0;
        android.graphics.Bitmap r1;
        byte[] r2;
        int $i0;
        java.nio.ByteBuffer $r3;

        r0 := @parameter0: androidx.media3.test.utils.Dumper;

        r1 := @parameter1: android.graphics.Bitmap;

        if r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<android.graphics.Bitmap: int getByteCount()>();

        r2 = newarray (byte)[$i0];

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        virtualinvoke r1.<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>($r3);

        virtualinvoke r0.<androidx.media3.test.utils.Dumper: androidx.media3.test.utils.Dumper add(java.lang.String,byte[])>("bitmap", r2);

        return;
    }

    static java.util.List access$000(androidx.media3.test.utils.robolectric.PlaybackOutput)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.media3.test.utils.robolectric.PlaybackOutput;

        $r1 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List metadatas>;

        return $r1;
    }

    static java.util.List access$100(androidx.media3.test.utils.robolectric.PlaybackOutput)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.media3.test.utils.robolectric.PlaybackOutput;

        $r1 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitlesFromDeprecatedTextOutput>;

        return $r1;
    }

    static java.util.List access$200(androidx.media3.test.utils.robolectric.PlaybackOutput)
    {
        androidx.media3.test.utils.robolectric.PlaybackOutput r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.media3.test.utils.robolectric.PlaybackOutput;

        $r1 = r0.<androidx.media3.test.utils.robolectric.PlaybackOutput: java.util.List subtitles>;

        return $r1;
    }

