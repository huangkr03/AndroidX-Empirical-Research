androidx.mediarouter.media.MediaRoute2Provider
<androidx.mediarouter.media.MediaRoute2Provider: java.lang.String TAG>
<androidx.mediarouter.media.MediaRoute2Provider: boolean DEBUG>
<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>
<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRoute2Provider$Callback mCallback>
<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>
<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$RouteCallback mRouteCallback>
<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$TransferCallback mTransferCallback>
<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$ControllerCallback mControllerCallback>
<androidx.mediarouter.media.MediaRoute2Provider: android.os.Handler mHandler>
<androidx.mediarouter.media.MediaRoute2Provider: java.util.concurrent.Executor mHandlerExecutor>
<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes>
<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap>
    void <init>(android.content.Context, androidx.mediarouter.media.MediaRoute2Provider$Callback)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        android.content.Context r1;
        androidx.mediarouter.media.MediaRoute2Provider$Callback r2;
        android.util.ArrayMap $r3, $r8;
        androidx.mediarouter.media.MediaRoute2Provider$RouteCallback $r4;
        androidx.mediarouter.media.MediaRoute2Provider$TransferCallback $r5;
        androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback $r6;
        java.util.ArrayList $r7;
        android.media.MediaRouter2 $r9;
        android.os.Handler $r10, $r12;
        android.os.Looper $r11;
        java.util.concurrent.Executor $r14;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.mediarouter.media.MediaRoute2Provider$Callback;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider: void <init>(android.content.Context)>(r1);

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap> = $r3;

        $r4 = new androidx.mediarouter.media.MediaRoute2Provider$RouteCallback;

        specialinvoke $r4.<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: void <init>(androidx.mediarouter.media.MediaRoute2Provider)>(r0);

        r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$RouteCallback mRouteCallback> = $r4;

        $r5 = new androidx.mediarouter.media.MediaRoute2Provider$TransferCallback;

        specialinvoke $r5.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: void <init>(androidx.mediarouter.media.MediaRoute2Provider)>(r0);

        r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$TransferCallback mTransferCallback> = $r5;

        $r6 = new androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback;

        specialinvoke $r6.<androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback: void <init>(androidx.mediarouter.media.MediaRoute2Provider)>(r0);

        r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$ControllerCallback mControllerCallback> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap> = $r8;

        $r9 = staticinvoke <android.media.MediaRouter2: android.media.MediaRouter2 getInstance(android.content.Context)>(r1);

        r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2> = $r9;

        r0.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRoute2Provider$Callback mCallback> = r2;

        $r10 = new android.os.Handler;

        $r11 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r10.<android.os.Handler: void <init>(android.os.Looper)>($r11);

        r0.<androidx.mediarouter.media.MediaRoute2Provider: android.os.Handler mHandler> = $r10;

        $r12 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.os.Handler mHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r12);

        $r14 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>($r12) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_VIRTUAL" <android.os.Handler: boolean post(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.concurrent.Executor mHandlerExecutor> = $r14;

        return;
    }

    public void onDiscoveryRequestChanged(androidx.mediarouter.media.MediaRouteDiscoveryRequest)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        int $i0;
        android.media.MediaRouter2$RouteCallback $r1, $r9;
        android.media.MediaRouter2 $r2, $r4, $r6, $r7, $r13, $r16;
        android.media.MediaRouter2$TransferCallback $r3, $r11;
        android.media.MediaRouter2$ControllerCallback $r5, $r14;
        boolean $z0;
        java.util.concurrent.Executor $r8, $r12, $r15;
        android.media.RouteDiscoveryPreference $r10;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest r17, r18;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r17 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $i0 = staticinvoke <androidx.mediarouter.media.MediaRouter: int getGlobalCallbackCount()>();

        if $i0 <= 0 goto label1;

        $z0 = staticinvoke <androidx.mediarouter.media.MediaRouter: boolean isTransferToLocalEnabled()>();

        r18 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRouteDiscoveryRequest updateDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest,boolean)>(r17, $z0);

        $r7 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.concurrent.Executor mHandlerExecutor>;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$RouteCallback mRouteCallback>;

        $r10 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: android.media.RouteDiscoveryPreference toDiscoveryPreference(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>(r18);

        virtualinvoke $r7.<android.media.MediaRouter2: void registerRouteCallback(java.util.concurrent.Executor,android.media.MediaRouter2$RouteCallback,android.media.RouteDiscoveryPreference)>($r8, $r9, $r10);

        $r13 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r12 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.concurrent.Executor mHandlerExecutor>;

        $r11 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$TransferCallback mTransferCallback>;

        virtualinvoke $r13.<android.media.MediaRouter2: void registerTransferCallback(java.util.concurrent.Executor,android.media.MediaRouter2$TransferCallback)>($r12, $r11);

        $r16 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r15 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.concurrent.Executor mHandlerExecutor>;

        $r14 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$ControllerCallback mControllerCallback>;

        virtualinvoke $r16.<android.media.MediaRouter2: void registerControllerCallback(java.util.concurrent.Executor,android.media.MediaRouter2$ControllerCallback)>($r15, $r14);

        goto label2;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$RouteCallback mRouteCallback>;

        virtualinvoke $r2.<android.media.MediaRouter2: void unregisterRouteCallback(android.media.MediaRouter2$RouteCallback)>($r1);

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$TransferCallback mTransferCallback>;

        virtualinvoke $r4.<android.media.MediaRouter2: void unregisterTransferCallback(android.media.MediaRouter2$TransferCallback)>($r3);

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2$ControllerCallback mControllerCallback>;

        virtualinvoke $r6.<android.media.MediaRouter2: void unregisterControllerCallback(android.media.MediaRouter2$ControllerCallback)>($r5);

     label2:
        return;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.lang.String r1, r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r4;

        $r5 = new androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        specialinvoke $r5.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: void <init>(androidx.mediarouter.media.MediaRoute2Provider,java.lang.String,androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)>(r0, r2, null);

        return $r5;
    }

    public androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.lang.String r1, r2, r3, $r15, $r18;
        java.util.Iterator r4;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r5;
        java.util.Map $r6, $r8;
        java.lang.Object $r7, $r17;
        java.util.Collection $r9;
        boolean $z0, $z1;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController $r16, $r19;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.String) $r7;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r4 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController) $r17;

        $r18 = virtualinvoke r5.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.String getGroupRouteId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, $r18);

        if $z1 == 0 goto label2;

        $r19 = new androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        specialinvoke $r19.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: void <init>(androidx.mediarouter.media.MediaRoute2Provider,java.lang.String,androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)>(r0, r3, r5);

        return $r19;

     label2:
        goto label1;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find the matching GroupRouteController. routeId=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", routeGroupId=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r15);

        $r16 = new androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        specialinvoke $r16.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: void <init>(androidx.mediarouter.media.MediaRoute2Provider,java.lang.String,androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)>(r0, r3, null);

        return $r16;
    }

    public androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController onCreateDynamicGroupRouteController(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.lang.String r1, $r9;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r4;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r4 = (androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController) $r8;

        $r9 = r4.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.String mInitialMemberRouteId>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r9);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void transferTo(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.lang.String r1, $r7;
        android.media.MediaRoute2Info r2;
        android.media.MediaRouter2 $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRoute2Info getRouteById(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transferTo: Specified route not found. routeId=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r7);

        return;

     label1:
        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        virtualinvoke $r3.<android.media.MediaRouter2: void transferTo(android.media.MediaRoute2Info)>(r2);

        return;
    }

    protected void refreshRoutes()
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.util.ArrayList r1, $r4, $r11, r33;
        android.util.ArraySet r2, $r5;
        androidx.mediarouter.media.MediaRouteDescriptor r3;
        android.media.MediaRouter2 $r6;
        java.util.List $r7, $r8, $r10, $r12;
        boolean $z0, $z1, $z3, $z4, $z7, $z8;
        java.util.Map $r9, $r23;
        androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder $r13, $r14, $r15;
        java.lang.Object $r16, $r17, $r27;
        java.lang.StringBuilder $r18, $r19, $r20;
        java.lang.String $r21, $r22, $r24, $r25;
        java.util.Iterator r28, r30, r34;
        android.media.MediaRoute2Info r29, r31, r35;
        android.os.Bundle r32;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r36;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r2 = $r5;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r7 = virtualinvoke $r6.<android.media.MediaRouter2: java.util.List getRoutes()>();

        r28 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label03;

        $r27 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.media.MediaRoute2Info) $r27;

        if r29 == null goto label01;

        $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r29);

        if $z3 != 0 goto label01;

        $z4 = virtualinvoke r29.<android.media.MediaRoute2Info: boolean isSystemRoute()>();

        if $z4 == 0 goto label02;

        goto label01;

     label02:
        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r29);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r29);

        goto label01;

     label03:
        $r8 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes>;

        $z0 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label04;

        return;

     label04:
        r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes> = r1;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        $r10 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes>;

        r30 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z8 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label08;

        $r17 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (android.media.MediaRoute2Info) $r17;

        r32 = virtualinvoke r31.<android.media.MediaRoute2Info: android.os.Bundle getExtras()>();

        if r32 == null goto label06;

        $r22 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.mediarouter.media.KEY_ORIGINAL_ROUTE_ID");

        if $r22 != null goto label07;

     label06:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find the original route Id. route=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r21);

        goto label05;

     label07:
        $r23 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mRouteIdToOriginalRouteIdMap>;

        $r24 = virtualinvoke r31.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $r25 = virtualinvoke r32.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.mediarouter.media.KEY_ORIGINAL_ROUTE_ID");

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        goto label05;

     label08:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r33 = $r11;

        $r12 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes>;

        r34 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r16 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (android.media.MediaRoute2Info) $r16;

        r3 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: androidx.mediarouter.media.MediaRouteDescriptor toMediaRouteDescriptor(android.media.MediaRoute2Info)>(r35);

        if r35 == null goto label10;

        interfaceinvoke r33.<java.util.List: boolean add(java.lang.Object)>(r3);

     label10:
        goto label09;

     label11:
        $r13 = new androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder;

        specialinvoke $r13.<androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder: void <init>()>();

        $r14 = virtualinvoke $r13.<androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder: androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder setSupportsDynamicGroupRoute(boolean)>(1);

        $r15 = virtualinvoke $r14.<androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder: androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder addRoutes(java.util.Collection)>(r33);

        r36 = virtualinvoke $r15.<androidx.mediarouter.media.MediaRouteProviderDescriptor$Builder: androidx.mediarouter.media.MediaRouteProviderDescriptor build()>();

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider: void setDescriptor(androidx.mediarouter.media.MediaRouteProviderDescriptor)>(r36);

        return;
    }

    android.media.MediaRoute2Info getRouteById(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.media.MediaRoute2Info r3;
        java.util.List $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.List mRoutes>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.media.MediaRoute2Info) $r5;

        $r6 = virtualinvoke r3.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r6, r1);

        if $z1 == 0 goto label3;

        return r3;

     label3:
        goto label2;

     label4:
        return null;
    }

    static android.os.Messenger getMessengerFromRoutingController(android.media.MediaRouter2$RoutingController)
    {
        android.media.MediaRouter2$RoutingController r0;
        android.os.Bundle r1;
        android.os.Parcelable $r2;
        android.os.Messenger $r3;

        r0 := @parameter0: android.media.MediaRouter2$RoutingController;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<android.media.MediaRouter2$RoutingController: android.os.Bundle getControlHints()>();

        if r1 != null goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("androidx.mediarouter.media.KEY_MESSENGER");

        $r3 = (android.os.Messenger) $r2;

     label3:
        return $r3;
    }

    static java.lang.String getSessionIdForRouteController(androidx.mediarouter.media.MediaRouteProvider$RouteController)
    {
        androidx.mediarouter.media.MediaRouteProvider$RouteController r0;
        android.media.MediaRouter2$RoutingController r1;
        boolean $z0;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController $r2;
        java.lang.String $r3;

        r0 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        $z0 = r0 instanceof androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = (androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController) r0;

        r1 = $r2.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if r1 != null goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

     label3:
        return $r3;
    }

    void setDynamicRouteDescriptors(android.media.MediaRouter2$RoutingController)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        android.media.MediaRouter2$RoutingController r1;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r2;
        java.util.List r3, r4, r9, $r19, $r20, $r35, r52, r53;
        androidx.mediarouter.media.MediaRouteDescriptor r5, r11, r47;
        android.os.Bundle r6, r50;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r7;
        java.util.ArrayList r8, $r21;
        java.util.Iterator r10;
        java.lang.String r12, $r29, $r41, $r45, r48, r49;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder r13, $r23, $r24, $r25, $r26;
        java.util.Map $r14;
        java.lang.Object $r15, $r16, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7;
        android.media.MediaRoute2Info $r17;
        android.content.Context $r18;
        int $i0, $i2, $i3, $i4;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor $r27;
        androidx.mediarouter.media.MediaRouteDescriptor$Builder $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r37;
        java.lang.StringBuilder $r38, $r39, $r40, $r42, $r43, $r44;
        java.lang.Throwable $r46, r51;
        byte $b8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        $r14 = r0.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController) $r15;

        if r2 != null goto label01;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDynamicRouteDescriptors: No matching routeController found. routingController=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r45);

        return;

     label01:
        r3 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: java.util.List getSelectedRoutes()>();

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDynamicRouteDescriptors: No selected routes. This may happen when the selected routes become invalid.routingController=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r41);

        return;

     label02:
        r4 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.util.List getRouteIds(java.util.List)>(r3);

        $r16 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (android.media.MediaRoute2Info) $r16;

        r5 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: androidx.mediarouter.media.MediaRouteDescriptor toMediaRouteDescriptor(android.media.MediaRoute2Info)>($r17);

        r47 = null;

        r6 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: android.os.Bundle getControlHints()>();

        $r18 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider: android.content.Context getContext()>();

        $i0 = <androidx.mediarouter.R$string: int mr_dialog_default_group_name>;

        r48 = virtualinvoke $r18.<android.content.Context: java.lang.String getString(int)>($i0);

     label03:
        if r6 == null goto label05;

        r49 = virtualinvoke r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.mediarouter.media.KEY_SESSION_NAME");

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r49);

        if $z7 != 0 goto label04;

        r48 = r49;

     label04:
        r50 = virtualinvoke r6.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("androidx.mediarouter.media.KEY_GROUP_ROUTE");

        if r50 == null goto label05;

        r47 = staticinvoke <androidx.mediarouter.media.MediaRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor fromBundle(android.os.Bundle)>(r50);

     label05:
        goto label07;

     label06:
        $r46 := @caughtexception;

        r51 = $r46;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Provider", "Exception while unparceling control hints.", r51);

     label07:
        if r47 != null goto label08;

        $r28 = new androidx.mediarouter.media.MediaRouteDescriptor$Builder;

        $r29 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

        specialinvoke $r28.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: void <init>(java.lang.String,java.lang.String)>($r29, r48);

        $r30 = virtualinvoke $r28.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setConnectionState(int)>(2);

        $r31 = virtualinvoke $r30.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setPlaybackType(int)>(1);

        $i2 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: int getVolume()>();

        $r32 = virtualinvoke $r31.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolume(int)>($i2);

        $i3 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: int getVolumeMax()>();

        $r33 = virtualinvoke $r32.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeMax(int)>($i3);

        $i4 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: int getVolumeHandling()>();

        $r34 = virtualinvoke $r33.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder setVolumeHandling(int)>($i4);

        $r35 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getControlFilters()>();

        $r36 = virtualinvoke $r34.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder addControlFilters(java.util.Collection)>($r35);

        $r37 = virtualinvoke $r36.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor$Builder addGroupMemberIds(java.util.Collection)>(r4);

        r47 = virtualinvoke $r37.<androidx.mediarouter.media.MediaRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteDescriptor build()>();

     label08:
        $r19 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: java.util.List getSelectableRoutes()>();

        r52 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.util.List getRouteIds(java.util.List)>($r19);

        $r20 = virtualinvoke r1.<android.media.MediaRouter2$RoutingController: java.util.List getDeselectableRoutes()>();

        r53 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: java.util.List getRouteIds(java.util.List)>($r20);

        r7 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRouteProviderDescriptor getDescriptor()>();

        if r7 != null goto label09;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "setDynamicRouteDescriptors: providerDescriptor is not set.");

        return;

     label09:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r8 = $r21;

        r9 = virtualinvoke r7.<androidx.mediarouter.media.MediaRouteProviderDescriptor: java.util.List getRoutes()>();

        $z1 = interfaceinvoke r9.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label13;

        r10 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r22 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (androidx.mediarouter.media.MediaRouteDescriptor) $r22;

        r12 = virtualinvoke r11.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $r23 = new androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder;

        specialinvoke $r23.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: void <init>(androidx.mediarouter.media.MediaRouteDescriptor)>(r11);

        $z3 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r12);

        if $z3 == 0 goto label11;

        $b8 = 3;

        goto label12;

     label11:
        $b8 = 1;

     label12:
        $r24 = virtualinvoke $r23.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setSelectionState(int)>($b8);

        $z4 = interfaceinvoke r52.<java.util.List: boolean contains(java.lang.Object)>(r12);

        $r25 = virtualinvoke $r24.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsGroupable(boolean)>($z4);

        $z5 = interfaceinvoke r53.<java.util.List: boolean contains(java.lang.Object)>(r12);

        $r26 = virtualinvoke $r25.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsUnselectable(boolean)>($z5);

        r13 = virtualinvoke $r26.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder setIsTransferable(boolean)>(1);

        $r27 = virtualinvoke r13.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor$Builder: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor build()>();

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label10;

     label13:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void setGroupRouteDescriptor(androidx.mediarouter.media.MediaRouteDescriptor)>(r47);

        virtualinvoke r2.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void notifyDynamicRoutesChanged(androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>(r47, r8);

        return;

        catch java.lang.Exception from label03 to label05 with label06;
    }

    private androidx.mediarouter.media.MediaRouteDiscoveryRequest updateDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest, boolean)
    {
        androidx.mediarouter.media.MediaRoute2Provider r0;
        boolean z0, $z2, $z4;
        java.util.List r1;
        androidx.mediarouter.media.MediaRouteSelector r2, $r3, $r5;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r4, r6, $r9;
        androidx.mediarouter.media.MediaRouteSelector$Builder $r7, $r8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider;

        r6 := @parameter0: androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        z0 := @parameter1: boolean;

        if r6 != null goto label1;

        $r4 = new androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $r5 = <androidx.mediarouter.media.MediaRouteSelector: androidx.mediarouter.media.MediaRouteSelector EMPTY>;

        specialinvoke $r4.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void <init>(androidx.mediarouter.media.MediaRouteSelector,boolean)>($r5, 0);

        r6 = $r4;

     label1:
        $r3 = virtualinvoke r6.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: androidx.mediarouter.media.MediaRouteSelector getSelector()>();

        r1 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteSelector: java.util.List getControlCategories()>();

        if z0 == 0 goto label2;

        $z2 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("android.media.intent.category.LIVE_AUDIO");

        if $z2 != 0 goto label3;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("android.media.intent.category.LIVE_AUDIO");

        goto label3;

     label2:
        interfaceinvoke r1.<java.util.List: boolean remove(java.lang.Object)>("android.media.intent.category.LIVE_AUDIO");

     label3:
        $r7 = new androidx.mediarouter.media.MediaRouteSelector$Builder;

        specialinvoke $r7.<androidx.mediarouter.media.MediaRouteSelector$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<androidx.mediarouter.media.MediaRouteSelector$Builder: androidx.mediarouter.media.MediaRouteSelector$Builder addControlCategories(java.util.Collection)>(r1);

        r2 = virtualinvoke $r8.<androidx.mediarouter.media.MediaRouteSelector$Builder: androidx.mediarouter.media.MediaRouteSelector build()>();

        $r9 = new androidx.mediarouter.media.MediaRouteDiscoveryRequest;

        $z4 = virtualinvoke r6.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: boolean isActiveScan()>();

        specialinvoke $r9.<androidx.mediarouter.media.MediaRouteDiscoveryRequest: void <init>(androidx.mediarouter.media.MediaRouteSelector,boolean)>(r2, $z4);

        return $r9;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MR2Provider", 3);

        <androidx.mediarouter.media.MediaRoute2Provider: boolean DEBUG> = $z0;

        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$Callback
    void <init>()
    {
        androidx.mediarouter.media.MediaRoute2Provider$Callback r0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onSelectRoute(java.lang.String,int)>
<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onSelectFallbackRoute(int)>
<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onReleaseController(androidx.mediarouter.media.MediaRouteProvider$RouteController)>
androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback
<androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider)
    {
        androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback r0;
        androidx.mediarouter.media.MediaRoute2Provider r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback: androidx.mediarouter.media.MediaRoute2Provider this$0> = r1;

        specialinvoke r0.<android.media.MediaRouter2$ControllerCallback: void <init>()>();

        return;
    }

    public void onControllerUpdated(android.media.MediaRouter2$RoutingController)
    {
        androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback r0;
        android.media.MediaRouter2$RoutingController r1;
        androidx.mediarouter.media.MediaRoute2Provider $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$ControllerCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRoute2Provider: void setDynamicRouteDescriptors(android.media.MediaRouter2$RoutingController)>(r1);

        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController this$1>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler r0;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r1;
        android.os.Looper $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController this$1> = r1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler r0;
        android.os.Message r1;
        int i0, i1, i2;
        java.lang.Object r2, $r8;
        android.os.Bundle r3, $r11, $r12;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r4;
        java.lang.String r5, $r13;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController $r6, $r9;
        android.util.SparseArray $r7, $r10;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        i1 = r1.<android.os.Message: int arg1>;

        i2 = r1.<android.os.Message: int arg2>;

        r2 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = virtualinvoke r1.<android.os.Message: android.os.Bundle peekData()>();

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController this$1>;

        $r7 = $r6.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.util.SparseArray mPendingCallbacks>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r4 = (androidx.mediarouter.media.MediaRouter$ControlRequestCallback) $r8;

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "Pending callback not found for control request.");

        return;

     label1:
        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController this$1>;

        $r10 = $r9.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i1);

        lookupswitch(i0)
        {
            case 3: goto label2;
            case 4: goto label3;
            default: goto label6;
        };

     label2:
        $r12 = (android.os.Bundle) r2;

        virtualinvoke r4.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onResult(android.os.Bundle)>($r12);

        goto label6;

     label3:
        if r3 != null goto label4;

        $r13 = null;

        goto label5;

     label4:
        $r13 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("error");

     label5:
        r5 = $r13;

        $r11 = (android.os.Bundle) r2;

        virtualinvoke r4.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void onError(java.lang.String,android.os.Bundle)>(r5, $r11);

     label6:
        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: long OPTIMISTIC_VOLUME_TIMEOUT_MS>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.String mInitialMemberRouteId>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mReceiveMessenger>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.util.SparseArray mPendingCallbacks>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Handler mControllerHandler>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.util.concurrent.atomic.AtomicInteger mNextRequestId>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.Runnable mClearOptimisticVolumeRunnable>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mGroupRouteDescriptor>
<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider, android.media.MediaRouter2$RoutingController, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        androidx.mediarouter.media.MediaRoute2Provider r1;
        android.media.MediaRouter2$RoutingController r2;
        java.lang.String r3;
        android.util.SparseArray $r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.lang.Runnable $r6;
        android.os.Messenger $r7, $r8, $r13;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler $r9;
        android.os.Handler $r10;
        android.os.Looper $r11;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider;

        r2 := @parameter1: android.media.MediaRouter2$RoutingController;

        r3 := @parameter2: java.lang.String;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void <init>()>();

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.util.SparseArray mPendingCallbacks> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.util.concurrent.atomic.AtomicInteger mNextRequestId> = $r5;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void lambda$new$0()>, methodtype: void __METHODTYPE__());

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.Runnable mClearOptimisticVolumeRunnable> = $r6;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume> = -1;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController> = r2;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.String mInitialMemberRouteId> = r3;

        $r7 = staticinvoke <androidx.mediarouter.media.MediaRoute2Provider: android.os.Messenger getMessengerFromRoutingController(android.media.MediaRouter2$RoutingController)>(r2);

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger> = $r7;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        if $r8 != null goto label1;

        $r13 = null;

        goto label2;

     label1:
        $r13 = new android.os.Messenger;

        $r9 = new androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler;

        specialinvoke $r9.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController$ReceiveHandler: void <init>(androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)>(r0);

        specialinvoke $r13.<android.os.Messenger: void <init>(android.os.Handler)>($r9);

     label2:
        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mReceiveMessenger> = $r13;

        $r10 = new android.os.Handler;

        $r11 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r10.<android.os.Handler: void <init>(android.os.Looper)>($r11);

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Handler mControllerHandler> = $r10;

        return;
    }

    public java.lang.String getGroupRouteId()
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        androidx.mediarouter.media.MediaRouteDescriptor $r1, $r3;
        android.media.MediaRouter2$RoutingController $r2;
        java.lang.String $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mGroupRouteDescriptor>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mGroupRouteDescriptor>;

        $r4 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $r4 = virtualinvoke $r2.<android.media.MediaRouter2$RoutingController: java.lang.String getId()>();

     label2:
        return $r4;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        int i0;
        android.media.MediaRouter2$RoutingController $r1, $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        virtualinvoke $r2.<android.media.MediaRouter2$RoutingController: void setVolume(int)>(i0);

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume> = i0;

        specialinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void scheduleClearOptimisticVolume()>();

        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.media.MediaRouter2$RoutingController $r1, $r2, $r3, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if $r1 != null goto label1;

        return;

     label1:
        $i2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume>;

        if $i2 >= 0 goto label2;

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $i8 = virtualinvoke $r4.<android.media.MediaRouter2$RoutingController: int getVolume()>();

        goto label3;

     label2:
        $i8 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume>;

     label3:
        i1 = $i8;

        $i3 = i1 + i0;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $i4 = virtualinvoke $r2.<android.media.MediaRouter2$RoutingController: int getVolumeMax()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume> = $i6;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $i7 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume>;

        virtualinvoke $r3.<android.media.MediaRouter2$RoutingController: void setVolume(int)>($i7);

        specialinvoke r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void scheduleClearOptimisticVolume()>();

        return;
    }

    public boolean onControlRequest(android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        int i0;
        android.os.Message r3;
        android.media.MediaRouter2$RoutingController $r4, $r5;
        boolean $z0;
        android.os.Messenger $r6, $r8, $r9;
        java.util.concurrent.atomic.AtomicInteger $r7;
        android.util.SparseArray $r10;
        java.lang.Throwable $r11, $r12, r13, r14;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $z0 = virtualinvoke $r5.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        if $r6 != null goto label2;

     label1:
        return 0;

     label2:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = 9;

        r3.<android.os.Message: int arg1> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r1;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mReceiveMessenger>;

        r3.<android.os.Message: android.os.Messenger replyTo> = $r8;

     label3:
        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        virtualinvoke $r9.<android.os.Messenger: void send(android.os.Message)>(r3);

        if r2 == null goto label4;

        $r10 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.util.SparseArray mPendingCallbacks>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label4:
        return 1;

     label5:
        $r12 := @caughtexception;

        r13 = $r12;

        goto label7;

     label6:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Provider", "Could not send control request to service.", r14);

     label7:
        return 0;

        catch android.os.DeadObjectException from label3 to label4 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public void onRelease()
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        android.media.MediaRouter2$RoutingController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        virtualinvoke $r1.<android.media.MediaRouter2$RoutingController: void release()>();

        return;
    }

    public void onUpdateMemberRoutes(java.util.List)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.util.List r1;
        java.lang.String r2, $r11;
        android.media.MediaRoute2Info r3;
        boolean $z0;
        java.lang.Object $r4;
        androidx.mediarouter.media.MediaRoute2Provider $r5, $r6;
        android.media.MediaRouter2 $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "onUpdateMemberRoutes: Ignoring null or empty routeIds.");

        return;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (java.lang.String) $r4;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        r3 = virtualinvoke $r5.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRoute2Info getRouteById(java.lang.String)>(r2);

        if r3 != null goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUpdateMemberRoutes: Specified route not found. routeId=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r11);

        return;

     label3:
        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r7 = $r6.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        virtualinvoke $r7.<android.media.MediaRouter2: void transferTo(android.media.MediaRoute2Info)>(r3);

        return;
    }

    public void onAddMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.lang.String r1, $r8;
        android.media.MediaRoute2Info r2;
        boolean $z0;
        androidx.mediarouter.media.MediaRoute2Provider $r3;
        android.media.MediaRouter2$RoutingController $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "onAddMemberRoute: Ignoring null or empty routeId.");

        return;

     label2:
        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        r2 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRoute2Info getRouteById(java.lang.String)>(r1);

        if r2 != null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onAddMemberRoute: Specified route not found. routeId=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r8);

        return;

     label3:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        virtualinvoke $r4.<android.media.MediaRouter2$RoutingController: void selectRoute(android.media.MediaRoute2Info)>(r2);

        return;
    }

    public void onRemoveMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.lang.String r1, $r8;
        android.media.MediaRoute2Info r2;
        boolean $z0;
        androidx.mediarouter.media.MediaRoute2Provider $r3;
        android.media.MediaRouter2$RoutingController $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "onRemoveMemberRoute: Ignoring null or empty routeId.");

        return;

     label2:
        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        r2 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRoute2Info getRouteById(java.lang.String)>(r1);

        if r2 != null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRemoveMemberRoute: Specified route not found. routeId=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r8);

        return;

     label3:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        virtualinvoke $r4.<android.media.MediaRouter2$RoutingController: void deselectRoute(android.media.MediaRoute2Info)>(r2);

        return;
    }

    private void scheduleClearOptimisticVolume()
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Handler mControllerHandler>;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Handler mControllerHandler>;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.lang.Runnable mClearOptimisticVolumeRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 1000L);

        return;
    }

    void setMemberRouteVolume(java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Message r2;
        android.os.Bundle r3, $r8;
        android.media.MediaRouter2$RoutingController $r4, $r5;
        boolean $z0;
        android.os.Messenger $r6, $r9, $r10;
        java.util.concurrent.atomic.AtomicInteger $r7;
        java.lang.Throwable $r11, $r12, r13, r14;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $z0 = virtualinvoke $r5.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        if $r6 != null goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i1 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 7;

        r2.<android.os.Message: int arg1> = i1;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("volume", i0);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("routeId", r1);

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>(r3);

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mReceiveMessenger>;

        r2.<android.os.Message: android.os.Messenger replyTo> = $r9;

     label3:
        $r10 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        virtualinvoke $r10.<android.os.Messenger: void send(android.os.Message)>(r2);

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r13 = $r12;

        goto label7;

     label6:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Provider", "Could not send control request to service.", r14);

     label7:
        return;

        catch android.os.DeadObjectException from label3 to label4 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    void updateMemberRouteVolume(java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Message r2;
        android.os.Bundle r3, $r8;
        android.media.MediaRouter2$RoutingController $r4, $r5;
        boolean $z0;
        android.os.Messenger $r6, $r9, $r10;
        java.util.concurrent.atomic.AtomicInteger $r7;
        java.lang.Throwable $r11, $r12, r13, r14;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.media.MediaRouter2$RoutingController mRoutingController>;

        $z0 = virtualinvoke $r5.<android.media.MediaRouter2$RoutingController: boolean isReleased()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        if $r6 != null goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: java.util.concurrent.atomic.AtomicInteger mNextRequestId>;

        i1 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 8;

        r2.<android.os.Message: int arg1> = i1;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("volume", i0);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("routeId", r1);

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>(r3);

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mReceiveMessenger>;

        r2.<android.os.Message: android.os.Messenger replyTo> = $r9;

     label3:
        $r10 = r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: android.os.Messenger mServiceMessenger>;

        virtualinvoke $r10.<android.os.Messenger: void send(android.os.Message)>(r2);

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r13 = $r12;

        goto label7;

     label6:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2Provider", "Could not send control request to service.", r14);

     label7:
        return;

        catch android.os.DeadObjectException from label3 to label4 with label5;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    void setGroupRouteDescriptor(androidx.mediarouter.media.MediaRouteDescriptor)
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: androidx.mediarouter.media.MediaRouteDescriptor mGroupRouteDescriptor> = r1;

        return;
    }

    private void lambda$new$0()
    {
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: int mOptimisticVolume> = -1;

        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController
<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId>
<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController>
<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider, java.lang.String, androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController)
    {
        androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController r0;
        androidx.mediarouter.media.MediaRoute2Provider r1;
        java.lang.String r2;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r3;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider this$0> = r1;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId> = r2;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController> = r3;

        return;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController r0;
        int i0;
        java.lang.String $r1, $r3;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController $r2, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController>;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId>;

        virtualinvoke $r4.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void setMemberRouteVolume(java.lang.String,int)>($r3, i0);

        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController r0;
        int i0;
        java.lang.String $r1, $r3;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController $r2, $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController mGroupRouteController>;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$MemberRouteController: java.lang.String mOriginalRouteId>;

        virtualinvoke $r4.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void updateMemberRouteVolume(java.lang.String,int)>($r3, i0);

        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$RouteCallback
<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider)
    {
        androidx.mediarouter.media.MediaRoute2Provider$RouteCallback r0;
        androidx.mediarouter.media.MediaRoute2Provider r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$RouteCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: androidx.mediarouter.media.MediaRoute2Provider this$0> = r1;

        specialinvoke r0.<android.media.MediaRouter2$RouteCallback: void <init>()>();

        return;
    }

    public void onRoutesAdded(java.util.List)
    {
        androidx.mediarouter.media.MediaRoute2Provider$RouteCallback r0;
        java.util.List r1;
        androidx.mediarouter.media.MediaRoute2Provider $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$RouteCallback;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRoute2Provider: void refreshRoutes()>();

        return;
    }

    public void onRoutesRemoved(java.util.List)
    {
        androidx.mediarouter.media.MediaRoute2Provider$RouteCallback r0;
        java.util.List r1;
        androidx.mediarouter.media.MediaRoute2Provider $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$RouteCallback;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRoute2Provider: void refreshRoutes()>();

        return;
    }

    public void onRoutesChanged(java.util.List)
    {
        androidx.mediarouter.media.MediaRoute2Provider$RouteCallback r0;
        java.util.List r1;
        androidx.mediarouter.media.MediaRoute2Provider $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$RouteCallback;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2Provider$RouteCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRoute2Provider: void refreshRoutes()>();

        return;
    }

androidx.mediarouter.media.MediaRoute2Provider$TransferCallback
<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2Provider)
    {
        androidx.mediarouter.media.MediaRoute2Provider$TransferCallback r0;
        androidx.mediarouter.media.MediaRoute2Provider r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$TransferCallback;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2Provider;

        r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0> = r1;

        specialinvoke r0.<android.media.MediaRouter2$TransferCallback: void <init>()>();

        return;
    }

    public void onTransfer(android.media.MediaRouter2$RoutingController, android.media.MediaRouter2$RoutingController)
    {
        androidx.mediarouter.media.MediaRoute2Provider$TransferCallback r0;
        android.media.MediaRouter2$RoutingController r1, r2, $r11;
        java.util.List r3;
        java.lang.String r4;
        androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController r5, $r14;
        androidx.mediarouter.media.MediaRoute2Provider $r6, $r9, $r15, $r16, $r19, $r21, $r22;
        java.util.Map $r7, $r17;
        android.media.MediaRouter2 $r10;
        boolean $z0;
        java.lang.Object $r12;
        android.media.MediaRoute2Info $r13;
        androidx.mediarouter.media.MediaRoute2Provider$Callback $r20, $r23;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$TransferCallback;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        r2 := @parameter1: android.media.MediaRouter2$RoutingController;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r7 = $r6.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r10 = $r9.<androidx.mediarouter.media.MediaRoute2Provider: android.media.MediaRouter2 mMediaRouter2>;

        $r11 = virtualinvoke $r10.<android.media.MediaRouter2: android.media.MediaRouter2$RoutingController getSystemController()>();

        if r2 != $r11 goto label1;

        $r22 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r23 = $r22.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRoute2Provider$Callback mCallback>;

        virtualinvoke $r23.<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onSelectFallbackRoute(int)>(3);

        goto label3;

     label1:
        r3 = virtualinvoke r2.<android.media.MediaRouter2$RoutingController: java.util.List getSelectedRoutes()>();

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", "Selected routes are empty. This shouldn\'t happen.");

        return;

     label2:
        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (android.media.MediaRoute2Info) $r12;

        r4 = virtualinvoke $r13.<android.media.MediaRoute2Info: java.lang.String getId()>();

        $r14 = new androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController;

        $r15 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        specialinvoke $r14.<androidx.mediarouter.media.MediaRoute2Provider$GroupRouteController: void <init>(androidx.mediarouter.media.MediaRoute2Provider,android.media.MediaRouter2$RoutingController,java.lang.String)>($r15, r2, r4);

        r5 = $r14;

        $r16 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r17 = $r16.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r5);

        $r19 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r20 = $r19.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRoute2Provider$Callback mCallback>;

        virtualinvoke $r20.<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onSelectRoute(java.lang.String,int)>(r4, 3);

        $r21 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        virtualinvoke $r21.<androidx.mediarouter.media.MediaRoute2Provider: void setDynamicRouteDescriptors(android.media.MediaRouter2$RoutingController)>(r2);

     label3:
        return;
    }

    public void onTransferFailure(android.media.MediaRoute2Info)
    {
        androidx.mediarouter.media.MediaRoute2Provider$TransferCallback r0;
        android.media.MediaRoute2Info r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$TransferCallback;

        r1 := @parameter0: android.media.MediaRoute2Info;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transfer failed. requestedRoute=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r5);

        return;
    }

    public void onStop(android.media.MediaRouter2$RoutingController)
    {
        androidx.mediarouter.media.MediaRoute2Provider$TransferCallback r0;
        android.media.MediaRouter2$RoutingController r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        androidx.mediarouter.media.MediaRoute2Provider $r3, $r10;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        androidx.mediarouter.media.MediaRoute2Provider$Callback $r11;

        r0 := @this: androidx.mediarouter.media.MediaRoute2Provider$TransferCallback;

        r1 := @parameter0: android.media.MediaRouter2$RoutingController;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r4 = $r3.<androidx.mediarouter.media.MediaRoute2Provider: java.util.Map mControllerMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.mediarouter.media.MediaRouteProvider$RouteController) $r5;

        if r2 == null goto label1;

        $r10 = r0.<androidx.mediarouter.media.MediaRoute2Provider$TransferCallback: androidx.mediarouter.media.MediaRoute2Provider this$0>;

        $r11 = $r10.<androidx.mediarouter.media.MediaRoute2Provider: androidx.mediarouter.media.MediaRoute2Provider$Callback mCallback>;

        virtualinvoke $r11.<androidx.mediarouter.media.MediaRoute2Provider$Callback: void onReleaseController(androidx.mediarouter.media.MediaRouteProvider$RouteController)>(r2);

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStop: No matching routeController found. routingController=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2Provider", $r9);

     label2:
        return;
    }

