androidx.wear.compose.foundation.CurvedRowChild
<androidx.wear.compose.foundation.CurvedRowChild: androidx.wear.compose.foundation.CurvedAlignment$Radial radialAlignment>
    private void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection, androidx.wear.compose.foundation.CurvedAlignment$Radial, kotlin.jvm.functions.Function1)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        androidx.wear.compose.foundation.CurvedLayoutDirection r1;
        androidx.wear.compose.foundation.CurvedAlignment$Radial r2;
        kotlin.jvm.functions.Function1 r3;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutDirection;

        r2 := @parameter1: androidx.wear.compose.foundation.CurvedAlignment$Radial;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $z0 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedLayoutDirection: boolean clockwise()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke r0.<androidx.wear.compose.foundation.ContainerChild: void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection,boolean,kotlin.jvm.functions.Function1)>(r1, $z1, r3);

        r0.<androidx.wear.compose.foundation.CurvedRowChild: androidx.wear.compose.foundation.CurvedAlignment$Radial radialAlignment> = r2;

        return;
    }

    public void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection, androidx.wear.compose.foundation.CurvedAlignment$Radial, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        androidx.wear.compose.foundation.CurvedLayoutDirection r1;
        kotlin.jvm.functions.Function1 r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.wear.compose.foundation.CurvedAlignment$Radial r4;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutDirection;

        r4 := @parameter1: androidx.wear.compose.foundation.CurvedAlignment$Radial;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        i0 := @parameter3: int;

        r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection,androidx.wear.compose.foundation.CurvedAlignment$Radial,kotlin.jvm.functions.Function1,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r4, r2, null);

        return;
    }

    public final androidx.wear.compose.foundation.CurvedAlignment$Radial getRadialAlignment-xcdaxW0()
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        androidx.wear.compose.foundation.CurvedAlignment$Radial $r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        $r1 = r0.<androidx.wear.compose.foundation.CurvedRowChild: androidx.wear.compose.foundation.CurvedAlignment$Radial radialAlignment>;

        return $r1;
    }

    public float doEstimateThickness(float)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        float f0, f1, $f2, $f3;
        java.util.Iterator r1;
        java.util.List $r2;
        java.lang.Iterable $r3;
        boolean $z1, $z2;
        java.lang.Object $r4, $r5;
        java.lang.Float $r6;
        androidx.wear.compose.foundation.CurvedChild r7, $r8;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        f0 := @parameter0: float;

        $r2 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: java.util.List getChildren$compose_foundation_release()>();

        $r3 = (java.lang.Iterable) $r2;

        r1 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r6 = null;

        goto label4;

     label1:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.wear.compose.foundation.CurvedChild) $r4;

        f1 = virtualinvoke r7.<androidx.wear.compose.foundation.CurvedChild: float estimateThickness(float)>(f0);

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.wear.compose.foundation.CurvedChild) $r5;

        $f2 = virtualinvoke $r8.<androidx.wear.compose.foundation.CurvedChild: float estimateThickness(float)>(f0);

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f2);

        goto label2;

     label3:
        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

     label4:
        if $r6 == null goto label5;

        $f3 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        goto label6;

     label5:
        $f3 = 0.0F;

     label6:
        return $f3;
    }

    public androidx.wear.compose.foundation.PartialLayoutInfo doRadialPosition(float, float)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        float f0, f1, f2, $f3, $f4, $f5;
        java.util.List $r1;
        androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1 $r2;
        java.lang.Iterable $r3;
        kotlin.jvm.functions.Function1 $r4;
        androidx.wear.compose.foundation.PartialLayoutInfo $r5;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: java.util.List getChildren$compose_foundation_release()>();

        $r3 = (java.lang.Iterable) $r1;

        $r2 = new androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1;

        specialinvoke $r2.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: void <init>(float,float,androidx.wear.compose.foundation.CurvedRowChild)>(f0, f1, r0);

        $r4 = (kotlin.jvm.functions.Function1) $r2;

        f2 = staticinvoke <androidx.wear.compose.foundation.CurvedLayoutKt: float sumOf(java.lang.Iterable,kotlin.jvm.functions.Function1)>($r3, $r4);

        $r5 = new androidx.wear.compose.foundation.PartialLayoutInfo;

        $f3 = (float) 2;

        $f4 = f1 / $f3;

        $f5 = f0 - $f4;

        specialinvoke $r5.<androidx.wear.compose.foundation.PartialLayoutInfo: void <init>(float,float,float,float)>(f2, f0, f1, $f5);

        return $r5;
    }

    public float doAngularPosition-0AR0LA0(float, float, long)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        float f0, f1, $f2, $f3, $f5, $f6, $f7, $f8, $f9, f10, $f11, $f12, $f14, $f15, f16;
        long l0;
        java.util.List r1, $r2, $r5, $r8, r32;
        java.util.ArrayList $r3, $r6;
        int $i1, $i2, $i3, $i5, i7, i8, i9, i10, i12;
        boolean $z1, $z2, $z3, $z5, z10, z11, $z12, z14;
        java.lang.Iterable $r4, $r7, $r18, $r26, r33;
        java.lang.Object $r9, $r11, $r13, r21, r24, r29, r35;
        java.lang.Number $r10, $r12, $r14;
        byte $b4, $b6;
        java.lang.Float $r15, $r17;
        java.util.Collection r19, r23, r27, r31;
        java.util.Iterator r20, $r28, r34;
        androidx.wear.compose.foundation.CurvedChild r22, r30, r36;
        androidx.wear.compose.foundation.CurvedScopeParentData $r25;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        l0 := @parameter2: long;

        $r2 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        $r18 = (java.lang.Iterable) $r2;

        $r3 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r18, 10);

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        r19 = (java.util.Collection) $r3;

        r20 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (androidx.wear.compose.foundation.CurvedChild) r21;

        r23 = r19;

        r24 = virtualinvoke r22.<androidx.wear.compose.foundation.CurvedChild: java.lang.Object computeParentData()>();

        $z5 = r24 instanceof androidx.wear.compose.foundation.CurvedScopeParentData;

        if $z5 == 0 goto label02;

        $r25 = (androidx.wear.compose.foundation.CurvedScopeParentData) r24;

        goto label03;

     label02:
        $r25 = null;

     label03:
        if $r25 == null goto label04;

        $f8 = virtualinvoke $r25.<androidx.wear.compose.foundation.CurvedScopeParentData: float getWeight()>();

        goto label05;

     label04:
        $f8 = 0.0F;

     label05:
        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        interfaceinvoke r23.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        goto label01;

     label06:
        r1 = (java.util.List) r19;

        $r4 = (java.lang.Iterable) r1;

        $f9 = staticinvoke <kotlin.collections.CollectionsKt: float sumOfFloat(java.lang.Iterable)>($r4);

        $r5 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        $r26 = (java.lang.Iterable) $r5;

        f10 = f1;

        z10 = 0;

        $r6 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r26, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r27 = (java.util.Collection) $r6;

        z11 = 0;

        i7 = 0;

        $r28 = interfaceinvoke $r26.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        r29 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        $i5 = i7;

        i7 = i7 + 1;

        i8 = $i5;

        if i8 >= 0 goto label08;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label08:
        r30 = (androidx.wear.compose.foundation.CurvedChild) r29;

        i9 = i8;

        r31 = r27;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        $r14 = (java.lang.Number) $r13;

        $f7 = virtualinvoke $r14.<java.lang.Number: float floatValue()>();

        $b6 = $f7 cmpg 0.0F;

        if $b6 != 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        if $z12 == 0 goto label11;

        $f11 = virtualinvoke r30.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

        goto label12;

     label11:
        $f11 = 0.0F;

     label12:
        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        interfaceinvoke r31.<java.util.Collection: boolean add(java.lang.Object)>($r15);

        goto label07;

     label13:
        r32 = (java.util.List) r27;

        $r7 = (java.lang.Iterable) r32;

        $f2 = staticinvoke <kotlin.collections.CollectionsKt: float sumOfFloat(java.lang.Iterable)>($r7);

        $f12 = f10 - $f2;

        $f14 = f0;

        $r8 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: java.util.List getChildrenInLayoutOrder$compose_foundation_release()>();

        r33 = (java.lang.Iterable) $r8;

        i10 = 0;

        r34 = interfaceinvoke r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label18;

        r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i10;

        i10 = i10 + 1;

        if $i3 >= 0 goto label15;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label15:
        r36 = (androidx.wear.compose.foundation.CurvedChild) r35;

        i12 = $i3;

        z14 = 0;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i12);

        $r10 = (java.lang.Number) $r9;

        $f3 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        $b4 = $f3 cmpl 0.0F;

        if $b4 <= 0 goto label16;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i12);

        $r12 = (java.lang.Number) $r11;

        $f5 = virtualinvoke $r12.<java.lang.Number: float floatValue()>();

        $f6 = $f12 * $f5;

        $f15 = $f6 / $f9;

        goto label17;

     label16:
        $f15 = virtualinvoke r36.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

     label17:
        f16 = $f15;

        virtualinvoke r36.<androidx.wear.compose.foundation.CurvedChild: float angularPosition-0AR0LA0(float,float,long)>($f14, f16, l0);

        $f14 = $f14 + f16;

        goto label14;

     label18:
        return f0;
    }

    public void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection, androidx.wear.compose.foundation.CurvedAlignment$Radial, kotlin.jvm.functions.Function1, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.foundation.CurvedRowChild r0;
        androidx.wear.compose.foundation.CurvedLayoutDirection r1;
        androidx.wear.compose.foundation.CurvedAlignment$Radial r2;
        kotlin.jvm.functions.Function1 r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedLayoutDirection;

        r2 := @parameter1: androidx.wear.compose.foundation.CurvedAlignment$Radial;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        $r4 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild: void <init>(androidx.wear.compose.foundation.CurvedLayoutDirection,androidx.wear.compose.foundation.CurvedAlignment$Radial,kotlin.jvm.functions.Function1)>(r1, r2, r3);

        return;
    }

androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1
<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentOuterRadius>
<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentThickness>
<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: androidx.wear.compose.foundation.CurvedRowChild this$0>
    void <init>(float, float, androidx.wear.compose.foundation.CurvedRowChild)
    {
        androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1 r0;
        float $f0, $f1;
        androidx.wear.compose.foundation.CurvedRowChild $r1;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 := @parameter2: androidx.wear.compose.foundation.CurvedRowChild;

        r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentOuterRadius> = $f0;

        r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentThickness> = $f1;

        r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: androidx.wear.compose.foundation.CurvedRowChild this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Float invoke(androidx.wear.compose.foundation.CurvedChild)
    {
        androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1 r0;
        androidx.wear.compose.foundation.CurvedChild r1;
        androidx.wear.compose.foundation.CurvedRowChild $r2, $r6;
        androidx.wear.compose.foundation.CurvedAlignment$Radial $r3, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8;
        java.lang.Float $r5;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedChild;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        f7 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentOuterRadius>;

        f8 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentThickness>;

        $r2 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: androidx.wear.compose.foundation.CurvedRowChild this$0>;

        $r3 = virtualinvoke $r2.<androidx.wear.compose.foundation.CurvedRowChild: androidx.wear.compose.foundation.CurvedAlignment$Radial getRadialAlignment-xcdaxW0()>();

        if $r3 == null goto label1;

        $f1 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentOuterRadius>;

        $r6 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: androidx.wear.compose.foundation.CurvedRowChild this$0>;

        $r7 = virtualinvoke $r6.<androidx.wear.compose.foundation.CurvedRowChild: androidx.wear.compose.foundation.CurvedAlignment$Radial getRadialAlignment-xcdaxW0()>();

        $f2 = virtualinvoke $r7.<androidx.wear.compose.foundation.CurvedAlignment$Radial: float unbox-impl()>();

        $f3 = r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: float $parentThickness>;

        $f4 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedChild: float getEstimatedThickness$compose_foundation_release()>();

        $f5 = $f3 - $f4;

        $f6 = $f2 * $f5;

        f7 = $f1 - $f6;

        f8 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedChild: float getEstimatedThickness$compose_foundation_release()>();

     label1:
        virtualinvoke r1.<androidx.wear.compose.foundation.CurvedChild: androidx.wear.compose.foundation.PartialLayoutInfo radialPosition(float,float)>(f7, f8);

        $f0 = virtualinvoke r1.<androidx.wear.compose.foundation.CurvedChild: float getSweepRadians$compose_foundation_release()>();

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r5;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1 r0;
        java.lang.Object r1;
        androidx.wear.compose.foundation.CurvedChild $r2;
        java.lang.Float $r3;

        r0 := @this: androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.wear.compose.foundation.CurvedChild) r1;

        $r3 = virtualinvoke r0.<androidx.wear.compose.foundation.CurvedRowChild$doRadialPosition$totalSweep$1: java.lang.Float invoke(androidx.wear.compose.foundation.CurvedChild)>($r2);

        return $r3;
    }

