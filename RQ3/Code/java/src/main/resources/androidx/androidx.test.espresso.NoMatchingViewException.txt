androidx.test.espresso.NoMatchingViewException
<androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>
<androidx.test.espresso.NoMatchingViewException: android.view.View rootView>
<androidx.test.espresso.NoMatchingViewException: java.util.List adapterViews>
<androidx.test.espresso.NoMatchingViewException: boolean includeViewHierarchy>
<androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional adapterViewWarning>
    static volatile android.view.View '-$$Nest$fgetrootView'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        android.view.View $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: android.view.View rootView>;

        return $r1;
    }

    public android.view.View getRootView()
    {
        androidx.test.espresso.NoMatchingViewException r0;
        android.view.View $r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: android.view.View rootView>;

        return $r1;
    }

    static volatile androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        androidx.test.espresso.util.EspressoOptional $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional adapterViewWarning>;

        return $r1;
    }

    private static java.lang.String getErrorMessage(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        java.lang.StringBuilder r0, $r7, $r8, $r9, $r10, r21;
        boolean $z0, $z1;
        org.hamcrest.Matcher $r1, $r2;
        androidx.test.espresso.util.EspressoOptional $r3, r15;
        android.view.View $r4;
        int $i0;
        java.lang.String $r5, $r6, r14, r17, r18, r20, r22;
        androidx.test.espresso.NoMatchingViewException$Builder r11;
        java.util.Locale r12, r23;
        java.lang.Object[] r13, r19, r24;
        java.lang.Object r16;

        r11 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $z0 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: boolean '-$$Nest$fgetincludeViewHierarchy'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        if $z0 == 0 goto label4;

        r12 = <java.util.Locale: java.util.Locale ROOT>;

        r13 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        r13[0] = $r2;

        r14 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r12, "No views in hierarchy found matching: %s", r13);

        $r3 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        $z1 = virtualinvoke $r3.<androidx.test.espresso.util.EspressoOptional: boolean isPresent()>();

        if $z1 == 0 goto label1;

        r15 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        r16 = virtualinvoke r15.<androidx.test.espresso.util.EspressoOptional: java.lang.Object get()>();

        r17 = (java.lang.String) r16;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: android.view.View '-$$Nest$fgetrootView'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        $i0 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: int '-$$Nest$fgetmaxMsgLen'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        r18 = staticinvoke <androidx.test.espresso.util.HumanReadables: java.lang.String getViewHierarchyErrorMessage(android.view.View,java.util.List,java.lang.String,java.lang.String,int)>($r4, null, r14, null, $i0);

        $r5 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String '-$$Nest$fgetviewHierarchyFile'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        if $r5 == null goto label3;

        r19 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String '-$$Nest$fgetviewHierarchyFile'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        r19[0] = $r6;

        r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\nThe complete view hierarchy is available in artifact file \'%s\'.", r19);

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        r22 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r22;

     label3:
        r22 = r18;

        goto label2;

     label4:
        r23 = <java.util.Locale: java.util.Locale ROOT>;

        r24 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException$Builder)>(r11);

        r24[0] = $r1;

        r22 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r23, "Could not find a view that matches %s", r24);

        goto label2;
    }

    public java.lang.String getViewMatcherDescription()
    {
        androidx.test.espresso.NoMatchingViewException r0;
        org.hamcrest.Matcher $r1, $r2;
        java.lang.String $r3;

        r0 := @this: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        $r3 = interfaceinvoke $r2.<org.hamcrest.Matcher: java.lang.String toString()>();

        return $r3;

     label1:
        return "unknown";
    }

    static volatile java.util.List '-$$Nest$fgetadapterViews'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: java.util.List adapterViews>;

        return $r1;
    }

    static volatile org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    private void <init>(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        androidx.test.espresso.NoMatchingViewException$Builder r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        java.util.ArrayList $r4;
        androidx.test.espresso.util.EspressoOptional $r5, $r9;
        org.hamcrest.Matcher $r6;
        android.view.View $r7;
        java.util.List $r8, r10;
        boolean $z0;

        r0 := @this: androidx.test.espresso.NoMatchingViewException;

        r1 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r2 = staticinvoke <androidx.test.espresso.NoMatchingViewException: java.lang.String getErrorMessage(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        $r3 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: java.lang.Throwable '-$$Nest$fgetcause'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r3);

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r10 = (java.util.List) $r4;

        r0.<androidx.test.espresso.NoMatchingViewException: java.util.List adapterViews> = r10;

        r0.<androidx.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = 1;

        $r5 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional absent()>();

        r0.<androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = $r5;

        $r6 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher viewMatcher> = $r6;

        $r7 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: android.view.View '-$$Nest$fgetrootView'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException: android.view.View rootView> = $r7;

        $r8 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: java.util.List '-$$Nest$fgetadapterViews'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException: java.util.List adapterViews> = $r8;

        $r9 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = $r9;

        $z0 = staticinvoke <androidx.test.espresso.NoMatchingViewException$Builder: boolean '-$$Nest$fgetincludeViewHierarchy'(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = $z0;

        return;
    }

    private void <init>(java.lang.String)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        androidx.test.espresso.util.EspressoOptional $r3;
        java.util.List r4;

        r0 := @this: androidx.test.espresso.NoMatchingViewException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r4 = (java.util.List) $r2;

        r0.<androidx.test.espresso.NoMatchingViewException: java.util.List adapterViews> = r4;

        r0.<androidx.test.espresso.NoMatchingViewException: boolean includeViewHierarchy> = 1;

        $r3 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional absent()>();

        r0.<androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = $r3;

        return;
    }

    void <init>(androidx.test.espresso.NoMatchingViewException$Builder, androidx.test.espresso.NoMatchingViewException-IA)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        androidx.test.espresso.NoMatchingViewException$Builder r1;
        androidx.test.espresso.NoMatchingViewException-IA r2;

        r0 := @this: androidx.test.espresso.NoMatchingViewException;

        r1 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        r2 := @parameter1: androidx.test.espresso.NoMatchingViewException-IA;

        specialinvoke r0.<androidx.test.espresso.NoMatchingViewException: void <init>(androidx.test.espresso.NoMatchingViewException$Builder)>(r1);

        return;
    }

    static volatile boolean '-$$Nest$fgetincludeViewHierarchy'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException r0;
        boolean $z0;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $z0 = r0.<androidx.test.espresso.NoMatchingViewException: boolean includeViewHierarchy>;

        return $z0;
    }

androidx.test.espresso.NoMatchingViewException$Builder
<androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>
<androidx.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>
<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>
<androidx.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy>
<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning>
<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.Throwable cause>
<androidx.test.espresso.NoMatchingViewException$Builder: int maxMsgLen>
<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String viewHierarchyFile>
    static volatile int '-$$Nest$fgetmaxMsgLen'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $i0 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: int maxMsgLen>;

        return $i0;
    }

    static volatile android.view.View '-$$Nest$fgetrootView'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        android.view.View $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>;

        return $r1;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder 'from'(androidx.test.espresso.NoMatchingViewException)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        androidx.test.espresso.NoMatchingViewException r1;
        org.hamcrest.Matcher $r2;
        android.view.View $r3;
        java.util.List $r4;
        androidx.test.espresso.util.EspressoOptional $r5;
        boolean $z0;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: androidx.test.espresso.NoMatchingViewException;

        $r2 = staticinvoke <androidx.test.espresso.NoMatchingViewException: org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher> = $r2;

        $r3 = staticinvoke <androidx.test.espresso.NoMatchingViewException: android.view.View '-$$Nest$fgetrootView'(androidx.test.espresso.NoMatchingViewException)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: android.view.View rootView> = $r3;

        $r4 = staticinvoke <androidx.test.espresso.NoMatchingViewException: java.util.List '-$$Nest$fgetadapterViews'(androidx.test.espresso.NoMatchingViewException)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.NoMatchingViewException: androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = $r5;

        $z0 = staticinvoke <androidx.test.espresso.NoMatchingViewException: boolean '-$$Nest$fgetincludeViewHierarchy'(androidx.test.espresso.NoMatchingViewException)>(r1);

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = $z0;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder includeViewHierarchy(boolean)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        z0 := @parameter0: boolean;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = z0;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withAdapterViewWarning(androidx.test.espresso.util.EspressoOptional)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        androidx.test.espresso.util.EspressoOptional r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: androidx.test.espresso.util.EspressoOptional;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withAdapterViews(java.util.List)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.util.List r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: java.util.List;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withCause(java.lang.Throwable)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.lang.Throwable r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: java.lang.Throwable;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.Throwable cause> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withMaxMsgLen(int)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        int i0;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: int maxMsgLen> = i0;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withRootView(android.view.View)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        android.view.View r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: android.view.View;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: android.view.View rootView> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withViewHierarchyFile(java.lang.String)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String viewHierarchyFile> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException$Builder withViewMatcher(org.hamcrest.Matcher)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        org.hamcrest.Matcher r1;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        r1 := @parameter0: org.hamcrest.Matcher;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher> = r1;

        return r0;
    }

    public androidx.test.espresso.NoMatchingViewException build()
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        androidx.test.espresso.NoMatchingViewException r1;
        org.hamcrest.Matcher $r2;
        android.view.View $r4;
        java.util.List $r6;
        androidx.test.espresso.util.EspressoOptional $r8;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        $r2 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: android.view.View rootView>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        $r8 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        r1 = new androidx.test.espresso.NoMatchingViewException;

        specialinvoke r1.<androidx.test.espresso.NoMatchingViewException: void <init>(androidx.test.espresso.NoMatchingViewException$Builder,androidx.test.espresso.NoMatchingViewException-IA)>(r0, null);

        return r1;
    }

    static volatile androidx.test.espresso.util.EspressoOptional '-$$Nest$fgetadapterViewWarning'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        androidx.test.espresso.util.EspressoOptional $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$fgetviewHierarchyFile'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String viewHierarchyFile>;

        return $r1;
    }

    static volatile java.lang.Throwable '-$$Nest$fgetcause'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.lang.Throwable $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.Throwable cause>;

        return $r1;
    }

    static volatile java.util.List '-$$Nest$fgetadapterViews'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.util.List $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews>;

        return $r1;
    }

    static volatile org.hamcrest.Matcher '-$$Nest$fgetviewMatcher'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        org.hamcrest.Matcher $r1;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $r1 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: org.hamcrest.Matcher viewMatcher>;

        return $r1;
    }

    public void <init>()
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        java.util.ArrayList $r1;
        androidx.test.espresso.util.EspressoOptional $r2;
        java.util.List r3;

        r0 := @this: androidx.test.espresso.NoMatchingViewException$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r3 = (java.util.List) $r1;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.util.List adapterViews> = r3;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy> = 1;

        $r2 = staticinvoke <androidx.test.espresso.util.EspressoOptional: androidx.test.espresso.util.EspressoOptional absent()>();

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: androidx.test.espresso.util.EspressoOptional adapterViewWarning> = $r2;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: int maxMsgLen> = 2147483647;

        r0.<androidx.test.espresso.NoMatchingViewException$Builder: java.lang.String viewHierarchyFile> = null;

        return;
    }

    static volatile boolean '-$$Nest$fgetincludeViewHierarchy'(androidx.test.espresso.NoMatchingViewException$Builder)
    {
        androidx.test.espresso.NoMatchingViewException$Builder r0;
        boolean $z0;

        r0 := @parameter0: androidx.test.espresso.NoMatchingViewException$Builder;

        $z0 = r0.<androidx.test.espresso.NoMatchingViewException$Builder: boolean includeViewHierarchy>;

        return $z0;
    }

