androidx.work.impl.constraints.WorkConstraintsTrackerImpl
<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.WorkConstraintsCallback callback>
<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>
<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>
    public void <init>(androidx.work.impl.constraints.WorkConstraintsCallback, androidx.work.impl.constraints.controllers.ConstraintController[])
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        androidx.work.impl.constraints.WorkConstraintsCallback r1;
        androidx.work.impl.constraints.controllers.ConstraintController[] r2;
        java.lang.Object $r3;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: androidx.work.impl.constraints.WorkConstraintsCallback;

        r2 := @parameter1: androidx.work.impl.constraints.controllers.ConstraintController[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "constraintControllers");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.WorkConstraintsCallback callback> = r1;

        r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers> = r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock> = $r3;

        return;
    }

    public void <init>(androidx.work.impl.constraints.trackers.Trackers, androidx.work.impl.constraints.WorkConstraintsCallback)
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        androidx.work.impl.constraints.trackers.Trackers r1;
        androidx.work.impl.constraints.WorkConstraintsCallback r2;
        androidx.work.impl.constraints.controllers.ConstraintController[] r3;
        androidx.work.impl.constraints.controllers.BatteryChargingController $r4;
        androidx.work.impl.constraints.trackers.ConstraintTracker $r5, $r11, $r14, $r17, $r20, $r23;
        androidx.work.impl.constraints.controllers.ConstraintController $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        androidx.work.impl.constraints.controllers.BatteryNotLowController $r7;
        androidx.work.impl.constraints.trackers.BatteryNotLowTracker $r8;
        androidx.work.impl.constraints.controllers.StorageNotLowController $r10;
        androidx.work.impl.constraints.controllers.NetworkConnectedController $r13;
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController $r16;
        androidx.work.impl.constraints.controllers.NetworkNotRoamingController $r19;
        androidx.work.impl.constraints.controllers.NetworkMeteredController $r22;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: androidx.work.impl.constraints.trackers.Trackers;

        r2 := @parameter1: androidx.work.impl.constraints.WorkConstraintsCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "trackers");

        r3 = newarray (androidx.work.impl.constraints.controllers.ConstraintController)[7];

        $r4 = new androidx.work.impl.constraints.controllers.BatteryChargingController;

        $r5 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getBatteryChargingTracker()>();

        specialinvoke $r4.<androidx.work.impl.constraints.controllers.BatteryChargingController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r5);

        $r6 = (androidx.work.impl.constraints.controllers.ConstraintController) $r4;

        r3[0] = $r6;

        $r7 = new androidx.work.impl.constraints.controllers.BatteryNotLowController;

        $r8 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.BatteryNotLowTracker getBatteryNotLowTracker()>();

        specialinvoke $r7.<androidx.work.impl.constraints.controllers.BatteryNotLowController: void <init>(androidx.work.impl.constraints.trackers.BatteryNotLowTracker)>($r8);

        $r9 = (androidx.work.impl.constraints.controllers.ConstraintController) $r7;

        r3[1] = $r9;

        $r10 = new androidx.work.impl.constraints.controllers.StorageNotLowController;

        $r11 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getStorageNotLowTracker()>();

        specialinvoke $r10.<androidx.work.impl.constraints.controllers.StorageNotLowController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r11);

        $r12 = (androidx.work.impl.constraints.controllers.ConstraintController) $r10;

        r3[2] = $r12;

        $r13 = new androidx.work.impl.constraints.controllers.NetworkConnectedController;

        $r14 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getNetworkStateTracker()>();

        specialinvoke $r13.<androidx.work.impl.constraints.controllers.NetworkConnectedController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r14);

        $r15 = (androidx.work.impl.constraints.controllers.ConstraintController) $r13;

        r3[3] = $r15;

        $r16 = new androidx.work.impl.constraints.controllers.NetworkUnmeteredController;

        $r17 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getNetworkStateTracker()>();

        specialinvoke $r16.<androidx.work.impl.constraints.controllers.NetworkUnmeteredController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r17);

        $r18 = (androidx.work.impl.constraints.controllers.ConstraintController) $r16;

        r3[4] = $r18;

        $r19 = new androidx.work.impl.constraints.controllers.NetworkNotRoamingController;

        $r20 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getNetworkStateTracker()>();

        specialinvoke $r19.<androidx.work.impl.constraints.controllers.NetworkNotRoamingController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r20);

        $r21 = (androidx.work.impl.constraints.controllers.ConstraintController) $r19;

        r3[5] = $r21;

        $r22 = new androidx.work.impl.constraints.controllers.NetworkMeteredController;

        $r23 = virtualinvoke r1.<androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.ConstraintTracker getNetworkStateTracker()>();

        specialinvoke $r22.<androidx.work.impl.constraints.controllers.NetworkMeteredController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>($r23);

        $r24 = (androidx.work.impl.constraints.controllers.ConstraintController) $r22;

        r3[6] = $r24;

        specialinvoke r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: void <init>(androidx.work.impl.constraints.WorkConstraintsCallback,androidx.work.impl.constraints.controllers.ConstraintController[])>(r2, r3);

        return;
    }

    public void replace(java.lang.Iterable)
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        java.lang.Iterable r1;
        java.lang.Object r2;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r3;
        java.lang.Throwable $r4;
        androidx.work.impl.constraints.controllers.ConstraintController[] r5, r7, r9;
        int i0, i1, i2, i3, i4, i5;
        androidx.work.impl.constraints.controllers.ConstraintController r6, r8, r10;
        kotlin.Unit $r11;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecs");

        r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>;

        entermonitor r2;

     label01:
        r5 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>;

        i0 = 0;

        i1 = lengthof r5;

     label02:
        if i0 >= i1 goto label03;

        r6 = r5[i0];

        virtualinvoke r6.<androidx.work.impl.constraints.controllers.ConstraintController: void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)>(null);

        i0 = i0 + 1;

        goto label02;

     label03:
        r7 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>;

        i2 = 0;

        i3 = lengthof r7;

     label04:
        if i2 >= i3 goto label05;

        r8 = r7[i2];

        virtualinvoke r8.<androidx.work.impl.constraints.controllers.ConstraintController: void replace(java.lang.Iterable)>(r1);

        i2 = i2 + 1;

        goto label04;

     label05:
        r9 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>;

        i4 = 0;

        i5 = lengthof r9;

     label06:
        if i4 >= i5 goto label07;

        r10 = r9[i4];

        $r3 = (androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback) r0;

        virtualinvoke r10.<androidx.work.impl.constraints.controllers.ConstraintController: void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)>($r3);

        i4 = i4 + 1;

        goto label06;

     label07:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label08:
        exitmonitor r2;

        goto label11;

     label09:
        $r4 := @caughtexception;

     label10:
        exitmonitor r2;

        throw $r4;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void reset()
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        java.lang.Object r1;
        androidx.work.impl.constraints.controllers.ConstraintController[] r2;
        int i0, i1;
        androidx.work.impl.constraints.controllers.ConstraintController r3;
        java.lang.Throwable $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>;

        i1 = 0;

        i0 = lengthof r2;

     label2:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        virtualinvoke r3.<androidx.work.impl.constraints.controllers.ConstraintController: void reset()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label4:
        exitmonitor r1;

        goto label7;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final boolean areAllConstraintsMet(java.lang.String)
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        java.lang.String r1, $r8, $r14, $r16;
        java.lang.Object r2;
        androidx.work.impl.constraints.controllers.ConstraintController[] $r3;
        int i0, i1;
        androidx.work.impl.constraints.controllers.ConstraintController r4, r5, r6, $r18;
        boolean z2, $z3, $z5;
        androidx.work.Logger $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15;
        java.lang.Class $r13;
        java.lang.Throwable $r17;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecId");

        r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>;

        entermonitor r2;

     label01:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.controllers.ConstraintController[] constraintControllers>;

        i1 = 0;

        i0 = lengthof $r3;

     label02:
        if i1 >= i0 goto label04;

        r4 = $r3[i1];

        r5 = r4;

        $z3 = virtualinvoke r5.<androidx.work.impl.constraints.controllers.ConstraintController: boolean isWorkSpecConstrained(java.lang.String)>(r1);

        if $z3 == 0 goto label03;

        $r18 = r4;

        goto label05;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        $r18 = null;

     label05:
        r6 = $r18;

        if r6 == null goto label06;

        $r7 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r8 = staticinvoke <androidx.work.impl.constraints.WorkConstraintsTrackerKt: java.lang.String access$getTAG$p()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Work ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constrained by ");

        $r13 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r8, $r16);

     label06:
        if r6 != null goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z2 = $z5;

     label09:
        exitmonitor r2;

        return z2;

     label10:
        $r17 := @caughtexception;

     label11:
        exitmonitor r2;

        throw $r17;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void onConstraintMet(java.util.List)
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        java.util.List r1, r5;
        java.lang.Object r2, r3, r21;
        androidx.work.impl.model.WorkSpec r4, $r22;
        java.util.ArrayList $r6;
        boolean $z1, $z2, $z7;
        androidx.work.impl.constraints.WorkConstraintsCallback $r7;
        androidx.work.Logger $r8;
        java.lang.String $r9, $r13, $r14;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.Throwable $r15;
        java.lang.Iterable $r16, $r19;
        java.util.Collection r17;
        java.util.Iterator $r18, $r20;
        kotlin.Unit $r23;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecs");

        r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r16 = (java.lang.Iterable) r1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r17 = (java.util.Collection) $r6;

        $r18 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r3 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.work.impl.model.WorkSpec) r3;

        $r14 = r4.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        $z2 = virtualinvoke r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: boolean areAllConstraintsMet(java.lang.String)>($r14);

        if $z2 == 0 goto label2;

        interfaceinvoke r17.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        goto label2;

     label3:
        r5 = (java.util.List) r17;

        $r19 = (java.lang.Iterable) r5;

        $r20 = interfaceinvoke $r19.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (androidx.work.impl.model.WorkSpec) r21;

        $r8 = staticinvoke <androidx.work.Logger: androidx.work.Logger get()>();

        $r9 = staticinvoke <androidx.work.impl.constraints.WorkConstraintsTrackerKt: java.lang.String access$getTAG$p()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraints met for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<androidx.work.Logger: void debug(java.lang.String,java.lang.String)>($r9, $r13);

        goto label4;

     label5:
        $r7 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.WorkConstraintsCallback callback>;

        if $r7 == null goto label6;

        interfaceinvoke $r7.<androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsMet(java.util.List)>(r5);

        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label6;

     label6:
        exitmonitor r2;

        goto label9;

     label7:
        $r15 := @caughtexception;

     label8:
        exitmonitor r2;

        throw $r15;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onConstraintNotMet(java.util.List)
    {
        androidx.work.impl.constraints.WorkConstraintsTrackerImpl r0;
        java.util.List r1;
        java.lang.Object r2;
        androidx.work.impl.constraints.WorkConstraintsCallback $r3;
        java.lang.Throwable $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.work.impl.constraints.WorkConstraintsTrackerImpl;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "workSpecs");

        r2 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $r3 = r0.<androidx.work.impl.constraints.WorkConstraintsTrackerImpl: androidx.work.impl.constraints.WorkConstraintsCallback callback>;

        if $r3 == null goto label2;

        interfaceinvoke $r3.<androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsNotMet(java.util.List)>(r1);

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label2;

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

