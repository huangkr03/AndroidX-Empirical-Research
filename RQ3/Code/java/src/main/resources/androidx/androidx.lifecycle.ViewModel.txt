androidx.lifecycle.ViewModel
<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>
<androidx.lifecycle.ViewModel: java.util.Set mCloseables>
<androidx.lifecycle.ViewModel: boolean mCleared>
    public void <init>()
    {
        androidx.lifecycle.ViewModel r0;
        java.util.HashMap $r1;
        java.util.LinkedHashSet $r2;

        r0 := @this: androidx.lifecycle.ViewModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags> = $r1;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables> = $r2;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 0;

        return;
    }

    public transient void <init>(java.io.Closeable[])
    {
        androidx.lifecycle.ViewModel r0;
        java.io.Closeable[] r1;
        java.util.HashMap $r2;
        java.util.LinkedHashSet $r3;
        java.util.Set $r4;
        java.util.List $r5;

        r0 := @this: androidx.lifecycle.ViewModel;

        r1 := @parameter0: java.io.Closeable[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables> = $r3;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 0;

        $r4 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return;
    }

    public void addCloseable(java.io.Closeable)
    {
        androidx.lifecycle.ViewModel r0;
        java.io.Closeable r1;
        java.util.Set r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;

        r0 := @this: androidx.lifecycle.ViewModel;

        r1 := @parameter0: java.io.Closeable;

        $r4 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        if $r4 == null goto label5;

        $r5 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onCleared()
    {
        androidx.lifecycle.ViewModel r0;

        r0 := @this: androidx.lifecycle.ViewModel;

        return;
    }

    final void clear()
    {
        androidx.lifecycle.ViewModel r0;
        java.lang.Throwable r1, r2, $r11, $r12;
        java.util.Map $r3, $r8, $r9, r13;
        java.util.Set $r4, $r5, $r6, r16;
        boolean $z0, $z1;
        java.lang.Object $r7, r15;
        java.util.Collection $r10;
        java.util.Iterator r14, r17;
        java.io.Closeable r18;

        r0 := @this: androidx.lifecycle.ViewModel;

        r0.<androidx.lifecycle.ViewModel: boolean mCleared> = 1;

        $r3 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $r3 == null goto label07;

        $r8 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        r13 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Collection values()>();

        r14 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label03;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>(r15);

        goto label02;

     label03:
        exitmonitor r13;

     label04:
        goto label07;

     label05:
        $r11 := @caughtexception;

        r1 = $r11;

        exitmonitor r13;

     label06:
        throw r1;

     label07:
        $r4 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        if $r4 == null goto label14;

        $r5 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        r16 = $r5;

        entermonitor $r5;

     label08:
        $r6 = r0.<androidx.lifecycle.ViewModel: java.util.Set mCloseables>;

        r17 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.io.Closeable) $r7;

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>(r18);

        goto label09;

     label10:
        exitmonitor r16;

     label11:
        goto label14;

     label12:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r16;

     label13:
        throw r2;

     label14:
        virtualinvoke r0.<androidx.lifecycle.ViewModel: void onCleared()>();

        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    java.lang.Object setTagIfAbsent(java.lang.String, java.lang.Object)
    {
        androidx.lifecycle.ViewModel r0;
        java.lang.String r1;
        java.lang.Object r2, r3, $r11, r12;
        java.lang.Throwable r4, $r9;
        java.util.Map $r5, $r6, $r7, r10;
        boolean $z0;

        r0 := @this: androidx.lifecycle.ViewModel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        r10 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        r3 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r3 != null goto label2;

        $r7 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        exitmonitor r10;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r10;

     label5:
        throw r4;

     label6:
        if r3 != null goto label7;

        $r11 = r2;

        goto label8;

     label7:
        $r11 = r3;

     label8:
        r12 = $r11;

        $z0 = r0.<androidx.lifecycle.ViewModel: boolean mCleared>;

        if $z0 == 0 goto label9;

        staticinvoke <androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)>(r12);

     label9:
        return r12;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    java.lang.Object getTag(java.lang.String)
    {
        androidx.lifecycle.ViewModel r0;
        java.lang.String r1;
        java.util.Map r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.lifecycle.ViewModel;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<androidx.lifecycle.ViewModel: java.util.Map mBagOfTags>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static void closeWithRuntimeException(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        java.io.Closeable $r2;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.io.Closeable;

        if $z0 == 0 goto label4;

     label1:
        $r2 = (java.io.Closeable) r0;

        interfaceinvoke $r2.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

