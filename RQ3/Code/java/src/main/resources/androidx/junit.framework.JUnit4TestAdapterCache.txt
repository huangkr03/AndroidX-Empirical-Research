junit.framework.JUnit4TestAdapterCache
<junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance>
<junit.framework.JUnit4TestAdapterCache: long serialVersionUID>
    static void <clinit>()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        $r0 = new junit.framework.JUnit4TestAdapterCache;

        specialinvoke $r0.<junit.framework.JUnit4TestAdapterCache: void <init>()>();

        <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance> = $r0;

        return;
    }

    public void <init>()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return;
    }

    public static junit.framework.JUnit4TestAdapterCache getDefault()
    {
        junit.framework.JUnit4TestAdapterCache r0;

        r0 = <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance>;

        return r0;
    }

    public junit.framework.Test asTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache $r0;
        org.junit.runner.Description $r1;
        boolean $z0;
        junit.framework.Test $r2;
        java.lang.Object $r3;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache;

        $r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke $r1.<org.junit.runner.Description: boolean isSuite()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>($r1);

        return $r2;

     label1:
        $z0 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>($r1);

        virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label2:
        $r3 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object get(java.lang.Object)>($r1);

        $r2 = (junit.framework.Test) $r3;

        return $r2;
    }

    public java.util.List asTestList(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache $r0;
        org.junit.runner.Description $r1;
        boolean $z0;
        junit.framework.Test[] $r2;
        junit.framework.Test $r3;
        java.util.List $r4;
        java.util.ArrayList $r5, $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache;

        $r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke $r1.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r2 = newarray (junit.framework.Test)[1];

        $r3 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r4;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke $r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.junit.runner.Description) $r8;

        $r3 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label2;

     label3:
        return $r5;
    }

    junit.framework.Test createTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache $r0;
        org.junit.runner.Description $r1;
        junit.framework.TestSuite $r2;
        boolean $z0;
        junit.framework.JUnit4TestCaseFacade $r3;
        java.lang.String $r4;
        java.util.ArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        junit.framework.Test $r8;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache;

        $r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke $r1.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r3 = new junit.framework.JUnit4TestCaseFacade;

        specialinvoke $r3.<junit.framework.JUnit4TestCaseFacade: void <init>(org.junit.runner.Description)>($r1);

        return $r3;

     label1:
        $r2 = new junit.framework.TestSuite;

        $r4 = virtualinvoke $r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        specialinvoke $r2.<junit.framework.TestSuite: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.junit.runner.Description) $r7;

        $r8 = virtualinvoke $r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r1);

        virtualinvoke $r2.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r8);

        goto label2;

     label3:
        return $r2;
    }

    public org.junit.runner.notification.RunNotifier getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)
    {
        junit.framework.JUnit4TestAdapterCache $r0;
        junit.framework.TestResult $r1;
        junit.framework.JUnit4TestAdapter $r2;
        org.junit.runner.notification.RunNotifier $r3;
        junit.framework.JUnit4TestAdapterCache$1 $r4;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache;

        $r1 := @parameter0: junit.framework.TestResult;

        $r2 := @parameter1: junit.framework.JUnit4TestAdapter;

        $r3 = new org.junit.runner.notification.RunNotifier;

        specialinvoke $r3.<org.junit.runner.notification.RunNotifier: void <init>()>();

        $r4 = new junit.framework.JUnit4TestAdapterCache$1;

        specialinvoke $r4.<junit.framework.JUnit4TestAdapterCache$1: void <init>(junit.framework.JUnit4TestAdapterCache,junit.framework.TestResult)>($r0, $r1);

        virtualinvoke $r3.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>($r4);

        return $r3;
    }

junit.framework.JUnit4TestAdapterCache$1
<junit.framework.JUnit4TestAdapterCache$1: junit.framework.JUnit4TestAdapterCache this$0>
<junit.framework.JUnit4TestAdapterCache$1: junit.framework.TestResult val$result>
    void <init>(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)
    {
        junit.framework.JUnit4TestAdapterCache$1 $r0;
        junit.framework.JUnit4TestAdapterCache $r1;
        junit.framework.TestResult $r2;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache$1;

        $r1 := @parameter0: junit.framework.JUnit4TestAdapterCache;

        $r2 := @parameter1: junit.framework.TestResult;

        $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.JUnit4TestAdapterCache this$0> = $r1;

        $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.TestResult val$result> = $r2;

        specialinvoke $r0.<org.junit.runner.notification.RunListener: void <init>()>();

        return;
    }

    public void testFailure(org.junit.runner.notification.Failure) throws java.lang.Exception
    {
        junit.framework.JUnit4TestAdapterCache$1 $r0;
        org.junit.runner.notification.Failure $r1;
        junit.framework.TestResult $r2;
        junit.framework.JUnit4TestAdapterCache $r3;
        org.junit.runner.Description $r4;
        junit.framework.Test $r5;
        java.lang.Throwable $r6;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache$1;

        $r1 := @parameter0: org.junit.runner.notification.Failure;

        $r2 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.TestResult val$result>;

        $r3 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.JUnit4TestAdapterCache this$0>;

        $r4 = virtualinvoke $r1.<org.junit.runner.notification.Failure: org.junit.runner.Description getDescription()>();

        $r5 = virtualinvoke $r3.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r4);

        $r6 = virtualinvoke $r1.<org.junit.runner.notification.Failure: java.lang.Throwable getException()>();

        virtualinvoke $r2.<junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>($r5, $r6);

        return;
    }

    public void testFinished(org.junit.runner.Description) throws java.lang.Exception
    {
        junit.framework.JUnit4TestAdapterCache$1 $r0;
        org.junit.runner.Description $r1;
        junit.framework.TestResult $r2;
        junit.framework.Test $r3;
        junit.framework.JUnit4TestAdapterCache $r4;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache$1;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.TestResult val$result>;

        $r4 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.JUnit4TestAdapterCache this$0>;

        $r3 = virtualinvoke $r4.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r1);

        virtualinvoke $r2.<junit.framework.TestResult: void endTest(junit.framework.Test)>($r3);

        return;
    }

    public void testStarted(org.junit.runner.Description) throws java.lang.Exception
    {
        junit.framework.JUnit4TestAdapterCache$1 $r0;
        org.junit.runner.Description $r1;
        junit.framework.TestResult $r2;
        junit.framework.Test $r3;
        junit.framework.JUnit4TestAdapterCache $r4;

        $r0 := @this: junit.framework.JUnit4TestAdapterCache$1;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.TestResult val$result>;

        $r4 = $r0.<junit.framework.JUnit4TestAdapterCache$1: junit.framework.JUnit4TestAdapterCache this$0>;

        $r3 = virtualinvoke $r4.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r1);

        virtualinvoke $r2.<junit.framework.TestResult: void startTest(junit.framework.Test)>($r3);

        return;
    }

