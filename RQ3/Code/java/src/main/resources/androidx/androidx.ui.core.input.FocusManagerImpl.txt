androidx.ui.core.input.FocusManagerImpl
<androidx.ui.core.input.FocusManagerImpl: androidx.ui.core.input.FocusNode focusedClient>
<androidx.ui.core.input.FocusManagerImpl: java.util.Map observerMap>
<androidx.ui.core.input.FocusManagerImpl: java.util.Map focusMap>
    public void <init>()
    {
        androidx.ui.core.input.FocusManagerImpl r0, r3, r5;
        java.util.LinkedHashMap $r1, $r2;
        boolean z0, z1;
        java.util.Map r4, r6;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = r0;

        z0 = 0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r4 = (java.util.Map) $r1;

        r3.<androidx.ui.core.input.FocusManagerImpl: java.util.Map observerMap> = r4;

        r5 = r0;

        z1 = 0;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r6 = (java.util.Map) $r2;

        r5.<androidx.ui.core.input.FocusManagerImpl: java.util.Map focusMap> = r6;

        return;
    }

    public void requestFocusById(java.lang.String)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        java.lang.String r1;
        androidx.ui.core.input.FocusNode r2, r3, r4;
        boolean z0, z1;
        java.util.Map $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "identifier");

        $r5 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map focusMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.ui.core.input.FocusNode) $r6;

        if r2 != null goto label1;

        goto label2;

     label1:
        r3 = r2;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        virtualinvoke r0.<androidx.ui.core.input.FocusManagerImpl: void requestFocus(androidx.ui.core.input.FocusNode)>(r4);

     label2:
        return;
    }

    public void registerFocusNode(java.lang.String, androidx.ui.core.input.FocusNode)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        java.lang.String r1;
        androidx.ui.core.input.FocusNode r2;
        java.util.Map r3;
        boolean z0;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.ui.core.input.FocusNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "identifier");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "node");

        r3 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map focusMap>;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void unregisterFocusNode(java.lang.String)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.ui.core.input.FocusNode $r4;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "identifier");

        $r2 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map focusMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (androidx.ui.core.input.FocusNode) $r3;

        return;
    }

    public void requestFocus(androidx.ui.core.input.FocusNode)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        androidx.ui.core.input.FocusNode r1, r2;
        boolean $z0;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: androidx.ui.core.input.FocusNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "client");

        r2 = r0.<androidx.ui.core.input.FocusManagerImpl: androidx.ui.core.input.FocusNode focusedClient>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.ui.core.input.FocusManagerImpl: androidx.ui.core.input.FocusNode focusedClient> = r1;

        specialinvoke r0.<androidx.ui.core.input.FocusManagerImpl: void callFocusTransition(androidx.ui.core.input.FocusNode,androidx.ui.core.input.FocusNode)>(r2, r1);

        return;
    }

    public void blur(androidx.ui.core.input.FocusNode)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        androidx.ui.core.input.FocusNode r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: androidx.ui.core.input.FocusNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "client");

        $r2 = r0.<androidx.ui.core.input.FocusManagerImpl: androidx.ui.core.input.FocusNode focusedClient>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        $r3 = (androidx.ui.core.input.FocusNode) null;

        r0.<androidx.ui.core.input.FocusManagerImpl: androidx.ui.core.input.FocusNode focusedClient> = $r3;

        $r4 = (androidx.ui.core.input.FocusNode) null;

        specialinvoke r0.<androidx.ui.core.input.FocusManagerImpl: void callFocusTransition(androidx.ui.core.input.FocusNode,androidx.ui.core.input.FocusNode)>(r1, $r4);

     label1:
        return;
    }

    private final void callFocusTransition(androidx.ui.core.input.FocusNode, androidx.ui.core.input.FocusNode)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        androidx.ui.core.input.FocusNode r1, r2;
        java.util.List r3, $r13, $r17, r18;
        java.util.Iterator r4;
        java.lang.Object r5, $r7, r15;
        kotlin.jvm.functions.Function2 r6;
        java.lang.Iterable $r8, $r10;
        java.util.Map $r11, $r12;
        java.util.Collection r14, r16;
        boolean $z6;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: androidx.ui.core.input.FocusNode;

        r2 := @parameter1: androidx.ui.core.input.FocusNode;

        $r12 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map observerMap>;

        $r7 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (java.util.List) $r7;

        if $r13 == null goto label1;

        goto label2;

     label1:
        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label2:
        r14 = (java.util.Collection) $r13;

        $r11 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map observerMap>;

        r15 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r16 = r14;

        $r17 = (java.util.List) r15;

        if $r17 == null goto label3;

        goto label4;

     label3:
        $r17 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label4:
        r18 = $r17;

        $r8 = (java.lang.Iterable) r18;

        r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>(r16, $r8);

        $r10 = (java.lang.Iterable) r3;

        r4 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (kotlin.jvm.functions.Function2) r5;

        interfaceinvoke r6.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label5;

     label6:
        return;
    }

    public void registerObserver(androidx.ui.core.input.FocusNode, kotlin.jvm.functions.Function2)
    {
        androidx.ui.core.input.FocusManagerImpl r0;
        androidx.ui.core.input.FocusNode r1;
        kotlin.jvm.functions.Function2 r2;
        java.util.Map $r3;
        java.lang.Object r4, $r9;
        boolean z1;
        java.util.List $r5, $r8;
        java.util.ArrayList $r6;

        r0 := @this: androidx.ui.core.input.FocusManagerImpl;

        r1 := @parameter0: androidx.ui.core.input.FocusNode;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "observer");

        $r3 = r0.<androidx.ui.core.input.FocusManagerImpl: java.util.Map observerMap>;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label1;

        z1 = 0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r8 = (java.util.List) $r6;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

        $r9 = $r8;

        goto label2;

     label1:
        $r9 = r4;

     label2:
        $r5 = (java.util.List) $r9;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

