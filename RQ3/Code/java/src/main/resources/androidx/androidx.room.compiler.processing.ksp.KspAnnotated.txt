androidx.room.compiler.processing.ksp.KspAnnotated
<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion>
<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
    private void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        return $r1;
    }

<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence annotations()>
    private final kotlin.sequences.Sequence findAnnotations(kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        kotlin.reflect.KClass r1;
        kotlin.sequences.Sequence $r2, $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence annotations()>();

        $r3 = new androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: void <init>(androidx.room.compiler.processing.ksp.KspAnnotated,kotlin.reflect.KClass)>(r0, r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r2, $r4);

        return $r5;
    }

    public java.util.List getAllAnnotations()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        kotlin.sequences.Sequence $r1, $r4, $r7;
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1 $r2;
        kotlin.jvm.functions.Function1 $r3, $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 $r5;
        java.util.List $r8;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence annotations()>();

        $r2 = new androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1: void <init>(androidx.room.compiler.processing.ksp.KspAnnotated)>(r0);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r4 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r1, $r3);

        $r5 = <androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 INSTANCE>;

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        $r7 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence flatMapIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r4, $r6);

        $r8 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r7);

        return $r8;
    }

    public java.util.List getAnnotations(kotlin.reflect.KClass, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        kotlin.reflect.KClass r1, r2;
        com.google.devtools.ksp.symbol.KSAnnotation r3, $r13;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r4;
        java.lang.Class r5;
        kotlin.sequences.Sequence $r6, $r9, $r11;
        androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2 $r7;
        kotlin.jvm.functions.Function1 $r8;
        java.util.List $r10, $r16;
        java.lang.Object $r12;
        androidx.room.compiler.processing.ksp.KspAnnotationBox $r14;
        androidx.room.compiler.processing.XAnnotationBox[] $r15;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        if r2 == null goto label1;

        $r11 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence findAnnotations(kotlin.reflect.KClass)>(r2);

        $r12 = staticinvoke <kotlin.sequences.SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)>($r11);

        $r13 = (com.google.devtools.ksp.symbol.KSAnnotation) $r12;

        if $r13 == null goto label1;

        r3 = $r13;

        r4 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        r5 = staticinvoke <kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)>(r2);

        $r14 = new androidx.room.compiler.processing.ksp.KspAnnotationBox;

        specialinvoke $r14.<androidx.room.compiler.processing.ksp.KspAnnotationBox: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,java.lang.Class,com.google.devtools.ksp.symbol.KSAnnotation)>(r4, r5, r3);

        $r15 = virtualinvoke $r14.<androidx.room.compiler.processing.ksp.KspAnnotationBox: androidx.room.compiler.processing.XAnnotationBox[] getAsAnnotationBoxArray(java.lang.String)>("value");

        $r16 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>($r15);

        return $r16;

     label1:
        $r6 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence findAnnotations(kotlin.reflect.KClass)>(r1);

        $r7 = new androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2;

        specialinvoke $r7.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: void <init>(androidx.room.compiler.processing.ksp.KspAnnotated,kotlin.reflect.KClass)>(r0, r1);

        $r8 = (kotlin.jvm.functions.Function1) $r7;

        $r9 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r6, $r8);

        $r10 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>($r9);

        return $r10;
    }

    public boolean hasAnnotationWithPackage(java.lang.String)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        java.lang.String r1, $r10;
        kotlin.sequences.Sequence $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        com.google.devtools.ksp.symbol.KSAnnotation r5;
        boolean $z2, $z3, $z4;
        com.google.devtools.ksp.symbol.KSTypeReference $r6;
        com.google.devtools.ksp.symbol.KSType $r7;
        com.google.devtools.ksp.symbol.KSDeclaration $r8;
        com.google.devtools.ksp.symbol.KSName $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pkg");

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence annotations()>();

        r3 = interfaceinvoke $r2.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.devtools.ksp.symbol.KSAnnotation) r4;

        $r6 = interfaceinvoke r5.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSTypeReference getAnnotationType()>();

        $r7 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r8 = interfaceinvoke $r7.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r9 = interfaceinvoke $r8.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r9 == null goto label2;

        $r10 = interfaceinvoke $r9.<com.google.devtools.ksp.symbol.KSName: java.lang.String getQualifier()>();

        goto label3;

     label2:
        $r10 = null;

     label3:
        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;
    }

    public boolean hasAnnotation(kotlin.reflect.KClass, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        kotlin.reflect.KClass r1, r2;
        kotlin.sequences.Sequence $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        com.google.devtools.ksp.symbol.KSAnnotation r6;
        boolean $z2, $z3, $z4, $z5, $z6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: kotlin.reflect.KClass;

        r2 := @parameter1: kotlin.reflect.KClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: kotlin.sequences.Sequence annotations()>();

        r4 = interfaceinvoke $r3.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.google.devtools.ksp.symbol.KSAnnotation) r5;

        $z3 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean isSameAnnotationClass(com.google.devtools.ksp.symbol.KSAnnotation,kotlin.reflect.KClass)>(r6, r1);

        if $z3 != 0 goto label2;

        if r2 == null goto label3;

        $z4 = specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean isSameAnnotationClass(com.google.devtools.ksp.symbol.KSAnnotation,kotlin.reflect.KClass)>(r6, r2);

        if $z4 == 0 goto label3;

     label2:
        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        if $z5 == 0 goto label1;

        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        return $z6;
    }

    private final boolean isSameAnnotationClass(com.google.devtools.ksp.symbol.KSAnnotation, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        kotlin.reflect.KClass r2;
        java.lang.String r3, $r7, $r8;
        com.google.devtools.ksp.symbol.KSTypeReference $r4, $r10;
        com.google.devtools.ksp.symbol.KSType $r5, $r11;
        boolean $z0, $z1;
        com.google.devtools.ksp.symbol.KSName $r6;
        com.google.devtools.ksp.symbol.KSTypeAlias $r9;
        com.google.devtools.ksp.symbol.KSDeclaration r12;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        r2 := @parameter1: kotlin.reflect.KClass;

        $r4 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSTypeReference getAnnotationType()>();

        $r5 = interfaceinvoke $r4.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        r12 = interfaceinvoke $r5.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

     label1:
        $z0 = r12 instanceof com.google.devtools.ksp.symbol.KSTypeAlias;

        if $z0 == 0 goto label2;

        $r9 = (com.google.devtools.ksp.symbol.KSTypeAlias) r12;

        $r10 = interfaceinvoke $r9.<com.google.devtools.ksp.symbol.KSTypeAlias: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        $r11 = interfaceinvoke $r10.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        r12 = interfaceinvoke $r11.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        goto label1;

     label2:
        $r6 = interfaceinvoke r12.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r6 == null goto label3;

        $r7 = interfaceinvoke $r6.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        if $r7 != null goto label4;

     label3:
        return 0;

     label4:
        r3 = $r7;

        $r8 = interfaceinvoke r2.<kotlin.reflect.KClass: java.lang.String getQualifiedName()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r8);

        return $z1;
    }

    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        $r2 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r1);

        return;
    }

    public static final boolean access$isSameAnnotationClass(androidx.room.compiler.processing.ksp.KspAnnotated, com.google.devtools.ksp.symbol.KSAnnotation, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated $r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        kotlin.reflect.KClass r2;
        boolean $z0;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated;

        r1 := @parameter1: com.google.devtools.ksp.symbol.KSAnnotation;

        r2 := @parameter2: kotlin.reflect.KClass;

        $z0 = specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotated: boolean isSameAnnotationClass(com.google.devtools.ksp.symbol.KSAnnotation,kotlin.reflect.KClass)>(r1, r2);

        return $z0;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspAnnotated$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspAnnotated$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated create(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSAnnotated, androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSAnnotated r2, r4;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter r3;
        androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate $r6;
        androidx.room.compiler.processing.ksp.KspAnnotated $r7;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$Companion;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSAnnotated;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "filter");

        if r2 == null goto label1;

        r4 = r2;

        $r6 = new androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotated,androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)>(r1, r4, r3);

        $r7 = (androidx.room.compiler.processing.ksp.KspAnnotated) $r6;

        goto label2;

     label1:
        $r5 = new androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated;

        specialinvoke $r5.<androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv)>(r1);

        $r7 = (androidx.room.compiler.processing.ksp.KspAnnotated) $r5;

     label2:
        return $r7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1
<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0>
<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: kotlin.reflect.KClass $annotation>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotated, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1 r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        kotlin.reflect.KClass $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated;

        $r2 := @parameter1: kotlin.reflect.KClass;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: kotlin.reflect.KClass $annotation> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1 r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        kotlin.reflect.KClass $r2;
        androidx.room.compiler.processing.ksp.KspAnnotated $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0>;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: kotlin.reflect.KClass $annotation>;

        $z0 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotated: boolean access$isSameAnnotationClass(androidx.room.compiler.processing.ksp.KspAnnotated,com.google.devtools.ksp.symbol.KSAnnotation,kotlin.reflect.KClass)>($r3, r1, $r2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1 r0;
        java.lang.Object r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotation) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$findAnnotations$1: java.lang.Boolean invoke(com.google.devtools.ksp.symbol.KSAnnotation)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1
<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotated)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1 r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotation invoke(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1 r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        androidx.room.compiler.processing.ksp.KspAnnotation $r2;
        androidx.room.compiler.processing.ksp.KspAnnotated $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "ksAnnotated");

        $r2 = new androidx.room.compiler.processing.ksp.KspAnnotation;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotated this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotation: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,com.google.devtools.ksp.symbol.KSAnnotation)>($r4, r1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1 r0;
        java.lang.Object r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;
        androidx.room.compiler.processing.ksp.KspAnnotation $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotation) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$1: androidx.room.compiler.processing.ksp.KspAnnotation invoke(com.google.devtools.ksp.symbol.KSAnnotation)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2
<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 INSTANCE>
    void <init>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.util.List invoke(androidx.room.compiler.processing.ksp.KspAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation r1;
        androidx.room.compiler.processing.XAnnotation $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = (androidx.room.compiler.processing.XAnnotation) r1;

        $r3 = staticinvoke <androidx.room.compiler.processing.InternalXAnnotationKt: java.util.List unwrapRepeatedAnnotationsFromContainer(androidx.room.compiler.processing.XAnnotation)>($r2);

        if $r3 != null goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r1);

     label1:
        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.ksp.KspAnnotation $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.compiler.processing.ksp.KspAnnotation) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2: java.util.List invoke(androidx.room.compiler.processing.ksp.KspAnnotation)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 $r0;

        $r0 = new androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated$getAllAnnotations$2 INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2
<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated this$0>
<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: kotlin.reflect.KClass $annotation>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotated, kotlin.reflect.KClass)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotated $r1;
        kotlin.reflect.KClass $r2;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated;

        $r2 := @parameter1: kotlin.reflect.KClass;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated this$0> = $r1;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: kotlin.reflect.KClass $annotation> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotationBox invoke(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2 r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        androidx.room.compiler.processing.ksp.KspAnnotationBox $r2;
        androidx.room.compiler.processing.ksp.KspAnnotated $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4;
        kotlin.reflect.KClass $r5;
        java.lang.Class $r6;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new androidx.room.compiler.processing.ksp.KspAnnotationBox;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotated this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r5 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: kotlin.reflect.KClass $annotation>;

        $r6 = staticinvoke <kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)>($r5);

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotationBox: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,java.lang.Class,com.google.devtools.ksp.symbol.KSAnnotation)>($r4, $r6, r1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2 r0;
        java.lang.Object r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;
        androidx.room.compiler.processing.ksp.KspAnnotationBox $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotation) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$getAnnotations$2: androidx.room.compiler.processing.ksp.KspAnnotationBox invoke(com.google.devtools.ksp.symbol.KSAnnotation)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1
<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1 r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1 r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate $r2;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate this$0>;

        $r3 = staticinvoke <androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter access$getUseSiteFilter$p(androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate)>($r2);

        $z0 = interfaceinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: boolean accept(com.google.devtools.ksp.symbol.KSAnnotation)>(r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1 r0;
        java.lang.Object r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.devtools.ksp.symbol.KSAnnotation) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1: java.lang.Boolean invoke(com.google.devtools.ksp.symbol.KSAnnotation)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate
<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: com.google.devtools.ksp.symbol.KSAnnotated delegate>
<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter useSiteFilter>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSAnnotated, androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSAnnotated r2;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSAnnotated;

        r3 := @parameter2: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "delegate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "useSiteFilter");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: com.google.devtools.ksp.symbol.KSAnnotated delegate> = r2;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter useSiteFilter> = r3;

        return;
    }

    public kotlin.sequences.Sequence annotations()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate r0;
        com.google.devtools.ksp.symbol.KSAnnotated $r1;
        kotlin.sequences.Sequence $r2, $r5;
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1 $r3;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: com.google.devtools.ksp.symbol.KSAnnotated delegate>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSAnnotated: kotlin.sequences.Sequence getAnnotations()>();

        $r3 = new androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate$annotations$1: void <init>(androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>($r2, $r4);

        return $r5;
    }

    public static final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter access$getUseSiteFilter$p(androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate $r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate;

        $r1 = $r0.<androidx.room.compiler.processing.ksp.KspAnnotated$KSAnnotatedDelegate: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter useSiteFilter>;

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null);

        return;
    }

    public kotlin.sequences.Sequence annotations()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated r0;
        kotlin.sequences.Sequence $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$NotAnnotated;

        $r1 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1
    void <init>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1 r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1 r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget getUseSiteTarget()>();

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $$INSTANCE>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_FIELD>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_METHOD_PARAMETER>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_GETTER>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SETTER>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SET_PARAM>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter FILE>
    private void <init>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_FIELD()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_FIELD>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_METHOD_PARAMETER()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_METHOD_PARAMETER>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_GETTER()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_GETTER>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_SETTER()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SETTER>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getNO_USE_SITE_OR_SET_PARAM()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SET_PARAM>;

        return $r1;
    }

    public final androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter getFILE()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        $r1 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter FILE>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r0;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1 $r1;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter $r2, $r5, $r8, $r11, $r14, $r17, $r20;
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl $r3, $r6, $r9, $r12, $r15, $r18;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget $r4, $r7, $r10, $r13, $r16, $r19;

        $r0 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: void <init>()>();

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $$INSTANCE> = $r0;

        $r1 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1;

        specialinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion$NO_USE_SITE$1: void <init>()>();

        $r2 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r1;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE> = $r2;

        $r3 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r4 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget FIELD>;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r4, 0, 2, null);

        $r5 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r3;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_FIELD> = $r5;

        $r6 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r7 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget PARAM>;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r7, 0, 2, null);

        $r8 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r6;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_METHOD_PARAMETER> = $r8;

        $r9 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r10 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget GET>;

        specialinvoke $r9.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r10, 0, 2, null);

        $r11 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r9;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_GETTER> = $r11;

        $r12 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r13 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget SET>;

        specialinvoke $r12.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r13, 0, 2, null);

        $r14 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r12;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SETTER> = $r14;

        $r15 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r16 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget SETPARAM>;

        specialinvoke $r15.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r16, 0, 2, null);

        $r17 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r15;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter NO_USE_SITE_OR_SET_PARAM> = $r17;

        $r18 = new androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r19 = <com.google.devtools.ksp.symbol.AnnotationUseSiteTarget: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget FILE>;

        specialinvoke $r18.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean)>($r19, 0);

        $r20 = (androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter) $r18;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter FILE> = $r20;

        return;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget acceptedTarget>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: boolean acceptNoTarget>
    public void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget, boolean)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl r0;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget r1;
        boolean z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        r1 := @parameter0: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "acceptedTarget");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget acceptedTarget> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: boolean acceptNoTarget> = z0;

        return;
    }

    public void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl r0;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        boolean z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        r1 := @parameter0: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        specialinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: void <init>(com.google.devtools.ksp.symbol.AnnotationUseSiteTarget,boolean)>(r1, z0);

        return;
    }

    public final com.google.devtools.ksp.symbol.AnnotationUseSiteTarget getAcceptedTarget()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl r0;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget acceptedTarget>;

        return $r1;
    }

    public boolean accept(com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl r0;
        com.google.devtools.ksp.symbol.KSAnnotation r1;
        com.google.devtools.ksp.symbol.AnnotationUseSiteTarget r2, $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl;

        r1 := @parameter0: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        r2 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget getUseSiteTarget()>();

        if r2 != null goto label1;

        $z0 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: boolean acceptNoTarget>;

        goto label3;

     label1:
        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Impl: com.google.devtools.ksp.symbol.AnnotationUseSiteTarget acceptedTarget>;

        if $r3 != r2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion>
<androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: boolean accept(com.google.devtools.ksp.symbol.KSAnnotation)>
    static void <clinit>()
    {
        androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $r0;

        $r0 = <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion $$INSTANCE>;

        <androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter: androidx.room.compiler.processing.ksp.KspAnnotated$UseSiteFilter$Companion Companion> = $r0;

        return;
    }

