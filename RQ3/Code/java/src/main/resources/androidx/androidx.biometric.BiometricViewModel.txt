androidx.biometric.BiometricViewModel
<androidx.biometric.BiometricViewModel: java.util.concurrent.Executor mClientExecutor>
<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback>
<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>
<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject>
<androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider mAuthenticationCallbackProvider>
<androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider mCancellationSignalProvider>
<androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener mNegativeButtonListener>
<androidx.biometric.BiometricViewModel: java.lang.CharSequence mNegativeButtonTextOverride>
<androidx.biometric.BiometricViewModel: int mCanceledFrom>
<androidx.biometric.BiometricViewModel: boolean mIsPromptShowing>
<androidx.biometric.BiometricViewModel: boolean mIsAwaitingResult>
<androidx.biometric.BiometricViewModel: boolean mIsConfirmingDeviceCredential>
<androidx.biometric.BiometricViewModel: boolean mIsDelayingPrompt>
<androidx.biometric.BiometricViewModel: boolean mIsIgnoringCancel>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending>
<androidx.biometric.BiometricViewModel: boolean mIsFingerprintDialogDismissedInstantly>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending>
<androidx.biometric.BiometricViewModel: int mFingerprintDialogPreviousState>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState>
<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage>
    public void <init>()
    {
        androidx.biometric.BiometricViewModel r0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        specialinvoke r0.<androidx.lifecycle.ViewModel: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: int mCanceledFrom> = 0;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsFingerprintDialogDismissedInstantly> = 1;

        r0.<androidx.biometric.BiometricViewModel: int mFingerprintDialogPreviousState> = 0;

        return;
    }

    java.util.concurrent.Executor getClientExecutor()
    {
        androidx.biometric.BiometricViewModel r0;
        java.util.concurrent.Executor $r1, r4;
        java.lang.Object $r2;
        androidx.biometric.BiometricViewModel$DefaultExecutor r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: java.util.concurrent.Executor mClientExecutor>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.biometric.BiometricViewModel: java.util.concurrent.Executor mClientExecutor>;

        goto label2;

     label1:
        r3 = new androidx.biometric.BiometricViewModel$DefaultExecutor;

        $r2 = r3;

        specialinvoke r3.<androidx.biometric.BiometricViewModel$DefaultExecutor: void <init>()>();

     label2:
        r4 = (java.util.concurrent.Executor) $r2;

        return r4;
    }

    void setClientExecutor(java.util.concurrent.Executor)
    {
        androidx.biometric.BiometricViewModel r0;
        java.util.concurrent.Executor r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<androidx.biometric.BiometricViewModel: java.util.concurrent.Executor mClientExecutor> = r1;

        return;
    }

    androidx.biometric.BiometricPrompt$AuthenticationCallback getClientCallback()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$AuthenticationCallback $r1, $r2;
        androidx.biometric.BiometricViewModel$1 $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback>;

        if $r1 != null goto label1;

        $r3 = new androidx.biometric.BiometricViewModel$1;

        specialinvoke $r3.<androidx.biometric.BiometricViewModel$1: void <init>(androidx.biometric.BiometricViewModel)>(r0);

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback>;

        return $r2;
    }

    void setClientCallback(androidx.biometric.BiometricPrompt$AuthenticationCallback)
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$AuthenticationCallback r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$AuthenticationCallback;

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback> = r1;

        return;
    }

    void resetClientCallback()
    {
        androidx.biometric.BiometricViewModel r0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$AuthenticationCallback mClientCallback> = null;

        return;
    }

    void setPromptInfo(androidx.biometric.BiometricPrompt$PromptInfo)
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$PromptInfo;

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo> = r1;

        return;
    }

    java.lang.CharSequence getTitle()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $r3 = virtualinvoke $r2.<androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getTitle()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    java.lang.CharSequence getSubtitle()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $r3 = virtualinvoke $r2.<androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getSubtitle()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    java.lang.CharSequence getDescription()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $r3 = virtualinvoke $r2.<androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getDescription()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    java.lang.CharSequence getNegativeButtonText()
    {
        androidx.biometric.BiometricViewModel r0;
        java.lang.CharSequence $r1, $r4, $r5;
        androidx.biometric.BiometricPrompt$PromptInfo $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: java.lang.CharSequence mNegativeButtonTextOverride>;

        if $r1 == null goto label1;

        $r5 = r0.<androidx.biometric.BiometricViewModel: java.lang.CharSequence mNegativeButtonTextOverride>;

        return $r5;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $r4 = virtualinvoke $r3.<androidx.biometric.BiometricPrompt$PromptInfo: java.lang.CharSequence getNegativeButtonText()>();

        return $r4;

     label2:
        return null;
    }

    boolean isConfirmationRequired()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $z0 = virtualinvoke $r2.<androidx.biometric.BiometricPrompt$PromptInfo: boolean isConfirmationRequired()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    int getAllowedAuthenticators()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$PromptInfo $r1, $r3;
        androidx.biometric.BiometricPrompt$CryptoObject $r2;
        int $i0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$PromptInfo mPromptInfo>;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject>;

        $i0 = staticinvoke <androidx.biometric.AuthenticatorUtils: int getConsolidatedAuthenticators(androidx.biometric.BiometricPrompt$PromptInfo,androidx.biometric.BiometricPrompt$CryptoObject)>($r3, $r2);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$CryptoObject $r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject>;

        return $r1;
    }

    void setCryptoObject(androidx.biometric.BiometricPrompt$CryptoObject)
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$CryptoObject r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$CryptoObject;

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.BiometricPrompt$CryptoObject mCryptoObject> = r1;

        return;
    }

    androidx.biometric.AuthenticationCallbackProvider getAuthenticationCallbackProvider()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.AuthenticationCallbackProvider $r1, $r2, $r3;
        androidx.biometric.BiometricViewModel$CallbackListener $r4;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider mAuthenticationCallbackProvider>;

        if $r1 != null goto label1;

        $r3 = new androidx.biometric.AuthenticationCallbackProvider;

        $r4 = new androidx.biometric.BiometricViewModel$CallbackListener;

        specialinvoke $r4.<androidx.biometric.BiometricViewModel$CallbackListener: void <init>(androidx.biometric.BiometricViewModel)>(r0);

        specialinvoke $r3.<androidx.biometric.AuthenticationCallbackProvider: void <init>(androidx.biometric.AuthenticationCallbackProvider$Listener)>($r4);

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider mAuthenticationCallbackProvider> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.AuthenticationCallbackProvider mAuthenticationCallbackProvider>;

        return $r2;
    }

    androidx.biometric.CancellationSignalProvider getCancellationSignalProvider()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.CancellationSignalProvider $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider mCancellationSignalProvider>;

        if $r1 != null goto label1;

        $r3 = new androidx.biometric.CancellationSignalProvider;

        specialinvoke $r3.<androidx.biometric.CancellationSignalProvider: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider mCancellationSignalProvider> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.biometric.CancellationSignalProvider mCancellationSignalProvider>;

        return $r2;
    }

    android.content.DialogInterface$OnClickListener getNegativeButtonListener()
    {
        androidx.biometric.BiometricViewModel r0;
        android.content.DialogInterface$OnClickListener $r1, $r2;
        androidx.biometric.BiometricViewModel$NegativeButtonListener $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener mNegativeButtonListener>;

        if $r1 != null goto label1;

        $r3 = new androidx.biometric.BiometricViewModel$NegativeButtonListener;

        specialinvoke $r3.<androidx.biometric.BiometricViewModel$NegativeButtonListener: void <init>(androidx.biometric.BiometricViewModel)>(r0);

        r0.<androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener mNegativeButtonListener> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: android.content.DialogInterface$OnClickListener mNegativeButtonListener>;

        return $r2;
    }

    void setNegativeButtonTextOverride(java.lang.CharSequence)
    {
        androidx.biometric.BiometricViewModel r0;
        java.lang.CharSequence r1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<androidx.biometric.BiometricViewModel: java.lang.CharSequence mNegativeButtonTextOverride> = r1;

        return;
    }

    int getCanceledFrom()
    {
        androidx.biometric.BiometricViewModel r0;
        int $i0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $i0 = r0.<androidx.biometric.BiometricViewModel: int mCanceledFrom>;

        return $i0;
    }

    void setCanceledFrom(int)
    {
        androidx.biometric.BiometricViewModel r0;
        int i0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        i0 := @parameter0: int;

        r0.<androidx.biometric.BiometricViewModel: int mCanceledFrom> = i0;

        return;
    }

    boolean isPromptShowing()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsPromptShowing>;

        return $z0;
    }

    void setPromptShowing(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsPromptShowing> = z0;

        return;
    }

    boolean isAwaitingResult()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsAwaitingResult>;

        return $z0;
    }

    void setAwaitingResult(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsAwaitingResult> = z0;

        return;
    }

    boolean isConfirmingDeviceCredential()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsConfirmingDeviceCredential>;

        return $z0;
    }

    void setConfirmingDeviceCredential(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsConfirmingDeviceCredential> = z0;

        return;
    }

    boolean isDelayingPrompt()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsDelayingPrompt>;

        return $z0;
    }

    void setDelayingPrompt(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsDelayingPrompt> = z0;

        return;
    }

    boolean isIgnoringCancel()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsIgnoringCancel>;

        return $z0;
    }

    void setIgnoringCancel(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsIgnoringCancel> = z0;

        return;
    }

    androidx.lifecycle.LiveData getAuthenticationResult()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult>;

        return $r2;
    }

    void setAuthenticationResult(androidx.biometric.BiometricPrompt$AuthenticationResult)
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricPrompt$AuthenticationResult r1;
        androidx.lifecycle.MutableLiveData $r2, $r3, $r4;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: androidx.biometric.BiometricPrompt$AuthenticationResult;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult>;

        if $r2 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult> = $r4;

     label1:
        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationResult>;

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r3, r1);

        return;
    }

    androidx.lifecycle.MutableLiveData getAuthenticationError()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError>;

        return $r2;
    }

    void setAuthenticationError(androidx.biometric.BiometricErrorData)
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.biometric.BiometricErrorData r1;
        androidx.lifecycle.MutableLiveData $r2, $r3, $r4;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: androidx.biometric.BiometricErrorData;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError>;

        if $r2 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError> = $r4;

     label1:
        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationError>;

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r3, r1);

        return;
    }

    androidx.lifecycle.LiveData getAuthenticationHelpMessage()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage>;

        return $r2;
    }

    void setAuthenticationHelpMessage(java.lang.CharSequence)
    {
        androidx.biometric.BiometricViewModel r0;
        java.lang.CharSequence r1;
        androidx.lifecycle.MutableLiveData $r2, $r3, $r4;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage>;

        if $r2 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage> = $r4;

     label1:
        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mAuthenticationHelpMessage>;

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r3, r1);

        return;
    }

    androidx.lifecycle.LiveData isAuthenticationFailurePending()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending>;

        return $r2;
    }

    void setAuthenticationFailurePending(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r4;
        java.lang.Boolean $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending>;

        if $r1 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending> = $r4;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsAuthenticationFailurePending>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r2, $r3);

        return;
    }

    androidx.lifecycle.LiveData isNegativeButtonPressPending()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending>;

        return $r2;
    }

    void setNegativeButtonPressPending(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r4;
        java.lang.Boolean $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending>;

        if $r1 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending> = $r4;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsNegativeButtonPressPending>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r2, $r3);

        return;
    }

    boolean isFingerprintDialogDismissedInstantly()
    {
        androidx.biometric.BiometricViewModel r0;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $z0 = r0.<androidx.biometric.BiometricViewModel: boolean mIsFingerprintDialogDismissedInstantly>;

        return $z0;
    }

    void setFingerprintDialogDismissedInstantly(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        r0.<androidx.biometric.BiometricViewModel: boolean mIsFingerprintDialogDismissedInstantly> = z0;

        return;
    }

    androidx.lifecycle.LiveData isFingerprintDialogCancelPending()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending>;

        return $r2;
    }

    void setFingerprintDialogCancelPending(boolean)
    {
        androidx.biometric.BiometricViewModel r0;
        boolean z0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r4;
        java.lang.Boolean $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending>;

        if $r1 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending> = $r4;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mIsFingerprintDialogCancelPending>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r2, $r3);

        return;
    }

    int getFingerprintDialogPreviousState()
    {
        androidx.biometric.BiometricViewModel r0;
        int $i0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $i0 = r0.<androidx.biometric.BiometricViewModel: int mFingerprintDialogPreviousState>;

        return $i0;
    }

    void setFingerprintDialogPreviousState(int)
    {
        androidx.biometric.BiometricViewModel r0;
        int i0;

        r0 := @this: androidx.biometric.BiometricViewModel;

        i0 := @parameter0: int;

        r0.<androidx.biometric.BiometricViewModel: int mFingerprintDialogPreviousState> = i0;

        return;
    }

    androidx.lifecycle.LiveData getFingerprintDialogState()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState>;

        return $r2;
    }

    void setFingerprintDialogState(int)
    {
        androidx.biometric.BiometricViewModel r0;
        int i0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState>;

        if $r1 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState> = $r4;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogState>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r2, $r3);

        return;
    }

    androidx.lifecycle.LiveData getFingerprintDialogHelpMessage()
    {
        androidx.biometric.BiometricViewModel r0;
        androidx.lifecycle.MutableLiveData $r1, $r2, $r3;

        r0 := @this: androidx.biometric.BiometricViewModel;

        $r1 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage>;

        if $r1 != null goto label1;

        $r3 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r3.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage> = $r3;

     label1:
        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage>;

        return $r2;
    }

    void setFingerprintDialogHelpMessage(java.lang.CharSequence)
    {
        androidx.biometric.BiometricViewModel r0;
        java.lang.CharSequence r1;
        androidx.lifecycle.MutableLiveData $r2, $r3, $r4;

        r0 := @this: androidx.biometric.BiometricViewModel;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage>;

        if $r2 != null goto label1;

        $r4 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r4.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage> = $r4;

     label1:
        $r3 = r0.<androidx.biometric.BiometricViewModel: androidx.lifecycle.MutableLiveData mFingerprintDialogHelpMessage>;

        staticinvoke <androidx.biometric.BiometricViewModel: void updateValue(androidx.lifecycle.MutableLiveData,java.lang.Object)>($r3, r1);

        return;
    }

    int getInferredAuthenticationResultType()
    {
        androidx.biometric.BiometricViewModel r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: androidx.biometric.BiometricViewModel;

        i0 = virtualinvoke r0.<androidx.biometric.BiometricViewModel: int getAllowedAuthenticators()>();

        $z0 = staticinvoke <androidx.biometric.AuthenticatorUtils: boolean isSomeBiometricAllowed(int)>(i0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <androidx.biometric.AuthenticatorUtils: boolean isDeviceCredentialAllowed(int)>(i0);

        if $z1 != 0 goto label1;

        return 2;

     label1:
        return -1;
    }

    private static void updateValue(androidx.lifecycle.MutableLiveData, java.lang.Object)
    {
        androidx.lifecycle.MutableLiveData r0;
        java.lang.Object r1;
        java.lang.Thread $r2, $r4;
        android.os.Looper $r3;

        r0 := @parameter0: androidx.lifecycle.MutableLiveData;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r4 = virtualinvoke $r3.<android.os.Looper: java.lang.Thread getThread()>();

        if $r2 != $r4 goto label1;

        virtualinvoke r0.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>(r1);

     label2:
        return;
    }

androidx.biometric.BiometricViewModel$1
<androidx.biometric.BiometricViewModel$1: androidx.biometric.BiometricViewModel this$0>
    void <init>(androidx.biometric.BiometricViewModel)
    {
        androidx.biometric.BiometricViewModel$1 r0;
        androidx.biometric.BiometricViewModel r1;

        r0 := @this: androidx.biometric.BiometricViewModel$1;

        r1 := @parameter0: androidx.biometric.BiometricViewModel;

        r0.<androidx.biometric.BiometricViewModel$1: androidx.biometric.BiometricViewModel this$0> = r1;

        specialinvoke r0.<androidx.biometric.BiometricPrompt$AuthenticationCallback: void <init>()>();

        return;
    }

androidx.biometric.BiometricViewModel$CallbackListener
<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>
    void <init>(androidx.biometric.BiometricViewModel)
    {
        androidx.biometric.BiometricViewModel$CallbackListener r0;
        androidx.biometric.BiometricViewModel r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.biometric.BiometricViewModel$CallbackListener;

        r1 := @parameter0: androidx.biometric.BiometricViewModel;

        specialinvoke r0.<androidx.biometric.AuthenticationCallbackProvider$Listener: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef> = $r2;

        return;
    }

    void onSuccess(androidx.biometric.BiometricPrompt$AuthenticationResult)
    {
        androidx.biometric.BiometricViewModel$CallbackListener r0;
        java.lang.ref.WeakReference $r1, $r3, $r6, $r11;
        java.lang.Object $r2, $r4, $r7, $r12;
        androidx.biometric.BiometricViewModel $r5, $r8, $r13;
        boolean $z0;
        int $i0, $i1;
        androidx.biometric.BiometricPrompt$AuthenticationResult $r9, r14;
        androidx.biometric.BiometricPrompt$CryptoObject $r10;

        r0 := @this: androidx.biometric.BiometricViewModel$CallbackListener;

        r14 := @parameter0: androidx.biometric.BiometricPrompt$AuthenticationResult;

        $r1 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r2 == null goto label2;

        $r3 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (androidx.biometric.BiometricViewModel) $r4;

        $z0 = virtualinvoke $r5.<androidx.biometric.BiometricViewModel: boolean isAwaitingResult()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke r14.<androidx.biometric.BiometricPrompt$AuthenticationResult: int getAuthenticationType()>();

        if $i0 != -1 goto label1;

        $r9 = new androidx.biometric.BiometricPrompt$AuthenticationResult;

        $r10 = virtualinvoke r14.<androidx.biometric.BiometricPrompt$AuthenticationResult: androidx.biometric.BiometricPrompt$CryptoObject getCryptoObject()>();

        $r11 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r12 = virtualinvoke $r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r13 = (androidx.biometric.BiometricViewModel) $r12;

        $i1 = virtualinvoke $r13.<androidx.biometric.BiometricViewModel: int getInferredAuthenticationResultType()>();

        specialinvoke $r9.<androidx.biometric.BiometricPrompt$AuthenticationResult: void <init>(androidx.biometric.BiometricPrompt$CryptoObject,int)>($r10, $i1);

        r14 = $r9;

     label1:
        $r6 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (androidx.biometric.BiometricViewModel) $r7;

        virtualinvoke $r8.<androidx.biometric.BiometricViewModel: void setAuthenticationResult(androidx.biometric.BiometricPrompt$AuthenticationResult)>(r14);

     label2:
        return;
    }

    void onError(int, java.lang.CharSequence)
    {
        androidx.biometric.BiometricViewModel$CallbackListener r0;
        int i0;
        java.lang.CharSequence r1;
        java.lang.ref.WeakReference $r2, $r4, $r7, $r10;
        java.lang.Object $r3, $r5, $r8, $r11;
        androidx.biometric.BiometricViewModel $r6, $r9, $r13;
        boolean $z0, $z1;
        androidx.biometric.BiometricErrorData $r12;

        r0 := @this: androidx.biometric.BiometricViewModel$CallbackListener;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (androidx.biometric.BiometricViewModel) $r5;

        $z0 = virtualinvoke $r6.<androidx.biometric.BiometricViewModel: boolean isConfirmingDeviceCredential()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r9 = (androidx.biometric.BiometricViewModel) $r8;

        $z1 = virtualinvoke $r9.<androidx.biometric.BiometricViewModel: boolean isAwaitingResult()>();

        if $z1 == 0 goto label1;

        $r10 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r13 = (androidx.biometric.BiometricViewModel) $r11;

        $r12 = new androidx.biometric.BiometricErrorData;

        specialinvoke $r12.<androidx.biometric.BiometricErrorData: void <init>(int,java.lang.CharSequence)>(i0, r1);

        virtualinvoke $r13.<androidx.biometric.BiometricViewModel: void setAuthenticationError(androidx.biometric.BiometricErrorData)>($r12);

     label1:
        return;
    }

    void onHelp(java.lang.CharSequence)
    {
        androidx.biometric.BiometricViewModel$CallbackListener r0;
        java.lang.CharSequence r1;
        java.lang.ref.WeakReference $r2, $r4;
        java.lang.Object $r3, $r5;
        androidx.biometric.BiometricViewModel $r6;

        r0 := @this: androidx.biometric.BiometricViewModel$CallbackListener;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (androidx.biometric.BiometricViewModel) $r5;

        virtualinvoke $r6.<androidx.biometric.BiometricViewModel: void setAuthenticationHelpMessage(java.lang.CharSequence)>(r1);

     label1:
        return;
    }

    void onFailure()
    {
        androidx.biometric.BiometricViewModel$CallbackListener r0;
        java.lang.ref.WeakReference $r1, $r3, $r6;
        java.lang.Object $r2, $r4, $r7;
        androidx.biometric.BiometricViewModel $r5, $r8;
        boolean $z0;

        r0 := @this: androidx.biometric.BiometricViewModel$CallbackListener;

        $r1 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (androidx.biometric.BiometricViewModel) $r4;

        $z0 = virtualinvoke $r5.<androidx.biometric.BiometricViewModel: boolean isAwaitingResult()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.biometric.BiometricViewModel$CallbackListener: java.lang.ref.WeakReference mViewModelRef>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (androidx.biometric.BiometricViewModel) $r7;

        virtualinvoke $r8.<androidx.biometric.BiometricViewModel: void setAuthenticationFailurePending(boolean)>(1);

     label1:
        return;
    }

androidx.biometric.BiometricViewModel$DefaultExecutor
<androidx.biometric.BiometricViewModel$DefaultExecutor: android.os.Handler mHandler>
    void <init>()
    {
        androidx.biometric.BiometricViewModel$DefaultExecutor r0;
        android.os.Handler $r1;
        android.os.Looper $r2;

        r0 := @this: androidx.biometric.BiometricViewModel$DefaultExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        r0.<androidx.biometric.BiometricViewModel$DefaultExecutor: android.os.Handler mHandler> = $r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.biometric.BiometricViewModel$DefaultExecutor r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.biometric.BiometricViewModel$DefaultExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.biometric.BiometricViewModel$DefaultExecutor: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        return;
    }

androidx.biometric.BiometricViewModel$NegativeButtonListener
<androidx.biometric.BiometricViewModel$NegativeButtonListener: java.lang.ref.WeakReference mViewModelRef>
    void <init>(androidx.biometric.BiometricViewModel)
    {
        androidx.biometric.BiometricViewModel$NegativeButtonListener r0;
        androidx.biometric.BiometricViewModel r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.biometric.BiometricViewModel$NegativeButtonListener;

        r1 := @parameter0: androidx.biometric.BiometricViewModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.biometric.BiometricViewModel$NegativeButtonListener: java.lang.ref.WeakReference mViewModelRef> = $r2;

        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        androidx.biometric.BiometricViewModel$NegativeButtonListener r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.ref.WeakReference $r2, $r4;
        java.lang.Object $r3, $r5;
        androidx.biometric.BiometricViewModel $r6;

        r0 := @this: androidx.biometric.BiometricViewModel$NegativeButtonListener;

        r1 := @parameter0: android.content.DialogInterface;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.biometric.BiometricViewModel$NegativeButtonListener: java.lang.ref.WeakReference mViewModelRef>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.biometric.BiometricViewModel$NegativeButtonListener: java.lang.ref.WeakReference mViewModelRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (androidx.biometric.BiometricViewModel) $r5;

        virtualinvoke $r6.<androidx.biometric.BiometricViewModel: void setNegativeButtonPressPending(boolean)>(1);

     label1:
        return;
    }

