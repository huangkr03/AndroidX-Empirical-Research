androidx.emoji2.emojipicker.utils.FileCache
<androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache$Companion Companion>
<androidx.emoji2.emojipicker.utils.FileCache: java.io.File emojiPickerCacheDir>
<androidx.emoji2.emojipicker.utils.FileCache: java.lang.String currentProperty>
<androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache instance>
<androidx.emoji2.emojipicker.utils.FileCache: java.lang.String EMOJI_PICKER_FOLDER>
    public void <init>(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        android.content.Context r1, $r13;
        java.lang.String r2, $r11;
        long l0, $l2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i1;
        java.io.File $r12, $r14;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $l2 = <android.os.Build: long TIME>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        l0 = specialinvoke r0.<androidx.emoji2.emojipicker.utils.FileCache: long getVersionCode(android.content.Context)>(r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.emoji2.emojipicker.utils.FileCache: java.lang.String currentProperty> = $r11;

        $r12 = new java.io.File;

        $r13 = specialinvoke r0.<androidx.emoji2.emojipicker.utils.FileCache: android.content.Context getDeviceProtectedStorageContext(android.content.Context)>(r1);

        $r14 = virtualinvoke $r13.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "emoji_picker");

        r0.<androidx.emoji2.emojipicker.utils.FileCache: java.io.File emojiPickerCacheDir> = $r12;

        return;
    }

    public final java.io.File getEmojiPickerCacheDir$emoji2_emojipicker_release()
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        java.io.File $r1;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        $r1 = r0.<androidx.emoji2.emojipicker.utils.FileCache: java.io.File emojiPickerCacheDir>;

        return $r1;
    }

    public static void getEmojiPickerCacheDir$emoji2_emojipicker_release$annotations()
    {
        return;
    }

    public final java.util.List getOrPut$emoji2_emojipicker_release(java.lang.String, kotlin.jvm.functions.Function0)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        java.lang.String r1, $r9;
        kotlin.jvm.functions.Function0 r2;
        java.io.File r3, r4, r6, r7, $r8, $r10, $r11, $r13;
        int i0, i1;
        boolean $z2;
        java.io.File[] $r12;
        java.util.List $r14;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "defaultValue");

        $r8 = new java.io.File;

        $r10 = r0.<androidx.emoji2.emojipicker.utils.FileCache: java.io.File emojiPickerCacheDir>;

        $r9 = r0.<androidx.emoji2.emojipicker.utils.FileCache: java.lang.String currentProperty>;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r9);

        r3 = $r8;

        $z2 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label4;

        $r11 = r0.<androidx.emoji2.emojipicker.utils.FileCache: java.io.File emojiPickerCacheDir>;

        $r12 = virtualinvoke $r11.<java.io.File: java.io.File[] listFiles()>();

        if $r12 == null goto label3;

        i1 = 0;

        i0 = lengthof $r12;

     label1:
        if i1 >= i0 goto label2;

        r6 = $r12[i1];

        r7 = r6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "it");

        staticinvoke <kotlin.io.FilesKt: boolean deleteRecursively(java.io.File)>(r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label3;

     label3:
        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label4:
        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r1);

        r4 = $r13;

        $r14 = specialinvoke r0.<androidx.emoji2.emojipicker.utils.FileCache: java.util.List readFrom(java.io.File)>(r4);

        if $r14 != null goto label5;

        $r14 = specialinvoke r0.<androidx.emoji2.emojipicker.utils.FileCache: java.util.List writeTo(java.io.File,kotlin.jvm.functions.Function0)>(r4, r2);

     label5:
        return $r14;
    }

    private final java.util.List readFrom(java.io.File)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        java.io.File r1, r20;
        java.lang.String[] r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.InputStreamReader $r3;
        java.io.FileInputStream $r4;
        java.io.InputStream $r5;
        java.util.ArrayList $r6, $r8;
        int $i0, $i1;
        java.util.List $r7, $r9, $r14, $r16, r28, $r42;
        androidx.emoji2.emojipicker.EmojiViewItem $r10;
        java.lang.Object $r11, r35, r41;
        java.lang.Iterable $r12, $r32, $r38;
        java.lang.String $r13, $r36;
        java.lang.CharSequence $r15;
        java.lang.Throwable $r17, $r18, r29, r30, r31;
        java.nio.charset.Charset $r19;
        java.io.Reader r21, $r23;
        java.io.BufferedReader $r22, $r24, r26;
        java.io.Closeable $r25;
        kotlin.sequences.Sequence r27;
        java.util.Collection r33, r37, r39, r43;
        java.util.Iterator $r34, $r40;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r19 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        r20 = r1;

        $r3 = new java.io.InputStreamReader;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r20);

        $r5 = (java.io.InputStream) $r4;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r5, $r19);

        r21 = (java.io.Reader) $r3;

        $z1 = r21 instanceof java.io.BufferedReader;

        if $z1 == 0 goto label02;

        $r22 = (java.io.BufferedReader) r21;

        goto label03;

     label02:
        $r22 = new java.io.BufferedReader;

        specialinvoke $r22.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r21, 8192);

     label03:
        $r23 = (java.io.Reader) $r22;

        $z2 = $r23 instanceof java.io.BufferedReader;

        if $z2 == 0 goto label04;

        $r24 = (java.io.BufferedReader) $r23;

        goto label05;

     label04:
        $r24 = new java.io.BufferedReader;

        specialinvoke $r24.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r23, 8192);

     label05:
        $r25 = (java.io.Closeable) $r24;

     label06:
        r26 = (java.io.BufferedReader) $r25;

        r27 = staticinvoke <kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)>(r26);

        r28 = staticinvoke <kotlin.sequences.SequencesKt: java.util.List toList(kotlin.sequences.Sequence)>(r27);

     label07:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r25, null);

        goto label11;

     label08:
        $r18 := @caughtexception;

        r29 = $r18;

        r30 = r29;

        throw r29;

     label09:
        $r17 := @caughtexception;

        r31 = $r17;

     label10:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r25, r30);

        throw r31;

     label11:
        $r32 = (java.lang.Iterable) r28;

        $r6 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r32, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        r33 = (java.util.Collection) $r6;

        $r34 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r36 = (java.lang.String) r35;

        r37 = r33;

        $r15 = (java.lang.CharSequence) $r36;

        r2 = newarray (java.lang.String)[1];

        r2[0] = ",";

        $r16 = staticinvoke <kotlin.text.StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)>($r15, r2, 0, 0, 6, null);

        interfaceinvoke r37.<java.util.Collection: boolean add(java.lang.Object)>($r16);

        goto label12;

     label13:
        $r7 = (java.util.List) r33;

        $r38 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r38, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i1);

        r39 = (java.util.Collection) $r8;

        $r40 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        r41 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        $r42 = (java.util.List) r41;

        r43 = r39;

        $r10 = new androidx.emoji2.emojipicker.EmojiViewItem;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r42);

        $r13 = (java.lang.String) $r11;

        $r12 = (java.lang.Iterable) $r42;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List drop(java.lang.Iterable,int)>($r12, 1);

        specialinvoke $r10.<androidx.emoji2.emojipicker.EmojiViewItem: void <init>(java.lang.String,java.util.List)>($r13, $r14);

        interfaceinvoke r43.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label14;

     label15:
        $r9 = (java.util.List) r39;

        return $r9;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private final java.util.List writeTo(java.io.File, kotlin.jvm.functions.Function0)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        java.io.File r1, r23;
        kotlin.jvm.functions.Function0 r2;
        java.util.List r3, $r16;
        java.util.Iterator r4, r7;
        androidx.emoji2.emojipicker.EmojiViewItem r5;
        java.lang.Iterable $r6;
        java.lang.Object r8, $r10, $r14;
        java.lang.String r9, $r15, $r20;
        java.io.OutputStreamWriter $r11;
        java.io.FileOutputStream $r12;
        java.io.OutputStream $r13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.Throwable $r21, $r22, r30, r31, r32;
        java.nio.charset.Charset r24;
        java.io.Writer $r25;
        java.io.BufferedWriter $r26, r28;
        java.io.Closeable r27;
        kotlin.Unit r29;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: kotlin.jvm.functions.Function0;

        $r10 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        r3 = (java.util.List) $r10;

        r23 = r1;

        r24 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_8>;

        $r11 = new java.io.OutputStreamWriter;

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r23);

        $r13 = (java.io.OutputStream) $r12;

        specialinvoke $r11.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r13, r24);

        $r25 = (java.io.Writer) $r11;

        $z0 = $r25 instanceof java.io.BufferedWriter;

        if $z0 == 0 goto label01;

        $r26 = (java.io.BufferedWriter) $r25;

        goto label02;

     label01:
        $r26 = new java.io.BufferedWriter;

        specialinvoke $r26.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r25, 8192);

     label02:
        r27 = (java.io.Closeable) $r26;

     label03:
        r28 = (java.io.BufferedWriter) r27;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.emoji2.emojipicker.EmojiViewItem) $r14;

        $r15 = virtualinvoke r5.<androidx.emoji2.emojipicker.EmojiViewItem: java.lang.String getEmoji()>();

        virtualinvoke r28.<java.io.BufferedWriter: void write(java.lang.String)>($r15);

        $r16 = virtualinvoke r5.<androidx.emoji2.emojipicker.EmojiViewItem: java.util.List getVariants()>();

        $r6 = (java.lang.Iterable) $r16;

        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) r8;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<java.io.BufferedWriter: void write(java.lang.String)>($r20);

        goto label05;

     label06:
        virtualinvoke r28.<java.io.BufferedWriter: void newLine()>();

        goto label04;

     label07:
        r29 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label08:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r27, null);

        goto label12;

     label09:
        $r21 := @caughtexception;

        r30 = $r21;

        r31 = r30;

        throw r30;

     label10:
        $r22 := @caughtexception;

        r32 = $r22;

     label11:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r27, r31);

        throw r32;

     label12:
        return r3;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private final android.content.Context getDeviceProtectedStorageContext(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0, $r5;
        android.content.Context r1, r2, r3, $r4;
        boolean $z1;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: android.content.Context;

        r2 = r1;

        r3 = r2;

        $z1 = staticinvoke <androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>(r3);

        if $z1 == 0 goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = null;

     label2:
        if $r4 != null goto label3;

        $r5 = (androidx.emoji2.emojipicker.utils.FileCache) r0;

        $r4 = staticinvoke <androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>(r1);

        if $r4 != null goto label3;

        $r4 = r1;

     label3:
        return $r4;
    }

    private final long getVersionCode(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;
        android.content.Context r1;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4;
        android.content.pm.PackageInfo $r5;
        androidx.emoji2.emojipicker.utils.FileCache$Api28Impl $r6;
        androidx.emoji2.emojipicker.utils.FileCache$Api33Impl $r7;
        long $l3, l4;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache;

        r1 := @parameter0: android.content.Context;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label2;

        $r7 = <androidx.emoji2.emojipicker.utils.FileCache$Api33Impl: androidx.emoji2.emojipicker.utils.FileCache$Api33Impl INSTANCE>;

        $l3 = virtualinvoke $r7.<androidx.emoji2.emojipicker.utils.FileCache$Api33Impl: long getAppVersionCode(android.content.Context)>(r1);

        goto label4;

     label2:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label3;

        $r6 = <androidx.emoji2.emojipicker.utils.FileCache$Api28Impl: androidx.emoji2.emojipicker.utils.FileCache$Api28Impl INSTANCE>;

        $l3 = virtualinvoke $r6.<androidx.emoji2.emojipicker.utils.FileCache$Api28Impl: long getAppVersionCode(android.content.Context)>(r1);

        goto label4;

     label3:
        $r3 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

        $i2 = $r5.<android.content.pm.PackageInfo: int versionCode>;

        $l3 = (long) $i2;

     label4:
        l4 = $l3;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        l4 = 1L;

     label7:
        return l4;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label5 with label6;
    }

    public static final androidx.emoji2.emojipicker.utils.FileCache access$getInstance$cp()
    {
        androidx.emoji2.emojipicker.utils.FileCache $r0;

        $r0 = <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache instance>;

        return $r0;
    }

    public static final void access$setInstance$cp(androidx.emoji2.emojipicker.utils.FileCache)
    {
        androidx.emoji2.emojipicker.utils.FileCache r0;

        r0 := @parameter0: androidx.emoji2.emojipicker.utils.FileCache;

        <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache instance> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Companion $r0;

        $r0 = new androidx.emoji2.emojipicker.utils.FileCache$Companion;

        specialinvoke $r0.<androidx.emoji2.emojipicker.utils.FileCache$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache$Companion Companion> = $r0;

        return;
    }

androidx.emoji2.emojipicker.utils.FileCache$Api28Impl
<androidx.emoji2.emojipicker.utils.FileCache$Api28Impl: androidx.emoji2.emojipicker.utils.FileCache$Api28Impl INSTANCE>
    private void <init>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api28Impl r0;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Api28Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long getAppVersionCode(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api28Impl r0;
        android.content.Context r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        long $l0;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Api28Impl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

        $l0 = virtualinvoke $r4.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        return $l0;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api28Impl $r0;

        $r0 = new androidx.emoji2.emojipicker.utils.FileCache$Api28Impl;

        specialinvoke $r0.<androidx.emoji2.emojipicker.utils.FileCache$Api28Impl: void <init>()>();

        <androidx.emoji2.emojipicker.utils.FileCache$Api28Impl: androidx.emoji2.emojipicker.utils.FileCache$Api28Impl INSTANCE> = $r0;

        return;
    }

androidx.emoji2.emojipicker.utils.FileCache$Api33Impl
<androidx.emoji2.emojipicker.utils.FileCache$Api33Impl: androidx.emoji2.emojipicker.utils.FileCache$Api33Impl INSTANCE>
    private void <init>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api33Impl r0;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Api33Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final long getAppVersionCode(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api33Impl r0;
        android.content.Context r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageManager$PackageInfoFlags $r4;
        android.content.pm.PackageInfo $r5;
        long $l0;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Api33Impl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = staticinvoke <android.content.pm.PackageManager$PackageInfoFlags: android.content.pm.PackageManager$PackageInfoFlags of(long)>(0L);

        $r5 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,android.content.pm.PackageManager$PackageInfoFlags)>($r3, $r4);

        $l0 = virtualinvoke $r5.<android.content.pm.PackageInfo: long getLongVersionCode()>();

        return $l0;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Api33Impl $r0;

        $r0 = new androidx.emoji2.emojipicker.utils.FileCache$Api33Impl;

        specialinvoke $r0.<androidx.emoji2.emojipicker.utils.FileCache$Api33Impl: void <init>()>();

        <androidx.emoji2.emojipicker.utils.FileCache$Api33Impl: androidx.emoji2.emojipicker.utils.FileCache$Api33Impl INSTANCE> = $r0;

        return;
    }

androidx.emoji2.emojipicker.utils.FileCache$Companion
    private void <init>()
    {
        androidx.emoji2.emojipicker.utils.FileCache$Companion r0;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.emoji2.emojipicker.utils.FileCache getInstance$emoji2_emojipicker_release(android.content.Context)
    {
        androidx.emoji2.emojipicker.utils.FileCache$Companion r0, r2, $r6;
        android.content.Context r1;
        androidx.emoji2.emojipicker.utils.FileCache r3, r4, $r5, $r8, $r9;
        java.lang.Throwable $r7;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r8 = staticinvoke <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache access$getInstance$cp()>();

        if $r8 != null goto label5;

        r2 = r0;

        entermonitor r2;

     label1:
        $r9 = staticinvoke <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache access$getInstance$cp()>();

        if $r9 != null goto label2;

        $r5 = new androidx.emoji2.emojipicker.utils.FileCache;

        specialinvoke $r5.<androidx.emoji2.emojipicker.utils.FileCache: void <init>(android.content.Context)>(r1);

        r3 = $r5;

        r4 = r3;

        $r6 = <androidx.emoji2.emojipicker.utils.FileCache: androidx.emoji2.emojipicker.utils.FileCache$Companion Companion>;

        staticinvoke <androidx.emoji2.emojipicker.utils.FileCache: void access$setInstance$cp(androidx.emoji2.emojipicker.utils.FileCache)>(r4);

        $r9 = r3;

     label2:
        exitmonitor r2;

        $r8 = $r9;

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r7;

     label5:
        return $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.emoji2.emojipicker.utils.FileCache$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.emoji2.emojipicker.utils.FileCache$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.emoji2.emojipicker.utils.FileCache$Companion: void <init>()>();

        return;
    }

