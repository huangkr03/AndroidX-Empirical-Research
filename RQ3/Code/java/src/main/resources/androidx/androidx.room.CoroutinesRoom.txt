androidx.room.CoroutinesRoom
<androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion>
    private void <init>()
    {
        androidx.room.CoroutinesRoom r0;

        r0 := @this: androidx.room.CoroutinesRoom;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.Object execute(androidx.room.RoomDatabase, boolean, java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.RoomDatabase r0;
        boolean z0;
        java.util.concurrent.Callable r1;
        kotlin.coroutines.Continuation $r2;
        androidx.room.CoroutinesRoom$Companion $r3;
        java.lang.Object $r4;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.concurrent.Callable;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

        $r3 = <androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)>(r0, z0, r1, $r2);

        return $r4;
    }

    public static final java.lang.Object execute(androidx.room.RoomDatabase, boolean, android.os.CancellationSignal, java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.RoomDatabase r0;
        boolean z0;
        android.os.CancellationSignal r1;
        java.util.concurrent.Callable r2;
        kotlin.coroutines.Continuation $r3;
        androidx.room.CoroutinesRoom$Companion $r4;
        java.lang.Object $r5;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.os.CancellationSignal;

        r2 := @parameter3: java.util.concurrent.Callable;

        $r3 := @parameter4: kotlin.coroutines.Continuation;

        $r4 = <androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation)>(r0, z0, r1, r2, $r3);

        return $r5;
    }

    public static final kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase, boolean, java.lang.String[], java.util.concurrent.Callable)
    {
        androidx.room.RoomDatabase r0;
        boolean z0;
        java.lang.String[] r1;
        java.util.concurrent.Callable r2;
        androidx.room.CoroutinesRoom$Companion $r3;
        kotlinx.coroutines.flow.Flow $r4;

        r0 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String[];

        r2 := @parameter3: java.util.concurrent.Callable;

        $r3 = <androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.room.CoroutinesRoom$Companion: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)>(r0, z0, r1, r2);

        return $r4;
    }

    static void <clinit>()
    {
        androidx.room.CoroutinesRoom$Companion $r0;

        $r0 = new androidx.room.CoroutinesRoom$Companion;

        specialinvoke $r0.<androidx.room.CoroutinesRoom$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion> = $r0;

        return;
    }

androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel>
    void <init>(androidx.room.RoomDatabase, androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1, kotlinx.coroutines.channels.Channel, java.util.concurrent.Callable, kotlinx.coroutines.channels.Channel, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 r0;
        androidx.room.RoomDatabase $r1;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $r2;
        kotlinx.coroutines.channels.Channel $r3, $r5;
        java.util.concurrent.Callable $r4;
        kotlin.coroutines.Continuation $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        $r1 := @parameter0: androidx.room.RoomDatabase;

        $r2 := @parameter1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1;

        $r3 := @parameter2: kotlinx.coroutines.channels.Channel;

        $r4 := @parameter3: java.util.concurrent.Callable;

        $r5 := @parameter4: kotlinx.coroutines.channels.Channel;

        $r6 := @parameter5: kotlin.coroutines.Continuation;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db> = $r1;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer> = $r2;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel> = $r3;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable> = $r4;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel> = $r5;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r6);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 r0;
        java.lang.Object $r1, r2, r3, $r4, $r16, $r17, $r30;
        int $i0;
        kotlin.coroutines.Continuation $r5, $r15;
        java.lang.Boolean $r6;
        boolean $z0;
        androidx.room.RoomDatabase $r7, $r18, $r25;
        androidx.room.InvalidationTracker $r8, $r19, $r26;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $r9, $r20, $r27;
        androidx.room.InvalidationTracker$Observer $r10, $r21, $r28;
        kotlin.Unit $r11;
        java.util.concurrent.Callable $r13;
        kotlinx.coroutines.channels.Channel $r14, $r22;
        java.lang.IllegalStateException $r23;
        java.lang.Throwable $r24, r31;
        kotlinx.coroutines.channels.ChannelIterator r29;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label05;
            case 2: goto label09;
            default: goto label16;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r18 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db>;

        $r19 = virtualinvoke $r18.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r20 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer>;

        $r21 = (androidx.room.InvalidationTracker$Observer) $r20;

        virtualinvoke $r19.<androidx.room.InvalidationTracker: void addObserver(androidx.room.InvalidationTracker$Observer)>($r21);

     label02:
        $r22 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel>;

        r29 = interfaceinvoke $r22.<kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label03:
        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0> = r29;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label> = 1;

        $r30 = interfaceinvoke r29.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r5);

     label04:
        if $r30 != r3 goto label07;

        return r3;

     label05:
        $r17 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0>;

        r29 = (kotlinx.coroutines.channels.ChannelIterator) $r17;

     label06:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r30 = $r1;

     label07:
        $r6 = (java.lang.Boolean) $r30;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label12;

        interfaceinvoke r29.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

        $r13 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable>;

        r2 = interfaceinvoke $r13.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r14 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        $r15 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0> = r29;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label> = 2;

        $r16 = interfaceinvoke $r14.<kotlinx.coroutines.channels.Channel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>(r2, $r15);

     label08:
        if $r16 != r3 goto label11;

        return r3;

     label09:
        $r4 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0>;

        r29 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

     label10:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label11:
        goto label03;

     label12:
        $r7 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db>;

        $r8 = virtualinvoke $r7.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r9 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer>;

        $r10 = (androidx.room.InvalidationTracker$Observer) $r9;

        virtualinvoke $r8.<androidx.room.InvalidationTracker: void removeObserver(androidx.room.InvalidationTracker$Observer)>($r10);

        goto label15;

     label13:
        $r24 := @caughtexception;

        r31 = $r24;

     label14:
        $r25 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db>;

        $r26 = virtualinvoke $r25.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r27 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer>;

        $r28 = (androidx.room.InvalidationTracker$Observer) $r27;

        virtualinvoke $r26.<androidx.room.InvalidationTracker: void removeObserver(androidx.room.InvalidationTracker$Observer)>($r28);

        throw r31;

     label15:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label16:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r23;

        catch java.lang.Throwable from label02 to label04 with label13;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r9;
        kotlinx.coroutines.channels.Channel $r4, $r6;
        java.util.concurrent.Callable $r5;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $r7;
        androidx.room.RoomDatabase $r8;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        $r8 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db>;

        $r7 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer>;

        $r6 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel>;

        $r5 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable>;

        $r4 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel>;

        specialinvoke $r3.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: void <init>(androidx.room.RoomDatabase,androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1,kotlinx.coroutines.channels.Channel,java.util.concurrent.Callable,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>($r8, $r7, $r6, $r5, $r4, $r2);

        $r9 = (kotlin.coroutines.Continuation) $r3;

        return $r9;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: kotlinx.coroutines.channels.Channel $observerChannel>
    void <init>(java.lang.String[], kotlinx.coroutines.channels.Channel)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 r0;
        java.lang.String[] $r1;
        kotlinx.coroutines.channels.Channel $r2;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: kotlinx.coroutines.channels.Channel;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: kotlinx.coroutines.channels.Channel $observerChannel> = $r2;

        specialinvoke r0.<androidx.room.InvalidationTracker$Observer: void <init>(java.lang.String[])>($r1);

        return;
    }

    public void onInvalidated(java.util.Set)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 r0;
        java.util.Set r1;
        kotlin.Unit $r2;
        kotlinx.coroutines.channels.Channel $r3;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tables");

        $r3 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: kotlinx.coroutines.channels.Channel $observerChannel>;

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r3.<kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r2);

        return;
    }

androidx.room.CoroutinesRoom$Companion$createFlow$1$1
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: int label>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object L$0>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames>
<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable>
    void <init>(boolean, androidx.room.RoomDatabase, kotlinx.coroutines.flow.FlowCollector, java.lang.String[], java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 r0;
        boolean $z0;
        androidx.room.RoomDatabase $r1;
        kotlinx.coroutines.flow.FlowCollector $r2;
        java.lang.String[] $r3;
        java.util.concurrent.Callable $r4;
        kotlin.coroutines.Continuation $r5;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: androidx.room.RoomDatabase;

        $r2 := @parameter2: kotlinx.coroutines.flow.FlowCollector;

        $r3 := @parameter3: java.lang.String[];

        $r4 := @parameter4: java.util.concurrent.Callable;

        $r5 := @parameter5: kotlin.coroutines.Continuation;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction> = $z0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db> = $r1;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow> = $r2;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames> = $r3;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable> = $r4;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r5);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 r0;
        java.lang.Object $r1, r7, $r9, $r34;
        kotlinx.coroutines.CoroutineScope $r2;
        kotlinx.coroutines.channels.Channel r3, r6;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 r4, $r10;
        kotlin.coroutines.ContinuationInterceptor r5, $r22, $r24;
        int $i0;
        kotlin.Unit $r8, $r12;
        java.lang.String[] $r11;
        kotlin.coroutines.CoroutineContext $r14, $r26;
        androidx.room.TransactionElement$Key $r15;
        kotlin.coroutines.CoroutineContext$Key $r16;
        kotlin.coroutines.CoroutineContext$Element $r17;
        androidx.room.TransactionElement $r18;
        boolean $z0;
        androidx.room.RoomDatabase $r19, $r21, $r28;
        java.lang.IllegalStateException $r23;
        kotlinx.coroutines.CoroutineDispatcher $r25;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1 $r27;
        java.util.concurrent.Callable $r29;
        kotlin.jvm.functions.Function2 $r30;
        kotlinx.coroutines.flow.FlowCollector $r31;
        kotlinx.coroutines.channels.ReceiveChannel $r32;
        kotlin.coroutines.Continuation $r33;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        $r1 := @parameter0: java.lang.Object;

        r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label6;
            default: goto label8;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r9 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r9;

        r3 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(-1, null, null, 6, null);

        $r10 = new androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1;

        $r11 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames>;

        specialinvoke $r10.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: void <init>(java.lang.String[],kotlinx.coroutines.channels.Channel)>($r11, r3);

        r4 = $r10;

        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke r3.<kotlinx.coroutines.channels.Channel: java.lang.Object trySend-JP2dKIU(java.lang.Object)>($r12);

        $r14 = interfaceinvoke $r2.<kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        $r15 = <androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key>;

        $r16 = (kotlin.coroutines.CoroutineContext$Key) $r15;

        $r17 = interfaceinvoke $r14.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r16);

        $r18 = (androidx.room.TransactionElement) $r17;

        if $r18 == null goto label2;

        $r22 = virtualinvoke $r18.<androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()>();

        $r24 = $r22;

        if $r22 != null goto label5;

     label2:
        $z0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction>;

        if $z0 == 0 goto label3;

        $r21 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db>;

        $r25 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase)>($r21);

        goto label4;

     label3:
        $r19 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db>;

        $r25 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase)>($r19);

     label4:
        $r24 = (kotlin.coroutines.ContinuationInterceptor) $r25;

     label5:
        r5 = $r24;

        r6 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(0, null, null, 7, null);

        $r26 = (kotlin.coroutines.CoroutineContext) r5;

        $r27 = new androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1;

        $r28 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db>;

        $r29 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable>;

        specialinvoke $r27.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: void <init>(androidx.room.RoomDatabase,androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1,kotlinx.coroutines.channels.Channel,java.util.concurrent.Callable,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>($r28, r4, r3, $r29, r6, null);

        $r30 = (kotlin.jvm.functions.Function2) $r27;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, $r26, null, $r30, 2, null);

        $r31 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow>;

        $r32 = (kotlinx.coroutines.channels.ReceiveChannel) r6;

        $r33 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: int label> = 1;

        $r34 = staticinvoke <kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>($r31, $r32, $r33);

        if $r34 != r7 goto label7;

        return r7;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label7:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label8:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r23;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r9;
        java.util.concurrent.Callable $r5;
        java.lang.String[] $r6;
        kotlinx.coroutines.flow.FlowCollector $r7;
        androidx.room.RoomDatabase $r8;
        boolean $z0;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        $z0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction>;

        $r8 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db>;

        $r7 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow>;

        $r6 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames>;

        $r5 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable>;

        specialinvoke $r4.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: void <init>(boolean,androidx.room.RoomDatabase,kotlinx.coroutines.flow.FlowCollector,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)>($z0, $r8, $r7, $r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object L$0> = r1;

        $r9 = (kotlin.coroutines.Continuation) r3;

        return $r9;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.CoroutinesRoom$Companion$createFlow$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.CoroutinesRoom$Companion$createFlow$1
<androidx.room.CoroutinesRoom$Companion$createFlow$1: int label>
<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object L$0>
<androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction>
<androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db>
<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames>
<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable>
    void <init>(boolean, androidx.room.RoomDatabase, java.lang.String[], java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1 r0;
        boolean $z0;
        androidx.room.RoomDatabase $r1;
        java.lang.String[] $r2;
        java.util.concurrent.Callable $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: androidx.room.RoomDatabase;

        $r2 := @parameter2: java.lang.String[];

        $r3 := @parameter3: java.util.concurrent.Callable;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction> = $z0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db> = $r1;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames> = $r2;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1 r0;
        java.lang.Object $r1, r3, $r5, $r12;
        kotlinx.coroutines.flow.FlowCollector $r2;
        int $i0;
        kotlin.Unit $r4;
        androidx.room.CoroutinesRoom$Companion$createFlow$1$1 $r6;
        java.util.concurrent.Callable $r7;
        java.lang.String[] $r8;
        androidx.room.RoomDatabase $r9;
        boolean $z0;
        kotlin.jvm.functions.Function2 $r10;
        kotlin.coroutines.Continuation $r11;
        java.lang.IllegalStateException $r13;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.flow.FlowCollector) $r5;

        $r6 = new androidx.room.CoroutinesRoom$Companion$createFlow$1$1;

        $z0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction>;

        $r9 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db>;

        $r8 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames>;

        $r7 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable>;

        specialinvoke $r6.<androidx.room.CoroutinesRoom$Companion$createFlow$1$1: void <init>(boolean,androidx.room.RoomDatabase,kotlinx.coroutines.flow.FlowCollector,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)>($z0, $r9, $r2, $r8, $r7, null);

        $r10 = (kotlin.jvm.functions.Function2) $r6;

        $r11 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: int label> = 1;

        $r12 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r10, $r11);

        if $r12 != r3 goto label3;

        return r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r13;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r8;
        java.util.concurrent.Callable $r5;
        java.lang.String[] $r6;
        androidx.room.RoomDatabase $r7;
        boolean $z0;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.room.CoroutinesRoom$Companion$createFlow$1;

        $z0 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction>;

        $r7 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db>;

        $r6 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames>;

        $r5 = r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable>;

        specialinvoke $r4.<androidx.room.CoroutinesRoom$Companion$createFlow$1: void <init>(boolean,androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)>($z0, $r7, $r6, $r5, $r2);

        r3 = $r4;

        r3.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object L$0> = r1;

        $r8 = (kotlin.coroutines.Continuation) r3;

        return $r8;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1 r0, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.CoroutinesRoom$Companion$createFlow$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$createFlow$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$createFlow$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.CoroutinesRoom$Companion$execute$2
<androidx.room.CoroutinesRoom$Companion$execute$2: int label>
<androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable>
    void <init>(java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$2 r0;
        java.util.concurrent.Callable $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$2;

        $r1 := @parameter0: java.util.concurrent.Callable;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$execute$2 r0;
        java.lang.Object $r1, $r4;
        int $i0;
        java.util.concurrent.Callable $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.CoroutinesRoom$Companion$execute$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>();

        return $r4;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r5;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        java.util.concurrent.Callable $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.room.CoroutinesRoom$Companion$execute$2;

        $r4 = r0.<androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable>;

        specialinvoke $r3.<androidx.room.CoroutinesRoom$Companion$execute$2: void <init>(java.util.concurrent.Callable,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$execute$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.CoroutinesRoom$Companion$execute$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$execute$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.CoroutinesRoom$Companion$execute$4$1
<androidx.room.CoroutinesRoom$Companion$execute$4$1: android.os.CancellationSignal $cancellationSignal>
<androidx.room.CoroutinesRoom$Companion$execute$4$1: kotlinx.coroutines.Job $job>
    void <init>(android.os.CancellationSignal, kotlinx.coroutines.Job)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$1 r0;
        android.os.CancellationSignal $r1;
        kotlinx.coroutines.Job $r2;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$1;

        $r1 := @parameter0: android.os.CancellationSignal;

        $r2 := @parameter1: kotlinx.coroutines.Job;

        r0.<androidx.room.CoroutinesRoom$Companion$execute$4$1: android.os.CancellationSignal $cancellationSignal> = $r1;

        r0.<androidx.room.CoroutinesRoom$Companion$execute$4$1: kotlinx.coroutines.Job $job> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Throwable)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$1 r0;
        java.lang.Throwable r1;
        int $i0;
        kotlinx.coroutines.Job $r2;
        android.os.CancellationSignal $r3;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$1;

        r1 := @parameter0: java.lang.Throwable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $r3 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$1: android.os.CancellationSignal $cancellationSignal>;

        staticinvoke <androidx.sqlite.db.SupportSQLiteCompat$Api16Impl: void cancel(android.os.CancellationSignal)>($r3);

     label1:
        $r2 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$1: kotlinx.coroutines.Job $job>;

        staticinvoke <kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)>($r2, null, 1, null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$1 r0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Throwable) r1;

        virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$execute$4$1: void invoke(java.lang.Throwable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.room.CoroutinesRoom$Companion$execute$4$job$1
<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: int label>
<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable>
<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation>
    void <init>(java.util.concurrent.Callable, kotlinx.coroutines.CancellableContinuation, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 r0;
        java.util.concurrent.Callable $r1;
        kotlinx.coroutines.CancellableContinuation $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        $r1 := @parameter0: java.util.concurrent.Callable;

        $r2 := @parameter1: kotlinx.coroutines.CancellableContinuation;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable> = $r1;

        r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 r0;
        java.lang.Object $r1, $r7, $r14, $r15, r16;
        int $i0;
        java.util.concurrent.Callable $r3;
        kotlinx.coroutines.CancellableContinuation $r4, $r11;
        kotlin.Result$Companion $r5, $r12;
        kotlin.coroutines.Continuation $r6, $r13;
        kotlin.Unit $r8;
        java.lang.IllegalStateException $r9;
        java.lang.Throwable $r10, r17;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label6;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label2:
        $r3 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable>;

        r16 = interfaceinvoke $r3.<java.util.concurrent.Callable: java.lang.Object call()>();

        $r4 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r6 = (kotlin.coroutines.Continuation) $r4;

        $r5 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r7 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>(r16);

        interfaceinvoke $r6.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r7);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r17 = $r10;

        $r11 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        $r13 = (kotlin.coroutines.Continuation) $r11;

        $r12 = <kotlin.Result: kotlin.Result$Companion Companion>;

        $r14 = staticinvoke <kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)>(r17);

        $r15 = staticinvoke <kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)>($r14);

        interfaceinvoke $r13.<kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)>($r15);

     label5:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label6:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        kotlinx.coroutines.CancellableContinuation $r4;
        java.util.concurrent.Callable $r5;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        $r5 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable>;

        $r4 = r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation>;

        specialinvoke $r3.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: void <init>(java.util.concurrent.Callable,kotlinx.coroutines.CancellableContinuation,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.room.CoroutinesRoom$Companion$execute$4$job$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.room.CoroutinesRoom$Companion
    private void <init>()
    {
        androidx.room.CoroutinesRoom$Companion r0;

        r0 := @this: androidx.room.CoroutinesRoom$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object execute(androidx.room.RoomDatabase, boolean, java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion r0;
        androidx.room.RoomDatabase r1;
        boolean z0, $z1, $z2;
        java.util.concurrent.Callable r2;
        kotlin.coroutines.Continuation $r3;
        kotlin.coroutines.ContinuationInterceptor r4, $r10, $r12;
        kotlin.coroutines.CoroutineContext $r5, $r14;
        androidx.room.TransactionElement$Key $r6;
        kotlin.coroutines.CoroutineContext$Key $r7;
        kotlin.coroutines.CoroutineContext$Element $r8;
        androidx.room.TransactionElement $r9;
        java.lang.Object $r11, $r17;
        kotlinx.coroutines.CoroutineDispatcher $r13;
        androidx.room.CoroutinesRoom$Companion$execute$2 $r15;
        kotlin.jvm.functions.Function2 $r16;

        r0 := @this: androidx.room.CoroutinesRoom$Companion;

        r1 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.concurrent.Callable;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $z1 = virtualinvoke r1.<androidx.room.RoomDatabase: boolean isOpen()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<androidx.room.RoomDatabase: boolean inTransaction()>();

        if $z2 == 0 goto label1;

        $r11 = interfaceinvoke r2.<java.util.concurrent.Callable: java.lang.Object call()>();

        return $r11;

     label1:
        $r5 = interfaceinvoke $r3.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r6 = <androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key>;

        $r7 = (kotlin.coroutines.CoroutineContext$Key) $r6;

        $r8 = interfaceinvoke $r5.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r7);

        $r9 = (androidx.room.TransactionElement) $r8;

        if $r9 == null goto label2;

        $r10 = virtualinvoke $r9.<androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()>();

        $r12 = $r10;

        if $r10 != null goto label5;

     label2:
        if z0 == 0 goto label3;

        $r13 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase)>(r1);

        goto label4;

     label3:
        $r13 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase)>(r1);

     label4:
        $r12 = (kotlin.coroutines.ContinuationInterceptor) $r13;

     label5:
        r4 = $r12;

        $r14 = (kotlin.coroutines.CoroutineContext) r4;

        $r15 = new androidx.room.CoroutinesRoom$Companion$execute$2;

        specialinvoke $r15.<androidx.room.CoroutinesRoom$Companion$execute$2: void <init>(java.util.concurrent.Callable,kotlin.coroutines.Continuation)>(r2, null);

        $r16 = (kotlin.jvm.functions.Function2) $r15;

        $r17 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r14, $r16, $r3);

        return $r17;
    }

    public final java.lang.Object execute(androidx.room.RoomDatabase, boolean, android.os.CancellationSignal, java.util.concurrent.Callable, kotlin.coroutines.Continuation)
    {
        androidx.room.CoroutinesRoom$Companion r0;
        androidx.room.RoomDatabase r1;
        boolean z0, $z4, $z5;
        android.os.CancellationSignal r2;
        java.util.concurrent.Callable r3;
        kotlin.coroutines.Continuation $r4, r6, $r20;
        kotlin.coroutines.ContinuationInterceptor r5, $r15, $r17;
        kotlinx.coroutines.CancellableContinuationImpl r7, $r19;
        kotlinx.coroutines.CancellableContinuation r8;
        kotlinx.coroutines.Job r9;
        kotlin.coroutines.CoroutineContext $r10, $r23;
        androidx.room.TransactionElement$Key $r11;
        kotlin.coroutines.CoroutineContext$Key $r12;
        kotlin.coroutines.CoroutineContext$Element $r13;
        androidx.room.TransactionElement $r14;
        java.lang.Object $r16, $r28, $r29;
        kotlinx.coroutines.CoroutineDispatcher $r18;
        kotlinx.coroutines.GlobalScope $r21;
        kotlinx.coroutines.CoroutineScope $r22;
        androidx.room.CoroutinesRoom$Companion$execute$4$job$1 $r24;
        kotlin.jvm.functions.Function2 $r25;
        androidx.room.CoroutinesRoom$Companion$execute$4$1 $r26;
        kotlin.jvm.functions.Function1 $r27;

        r0 := @this: androidx.room.CoroutinesRoom$Companion;

        r1 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.CancellationSignal;

        r3 := @parameter3: java.util.concurrent.Callable;

        $r4 := @parameter4: kotlin.coroutines.Continuation;

        $z4 = virtualinvoke r1.<androidx.room.RoomDatabase: boolean isOpen()>();

        if $z4 == 0 goto label1;

        $z5 = virtualinvoke r1.<androidx.room.RoomDatabase: boolean inTransaction()>();

        if $z5 == 0 goto label1;

        $r16 = interfaceinvoke r3.<java.util.concurrent.Callable: java.lang.Object call()>();

        return $r16;

     label1:
        $r10 = interfaceinvoke $r4.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $r11 = <androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key>;

        $r12 = (kotlin.coroutines.CoroutineContext$Key) $r11;

        $r13 = interfaceinvoke $r10.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r12);

        $r14 = (androidx.room.TransactionElement) $r13;

        if $r14 == null goto label2;

        $r15 = virtualinvoke $r14.<androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()>();

        $r17 = $r15;

        if $r15 != null goto label5;

     label2:
        if z0 == 0 goto label3;

        $r18 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase)>(r1);

        goto label4;

     label3:
        $r18 = staticinvoke <androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase)>(r1);

     label4:
        $r17 = (kotlin.coroutines.ContinuationInterceptor) $r18;

     label5:
        r5 = $r17;

        r6 = $r4;

        $r19 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r20 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r6);

        specialinvoke $r19.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r20, 1);

        r7 = $r19;

        virtualinvoke r7.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r8 = (kotlinx.coroutines.CancellableContinuation) r7;

        $r21 = <kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE>;

        $r22 = (kotlinx.coroutines.CoroutineScope) $r21;

        $r23 = (kotlin.coroutines.CoroutineContext) r5;

        $r24 = new androidx.room.CoroutinesRoom$Companion$execute$4$job$1;

        specialinvoke $r24.<androidx.room.CoroutinesRoom$Companion$execute$4$job$1: void <init>(java.util.concurrent.Callable,kotlinx.coroutines.CancellableContinuation,kotlin.coroutines.Continuation)>(r3, r8, null);

        $r25 = (kotlin.jvm.functions.Function2) $r24;

        r9 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r22, $r23, null, $r25, 2, null);

        $r26 = new androidx.room.CoroutinesRoom$Companion$execute$4$1;

        specialinvoke $r26.<androidx.room.CoroutinesRoom$Companion$execute$4$1: void <init>(android.os.CancellationSignal,kotlinx.coroutines.Job)>(r2, r9);

        $r27 = (kotlin.jvm.functions.Function1) $r26;

        interfaceinvoke r8.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r27);

        $r28 = virtualinvoke r7.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r29 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r28 != $r29 goto label6;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r4);

     label6:
        return $r28;
    }

    public final kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase, boolean, java.lang.String[], java.util.concurrent.Callable)
    {
        androidx.room.CoroutinesRoom$Companion r0;
        androidx.room.RoomDatabase r1;
        boolean z0;
        java.lang.String[] r2;
        java.util.concurrent.Callable r3;
        androidx.room.CoroutinesRoom$Companion$createFlow$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlinx.coroutines.flow.Flow $r6;

        r0 := @this: androidx.room.CoroutinesRoom$Companion;

        r1 := @parameter0: androidx.room.RoomDatabase;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.util.concurrent.Callable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "db");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tableNames");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callable");

        $r4 = new androidx.room.CoroutinesRoom$Companion$createFlow$1;

        specialinvoke $r4.<androidx.room.CoroutinesRoom$Companion$createFlow$1: void <init>(boolean,androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)>(z0, r1, r2, r3, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r6 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)>($r5);

        return $r6;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.CoroutinesRoom$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.CoroutinesRoom$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.CoroutinesRoom$Companion: void <init>()>();

        return;
    }

