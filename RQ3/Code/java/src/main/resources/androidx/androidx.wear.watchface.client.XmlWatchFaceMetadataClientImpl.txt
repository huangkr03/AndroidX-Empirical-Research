androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl
<androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition xmlSchemaAndComplicationSlotsDefinition>
    public void <init>(androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition)
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition r1;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        r1 := @parameter0: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "xmlSchemaAndComplicationSlotsDefinition");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition xmlSchemaAndComplicationSlotsDefinition> = r1;

        return;
    }

    public androidx.wear.watchface.style.UserStyleSchema getUserStyleSchema()
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition $r1;
        java.util.List $r2;
        androidx.wear.watchface.style.UserStyleSchema $r3;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        $r1 = r0.<androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition xmlSchemaAndComplicationSlotsDefinition>;

        $r3 = virtualinvoke $r1.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        if $r3 != null goto label1;

        $r3 = new androidx.wear.watchface.style.UserStyleSchema;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r3.<androidx.wear.watchface.style.UserStyleSchema: void <init>(java.util.List)>($r2);

     label1:
        return $r3;
    }

    public boolean isUserStyleSchemaStatic()
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        return 1;
    }

    public java.util.Map getComplicationSlotMetadataMap()
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;
        java.lang.Iterable $r1;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Map r2, r18, r20;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.lang.Integer r5;
        androidx.wear.watchface.client.ComplicationSlotMetadata r6, $r10;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition $r7;
        java.util.List $r8, $r12;
        java.util.LinkedHashMap $r9;
        boolean $z2, $z3, $z4;
        androidx.wear.watchface.complications.ComplicationSlotBounds $r11;
        androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy $r13;
        android.os.Bundle $r14;
        androidx.wear.watchface.BoundingArc $r15;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData r17, r19;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        $r7 = r0.<androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition xmlSchemaAndComplicationSlotsDefinition>;

        $r8 = virtualinvoke $r7.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: java.util.List getComplicationSlots()>();

        $r1 = (java.lang.Iterable) $r8;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(int)>(i0);

        r2 = (java.util.Map) $r9;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r17 = (androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData) r4;

        r18 = r2;

        $i3 = virtualinvoke r17.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getSlotId()>();

        r19 = (androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData) r4;

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r20 = r18;

        $r10 = new androidx.wear.watchface.client.ComplicationSlotMetadata;

        $r11 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.ComplicationSlotBounds getBounds()>();

        $i4 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: int getBoundsType()>();

        $r12 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: java.util.List getSupportedTypes()>();

        $r13 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $z3 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean getInitiallyEnabled()>();

        $z4 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: boolean getFixedComplicationDataSource()>();

        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>()>();

        $r15 = virtualinvoke r19.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition$ComplicationSlotStaticData: androidx.wear.watchface.BoundingArc getBoundingArc()>();

        specialinvoke $r10.<androidx.wear.watchface.client.ComplicationSlotMetadata: void <init>(androidx.wear.watchface.complications.ComplicationSlotBounds,int,java.util.List,androidx.wear.watchface.complications.DefaultComplicationDataSourcePolicy,boolean,boolean,android.os.Bundle,androidx.wear.watchface.BoundingArc)>($r11, $i4, $r12, $r13, $z3, $z4, $r14, $r15);

        r6 = $r10;

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label1;

     label2:
        return r2;
    }

    public androidx.wear.watchface.UserStyleFlavors getUserStyleFlavors()
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;
        androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition $r1;
        androidx.wear.watchface.UserStyleFlavors $r2;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        $r1 = r0.<androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl: androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition xmlSchemaAndComplicationSlotsDefinition>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.XmlSchemaAndComplicationSlotsDefinition: androidx.wear.watchface.UserStyleFlavors getFlavors()>();

        if $r2 != null goto label1;

        $r2 = new androidx.wear.watchface.UserStyleFlavors;

        specialinvoke $r2.<androidx.wear.watchface.UserStyleFlavors: void <init>()>();

     label1:
        return $r2;
    }

    public void close()
    {
        androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl r0;

        r0 := @this: androidx.wear.watchface.client.XmlWatchFaceMetadataClientImpl;

        return;
    }

