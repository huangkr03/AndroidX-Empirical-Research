androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.concurrent.atomic.AtomicInteger itemCount>
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.paging.util.ThreadSafeInvalidationObserver observer>
    public transient void <init>(androidx.room.RoomSQLiteQuery, androidx.room.RoomDatabase, java.lang.String[])
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.room.RoomSQLiteQuery r1;
        androidx.room.RoomDatabase r2;
        java.lang.String[] r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        androidx.room.paging.util.ThreadSafeInvalidationObserver $r5;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1 $r6;
        kotlin.jvm.functions.Function0 $r7;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.room.RoomSQLiteQuery;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r3 := @parameter2: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "sourceQuery");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "db");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "tables");

        specialinvoke r0.<androidx.paging.ListenableFuturePagingSource: void <init>()>();

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery> = r1;

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db> = r2;

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1);

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.concurrent.atomic.AtomicInteger itemCount> = $r4;

        $r5 = new androidx.room.paging.util.ThreadSafeInvalidationObserver;

        $r6 = new androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1;

        specialinvoke $r6.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1: void <init>(java.lang.Object)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        specialinvoke $r5.<androidx.room.paging.util.ThreadSafeInvalidationObserver: void <init>(java.lang.String[],kotlin.jvm.functions.Function0)>(r3, $r7);

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.paging.util.ThreadSafeInvalidationObserver observer> = $r5;

        return;
    }

    public transient void <init>(androidx.sqlite.db.SupportSQLiteQuery, androidx.room.RoomDatabase, java.lang.String[])
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.sqlite.db.SupportSQLiteQuery r1;
        androidx.room.RoomDatabase r2;
        java.lang.String[] r3, $r7;
        androidx.room.RoomSQLiteQuery$Companion $r4;
        androidx.room.RoomSQLiteQuery $r5;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteQuery;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r3 := @parameter2: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "supportSQLiteQuery");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "db");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "tables");

        $r4 = <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.room.RoomSQLiteQuery$Companion: androidx.room.RoomSQLiteQuery copyFrom(androidx.sqlite.db.SupportSQLiteQuery)>(r1);

        $i0 = lengthof r3;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r3, $i0);

        $r7 = (java.lang.String[]) $r6;

        specialinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: void <init>(androidx.room.RoomSQLiteQuery,androidx.room.RoomDatabase,java.lang.String[])>($r5, r2, $r7);

        return;
    }

    public final java.util.concurrent.atomic.AtomicInteger getItemCount$room_paging_guava_release()
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        $r1 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.concurrent.atomic.AtomicInteger itemCount>;

        return $r1;
    }

    public static void getItemCount$room_paging_guava_release$annotations()
    {
        return;
    }

    public com.google.common.util.concurrent.ListenableFuture loadFuture(androidx.paging.PagingSource$LoadParams)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        com.google.common.util.concurrent.ListenableFuture r2, $r5;
        androidx.room.RoomDatabase $r3, $r9;
        java.util.concurrent.Callable $r4;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2 $r6;
        kotlin.jvm.functions.Function1 $r7;
        com.google.common.util.concurrent.AsyncFunction $r8;
        java.util.concurrent.Executor $r10;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        $r3 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: kotlin.Unit loadFuture$lambda$0(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource)>, methodtype: kotlin.Unit __METHODTYPE__());

        $r5 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable)>($r3, 0, $r4);

        $r6 = new androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2;

        specialinvoke $r6.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: void <init>(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams)>(r0, r1);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r8 = dynamicinvoke "apply" <com.google.common.util.concurrent.AsyncFunction (kotlin.jvm.functions.Function1)>($r7) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: com.google.common.util.concurrent.ListenableFuture loadFuture$lambda$1(kotlin.jvm.functions.Function1,java.lang.Object)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object));

        $r9 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r10 = virtualinvoke $r9.<androidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()>();

        r2 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor)>($r5, $r8, $r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "override fun loadFuture(\u2026yExecutor\n        )\n    }");

        return r2;
    }

    private final com.google.common.util.concurrent.ListenableFuture initialLoad(androidx.paging.PagingSource$LoadParams)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Callable r3;
        androidx.room.RoomSQLiteQuery $r4;
        androidx.room.RoomDatabase $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        r2 = staticinvoke <androidx.room.util.DBUtil: android.os.CancellationSignal createCancellationSignal()>();

        r3 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams,android.os.CancellationSignal)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.paging.PagingSource$LoadResult initialLoad$lambda$3(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams,android.os.CancellationSignal)>, methodtype: androidx.paging.PagingSource$LoadResult __METHODTYPE__());

        $r5 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r4 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>;

        $r6 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r5, 1, r3, $r4, 0, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "createListenableFuture(\n\u2026ellationSignal,\n        )");

        return $r6;
    }

    private final com.google.common.util.concurrent.ListenableFuture nonInitialLoad(androidx.paging.PagingSource$LoadParams, int)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingSource$LoadParams r1;
        int i0;
        android.os.CancellationSignal r2;
        java.util.concurrent.Callable r3;
        androidx.room.RoomSQLiteQuery $r4;
        androidx.room.RoomDatabase $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter1: int;

        r2 = staticinvoke <androidx.room.util.DBUtil: android.os.CancellationSignal createCancellationSignal()>();

        r3 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.paging.PagingSource$LoadParams,androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,int,android.os.CancellationSignal)>(r1, r0, i0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.paging.PagingSource$LoadResult nonInitialLoad$lambda$4(androidx.paging.PagingSource$LoadParams,androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,int,android.os.CancellationSignal)>, methodtype: androidx.paging.PagingSource$LoadResult __METHODTYPE__());

        $r5 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r4 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>;

        $r6 = staticinvoke <androidx.room.guava.GuavaRoom: com.google.common.util.concurrent.ListenableFuture createListenableFuture(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,androidx.room.RoomSQLiteQuery,boolean,android.os.CancellationSignal)>($r5, 0, r3, $r4, 0, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "createListenableFuture(\n\u2026cellationSignal\n        )");

        return $r6;
    }

<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.List convertRows(android.database.Cursor)>
    public boolean getJumpingSupported()
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        return 1;
    }

    public java.lang.Integer getRefreshKey(androidx.paging.PagingState)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingState r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.paging.PagingState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r2 = staticinvoke <androidx.room.paging.util.RoomPagingUtilKt: java.lang.Integer getClippedRefreshKey(androidx.paging.PagingState)>(r1);

        return $r2;
    }

    private static final kotlin.Unit loadFuture$lambda$0(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.room.RoomDatabase $r1;
        androidx.room.paging.util.ThreadSafeInvalidationObserver $r2;
        kotlin.Unit $r3;

        r0 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r2 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.paging.util.ThreadSafeInvalidationObserver observer>;

        $r1 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        virtualinvoke $r2.<androidx.room.paging.util.ThreadSafeInvalidationObserver: void registerIfNecessary(androidx.room.RoomDatabase)>($r1);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    private static final com.google.common.util.concurrent.ListenableFuture loadFuture$lambda$1(kotlin.jvm.functions.Function1, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object r1, $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r3 = (com.google.common.util.concurrent.ListenableFuture) $r2;

        return $r3;
    }

    private static final androidx.paging.PagingSource$LoadResult initialLoad$lambda$3$lambda$2(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, androidx.paging.PagingSource$LoadParams, android.os.CancellationSignal)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingSource$LoadParams $r1;
        android.os.CancellationSignal $r2;
        int i0;
        androidx.room.RoomDatabase $r3, $r8;
        androidx.room.RoomSQLiteQuery $r4, $r7;
        java.util.concurrent.atomic.AtomicInteger $r5;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1 $r6;
        kotlin.jvm.functions.Function1 $r9;
        androidx.paging.PagingSource$LoadResult $r10;

        r0 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        $r1 := @parameter1: androidx.paging.PagingSource$LoadParams;

        $r2 := @parameter2: android.os.CancellationSignal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$params");

        $r4 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>;

        $r3 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        i0 = staticinvoke <androidx.room.paging.util.RoomPagingUtilKt: int queryItemCount(androidx.room.RoomSQLiteQuery,androidx.room.RoomDatabase)>($r4, $r3);

        $r5 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.concurrent.atomic.AtomicInteger itemCount>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i0);

        $r7 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>;

        $r8 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r6 = new androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1;

        specialinvoke $r6.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1: void <init>(java.lang.Object)>(r0);

        $r9 = (kotlin.jvm.functions.Function1) $r6;

        $r10 = staticinvoke <androidx.room.paging.util.RoomPagingUtilKt: androidx.paging.PagingSource$LoadResult queryDatabase(androidx.paging.PagingSource$LoadParams,androidx.room.RoomSQLiteQuery,androidx.room.RoomDatabase,int,android.os.CancellationSignal,kotlin.jvm.functions.Function1)>($r1, $r7, $r8, i0, $r2, $r9);

        return $r10;
    }

    private static final androidx.paging.PagingSource$LoadResult initialLoad$lambda$3(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, androidx.paging.PagingSource$LoadParams, android.os.CancellationSignal)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingSource$LoadParams $r1;
        android.os.CancellationSignal $r2;
        androidx.room.RoomDatabase $r3;
        java.util.concurrent.Callable $r4;
        java.lang.Object $r5;
        androidx.paging.PagingSource$LoadResult $r6;

        r0 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        $r1 := @parameter1: androidx.paging.PagingSource$LoadParams;

        $r2 := @parameter2: android.os.CancellationSignal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$params");

        $r3 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r4 = dynamicinvoke "call" <java.util.concurrent.Callable (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams,android.os.CancellationSignal)>(r0, $r1, $r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.paging.PagingSource$LoadResult initialLoad$lambda$3$lambda$2(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams,android.os.CancellationSignal)>, methodtype: androidx.paging.PagingSource$LoadResult __METHODTYPE__());

        $r5 = virtualinvoke $r3.<androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)>($r4);

        $r6 = (androidx.paging.PagingSource$LoadResult) $r5;

        return $r6;
    }

    private static final androidx.paging.PagingSource$LoadResult nonInitialLoad$lambda$4(androidx.paging.PagingSource$LoadParams, androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, int, android.os.CancellationSignal)
    {
        androidx.paging.PagingSource$LoadParams $r0;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r1;
        int $i0;
        android.os.CancellationSignal $r2;
        androidx.paging.PagingSource$LoadResult r3, $r11;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1 $r4;
        androidx.room.RoomSQLiteQuery $r5;
        androidx.room.RoomDatabase $r6, $r8;
        kotlin.jvm.functions.Function1 $r7;
        androidx.room.InvalidationTracker $r9;
        boolean $z0;
        androidx.paging.PagingSource$LoadResult$Invalid $r10;

        $r0 := @parameter0: androidx.paging.PagingSource$LoadParams;

        r1 := @parameter1: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        $i0 := @parameter2: int;

        $r2 := @parameter3: android.os.CancellationSignal;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$params");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        $r5 = r1.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomSQLiteQuery sourceQuery>;

        $r6 = r1.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r4 = new androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1;

        specialinvoke $r4.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1: void <init>(java.lang.Object)>(r1);

        $r7 = (kotlin.jvm.functions.Function1) $r4;

        r3 = staticinvoke <androidx.room.paging.util.RoomPagingUtilKt: androidx.paging.PagingSource$LoadResult queryDatabase(androidx.paging.PagingSource$LoadParams,androidx.room.RoomSQLiteQuery,androidx.room.RoomDatabase,int,android.os.CancellationSignal,kotlin.jvm.functions.Function1)>($r0, $r5, $r6, $i0, $r2, $r7);

        $r8 = r1.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: androidx.room.RoomDatabase db>;

        $r9 = virtualinvoke $r8.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        virtualinvoke $r9.<androidx.room.InvalidationTracker: void refreshVersionsSync()>();

        $z0 = virtualinvoke r1.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: boolean getInvalid()>();

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <androidx.room.paging.util.RoomPagingUtilKt: androidx.paging.PagingSource$LoadResult$Invalid getINVALID()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type androidx.paging.PagingSource.LoadResult.Invalid<kotlin.Int, Value of androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource.nonInitialLoad$lambda$4>");

        $r11 = (androidx.paging.PagingSource$LoadResult) $r10;

        goto label2;

     label1:
        $r11 = r3;

     label2:
        return $r11;
    }

    public volatile java.lang.Object getRefreshKey(androidx.paging.PagingState)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource r0;
        androidx.paging.PagingState r1;
        java.lang.Integer $r2;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter0: androidx.paging.PagingState;

        $r2 = virtualinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.lang.Integer getRefreshKey(androidx.paging.PagingState)>(r1);

        return $r2;
    }

    public static final com.google.common.util.concurrent.ListenableFuture access$initialLoad(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, androidx.paging.PagingSource$LoadParams)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r0;
        androidx.paging.PagingSource$LoadParams r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        $r0 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter1: androidx.paging.PagingSource$LoadParams;

        $r2 = specialinvoke $r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: com.google.common.util.concurrent.ListenableFuture initialLoad(androidx.paging.PagingSource$LoadParams)>(r1);

        return $r2;
    }

    public static final com.google.common.util.concurrent.ListenableFuture access$nonInitialLoad(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, androidx.paging.PagingSource$LoadParams, int)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r0;
        androidx.paging.PagingSource$LoadParams r1;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r2;

        $r0 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        r1 := @parameter1: androidx.paging.PagingSource$LoadParams;

        i0 := @parameter2: int;

        $r2 = specialinvoke $r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: com.google.common.util.concurrent.ListenableFuture nonInitialLoad(androidx.paging.PagingSource$LoadParams,int)>(r1, i0);

        return $r2;
    }

androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1
    void <init>(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(1, r1, class "Landroidx/room/paging/guava/LimitOffsetListenableFuturePagingSource;", "convertRows", "convertRows(Landroid/database/Cursor;)Ljava/util/List;", 0);

        return;
    }

    public final java.util.List invoke(android.database.Cursor)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1 r0;
        android.database.Cursor r1;
        java.lang.Object $r2;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r3;
        java.util.List $r4;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1;

        r1 := @parameter0: android.database.Cursor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1: java.lang.Object receiver>;

        $r3 = (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource) $r2;

        $r4 = virtualinvoke $r3.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.List convertRows(android.database.Cursor)>(r1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1 r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $r3 = virtualinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$initialLoad$loadCallable$1$1$1: java.util.List invoke(android.database.Cursor)>($r2);

        return $r3;
    }

androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource this$0>
<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.paging.PagingSource$LoadParams $params>
    void <init>(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource, androidx.paging.PagingSource$LoadParams)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2 r0;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r1;
        androidx.paging.PagingSource$LoadParams $r2;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2;

        $r1 := @parameter0: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource;

        $r2 := @parameter1: androidx.paging.PagingSource$LoadParams;

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource this$0> = $r1;

        r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.paging.PagingSource$LoadParams $params> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final com.google.common.util.concurrent.ListenableFuture invoke(kotlin.Unit)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2 r0;
        kotlin.Unit r1;
        int i0;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r2, $r5, $r7;
        java.util.concurrent.atomic.AtomicInteger $r3;
        androidx.paging.PagingSource$LoadParams $r4, $r6;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2;

        r1 := @parameter0: kotlin.Unit;

        $r2 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.concurrent.atomic.AtomicInteger getItemCount$room_paging_guava_release()>();

        i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 != -1 goto label1;

        $r7 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource this$0>;

        $r6 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.paging.PagingSource$LoadParams $params>;

        $r8 = staticinvoke <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: com.google.common.util.concurrent.ListenableFuture access$initialLoad(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams)>($r7, $r6);

        goto label2;

     label1:
        $r5 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource this$0>;

        $r4 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: androidx.paging.PagingSource$LoadParams $params>;

        $r8 = staticinvoke <androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: com.google.common.util.concurrent.ListenableFuture access$nonInitialLoad(androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource,androidx.paging.PagingSource$LoadParams,int)>($r5, $r4, i0);

     label2:
        return $r8;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2 r0;
        java.lang.Object r1;
        kotlin.Unit $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.Unit) r1;

        $r3 = virtualinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$loadFuture$2: com.google.common.util.concurrent.ListenableFuture invoke(kotlin.Unit)>($r2);

        return $r3;
    }

androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1
    void <init>(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(1, r1, class "Landroidx/room/paging/guava/LimitOffsetListenableFuturePagingSource;", "convertRows", "convertRows(Landroid/database/Cursor;)Ljava/util/List;", 0);

        return;
    }

    public final java.util.List invoke(android.database.Cursor)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1 r0;
        android.database.Cursor r1;
        java.lang.Object $r2;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r3;
        java.util.List $r4;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1;

        r1 := @parameter0: android.database.Cursor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1: java.lang.Object receiver>;

        $r3 = (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource) $r2;

        $r4 = virtualinvoke $r3.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: java.util.List convertRows(android.database.Cursor)>(r1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1 r0;
        java.lang.Object r1;
        android.database.Cursor $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.database.Cursor) r1;

        $r3 = virtualinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$nonInitialLoad$loadCallable$1$result$1: java.util.List invoke(android.database.Cursor)>($r2);

        return $r3;
    }

androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1
    void <init>(java.lang.Object)
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1 r0;
        java.lang.Object r1;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)>(0, r1, class "Landroidx/room/paging/guava/LimitOffsetListenableFuturePagingSource;", "invalidate", "invalidate()V", 0);

        return;
    }

    public final void invoke()
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1 r0;
        java.lang.Object $r1;
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource $r2;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1;

        $r1 = r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1: java.lang.Object receiver>;

        $r2 = (androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource) $r1;

        virtualinvoke $r2.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource: void invalidate()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1;

        virtualinvoke r0.<androidx.room.paging.guava.LimitOffsetListenableFuturePagingSource$observer$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

