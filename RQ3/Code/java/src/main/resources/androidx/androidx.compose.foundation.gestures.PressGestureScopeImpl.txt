androidx.compose.foundation.gestures.PressGestureScopeImpl
<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>
<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isReleased>
<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isCanceled>
<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex>
    public void <init>(androidx.compose.ui.unit.Density)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        androidx.compose.ui.unit.Density r1;
        kotlinx.coroutines.sync.Mutex $r2;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        r1 := @parameter0: androidx.compose.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "density");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0> = r1;

        $r2 = staticinvoke <kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex(boolean)>(0);

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex> = $r2;

        return;
    }

    public float getDensity()
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        androidx.compose.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        androidx.compose.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    public int roundToPx-0680j_4(float)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        float $f0;
        androidx.compose.ui.unit.Density $r1;
        int $i0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $i0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: int roundToPx-0680j_4(float)>($f0);

        return $i0;
    }

    public int roundToPx--R2X_6o(long)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        long $l0;
        androidx.compose.ui.unit.Density $r1;
        int $i1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: int roundToPx--R2X_6o(long)>($l0);

        return $i1;
    }

    public float toDp-GaN1DYA(long)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        long $l0;
        androidx.compose.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float toDp-GaN1DYA(long)>($l0);

        return $f0;
    }

    public float toDp-u2uoSUM(float)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.unit.Density $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float toDp-u2uoSUM(float)>($f0);

        return $f1;
    }

    public float toDp-u2uoSUM(int)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        int $i0;
        androidx.compose.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float toDp-u2uoSUM(int)>($i0);

        return $f0;
    }

    public long toDpSize-k-rfVVM(long)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.unit.Density $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $l1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: long toDpSize-k-rfVVM(long)>($l0);

        return $l1;
    }

    public float toPx-0680j_4(float)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        float $f0, $f1;
        androidx.compose.ui.unit.Density $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float toPx-0680j_4(float)>($f0);

        return $f1;
    }

    public float toPx--R2X_6o(long)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        long $l0;
        androidx.compose.ui.unit.Density $r1;
        float $f0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $f0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: float toPx--R2X_6o(long)>($l0);

        return $f0;
    }

    public androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        androidx.compose.ui.unit.DpRect $r1;
        androidx.compose.ui.unit.Density $r2;
        androidx.compose.ui.geometry.Rect $r3;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r1 := @parameter0: androidx.compose.ui.unit.DpRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $r3 = interfaceinvoke $r2.<androidx.compose.ui.unit.Density: androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect)>($r1);

        return $r3;
    }

    public long toSize-XkaWNTQ(long)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        long $l0, $l1;
        androidx.compose.ui.unit.Density $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $l1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: long toSize-XkaWNTQ(long)>($l0);

        return $l1;
    }

    public long toSp-0xMU5do(float)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        float $f0;
        androidx.compose.ui.unit.Density $r1;
        long $l0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $l0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: long toSp-0xMU5do(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(float)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        float $f0;
        androidx.compose.ui.unit.Density $r1;
        long $l0;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $l0 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: long toSp-kPz2Gy4(float)>($f0);

        return $l0;
    }

    public long toSp-kPz2Gy4(int)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        int $i0;
        androidx.compose.ui.unit.Density $r1;
        long $l1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: androidx.compose.ui.unit.Density $$delegate_0>;

        $l1 = interfaceinvoke $r1.<androidx.compose.ui.unit.Density: long toSp-kPz2Gy4(int)>($i0);

        return $l1;
    }

    public final void cancel()
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        kotlinx.coroutines.sync.Mutex $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isCanceled> = 1;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex>;

        staticinvoke <kotlinx.coroutines.sync.Mutex$DefaultImpls: void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

    public final void release()
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        kotlinx.coroutines.sync.Mutex $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isReleased> = 1;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex>;

        staticinvoke <kotlinx.coroutines.sync.Mutex$DefaultImpls: void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)>($r1, null, 1, null);

        return;
    }

    public final void reset()
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        kotlinx.coroutines.sync.Mutex $r1;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r1 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex>;

        staticinvoke <kotlinx.coroutines.sync.Mutex$DefaultImpls: boolean tryLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)>($r1, null, 1, null);

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isReleased> = 0;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isCanceled> = 0;

        return;
    }

    public java.lang.Object awaitRelease(kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl r0;
        kotlin.coroutines.Continuation r1, r14;
        java.lang.Object $r2, r3, $r10;
        boolean $z0, $z1;
        java.lang.Boolean $r5;
        kotlin.Unit $r6;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1 $r9, r11;
        androidx.compose.foundation.gestures.GestureCancellationException r12;
        java.lang.IllegalStateException r13;
        java.lang.Throwable r15;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1;

        if $z0 == 0 goto label1;

        $r9 = (androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1) r1;

        $i0 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label>;

        $i3 = $i2 - -2147483648;

        $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label> = $i3;

        goto label2;

     label1:
        r11 = new androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1;

        specialinvoke r11.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: void <init>(androidx.compose.foundation.gestures.PressGestureScopeImpl,kotlin.coroutines.Continuation)>(r0, r1);

        $r9 = r11;

     label2:
        $r2 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label> = 1;

        r14 = (kotlin.coroutines.Continuation) $r9;

        $r10 = virtualinvoke r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl: java.lang.Object tryAwaitRelease(kotlin.coroutines.Continuation)>(r14);

        if $r10 != r3 goto label5;

        return r3;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        $r10 = $r2;

     label5:
        $r5 = (java.lang.Boolean) $r10;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label6;

        r12 = new androidx.compose.foundation.gestures.GestureCancellationException;

        specialinvoke r12.<androidx.compose.foundation.gestures.GestureCancellationException: void <init>(java.lang.String)>("The press gesture was canceled.");

        r15 = (java.lang.Throwable) r12;

        throw r15;

     label6:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label7:
        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r13;
    }

    public java.lang.Object tryAwaitRelease(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r13;
        java.lang.Object $r1, r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        kotlinx.coroutines.sync.Mutex $r5;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.foundation.gestures.PressGestureScopeImpl r8;
        androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1 $r9, r11;
        java.lang.Boolean $r10;
        java.lang.IllegalStateException r12;

        r8 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1;

        if $z0 == 0 goto label1;

        $r9 = (androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1) r0;

        $i0 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label>;

        $i3 = $i2 - -2147483648;

        $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label> = $i3;

        goto label2;

     label1:
        r11 = new androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1;

        specialinvoke r11.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: void <init>(androidx.compose.foundation.gestures.PressGestureScopeImpl,kotlin.coroutines.Continuation)>(r8, r0);

        $r9 = r11;

     label2:
        $r1 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label6;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $z1 = r8.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isReleased>;

        if $z1 != 0 goto label5;

        $z2 = r8.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isCanceled>;

        if $z2 != 0 goto label5;

        $r5 = r8.<androidx.compose.foundation.gestures.PressGestureScopeImpl: kotlinx.coroutines.sync.Mutex mutex>;

        $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object L$0> = r8;

        $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label> = 1;

        r13 = (kotlin.coroutines.Continuation) $r9;

        $r6 = staticinvoke <kotlinx.coroutines.sync.Mutex$DefaultImpls: java.lang.Object lock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, null, r13, 1, null);

        if $r6 != r2 goto label5;

        return r2;

     label4:
        $r4 = $r9.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object L$0>;

        r8 = (androidx.compose.foundation.gestures.PressGestureScopeImpl) $r4;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $z3 = r8.<androidx.compose.foundation.gestures.PressGestureScopeImpl: boolean isReleased>;

        $r10 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)>($z3);

        return $r10;

     label6:
        r12 = new java.lang.IllegalStateException;

        specialinvoke r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r12;
    }

androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1
<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: java.lang.Object result>
<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0>
<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label>
    void <init>(androidx.compose.foundation.gestures.PressGestureScopeImpl, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1 r0;
        androidx.compose.foundation.gestures.PressGestureScopeImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1;

        r1 := @parameter0: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.gestures.PressGestureScopeImpl $r3;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: int label> = $i1;

        $r3 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$awaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.gestures.PressGestureScopeImpl: java.lang.Object awaitRelease(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1
<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object L$0>
<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object result>
<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0>
<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label>
    void <init>(androidx.compose.foundation.gestures.PressGestureScopeImpl, kotlin.coroutines.Continuation)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1 r0;
        androidx.compose.foundation.gestures.PressGestureScopeImpl r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1;

        r1 := @parameter0: androidx.compose.foundation.gestures.PressGestureScopeImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.foundation.gestures.PressGestureScopeImpl $r3;

        r0 := @this: androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: int label> = $i1;

        $r3 = r0.<androidx.compose.foundation.gestures.PressGestureScopeImpl$tryAwaitRelease$1: androidx.compose.foundation.gestures.PressGestureScopeImpl this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.foundation.gestures.PressGestureScopeImpl: java.lang.Object tryAwaitRelease(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

