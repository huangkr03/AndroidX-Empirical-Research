androidx.compose.ui.text.input.TextInputSession
<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.TextInputService textInputService>
<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService>
<androidx.compose.ui.text.input.TextInputSession: int $stable>
    public void <init>(androidx.compose.ui.text.input.TextInputService, androidx.compose.ui.text.input.PlatformTextInputService)
    {
        androidx.compose.ui.text.input.TextInputSession r0;
        androidx.compose.ui.text.input.TextInputService r1;
        androidx.compose.ui.text.input.PlatformTextInputService r2;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 := @parameter0: androidx.compose.ui.text.input.TextInputService;

        r2 := @parameter1: androidx.compose.ui.text.input.PlatformTextInputService;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "textInputService");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "platformTextInputService");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.TextInputService textInputService> = r1;

        r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService> = r2;

        return;
    }

    public final boolean isOpen()
    {
        androidx.compose.ui.text.input.TextInputSession r0, $r2;
        androidx.compose.ui.text.input.TextInputService $r1;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        $r1 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.TextInputService textInputService>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.input.TextInputService: androidx.compose.ui.text.input.TextInputSession getCurrentInputSession$ui_text_release()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, r0);

        return $z0;
    }

    public final void dispose()
    {
        androidx.compose.ui.text.input.TextInputSession r0;
        androidx.compose.ui.text.input.TextInputService $r1;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        $r1 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.TextInputService textInputService>;

        virtualinvoke $r1.<androidx.compose.ui.text.input.TextInputService: void stopInput(androidx.compose.ui.text.input.TextInputSession)>(r0);

        return;
    }

    private final boolean ensureOpenSession(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.text.input.TextInputSession r0;
        kotlin.jvm.functions.Function0 r1;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        z1 = virtualinvoke r0.<androidx.compose.ui.text.input.TextInputSession: boolean isOpen()>();

        z2 = z1;

        if z2 == 0 goto label1;

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label1:
        return z1;
    }

    public final boolean notifyFocusedRect(androidx.compose.ui.geometry.Rect)
    {
        androidx.compose.ui.text.input.TextInputSession r0, r2;
        androidx.compose.ui.geometry.Rect r1;
        boolean z1, z2;
        androidx.compose.ui.text.input.PlatformTextInputService $r3;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 := @parameter0: androidx.compose.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        r2 = r0;

        z1 = virtualinvoke r2.<androidx.compose.ui.text.input.TextInputSession: boolean isOpen()>();

        z2 = z1;

        if z2 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r3.<androidx.compose.ui.text.input.PlatformTextInputService: void notifyFocusedRect(androidx.compose.ui.geometry.Rect)>(r1);

     label1:
        return z1;
    }

    public final boolean updateState(androidx.compose.ui.text.input.TextFieldValue, androidx.compose.ui.text.input.TextFieldValue)
    {
        androidx.compose.ui.text.input.TextInputSession r0, r3;
        androidx.compose.ui.text.input.TextFieldValue r1, r2;
        boolean z1, z2;
        androidx.compose.ui.text.input.PlatformTextInputService $r4;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        r2 := @parameter1: androidx.compose.ui.text.input.TextFieldValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "newValue");

        r3 = r0;

        z1 = virtualinvoke r3.<androidx.compose.ui.text.input.TextInputSession: boolean isOpen()>();

        z2 = z1;

        if z2 == 0 goto label1;

        $r4 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r4.<androidx.compose.ui.text.input.PlatformTextInputService: void updateState(androidx.compose.ui.text.input.TextFieldValue,androidx.compose.ui.text.input.TextFieldValue)>(r1, r2);

     label1:
        return z1;
    }

    public final boolean showSoftwareKeyboard()
    {
        androidx.compose.ui.text.input.TextInputSession r0, r1;
        boolean z1, z2;
        androidx.compose.ui.text.input.PlatformTextInputService $r2;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 = r0;

        z1 = virtualinvoke r1.<androidx.compose.ui.text.input.TextInputSession: boolean isOpen()>();

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r2.<androidx.compose.ui.text.input.PlatformTextInputService: void showSoftwareKeyboard()>();

     label1:
        return z1;
    }

    public final boolean hideSoftwareKeyboard()
    {
        androidx.compose.ui.text.input.TextInputSession r0, r1;
        boolean z1, z2;
        androidx.compose.ui.text.input.PlatformTextInputService $r2;

        r0 := @this: androidx.compose.ui.text.input.TextInputSession;

        r1 = r0;

        z1 = virtualinvoke r1.<androidx.compose.ui.text.input.TextInputSession: boolean isOpen()>();

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = r0.<androidx.compose.ui.text.input.TextInputSession: androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r2.<androidx.compose.ui.text.input.PlatformTextInputService: void hideSoftwareKeyboard()>();

     label1:
        return z1;
    }

    static void <clinit>()
    {
        <androidx.compose.ui.text.input.TextInputSession: int $stable> = 8;

        return;
    }

