androidx.media3.exoplayer.audio.AudioSink
<androidx.media3.exoplayer.audio.AudioSink: int SINK_FORMAT_SUPPORTED_DIRECTLY>
<androidx.media3.exoplayer.audio.AudioSink: int SINK_FORMAT_SUPPORTED_WITH_TRANSCODING>
<androidx.media3.exoplayer.audio.AudioSink: int SINK_FORMAT_UNSUPPORTED>
<androidx.media3.exoplayer.audio.AudioSink: long CURRENT_POSITION_NOT_SET>
<androidx.media3.exoplayer.audio.AudioSink: void setListener(androidx.media3.exoplayer.audio.AudioSink$Listener)>
    public void setPlayerId(androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.audio.AudioSink r0;
        androidx.media3.exoplayer.analytics.PlayerId r1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink;

        r1 := @parameter0: androidx.media3.exoplayer.analytics.PlayerId;

        return;
    }

<androidx.media3.exoplayer.audio.AudioSink: boolean supportsFormat(androidx.media3.common.Format)>
<androidx.media3.exoplayer.audio.AudioSink: int getFormatSupport(androidx.media3.common.Format)>
<androidx.media3.exoplayer.audio.AudioSink: long getCurrentPositionUs(boolean)>
<androidx.media3.exoplayer.audio.AudioSink: void configure(androidx.media3.common.Format,int,int[])>
<androidx.media3.exoplayer.audio.AudioSink: void play()>
<androidx.media3.exoplayer.audio.AudioSink: void handleDiscontinuity()>
<androidx.media3.exoplayer.audio.AudioSink: boolean handleBuffer(java.nio.ByteBuffer,long,int)>
<androidx.media3.exoplayer.audio.AudioSink: void playToEndOfStream()>
<androidx.media3.exoplayer.audio.AudioSink: boolean isEnded()>
<androidx.media3.exoplayer.audio.AudioSink: boolean hasPendingData()>
<androidx.media3.exoplayer.audio.AudioSink: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>
<androidx.media3.exoplayer.audio.AudioSink: androidx.media3.common.PlaybackParameters getPlaybackParameters()>
<androidx.media3.exoplayer.audio.AudioSink: void setSkipSilenceEnabled(boolean)>
<androidx.media3.exoplayer.audio.AudioSink: boolean getSkipSilenceEnabled()>
<androidx.media3.exoplayer.audio.AudioSink: void setAudioAttributes(androidx.media3.common.AudioAttributes)>
<androidx.media3.exoplayer.audio.AudioSink: androidx.media3.common.AudioAttributes getAudioAttributes()>
<androidx.media3.exoplayer.audio.AudioSink: void setAudioSessionId(int)>
<androidx.media3.exoplayer.audio.AudioSink: void setAuxEffectInfo(androidx.media3.common.AuxEffectInfo)>
    public void setPreferredDevice(android.media.AudioDeviceInfo)
    {
        androidx.media3.exoplayer.audio.AudioSink r0;
        android.media.AudioDeviceInfo r1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink;

        r1 := @parameter0: android.media.AudioDeviceInfo;

        return;
    }

    public void setOutputStreamOffsetUs(long)
    {
        androidx.media3.exoplayer.audio.AudioSink r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink;

        l0 := @parameter0: long;

        return;
    }

<androidx.media3.exoplayer.audio.AudioSink: void enableTunnelingV21()>
<androidx.media3.exoplayer.audio.AudioSink: void disableTunneling()>
<androidx.media3.exoplayer.audio.AudioSink: void setVolume(float)>
<androidx.media3.exoplayer.audio.AudioSink: void pause()>
<androidx.media3.exoplayer.audio.AudioSink: void flush()>
<androidx.media3.exoplayer.audio.AudioSink: void experimentalFlushWithoutAudioTrackRelease()>
<androidx.media3.exoplayer.audio.AudioSink: void reset()>
androidx.media3.exoplayer.audio.AudioSink$ConfigurationException
<androidx.media3.exoplayer.audio.AudioSink$ConfigurationException: androidx.media3.common.Format format>
    public void <init>(java.lang.Throwable, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.AudioSink$ConfigurationException r0;
        java.lang.Throwable r1;
        androidx.media3.common.Format r2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$ConfigurationException;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: androidx.media3.common.Format;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.Throwable)>(r1);

        r0.<androidx.media3.exoplayer.audio.AudioSink$ConfigurationException: androidx.media3.common.Format format> = r2;

        return;
    }

    public void <init>(java.lang.String, androidx.media3.common.Format)
    {
        androidx.media3.exoplayer.audio.AudioSink$ConfigurationException r0;
        java.lang.String r1;
        androidx.media3.common.Format r2;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$ConfigurationException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.common.Format;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<androidx.media3.exoplayer.audio.AudioSink$ConfigurationException: androidx.media3.common.Format format> = r2;

        return;
    }

androidx.media3.exoplayer.audio.AudioSink$InitializationException
<androidx.media3.exoplayer.audio.AudioSink$InitializationException: int audioTrackState>
<androidx.media3.exoplayer.audio.AudioSink$InitializationException: boolean isRecoverable>
<androidx.media3.exoplayer.audio.AudioSink$InitializationException: androidx.media3.common.Format format>
    public void <init>(int, int, int, int, androidx.media3.common.Format, boolean, java.lang.Exception)
    {
        androidx.media3.exoplayer.audio.AudioSink$InitializationException r0;
        int i0, i1, i2, i3;
        androidx.media3.common.Format r1;
        boolean z0;
        java.lang.Exception r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r18;
        java.lang.String $r15, $r17;
        java.lang.Throwable r19;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$InitializationException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: androidx.media3.common.Format;

        z0 := @parameter5: boolean;

        r2 := @parameter6: java.lang.Exception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioTrack init failed ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        if z0 == 0 goto label1;

        $r17 = " (recoverable)";

        goto label2;

     label1:
        $r17 = "";

     label2:
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r19 = (java.lang.Throwable) r2;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($r15, r19);

        r0.<androidx.media3.exoplayer.audio.AudioSink$InitializationException: int audioTrackState> = i0;

        r0.<androidx.media3.exoplayer.audio.AudioSink$InitializationException: boolean isRecoverable> = z0;

        r0.<androidx.media3.exoplayer.audio.AudioSink$InitializationException: androidx.media3.common.Format format> = r1;

        return;
    }

androidx.media3.exoplayer.audio.AudioSink$Listener
<androidx.media3.exoplayer.audio.AudioSink$Listener: void onPositionDiscontinuity()>
    public void onPositionAdvancing(long)
    {
        androidx.media3.exoplayer.audio.AudioSink$Listener r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$Listener;

        l0 := @parameter0: long;

        return;
    }

<androidx.media3.exoplayer.audio.AudioSink$Listener: void onUnderrun(int,long,long)>
<androidx.media3.exoplayer.audio.AudioSink$Listener: void onSkipSilenceEnabledChanged(boolean)>
    public void onOffloadBufferEmptying()
    {
        androidx.media3.exoplayer.audio.AudioSink$Listener r0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$Listener;

        return;
    }

    public void onOffloadBufferFull()
    {
        androidx.media3.exoplayer.audio.AudioSink$Listener r0;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$Listener;

        return;
    }

    public void onAudioSinkError(java.lang.Exception)
    {
        androidx.media3.exoplayer.audio.AudioSink$Listener r0;
        java.lang.Exception r1;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$Listener;

        r1 := @parameter0: java.lang.Exception;

        return;
    }

androidx.media3.exoplayer.audio.AudioSink$SinkFormatSupport
androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException
<androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException: long actualPresentationTimeUs>
<androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException: long expectedPresentationTimeUs>
    public void <init>(long, long)
    {
        androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException r0;
        long l0, l1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected audio track timestamp discontinuity: expected ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        r0.<androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException: long actualPresentationTimeUs> = l0;

        r0.<androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException: long expectedPresentationTimeUs> = l1;

        return;
    }

androidx.media3.exoplayer.audio.AudioSink$WriteException
<androidx.media3.exoplayer.audio.AudioSink$WriteException: int errorCode>
<androidx.media3.exoplayer.audio.AudioSink$WriteException: boolean isRecoverable>
<androidx.media3.exoplayer.audio.AudioSink$WriteException: androidx.media3.common.Format format>
    public void <init>(int, androidx.media3.common.Format, boolean)
    {
        androidx.media3.exoplayer.audio.AudioSink$WriteException r0;
        int i0;
        androidx.media3.common.Format r1;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.exoplayer.audio.AudioSink$WriteException;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Format;

        z0 := @parameter2: boolean;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioTrack write failed: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        r0.<androidx.media3.exoplayer.audio.AudioSink$WriteException: boolean isRecoverable> = z0;

        r0.<androidx.media3.exoplayer.audio.AudioSink$WriteException: int errorCode> = i0;

        r0.<androidx.media3.exoplayer.audio.AudioSink$WriteException: androidx.media3.common.Format format> = r1;

        return;
    }

