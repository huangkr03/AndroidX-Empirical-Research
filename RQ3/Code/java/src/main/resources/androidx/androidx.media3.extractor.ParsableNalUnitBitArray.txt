androidx.media3.extractor.ParsableNalUnitBitArray
<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>
<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>
<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>
<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>
    public void <init>(byte[], int, int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void reset(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void reset(byte[], int, int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data> = r1;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = i0;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit> = i1;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = 0;

        specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void assertValidOffset()>();

        return;
    }

    public void skipBit()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        byte $b6;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        $i0 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i1 = $i0 + 1;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = $i1;

        if $i1 != 8 goto label3;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = 0;

        $i4 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i2 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i3 = $i2 + 1;

        $z0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean shouldSkipByte(int)>($i3);

        if $z0 == 0 goto label1;

        $b6 = 2;

        goto label2;

     label1:
        $b6 = 1;

     label2:
        $i5 = $i4 + $b6;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i5;

     label3:
        specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void assertValidOffset()>();

        return;
    }

    public void skipBits(int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 := @parameter0: int;

        i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        i2 = i0 / 8;

        $i3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i4 = $i3 + i2;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i4;

        $i7 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i5 = i2 * 8;

        $i6 = i0 - $i5;

        $i8 = $i7 + $i6;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = $i8;

        $i9 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        if $i9 <= 7 goto label1;

        $i12 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i13 = $i12 + 1;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i13;

        $i14 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i15 = $i14 - 8;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = $i15;

     label1:
        i16 = i1 + 1;

     label2:
        $i17 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        if i16 > $i17 goto label4;

        $z0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean shouldSkipByte(int)>(i16);

        if $z0 == 0 goto label3;

        $i10 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i11 = $i10 + 1;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i11;

        i16 = i16 + 2;

     label3:
        i16 = i16 + 1;

        goto label2;

     label4:
        specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void assertValidOffset()>();

        return;
    }

    public boolean canReadBits(int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 := @parameter0: int;

        i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        i2 = i0 / 8;

        $i3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        i10 = $i3 + i2;

        $i4 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i6 = $i4 + i0;

        $i5 = i2 * 8;

        i11 = $i6 - $i5;

        if i11 <= 7 goto label1;

        i10 = i10 + 1;

        i11 = i11 + -8;

     label1:
        i12 = i1 + 1;

     label2:
        if i12 > i10 goto label4;

        $i9 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if i10 >= $i9 goto label4;

        $z0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean shouldSkipByte(int)>(i12);

        if $z0 == 0 goto label3;

        i10 = i10 + 1;

        i12 = i12 + 2;

     label3:
        i12 = i12 + 1;

        goto label2;

     label4:
        $i7 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if i10 < $i7 goto label5;

        $i8 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if i10 != $i8 goto label6;

        if i11 != 0 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        return $z1;
    }

    public boolean readBit()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        boolean z0, $z1;
        int $i0, $i1;
        byte[] $r1;
        short $s2, $s4;
        byte $b3;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        $r1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $i0 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $b3 = $r1[$i0];

        $i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $s2 = 128 >> $i1;

        $s4 = $b3 & $s2;

        if $s4 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        return z0;
    }

    public int readBits(int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i23, $i24, $i25, $i26, $i27, i28, i30, i31;
        byte[] $r1, $r3;
        byte $b5, $b11, $b20, $b29, $b32;
        short $s8, $s9, $s22;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 := @parameter0: int;

        i28 = 0;

        $i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i2 = $i1 + i0;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = $i2;

     label1:
        $i3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        if $i3 <= 8 goto label4;

        $i17 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i18 = $i17 - 8;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = $i18;

        $r3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $i19 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $b20 = $r3[$i19];

        $s22 = $b20 & 255;

        $i21 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i23 = $s22 << $i21;

        i28 = i28 | $i23;

        $i26 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i24 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i25 = $i24 + 1;

        $z1 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean shouldSkipByte(int)>($i25);

        if $z1 == 0 goto label2;

        $b29 = 2;

        goto label3;

     label2:
        $b29 = 1;

     label3:
        $i27 = $i26 + $b29;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i27;

        goto label1;

     label4:
        $r1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $i4 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $b5 = $r1[$i4];

        $s8 = $b5 & 255;

        $i6 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        $i7 = 8 - $i6;

        $s9 = $s8 >> $i7;

        i30 = i28 | $s9;

        $i10 = 32 - i0;

        $b11 = -1 >>> $i10;

        i31 = i30 & $b11;

        $i12 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        if $i12 != 8 goto label7;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = 0;

        $i15 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i13 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i14 = $i13 + 1;

        $z0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean shouldSkipByte(int)>($i14);

        if $z0 == 0 goto label5;

        $b32 = 2;

        goto label6;

     label5:
        $b32 = 1;

     label6:
        $i16 = $i15 + $b32;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = $i16;

     label7:
        specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void assertValidOffset()>();

        return i31;
    }

    public boolean canReadExpGolombCodedNum()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        i8 = 0;

     label1:
        $i3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i2 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if $i3 >= $i2 goto label2;

        $z2 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z2 != 0 goto label2;

        i8 = i8 + 1;

        goto label1;

     label2:
        $i5 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i4 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if $i5 != $i4 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset> = i0;

        r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset> = i1;

        if z0 != 0 goto label5;

        $i6 = i8 * 2;

        $i7 = $i6 + 1;

        $z1 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean canReadBits(int)>($i7);

        if $z1 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public int readUnsignedExpGolombCodedInt()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int $i0;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        $i0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readExpGolombCodeNum()>();

        return $i0;
    }

    public int readSignedExpGolombCodedInt()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, $i1, $i2, $i3, $i4;
        byte $b5;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 = specialinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readExpGolombCodeNum()>();

        $i1 = i0 % 2;

        if $i1 != 0 goto label1;

        $b5 = -1;

        goto label2;

     label1:
        $b5 = 1;

     label2:
        $i2 = i0 + 1;

        $i3 = $i2 / 2;

        $i4 = $b5 * $i3;

        return $i4;
    }

    private int readExpGolombCodeNum()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        boolean $z0;
        int $i0, $i1, $i2, i3, $i4;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i3 = 0;

     label1:
        $z0 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z0 != 0 goto label2;

        i3 = i3 + 1;

        goto label1;

     label2:
        $i0 = 1 << i3;

        $i1 = $i0 - 1;

        if i3 <= 0 goto label3;

        $i4 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(i3);

        goto label4;

     label3:
        $i4 = 0;

     label4:
        $i2 = $i1 + $i4;

        return $i2;
    }

    private boolean shouldSkipByte(int)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, $i1, $i3, $i5;
        byte[] $r1, $r2, $r3;
        byte $b2, $b4, $b6;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 := @parameter0: int;

        if 2 > i0 goto label1;

        $i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if i0 >= $i1 goto label1;

        $r1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $b2 = $r1[i0];

        if $b2 != 3 goto label1;

        $r2 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $i3 = i0 - 2;

        $b4 = $r2[$i3];

        if $b4 != 0 goto label1;

        $r3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: byte[] data>;

        $i5 = i0 - 1;

        $b6 = $r3[$i5];

        if $b6 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void assertValidOffset()
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.ParsableNalUnitBitArray;

        $i0 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        if $i0 < 0 goto label2;

        $i2 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i1 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if $i2 < $i1 goto label1;

        $i4 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteOffset>;

        $i3 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int byteLimit>;

        if $i4 != $i3 goto label2;

        $i5 = r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int bitOffset>;

        if $i5 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        return;
    }

