androidx.media3.datasource.okhttp.OkHttpDataSource
<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Call$Factory callFactory>
<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>
<androidx.media3.datasource.okhttp.OkHttpDataSource: java.lang.String userAgent>
<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.CacheControl cacheControl>
<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.okhttp.OkHttpDataSource: com.google.common.base.Predicate contentTypePredicate>
<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.DataSpec dataSpec>
<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>
<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream>
<androidx.media3.datasource.okhttp.OkHttpDataSource: boolean opened>
<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead>
<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesRead>
    public void <init>(okhttp3.Call$Factory)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call$Factory r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call$Factory;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void <init>(okhttp3.Call$Factory,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(okhttp3.Call$Factory, java.lang.String)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call$Factory r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call$Factory;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void <init>(okhttp3.Call$Factory,java.lang.String,okhttp3.CacheControl,androidx.media3.datasource.HttpDataSource$RequestProperties)>(r1, r2, null, null);

        return;
    }

    public void <init>(okhttp3.Call$Factory, java.lang.String, okhttp3.CacheControl, androidx.media3.datasource.HttpDataSource$RequestProperties)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call$Factory r1;
        java.lang.String r2;
        okhttp3.CacheControl r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties r4;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call$Factory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: okhttp3.CacheControl;

        r4 := @parameter3: androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void <init>(okhttp3.Call$Factory,java.lang.String,okhttp3.CacheControl,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate)>(r1, r2, r3, r4, null);

        return;
    }

    private void <init>(okhttp3.Call$Factory, java.lang.String, okhttp3.CacheControl, androidx.media3.datasource.HttpDataSource$RequestProperties, com.google.common.base.Predicate)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call$Factory r1, $r7;
        java.lang.String r2;
        okhttp3.CacheControl r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties r4, $r8;
        com.google.common.base.Predicate r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call$Factory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: okhttp3.CacheControl;

        r4 := @parameter3: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r5 := @parameter4: com.google.common.base.Predicate;

        specialinvoke r0.<androidx.media3.datasource.BaseDataSource: void <init>(boolean)>(1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (okhttp3.Call$Factory) $r6;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Call$Factory callFactory> = $r7;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.lang.String userAgent> = r2;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.CacheControl cacheControl> = r3;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = r4;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: com.google.common.base.Predicate contentTypePredicate> = r5;

        $r8 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r8.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties> = $r8;

        return;
    }

    public void setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        com.google.common.base.Predicate r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: com.google.common.base.Predicate contentTypePredicate> = r1;

        return;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Response $r1, $r2;
        okhttp3.Request $r3;
        okhttp3.HttpUrl $r4;
        java.lang.String $r5;
        android.net.Uri $r6;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        if $r1 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        $r3 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Request request()>();

        $r4 = virtualinvoke $r3.<okhttp3.Request: okhttp3.HttpUrl url()>();

        $r5 = virtualinvoke $r4.<okhttp3.HttpUrl: java.lang.String toString()>();

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

     label2:
        return $r6;
    }

    public int getResponseCode()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Response $r1, $r2;
        int $i0;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        if $r1 != null goto label1;

        $i0 = -1;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        $i0 = virtualinvoke $r2.<okhttp3.Response: int code()>();

     label2:
        return $i0;
    }

    public java.util.Map getResponseHeaders()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Response $r1, $r2;
        okhttp3.Headers $r3;
        java.util.Map $r4;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        $r3 = virtualinvoke $r2.<okhttp3.Response: okhttp3.Headers headers()>();

        $r4 = virtualinvoke $r3.<okhttp3.Headers: java.util.Map toMultimap()>();

     label2:
        return $r4;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        java.lang.String r1, r2;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r5;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r5 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r5.<androidx.media3.datasource.HttpDataSource$RequestProperties: void set(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void clearRequestProperty(java.lang.String)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        java.lang.String r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r3;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: java.lang.String;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r3.<androidx.media3.datasource.HttpDataSource$RequestProperties: void remove(java.lang.String)>(r1);

        return;
    }

    public void clearAllRequestProperties()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r1.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clear()>();

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        okhttp3.Request r2;
        okhttp3.Response r3, $r7;
        okhttp3.ResponseBody r4, $r8;
        okhttp3.Call r5;
        okhttp3.Call$Factory $r6;
        java.lang.Object $r9, $r16;
        java.io.InputStream $r10, $r15, $r17;
        boolean $z0, $z1;
        com.google.common.base.Predicate $r11, $r13;
        byte $b0, $b4, $b6, $b8, $b15;
        long $l1, $l2, $l3, $l5, $l7, l10, $l11, $l12, l13, $l14, l16, $l17;
        androidx.media3.datasource.HttpDataSource$InvalidContentTypeException $r14;
        okhttp3.Headers $r18, $r21;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException $r19;
        java.lang.String $r20, $r22, $r34, r35;
        java.lang.Throwable $r23, $r24, $r26, r27, r29, r36;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r25;
        int i9;
        byte[] r28;
        java.util.Map r30;
        androidx.media3.datasource.DataSourceException $r31, r32;
        okhttp3.MediaType r33;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.DataSpec dataSpec> = r1;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesRead> = 0L;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead> = 0L;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void transferInitializing(androidx.media3.datasource.DataSpec)>(r1);

        r2 = specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Request makeRequest(androidx.media3.datasource.DataSpec)>(r1);

        $r6 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Call$Factory callFactory>;

        r5 = interfaceinvoke $r6.<okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)>(r2);

     label01:
        $r7 = specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response executeCall(okhttp3.Call)>(r5);

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response> = $r7;

        r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        $r8 = virtualinvoke r3.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        r4 = (okhttp3.ResponseBody) $r9;

        $r10 = virtualinvoke r4.<okhttp3.ResponseBody: java.io.InputStream byteStream()>();

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream> = $r10;

     label02:
        goto label04;

     label03:
        $r24 := @caughtexception;

        r27 = $r24;

        $r25 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int)>(r27, r1, 1);

        throw $r25;

     label04:
        i9 = virtualinvoke r3.<okhttp3.Response: int code()>();

        $z0 = virtualinvoke r3.<okhttp3.Response: boolean isSuccessful()>();

        if $z0 != 0 goto label13;

        if i9 != 416 goto label07;

        $r21 = virtualinvoke r3.<okhttp3.Response: okhttp3.Headers headers()>();

        $r22 = virtualinvoke $r21.<okhttp3.Headers: java.lang.String get(java.lang.String)>("Content-Range");

        l10 = staticinvoke <androidx.media3.datasource.HttpUtil: long getDocumentSize(java.lang.String)>($r22);

        $l5 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b6 = $l5 cmp l10;

        if $b6 != 0 goto label07;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

        $l7 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b8 = $l7 cmp -1L;

        if $b8 == 0 goto label05;

        $l11 = r1.<androidx.media3.datasource.DataSpec: long length>;

        goto label06;

     label05:
        $l11 = 0L;

     label06:
        return $l11;

     label07:
        $r15 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream>;

        $r16 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        $r17 = (java.io.InputStream) $r16;

        r28 = staticinvoke <androidx.media3.common.util.Util: byte[] toByteArray(java.io.InputStream)>($r17);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        r29 = $r26;

        r28 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

     label10:
        $r18 = virtualinvoke r3.<okhttp3.Response: okhttp3.Headers headers()>();

        r30 = virtualinvoke $r18.<okhttp3.Headers: java.util.Map toMultimap()>();

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void closeConnectionQuietly()>();

        if i9 != 416 goto label11;

        $r31 = new androidx.media3.datasource.DataSourceException;

        specialinvoke $r31.<androidx.media3.datasource.DataSourceException: void <init>(int)>(2008);

        goto label12;

     label11:
        $r31 = null;

     label12:
        r32 = $r31;

        $r19 = new androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        $r20 = virtualinvoke r3.<okhttp3.Response: java.lang.String message()>();

        specialinvoke $r19.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>(i9, $r20, r32, r30, r1, r28);

        throw $r19;

     label13:
        r33 = virtualinvoke r4.<okhttp3.ResponseBody: okhttp3.MediaType contentType()>();

        if r33 == null goto label14;

        $r34 = virtualinvoke r33.<okhttp3.MediaType: java.lang.String toString()>();

        goto label15;

     label14:
        $r34 = "";

     label15:
        r35 = $r34;

        $r11 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: com.google.common.base.Predicate contentTypePredicate>;

        if $r11 == null goto label16;

        $r13 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: com.google.common.base.Predicate contentTypePredicate>;

        $z1 = interfaceinvoke $r13.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r35);

        if $z1 != 0 goto label16;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void closeConnectionQuietly()>();

        $r14 = new androidx.media3.datasource.HttpDataSource$InvalidContentTypeException;

        specialinvoke $r14.<androidx.media3.datasource.HttpDataSource$InvalidContentTypeException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec)>(r35, r1);

        throw $r14;

     label16:
        if i9 != 200 goto label17;

        $l3 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label17;

        $l12 = r1.<androidx.media3.datasource.DataSpec: long position>;

        goto label18;

     label17:
        $l12 = 0L;

     label18:
        l13 = $l12;

        $l14 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b15 = $l14 cmp -1L;

        if $b15 == 0 goto label19;

        $l2 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead> = $l2;

        goto label22;

     label19:
        l16 = virtualinvoke r4.<okhttp3.ResponseBody: long contentLength()>();

        $b0 = l16 cmp -1L;

        if $b0 == 0 goto label20;

        $l17 = l16 - l13;

        goto label21;

     label20:
        $l17 = -1L;

     label21:
        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead> = $l17;

     label22:
        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

     label23:
        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void skipFully(long,androidx.media3.datasource.DataSpec)>(l13, r1);

     label24:
        goto label26;

     label25:
        $r23 := @caughtexception;

        r36 = $r23;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void closeConnectionQuietly()>();

        throw r36;

     label26:
        $l1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead>;

        return $l1;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label07 to label08 with label09;
        catch androidx.media3.datasource.HttpDataSource$HttpDataSourceException from label23 to label24 with label25;
    }

    public int read(byte[], int, int) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        byte[] r1;
        int i0, i1, $i2;
        java.lang.Throwable r2, $r3;
        androidx.media3.datasource.DataSpec $r4, $r6;
        java.lang.Object $r5;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r7;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $i2 = specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: int readInternal(byte[],int,int)>(r1, i0, i1);

     label2:
        return $i2;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.DataSpec dataSpec>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.datasource.DataSpec) $r5;

        $r7 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int)>(r2, $r6, 2);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $z0 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: boolean opened>;

        if $z0 == 0 goto label1;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: boolean opened> = 0;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void transferEnded()>();

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void closeConnectionQuietly()>();

     label1:
        return;
    }

    private okhttp3.Request makeRequest(androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        long l0, l1;
        okhttp3.HttpUrl r2;
        okhttp3.Request$Builder r3, $r7;
        java.util.HashMap r4, $r9;
        android.net.Uri $r5;
        java.lang.String $r6, $r15, $r21, $r26, $r28, r37, $r39;
        okhttp3.CacheControl $r8, $r32;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r10, $r11, $r30;
        java.util.Map $r12, $r13, $r31;
        java.util.Set $r14;
        boolean $z0, $z1;
        byte[] $r16, $r18, $r19;
        int $i2;
        java.lang.Object $r24, $r25, $r27;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r34;
        java.util.Iterator r35;
        java.util.Map$Entry r36;
        okhttp3.RequestBody r38;
        okhttp3.Request $r40;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        l0 = r1.<androidx.media3.datasource.DataSpec: long position>;

        l1 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $r5 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String toString()>();

        r2 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>($r6);

        if r2 != null goto label01;

        $r34 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke $r34.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>("Malformed URL", r1, 1004, 1);

        throw $r34;

     label01:
        $r7 = new okhttp3.Request$Builder;

        specialinvoke $r7.<okhttp3.Request$Builder: void <init>()>();

        r3 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>(r2);

        $r8 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.CacheControl cacheControl>;

        if $r8 == null goto label02;

        $r32 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.CacheControl cacheControl>;

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)>($r32);

     label02:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r4 = $r9;

        $r10 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        if $r10 == null goto label03;

        $r30 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r31 = virtualinvoke $r30.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>($r31);

     label03:
        $r11 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        $r12 = virtualinvoke $r11.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>($r12);

        $r13 = r1.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        interfaceinvoke r4.<java.util.Map: void putAll(java.util.Map)>($r13);

        $r14 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r35 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r24 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = (java.lang.String) $r25;

        $r27 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (java.lang.String) $r27;

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>($r26, $r28);

        goto label04;

     label05:
        r37 = staticinvoke <androidx.media3.datasource.HttpUtil: java.lang.String buildRangeRequestHeader(long,long)>(l0, l1);

        if r37 == null goto label06;

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Range", r37);

     label06:
        $r15 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.lang.String userAgent>;

        if $r15 == null goto label07;

        $r21 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.lang.String userAgent>;

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("User-Agent", $r21);

     label07:
        $z0 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: boolean isFlagSet(int)>(1);

        if $z0 != 0 goto label08;

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "identity");

     label08:
        r38 = null;

        $r16 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        if $r16 == null goto label09;

        $r19 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        r38 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>(null, $r19);

        goto label10;

     label09:
        $i2 = r1.<androidx.media3.datasource.DataSpec: int httpMethod>;

        if $i2 != 2 goto label10;

        $r18 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        r38 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>(null, $r18);

     label10:
        $r39 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: java.lang.String getHttpMethodString()>();

        virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>($r39, r38);

        $r40 = virtualinvoke r3.<okhttp3.Request$Builder: okhttp3.Request build()>();

        return $r40;
    }

    private okhttp3.Response executeCall(okhttp3.Call) throws java.io.IOException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.media3.datasource.okhttp.OkHttpDataSource$1 $r3;
        java.lang.Object $r4;
        okhttp3.Response $r5;
        java.lang.Throwable $r6, $r8, r10, r11;
        java.io.IOException $r7;
        java.io.InterruptedIOException $r9;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call;

        r2 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r3 = new androidx.media3.datasource.okhttp.OkHttpDataSource$1;

        specialinvoke $r3.<androidx.media3.datasource.okhttp.OkHttpDataSource$1: void <init>(androidx.media3.datasource.okhttp.OkHttpDataSource,com.google.common.util.concurrent.SettableFuture)>(r0, r2);

        interfaceinvoke r1.<okhttp3.Call: void enqueue(okhttp3.Callback)>($r3);

     label1:
        $r4 = virtualinvoke r2.<com.google.common.util.concurrent.SettableFuture: java.lang.Object get()>();

        $r5 = (okhttp3.Response) $r4;

     label2:
        return $r5;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        interfaceinvoke r1.<okhttp3.Call: void cancel()>();

        $r9 = new java.io.InterruptedIOException;

        specialinvoke $r9.<java.io.InterruptedIOException: void <init>()>();

        throw $r9;

     label4:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.Throwable)>(r11);

        throw $r7;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
    }

    private void skipFully(long, androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        byte[] r2;
        int i0, $i3, i8;
        byte $b1, $b2;
        long $l4, $l5, $l6, l7;
        java.io.InputStream $r3, $r5;
        java.lang.Object $r4;
        java.lang.Thread $r6;
        boolean $z0, $z1;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r7, $r10, $r11;
        java.io.InterruptedIOException $r8;
        java.lang.Throwable $r9, r12;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        l7 := @parameter0: long;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        $b1 = l7 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        r2 = newarray (byte)[4096];

     label2:
        $b2 = l7 cmp 0L;

        if $b2 <= 0 goto label5;

        $i3 = lengthof r2;

        $l4 = (long) $i3;

        $l5 = staticinvoke <java.lang.Math: long min(long,long)>(l7, $l4);

        i8 = (int) $l5;

        $r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r5 = (java.io.InputStream) $r4;

        i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, i8);

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z0 = virtualinvoke $r6.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 == 0 goto label3;

        $r8 = new java.io.InterruptedIOException;

        specialinvoke $r8.<java.io.InterruptedIOException: void <init>()>();

        throw $r8;

     label3:
        if i0 != -1 goto label4;

        $r7 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke $r7.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, 2008, 1);

        throw $r7;

     label4:
        $l6 = (long) i0;

        l7 = l7 - $l6;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void bytesTransferred(int)>(i0);

        goto label2;

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        r12 = $r9;

        $z1 = r12 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z1 == 0 goto label7;

        $r11 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) r12;

        throw $r11;

     label7:
        $r10 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke $r10.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, 2000, 1);

        throw $r10;

        catch java.io.IOException from label2 to label5 with label6;
    }

    private int readInternal(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        byte[] r1;
        int i0, i11, i13;
        long $l1, $l3, $l4, $l5, $l6, $l7, $l9, $l10, l12;
        byte $b2, $b8;
        java.io.InputStream $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i11 := @parameter2: int;

        if i11 != 0 goto label1;

        return 0;

     label1:
        $l1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead>;

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        $l7 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesToRead>;

        $l6 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesRead>;

        l12 = $l7 - $l6;

        $b8 = l12 cmp 0L;

        if $b8 != 0 goto label2;

        return -1;

     label2:
        $l9 = (long) i11;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>($l9, l12);

        i11 = (int) $l10;

     label3:
        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream>;

        $r3 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r2);

        $r4 = (java.io.InputStream) $r3;

        i13 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i11);

        if i13 != -1 goto label4;

        return -1;

     label4:
        $l4 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesRead>;

        $l3 = (long) i13;

        $l5 = $l4 + $l3;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: long bytesRead> = $l5;

        virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void bytesTransferred(int)>(i13);

        return i13;
    }

    private void closeConnectionQuietly()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Response $r1, $r2;
        okhttp3.ResponseBody $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r1 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response>;

        $r3 = virtualinvoke $r2.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (okhttp3.ResponseBody) $r4;

        virtualinvoke $r5.<okhttp3.ResponseBody: void close()>();

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: okhttp3.Response response> = null;

     label1:
        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: java.io.InputStream responseByteStream> = null;

        return;
    }

    void <init>(okhttp3.Call$Factory, java.lang.String, okhttp3.CacheControl, androidx.media3.datasource.HttpDataSource$RequestProperties, com.google.common.base.Predicate, androidx.media3.datasource.okhttp.OkHttpDataSource$1)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource r0;
        okhttp3.Call$Factory r1;
        java.lang.String r2;
        okhttp3.CacheControl r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties r4;
        com.google.common.base.Predicate r5;
        androidx.media3.datasource.okhttp.OkHttpDataSource$1 r6;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r1 := @parameter0: okhttp3.Call$Factory;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: okhttp3.CacheControl;

        r4 := @parameter3: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r5 := @parameter4: com.google.common.base.Predicate;

        r6 := @parameter5: androidx.media3.datasource.okhttp.OkHttpDataSource$1;

        specialinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource: void <init>(okhttp3.Call$Factory,java.lang.String,okhttp3.CacheControl,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate)>(r1, r2, r3, r4, r5);

        return;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.datasource.okhttp");

        return;
    }

androidx.media3.datasource.okhttp.OkHttpDataSource$1
<androidx.media3.datasource.okhttp.OkHttpDataSource$1: com.google.common.util.concurrent.SettableFuture val$future>
    void <init>(androidx.media3.datasource.okhttp.OkHttpDataSource, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$1 r0;
        androidx.media3.datasource.okhttp.OkHttpDataSource r1;
        com.google.common.util.concurrent.SettableFuture r2;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$1;

        r1 := @parameter0: androidx.media3.datasource.okhttp.OkHttpDataSource;

        r2 := @parameter1: com.google.common.util.concurrent.SettableFuture;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$1: com.google.common.util.concurrent.SettableFuture val$future> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(okhttp3.Call, java.io.IOException)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$1 r0;
        okhttp3.Call r1;
        java.io.IOException r2;
        com.google.common.util.concurrent.SettableFuture $r3;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$1;

        r1 := @parameter0: okhttp3.Call;

        r2 := @parameter1: java.io.IOException;

        $r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$1: com.google.common.util.concurrent.SettableFuture val$future>;

        virtualinvoke $r3.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r2);

        return;
    }

    public void onResponse(okhttp3.Call, okhttp3.Response)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$1 r0;
        okhttp3.Call r1;
        okhttp3.Response r2;
        com.google.common.util.concurrent.SettableFuture $r3;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$1;

        r1 := @parameter0: okhttp3.Call;

        r2 := @parameter1: okhttp3.Response;

        $r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$1: com.google.common.util.concurrent.SettableFuture val$future>;

        virtualinvoke $r3.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(r2);

        return;
    }

androidx.media3.datasource.okhttp.OkHttpDataSource$Factory
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.Call$Factory callFactory>
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: java.lang.String userAgent>
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.CacheControl cacheControl>
<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>
    public void <init>(okhttp3.Call$Factory)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        okhttp3.Call$Factory r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: okhttp3.Call$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.Call$Factory callFactory> = r1;

        $r2 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = $r2;

        return;
    }

    public final androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        java.util.Map r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        virtualinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clearAndSet(java.util.Map)>(r1);

        return r0;
    }

    public androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setUserAgent(java.lang.String)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: java.lang.String userAgent> = r1;

        return r0;
    }

    public androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setCacheControl(okhttp3.CacheControl)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        okhttp3.CacheControl r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: okhttp3.CacheControl;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.CacheControl cacheControl> = r1;

        return r0;
    }

    public androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        com.google.common.base.Predicate r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate> = r1;

        return r0;
    }

    public androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        androidx.media3.datasource.TransferListener r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener> = r1;

        return r0;
    }

    public androidx.media3.datasource.okhttp.OkHttpDataSource createDataSource()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        androidx.media3.datasource.okhttp.OkHttpDataSource r1, $r2;
        com.google.common.base.Predicate $r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r4;
        okhttp3.CacheControl $r5;
        java.lang.String $r6;
        okhttp3.Call$Factory $r7;
        androidx.media3.datasource.TransferListener $r8, $r9;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        $r2 = new androidx.media3.datasource.okhttp.OkHttpDataSource;

        $r7 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.Call$Factory callFactory>;

        $r6 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: java.lang.String userAgent>;

        $r5 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: okhttp3.CacheControl cacheControl>;

        $r4 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r3 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>;

        specialinvoke $r2.<androidx.media3.datasource.okhttp.OkHttpDataSource: void <init>(okhttp3.Call$Factory,java.lang.String,okhttp3.CacheControl,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,androidx.media3.datasource.okhttp.OkHttpDataSource$1)>($r7, $r6, $r5, $r4, $r3, null);

        r1 = $r2;

        $r8 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        if $r8 == null goto label1;

        $r9 = r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        virtualinvoke r1.<androidx.media3.datasource.okhttp.OkHttpDataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>($r9);

     label1:
        return r1;
    }

    public volatile androidx.media3.datasource.HttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0, $r2;
        java.util.Map r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory setDefaultRequestProperties(java.util.Map)>(r1);

        return $r2;
    }

    public volatile androidx.media3.datasource.HttpDataSource createDataSource()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        androidx.media3.datasource.okhttp.OkHttpDataSource $r1;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.okhttp.OkHttpDataSource createDataSource()>();

        return $r1;
    }

    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.okhttp.OkHttpDataSource$Factory r0;
        androidx.media3.datasource.okhttp.OkHttpDataSource $r1;
        androidx.media3.datasource.DataSource r2;

        r0 := @this: androidx.media3.datasource.okhttp.OkHttpDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.okhttp.OkHttpDataSource$Factory: androidx.media3.datasource.okhttp.OkHttpDataSource createDataSource()>();

        r2 = (androidx.media3.datasource.DataSource) $r1;

        return r2;
    }

