androidx.graphics.lowlatency.ParentRenderLayer
<androidx.graphics.lowlatency.ParentRenderLayer: int getBufferTransformHint()>
<androidx.graphics.lowlatency.ParentRenderLayer: void buildReparentTransaction(androidx.graphics.surface.SurfaceControlCompat,androidx.graphics.surface.SurfaceControlCompat$Transaction)>
<androidx.graphics.lowlatency.ParentRenderLayer: void setParent(androidx.graphics.surface.SurfaceControlCompat$Builder)>
<androidx.graphics.lowlatency.ParentRenderLayer: androidx.graphics.opengl.GLRenderer$RenderTarget createRenderTarget(androidx.graphics.opengl.GLRenderer,androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback)>
<androidx.graphics.lowlatency.ParentRenderLayer: void setParentLayerCallbacks(androidx.graphics.lowlatency.ParentRenderLayer$Callback)>
<androidx.graphics.lowlatency.ParentRenderLayer: void clear()>
<androidx.graphics.lowlatency.ParentRenderLayer: void release(androidx.graphics.surface.SurfaceControlCompat$Transaction)>
androidx.graphics.lowlatency.ParentRenderLayer$Callback
<androidx.graphics.lowlatency.ParentRenderLayer$Callback: void onSizeChanged(int,int)>
<androidx.graphics.lowlatency.ParentRenderLayer$Callback: void onLayerDestroyed()>
<androidx.graphics.lowlatency.ParentRenderLayer$Callback: java.util.Collection obtainDoubleBufferedLayerParams()>
<androidx.graphics.lowlatency.ParentRenderLayer$Callback: androidx.graphics.surface.SurfaceControlCompat getFrontBufferedLayerSurfaceControl()>
<androidx.graphics.lowlatency.ParentRenderLayer$Callback: androidx.graphics.lowlatency.FrameBufferPool getFrameBufferPool()>
androidx.graphics.lowlatency.ParentRenderLayer$DefaultImpls
    public static int getBufferTransformHint(androidx.graphics.lowlatency.ParentRenderLayer)
    {
        androidx.graphics.lowlatency.ParentRenderLayer $r0;

        $r0 := @parameter0: androidx.graphics.lowlatency.ParentRenderLayer;

        return -1;
    }

