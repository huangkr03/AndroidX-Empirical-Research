androidx.compose.runtime.SnapshotMutableStateImpl
<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy policy>
<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>
    public void <init>(java.lang.Object, androidx.compose.runtime.SnapshotMutationPolicy)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        java.lang.Object r1;
        androidx.compose.runtime.SnapshotMutationPolicy r2;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord $r3;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.runtime.SnapshotMutationPolicy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "policy");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy policy> = r2;

        $r3 = new androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        specialinvoke $r3.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: void <init>(java.lang.Object)>(r1);

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next> = $r3;

        return;
    }

    public androidx.compose.runtime.SnapshotMutationPolicy getPolicy()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.SnapshotMutationPolicy $r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r1 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy policy>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord $r1, $r5;
        androidx.compose.runtime.snapshots.StateObject $r2;
        androidx.compose.runtime.snapshots.StateRecord $r3, $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r1 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        $r2 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject)>($r3, $r2);

        $r5 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) $r4;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        return $r6;
    }

    public void setValue(java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        java.lang.Object r1, r5, $r10, r18;
        androidx.compose.runtime.snapshots.StateRecord $r2, $r4, $r8, $r13, $r15;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r3, $r6, $r7, $r11;
        androidx.compose.runtime.SnapshotMutationPolicy $r9;
        boolean $z0;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r12;
        androidx.compose.runtime.snapshots.StateObject $r14, $r16;
        java.lang.Throwable $r17, r21;
        androidx.compose.runtime.snapshots.Snapshot r19;
        kotlin.Unit r20;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        r1 := @parameter0: java.lang.Object;

        $r7 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r7;

        $r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r2);

        r3 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) $r8;

        $r9 = virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r10 = virtualinvoke r3.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $z0 = interfaceinvoke $r9.<androidx.compose.runtime.SnapshotMutationPolicy: boolean equivalent(java.lang.Object,java.lang.Object)>($r10, r1);

        if $z0 != 0 goto label6;

        $r11 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r4 = (androidx.compose.runtime.snapshots.StateRecord) $r11;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r18 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r5 = r18;

        entermonitor r5;

     label1:
        $r12 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r19 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r14 = (androidx.compose.runtime.snapshots.StateObject) r0;

        $r13 = (androidx.compose.runtime.snapshots.StateRecord) r3;

        $r15 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord overwritableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateRecord)>($r4, $r14, r19, $r13);

        $r6 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) $r15;

        virtualinvoke $r6.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: void setValue(java.lang.Object)>(r1);

        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        exitmonitor r5;

        goto label5;

     label3:
        $r17 := @caughtexception;

        r21 = $r17;

     label4:
        exitmonitor r5;

        throw r21;

     label5:
        $r16 = (androidx.compose.runtime.snapshots.StateObject) r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r19, $r16);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void getValue$annotations()
    {
        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord $r1;
        androidx.compose.runtime.snapshots.StateRecord $r2;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r1 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r2 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        return $r2;
    }

    public void prependStateRecord(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.snapshots.StateRecord r1;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord $r2;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r1;

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next> = $r2;

        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord mergeRecords(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.snapshots.StateRecord r1, r2, r3, r8, r9, $r18;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r4, r5, r6, $r17;
        java.lang.Object r7, $r11, $r12, $r14, $r15, $r16;
        androidx.compose.runtime.SnapshotMutationPolicy $r10, $r13;
        boolean $z1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r2 := @parameter1: androidx.compose.runtime.snapshots.StateRecord;

        r3 := @parameter2: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "previous");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "current");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "applied");

        r4 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r1;

        r5 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r2;

        r6 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r3;

        $r10 = virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r11 = virtualinvoke r5.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $r12 = virtualinvoke r6.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $z1 = interfaceinvoke $r10.<androidx.compose.runtime.SnapshotMutationPolicy: boolean equivalent(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z1 == 0 goto label1;

        $r18 = r2;

        goto label3;

     label1:
        $r13 = virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutationPolicy getPolicy()>();

        $r14 = virtualinvoke r4.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $r15 = virtualinvoke r5.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $r16 = virtualinvoke r6.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        r7 = interfaceinvoke $r13.<androidx.compose.runtime.SnapshotMutationPolicy: java.lang.Object merge(java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r15, $r16);

        if r7 == null goto label2;

        r8 = virtualinvoke r6.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: androidx.compose.runtime.snapshots.StateRecord create()>();

        r9 = r8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r9, "null cannot be cast to non-null type androidx.compose.runtime.SnapshotMutableStateImpl.StateStateRecord<T of androidx.compose.runtime.SnapshotMutableStateImpl.mergeRecords$lambda-2>");

        $r17 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r9;

        virtualinvoke $r17.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: void setValue(java.lang.Object)>(r7);

        $r18 = r8;

        goto label3;

     label2:
        $r18 = (androidx.compose.runtime.snapshots.StateRecord) null;

     label3:
        return $r18;
    }

    public java.lang.String toString()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.snapshots.StateRecord $r1, $r4;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10;
        java.lang.Object $r7;
        int $i0;
        java.lang.String $r11;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r3 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r1 = (androidx.compose.runtime.snapshots.StateRecord) $r3;

        $r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r1);

        r2 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MutableState(value=");

        $r7 = virtualinvoke r2.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")@");

        $i0 = virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: int hashCode()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.Object component1()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r1 = virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl: java.lang.Object getValue()>();

        return $r1;
    }

    public kotlin.jvm.functions.Function1 component2()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.SnapshotMutableStateImpl$component2$1 $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r1 = new androidx.compose.runtime.SnapshotMutableStateImpl$component2$1;

        specialinvoke $r1.<androidx.compose.runtime.SnapshotMutableStateImpl$component2$1: void <init>(androidx.compose.runtime.SnapshotMutableStateImpl)>(r0);

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        return $r2;
    }

    public final java.lang.Object getDebuggerDisplayValue()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl r0;
        androidx.compose.runtime.snapshots.StateRecord $r1, $r4;
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r2, $r3;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl;

        $r3 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord next>;

        $r1 = (androidx.compose.runtime.snapshots.StateRecord) $r3;

        $r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r1);

        r2 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) $r4;

        $r5 = virtualinvoke r2.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object getValue()>();

        return $r5;
    }

    public static void getDebuggerDisplayValue$annotations()
    {
        return;
    }

androidx.compose.runtime.SnapshotMutableStateImpl$component2$1
<androidx.compose.runtime.SnapshotMutableStateImpl$component2$1: androidx.compose.runtime.SnapshotMutableStateImpl this$0>
    void <init>(androidx.compose.runtime.SnapshotMutableStateImpl)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$component2$1 r0;
        androidx.compose.runtime.SnapshotMutableStateImpl $r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$component2$1;

        $r1 := @parameter0: androidx.compose.runtime.SnapshotMutableStateImpl;

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl$component2$1: androidx.compose.runtime.SnapshotMutableStateImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$component2$1 r0;
        java.lang.Object r1;
        androidx.compose.runtime.SnapshotMutableStateImpl $r2;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$component2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl$component2$1: androidx.compose.runtime.SnapshotMutableStateImpl this$0>;

        virtualinvoke $r2.<androidx.compose.runtime.SnapshotMutableStateImpl: void setValue(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$component2$1 r0;
        java.lang.Object r1;
        kotlin.Unit $r2;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$component2$1;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<androidx.compose.runtime.SnapshotMutableStateImpl$component2$1: void invoke(java.lang.Object)>(r1);

        $r2 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r2;
    }

androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord
<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value>
    public void <init>(java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.compose.runtime.snapshots.StateRecord: void <init>()>();

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value> = r1;

        return;
    }

    public void assign(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r0, $r2;
        androidx.compose.runtime.snapshots.StateRecord r1;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        r1 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = (androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord) r1;

        $r3 = $r2.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value>;

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value> = $r3;

        return;
    }

    public androidx.compose.runtime.snapshots.StateRecord create()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r0, $r1;
        java.lang.Object $r2;
        androidx.compose.runtime.snapshots.StateRecord $r3;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        $r1 = new androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        $r2 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value>;

        specialinvoke $r1.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: void <init>(java.lang.Object)>($r2);

        $r3 = (androidx.compose.runtime.snapshots.StateRecord) $r1;

        return $r3;
    }

    public final java.lang.Object getValue()
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r0;
        java.lang.Object $r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        $r1 = r0.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value>;

        return $r1;
    }

    public final void setValue(java.lang.Object)
    {
        androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord r0;
        java.lang.Object r1;

        r0 := @this: androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.runtime.SnapshotMutableStateImpl$StateStateRecord: java.lang.Object value> = r1;

        return;
    }

