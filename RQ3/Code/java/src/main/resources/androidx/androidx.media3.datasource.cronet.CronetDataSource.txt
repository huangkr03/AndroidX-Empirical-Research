androidx.media3.datasource.cronet.CronetDataSource
<androidx.media3.datasource.cronet.CronetDataSource: int DEFAULT_CONNECT_TIMEOUT_MILLIS>
<androidx.media3.datasource.cronet.CronetDataSource: int DEFAULT_READ_TIMEOUT_MILLIS>
<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest$Callback urlRequestCallback>
<androidx.media3.datasource.cronet.CronetDataSource: int READ_BUFFER_SIZE_BYTES>
<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.CronetEngine cronetEngine>
<androidx.media3.datasource.cronet.CronetDataSource: java.util.concurrent.Executor executor>
<androidx.media3.datasource.cronet.CronetDataSource: int requestPriority>
<androidx.media3.datasource.cronet.CronetDataSource: int connectTimeoutMs>
<androidx.media3.datasource.cronet.CronetDataSource: int readTimeoutMs>
<androidx.media3.datasource.cronet.CronetDataSource: boolean resetTimeoutOnRedirects>
<androidx.media3.datasource.cronet.CronetDataSource: boolean handleSetCookieRequests>
<androidx.media3.datasource.cronet.CronetDataSource: java.lang.String userAgent>
<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>
<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>
<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.Clock clock>
<androidx.media3.datasource.cronet.CronetDataSource: com.google.common.base.Predicate contentTypePredicate>
<androidx.media3.datasource.cronet.CronetDataSource: boolean keepPostFor302Redirects>
<androidx.media3.datasource.cronet.CronetDataSource: boolean opened>
<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>
<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>
<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec>
<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>
<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>
<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>
<androidx.media3.datasource.cronet.CronetDataSource: boolean finished>
<androidx.media3.datasource.cronet.CronetDataSource: long currentConnectTimeoutMs>
    protected void <init>(org.chromium.net.CronetEngine, java.util.concurrent.Executor, int, int, int, boolean, boolean, java.lang.String, androidx.media3.datasource.HttpDataSource$RequestProperties, com.google.common.base.Predicate, boolean)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.CronetEngine r1, $r7;
        java.util.concurrent.Executor r2, $r9;
        int i0, i1, i2;
        boolean z0, z1, z2;
        java.lang.String r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties r4, $r12;
        com.google.common.base.Predicate r5;
        java.lang.Object $r6, $r8;
        androidx.media3.common.util.Clock $r10;
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback $r11;
        androidx.media3.common.util.ConditionVariable $r13;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: org.chromium.net.CronetEngine;

        r2 := @parameter1: java.util.concurrent.Executor;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r5 := @parameter9: com.google.common.base.Predicate;

        z2 := @parameter10: boolean;

        specialinvoke r0.<androidx.media3.datasource.BaseDataSource: void <init>(boolean)>(1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (org.chromium.net.CronetEngine) $r6;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.CronetEngine cronetEngine> = $r7;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r9 = (java.util.concurrent.Executor) $r8;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.util.concurrent.Executor executor> = $r9;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: int requestPriority> = i0;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: int connectTimeoutMs> = i1;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: int readTimeoutMs> = i2;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean resetTimeoutOnRedirects> = z0;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean handleSetCookieRequests> = z1;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.lang.String userAgent> = r3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = r4;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: com.google.common.base.Predicate contentTypePredicate> = r5;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean keepPostFor302Redirects> = z2;

        $r10 = <androidx.media3.common.util.Clock: androidx.media3.common.util.Clock DEFAULT>;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.Clock clock> = $r10;

        $r11 = new androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        specialinvoke $r11.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: void <init>(androidx.media3.datasource.cronet.CronetDataSource,androidx.media3.datasource.cronet.CronetDataSource$1)>(r0, null);

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest$Callback urlRequestCallback> = $r11;

        $r12 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r12.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties> = $r12;

        $r13 = new androidx.media3.common.util.ConditionVariable;

        specialinvoke $r13.<androidx.media3.common.util.ConditionVariable: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation> = $r13;

        return;
    }

    public void setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        com.google.common.base.Predicate r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: com.google.common.base.Predicate contentTypePredicate> = r1;

        return;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.lang.String r1, r2;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r3;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r3.<androidx.media3.datasource.HttpDataSource$RequestProperties: void set(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void clearRequestProperty(java.lang.String)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.lang.String r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void remove(java.lang.String)>(r1);

        return;
    }

    public void clearAllRequestProperties()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        virtualinvoke $r1.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clear()>();

        return;
    }

    public int getResponseCode()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlResponseInfo $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        $i0 = virtualinvoke $r2.<org.chromium.net.UrlResponseInfo: int getHttpStatusCode()>();

        if $i0 > 0 goto label2;

     label1:
        $i1 = -1;

        goto label3;

     label2:
        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        $i1 = virtualinvoke $r3.<org.chromium.net.UrlResponseInfo: int getHttpStatusCode()>();

     label3:
        return $i1;
    }

    public java.util.Map getResponseHeaders()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlResponseInfo $r1, $r2;
        java.util.Map $r3;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        $r3 = virtualinvoke $r2.<org.chromium.net.UrlResponseInfo: java.util.Map getAllHeaders()>();

     label2:
        return $r3;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlResponseInfo $r1, $r2;
        java.lang.String $r3;
        android.net.Uri $r4;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        $r3 = virtualinvoke $r2.<org.chromium.net.UrlResponseInfo: java.lang.String getUrl()>();

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

     label2:
        return $r4;
    }

    public long open(androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        org.chromium.net.UrlRequest r2;
        long l0, $l1, $l3, $l5, $l6, $l9, $l10, l15, $l16, $l17, l18, $l19, $l20;
        boolean $z0, $z2, $z3, $z4, $z5, z6, $z7;
        androidx.media3.common.util.ConditionVariable $r4;
        org.chromium.net.UrlRequest$Builder $r5;
        org.chromium.net.UrlResponseInfo $r6, r32;
        java.lang.Object $r7;
        java.lang.String $r9, $r10, $r11, $r12, $r18, r30, r39;
        byte $b2, $b4, $b7, $b8, $b11;
        int $i12, $i13, i14;
        java.lang.Throwable $r20, $r24, $r25, r28, r31, r35, r50, r51, r52, r53, r54;
        java.lang.Thread $r21;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r27;
        java.io.IOException r29;
        java.util.Map r33;
        byte[] r34;
        androidx.media3.datasource.DataSourceException $r36, r37, r47;
        com.google.common.base.Predicate r38;
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r40, r42, r44, r46;
        androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException r41;
        java.net.SocketTimeoutException r43;
        java.io.InterruptedIOException r45;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r48;
        androidx.media3.datasource.HttpDataSource$InvalidContentTypeException r49;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened>;

        if $z0 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z5);

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        virtualinvoke $r4.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void resetConnectTimeout()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec> = r1;

     label03:
        $r5 = virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest$Builder buildRequestBuilder(androidx.media3.datasource.DataSpec)>(r1);

        r2 = virtualinvoke $r5.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest build()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest> = r2;

     label04:
        goto label07;

     label05:
        $r25 := @caughtexception;

        r28 = $r25;

        $z4 = r28 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z4 == 0 goto label06;

        $r27 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) r28;

        r50 = (java.lang.Throwable) $r27;

        throw r50;

     label06:
        r40 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        specialinvoke r40.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r28, r1, 2000, 0);

        r51 = (java.lang.Throwable) r40;

        throw r51;

     label07:
        virtualinvoke r2.<org.chromium.net.UrlRequest: void start()>();

        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void transferInitializing(androidx.media3.datasource.DataSpec)>(r1);

     label08:
        z6 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean blockUntilConnectTimeout()>();

        r29 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>;

        if r29 == null goto label10;

        r30 = virtualinvoke r29.<java.io.IOException: java.lang.String getMessage()>();

        if r30 == null goto label09;

        $r18 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r30);

        $z3 = virtualinvoke $r18.<java.lang.String: boolean contains(java.lang.CharSequence)>("err_cleartext_not_permitted");

        if $z3 == 0 goto label09;

        r41 = new androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException;

        specialinvoke r41.<androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec)>(r29, r1);

        throw r41;

     label09:
        r42 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        $i13 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: int getStatus(org.chromium.net.UrlRequest)>(r2);

        specialinvoke r42.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r29, r1, 2001, $i13);

        r52 = (java.lang.Throwable) r42;

        throw r52;

     label10:
        if z6 != 0 goto label11;

        r44 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r43 = new java.net.SocketTimeoutException;

        specialinvoke r43.<java.net.SocketTimeoutException: void <init>()>();

        $i12 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: int getStatus(org.chromium.net.UrlRequest)>(r2);

        specialinvoke r44.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r43, r1, 2002, $i12);

        r53 = (java.lang.Throwable) r44;

        throw r53;

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

        r31 = $r20;

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r21.<java.lang.Thread: void interrupt()>();

        r46 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r45 = new java.io.InterruptedIOException;

        specialinvoke r45.<java.io.InterruptedIOException: void <init>()>();

        specialinvoke r46.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r45, r1, 1004, -1);

        r54 = (java.lang.Throwable) r46;

        throw r54;

     label13:
        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r6);

        r32 = (org.chromium.net.UrlResponseInfo) $r7;

        i14 = virtualinvoke r32.<org.chromium.net.UrlResponseInfo: int getHttpStatusCode()>();

        r33 = virtualinvoke r32.<org.chromium.net.UrlResponseInfo: java.util.Map getAllHeaders()>();

        if i14 < 200 goto label14;

        if i14 <= 299 goto label23;

     label14:
        if i14 != 416 goto label17;

        $r10 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String getFirstHeader(java.util.Map,java.lang.String)>(r33, "Content-Range");

        l15 = staticinvoke <androidx.media3.datasource.HttpUtil: long getDocumentSize(java.lang.String)>($r10);

        $l1 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b2 = $l1 cmp l15;

        if $b2 != 0 goto label17;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

        $l3 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b4 = $l3 cmp -1L;

        if $b4 == 0 goto label15;

        $l16 = r1.<androidx.media3.datasource.DataSpec: long length>;

        goto label16;

     label15:
        $l16 = 0L;

     label16:
        return $l16;

     label17:
        r34 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: byte[] readResponseBody()>();

     label18:
        goto label20;

     label19:
        $r24 := @caughtexception;

        r35 = $r24;

        r34 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

     label20:
        if i14 != 416 goto label21;

        r47 = new androidx.media3.datasource.DataSourceException;

        $r36 = r47;

        specialinvoke r47.<androidx.media3.datasource.DataSourceException: void <init>(int)>(2008);

        goto label22;

     label21:
        $r36 = null;

     label22:
        r37 = $r36;

        r48 = new androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        $r9 = virtualinvoke r32.<org.chromium.net.UrlResponseInfo: java.lang.String getHttpStatusText()>();

        specialinvoke r48.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>(i14, $r9, r37, r33, r1, r34);

        throw r48;

     label23:
        r38 = r0.<androidx.media3.datasource.cronet.CronetDataSource: com.google.common.base.Predicate contentTypePredicate>;

        if r38 == null goto label24;

        r39 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String getFirstHeader(java.util.Map,java.lang.String)>(r33, "Content-Type");

        if r39 == null goto label24;

        $z2 = interfaceinvoke r38.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r39);

        if $z2 != 0 goto label24;

        r49 = new androidx.media3.datasource.HttpDataSource$InvalidContentTypeException;

        specialinvoke r49.<androidx.media3.datasource.HttpDataSource$InvalidContentTypeException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec)>(r39, r1);

        throw r49;

     label24:
        if i14 != 200 goto label25;

        $l10 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $b11 = $l10 cmp 0L;

        if $b11 == 0 goto label25;

        $l17 = r1.<androidx.media3.datasource.DataSpec: long position>;

        goto label26;

     label25:
        $l17 = 0L;

     label26:
        l18 = $l17;

        $z7 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: boolean isCompressed(org.chromium.net.UrlResponseInfo)>(r32);

        if $z7 != 0 goto label30;

        $l6 = r1.<androidx.media3.datasource.DataSpec: long length>;

        $b7 = $l6 cmp -1L;

        if $b7 == 0 goto label27;

        $l9 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l9;

        goto label31;

     label27:
        $r11 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String getFirstHeader(java.util.Map,java.lang.String)>(r33, "Content-Length");

        $r12 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String getFirstHeader(java.util.Map,java.lang.String)>(r33, "Content-Range");

        l0 = staticinvoke <androidx.media3.datasource.HttpUtil: long getContentLength(java.lang.String,java.lang.String)>($r11, $r12);

        $b8 = l0 cmp -1L;

        if $b8 == 0 goto label28;

        $l19 = l0 - l18;

        goto label29;

     label28:
        $l19 = -1L;

     label29:
        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l19;

        goto label31;

     label30:
        $l5 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l5;

     label31:
        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened> = 1;

        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void transferStarted(androidx.media3.datasource.DataSpec)>(r1);

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void skipFully(long,androidx.media3.datasource.DataSpec)>(l18, r1);

        $l20 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        return $l20;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.InterruptedException from label08 to label11 with label12;
        catch java.io.IOException from label17 to label18 with label19;
    }

    public int read(byte[], int, int) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        byte[] r1;
        int i0, i1, i2, $i7;
        java.nio.ByteBuffer r2;
        boolean $z0, $z1, $z3, $z4;
        long $l3, $l5, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l17;
        byte $b4, $b6, $b12;
        long[] $r3;
        androidx.media3.common.util.ConditionVariable $r5;
        androidx.media3.datasource.DataSpec $r7, $r9;
        java.lang.Object $r8;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened>;

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        if i1 != 0 goto label1;

        return 0;

     label1:
        $l3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        return -1;

     label2:
        r2 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer getOrCreateReadBuffer()>();

        $z1 = virtualinvoke r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z1 != 0 goto label4;

        $r5 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        virtualinvoke $r5.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r7 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec>;

        $r8 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r7);

        $r9 = (androidx.media3.datasource.DataSpec) $r8;

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void readInternal(java.nio.ByteBuffer,androidx.media3.datasource.DataSpec)>(r2, $r9);

        $z3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished>;

        if $z3 == 0 goto label3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = 0L;

        return -1;

     label3:
        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $z4 = virtualinvoke r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z4);

     label4:
        $r3 = newarray (long)[3];

        $l5 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label5;

        $l17 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        goto label6;

     label5:
        $l17 = 9223372036854775807L;

     label6:
        $r3[0] = $l17;

        $i7 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l8 = (long) $i7;

        $r3[1] = $l8;

        $l9 = (long) i1;

        $r3[2] = $l9;

        $l10 = staticinvoke <com.google.common.primitives.Longs: long min(long[])>($r3);

        i2 = (int) $l10;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i0, i2);

        $l11 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b12 = $l11 cmp -1L;

        if $b12 == 0 goto label7;

        $l14 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $l13 = (long) i2;

        $l15 = $l14 - $l13;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l15;

     label7:
        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void bytesTransferred(int)>(i2);

        return i2;
    }

    public int read(java.nio.ByteBuffer) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.nio.ByteBuffer r1, $r2, $r7;
        int i0, $i3, $i4, i15, i16;
        boolean $z0, $z1, $z2, $z4, $z5;
        long $l1, $l5, $l7, $l8, $l9, $l10, $l12, $l13, $l14;
        byte $b2, $b6, $b11;
        androidx.media3.common.util.ConditionVariable $r3;
        androidx.media3.datasource.DataSpec $r4, $r6;
        java.lang.Object $r5;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened>;

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $z1 = virtualinvoke r1.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Passed buffer is not a direct ByteBuffer");

        throw $r8;

     label1:
        $z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z2 != 0 goto label2;

        return 0;

     label2:
        $l1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        return -1;

     label3:
        i0 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        if $r2 == null goto label5;

        $r7 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        i15 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: int copyByteBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer)>($r7, r1);

        if i15 == 0 goto label5;

        $l10 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b11 = $l10 cmp -1L;

        if $b11 == 0 goto label4;

        $l13 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $l12 = (long) i15;

        $l14 = $l13 - $l12;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l14;

     label4:
        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void bytesTransferred(int)>(i15);

        return i15;

     label5:
        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        virtualinvoke $r3.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.datasource.DataSpec) $r5;

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void readInternal(java.nio.ByteBuffer,androidx.media3.datasource.DataSpec)>(r1, $r6);

        $z4 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished>;

        if $z4 == 0 goto label6;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = 0L;

        return -1;

     label6:
        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if i0 <= $i3 goto label7;

        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z5);

        $i4 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        i16 = i0 - $i4;

        $l5 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $b6 = $l5 cmp -1L;

        if $b6 == 0 goto label9;

        $l8 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining>;

        $l7 = (long) i16;

        $l9 = $l8 - $l7;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long bytesRemaining> = $l9;

     label9:
        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void bytesTransferred(int)>(i16);

        return i16;
    }

    public synchronized void close()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlRequest $r1, $r5;
        java.nio.ByteBuffer $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>;

        if $r1 == null goto label1;

        $r5 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>;

        virtualinvoke $r5.<org.chromium.net.UrlRequest: void cancel()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest> = null;

     label1:
        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(0);

     label2:
        r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec> = null;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo> = null;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception> = null;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished> = 0;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened>;

        if $z0 == 0 goto label3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean opened> = 0;

        virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void transferEnded()>();

     label3:
        return;
    }

    protected org.chromium.net.UrlRequest getCurrentUrlRequest()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlRequest $r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>;

        return $r1;
    }

    protected org.chromium.net.UrlResponseInfo getCurrentUrlResponseInfo()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlResponseInfo $r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo>;

        return $r1;
    }

    protected org.chromium.net.UrlRequest$Builder buildRequestBuilder(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        org.chromium.net.UrlRequest$Builder r2, $r12, $r13;
        java.util.HashMap r3, r41;
        java.util.Map$Entry r4;
        java.lang.String r5, r6, $r9, $r21, $r22, $r29, r40;
        android.net.Uri $r7;
        org.chromium.net.CronetEngine $r8;
        java.util.concurrent.Executor $r10, $r27;
        org.chromium.net.UrlRequest$Callback $r11;
        int $i0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r15, $r16, $r37;
        java.util.Map $r17, $r18, $r38;
        java.util.Set $r19;
        byte[] $r20, $r24, $r26;
        long $l1, $l2;
        boolean $z0, $z1;
        java.lang.Object $r33, $r34, $r35;
        java.util.Iterator r39;
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r42;
        androidx.media3.datasource.cronet.ByteArrayUploadDataProvider r43;
        java.lang.Throwable r44;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        $r8 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.CronetEngine cronetEngine>;

        $r7 = r1.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r9 = virtualinvoke $r7.<android.net.Uri: java.lang.String toString()>();

        $r11 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest$Callback urlRequestCallback>;

        $r10 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.util.concurrent.Executor executor>;

        $r12 = virtualinvoke $r8.<org.chromium.net.CronetEngine: org.chromium.net.UrlRequest$Builder newUrlRequestBuilder(java.lang.String,org.chromium.net.UrlRequest$Callback,java.util.concurrent.Executor)>($r9, $r11, $r10);

        $i0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: int requestPriority>;

        $r13 = virtualinvoke $r12.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder setPriority(int)>($i0);

        r2 = virtualinvoke $r13.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder allowDirectExecutor()>();

        r41 = new java.util.HashMap;

        specialinvoke r41.<java.util.HashMap: void <init>()>();

        r3 = r41;

        $r15 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        if $r15 == null goto label1;

        $r37 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r38 = virtualinvoke $r37.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r38);

     label1:
        $r16 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties>;

        $r17 = virtualinvoke $r16.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map getSnapshot()>();

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r17);

        $r18 = r1.<androidx.media3.datasource.DataSpec: java.util.Map httpRequestHeaders>;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r18);

        $r19 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r33 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r33;

        $r34 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r34;

        $r35 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (java.lang.String) $r35;

        virtualinvoke r2.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder addHeader(java.lang.String,java.lang.String)>(r5, r6);

        goto label2;

     label3:
        $r20 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        if $r20 == null goto label4;

        $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("Content-Type");

        if $z0 != 0 goto label4;

        r42 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        specialinvoke r42.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>("HTTP request with non-empty body must set Content-Type", r1, 1004, 0);

        r44 = (java.lang.Throwable) r42;

        throw r44;

     label4:
        $l2 = r1.<androidx.media3.datasource.DataSpec: long position>;

        $l1 = r1.<androidx.media3.datasource.DataSpec: long length>;

        r40 = staticinvoke <androidx.media3.datasource.HttpUtil: java.lang.String buildRangeRequestHeader(long,long)>($l2, $l1);

        if r40 == null goto label5;

        virtualinvoke r2.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder addHeader(java.lang.String,java.lang.String)>("Range", r40);

     label5:
        $r21 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.lang.String userAgent>;

        if $r21 == null goto label6;

        $r29 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.lang.String userAgent>;

        virtualinvoke r2.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder addHeader(java.lang.String,java.lang.String)>("User-Agent", $r29);

     label6:
        $r22 = virtualinvoke r1.<androidx.media3.datasource.DataSpec: java.lang.String getHttpMethodString()>();

        virtualinvoke r2.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder setHttpMethod(java.lang.String)>($r22);

        $r24 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        if $r24 == null goto label7;

        r43 = new androidx.media3.datasource.cronet.ByteArrayUploadDataProvider;

        $r26 = r1.<androidx.media3.datasource.DataSpec: byte[] httpBody>;

        specialinvoke r43.<androidx.media3.datasource.cronet.ByteArrayUploadDataProvider: void <init>(byte[])>($r26);

        $r27 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.util.concurrent.Executor executor>;

        virtualinvoke r2.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder setUploadDataProvider(org.chromium.net.UploadDataProvider,java.util.concurrent.Executor)>(r43, $r27);

     label7:
        return r2;
    }

    private boolean blockUntilConnectTimeout() throws java.lang.InterruptedException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.common.util.Clock $r1, $r3;
        long $l0, $l2, $l3, $l4, l5;
        byte $b1;
        androidx.media3.common.util.ConditionVariable $r2;
        boolean z0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.Clock clock>;

        l5 = interfaceinvoke $r1.<androidx.media3.common.util.Clock: long elapsedRealtime()>();

        z0 = 0;

     label1:
        if z0 != 0 goto label2;

        $l0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long currentConnectTimeoutMs>;

        $b1 = l5 cmp $l0;

        if $b1 >= 0 goto label2;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        $l2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: long currentConnectTimeoutMs>;

        $l3 = $l2 - l5;

        $l4 = $l3 + 5L;

        z0 = virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean block(long)>($l4);

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.Clock clock>;

        l5 = interfaceinvoke $r3.<androidx.media3.common.util.Clock: long elapsedRealtime()>();

        goto label1;

     label2:
        return z0;
    }

    private void resetConnectTimeout()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.common.util.Clock $r1;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.Clock clock>;

        $l0 = interfaceinvoke $r1.<androidx.media3.common.util.Clock: long elapsedRealtime()>();

        $i1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: int connectTimeoutMs>;

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: long currentConnectTimeoutMs> = $l3;

        return;
    }

    private void skipFully(long, androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.datasource.DataSpec r1;
        java.nio.ByteBuffer r2;
        byte $b0, $b1;
        androidx.media3.common.util.ConditionVariable $r3;
        java.lang.Thread $r5;
        boolean $z1, $z2, $z3, $z4, $z5;
        int $i2, $i5, $i6, i9;
        long $l3, $l4, $l7, l8;
        java.lang.Throwable $r10, r15, r19, r20, r21;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r14;
        short $s10;
        java.io.InterruptedIOException r16;
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r17, r18;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        l8 := @parameter0: long;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        $b0 = l8 cmp 0L;

        if $b0 != 0 goto label01;

        return;

     label01:
        r2 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer getOrCreateReadBuffer()>();

     label02:
        $b1 = l8 cmp 0L;

        if $b1 <= 0 goto label05;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        virtualinvoke $r3.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void readInternal(java.nio.ByteBuffer,androidx.media3.datasource.DataSpec)>(r2, r1);

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $z1 = virtualinvoke $r5.<java.lang.Thread: boolean isInterrupted()>();

        if $z1 == 0 goto label03;

        r16 = new java.io.InterruptedIOException;

        specialinvoke r16.<java.io.InterruptedIOException: void <init>()>();

        throw r16;

     label03:
        $z2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished>;

        if $z2 == 0 goto label04;

        r17 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        specialinvoke r17.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, 2008, 14);

        r19 = (java.lang.Throwable) r17;

        throw r19;

     label04:
        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $z3 = virtualinvoke r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z3);

        $i2 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l3 = (long) $i2;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>($l3, l8);

        i9 = (int) $l4;

        $i5 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        $i6 = $i5 + i9;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i6);

        $l7 = (long) i9;

        l8 = l8 - $l7;

        goto label02;

     label05:
        goto label10;

     label06:
        $r10 := @caughtexception;

        r15 = $r10;

        $z4 = r15 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z4 == 0 goto label07;

        $r14 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) r15;

        r20 = (java.lang.Throwable) $r14;

        throw r20;

     label07:
        r18 = new androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        $z5 = r15 instanceof java.net.SocketTimeoutException;

        if $z5 == 0 goto label08;

        $s10 = 2002;

        goto label09;

     label08:
        $s10 = 2001;

     label09:
        specialinvoke r18.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r15, r1, $s10, 14);

        r21 = (java.lang.Throwable) r18;

        throw r21;

     label10:
        return;

        catch java.io.IOException from label02 to label05 with label06;
    }

    private byte[] readResponseBody() throws java.io.IOException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.nio.ByteBuffer r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.media3.common.util.ConditionVariable $r2;
        androidx.media3.datasource.DataSpec $r4, $r6;
        java.lang.Object $r5;
        byte[] r9;
        boolean $z1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r9 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        r1 = specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer getOrCreateReadBuffer()>();

     label1:
        $z1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished>;

        if $z1 != 0 goto label2;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec>;

        $r5 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.datasource.DataSpec) $r5;

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void readInternal(java.nio.ByteBuffer,androidx.media3.datasource.DataSpec)>(r1, $r6);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if $i1 <= 0 goto label1;

        i0 = lengthof r9;

        $i2 = lengthof r9;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        $i4 = $i2 + $i3;

        r9 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r9, $i4);

        $i5 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r9, i0, $i5);

        goto label1;

     label2:
        return r9;
    }

    private void readInternal(java.nio.ByteBuffer, androidx.media3.datasource.DataSpec) throws androidx.media3.datasource.HttpDataSource$HttpDataSourceException
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.nio.ByteBuffer r1, $r14, $r17;
        androidx.media3.datasource.DataSpec r2;
        org.chromium.net.UrlRequest $r3, $r5;
        java.lang.Object $r4;
        int $i0;
        long $l1;
        androidx.media3.common.util.ConditionVariable $r6;
        boolean $z0, $z1;
        java.io.IOException $r7, $r8, $r10, $r22, r26;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException $r9, $r11, r25;
        java.lang.Throwable $r13, $r16, r20, r21, r27, r28;
        java.lang.Thread $r18;
        java.net.SocketTimeoutException r23;
        java.io.InterruptedIOException r24;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r5 = (org.chromium.net.UrlRequest) $r4;

        virtualinvoke $r5.<org.chromium.net.UrlRequest: void read(java.nio.ByteBuffer)>(r1);

     label1:
        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        $i0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: int readTimeoutMs>;

        $l1 = (long) $i0;

        $z0 = virtualinvoke $r6.<androidx.media3.common.util.ConditionVariable: boolean block(long)>($l1);

        if $z0 != 0 goto label2;

        r23 = new java.net.SocketTimeoutException;

        specialinvoke r23.<java.net.SocketTimeoutException: void <init>()>();

        throw r23;

     label2:
        goto label7;

     label3:
        $r16 := @caughtexception;

        r20 = $r16;

        $r17 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        if r1 != $r17 goto label4;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer> = null;

     label4:
        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r18.<java.lang.Thread: void interrupt()>();

        r24 = new java.io.InterruptedIOException;

        specialinvoke r24.<java.io.InterruptedIOException: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception> = r24;

        goto label7;

     label5:
        $r13 := @caughtexception;

        r21 = $r13;

        $r14 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        if r1 != $r14 goto label6;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer> = null;

     label6:
        r25 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        specialinvoke r25.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r21, r2, 2002, 2);

        r26 = (java.io.IOException) r25;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception> = r26;

     label7:
        $r22 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>;

        if $r22 == null goto label9;

        $r7 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>;

        $z1 = $r7 instanceof androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        if $z1 == 0 goto label8;

        $r10 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>;

        $r11 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) $r10;

        r27 = (java.lang.Throwable) $r11;

        throw r27;

     label8:
        $r8 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception>;

        $r9 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int)>($r8, r2, 2);

        r28 = (java.lang.Throwable) $r9;

        throw r28;

     label9:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.net.SocketTimeoutException from label1 to label2 with label5;
    }

    private java.nio.ByteBuffer getOrCreateReadBuffer()
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(32768);

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer> = $r3;

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(0);

     label1:
        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource: java.nio.ByteBuffer readBuffer>;

        return $r2;
    }

    private static boolean isCompressed(org.chromium.net.UrlResponseInfo)
    {
        org.chromium.net.UrlResponseInfo r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.List $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @parameter0: org.chromium.net.UrlResponseInfo;

        $r3 = virtualinvoke r0.<org.chromium.net.UrlResponseInfo: java.util.List getAllHeadersAsList()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Content-Encoding");

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r7;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("identity");

        if $z2 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        goto label1;

     label5:
        return 0;
    }

    private static java.lang.String parseCookies(java.util.List)
    {
        java.util.List r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(";", r0);

        return $r1;
    }

    private static void attachCookies(org.chromium.net.UrlRequest$Builder, java.lang.String)
    {
        org.chromium.net.UrlRequest$Builder r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.chromium.net.UrlRequest$Builder;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest$Builder addHeader(java.lang.String,java.lang.String)>("Cookie", r1);

        return;
    }

    private static int getStatus(org.chromium.net.UrlRequest) throws java.lang.InterruptedException
    {
        org.chromium.net.UrlRequest r0;
        androidx.media3.common.util.ConditionVariable r1, $r3;
        int[] r2;
        androidx.media3.datasource.cronet.CronetDataSource$1 $r4;
        int $i0;

        r0 := @parameter0: org.chromium.net.UrlRequest;

        $r3 = new androidx.media3.common.util.ConditionVariable;

        specialinvoke $r3.<androidx.media3.common.util.ConditionVariable: void <init>()>();

        r1 = $r3;

        r2 = newarray (int)[1];

        $r4 = new androidx.media3.datasource.cronet.CronetDataSource$1;

        specialinvoke $r4.<androidx.media3.datasource.cronet.CronetDataSource$1: void <init>(int[],androidx.media3.common.util.ConditionVariable)>(r2, r1);

        virtualinvoke r0.<org.chromium.net.UrlRequest: void getStatus(org.chromium.net.UrlRequest$StatusListener)>($r4);

        virtualinvoke r1.<androidx.media3.common.util.ConditionVariable: void block()>();

        $i0 = r2[0];

        return $i0;
    }

    private static java.lang.String getFirstHeader(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, $r5;
        java.util.List r2;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.List) $r3;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    private static int copyByteBuffer(java.nio.ByteBuffer, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.nio.ByteBuffer;

        r1 := @parameter1: java.nio.ByteBuffer;

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        i1 = virtualinvoke r0.<java.nio.ByteBuffer: int limit()>();

        $i4 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i5 = $i4 + i0;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i5);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r0);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i1);

        return i0;
    }

    static org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlRequest $r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest>;

        return $r1;
    }

    static androidx.media3.datasource.DataSpec access$200(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.datasource.DataSpec $r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec currentDataSpec>;

        return $r1;
    }

    static java.io.IOException access$302(androidx.media3.datasource.cronet.CronetDataSource, java.io.IOException)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        java.io.IOException r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter1: java.io.IOException;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException exception> = r1;

        return r1;
    }

    static androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        androidx.media3.common.util.ConditionVariable $r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable operation>;

        return $r1;
    }

    static boolean access$500(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean resetTimeoutOnRedirects>;

        return $z0;
    }

    static void access$600(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource: void resetConnectTimeout()>();

        return;
    }

    static boolean access$700(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean keepPostFor302Redirects>;

        return $z0;
    }

    static boolean access$800(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean handleSetCookieRequests>;

        return $z0;
    }

    static java.lang.String access$900(java.util.List)
    {
        java.util.List r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String parseCookies(java.util.List)>(r0);

        return $r1;
    }

    static void access$1000(org.chromium.net.UrlRequest$Builder, java.lang.String)
    {
        org.chromium.net.UrlRequest$Builder r0;
        java.lang.String r1;

        r0 := @parameter0: org.chromium.net.UrlRequest$Builder;

        r1 := @parameter1: java.lang.String;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: void attachCookies(org.chromium.net.UrlRequest$Builder,java.lang.String)>(r0, r1);

        return;
    }

    static org.chromium.net.UrlRequest access$102(androidx.media3.datasource.cronet.CronetDataSource, org.chromium.net.UrlRequest)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlRequest r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter1: org.chromium.net.UrlRequest;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest currentUrlRequest> = r1;

        return r1;
    }

    static org.chromium.net.UrlResponseInfo access$1102(androidx.media3.datasource.cronet.CronetDataSource, org.chromium.net.UrlResponseInfo)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        org.chromium.net.UrlResponseInfo r1;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        r1 := @parameter1: org.chromium.net.UrlResponseInfo;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo responseInfo> = r1;

        return r1;
    }

    static boolean access$1202(androidx.media3.datasource.cronet.CronetDataSource, boolean)
    {
        androidx.media3.datasource.cronet.CronetDataSource r0;
        boolean z0;

        r0 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        z0 := @parameter1: boolean;

        r0.<androidx.media3.datasource.cronet.CronetDataSource: boolean finished> = z0;

        return z0;
    }

    static void <clinit>()
    {
        staticinvoke <androidx.media3.common.MediaLibraryInfo: void registerModule(java.lang.String)>("media3.datasource.cronet");

        return;
    }

androidx.media3.datasource.cronet.CronetDataSource$1
<androidx.media3.datasource.cronet.CronetDataSource$1: int[] val$statusHolder>
<androidx.media3.datasource.cronet.CronetDataSource$1: androidx.media3.common.util.ConditionVariable val$conditionVariable>
    void <init>(int[], androidx.media3.common.util.ConditionVariable)
    {
        androidx.media3.datasource.cronet.CronetDataSource$1 r0;
        int[] r1;
        androidx.media3.common.util.ConditionVariable r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$1;

        r1 := @parameter0: int[];

        r2 := @parameter1: androidx.media3.common.util.ConditionVariable;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$1: int[] val$statusHolder> = r1;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$1: androidx.media3.common.util.ConditionVariable val$conditionVariable> = r2;

        specialinvoke r0.<org.chromium.net.UrlRequest$StatusListener: void <init>()>();

        return;
    }

    public void onStatus(int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$1 r0;
        int i0;
        int[] $r1;
        androidx.media3.common.util.ConditionVariable $r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$1: int[] val$statusHolder>;

        $r1[0] = i0;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$1: androidx.media3.common.util.ConditionVariable val$conditionVariable>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

androidx.media3.datasource.cronet.CronetDataSource$Factory
<androidx.media3.datasource.cronet.CronetDataSource$Factory: org.chromium.net.CronetEngine cronetEngine>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.util.concurrent.Executor executor>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$Factory fallbackFactory>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.lang.String userAgent>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: int requestPriority>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: int connectTimeoutMs>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: int readTimeoutMs>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean resetTimeoutOnRedirects>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean handleSetCookieRequests>
<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean keepPostFor302Redirects>
    public void <init>(org.chromium.net.CronetEngine, java.util.concurrent.Executor)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        org.chromium.net.CronetEngine r1, $r4;
        java.util.concurrent.Executor r2;
        java.lang.Object $r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r5;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: org.chromium.net.CronetEngine;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.chromium.net.CronetEngine) $r3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: org.chromium.net.CronetEngine cronetEngine> = $r4;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.util.concurrent.Executor executor> = r2;

        $r5 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r5.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = $r5;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory> = null;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int requestPriority> = 3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int connectTimeoutMs> = 8000;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int readTimeoutMs> = 8000;

        return;
    }

    public void <init>(androidx.media3.datasource.cronet.CronetEngineWrapper, java.util.concurrent.Executor)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        androidx.media3.datasource.cronet.CronetEngineWrapper r1;
        java.util.concurrent.Executor r2;
        org.chromium.net.CronetEngine $r3;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r4;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r5;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.cronet.CronetEngineWrapper;

        r2 := @parameter1: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<androidx.media3.datasource.cronet.CronetEngineWrapper: org.chromium.net.CronetEngine getCronetEngine()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: org.chromium.net.CronetEngine cronetEngine> = $r3;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.util.concurrent.Executor executor> = r2;

        $r4 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r4.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = $r4;

        $r5 = new androidx.media3.datasource.DefaultHttpDataSource$Factory;

        specialinvoke $r5.<androidx.media3.datasource.DefaultHttpDataSource$Factory: void <init>()>();

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory> = $r5;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int connectTimeoutMs> = 8000;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int readTimeoutMs> = 8000;

        return;
    }

    public final androidx.media3.datasource.cronet.CronetDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        java.util.Map r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r3, $r4;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        virtualinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clearAndSet(java.util.Map)>(r1);

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r4.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setDefaultRequestProperties(java.util.Map)>(r1);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setUserAgent(java.lang.String)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        java.lang.String r1;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r2, $r3;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.lang.String userAgent> = r1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r3.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setUserAgent(java.lang.String)>(r1);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setRequestPriority(int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        int i0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int requestPriority> = i0;

        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setConnectionTimeoutMs(int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        int i0;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r1, $r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int connectTimeoutMs> = i0;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r2.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setConnectTimeoutMs(int)>(i0);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setResetTimeoutOnRedirects(boolean)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean resetTimeoutOnRedirects> = z0;

        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setHandleSetCookieRequests(boolean)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        boolean z0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean handleSetCookieRequests> = z0;

        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setReadTimeoutMs(int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        int i0;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r1, $r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        i0 := @parameter0: int;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int readTimeoutMs> = i0;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r2.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setReadTimeoutMs(int)>(i0);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setContentTypePredicate(com.google.common.base.Predicate)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        com.google.common.base.Predicate r1;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r2, $r3;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: com.google.common.base.Predicate;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: com.google.common.base.Predicate contentTypePredicate> = r1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r3.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setContentTypePredicate(com.google.common.base.Predicate)>(r1);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setKeepPostFor302Redirects(boolean)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        boolean z0;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r1, $r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean keepPostFor302Redirects> = z0;

        $r1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r2.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setKeepPostFor302Redirects(boolean)>(z0);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r2, $r3;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.TransferListener transferListener> = r1;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        virtualinvoke $r3.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setTransferListener(androidx.media3.datasource.TransferListener)>(r1);

     label1:
        return r0;
    }

    public androidx.media3.datasource.cronet.CronetDataSource$Factory setFallbackFactory(androidx.media3.datasource.HttpDataSource$Factory)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        androidx.media3.datasource.HttpDataSource$Factory r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: androidx.media3.datasource.HttpDataSource$Factory;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$Factory fallbackFactory> = r1;

        return r0;
    }

    public androidx.media3.datasource.HttpDataSource createDataSource()
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        androidx.media3.datasource.cronet.CronetDataSource r1, r17;
        org.chromium.net.CronetEngine $r2, $r8;
        boolean $z0, $z1, $z2;
        com.google.common.base.Predicate $r4;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r5;
        java.lang.String $r6;
        int $i0, $i1, $i2;
        java.util.concurrent.Executor $r7;
        androidx.media3.datasource.TransferListener $r9, $r10;
        androidx.media3.datasource.HttpDataSource$Factory $r11, $r15;
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r12, $r14;
        java.lang.Object $r13, $r16;
        androidx.media3.datasource.HttpDataSource r18;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        $r2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: org.chromium.net.CronetEngine cronetEngine>;

        if $r2 != null goto label3;

        $r11 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$Factory fallbackFactory>;

        if $r11 == null goto label1;

        $r15 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$Factory fallbackFactory>;

        $r16 = interfaceinvoke $r15.<androidx.media3.datasource.HttpDataSource$Factory: androidx.media3.datasource.HttpDataSource createDataSource()>();

        goto label2;

     label1:
        $r12 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory internalFallbackFactory>;

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        $r14 = (androidx.media3.datasource.DefaultHttpDataSource$Factory) $r13;

        $r16 = virtualinvoke $r14.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource createDataSource()>();

     label2:
        r18 = (androidx.media3.datasource.HttpDataSource) $r16;

        return r18;

     label3:
        r17 = new androidx.media3.datasource.cronet.CronetDataSource;

        $r8 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: org.chromium.net.CronetEngine cronetEngine>;

        $r7 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.util.concurrent.Executor executor>;

        $i2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int requestPriority>;

        $i1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int connectTimeoutMs>;

        $i0 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: int readTimeoutMs>;

        $z2 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean resetTimeoutOnRedirects>;

        $z1 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean handleSetCookieRequests>;

        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: java.lang.String userAgent>;

        $r5 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: com.google.common.base.Predicate contentTypePredicate>;

        $z0 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: boolean keepPostFor302Redirects>;

        specialinvoke r17.<androidx.media3.datasource.cronet.CronetDataSource: void <init>(org.chromium.net.CronetEngine,java.util.concurrent.Executor,int,int,int,boolean,boolean,java.lang.String,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean)>($r8, $r7, $i2, $i1, $i0, $z2, $z1, $r6, $r5, $r4, $z0);

        r1 = r17;

        $r9 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        if $r9 == null goto label4;

        $r10 = r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.TransferListener transferListener>;

        virtualinvoke r1.<androidx.media3.datasource.cronet.CronetDataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>($r10);

     label4:
        return r1;
    }

    public volatile androidx.media3.datasource.HttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0, $r2;
        java.util.Map r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.cronet.CronetDataSource$Factory setDefaultRequestProperties(java.util.Map)>(r1);

        return $r2;
    }

    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.cronet.CronetDataSource$Factory r0;
        androidx.media3.datasource.HttpDataSource $r1;
        androidx.media3.datasource.DataSource r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$Factory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource$Factory: androidx.media3.datasource.HttpDataSource createDataSource()>();

        r2 = (androidx.media3.datasource.DataSource) $r1;

        return r2;
    }

androidx.media3.datasource.cronet.CronetDataSource$OpenException
<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus>
    public void <init>(java.io.IOException, androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r0;
        java.io.IOException r1;
        androidx.media3.datasource.DataSpec r2;
        int i0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r1 := @parameter0: java.io.IOException;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, 2000, 1);

        r0.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus> = i0;

        return;
    }

    public void <init>(java.io.IOException, androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r0;
        java.io.IOException r1;
        androidx.media3.datasource.DataSpec r2;
        int i0, i1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r1 := @parameter0: java.io.IOException;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, i0, 1);

        r0.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus> = i1;

        return;
    }

    public void <init>(java.lang.String, androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r0;
        java.lang.String r1;
        androidx.media3.datasource.DataSpec r2;
        int i0;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, 2000, 1);

        r0.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus> = i0;

        return;
    }

    public void <init>(java.lang.String, androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r0;
        java.lang.String r1;
        androidx.media3.datasource.DataSpec r2;
        int i0, i1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, i0, 1);

        r0.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus> = i1;

        return;
    }

    public void <init>(androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.cronet.CronetDataSource$OpenException r0;
        androidx.media3.datasource.DataSpec r1;
        int i0, i1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$OpenException;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, i0, 1);

        r0.<androidx.media3.datasource.cronet.CronetDataSource$OpenException: int cronetConnectionStatus> = i1;

        return;
    }

androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback
<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>
    private void <init>(androidx.media3.datasource.cronet.CronetDataSource)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        androidx.media3.datasource.cronet.CronetDataSource r1;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0> = r1;

        specialinvoke r0.<org.chromium.net.UrlRequest$Callback: void <init>()>();

        return;
    }

    public synchronized void onRedirectReceived(org.chromium.net.UrlRequest, org.chromium.net.UrlResponseInfo, java.lang.String)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        org.chromium.net.UrlRequest r1, r4, $r10, $r12, $r24, $r27;
        org.chromium.net.UrlResponseInfo r2;
        java.lang.String r3, r6, $r36;
        androidx.media3.datasource.DataSpec r5, $r15, r45;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        org.chromium.net.UrlRequest$Builder r7;
        java.lang.Throwable r8, $r42;
        androidx.media3.datasource.cronet.CronetDataSource $r9, $r11, $r14, $r17, $r18, $r23, $r26, $r32, $r33, $r35, $r40, $r43, $r46;
        java.lang.Object $r13, $r16, $r20;
        java.util.Map $r19, $r37;
        java.util.List $r21;
        android.net.Uri $r22;
        androidx.media3.datasource.DataSpec$Builder $r28, $r29, $r30, $r31;
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException $r34;
        byte[] $r38;
        androidx.media3.common.util.ConditionVariable $r41;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: org.chromium.net.UrlRequest;

        r2 := @parameter1: org.chromium.net.UrlResponseInfo;

        r3 := @parameter2: java.lang.String;

        $r9 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r10 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r9);

        if r1 == $r10 goto label01;

        return;

     label01:
        $r11 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r12 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r11);

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        r4 = (org.chromium.net.UrlRequest) $r13;

        $r14 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r15 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.datasource.DataSpec access$200(androidx.media3.datasource.cronet.CronetDataSource)>($r14);

        $r16 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        r5 = (androidx.media3.datasource.DataSpec) $r16;

        i0 = virtualinvoke r2.<org.chromium.net.UrlResponseInfo: int getHttpStatusCode()>();

        $i1 = r5.<androidx.media3.datasource.DataSpec: int httpMethod>;

        if $i1 != 2 goto label03;

        if i0 == 307 goto label02;

        if i0 != 308 goto label03;

     label02:
        $r35 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r34 = new androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        $r36 = virtualinvoke r2.<org.chromium.net.UrlResponseInfo: java.lang.String getHttpStatusText()>();

        $r37 = virtualinvoke r2.<org.chromium.net.UrlResponseInfo: java.util.Map getAllHeaders()>();

        $r38 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke $r34.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>(i0, $r36, null, $r37, r5, $r38);

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException access$302(androidx.media3.datasource.cronet.CronetDataSource,java.io.IOException)>($r35, $r34);

        $r40 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r41 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)>($r40);

        virtualinvoke $r41.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;

     label03:
        $r17 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $z1 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: boolean access$500(androidx.media3.datasource.cronet.CronetDataSource)>($r17);

        if $z1 == 0 goto label04;

        $r33 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: void access$600(androidx.media3.datasource.cronet.CronetDataSource)>($r33);

     label04:
        $r18 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $z2 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: boolean access$700(androidx.media3.datasource.cronet.CronetDataSource)>($r18);

        if $z2 == 0 goto label05;

        $i3 = r5.<androidx.media3.datasource.DataSpec: int httpMethod>;

        if $i3 != 2 goto label05;

        if i0 != 302 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z0 = $z6;

        if z0 != 0 goto label07;

        $r32 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $z4 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: boolean access$800(androidx.media3.datasource.cronet.CronetDataSource)>($r32);

        if $z4 != 0 goto label07;

        virtualinvoke r1.<org.chromium.net.UrlRequest: void followRedirect()>();

        return;

     label07:
        $r19 = virtualinvoke r2.<org.chromium.net.UrlResponseInfo: java.util.Map getAllHeaders()>();

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>("Set-Cookie");

        $r21 = (java.util.List) $r20;

        r6 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.lang.String access$900(java.util.List)>($r21);

        if z0 != 0 goto label08;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z3 == 0 goto label08;

        virtualinvoke r1.<org.chromium.net.UrlRequest: void followRedirect()>();

        return;

     label08:
        virtualinvoke r4.<org.chromium.net.UrlRequest: void cancel()>();

        if z0 != 0 goto label09;

        $i2 = r5.<androidx.media3.datasource.DataSpec: int httpMethod>;

        if $i2 != 2 goto label09;

        $r28 = virtualinvoke r5.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec$Builder buildUpon()>();

        $r29 = virtualinvoke $r28.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(java.lang.String)>(r3);

        $r30 = virtualinvoke $r29.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setHttpMethod(int)>(1);

        $r31 = virtualinvoke $r30.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setHttpBody(byte[])>(null);

        r45 = virtualinvoke $r31.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        goto label10;

     label09:
        $r22 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);

        r45 = virtualinvoke r5.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec withUri(android.net.Uri)>($r22);

     label10:
        $r46 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        r7 = virtualinvoke $r46.<androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest$Builder buildRequestBuilder(androidx.media3.datasource.DataSpec)>(r45);

     label11:
        goto label13;

     label12:
        $r42 := @caughtexception;

        r8 = $r42;

        $r43 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException access$302(androidx.media3.datasource.cronet.CronetDataSource,java.io.IOException)>($r43, r8);

        return;

     label13:
        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: void access$1000(org.chromium.net.UrlRequest$Builder,java.lang.String)>(r7, r6);

        $r23 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r24 = virtualinvoke r7.<org.chromium.net.UrlRequest$Builder: org.chromium.net.UrlRequest build()>();

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$102(androidx.media3.datasource.cronet.CronetDataSource,org.chromium.net.UrlRequest)>($r23, $r24);

        $r26 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r27 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r26);

        virtualinvoke $r27.<org.chromium.net.UrlRequest: void start()>();

        return;

        catch java.io.IOException from label10 to label11 with label12;
    }

    public synchronized void onResponseStarted(org.chromium.net.UrlRequest, org.chromium.net.UrlResponseInfo)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        org.chromium.net.UrlRequest r1, $r4;
        org.chromium.net.UrlResponseInfo r2;
        androidx.media3.datasource.cronet.CronetDataSource $r3, $r5, $r7;
        androidx.media3.common.util.ConditionVariable $r8;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: org.chromium.net.UrlRequest;

        r2 := @parameter1: org.chromium.net.UrlResponseInfo;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r4 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r3);

        if r1 == $r4 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlResponseInfo access$1102(androidx.media3.datasource.cronet.CronetDataSource,org.chromium.net.UrlResponseInfo)>($r5, r2);

        $r7 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r8 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)>($r7);

        virtualinvoke $r8.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    public synchronized void onReadCompleted(org.chromium.net.UrlRequest, org.chromium.net.UrlResponseInfo, java.nio.ByteBuffer)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        org.chromium.net.UrlRequest r1, $r5;
        org.chromium.net.UrlResponseInfo r2;
        java.nio.ByteBuffer r3;
        androidx.media3.datasource.cronet.CronetDataSource $r4, $r6;
        androidx.media3.common.util.ConditionVariable $r7;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: org.chromium.net.UrlRequest;

        r2 := @parameter1: org.chromium.net.UrlResponseInfo;

        r3 := @parameter2: java.nio.ByteBuffer;

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r5 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r4);

        if r1 == $r5 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r7 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)>($r6);

        virtualinvoke $r7.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    public synchronized void onSucceeded(org.chromium.net.UrlRequest, org.chromium.net.UrlResponseInfo)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        org.chromium.net.UrlRequest r1, $r4;
        org.chromium.net.UrlResponseInfo r2;
        androidx.media3.datasource.cronet.CronetDataSource $r3, $r5, $r6;
        androidx.media3.common.util.ConditionVariable $r7;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: org.chromium.net.UrlRequest;

        r2 := @parameter1: org.chromium.net.UrlResponseInfo;

        $r3 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r4 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r3);

        if r1 == $r4 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: boolean access$1202(androidx.media3.datasource.cronet.CronetDataSource,boolean)>($r5, 1);

        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r7 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)>($r6);

        virtualinvoke $r7.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    public synchronized void onFailed(org.chromium.net.UrlRequest, org.chromium.net.UrlResponseInfo, org.chromium.net.CronetException)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        org.chromium.net.UrlRequest r1, $r5;
        org.chromium.net.UrlResponseInfo r2;
        org.chromium.net.CronetException r3;
        androidx.media3.datasource.cronet.CronetDataSource $r4, $r6, $r10, $r12;
        boolean $z0;
        org.chromium.net.NetworkException $r8;
        int $i0;
        java.net.UnknownHostException $r9;
        androidx.media3.common.util.ConditionVariable $r13;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: org.chromium.net.UrlRequest;

        r2 := @parameter1: org.chromium.net.UrlResponseInfo;

        r3 := @parameter2: org.chromium.net.CronetException;

        $r4 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r5 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: org.chromium.net.UrlRequest access$100(androidx.media3.datasource.cronet.CronetDataSource)>($r4);

        if r1 == $r5 goto label1;

        return;

     label1:
        $z0 = r3 instanceof org.chromium.net.NetworkException;

        if $z0 == 0 goto label2;

        $r8 = (org.chromium.net.NetworkException) r3;

        $i0 = virtualinvoke $r8.<org.chromium.net.NetworkException: int getErrorCode()>();

        if $i0 != 1 goto label2;

        $r10 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r9 = new java.net.UnknownHostException;

        specialinvoke $r9.<java.net.UnknownHostException: void <init>()>();

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException access$302(androidx.media3.datasource.cronet.CronetDataSource,java.io.IOException)>($r10, $r9);

        goto label3;

     label2:
        $r6 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: java.io.IOException access$302(androidx.media3.datasource.cronet.CronetDataSource,java.io.IOException)>($r6, r3);

     label3:
        $r12 = r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: androidx.media3.datasource.cronet.CronetDataSource this$0>;

        $r13 = staticinvoke <androidx.media3.datasource.cronet.CronetDataSource: androidx.media3.common.util.ConditionVariable access$400(androidx.media3.datasource.cronet.CronetDataSource)>($r12);

        virtualinvoke $r13.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        return;
    }

    void <init>(androidx.media3.datasource.cronet.CronetDataSource, androidx.media3.datasource.cronet.CronetDataSource$1)
    {
        androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback r0;
        androidx.media3.datasource.cronet.CronetDataSource r1;
        androidx.media3.datasource.cronet.CronetDataSource$1 r2;

        r0 := @this: androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback;

        r1 := @parameter0: androidx.media3.datasource.cronet.CronetDataSource;

        r2 := @parameter1: androidx.media3.datasource.cronet.CronetDataSource$1;

        specialinvoke r0.<androidx.media3.datasource.cronet.CronetDataSource$UrlRequestCallback: void <init>(androidx.media3.datasource.cronet.CronetDataSource)>(r1);

        return;
    }

