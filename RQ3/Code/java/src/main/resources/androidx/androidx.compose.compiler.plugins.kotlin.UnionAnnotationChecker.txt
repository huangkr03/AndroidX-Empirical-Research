androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker
<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.descriptors.ModuleDescriptor moduleDescriptor>
<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME>
<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion Companion>
    public void checkType(org.jetbrains.kotlin.psi.KtExpression, org.jetbrains.kotlin.types.KotlinType, org.jetbrains.kotlin.types.KotlinType, org.jetbrains.kotlin.resolve.calls.context.ResolutionContext)
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker r0;
        org.jetbrains.kotlin.psi.KtExpression r1;
        org.jetbrains.kotlin.types.KotlinType r2, r3, r5, r9, r11, $r12;
        org.jetbrains.kotlin.resolve.calls.context.ResolutionContext r4;
        java.util.List r6, r7, $r19;
        java.util.Iterator r8, r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r13, $r24;
        org.jetbrains.kotlin.name.FqName $r14, $r25;
        java.lang.Object $r15, $r22;
        org.jetbrains.kotlin.resolve.BindingTrace $r16;
        org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 $r17;
        org.jetbrains.kotlin.com.intellij.psi.PsiElement $r18;
        org.jetbrains.kotlin.diagnostics.ParametrizedDiagnostic $r20;
        org.jetbrains.kotlin.diagnostics.Diagnostic $r21;
        org.jetbrains.kotlin.types.checker.KotlinTypeChecker $r23;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker;

        r1 := @parameter0: org.jetbrains.kotlin.psi.KtExpression;

        r2 := @parameter1: org.jetbrains.kotlin.types.KotlinType;

        r3 := @parameter2: org.jetbrains.kotlin.types.KotlinType;

        r4 := @parameter3: org.jetbrains.kotlin.resolve.calls.context.ResolutionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "expressionType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "expressionTypeWithSmartCast");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "c");

        $r12 = r4.<org.jetbrains.kotlin.resolve.calls.context.ResolutionContext: org.jetbrains.kotlin.types.KotlinType expectedType>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "c.expectedType");

        r5 = $r12;

        $z0 = staticinvoke <org.jetbrains.kotlin.types.TypeUtils: boolean noExpectedType(org.jetbrains.kotlin.types.KotlinType)>(r5);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r13 = virtualinvoke r5.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r14 = <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME>;

        $z1 = interfaceinvoke $r13.<org.jetbrains.kotlin.descriptors.annotations.Annotations: boolean hasAnnotation(org.jetbrains.kotlin.name.FqName)>($r14);

        if $z1 != 0 goto label2;

        $r24 = virtualinvoke r3.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r25 = <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME>;

        $z4 = interfaceinvoke $r24.<org.jetbrains.kotlin.descriptors.annotations.Annotations: boolean hasAnnotation(org.jetbrains.kotlin.name.FqName)>($r25);

        if $z4 != 0 goto label2;

        return;

     label2:
        r6 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: java.util.List getUnionTypes(org.jetbrains.kotlin.types.KotlinType)>(r3);

        r7 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: java.util.List getUnionTypes(org.jetbrains.kotlin.types.KotlinType)>(r5);

        r8 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label8;

        $r15 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.jetbrains.kotlin.types.KotlinType) $r15;

        r10 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r22 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.jetbrains.kotlin.types.KotlinType) $r22;

        $r23 = <org.jetbrains.kotlin.types.checker.KotlinTypeChecker: org.jetbrains.kotlin.types.checker.KotlinTypeChecker DEFAULT>;

        $z3 = interfaceinvoke $r23.<org.jetbrains.kotlin.types.checker.KotlinTypeChecker: boolean isSubtypeOf(org.jetbrains.kotlin.types.KotlinType,org.jetbrains.kotlin.types.KotlinType)>(r9, r11);

        if $z3 == 0 goto label5;

        goto label7;

     label5:
        goto label4;

     label6:
        $r16 = r4.<org.jetbrains.kotlin.resolve.calls.context.ResolutionContext: org.jetbrains.kotlin.resolve.BindingTrace trace>;

        $r17 = <androidx.compose.compiler.plugins.kotlin.ComposeErrors: org.jetbrains.kotlin.diagnostics.DiagnosticFactory2 ILLEGAL_ASSIGN_TO_UNIONTYPE>;

        $r18 = (org.jetbrains.kotlin.com.intellij.psi.PsiElement) r1;

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r9);

        $r20 = virtualinvoke $r17.<org.jetbrains.kotlin.diagnostics.DiagnosticFactory2: org.jetbrains.kotlin.diagnostics.ParametrizedDiagnostic on(org.jetbrains.kotlin.com.intellij.psi.PsiElement,java.lang.Object,java.lang.Object)>($r18, $r19, r7);

        $r21 = (org.jetbrains.kotlin.diagnostics.Diagnostic) $r20;

        interfaceinvoke $r16.<org.jetbrains.kotlin.resolve.BindingTrace: void report(org.jetbrains.kotlin.diagnostics.Diagnostic)>($r21);

        return;

     label7:
        goto label3;

     label8:
        return;
    }

    private final java.util.List getUnionTypes(org.jetbrains.kotlin.types.KotlinType)
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker r0;
        org.jetbrains.kotlin.types.KotlinType r1, r10, $r22;
        org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor r2, $r13;
        org.jetbrains.kotlin.resolve.constants.ArrayValue r3;
        java.lang.Iterable $r4;
        java.util.Collection r5, r9;
        java.util.Iterator r6;
        java.lang.Object r7, $r17, $r18, $r24;
        org.jetbrains.kotlin.resolve.constants.ConstantValue r8;
        org.jetbrains.kotlin.descriptors.annotations.Annotations $r11;
        org.jetbrains.kotlin.name.FqName $r12;
        java.util.List $r14, $r20, $r23;
        java.util.Map $r15;
        org.jetbrains.kotlin.name.Name $r16;
        java.util.ArrayList $r19;
        int $i0;
        boolean $z3;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor $r21;
        org.jetbrains.kotlin.types.TypeProjection $r25;
        java.lang.NullPointerException $r26;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker;

        r1 := @parameter0: org.jetbrains.kotlin.types.KotlinType;

        $r11 = virtualinvoke r1.<org.jetbrains.kotlin.types.KotlinType: org.jetbrains.kotlin.descriptors.annotations.Annotations getAnnotations()>();

        $r12 = <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME>;

        $r13 = interfaceinvoke $r11.<org.jetbrains.kotlin.descriptors.annotations.Annotations: org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor findAnnotation(org.jetbrains.kotlin.name.FqName)>($r12);

        if $r13 == null goto label1;

        goto label2;

     label1:
        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r1);

        return $r14;

     label2:
        r2 = $r13;

        $r15 = interfaceinvoke r2.<org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor: java.util.Map getAllValueArguments()>();

        $r16 = staticinvoke <org.jetbrains.kotlin.name.Name: org.jetbrains.kotlin.name.Name identifier(java.lang.String)>("types");

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        if $r17 != null goto label3;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.resolve.constants.ArrayValue");

        throw $r26;

     label3:
        r3 = (org.jetbrains.kotlin.resolve.constants.ArrayValue) $r17;

        $r18 = virtualinvoke r3.<org.jetbrains.kotlin.resolve.constants.ArrayValue: java.lang.Object getValue()>();

        $r4 = (java.lang.Iterable) $r18;

        $r19 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r4, 10);

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i0);

        r5 = (java.util.Collection) $r19;

        r6 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jetbrains.kotlin.resolve.constants.ConstantValue) r7;

        r9 = r5;

        $r21 = r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.descriptors.ModuleDescriptor moduleDescriptor>;

        $r22 = virtualinvoke r8.<org.jetbrains.kotlin.resolve.constants.ConstantValue: org.jetbrains.kotlin.types.KotlinType getType(org.jetbrains.kotlin.descriptors.ModuleDescriptor)>($r21);

        $r23 = virtualinvoke $r22.<org.jetbrains.kotlin.types.KotlinType: java.util.List getArguments()>();

        $r24 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object single(java.util.List)>($r23);

        $r25 = (org.jetbrains.kotlin.types.TypeProjection) $r24;

        r10 = interfaceinvoke $r25.<org.jetbrains.kotlin.types.TypeProjection: org.jetbrains.kotlin.types.KotlinType getType()>();

        interfaceinvoke r9.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label4;

     label5:
        $r20 = (java.util.List) r5;

        return $r20;
    }

    public final org.jetbrains.kotlin.descriptors.ModuleDescriptor getModuleDescriptor()
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker r0;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.descriptors.ModuleDescriptor moduleDescriptor>;

        return $r1;
    }

    public void <init>(org.jetbrains.kotlin.descriptors.ModuleDescriptor)
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker r0;
        org.jetbrains.kotlin.descriptors.ModuleDescriptor r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker;

        r1 := @parameter0: org.jetbrains.kotlin.descriptors.ModuleDescriptor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "moduleDescriptor");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.descriptors.ModuleDescriptor moduleDescriptor> = r1;

        return;
    }

    static void <clinit>()
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion $r0;
        androidx.compose.compiler.plugins.kotlin.ComposeFqNames $r1;
        org.jetbrains.kotlin.name.FqName $r2;

        $r0 = new androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion;

        specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion Companion> = $r0;

        $r1 = <androidx.compose.compiler.plugins.kotlin.ComposeFqNames: androidx.compose.compiler.plugins.kotlin.ComposeFqNames INSTANCE>;

        $r2 = virtualinvoke $r1.<androidx.compose.compiler.plugins.kotlin.ComposeFqNames: org.jetbrains.kotlin.name.FqName fqNameFor(java.lang.String)>("UnionType");

        <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME> = $r2;

        return;
    }

    public void checkReceiver(org.jetbrains.kotlin.descriptors.ReceiverParameterDescriptor, org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue, boolean, org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext)
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker r0;
        org.jetbrains.kotlin.descriptors.ReceiverParameterDescriptor r1;
        org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue r2;
        boolean z0;
        org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker;

        r1 := @parameter0: org.jetbrains.kotlin.descriptors.ReceiverParameterDescriptor;

        r2 := @parameter1: org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "receiverParameter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "receiverArgument");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "c");

        staticinvoke <org.jetbrains.kotlin.resolve.calls.checkers.AdditionalTypeChecker$DefaultImpls: void checkReceiver(org.jetbrains.kotlin.resolve.calls.checkers.AdditionalTypeChecker,org.jetbrains.kotlin.descriptors.ReceiverParameterDescriptor,org.jetbrains.kotlin.resolve.scopes.receivers.ReceiverValue,boolean,org.jetbrains.kotlin.resolve.calls.context.CallResolutionContext)>(r0, r1, r2, z0, r3);

        return;
    }

    public static final org.jetbrains.kotlin.name.FqName access$getUNIONTYPE_ANNOTATION_NAME$cp()
    {
        org.jetbrains.kotlin.name.FqName $r0;

        $r0 = <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName UNIONTYPE_ANNOTATION_NAME>;

        return $r0;
    }

androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion
    public final org.jetbrains.kotlin.name.FqName getUNIONTYPE_ANNOTATION_NAME()
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion r0;
        org.jetbrains.kotlin.name.FqName $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion;

        $r1 = staticinvoke <androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker: org.jetbrains.kotlin.name.FqName access$getUNIONTYPE_ANNOTATION_NAME$cp()>();

        return $r1;
    }

    private void <init>()
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion r0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.UnionAnnotationChecker$Companion: void <init>()>();

        return;
    }

