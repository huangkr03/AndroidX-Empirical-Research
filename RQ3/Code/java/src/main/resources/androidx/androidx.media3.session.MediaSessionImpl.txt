androidx.media3.session.MediaSessionImpl
<androidx.media3.session.MediaSessionImpl: java.lang.Object STATIC_LOCK>
<androidx.media3.session.MediaSessionImpl: java.lang.String WRONG_THREAD_ERROR_MESSAGE>
<androidx.media3.session.MediaSessionImpl: long DEFAULT_SESSION_POSITION_UPDATE_DELAY_MS>
<androidx.media3.session.MediaSessionImpl: boolean componentNamesInitialized>
<androidx.media3.session.MediaSessionImpl: android.content.ComponentName serviceComponentName>
<androidx.media3.session.MediaSessionImpl: java.lang.String TAG>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionResult RESULT_WHEN_CLOSED>
<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>
<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler onPlayerInfoChangedHandler>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>
<androidx.media3.session.MediaSessionImpl: android.content.Context context>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>
<androidx.media3.session.MediaSessionImpl: java.lang.String sessionId>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken sessionToken>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>
<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent sessionActivity>
<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent>
<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver>
<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader bitmapLoader>
<androidx.media3.session.MediaSessionImpl: java.lang.Runnable periodicSessionPositionInfoUpdateRunnable>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerListener playerListener>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo playerInfo>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>
<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub browserServiceLegacyStub>
<androidx.media3.session.MediaSessionImpl: boolean closed>
<androidx.media3.session.MediaSessionImpl: long sessionPositionUpdateDelayMs>
    public void <init>(androidx.media3.session.MediaSession, android.content.Context, java.lang.String, androidx.media3.common.Player, android.app.PendingIntent, androidx.media3.session.MediaSession$Callback, android.os.Bundle, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaSessionImpl r0, r9;
        androidx.media3.session.MediaSession r1;
        android.content.Context r2;
        java.lang.String r3, $r20, $r23, $r27, $r39, $r47, $r49;
        androidx.media3.common.Player r4;
        android.app.PendingIntent r5, $r33, $r36, $r41, $r62;
        androidx.media3.session.MediaSession$Callback r6;
        android.os.Bundle r7;
        androidx.media3.session.BitmapLoader r8;
        android.content.IntentFilter r10, $r45;
        java.lang.Object $r11, $r29, $r48, r56;
        androidx.media3.session.MediaSessionStub $r12, $r28;
        android.os.Handler $r13, $r63, $r66, $r70;
        android.os.Looper $r14, $r17;
        androidx.media3.session.PlayerInfo $r15;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r16;
        android.net.Uri$Builder $r18, $r21, $r22, $r24;
        java.lang.Class $r19, $r43;
        long $l0;
        android.net.Uri $r25, $r31, $r38, $r46;
        androidx.media3.session.SessionToken $r26;
        int $i1, $i2, $i3, $i4, i5;
        boolean $z0;
        android.content.Intent $r30, $r37, r59, r60;
        android.content.ComponentName $r42, $r52, $r53, $r54, r57;
        androidx.media3.session.MediaSessionImpl$MediaButtonReceiver $r44;
        android.content.BroadcastReceiver $r50;
        java.lang.Throwable $r55, r58;
        androidx.media3.session.MediaSessionLegacyStub $r61;
        androidx.media3.session.PlayerWrapper $r64, r65;
        java.lang.Runnable $r67, $r69, $r72;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.media3.common.Player;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: androidx.media3.session.MediaSession$Callback;

        r7 := @parameter6: android.os.Bundle;

        r8 := @parameter7: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r11 = new java.lang.Object;

        specialinvoke $r11.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock> = $r11;

        r0.<androidx.media3.session.MediaSessionImpl: android.content.Context context> = r2;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance> = r1;

        r9 = r0;

        $r12 = new androidx.media3.session.MediaSessionStub;

        specialinvoke $r12.<androidx.media3.session.MediaSessionStub: void <init>(androidx.media3.session.MediaSessionImpl)>(r9);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub> = $r12;

        r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent sessionActivity> = r5;

        $r13 = new android.os.Handler;

        $r14 = interfaceinvoke r4.<androidx.media3.common.Player: android.os.Looper getApplicationLooper()>();

        specialinvoke $r13.<android.os.Handler: void <init>(android.os.Looper)>($r14);

        r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler> = $r13;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback> = r6;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader bitmapLoader> = r8;

        $r15 = <androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo DEFAULT>;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo playerInfo> = $r15;

        $r16 = new androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler;

        $r17 = interfaceinvoke r4.<androidx.media3.common.Player: android.os.Looper getApplicationLooper()>();

        specialinvoke $r16.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void <init>(androidx.media3.session.MediaSessionImpl,android.os.Looper)>(r0, $r17);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler onPlayerInfoChangedHandler> = $r16;

        r0.<androidx.media3.session.MediaSessionImpl: java.lang.String sessionId> = r3;

        $r18 = new android.net.Uri$Builder;

        specialinvoke $r18.<android.net.Uri$Builder: void <init>()>();

        $r19 = class "Landroidx/media3/session/MediaSessionImpl;";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r18.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r3);

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r24 = virtualinvoke $r22.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<android.net.Uri$Builder: android.net.Uri build()>();

        r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri> = $r25;

        $r26 = new androidx.media3.session.SessionToken;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        $r27 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        $r28 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        specialinvoke $r26.<androidx.media3.session.SessionToken: void <init>(int,int,int,int,java.lang.String,androidx.media3.session.IMediaSession,android.os.Bundle)>($i1, 0, 1000000202, 1, $r27, $r28, r7);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken sessionToken> = $r26;

        $r29 = <androidx.media3.session.MediaSessionImpl: java.lang.Object STATIC_LOCK>;

        r56 = $r29;

        entermonitor $r29;

     label01:
        $z0 = <androidx.media3.session.MediaSessionImpl: boolean componentNamesInitialized>;

        if $z0 != 0 goto label03;

        $r52 = staticinvoke <androidx.media3.session.MediaSessionImpl: android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String)>(r2, "androidx.media3.session.MediaLibraryService");

        <androidx.media3.session.MediaSessionImpl: android.content.ComponentName serviceComponentName> = $r52;

        $r53 = <androidx.media3.session.MediaSessionImpl: android.content.ComponentName serviceComponentName>;

        if $r53 != null goto label02;

        $r54 = staticinvoke <androidx.media3.session.MediaSessionImpl: android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String)>(r2, "androidx.media3.session.MediaSessionService");

        <androidx.media3.session.MediaSessionImpl: android.content.ComponentName serviceComponentName> = $r54;

     label02:
        <androidx.media3.session.MediaSessionImpl: boolean componentNamesInitialized> = 1;

     label03:
        r57 = <androidx.media3.session.MediaSessionImpl: android.content.ComponentName serviceComponentName>;

        exitmonitor r56;

     label04:
        goto label07;

     label05:
        $r55 := @caughtexception;

        r58 = $r55;

        exitmonitor r56;

     label06:
        throw r58;

     label07:
        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 31 goto label08;

        $i4 = 33554432;

        goto label09;

     label08:
        $i4 = 0;

     label09:
        i5 = $i4;

        if r57 != null goto label10;

        $r37 = new android.content.Intent;

        $r38 = r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>;

        specialinvoke $r37.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MEDIA_BUTTON", $r38);

        r59 = $r37;

        $r39 = virtualinvoke r2.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r59.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r39);

        $r41 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r2, 0, r59, i5);

        r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent> = $r41;

        $r42 = new android.content.ComponentName;

        $r43 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r42.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r2, $r43);

        r57 = $r42;

        $r44 = new androidx.media3.session.MediaSessionImpl$MediaButtonReceiver;

        specialinvoke $r44.<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: void <init>(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$1)>(r0, null);

        r0.<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver> = $r44;

        $r45 = new android.content.IntentFilter;

        specialinvoke $r45.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.MEDIA_BUTTON");

        r10 = $r45;

        $r46 = r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>;

        $r47 = virtualinvoke $r46.<android.net.Uri: java.lang.String getScheme()>();

        $r48 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r47);

        $r49 = (java.lang.String) $r48;

        virtualinvoke r10.<android.content.IntentFilter: void addDataScheme(java.lang.String)>($r49);

        $r50 = r0.<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver>;

        staticinvoke <androidx.media3.common.util.Util: android.content.Intent registerReceiverNotExported(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter)>(r2, $r50, r10);

        goto label13;

     label10:
        $r30 = new android.content.Intent;

        $r31 = r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>;

        specialinvoke $r30.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.MEDIA_BUTTON", $r31);

        r60 = $r30;

        virtualinvoke r60.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r57);

        $i3 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i3 < 26 goto label11;

        $r36 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)>(r2, 0, r60, i5);

        r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent> = $r36;

        goto label12;

     label11:
        $r33 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>(r2, 0, r60, i5);

        r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent> = $r33;

     label12:
        r0.<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver> = null;

     label13:
        $r61 = new androidx.media3.session.MediaSessionLegacyStub;

        $r62 = r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent>;

        $r63 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        specialinvoke $r61.<androidx.media3.session.MediaSessionLegacyStub: void <init>(androidx.media3.session.MediaSessionImpl,android.content.ComponentName,android.app.PendingIntent,android.os.Handler)>(r9, r57, $r62, $r63);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub> = $r61;

        $r64 = new androidx.media3.session.PlayerWrapper;

        specialinvoke $r64.<androidx.media3.session.PlayerWrapper: void <init>(androidx.media3.common.Player)>(r4);

        r65 = $r64;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper> = r65;

        $r66 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        $r67 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerWrapper)>(r9, r65) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$new$0(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r66, $r67);

        r0.<androidx.media3.session.MediaSessionImpl: long sessionPositionUpdateDelayMs> = 3000L;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        $r69 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl)>(r9) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionImpl: void notifyPeriodicSessionPositionInfoChangesOnHandler()>, methodtype: void __METHODTYPE__());

        r0.<androidx.media3.session.MediaSessionImpl: java.lang.Runnable periodicSessionPositionInfoUpdateRunnable> = $r69;

        $r70 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r9);

        $r72 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl)>(r9) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionImpl: void schedulePeriodicSessionPositionInfoChanges()>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r70, $r72);

        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public void setPlayer(androidx.media3.common.Player)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.common.Player r1, $r3;
        androidx.media3.session.PlayerWrapper $r2, $r4, $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.common.Player;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player getWrappedPlayer()>();

        if r1 != $r3 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $r4 = new androidx.media3.session.PlayerWrapper;

        specialinvoke $r4.<androidx.media3.session.PlayerWrapper: void <init>(androidx.media3.common.Player)>(r1);

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void setPlayerInternal(androidx.media3.session.PlayerWrapper,androidx.media3.session.PlayerWrapper)>($r5, $r4);

        return;
    }

    private void setPlayerInternal(androidx.media3.session.PlayerWrapper, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerWrapper r1, r2;
        androidx.media3.session.MediaSessionImpl$PlayerListener r3, $r4, $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r5;
        androidx.media3.session.PlayerInfo $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r7;
        androidx.media3.session.MediaSessionLegacyStub $r8;
        java.lang.Object $r10;
        androidx.media3.common.Player$Listener $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.PlayerWrapper;

        r2 := @parameter1: androidx.media3.session.PlayerWrapper;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper> = r2;

        if r1 == null goto label1;

        $r9 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerListener playerListener>;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r9);

        $r11 = (androidx.media3.common.Player$Listener) $r10;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void removeListener(androidx.media3.common.Player$Listener)>($r11);

     label1:
        $r4 = new androidx.media3.session.MediaSessionImpl$PlayerListener;

        specialinvoke $r4.<androidx.media3.session.MediaSessionImpl$PlayerListener: void <init>(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerWrapper)>(r0, r2);

        r3 = $r4;

        virtualinvoke r2.<androidx.media3.session.PlayerWrapper: void addListener(androidx.media3.common.Player$Listener)>(r3);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerListener playerListener> = r3;

        $r5 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.PlayerWrapper,androidx.media3.session.PlayerWrapper)>(r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setPlayerInternal$1(androidx.media3.session.PlayerWrapper,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskToLegacyStub(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r5);

        if r1 != null goto label2;

        $r8 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        virtualinvoke $r8.<androidx.media3.session.MediaSessionLegacyStub: void start()>();

     label2:
        $r6 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.session.PlayerInfo createPlayerInfoForBundling()>();

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo playerInfo> = $r6;

        $r7 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler onPlayerInfoChangedHandler>;

        virtualinvoke $r7.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(0, 0);

        return;
    }

    public void release()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.Object $r1, r12;
        boolean $z0;
        android.os.Handler $r2, $r3;
        java.lang.Runnable $r4;
        androidx.media3.session.MediaSessionLegacyStub $r5;
        android.app.PendingIntent $r6;
        android.content.BroadcastReceiver $r7, $r9;
        androidx.media3.session.MediaSessionStub $r8;
        android.content.Context $r10;
        java.lang.Throwable $r11, r13;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>;

        r12 = $r1;

        entermonitor $r1;

        $z0 = r0.<androidx.media3.session.MediaSessionImpl: boolean closed>;

        if $z0 == 0 goto label1;

        exitmonitor r12;

        return;

     label1:
        r0.<androidx.media3.session.MediaSessionImpl: boolean closed> = 1;

        exitmonitor r12;

        goto label2;

     label2:
        $r2 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label3:
        $r3 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionImpl: void lambda$release$2()>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r3, $r4);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception thrown while closing", r13);

     label6:
        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionLegacyStub: void release()>();

        $r6 = r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent mediaButtonIntent>;

        virtualinvoke $r6.<android.app.PendingIntent: void cancel()>();

        $r7 = r0.<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver>;

        if $r7 == null goto label7;

        $r10 = r0.<androidx.media3.session.MediaSessionImpl: android.content.Context context>;

        $r9 = r0.<androidx.media3.session.MediaSessionImpl: android.content.BroadcastReceiver broadcastReceiver>;

        virtualinvoke $r10.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r9);

     label7:
        $r8 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        virtualinvoke $r8.<androidx.media3.session.MediaSessionStub: void release()>();

        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public androidx.media3.session.PlayerWrapper getPlayerWrapper()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerWrapper $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        return $r1;
    }

    public java.lang.String getId()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.String $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.String sessionId>;

        return $r1;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.net.Uri $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>;

        return $r1;
    }

    public androidx.media3.session.SessionToken getToken()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.SessionToken $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken sessionToken>;

        return $r1;
    }

    public java.util.List getConnectedControllers()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.util.ArrayList r1, $r2;
        androidx.media3.session.MediaSessionStub $r3;
        androidx.media3.session.ConnectedControllersManager $r4, $r7;
        com.google.common.collect.ImmutableList $r5, $r8;
        androidx.media3.session.MediaSessionLegacyStub $r6;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $r5 = virtualinvoke $r4.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $r8 = virtualinvoke $r7.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        return r1;
    }

    public boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionStub $r2;
        androidx.media3.session.ConnectedControllersManager $r3, $r5;
        boolean $z0, $z1, $z2;
        androidx.media3.session.MediaSessionLegacyStub $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z0 = virtualinvoke $r3.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z1 = virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public com.google.common.util.concurrent.ListenableFuture setCustomLayout(androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.util.List;

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (java.util.List)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setCustomLayout$3(java.util.List,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        $r4 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture dispatchRemoteControllerTask(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r3);

        return $r4;
    }

    public void setCustomLayout(java.util.List)
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.util.List r1;
        androidx.media3.session.PlayerWrapper $r2;
        com.google.common.collect.ImmutableList $r3;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r1);

        virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: void setCustomLayout(com.google.common.collect.ImmutableList)>($r3);

        $r4 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (java.util.List)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setCustomLayout$4(java.util.List,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r4);

        return;
    }

    public void setSessionExtras(android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: android.os.Bundle;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (android.os.Bundle)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setSessionExtras$5(android.os.Bundle,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r2);

        return;
    }

    public void setSessionExtras(androidx.media3.session.MediaSession$ControllerInfo, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        android.os.Bundle r2;
        androidx.media3.session.MediaSessionStub $r3;
        androidx.media3.session.ConnectedControllersManager $r4;
        boolean $z0;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z0 = virtualinvoke $r4.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 == 0 goto label1;

        $r5 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (android.os.Bundle)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setSessionExtras$6(android.os.Bundle,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r5);

     label1:
        return;
    }

    public androidx.media3.session.BitmapLoader getBitmapLoader()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.BitmapLoader $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.BitmapLoader bitmapLoader>;

        return $r1;
    }

    public void setAvailableCommands(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommands r2;
        androidx.media3.common.Player$Commands r3;
        androidx.media3.session.MediaSessionStub $r4, $r8;
        androidx.media3.session.ConnectedControllersManager $r5, $r7, $r9;
        boolean $z0;
        androidx.media3.session.MediaSessionLegacyStub $r6;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommands;

        r3 := @parameter2: androidx.media3.common.Player$Commands;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $z0 = virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r9 = virtualinvoke $r8.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r9.<androidx.media3.session.ConnectedControllersManager: void updateCommandsFromSession(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r1, r2, r3);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$setAvailableCommands$7(androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r10);

        $r11 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler onPlayerInfoChangedHandler>;

        virtualinvoke $r11.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(0, 0);

        goto label2;

     label1:
        $r6 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r7.<androidx.media3.session.ConnectedControllersManager: void updateCommandsFromSession(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r1, r2, r3);

     label2:
        return;
    }

    public void broadcastCustomCommand(androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.SessionCommand;

        r2 := @parameter1: android.os.Bundle;

        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.SessionCommand,android.os.Bundle)>(r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$broadcastCustomCommand$8(androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r3);

        return;
    }

    private void dispatchOnPlayerInfoChanged(androidx.media3.session.PlayerInfo, boolean, boolean)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerInfo r1;
        boolean z0, z1, $z2;
        com.google.common.collect.ImmutableList r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        androidx.media3.session.ConnectedControllersManager r4, $r8;
        androidx.media3.session.SequencedFutureManager r5;
        androidx.media3.common.Player$Commands r6, $r11, $r13;
        androidx.media3.session.MediaSessionStub $r7, $r10;
        int $i0, $i1, i2, i3;
        java.lang.Object $r9, $r15;
        androidx.media3.session.PlayerWrapper $r12;
        androidx.media3.session.MediaSession$ControllerCb $r14, $r16;
        java.lang.Throwable $r17, $r23, r24, r25;
        java.lang.StringBuilder $r18, $r19, $r21;
        java.lang.String $r20, $r22;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.PlayerInfo;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r7 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r2 = virtualinvoke $r8.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        i2 = 0;

     label01:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i2 >= $i0 goto label11;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (androidx.media3.session.MediaSession$ControllerInfo) $r9;

     label02:
        $r10 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        r4 = virtualinvoke $r10.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r5 = virtualinvoke r4.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.SequencedFutureManager getSequencedFutureManager(androidx.media3.session.MediaSession$ControllerInfo)>(r3);

        if r5 == null goto label03;

        i3 = virtualinvoke r5.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

        goto label06;

     label03:
        $z2 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r3);

        if $z2 != 0 goto label05;

     label04:
        return;

     label05:
        i3 = 0;

     label06:
        $r11 = virtualinvoke r4.<androidx.media3.session.ConnectedControllersManager: androidx.media3.common.Player$Commands getAvailablePlayerCommands(androidx.media3.session.MediaSession$ControllerInfo)>(r3);

        $r12 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r13 = virtualinvoke $r12.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$Commands getAvailableCommands()>();

        r6 = staticinvoke <androidx.media3.session.MediaUtils: androidx.media3.common.Player$Commands intersect(androidx.media3.common.Player$Commands,androidx.media3.common.Player$Commands)>($r11, $r13);

        $r14 = virtualinvoke r3.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r14);

        $r16 = (androidx.media3.session.MediaSession$ControllerCb) $r15;

        $i1 = virtualinvoke r3.<androidx.media3.session.MediaSession$ControllerInfo: int getInterfaceVersion()>();

        interfaceinvoke $r16.<androidx.media3.session.MediaSession$ControllerCb: void onPlayerInfoChanged(int,androidx.media3.session.PlayerInfo,androidx.media3.common.Player$Commands,boolean,boolean,int)>(i3, r1, r6, z0, z1, $i1);

     label07:
        goto label10;

     label08:
        $r23 := @caughtexception;

        r24 = $r23;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void onDeadObjectException(androidx.media3.session.MediaSession$ControllerInfo)>(r3);

        goto label10;

     label09:
        $r17 := @caughtexception;

        r25 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r20 = virtualinvoke r3.<androidx.media3.session.MediaSession$ControllerInfo: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", $r22, r25);

     label10:
        i2 = i2 + 1;

        goto label01;

     label11:
        return;

        catch android.os.DeadObjectException from label02 to label04 with label08;
        catch android.os.DeadObjectException from label05 to label07 with label08;
        catch android.os.RemoteException from label02 to label04 with label09;
        catch android.os.RemoteException from label05 to label07 with label09;
    }

    public com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommand r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        $r4 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.SessionCommand,android.os.Bundle)>(r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$sendCustomCommand$9(androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        $r5 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture dispatchRemoteControllerTask(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r4);

        return $r5;
    }

    public androidx.media3.session.MediaSession$ConnectionResult onConnectOnHandler(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSession $r2;
        androidx.media3.session.MediaSession$Callback $r3;
        androidx.media3.session.MediaSession$ConnectionResult $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r4 = interfaceinvoke $r3.<androidx.media3.session.MediaSession$Callback: androidx.media3.session.MediaSession$ConnectionResult onConnect(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo)>($r2, r1);

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r4, "onConnect must return non-null future");

        $r6 = (androidx.media3.session.MediaSession$ConnectionResult) $r5;

        return $r6;
    }

    public void onPostConnectOnHandler(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSession $r2;
        androidx.media3.session.MediaSession$Callback $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        interfaceinvoke $r3.<androidx.media3.session.MediaSession$Callback: void onPostConnect(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo)>($r2, r1);

        return;
    }

    public void onDisconnectedOnHandler(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSession $r2;
        androidx.media3.session.MediaSession$Callback $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        interfaceinvoke $r3.<androidx.media3.session.MediaSession$Callback: void onDisconnected(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo)>($r2, r1);

        return;
    }

    public int onPlayerCommandRequestOnHandler(androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        int i0, $i1;
        androidx.media3.session.MediaSession $r2;
        androidx.media3.session.MediaSession$Callback $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $i1 = interfaceinvoke $r3.<androidx.media3.session.MediaSession$Callback: int onPlayerCommandRequest(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,int)>($r2, r1, i0);

        return $i1;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetRatingOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.lang.String, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.lang.String r2;
        androidx.media3.common.Rating r3;
        androidx.media3.session.MediaSession $r4;
        androidx.media3.session.MediaSession$Callback $r5;
        com.google.common.util.concurrent.ListenableFuture $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.media3.common.Rating;

        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r6 = interfaceinvoke $r5.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onSetRating(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.common.Rating)>($r4, r1, r2, r3);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r6, "onSetRating must return non-null future");

        $r8 = (com.google.common.util.concurrent.ListenableFuture) $r7;

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetRatingOnHandler(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.common.Rating)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.common.Rating r2;
        androidx.media3.session.MediaSession $r3;
        androidx.media3.session.MediaSession$Callback $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.common.Rating;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r5 = interfaceinvoke $r4.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onSetRating(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.common.Rating)>($r3, r1, r2);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "onSetRating must return non-null future");

        $r7 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        return $r7;
    }

    public com.google.common.util.concurrent.ListenableFuture onCustomCommandOnHandler(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommand r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaSession $r4;
        androidx.media3.session.MediaSession$Callback $r5;
        com.google.common.util.concurrent.ListenableFuture $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        r3 := @parameter2: android.os.Bundle;

        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r6 = interfaceinvoke $r5.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onCustomCommand(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,android.os.Bundle)>($r4, r1, r2, r3);

        $r7 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r6, "onCustomCommandOnHandler must return non-null future");

        $r8 = (com.google.common.util.concurrent.ListenableFuture) $r7;

        return $r8;
    }

    public void connectFromService(androidx.media3.session.IMediaController, int, int, java.lang.String, int, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2, i3;
        java.lang.String r2;
        android.os.Bundle r3, $r6;
        androidx.media3.session.MediaSessionStub $r4;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>(r3);

        $r6 = (android.os.Bundle) $r5;

        virtualinvoke $r4.<androidx.media3.session.MediaSessionStub: void connect(androidx.media3.session.IMediaController,int,int,java.lang.String,int,int,android.os.Bundle)>(r1, i0, i1, r2, i2, i3, $r6);

        return;
    }

    public android.support.v4.media.session.MediaSessionCompat getSessionCompat()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionLegacyStub $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r2 = virtualinvoke $r1.<androidx.media3.session.MediaSessionLegacyStub: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        return $r2;
    }

    public void setLegacyControllerConnectionTimeoutMs(long)
    {
        androidx.media3.session.MediaSessionImpl r0;
        long l0;
        androidx.media3.session.MediaSessionLegacyStub $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        virtualinvoke $r1.<androidx.media3.session.MediaSessionLegacyStub: void setLegacyControllerDisconnectTimeoutMs(long)>(l0);

        return;
    }

    protected android.content.Context getContext()
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.content.Context $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: android.content.Context context>;

        return $r1;
    }

    protected android.os.Handler getApplicationHandler()
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.os.Handler $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        return $r1;
    }

    protected com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;
        androidx.media3.session.MediaSession $r3;
        androidx.media3.session.MediaSession$Callback $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.util.List;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r5 = interfaceinvoke $r4.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onAddMediaItems(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>($r3, r1, r2);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "onAddMediaItems must return a non-null future");

        $r7 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        return $r7;
    }

    protected com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo, java.util.List, int, long)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;
        int i0;
        long l1;
        androidx.media3.session.MediaSession $r3;
        androidx.media3.session.MediaSession$Callback $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Callback callback>;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r5 = interfaceinvoke $r4.<androidx.media3.session.MediaSession$Callback: com.google.common.util.concurrent.ListenableFuture onSetMediaItems(androidx.media3.session.MediaSession,androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>($r3, r1, r2, i0, l1);

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r5, "onSetMediaItems must return a non-null future");

        $r7 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        return $r7;
    }

    protected boolean isReleased()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        $z0 = r0.<androidx.media3.session.MediaSessionImpl: boolean closed>;

        exitmonitor r1;

        return $z0;
    }

    protected android.app.PendingIntent getSessionActivity()
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.app.PendingIntent $r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent sessionActivity>;

        return $r1;
    }

    protected android.os.IBinder getLegacyBrowserServiceBinder()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionServiceLegacyStub r1, $r4, $r10;
        java.lang.Throwable r2, $r11;
        java.lang.Object $r3, r12;
        android.content.Intent $r5, r13;
        android.os.IBinder $r6;
        androidx.media3.session.MediaSession $r7;
        android.support.v4.media.session.MediaSessionCompat $r8;
        android.support.v4.media.session.MediaSessionCompat$Token $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>;

        r12 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub browserServiceLegacyStub>;

        if $r4 != null goto label2;

        $r7 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $r8 = virtualinvoke $r7.<androidx.media3.session.MediaSession: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r9 = virtualinvoke $r8.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        $r10 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub createLegacyBrowserService(android.support.v4.media.session.MediaSessionCompat$Token)>($r9);

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub browserServiceLegacyStub> = $r10;

     label2:
        r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub browserServiceLegacyStub>;

        exitmonitor r12;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r12;

     label5:
        throw r2;

     label6:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.media.browse.MediaBrowserService");

        r13 = $r5;

        $r6 = virtualinvoke r1.<androidx.media3.session.MediaSessionServiceLegacyStub: android.os.IBinder onBind(android.content.Intent)>(r13);

        return $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected androidx.media3.session.MediaSessionServiceLegacyStub createLegacyBrowserService(android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.support.v4.media.session.MediaSessionCompat$Token r1;
        androidx.media3.session.MediaSessionServiceLegacyStub r2, $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Token;

        $r3 = new androidx.media3.session.MediaSessionServiceLegacyStub;

        specialinvoke $r3.<androidx.media3.session.MediaSessionServiceLegacyStub: void <init>(androidx.media3.session.MediaSessionImpl)>(r0);

        r2 = $r3;

        virtualinvoke r2.<androidx.media3.session.MediaSessionServiceLegacyStub: void initialize(android.support.v4.media.session.MediaSessionCompat$Token)>(r1);

        return r2;
    }

    protected void setSessionPositionUpdateDelayMsOnHandler(long)
    {
        androidx.media3.session.MediaSessionImpl r0;
        long l0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void verifyApplicationThread()>();

        r0.<androidx.media3.session.MediaSessionImpl: long sessionPositionUpdateDelayMs> = l0;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void schedulePeriodicSessionPositionInfoChanges()>();

        return;
    }

    protected androidx.media3.session.MediaSessionServiceLegacyStub getLegacyBrowserService()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.Object r1, $r2;
        androidx.media3.session.MediaSessionServiceLegacyStub $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>;

        r1 = $r2;

        entermonitor $r2;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionServiceLegacyStub browserServiceLegacyStub>;

        exitmonitor r1;

        return $r3;
    }

    void setMediaSessionListener(androidx.media3.session.MediaSession$Listener)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$Listener r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$Listener;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener> = r1;

        return;
    }

    void clearMediaSessionListener()
    {
        androidx.media3.session.MediaSessionImpl r0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener> = null;

        return;
    }

    void onNotificationRefreshRequired()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$Listener $r1, $r3;
        androidx.media3.session.MediaSession $r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        interfaceinvoke $r3.<androidx.media3.session.MediaSession$Listener: void onNotificationRefreshRequired(androidx.media3.session.MediaSession)>($r2);

     label1:
        return;
    }

    boolean onPlayRequested()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$Listener $r1, $r3;
        androidx.media3.session.MediaSession $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$Listener mediaSessionListener>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession instance>;

        $z0 = interfaceinvoke $r3.<androidx.media3.session.MediaSession$Listener: boolean onPlayRequested(androidx.media3.session.MediaSession)>($r2);

        return $z0;

     label1:
        return 1;
    }

    private void dispatchRemoteControllerTaskToLegacyStub(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r1;
        java.lang.Throwable r2, $r5;
        androidx.media3.session.MediaSessionLegacyStub $r3;
        androidx.media3.session.MediaSession$ControllerCb $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

     label1:
        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r4 = virtualinvoke $r3.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb getControllerLegacyCbForBroadcast()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception in using media1 API", r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void dispatchOnPeriodicSessionPositionInfoChanged(androidx.media3.session.SessionPositionInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.SessionPositionInfo r1;
        androidx.media3.session.ConnectedControllersManager r2, $r7;
        com.google.common.collect.ImmutableList r3;
        androidx.media3.session.MediaSession$ControllerInfo r4;
        boolean z0, z1;
        androidx.media3.session.MediaSessionStub $r5, $r6;
        int $i0, i1;
        androidx.media3.session.MediaSessionLegacyStub $r8;
        androidx.media3.session.MediaSession$ControllerCb $r9;
        java.lang.Object $r10;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r11;
        java.lang.Throwable $r12, r13;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.SessionPositionInfo;

        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        r2 = virtualinvoke $r5.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        $r6 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r3 = virtualinvoke $r7.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.media3.session.MediaSession$ControllerInfo) $r10;

        z0 = virtualinvoke r2.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r4, 16);

        z1 = virtualinvoke r2.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r4, 17);

        $r11 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.SessionPositionInfo,boolean,boolean)>(r1, z0, z1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl: void lambda$dispatchOnPeriodicSessionPositionInfoChanged$10(androidx.media3.session.SessionPositionInfo,boolean,boolean,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r4, $r11);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r9 = virtualinvoke $r8.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb getControllerLegacyCbForBroadcast()>();

        interfaceinvoke $r9.<androidx.media3.session.MediaSession$ControllerCb: void onPeriodicSessionPositionInfoChanged(int,androidx.media3.session.SessionPositionInfo,boolean,boolean)>(0, r1, 1, 1);

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r13 = $r12;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception in using media1 API", r13);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r1;
        com.google.common.collect.ImmutableList r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        androidx.media3.session.MediaSessionStub $r4;
        androidx.media3.session.ConnectedControllersManager $r5;
        int $i0, i1;
        androidx.media3.session.MediaSessionLegacyStub $r6;
        androidx.media3.session.MediaSession$ControllerCb $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9, r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r5 = virtualinvoke $r4.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r2 = virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (androidx.media3.session.MediaSession$ControllerInfo) $r8;

        virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r3, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionLegacyStub sessionLegacyStub>;

        $r7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionLegacyStub: androidx.media3.session.MediaSession$ControllerCb getControllerLegacyCbForBroadcast()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>($r7, 0);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", "Exception in using media1 API", r10);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r2;
        androidx.media3.session.SequencedFutureManager r3;
        androidx.media3.session.MediaSession$ControllerCb r4;
        androidx.media3.session.MediaSessionStub $r5;
        androidx.media3.session.ConnectedControllersManager $r6;
        boolean $z0;
        java.lang.Throwable $r7, $r13, r14, r15;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        int i0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

     label1:
        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r3 = virtualinvoke $r6.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.SequencedFutureManager getSequencedFutureManager(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if r3 == null goto label2;

        i0 = virtualinvoke r3.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 != 0 goto label4;

     label3:
        return;

     label4:
        i0 = 0;

     label5:
        r4 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        if r4 == null goto label6;

        interfaceinvoke r2.<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>(r4, i0);

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r14 = $r13;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void onDeadObjectException(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        goto label9;

     label8:
        $r7 := @caughtexception;

        r15 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r10 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", $r12, r15);

     label9:
        return;

        catch android.os.DeadObjectException from label1 to label3 with label7;
        catch android.os.DeadObjectException from label4 to label6 with label7;
        catch android.os.RemoteException from label1 to label3 with label8;
        catch android.os.RemoteException from label4 to label6 with label8;
    }

    private com.google.common.util.concurrent.ListenableFuture dispatchRemoteControllerTask(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r2;
        androidx.media3.session.SequencedFutureManager r3;
        androidx.media3.session.MediaSession$ControllerCb r4;
        androidx.media3.session.MediaSessionStub $r5;
        androidx.media3.session.ConnectedControllersManager $r6;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r10, $r20, $r23, r32;
        androidx.media3.session.SessionResult $r11, r27, r28, r29, r31;
        androidx.media3.session.SequencedFutureManager$SequencedFuture $r12;
        java.lang.Throwable $r13, $r21, r25, r26;
        java.lang.StringBuilder $r15, $r17, r30;
        java.lang.String $r16, $r18;
        java.lang.Object r24;
        int i0;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

     label1:
        $r5 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r6 = virtualinvoke $r5.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        r3 = virtualinvoke $r6.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.SequencedFutureManager getSequencedFutureManager(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if r3 == null goto label2;

        $r11 = <androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionResult RESULT_WHEN_CLOSED>;

        r24 = virtualinvoke r3.<androidx.media3.session.SequencedFutureManager: androidx.media3.session.SequencedFutureManager$SequencedFuture createSequencedFuture(java.lang.Object)>($r11);

        $r12 = (androidx.media3.session.SequencedFutureManager$SequencedFuture) r24;

        i0 = virtualinvoke $r12.<androidx.media3.session.SequencedFutureManager$SequencedFuture: int getSequenceNumber()>();

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 != 0 goto label4;

        r27 = new androidx.media3.session.SessionResult;

        specialinvoke r27.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        $r10 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r27);

     label3:
        return $r10;

     label4:
        i0 = 0;

        r28 = new androidx.media3.session.SessionResult;

        specialinvoke r28.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        r24 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r28);

     label5:
        r4 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        if r4 == null goto label6;

        interfaceinvoke r2.<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>(r4, i0);

     label6:
        r32 = (com.google.common.util.concurrent.ListenableFuture) r24;

        return r32;

     label7:
        $r21 := @caughtexception;

        r25 = $r21;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void onDeadObjectException(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        r29 = new androidx.media3.session.SessionResult;

        specialinvoke r29.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        $r23 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r29);

        return $r23;

     label8:
        $r13 := @caughtexception;

        r26 = $r13;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in ");

        $r16 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MSImplBase", $r18, r26);

        r31 = new androidx.media3.session.SessionResult;

        specialinvoke r31.<androidx.media3.session.SessionResult: void <init>(int)>(-1);

        $r20 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r31);

        return $r20;

        catch android.os.DeadObjectException from label1 to label3 with label7;
        catch android.os.DeadObjectException from label4 to label6 with label7;
        catch android.os.RemoteException from label1 to label3 with label8;
        catch android.os.RemoteException from label4 to label6 with label8;
    }

    private void onDeadObjectException(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionStub $r2;
        androidx.media3.session.ConnectedControllersManager $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionStub sessionStub>;

        $r3 = virtualinvoke $r2.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()>();

        virtualinvoke $r3.<androidx.media3.session.ConnectedControllersManager: void removeController(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        return;
    }

    private static android.content.ComponentName getServiceComponentByAction(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r7, $r13, $r14;
        android.content.pm.PackageManager r2;
        android.content.Intent r3, $r6;
        java.util.List r4;
        android.content.pm.ResolveInfo r5;
        boolean $z0;
        java.lang.Object $r9;
        android.content.ComponentName $r10;
        android.content.pm.ServiceInfo $r11, $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>(r1);

        r3 = $r6;

        $r7 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r7);

        r4 = virtualinvoke r2.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>(r3, 0);

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (android.content.pm.ResolveInfo) $r9;

        $r10 = new android.content.ComponentName;

        $r11 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = $r11.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r12 = r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r13 = $r12.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r10.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r14, $r13);

        return $r10;
    }

    private void verifyApplicationThread()
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.os.Looper $r1, $r3;
        android.os.Handler $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        if $r1 == $r3 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Player callback method is called from a wrong thread. See javadoc of MediaSession for details.");

        throw $r4;

     label1:
        return;
    }

    private void notifyPeriodicSessionPositionInfoChangesOnHandler()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.Object $r1, r3;
        boolean $z0;
        androidx.media3.session.PlayerWrapper $r2;
        androidx.media3.session.SessionPositionInfo r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Object lock>;

        r3 = $r1;

        entermonitor $r1;

        $z0 = r0.<androidx.media3.session.MediaSessionImpl: boolean closed>;

        if $z0 == 0 goto label1;

        exitmonitor r3;

        return;

     label1:
        exitmonitor r3;

        goto label2;

     label2:
        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        r4 = virtualinvoke $r2.<androidx.media3.session.PlayerWrapper: androidx.media3.session.SessionPositionInfo createSessionPositionInfoForBundling()>();

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchOnPeriodicSessionPositionInfoChanged(androidx.media3.session.SessionPositionInfo)>(r4);

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void schedulePeriodicSessionPositionInfoChanges()>();

        return;
    }

    private void schedulePeriodicSessionPositionInfoChanges()
    {
        androidx.media3.session.MediaSessionImpl r0;
        java.lang.Runnable $r1, $r4;
        android.os.Handler $r2, $r5;
        long $l0, $l2;
        byte $b1;
        androidx.media3.session.PlayerWrapper $r3, $r6;
        boolean $z0, $z2;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Runnable periodicSessionPositionInfoUpdateRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $l0 = r0.<androidx.media3.session.MediaSessionImpl: long sessionPositionUpdateDelayMs>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $z0 = virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: boolean isPlaying()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $z2 = virtualinvoke $r6.<androidx.media3.session.PlayerWrapper: boolean isLoading()>();

        if $z2 == 0 goto label2;

     label1:
        $r5 = r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler applicationHandler>;

        $r4 = r0.<androidx.media3.session.MediaSessionImpl: java.lang.Runnable periodicSessionPositionInfoUpdateRunnable>;

        $l2 = r0.<androidx.media3.session.MediaSessionImpl: long sessionPositionUpdateDelayMs>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, $l2);

     label2:
        return;
    }

    private static void lambda$dispatchOnPeriodicSessionPositionInfoChanged$10(androidx.media3.session.SessionPositionInfo, boolean, boolean, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.SessionPositionInfo r0;
        boolean z0, z1;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.session.SessionPositionInfo;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter4: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onPeriodicSessionPositionInfoChanged(int,androidx.media3.session.SessionPositionInfo,boolean,boolean)>(i0, r0, z0, z1);

        return;
    }

    private static void lambda$sendCustomCommand$9(androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.SessionCommand r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSession$ControllerCb r2;
        int i0;

        r0 := @parameter0: androidx.media3.session.SessionCommand;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter3: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void sendCustomCommand(int,androidx.media3.session.SessionCommand,android.os.Bundle)>(i0, r0, r1);

        return;
    }

    private static void lambda$broadcastCustomCommand$8(androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.SessionCommand r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSession$ControllerCb r2;
        int i0;

        r0 := @parameter0: androidx.media3.session.SessionCommand;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter3: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void sendCustomCommand(int,androidx.media3.session.SessionCommand,android.os.Bundle)>(i0, r0, r1);

        return;
    }

    private static void lambda$setAvailableCommands$7(androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.SessionCommands r0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.MediaSession$ControllerCb r2;
        int i0;

        r0 := @parameter0: androidx.media3.session.SessionCommands;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter3: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void onAvailableCommandsChangedFromSession(int,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(i0, r0, r1);

        return;
    }

    private static void lambda$setSessionExtras$6(android.os.Bundle, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        android.os.Bundle r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onSessionExtrasChanged(int,android.os.Bundle)>(i0, r0);

        return;
    }

    private static void lambda$setSessionExtras$5(android.os.Bundle, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        android.os.Bundle r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onSessionExtrasChanged(int,android.os.Bundle)>(i0, r0);

        return;
    }

    private static void lambda$setCustomLayout$4(java.util.List, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        java.util.List r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void setCustomLayout(int,java.util.List)>(i0, r0);

        return;
    }

    private static void lambda$setCustomLayout$3(java.util.List, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        java.util.List r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void setCustomLayout(int,java.util.List)>(i0, r0);

        return;
    }

    private void lambda$release$2()
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionImpl$PlayerListener $r1, $r2;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerListener playerListener>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper playerWrapper>;

        $r2 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerListener playerListener>;

        virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: void removeListener(androidx.media3.common.Player$Listener)>($r2);

     label1:
        return;
    }

    private static void lambda$setPlayerInternal$1(androidx.media3.session.PlayerWrapper, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.PlayerWrapper r0, r1;
        androidx.media3.session.MediaSession$ControllerCb r2;
        int i0;

        r0 := @parameter0: androidx.media3.session.PlayerWrapper;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter3: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void onPlayerChanged(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.PlayerWrapper)>(i0, r0, r1);

        return;
    }

    private static void lambda$new$0(androidx.media3.session.MediaSessionImpl, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void setPlayerInternal(androidx.media3.session.PlayerWrapper,androidx.media3.session.PlayerWrapper)>(null, r1);

        return;
    }

    static void access$100(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl r0;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void verifyApplicationThread()>();

        return;
    }

    static androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl, androidx.media3.session.PlayerInfo)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerInfo r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.PlayerInfo;

        r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo playerInfo> = r1;

        return r1;
    }

    static androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerInfo $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo playerInfo>;

        return $r1;
    }

    static androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler onPlayerInfoChangedHandler>;

        return $r1;
    }

    static void access$400(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionImpl$RemoteControllerTask)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl$RemoteControllerTask;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskToLegacyStub(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1);

        return;
    }

    static void access$500(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl r0;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void schedulePeriodicSessionPositionInfoChanges()>();

        return;
    }

    static android.net.Uri access$600(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl r0;
        android.net.Uri $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl: android.net.Uri sessionUri>;

        return $r1;
    }

    static void access$700(androidx.media3.session.MediaSessionImpl, androidx.media3.session.PlayerInfo, boolean, boolean)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.PlayerInfo r1;
        boolean z0, z1;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.PlayerInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl: void dispatchOnPlayerInfoChanged(androidx.media3.session.PlayerInfo,boolean,boolean)>(r1, z0, z1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        androidx.media3.session.SessionResult $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <androidx.media3.session.MediaSessionImpl: java.lang.Object STATIC_LOCK> = $r0;

        <androidx.media3.session.MediaSessionImpl: boolean componentNamesInitialized> = 0;

        $r1 = new androidx.media3.session.SessionResult;

        specialinvoke $r1.<androidx.media3.session.SessionResult: void <init>(int)>(1);

        <androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionResult RESULT_WHEN_CLOSED> = $r1;

        return;
    }

androidx.media3.session.MediaSessionImpl$1
androidx.media3.session.MediaSessionImpl$MediaButtonReceiver
<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: androidx.media3.session.MediaSessionImpl this$0>
    private void <init>(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionImpl$MediaButtonReceiver r0;
        androidx.media3.session.MediaSessionImpl r1;

        r0 := @this: androidx.media3.session.MediaSessionImpl$MediaButtonReceiver;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r0.<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: androidx.media3.session.MediaSessionImpl this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.media3.session.MediaSessionImpl$MediaButtonReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.net.Uri r3, $r8;
        android.view.KeyEvent r4;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;
        androidx.media3.session.MediaSessionImpl $r7, $r10;
        android.os.Parcelable $r9;
        android.support.v4.media.session.MediaSessionCompat $r11;
        android.support.v4.media.session.MediaControllerCompat $r12;

        r0 := @this: androidx.media3.session.MediaSessionImpl$MediaButtonReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r5 = "android.intent.action.MEDIA_BUTTON";

        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        $r7 = r0.<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: androidx.media3.session.MediaSessionImpl this$0>;

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: android.net.Uri access$600(androidx.media3.session.MediaSessionImpl)>($r7);

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r8);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r9 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.KEY_EVENT");

        r4 = (android.view.KeyEvent) $r9;

        if r4 != null goto label3;

        return;

     label3:
        $r10 = r0.<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: androidx.media3.session.MediaSessionImpl this$0>;

        $r11 = virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r12 = virtualinvoke $r11.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat getController()>();

        virtualinvoke $r12.<android.support.v4.media.session.MediaControllerCompat: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>(r4);

        return;
    }

    void <init>(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionImpl$1)
    {
        androidx.media3.session.MediaSessionImpl$MediaButtonReceiver r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSessionImpl$1 r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl$MediaButtonReceiver;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter1: androidx.media3.session.MediaSessionImpl$1;

        specialinvoke r0.<androidx.media3.session.MediaSessionImpl$MediaButtonReceiver: void <init>(androidx.media3.session.MediaSessionImpl)>(r1);

        return;
    }

androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler
<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: int MSG_PLAYER_INFO_CHANGED>
<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline>
<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks>
<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>
    public void <init>(androidx.media3.session.MediaSessionImpl, android.os.Looper)
    {
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler r0;
        androidx.media3.session.MediaSessionImpl r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline> = 1;

        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks> = 1;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler r0;
        android.os.Message r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        androidx.media3.session.MediaSessionImpl $r7, $r8, $r10, $r13, $r18, $r19;
        androidx.media3.session.PlayerInfo $r9, $r16, $r20;
        androidx.media3.session.PlayerWrapper $r11, $r14;
        androidx.media3.common.Timeline $r12;
        androidx.media3.session.SessionPositionInfo $r15;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != 1 goto label1;

        $r8 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r7 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>($r7);

        $r10 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r11 = virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r12 = virtualinvoke $r11.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Timeline getCurrentTimelineWithCommandCheck()>();

        $r13 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r14 = virtualinvoke $r13.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $r15 = virtualinvoke $r14.<androidx.media3.session.PlayerWrapper: androidx.media3.session.SessionPositionInfo createSessionPositionInfoForBundling()>();

        $r16 = virtualinvoke $r9.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndSessionPositionInfo(androidx.media3.common.Timeline,androidx.media3.session.SessionPositionInfo)>($r12, $r15);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>($r8, $r16);

        $r19 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r18 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r20 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>($r18);

        $z1 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline>;

        $z0 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks>;

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$700(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo,boolean,boolean)>($r19, $r20, $z1, $z0);

        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline> = 1;

        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks> = 1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid message what=");

        $i1 = r1.<android.os.Message: int what>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    public void sendPlayerInfoChangedMessage(boolean, boolean)
    {
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler r0, $r2, $r6;
        boolean z0, z1, $z2, $z4, $z5, $z6, $z7;
        androidx.media3.session.MediaSessionImpl $r1, $r5;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline>;

        if $z2 == 0 goto label1;

        if z0 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTimeline> = $z4;

        $z5 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks>;

        if $z5 == 0 goto label3;

        if z1 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean excludeTracks> = $z6;

        $r5 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>($r5);

        $z7 = virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean hasMessages(int)>(1);

        if $z7 != 0 goto label5;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: androidx.media3.session.MediaSessionImpl this$0>;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>($r1);

        virtualinvoke $r2.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: boolean sendEmptyMessage(int)>(1);

     label5:
        return;
    }

androidx.media3.session.MediaSessionImpl$PlayerListener
<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference session>
<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>
    public void <init>(androidx.media3.session.MediaSessionImpl, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3, $r4;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter1: androidx.media3.session.PlayerWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference session> = $r3;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player> = $r4;

        return;
    }

    public void onPlayerError(androidx.media3.common.PlaybackException)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.PlaybackException r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.PlaybackException;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayerError(androidx.media3.common.PlaybackException)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.PlaybackException)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlayerError$0(androidx.media3.common.PlaybackException,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onMediaItemTransition(androidx.media3.common.MediaItem, int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.MediaItem r1;
        int i0;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.MediaItem;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithMediaItemTransitionReason(int)>(i0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.MediaItem,int)>(r1, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onMediaItemTransition$1(androidx.media3.common.MediaItem,int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onPlayWhenReadyChanged(boolean, int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        boolean z0;
        int i0, $i1;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $i1 = $r6.<androidx.media3.session.PlayerInfo: int playbackSuppressionReason>;

        $r7 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayWhenReady(boolean,int,int)>(z0, i0, $i1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (boolean,int)>(z0, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlayWhenReadyChanged$2(boolean,int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r10);

        return;
    }

    public void onPlaybackSuppressionReasonChanged(int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        int i0, $i1;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6, $r7, $r8;
        boolean $z0;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r10;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $z0 = $r6.<androidx.media3.session.PlayerInfo: boolean playWhenReady>;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $i1 = $r7.<androidx.media3.session.PlayerInfo: int playWhenReadyChangedReason>;

        $r8 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlayWhenReady(boolean,int,int)>($z0, $i1, i0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r11 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlaybackSuppressionReasonChanged$3(int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r11);

        return;
    }

    public void onPlaybackStateChanged(int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        int i0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r7;
        androidx.media3.common.PlaybackException $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackException getPlayerError()>();

        $r7 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackState(int,androidx.media3.common.PlaybackException)>(i0, $r6);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (int,androidx.media3.session.PlayerWrapper)>(i0, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlaybackStateChanged$4(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r10);

        return;
    }

    public void onIsPlayingChanged(boolean)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithIsPlaying(boolean)>(z0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onIsPlayingChanged$5(boolean,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$500(androidx.media3.session.MediaSessionImpl)>(r1);

        return;
    }

    public void onIsLoadingChanged(boolean)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithIsLoading(boolean)>(z0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onIsLoadingChanged$6(boolean,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$500(androidx.media3.session.MediaSessionImpl)>(r1);

        return;
    }

    public void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.Player$PositionInfo r1, r2;
        int i0;
        androidx.media3.session.MediaSessionImpl r3;
        androidx.media3.session.PlayerWrapper r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        androidx.media3.session.PlayerInfo $r7, $r8;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r10;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Player$PositionInfo;

        r2 := @parameter1: androidx.media3.common.Player$PositionInfo;

        i0 := @parameter2: int;

        r3 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r3 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r3);

        $r5 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (androidx.media3.session.PlayerWrapper) $r6;

        if r4 != null goto label2;

        return;

     label2:
        $r7 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r3);

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPositionInfos(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>(r1, r2, i0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r3, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r3);

        virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r11 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>(r1, r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPositionDiscontinuity$7(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r3, $r11);

        return;
    }

    public void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.PlaybackParameters r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.PlaybackParameters;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.PlaybackParameters)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlaybackParametersChanged$8(androidx.media3.common.PlaybackParameters,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onSeekBackIncrementChanged(long)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        long l0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        l0 := @parameter0: long;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSeekBackIncrement(long)>(l0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (long)>(l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onSeekBackIncrementChanged$9(long,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        return;
    }

    public void onSeekForwardIncrementChanged(long)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        long l0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        l0 := @parameter0: long;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithSeekForwardIncrement(long)>(l0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (long)>(l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onSeekForwardIncrementChanged$10(long,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        return;
    }

    public void onTimelineChanged(androidx.media3.common.Timeline, int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.Timeline r1;
        int i0;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r8;
        androidx.media3.session.SessionPositionInfo $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r10;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke r3.<androidx.media3.session.PlayerWrapper: androidx.media3.session.SessionPositionInfo createSessionPositionInfoForBundling()>();

        $r8 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTimelineAndSessionPositionInfo(androidx.media3.common.Timeline,androidx.media3.session.SessionPositionInfo)>(r1, $r7);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r10.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(0, 1);

        $r11 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.Timeline,int)>(r1, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onTimelineChanged$11(androidx.media3.common.Timeline,int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r11);

        return;
    }

    public void onPlaylistMetadataChanged(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.MediaMetadata r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerInfo $r3, $r4;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r6;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r7;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r3 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithPlaylistMetadata(androidx.media3.common.MediaMetadata)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r4);

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.MediaMetadata)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onPlaylistMetadataChanged$12(androidx.media3.common.MediaMetadata,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r7);

        return;
    }

    public void onRepeatModeChanged(int)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        int i0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithRepeatMode(int)>(i0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (int)>(i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onRepeatModeChanged$13(int,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        return;
    }

    public void onShuffleModeEnabledChanged(boolean)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithShuffleModeEnabled(boolean)>(z0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onShuffleModeEnabledChanged$14(boolean,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        return;
    }

    public void onAudioAttributesChanged(androidx.media3.common.AudioAttributes)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.AudioAttributes r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.AudioAttributes;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithAudioAttributes(androidx.media3.common.AudioAttributes)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.AudioAttributes)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onAudioAttributesChanged$15(androidx.media3.common.AudioAttributes,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onVideoSizeChanged(androidx.media3.common.VideoSize)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.VideoSize r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerInfo $r3, $r4;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r6;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r7;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.VideoSize;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r3 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = virtualinvoke $r3.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithVideoSize(androidx.media3.common.VideoSize)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r4);

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.VideoSize)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onVideoSizeChanged$16(androidx.media3.common.VideoSize,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r7);

        return;
    }

    public void onVolumeChanged(float)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        float f0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerInfo $r2, $r3;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r5;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r6;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        f0 := @parameter0: float;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r2 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = virtualinvoke $r2.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithVolume(float)>(f0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r3);

        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r5.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (float)>(f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onVolumeChanged$17(float,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r6);

        return;
    }

    public void onCues(androidx.media3.common.text.CueGroup)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.text.CueGroup r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo$Builder $r6, $r8;
        androidx.media3.session.PlayerInfo $r7, $r9;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r11;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.text.CueGroup;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = new androidx.media3.session.PlayerInfo$Builder;

        $r7 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        specialinvoke $r6.<androidx.media3.session.PlayerInfo$Builder: void <init>(androidx.media3.session.PlayerInfo)>($r7);

        $r8 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo$Builder setCues(androidx.media3.common.text.CueGroup)>(r1);

        $r9 = virtualinvoke $r8.<androidx.media3.session.PlayerInfo$Builder: androidx.media3.session.PlayerInfo build()>();

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r9);

        $r11 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r11.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        return;
    }

    public void onDeviceInfoChanged(androidx.media3.common.DeviceInfo)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.DeviceInfo r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.DeviceInfo;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceInfo(androidx.media3.common.DeviceInfo)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.DeviceInfo)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onDeviceInfoChanged$18(androidx.media3.common.DeviceInfo,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onDeviceVolumeChanged(int, boolean)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        int i0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r9;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithDeviceVolume(int,boolean)>(i0, z0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r9 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (int,boolean)>(i0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onDeviceVolumeChanged$19(int,boolean,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r1, $r9);

        return;
    }

    public void onAvailableCommandsChanged(androidx.media3.common.Player$Commands)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        boolean z0, $z1, $z2;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r6;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Player$Commands;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $z1 = virtualinvoke r1.<androidx.media3.common.Player$Commands: boolean contains(int)>(30);

        if $z1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r6.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(0, z0);

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.Player$Commands)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onAvailableCommandsChanged$20(androidx.media3.common.Player$Commands,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r7);

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.session.MediaSessionImpl)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onAvailableCommandsChanged$21(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r8);

        return;
    }

    public void onTracksChanged(androidx.media3.common.Tracks)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.Tracks r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.Tracks;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithCurrentTracks(androidx.media3.common.Tracks)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 0);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.Tracks)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onTracksChanged$22(androidx.media3.common.Tracks,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r10);

        return;
    }

    public void onTrackSelectionParametersChanged(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.TrackSelectionParameters r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.TrackSelectionParameters)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onTrackSelectionParametersChanged$23(androidx.media3.common.TrackSelectionParameters,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r10);

        return;
    }

    public void onMediaMetadataChanged(androidx.media3.common.MediaMetadata)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.common.MediaMetadata r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.PlayerWrapper r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        androidx.media3.session.PlayerInfo $r6, $r7;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r9;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r10;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 := @parameter0: androidx.media3.common.MediaMetadata;

        r2 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r2 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r2);

        $r4 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.PlayerWrapper) $r5;

        if r3 != null goto label2;

        return;

     label2:
        $r6 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r2);

        $r7 = virtualinvoke $r6.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithMediaMetadata(androidx.media3.common.MediaMetadata)>(r1);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r2, $r7);

        $r9 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r2);

        virtualinvoke $r9.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        $r10 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask (androidx.media3.common.MediaMetadata)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionImpl$PlayerListener: void lambda$onMediaMetadataChanged$24(androidx.media3.common.MediaMetadata,androidx.media3.session.MediaSession$ControllerCb,int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$400(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>(r2, $r10);

        return;
    }

    public void onRenderedFirstFrame()
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSessionImpl$RemoteControllerTask $r2;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionImpl$RemoteControllerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.session.MediaSession$ControllerCb: void onRenderedFirstFrame(int)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaSession$ControllerCb,int));

        virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: void dispatchRemoteControllerTaskWithoutReturn(androidx.media3.session.MediaSessionImpl$RemoteControllerTask)>($r2);

        return;
    }

    public void onMaxSeekToPreviousPositionChanged(long)
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        long l0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.PlayerWrapper r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        androidx.media3.session.PlayerInfo $r5, $r6;
        androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler $r8;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        l0 := @parameter0: long;

        r1 = specialinvoke r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: androidx.media3.session.MediaSessionImpl getSession()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <androidx.media3.session.MediaSessionImpl: void access$100(androidx.media3.session.MediaSessionImpl)>(r1);

        $r3 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference player>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.PlayerWrapper) $r4;

        if r2 != null goto label2;

        return;

     label2:
        $r5 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r1);

        $r6 = virtualinvoke $r5.<androidx.media3.session.PlayerInfo: androidx.media3.session.PlayerInfo copyWithMaxSeekToPreviousPositionMs(long)>(l0);

        staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$202(androidx.media3.session.MediaSessionImpl,androidx.media3.session.PlayerInfo)>(r1, $r6);

        $r8 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler access$300(androidx.media3.session.MediaSessionImpl)>(r1);

        virtualinvoke $r8.<androidx.media3.session.MediaSessionImpl$PlayerInfoChangedHandler: void sendPlayerInfoChangedMessage(boolean,boolean)>(1, 1);

        return;
    }

    private androidx.media3.session.MediaSessionImpl getSession()
    {
        androidx.media3.session.MediaSessionImpl$PlayerListener r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        androidx.media3.session.MediaSessionImpl $r3;

        r0 := @this: androidx.media3.session.MediaSessionImpl$PlayerListener;

        $r1 = r0.<androidx.media3.session.MediaSessionImpl$PlayerListener: java.lang.ref.WeakReference session>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (androidx.media3.session.MediaSessionImpl) $r2;

        return $r3;
    }

    private static void lambda$onMediaMetadataChanged$24(androidx.media3.common.MediaMetadata, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.MediaMetadata r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.MediaMetadata;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onMediaMetadataChanged(int,androidx.media3.common.MediaMetadata)>(i0, r0);

        return;
    }

    private static void lambda$onTrackSelectionParametersChanged$23(androidx.media3.common.TrackSelectionParameters, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.TrackSelectionParameters r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onTrackSelectionParametersChanged(int,androidx.media3.common.TrackSelectionParameters)>(i0, r0);

        return;
    }

    private static void lambda$onTracksChanged$22(androidx.media3.common.Tracks, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.Tracks r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.Tracks;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onTracksChanged(int,androidx.media3.common.Tracks)>(i0, r0);

        return;
    }

    private static void lambda$onAvailableCommandsChanged$21(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;
        androidx.media3.session.PlayerInfo $r2;
        androidx.media3.common.DeviceInfo $r3;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        $r2 = staticinvoke <androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerInfo access$200(androidx.media3.session.MediaSessionImpl)>(r0);

        $r3 = $r2.<androidx.media3.session.PlayerInfo: androidx.media3.common.DeviceInfo deviceInfo>;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onDeviceInfoChanged(int,androidx.media3.common.DeviceInfo)>(i0, $r3);

        return;
    }

    private static void lambda$onAvailableCommandsChanged$20(androidx.media3.common.Player$Commands, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.Player$Commands r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.Player$Commands;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onAvailableCommandsChangedFromPlayer(int,androidx.media3.common.Player$Commands)>(i0, r0);

        return;
    }

    private static void lambda$onDeviceVolumeChanged$19(int, boolean, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        int i0, i1;
        boolean z0;
        androidx.media3.session.MediaSession$ControllerCb r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter3: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onDeviceVolumeChanged(int,int,boolean)>(i1, i0, z0);

        return;
    }

    private static void lambda$onDeviceInfoChanged$18(androidx.media3.common.DeviceInfo, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.DeviceInfo r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.DeviceInfo;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onDeviceInfoChanged(int,androidx.media3.common.DeviceInfo)>(i0, r0);

        return;
    }

    private static void lambda$onVolumeChanged$17(float, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        float f0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onVolumeChanged(int,float)>(i0, f0);

        return;
    }

    private static void lambda$onVideoSizeChanged$16(androidx.media3.common.VideoSize, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.VideoSize r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.VideoSize;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onVideoSizeChanged(int,androidx.media3.common.VideoSize)>(i0, r0);

        return;
    }

    private static void lambda$onAudioAttributesChanged$15(androidx.media3.common.AudioAttributes, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.AudioAttributes r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.AudioAttributes;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onAudioAttributesChanged(int,androidx.media3.common.AudioAttributes)>(i0, r0);

        return;
    }

    private static void lambda$onShuffleModeEnabledChanged$14(boolean, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        boolean z0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onShuffleModeEnabledChanged(int,boolean)>(i0, z0);

        return;
    }

    private static void lambda$onRepeatModeChanged$13(int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onRepeatModeChanged(int,int)>(i1, i0);

        return;
    }

    private static void lambda$onPlaylistMetadataChanged$12(androidx.media3.common.MediaMetadata, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.MediaMetadata r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.MediaMetadata;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onPlaylistMetadataChanged(int,androidx.media3.common.MediaMetadata)>(i0, r0);

        return;
    }

    private static void lambda$onTimelineChanged$11(androidx.media3.common.Timeline, int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.Timeline r0;
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r1;

        r0 := @parameter0: androidx.media3.common.Timeline;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter3: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onTimelineChanged(int,androidx.media3.common.Timeline,int)>(i1, r0, i0);

        return;
    }

    private static void lambda$onSeekForwardIncrementChanged$10(long, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        long l0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onSeekForwardIncrementChanged(int,long)>(i1, l0);

        return;
    }

    private static void lambda$onSeekBackIncrementChanged$9(long, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        long l0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i1;

        l0 := @parameter0: long;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onSeekBackIncrementChanged(int,long)>(i1, l0);

        return;
    }

    private static void lambda$onPlaybackParametersChanged$8(androidx.media3.common.PlaybackParameters, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.PlaybackParameters r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.PlaybackParameters;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onPlaybackParametersChanged(int,androidx.media3.common.PlaybackParameters)>(i0, r0);

        return;
    }

    private static void lambda$onPositionDiscontinuity$7(androidx.media3.common.Player$PositionInfo, androidx.media3.common.Player$PositionInfo, int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.Player$PositionInfo r0, r1;
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r2;

        r0 := @parameter0: androidx.media3.common.Player$PositionInfo;

        r1 := @parameter1: androidx.media3.common.Player$PositionInfo;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter4: int;

        interfaceinvoke r2.<androidx.media3.session.MediaSession$ControllerCb: void onPositionDiscontinuity(int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int)>(i1, r0, r1, i0);

        return;
    }

    private static void lambda$onIsLoadingChanged$6(boolean, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        boolean z0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onIsLoadingChanged(int,boolean)>(i0, z0);

        return;
    }

    private static void lambda$onIsPlayingChanged$5(boolean, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        boolean z0;
        androidx.media3.session.MediaSession$ControllerCb r0;
        int i0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onIsPlayingChanged(int,boolean)>(i0, z0);

        return;
    }

    private static void lambda$onPlaybackStateChanged$4(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        int i0, i1;
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        androidx.media3.common.PlaybackException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        r1 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter3: int;

        $r2 = virtualinvoke r0.<androidx.media3.session.PlayerWrapper: androidx.media3.common.PlaybackException getPlayerError()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onPlaybackStateChanged(int,int,androidx.media3.common.PlaybackException)>(i1, i0, $r2);

        return;
    }

    private static void lambda$onPlaybackSuppressionReasonChanged$3(int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter2: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onPlaybackSuppressionReasonChanged(int,int)>(i1, i0);

        return;
    }

    private static void lambda$onPlayWhenReadyChanged$2(boolean, int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        boolean z0;
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r0;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter3: int;

        interfaceinvoke r0.<androidx.media3.session.MediaSession$ControllerCb: void onPlayWhenReadyChanged(int,boolean,int)>(i1, z0, i0);

        return;
    }

    private static void lambda$onMediaItemTransition$1(androidx.media3.common.MediaItem, int, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.MediaItem r0;
        int i0, i1;
        androidx.media3.session.MediaSession$ControllerCb r1;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.MediaSession$ControllerCb;

        i1 := @parameter3: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onMediaItemTransition(int,androidx.media3.common.MediaItem,int)>(i1, r0, i0);

        return;
    }

    private static void lambda$onPlayerError$0(androidx.media3.common.PlaybackException, androidx.media3.session.MediaSession$ControllerCb, int) throws android.os.RemoteException
    {
        androidx.media3.common.PlaybackException r0;
        androidx.media3.session.MediaSession$ControllerCb r1;
        int i0;

        r0 := @parameter0: androidx.media3.common.PlaybackException;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerCb;

        i0 := @parameter2: int;

        interfaceinvoke r1.<androidx.media3.session.MediaSession$ControllerCb: void onPlayerError(int,androidx.media3.common.PlaybackException)>(i0, r0);

        return;
    }

androidx.media3.session.MediaSessionImpl$RemoteControllerTask
<androidx.media3.session.MediaSessionImpl$RemoteControllerTask: void run(androidx.media3.session.MediaSession$ControllerCb,int)>
