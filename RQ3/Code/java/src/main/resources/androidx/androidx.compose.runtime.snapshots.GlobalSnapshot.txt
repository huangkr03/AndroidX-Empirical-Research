androidx.compose.runtime.snapshots.GlobalSnapshot
    public void <init>(int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0, r6;
        int i0, i1;
        androidx.compose.runtime.snapshots.SnapshotIdSet r1, r7;
        java.lang.Object r2, r3, $r11;
        java.util.List r4, r5, $r9, $r13, $r16;
        kotlin.jvm.functions.Function1 r8, $r17;
        java.util.Collection $r10, $r14;
        boolean $z0, $z1;
        androidx.compose.runtime.snapshots.GlobalSnapshot$1$1$1 $r12;
        java.lang.Throwable $r15;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.snapshots.SnapshotIdSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "invalid");

        r7 = r1;

        i1 = i0;

        r6 = r0;

        r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r2;

        entermonitor r3;

     label01:
        $r9 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List access$getGlobalWriteObservers$p()>();

        $r10 = (java.util.Collection) $r9;

        $z0 = interfaceinvoke $r10.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        if $z1 == 0 goto label04;

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List access$getGlobalWriteObservers$p()>();

        $r14 = (java.util.Collection) $r13;

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r14);

        goto label05;

     label04:
        $r16 = null;

     label05:
        r4 = $r16;

        if r4 == null goto label07;

        r5 = r4;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object singleOrNull(java.util.List)>(r5);

        $r17 = (kotlin.jvm.functions.Function1) $r11;

        if $r17 != null goto label06;

        $r12 = new androidx.compose.runtime.snapshots.GlobalSnapshot$1$1$1;

        specialinvoke $r12.<androidx.compose.runtime.snapshots.GlobalSnapshot$1$1$1: void <init>(java.util.List)>(r5);

        $r17 = (kotlin.jvm.functions.Function1) $r12;

     label06:
        goto label08;

     label07:
        $r17 = null;

     label08:
        exitmonitor r3;

        goto label11;

     label09:
        $r15 := @caughtexception;

     label10:
        exitmonitor r3;

        throw $r15;

     label11:
        r8 = $r17;

        specialinvoke r6.<androidx.compose.runtime.snapshots.MutableSnapshot: void <init>(int,androidx.compose.runtime.snapshots.SnapshotIdSet,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(i1, r7, null, r8);

        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public androidx.compose.runtime.snapshots.Snapshot takeNestedSnapshot(kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        kotlin.jvm.functions.Function1 r1, $r3;
        androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedSnapshot$1 $r2;
        androidx.compose.runtime.snapshots.Snapshot $r4;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 = new androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedSnapshot$1;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedSnapshot$1: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        $r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot access$takeNewSnapshot(kotlin.jvm.functions.Function1)>($r3);

        return $r4;
    }

    public androidx.compose.runtime.snapshots.MutableSnapshot takeNestedMutableSnapshot(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        kotlin.jvm.functions.Function1 r1, r2, $r4;
        androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedMutableSnapshot$1 $r3;
        androidx.compose.runtime.snapshots.Snapshot $r5;
        androidx.compose.runtime.snapshots.MutableSnapshot $r6;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        $r3 = new androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedMutableSnapshot$1;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.GlobalSnapshot$takeNestedMutableSnapshot$1: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, r2);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot access$takeNewSnapshot(kotlin.jvm.functions.Function1)>($r4);

        $r6 = (androidx.compose.runtime.snapshots.MutableSnapshot) $r5;

        return $r6;
    }

    public void notifyObjectsInitialized$runtime_release()
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void access$advanceGlobalSnapshot()>();

        return;
    }

    public java.lang.Void nestedDeactivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        androidx.compose.runtime.snapshots.Snapshot r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "snapshot");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public java.lang.Void nestedActivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        androidx.compose.runtime.snapshots.Snapshot r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "snapshot");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public androidx.compose.runtime.snapshots.SnapshotApplyResult apply()
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        java.lang.String $r2, $r3;
        java.lang.IllegalStateException r4;
        java.lang.Throwable r5;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r4 = new java.lang.IllegalStateException;

        $r2 = "Cannot apply the global snapshot directly. Call Snapshot.advanceGlobalSnapshot";

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        r5 = (java.lang.Throwable) r4;

        throw r5;
    }

    public void dispose()
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        java.lang.Object r1, r2;
        java.lang.Throwable $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r1;

        entermonitor r2;

     label1:
        virtualinvoke r0.<androidx.compose.runtime.snapshots.GlobalSnapshot: void releasePinnedSnapshotLocked$runtime_release()>();

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile void nestedDeactivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        androidx.compose.runtime.snapshots.Snapshot r1;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        virtualinvoke r0.<androidx.compose.runtime.snapshots.GlobalSnapshot: java.lang.Void nestedDeactivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)>(r1);

        return;
    }

    public volatile void nestedActivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0;
        androidx.compose.runtime.snapshots.Snapshot r1;

        r0 := @this: androidx.compose.runtime.snapshots.GlobalSnapshot;

        r1 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        virtualinvoke r0.<androidx.compose.runtime.snapshots.GlobalSnapshot: java.lang.Void nestedActivated$runtime_release(androidx.compose.runtime.snapshots.Snapshot)>(r1);

        return;
    }

