com.google.common.flogger.backend.MessageUtils
<com.google.common.flogger.backend.MessageUtils: java.util.Locale FORMAT_LOCALE>
    static void <clinit>()
    {
        java.util.Locale $r0;

        $r0 = <java.util.Locale: java.util.Locale ROOT>;

        <com.google.common.flogger.backend.MessageUtils: java.util.Locale FORMAT_LOCALE> = $r0;

        return;
    }

    private static void appendHex(java.lang.StringBuilder, long, boolean)
    {
        java.lang.StringBuilder $r0;
        long $l0, $l3;
        boolean $z0;
        byte $b1;
        java.lang.String $r1;
        int $i2, $i4;
        char $c5;

        $r0 := @parameter0: java.lang.StringBuilder;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        return;

     label1:
        if $z0 == 0 goto label2;

        $r1 = "0123456789ABCDEF";

        goto label3;

     label2:
        $r1 = "0123456789abcdef";

     label3:
        $i2 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>($l0);

        $i2 = 63 - $i2;

        $i2 = $i2 & -4;

     label4:
        if $i2 < 0 goto label5;

        $l3 = $l0 >>> $i2;

        $l3 = $l3 & 15L;

        $i4 = (int) $l3;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i2 = $i2 + -4;

        goto label4;

     label5:
        return;
    }

    static void appendHex(java.lang.StringBuilder, java.lang.Number, com.google.common.flogger.backend.FormatOptions)
    {
        java.lang.StringBuilder $r0;
        java.lang.Number $r1;
        com.google.common.flogger.backend.FormatOptions $r2;
        boolean $z0, $z1;
        long $l0;
        java.math.BigInteger $r3;
        java.lang.String $r4, $r5;
        java.util.Locale $r6;
        java.lang.IllegalStateException $r7;
        java.lang.Class $r8;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.Number;

        $r2 := @parameter2: com.google.common.flogger.backend.FormatOptions;

        $z0 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: boolean shouldUpperCase()>();

        $l0 = virtualinvoke $r1.<java.lang.Number: long longValue()>();

        $z1 = $r1 instanceof java.lang.Long;

        if $z1 == 0 goto label1;

        staticinvoke <com.google.common.flogger.backend.MessageUtils: void appendHex(java.lang.StringBuilder,long,boolean)>($r0, $l0, $z0);

        return;

     label1:
        $z1 = $r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label2;

        $l0 = $l0 & 4294967295L;

        staticinvoke <com.google.common.flogger.backend.MessageUtils: void appendHex(java.lang.StringBuilder,long,boolean)>($r0, $l0, $z0);

        return;

     label2:
        $z1 = $r1 instanceof java.lang.Byte;

        if $z1 == 0 goto label3;

        $l0 = $l0 & 255L;

        staticinvoke <com.google.common.flogger.backend.MessageUtils: void appendHex(java.lang.StringBuilder,long,boolean)>($r0, $l0, $z0);

        return;

     label3:
        $z1 = $r1 instanceof java.lang.Short;

        if $z1 == 0 goto label4;

        $l0 = $l0 & 65535L;

        staticinvoke <com.google.common.flogger.backend.MessageUtils: void appendHex(java.lang.StringBuilder,long,boolean)>($r0, $l0, $z0);

        return;

     label4:
        $z1 = $r1 instanceof java.math.BigInteger;

        if $z1 == 0 goto label6;

        $r3 = (java.math.BigInteger) $r1;

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r5 = $r4;

        if $z0 == 0 goto label5;

        $r6 = <com.google.common.flogger.backend.MessageUtils: java.util.Locale FORMAT_LOCALE>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r6);

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        return;

     label6:
        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported number type: ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        goto label7;

     label7:
        throw $r7;
    }

    public static boolean appendLogSite(com.google.common.flogger.LogSite, java.lang.StringBuilder)
    {
        com.google.common.flogger.LogSite $r0, $r2;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        int $i0;

        $r0 := @parameter0: com.google.common.flogger.LogSite;

        $r1 := @parameter1: java.lang.StringBuilder;

        $r2 = <com.google.common.flogger.LogSite: com.google.common.flogger.LogSite INVALID>;

        if $r0 != $r2 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r0.<com.google.common.flogger.LogSite: java.lang.String getClassName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r3 = virtualinvoke $r0.<com.google.common.flogger.LogSite: java.lang.String getMethodName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0 = virtualinvoke $r0.<com.google.common.flogger.LogSite: int getLineNumber()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        return 1;
    }

    private static java.lang.String formatErrorMessageFor(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;
        int $i0;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private static java.lang.String getErrorString(java.lang.Object, java.lang.RuntimeException)
    {
        java.lang.Object $r0;
        java.lang.RuntimeException $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3;
        java.lang.Class $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.RuntimeException;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

     label4:
        $r2 = staticinvoke <com.google.common.flogger.backend.MessageUtils: java.lang.String formatErrorMessageFor(java.lang.Object,java.lang.String)>($r0, $r2);

        return $r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public static void safeFormatTo(java.util.Formattable, java.lang.StringBuilder, com.google.common.flogger.backend.FormatOptions)
    {
        java.util.Formattable $r0;
        java.lang.StringBuilder $r1;
        com.google.common.flogger.backend.FormatOptions $r2;
        int $i0, $i1, $i5, $i6;
        byte $b2, $b3, $b4;
        java.util.Formatter $r3;
        java.util.Locale $r4;
        java.lang.Throwable $r5, $r8;
        java.lang.Appendable $r6;
        java.lang.String $r7;

        $r0 := @parameter0: java.util.Formattable;

        $r1 := @parameter1: java.lang.StringBuilder;

        $r2 := @parameter2: com.google.common.flogger.backend.FormatOptions;

        $i0 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: int getFlags()>();

        $i0 = $i0 & 162;

        if $i0 == 0 goto label06;

        $i1 = $i0 & 32;

        $b2 = 0;

        if $i1 == 0 goto label01;

        $b3 = 1;

        goto label02;

     label01:
        $b3 = 0;

     label02:
        $i1 = $i0 & 128;

        if $i1 == 0 goto label03;

        $b4 = 2;

        goto label04;

     label03:
        $b4 = 0;

     label04:
        $b3 = $b3 | $b4;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label05;

        $b2 = 4;

        goto label05;

     label05:
        $i0 = $b3 | $b2;

        goto label06;

     label06:
        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $r3 = new java.util.Formatter;

        $r4 = <com.google.common.flogger.backend.MessageUtils: java.util.Locale FORMAT_LOCALE>;

        specialinvoke $r3.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r1, $r4);

     label07:
        $i5 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: int getWidth()>();

        $i6 = virtualinvoke $r2.<com.google.common.flogger.backend.FormatOptions: int getPrecision()>();

        interfaceinvoke $r0.<java.util.Formattable: void formatTo(java.util.Formatter,int,int,int)>($r3, $i0, $i5, $i6);

     label08:
        return;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>($i1);

     label10:
        $r6 = virtualinvoke $r3.<java.util.Formatter: java.lang.Appendable out()>();

     label11:
        $r7 = staticinvoke <com.google.common.flogger.backend.MessageUtils: java.lang.String getErrorString(java.lang.Object,java.lang.RuntimeException)>($r0, $r5);

     label12:
        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

     label13:
        return;

     label14:
        $r8 := @caughtexception;

        return;

        catch java.lang.RuntimeException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public static java.lang.String safeToString(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.google.common.flogger.backend.MessageUtils: java.lang.String toNonNullString(java.lang.Object)>($r0);

        return $r1;
    }

    private static java.lang.String toNonNullString(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.String $r2;
        int[] $r3;
        long[] $r4;
        byte[] $r5;
        char[] $r6;
        short[] $r7;
        float[] $r8;
        double[] $r9;
        boolean[] $r10;
        java.lang.Object[] $r11;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label01;

        return "null";

     label01:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label03;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        if $r2 == null goto label02;

        return $r2;

     label02:
        $r2 = staticinvoke <com.google.common.flogger.backend.MessageUtils: java.lang.String formatErrorMessageFor(java.lang.Object,java.lang.String)>($r0, "toString() returned null");

        return $r2;

     label03:
        $z0 = $r0 instanceof int[];

        if $z0 == 0 goto label04;

        $r3 = (int[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r3);

        return $r2;

     label04:
        $z0 = $r0 instanceof long[];

        if $z0 == 0 goto label05;

        $r4 = (long[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r4);

        return $r2;

     label05:
        $z0 = $r0 instanceof byte[];

        if $z0 == 0 goto label06;

        $r5 = (byte[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r5);

        return $r2;

     label06:
        $z0 = $r0 instanceof char[];

        if $z0 == 0 goto label07;

        $r6 = (char[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(char[])>($r6);

        return $r2;

     label07:
        $z0 = $r0 instanceof short[];

        if $z0 == 0 goto label08;

        $r7 = (short[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(short[])>($r7);

        return $r2;

     label08:
        $z0 = $r0 instanceof float[];

        if $z0 == 0 goto label09;

        $r8 = (float[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r8);

        return $r2;

     label09:
        $z0 = $r0 instanceof double[];

        if $z0 == 0 goto label10;

        $r9 = (double[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($r9);

        return $r2;

     label10:
        $z0 = $r0 instanceof boolean[];

        if $z0 == 0 goto label11;

        $r10 = (boolean[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(boolean[])>($r10);

        return $r2;

     label11:
        $r11 = (java.lang.Object[]) $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r11);

        return $r2;
    }

