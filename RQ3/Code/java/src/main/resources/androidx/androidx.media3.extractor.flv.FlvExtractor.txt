androidx.media3.extractor.flv.FlvExtractor
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY>
<androidx.media3.extractor.flv.FlvExtractor: int STATE_READING_FLV_HEADER>
<androidx.media3.extractor.flv.FlvExtractor: int STATE_SKIPPING_TO_TAG_HEADER>
<androidx.media3.extractor.flv.FlvExtractor: int STATE_READING_TAG_HEADER>
<androidx.media3.extractor.flv.FlvExtractor: int STATE_READING_TAG_DATA>
<androidx.media3.extractor.flv.FlvExtractor: int FLV_HEADER_SIZE>
<androidx.media3.extractor.flv.FlvExtractor: int FLV_TAG_HEADER_SIZE>
<androidx.media3.extractor.flv.FlvExtractor: int TAG_TYPE_AUDIO>
<androidx.media3.extractor.flv.FlvExtractor: int TAG_TYPE_VIDEO>
<androidx.media3.extractor.flv.FlvExtractor: int TAG_TYPE_SCRIPT_DATA>
<androidx.media3.extractor.flv.FlvExtractor: int FLV_TAG>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>
<androidx.media3.extractor.flv.FlvExtractor: int state>
<androidx.media3.extractor.flv.FlvExtractor: boolean outputFirstSample>
<androidx.media3.extractor.flv.FlvExtractor: long mediaTagTimestampOffsetUs>
<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader>
<androidx.media3.extractor.flv.FlvExtractor: int tagType>
<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>
<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs>
<androidx.media3.extractor.flv.FlvExtractor: boolean outputSeekMap>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.AudioTagPayloadReader audioReader>
<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.VideoTagPayloadReader videoReader>
    public void <init>()
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.common.util.ParsableByteArray $r1, $r2, $r3, $r4;
        androidx.media3.extractor.flv.ScriptTagPayloadReader $r5;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r1.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(4);

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch> = $r1;

        $r2 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r2.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(9);

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer> = $r2;

        $r3 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r3.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(11);

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer> = $r3;

        $r4 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData> = $r4;

        $r5 = new androidx.media3.extractor.flv.ScriptTagPayloadReader;

        specialinvoke $r5.<androidx.media3.extractor.flv.ScriptTagPayloadReader: void <init>()>();

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader> = $r5;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 1;

        return;
    }

    public boolean sniff(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, $i1, $i2, $i3, $i4;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17;
        byte[] $r3, $r7, $r11, $r15;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, 0, 3);

        $r4 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i1 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        if $i1 == 4607062 goto label1;

        return 0;

     label1:
        $r6 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r7 = virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r7, 0, 2);

        $r8 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r9 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i2 = virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $i3 = $i2 & 250;

        if $i3 == 0 goto label2;

        return 0;

     label2:
        $r10 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r11 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r11, 0, 4);

        $r12 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r12.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r13 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        i0 = virtualinvoke $r13.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void advancePeekPosition(int)>(i0);

        $r14 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $r15 = virtualinvoke $r14.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r15, 0, 4);

        $r16 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        virtualinvoke $r16.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r17 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray scratch>;

        $i4 = virtualinvoke $r17.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        if $i4 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void init(androidx.media3.extractor.ExtractorOutput)
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorOutput r1;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput> = r1;

        return;
    }

    public void seek(long, long)
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        long l0, l1;
        byte $b2;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 1;

        r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputFirstSample> = 0;

        goto label2;

     label1:
        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 3;

     label2:
        r0.<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader> = 0;

        return;
    }

    public void release()
    {
        androidx.media3.extractor.flv.FlvExtractor r0;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        return;
    }

    public int read(androidx.media3.extractor.ExtractorInput, androidx.media3.extractor.PositionHolder) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.extractor.PositionHolder r2;
        androidx.media3.extractor.ExtractorOutput $r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r5;
        int $i0;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        r2 := @parameter1: androidx.media3.extractor.PositionHolder;

        $r3 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

     label1:
        $i0 = r0.<androidx.media3.extractor.flv.FlvExtractor: int state>;

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        $z2 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: boolean readFlvHeader(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z2 != 0 goto label1;

        return -1;

     label3:
        specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: void skipToTagHeader(androidx.media3.extractor.ExtractorInput)>(r1);

        goto label1;

     label4:
        $z1 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: boolean readTagHeader(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z1 != 0 goto label1;

        return -1;

     label5:
        $z0 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: boolean readTagData(androidx.media3.extractor.ExtractorInput)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label6:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    private boolean readFlvHeader(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, z1, $z2, $z3, $z4;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6, $r16;
        byte[] $r3;
        androidx.media3.extractor.flv.VideoTagPayloadReader $r7, $r8;
        androidx.media3.extractor.ExtractorOutput $r9, $r13, $r15;
        androidx.media3.extractor.TrackOutput $r10, $r14;
        androidx.media3.extractor.flv.AudioTagPayloadReader $r11, $r12;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $z2 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, 0, 9, 1);

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>;

        virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(4);

        $r6 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>;

        i0 = virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        $i1 = i0 & 4;

        if $i1 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        $i2 = i0 & 1;

        if $i2 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        z1 = $z4;

        if z0 == 0 goto label6;

        $r11 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.AudioTagPayloadReader audioReader>;

        if $r11 != null goto label6;

        $r12 = new androidx.media3.extractor.flv.AudioTagPayloadReader;

        $r13 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r14 = interfaceinvoke $r13.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(8, 1);

        specialinvoke $r12.<androidx.media3.extractor.flv.AudioTagPayloadReader: void <init>(androidx.media3.extractor.TrackOutput)>($r14);

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.AudioTagPayloadReader audioReader> = $r12;

     label6:
        if z1 == 0 goto label7;

        $r7 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.VideoTagPayloadReader videoReader>;

        if $r7 != null goto label7;

        $r8 = new androidx.media3.extractor.flv.VideoTagPayloadReader;

        $r9 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r10 = interfaceinvoke $r9.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>(9, 2);

        specialinvoke $r8.<androidx.media3.extractor.flv.VideoTagPayloadReader: void <init>(androidx.media3.extractor.TrackOutput)>($r10);

        r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.VideoTagPayloadReader videoReader> = $r8;

     label7:
        $r15 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        interfaceinvoke $r15.<androidx.media3.extractor.ExtractorOutput: void endTracks()>();

        $r16 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray headerBuffer>;

        $i3 = virtualinvoke $r16.<androidx.media3.common.util.ParsableByteArray: int readInt()>();

        $i4 = $i3 - 9;

        $i5 = $i4 + 4;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader> = $i5;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 2;

        return 1;
    }

    private void skipToTagHeader(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        int $i0;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $i0 = r0.<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i0);

        r0.<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader> = 0;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 3;

        return;
    }

    private boolean readTagHeader(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.common.util.ParsableByteArray $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        byte[] $r3;
        boolean $z0;
        int $i0, $i1, $i2, $i4, $i5;
        long $l3, $l6, $l7, $l8, $l9;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        $r3 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $z0 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, 0, 11, 1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r5 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        $i0 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        r0.<androidx.media3.extractor.flv.FlvExtractor: int tagType> = $i0;

        $r6 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        $i1 = virtualinvoke $r6.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize> = $i1;

        $r7 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        $i2 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        $l3 = (long) $i2;

        r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs> = $l3;

        $r8 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        $i4 = virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        $i5 = $i4 << 24;

        $l7 = (long) $i5;

        $l6 = r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs>;

        $l8 = $l7 | $l6;

        $l9 = $l8 * 1000L;

        r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs> = $l9;

        $r9 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagHeaderBuffer>;

        virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(3);

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 4;

        return 1;
    }

    private boolean readTagData(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        long l0, l1, $l6, $l8, $l10;
        int $i2, $i3, $i4, $i5;
        androidx.media3.extractor.flv.ScriptTagPayloadReader $r2, $r4, $r6, $r8, $r11;
        byte $b7, $b9;
        boolean $z0, z1, z2, $z3;
        androidx.media3.common.util.ParsableByteArray $r5, $r15, $r18;
        androidx.media3.extractor.IndexSeekMap $r7;
        androidx.media3.extractor.ExtractorOutput $r9;
        long[] $r10, $r12;
        androidx.media3.extractor.flv.VideoTagPayloadReader $r13, $r14;
        androidx.media3.extractor.flv.AudioTagPayloadReader $r16, $r17;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        z1 = 1;

        z2 = 0;

        l0 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: long getCurrentTimestampUs()>();

        $i2 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagType>;

        if $i2 != 8 goto label1;

        $r16 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.AudioTagPayloadReader audioReader>;

        if $r16 == null goto label1;

        specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: void ensureReadyForMediaOutput()>();

        $r17 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.AudioTagPayloadReader audioReader>;

        $r18 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray prepareTagData(androidx.media3.extractor.ExtractorInput)>(r1);

        z2 = virtualinvoke $r17.<androidx.media3.extractor.flv.AudioTagPayloadReader: boolean consume(androidx.media3.common.util.ParsableByteArray,long)>($r18, l0);

        goto label5;

     label1:
        $i3 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagType>;

        if $i3 != 9 goto label2;

        $r13 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.VideoTagPayloadReader videoReader>;

        if $r13 == null goto label2;

        specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: void ensureReadyForMediaOutput()>();

        $r14 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.VideoTagPayloadReader videoReader>;

        $r15 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray prepareTagData(androidx.media3.extractor.ExtractorInput)>(r1);

        z2 = virtualinvoke $r14.<androidx.media3.extractor.flv.VideoTagPayloadReader: boolean consume(androidx.media3.common.util.ParsableByteArray,long)>($r15, l0);

        goto label5;

     label2:
        $i4 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagType>;

        if $i4 != 18 goto label4;

        $z0 = r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputSeekMap>;

        if $z0 != 0 goto label4;

        $r4 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        $r5 = specialinvoke r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray prepareTagData(androidx.media3.extractor.ExtractorInput)>(r1);

        z2 = virtualinvoke $r4.<androidx.media3.extractor.flv.ScriptTagPayloadReader: boolean consume(androidx.media3.common.util.ParsableByteArray,long)>($r5, l0);

        $r6 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        l1 = virtualinvoke $r6.<androidx.media3.extractor.flv.ScriptTagPayloadReader: long getDurationUs()>();

        $b9 = l1 cmp -9223372036854775807L;

        if $b9 == 0 goto label3;

        $r9 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r7 = new androidx.media3.extractor.IndexSeekMap;

        $r8 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        $r10 = virtualinvoke $r8.<androidx.media3.extractor.flv.ScriptTagPayloadReader: long[] getKeyFrameTagPositions()>();

        $r11 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        $r12 = virtualinvoke $r11.<androidx.media3.extractor.flv.ScriptTagPayloadReader: long[] getKeyFrameTimesUs()>();

        specialinvoke $r7.<androidx.media3.extractor.IndexSeekMap: void <init>(long[],long[],long)>($r10, $r12, l1);

        interfaceinvoke $r9.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r7);

        r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputSeekMap> = 1;

     label3:
        goto label5;

     label4:
        $i5 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i5);

        z1 = 0;

     label5:
        $z3 = r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputFirstSample>;

        if $z3 != 0 goto label8;

        if z2 == 0 goto label8;

        r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputFirstSample> = 1;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        $l6 = virtualinvoke $r2.<androidx.media3.extractor.flv.ScriptTagPayloadReader: long getDurationUs()>();

        $b7 = $l6 cmp -9223372036854775807L;

        if $b7 != 0 goto label6;

        $l8 = r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs>;

        $l10 = neg $l8;

        goto label7;

     label6:
        $l10 = 0L;

     label7:
        r0.<androidx.media3.extractor.flv.FlvExtractor: long mediaTagTimestampOffsetUs> = $l10;

     label8:
        r0.<androidx.media3.extractor.flv.FlvExtractor: int bytesToNextTagHeader> = 4;

        r0.<androidx.media3.extractor.flv.FlvExtractor: int state> = 2;

        return z1;
    }

    private androidx.media3.common.util.ParsableByteArray prepareTagData(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        androidx.media3.extractor.ExtractorInput r1;
        androidx.media3.common.util.ParsableByteArray $r2, $r3, $r4, $r5, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r6, $r10;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        $i0 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        $i1 = virtualinvoke $r2.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        if $i0 <= $i1 goto label1;

        $r9 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        $r8 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        $i4 = virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        $i6 = $i4 * 2;

        $i5 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);

        $r10 = newarray (byte)[$i7];

        virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: void reset(byte[],int)>($r10, 0);

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        virtualinvoke $r3.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

     label2:
        $r4 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        $i2 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void setLimit(int)>($i2);

        $r5 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i3 = r0.<androidx.media3.extractor.flv.FlvExtractor: int tagDataSize>;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void readFully(byte[],int,int)>($r6, 0, $i3);

        $r7 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.common.util.ParsableByteArray tagData>;

        return $r7;
    }

    private void ensureReadyForMediaOutput()
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        boolean $z0;
        androidx.media3.extractor.SeekMap$Unseekable $r1;
        androidx.media3.extractor.ExtractorOutput $r2;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        $z0 = r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputSeekMap>;

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorOutput extractorOutput>;

        $r1 = new androidx.media3.extractor.SeekMap$Unseekable;

        specialinvoke $r1.<androidx.media3.extractor.SeekMap$Unseekable: void <init>(long)>(-9223372036854775807L);

        interfaceinvoke $r2.<androidx.media3.extractor.ExtractorOutput: void seekMap(androidx.media3.extractor.SeekMap)>($r1);

        r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputSeekMap> = 1;

     label1:
        return;
    }

    private long getCurrentTimestampUs()
    {
        androidx.media3.extractor.flv.FlvExtractor r0;
        boolean $z0;
        androidx.media3.extractor.flv.ScriptTagPayloadReader $r1;
        long $l0, $l2, $l3, $l4;
        byte $b1;

        r0 := @this: androidx.media3.extractor.flv.FlvExtractor;

        $z0 = r0.<androidx.media3.extractor.flv.FlvExtractor: boolean outputFirstSample>;

        if $z0 == 0 goto label1;

        $l3 = r0.<androidx.media3.extractor.flv.FlvExtractor: long mediaTagTimestampOffsetUs>;

        $l2 = r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs>;

        $l4 = $l3 + $l2;

        goto label3;

     label1:
        $r1 = r0.<androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader>;

        $l0 = virtualinvoke $r1.<androidx.media3.extractor.flv.ScriptTagPayloadReader: long getDurationUs()>();

        $b1 = $l0 cmp -9223372036854775807L;

        if $b1 != 0 goto label2;

        $l4 = 0L;

        goto label3;

     label2:
        $l4 = r0.<androidx.media3.extractor.flv.FlvExtractor: long tagTimestampUs>;

     label3:
        return $l4;
    }

    private static androidx.media3.extractor.Extractor[] lambda$static$0()
    {
        androidx.media3.extractor.Extractor[] $r0;
        androidx.media3.extractor.flv.FlvExtractor $r1;

        $r0 = newarray (androidx.media3.extractor.Extractor)[1];

        $r1 = new androidx.media3.extractor.flv.FlvExtractor;

        specialinvoke $r1.<androidx.media3.extractor.flv.FlvExtractor: void <init>()>();

        $r0[0] = $r1;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.media3.extractor.ExtractorsFactory $r0;

        $r0 = dynamicinvoke "createExtractors" <androidx.media3.extractor.ExtractorsFactory ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.Extractor[] lambda$static$0()>, methodtype: androidx.media3.extractor.Extractor[] __METHODTYPE__());

        <androidx.media3.extractor.flv.FlvExtractor: androidx.media3.extractor.ExtractorsFactory FACTORY> = $r0;

        return;
    }

