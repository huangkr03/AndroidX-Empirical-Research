androidx.lifecycle.LiveDataScopeImpl
<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target>
<androidx.lifecycle.LiveDataScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>
    public void <init>(androidx.lifecycle.CoroutineLiveData, kotlin.coroutines.CoroutineContext)
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        androidx.lifecycle.CoroutineLiveData r1;
        kotlin.coroutines.CoroutineContext r2, $r5, $r6;
        kotlinx.coroutines.MainCoroutineDispatcher $r3, $r4;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        r1 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        r2 := @parameter1: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "target");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target> = r1;

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r4 = virtualinvoke $r3.<kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()>();

        $r5 = (kotlin.coroutines.CoroutineContext) $r4;

        $r6 = interfaceinvoke r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r5);

        r0.<androidx.lifecycle.LiveDataScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext> = $r6;

        return;
    }

    public final androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_ktx_release()
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        androidx.lifecycle.CoroutineLiveData $r1;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        $r1 = r0.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target>;

        return $r1;
    }

    public final void setTarget$lifecycle_livedata_ktx_release(androidx.lifecycle.CoroutineLiveData)
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        androidx.lifecycle.CoroutineLiveData r1;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        r1 := @parameter0: androidx.lifecycle.CoroutineLiveData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target> = r1;

        return;
    }

    public java.lang.Object getLatestValue()
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        androidx.lifecycle.CoroutineLiveData $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        $r1 = r0.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target>;

        $r2 = virtualinvoke $r1.<androidx.lifecycle.CoroutineLiveData: java.lang.Object getValue()>();

        return $r2;
    }

    public java.lang.Object emitSource(androidx.lifecycle.LiveData, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        androidx.lifecycle.LiveData r1;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.lifecycle.LiveDataScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>;

        $r3 = new androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        specialinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: void <init>(androidx.lifecycle.LiveDataScopeImpl,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        $r6 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r4, $r5, $r2);

        return $r6;
    }

    public java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl r0;
        java.lang.Object r1, $r6, $r7;
        kotlin.coroutines.Continuation $r2;
        androidx.lifecycle.LiveDataScopeImpl$emit$2 $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlin.Unit $r8;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.lifecycle.LiveDataScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext>;

        $r3 = new androidx.lifecycle.LiveDataScopeImpl$emit$2;

        specialinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl$emit$2: void <init>(androidx.lifecycle.LiveDataScopeImpl,java.lang.Object,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        $r6 = staticinvoke <kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r4, $r5, $r2);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

androidx.lifecycle.LiveDataScopeImpl$emit$2
<androidx.lifecycle.LiveDataScopeImpl$emit$2: int label>
<androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0>
<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object $value>
    void <init>(androidx.lifecycle.LiveDataScopeImpl, java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emit$2 r0;
        androidx.lifecycle.LiveDataScopeImpl $r1;
        java.lang.Object $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emit$2;

        $r1 := @parameter0: androidx.lifecycle.LiveDataScopeImpl;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0> = $r1;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object $value> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.LiveDataScopeImpl$emit$2 r0;
        java.lang.Object $r1, r2, $r5, $r10;
        int $i0;
        androidx.lifecycle.LiveDataScopeImpl $r3, $r7;
        androidx.lifecycle.CoroutineLiveData $r4, $r8;
        kotlin.Unit $r6;
        kotlin.coroutines.Continuation $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emit$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0>;

        $r8 = virtualinvoke $r7.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_ktx_release()>();

        $r9 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: int label> = 1;

        $r10 = virtualinvoke $r8.<androidx.lifecycle.CoroutineLiveData: java.lang.Object clearSource$lifecycle_livedata_ktx_release(kotlin.coroutines.Continuation)>($r9);

        if $r10 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0>;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_ktx_release()>();

        $r5 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object $value>;

        virtualinvoke $r4.<androidx.lifecycle.CoroutineLiveData: void setValue(java.lang.Object)>($r5);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r11;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emit$2 r0, $r3;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.LiveDataScopeImpl $r5;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emit$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.lifecycle.LiveDataScopeImpl$emit$2;

        $r5 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0>;

        $r4 = r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object $value>;

        specialinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl$emit$2: void <init>(androidx.lifecycle.LiveDataScopeImpl,java.lang.Object,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emit$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emit$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.LiveDataScopeImpl$emit$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.LiveDataScopeImpl$emit$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emit$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.lifecycle.LiveDataScopeImpl$emitSource$2
<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: int label>
<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveDataScopeImpl this$0>
<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveData $source>
    void <init>(androidx.lifecycle.LiveDataScopeImpl, androidx.lifecycle.LiveData, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 r0;
        androidx.lifecycle.LiveDataScopeImpl $r1;
        androidx.lifecycle.LiveData $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        $r1 := @parameter0: androidx.lifecycle.LiveDataScopeImpl;

        $r2 := @parameter1: androidx.lifecycle.LiveData;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveDataScopeImpl this$0> = $r1;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveData $source> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        androidx.lifecycle.LiveDataScopeImpl $r3;
        androidx.lifecycle.CoroutineLiveData $r4;
        androidx.lifecycle.LiveData $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveDataScopeImpl this$0>;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_ktx_release()>();

        $r5 = r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveData $source>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: int label> = 1;

        $r8 = virtualinvoke $r4.<androidx.lifecycle.CoroutineLiveData: java.lang.Object emitSource$lifecycle_livedata_ktx_release(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r8 = $r1;

     label3:
        return $r8;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r7;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.lifecycle.LiveData $r4;
        androidx.lifecycle.LiveDataScopeImpl $r5;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        $r5 = r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveDataScopeImpl this$0>;

        $r4 = r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveData $source>;

        specialinvoke $r3.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: void <init>(androidx.lifecycle.LiveDataScopeImpl,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.lifecycle.LiveDataScopeImpl$emitSource$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.lifecycle.LiveDataScopeImpl$emitSource$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.lifecycle.LiveDataScopeImpl$emitSource$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.lifecycle.LiveDataScopeImpl$emitSource$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

