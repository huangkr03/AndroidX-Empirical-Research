androidx.car.app.ISurfaceCallback
<androidx.car.app.ISurfaceCallback: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>
<androidx.car.app.ISurfaceCallback: void onVisibleAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>
<androidx.car.app.ISurfaceCallback: void onStableAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>
<androidx.car.app.ISurfaceCallback: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>
<androidx.car.app.ISurfaceCallback: void onScroll(float,float)>
<androidx.car.app.ISurfaceCallback: void onFling(float,float)>
<androidx.car.app.ISurfaceCallback: void onScale(float,float,float)>
<androidx.car.app.ISurfaceCallback: void onClick(float,float)>
androidx.car.app.ISurfaceCallback$Default
    public void <init>()
    {
        androidx.car.app.ISurfaceCallback$Default r0;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSurfaceAvailable(androidx.car.app.serialization.Bundleable, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        androidx.car.app.serialization.Bundleable r1;
        androidx.car.app.IOnDoneCallback r2;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        return;
    }

    public void onVisibleAreaChanged(android.graphics.Rect, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        android.graphics.Rect r1;
        androidx.car.app.IOnDoneCallback r2;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        return;
    }

    public void onStableAreaChanged(android.graphics.Rect, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        android.graphics.Rect r1;
        androidx.car.app.IOnDoneCallback r2;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        return;
    }

    public void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        androidx.car.app.serialization.Bundleable r1;
        androidx.car.app.IOnDoneCallback r2;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        return;
    }

    public void onScroll(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        float f0, f1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void onFling(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        float f0, f1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void onScale(float, float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        float f0, f1, f2;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        return;
    }

    public void onClick(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Default r0;
        float f0, f1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.ISurfaceCallback$Default r0;

        r0 := @this: androidx.car.app.ISurfaceCallback$Default;

        return null;
    }

androidx.car.app.ISurfaceCallback$Stub$Proxy
<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>
<androidx.car.app.ISurfaceCallback$Stub$Proxy: androidx.car.app.ISurfaceCallback sDefaultImpl>
    void <init>(android.os.IBinder)
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        $r1 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        return "androidx.car.app.ISurfaceCallback";
    }

    public void onSurfaceAvailable(androidx.car.app.serialization.Bundleable, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        androidx.car.app.serialization.Bundleable r1;
        androidx.car.app.IOnDoneCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.car.app.ISurfaceCallback $r6, $r7;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.car.app.serialization.Bundleable: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.car.app.IOnDoneCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.car.app.ISurfaceCallback: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>(r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onVisibleAreaChanged(android.graphics.Rect, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        android.graphics.Rect r1;
        androidx.car.app.IOnDoneCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.car.app.ISurfaceCallback $r6, $r7;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.car.app.IOnDoneCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.car.app.ISurfaceCallback: void onVisibleAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>(r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onStableAreaChanged(android.graphics.Rect, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        android.graphics.Rect r1;
        androidx.car.app.IOnDoneCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.car.app.ISurfaceCallback $r6, $r7;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.car.app.IOnDoneCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.car.app.ISurfaceCallback: void onStableAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>(r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable, androidx.car.app.IOnDoneCallback) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        androidx.car.app.serialization.Bundleable r1;
        androidx.car.app.IOnDoneCallback r2;
        android.os.Parcel r3;
        boolean z0;
        java.lang.Throwable r4, $r9;
        android.os.IBinder $r5, $r10;
        androidx.car.app.ISurfaceCallback $r6, $r7;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        r1 := @parameter0: androidx.car.app.serialization.Bundleable;

        r2 := @parameter1: androidx.car.app.IOnDoneCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<androidx.car.app.serialization.Bundleable: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if r2 == null goto label04;

        $r10 = interfaceinvoke r2.<androidx.car.app.IOnDoneCallback: android.os.IBinder asBinder()>();

        goto label05;

     label04:
        $r10 = null;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r10);

        $r5 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, null, 1);

        if z0 != 0 goto label07;

        $r6 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r6 == null goto label07;

        $r7 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r7.<androidx.car.app.ISurfaceCallback: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>(r1, r2);

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onScroll(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        float f0, f1;
        android.os.Parcel r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.os.IBinder $r3;
        androidx.car.app.ISurfaceCallback $r4, $r5;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f1);

        $r3 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, null, 1);

        if z0 != 0 goto label3;

        $r4 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<androidx.car.app.ISurfaceCallback: void onScroll(float,float)>(f0, f1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onFling(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        float f0, f1;
        android.os.Parcel r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.os.IBinder $r3;
        androidx.car.app.ISurfaceCallback $r4, $r5;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f1);

        $r3 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

        if z0 != 0 goto label3;

        $r4 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<androidx.car.app.ISurfaceCallback: void onFling(float,float)>(f0, f1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onScale(float, float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        float f0, f1, f2;
        android.os.Parcel r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.os.IBinder $r3;
        androidx.car.app.ISurfaceCallback $r4, $r5;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f1);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f2);

        $r3 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, null, 1);

        if z0 != 0 goto label3;

        $r4 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<androidx.car.app.ISurfaceCallback: void onScale(float,float,float)>(f0, f1, f2);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onClick(float, float) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub$Proxy r0;
        float f0, f1;
        android.os.Parcel r1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        android.os.IBinder $r3;
        androidx.car.app.ISurfaceCallback $r4, $r5;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub$Proxy;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f0);

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>(f1);

        $r3 = r0.<androidx.car.app.ISurfaceCallback$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, null, 1);

        if z0 != 0 goto label3;

        $r4 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        if $r4 == null goto label3;

        $r5 = staticinvoke <androidx.car.app.ISurfaceCallback$Stub: androidx.car.app.ISurfaceCallback getDefaultImpl()>();

        interfaceinvoke $r5.<androidx.car.app.ISurfaceCallback: void onClick(float,float)>(f0, f1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

androidx.car.app.ISurfaceCallback$Stub
<androidx.car.app.ISurfaceCallback$Stub: java.lang.String DESCRIPTOR>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onSurfaceAvailable>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onVisibleAreaChanged>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onStableAreaChanged>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onSurfaceDestroyed>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onScroll>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onFling>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onScale>
<androidx.car.app.ISurfaceCallback$Stub: int TRANSACTION_onClick>
    public void <init>()
    {
        androidx.car.app.ISurfaceCallback$Stub r0;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.car.app.ISurfaceCallback");

        return;
    }

    public static androidx.car.app.ISurfaceCallback asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.car.app.ISurfaceCallback$Stub$Proxy $r2;
        boolean $z0;
        androidx.car.app.ISurfaceCallback $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.car.app.ISurfaceCallback");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.car.app.ISurfaceCallback;

        if $z0 == 0 goto label2;

        $r3 = (androidx.car.app.ISurfaceCallback) r1;

        return $r3;

     label2:
        $r2 = new androidx.car.app.ISurfaceCallback$Stub$Proxy;

        specialinvoke $r2.<androidx.car.app.ISurfaceCallback$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.car.app.ISurfaceCallback$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.car.app.ISurfaceCallback$Stub r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8;
        android.os.IBinder $r4, $r7, $r10, $r13;
        android.os.Parcelable$Creator $r5, $r8, $r11, $r14;
        java.lang.Object $r6, $r9, $r12, $r15;
        boolean $z0;
        androidx.car.app.serialization.Bundleable r16, r22;
        androidx.car.app.IOnDoneCallback r17, r19, r21, r23;
        android.graphics.Rect r18, r20;

        r0 := @this: androidx.car.app.ISurfaceCallback$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.car.app.ISurfaceCallback";

        lookupswitch(i0)
        {
            case 2: goto label02;
            case 3: goto label05;
            case 4: goto label08;
            case 5: goto label11;
            case 6: goto label14;
            case 7: goto label15;
            case 8: goto label16;
            case 9: goto label17;
            case 1598968902: goto label01;
            default: goto label18;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i5 goto label03;

        $r14 = <androidx.car.app.serialization.Bundleable: android.os.Parcelable$Creator CREATOR>;

        $r15 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r16 = (androidx.car.app.serialization.Bundleable) $r15;

        goto label04;

     label03:
        r16 = null;

     label04:
        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r17 = staticinvoke <androidx.car.app.IOnDoneCallback$Stub: androidx.car.app.IOnDoneCallback asInterface(android.os.IBinder)>($r13);

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onSurfaceAvailable(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>(r16, r17);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label06;

        $r11 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r18 = (android.graphics.Rect) $r12;

        goto label07;

     label06:
        r18 = null;

     label07:
        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r19 = staticinvoke <androidx.car.app.IOnDoneCallback$Stub: androidx.car.app.IOnDoneCallback asInterface(android.os.IBinder)>($r10);

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onVisibleAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>(r18, r19);

        return 1;

     label08:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i3 goto label09;

        $r8 = <android.graphics.Rect: android.os.Parcelable$Creator CREATOR>;

        $r9 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r20 = (android.graphics.Rect) $r9;

        goto label10;

     label09:
        r20 = null;

     label10:
        $r7 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r21 = staticinvoke <androidx.car.app.IOnDoneCallback$Stub: androidx.car.app.IOnDoneCallback asInterface(android.os.IBinder)>($r7);

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onStableAreaChanged(android.graphics.Rect,androidx.car.app.IOnDoneCallback)>(r20, r21);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i2 goto label12;

        $r5 = <androidx.car.app.serialization.Bundleable: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r22 = (androidx.car.app.serialization.Bundleable) $r6;

        goto label13;

     label12:
        r22 = null;

     label13:
        $r4 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r23 = staticinvoke <androidx.car.app.IOnDoneCallback$Stub: androidx.car.app.IOnDoneCallback asInterface(android.os.IBinder)>($r4);

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onSurfaceDestroyed(androidx.car.app.serialization.Bundleable,androidx.car.app.IOnDoneCallback)>(r22, r23);

        return 1;

     label14:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onScroll(float,float)>(f1, f2);

        return 1;

     label15:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        f3 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        f4 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onFling(float,float)>(f3, f4);

        return 1;

     label16:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        f5 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        f6 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onScale(float,float,float)>(f5, f6, f0);

        return 1;

     label17:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

        f7 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        f8 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<androidx.car.app.ISurfaceCallback$Stub: void onClick(float,float)>(f7, f8);

        return 1;

     label18:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;
    }

    public static boolean setDefaultImpl(androidx.car.app.ISurfaceCallback)
    {
        androidx.car.app.ISurfaceCallback r0, $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: androidx.car.app.ISurfaceCallback;

        $r1 = <androidx.car.app.ISurfaceCallback$Stub$Proxy: androidx.car.app.ISurfaceCallback sDefaultImpl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setDefaultImpl() called twice");

        throw $r2;

     label1:
        if r0 == null goto label2;

        <androidx.car.app.ISurfaceCallback$Stub$Proxy: androidx.car.app.ISurfaceCallback sDefaultImpl> = r0;

        return 1;

     label2:
        return 0;
    }

    public static androidx.car.app.ISurfaceCallback getDefaultImpl()
    {
        androidx.car.app.ISurfaceCallback $r0;

        $r0 = <androidx.car.app.ISurfaceCallback$Stub$Proxy: androidx.car.app.ISurfaceCallback sDefaultImpl>;

        return $r0;
    }

