androidx.window.layout.SidecarWindowBackend
<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion>
<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension>
<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks>
<androidx.window.layout.SidecarWindowBackend: boolean DEBUG>
<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance>
<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock>
<androidx.window.layout.SidecarWindowBackend: java.lang.String TAG>
    public void <init>(androidx.window.layout.ExtensionInterfaceCompat)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        androidx.window.layout.ExtensionInterfaceCompat r1, $r3;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl $r4;
        androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface $r5;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: androidx.window.layout.ExtensionInterfaceCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension> = r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks> = $r2;

        $r3 = r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension>;

        if $r3 != null goto label1;

        goto label2;

     label1:
        $r4 = new androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl;

        specialinvoke $r4.<androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void <init>(androidx.window.layout.SidecarWindowBackend)>(r0);

        $r5 = (androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface) $r4;

        interfaceinvoke $r3.<androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)>($r5);

     label2:
        return;
    }

    public final androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
    {
        androidx.window.layout.SidecarWindowBackend r0;
        androidx.window.layout.ExtensionInterfaceCompat $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        $r1 = r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension>;

        return $r1;
    }

    public final void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        androidx.window.layout.ExtensionInterfaceCompat r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: androidx.window.layout.ExtensionInterfaceCompat;

        r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension> = r1;

        return;
    }

    public final java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
    {
        androidx.window.layout.SidecarWindowBackend r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        $r1 = r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks>;

        return $r1;
    }

    public static void getWindowLayoutChangeCallbacks$annotations()
    {
        return;
    }

    public void registerLayoutChangeCallback(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        android.app.Activity r1, $r17;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;
        java.util.concurrent.locks.Lock r4;
        androidx.window.layout.ExtensionInterfaceCompat r5;
        boolean z0, $z4, $z5;
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r6, r10, r11, $r14;
        java.lang.Iterable $r7;
        java.util.Iterator r8;
        java.lang.Object r9, $r21;
        androidx.window.layout.WindowLayoutInfo r12, $r18, $r22;
        java.util.concurrent.locks.ReentrantLock $r13;
        java.util.concurrent.CopyOnWriteArrayList $r15, $r16;
        java.util.List $r19;
        java.lang.Throwable $r20;
        kotlin.Unit $r23;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r13 = <androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        r4 = (java.util.concurrent.locks.Lock) $r13;

        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        r5 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()>();

        if r5 != null goto label03;

        $r18 = new androidx.window.layout.WindowLayoutInfo;

        $r19 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        specialinvoke $r18.<androidx.window.layout.WindowLayoutInfo: void <init>(java.util.List)>($r19);

        interfaceinvoke r3.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r18);

     label02:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label03:
        z0 = specialinvoke r0.<androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)>(r1);

        $r14 = new androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        specialinvoke $r14.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r1, r2, r3);

        r6 = $r14;

        $r15 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()>();

        virtualinvoke $r15.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r6);

        if z0 != 0 goto label04;

        interfaceinvoke r5.<androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)>(r1);

        goto label10;

     label04:
        $r16 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()>();

        $r7 = (java.lang.Iterable) $r16;

        r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) r9;

        $r17 = virtualinvoke r10.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r17);

        if $z5 == 0 goto label05;

        $r21 = r9;

        goto label07;

     label06:
        $r21 = null;

     label07:
        r11 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) $r21;

        if r11 != null goto label08;

        $r22 = null;

        goto label09;

     label08:
        $r22 = virtualinvoke r11.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()>();

     label09:
        r12 = $r22;

        if r12 == null goto label10;

        virtualinvoke r6.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)>(r12);

     label10:
        $r23 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label11:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label14;

     label12:
        $r20 := @caughtexception;

     label13:
        interfaceinvoke r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r20;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private final boolean isActivityRegistered(android.app.Activity)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        android.app.Activity r1, $r7;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r5;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        boolean $z2, $z3, $z4, $z5, $z6;
        java.util.Collection $r8;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: android.app.Activity;

        $r6 = r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks>;

        $r2 = (java.lang.Iterable) $r6;

        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r8 = (java.util.Collection) $r2;

        $z4 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z4 == 0 goto label1;

        $z5 = 0;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) r4;

        $r7 = virtualinvoke r5.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r1);

        if $z3 == 0 goto label2;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    public void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        androidx.core.util.Consumer r1, r4;
        java.util.concurrent.locks.ReentrantLock r2;
        java.util.List r3;
        androidx.window.layout.ExtensionInterfaceCompat $r5;
        java.util.ArrayList $r6;
        java.util.concurrent.CopyOnWriteArrayList $r7, $r8;
        java.util.Collection $r9;
        boolean $z1, $z4;
        java.lang.Object $r10, $r12;
        android.app.Activity $r11;
        java.lang.Throwable $r13;
        java.util.Iterator r14, r16;
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r15, r17;
        kotlin.Unit $r18;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        r2 = <androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        entermonitor r2;

     label01:
        $r5 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()>();

        if $r5 != null goto label03;

     label02:
        exitmonitor r2;

        return;

     label03:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r6;

        $r7 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()>();

        r14 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r12 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) $r12;

        r4 = virtualinvoke r15.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()>();

        if r4 != r1 goto label04;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r15, "callbackWrapper");

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r15);

        goto label04;

     label05:
        $r8 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()>();

        $r9 = (java.util.Collection) r3;

        virtualinvoke $r8.<java.util.concurrent.CopyOnWriteArrayList: boolean removeAll(java.util.Collection)>($r9);

        r16 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r10 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) $r10;

        $r11 = virtualinvoke r17.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()>();

        specialinvoke r0.<androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)>($r11);

        goto label06;

     label07:
        $r18 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label08:
        exitmonitor r2;

        goto label11;

     label09:
        $r13 := @caughtexception;

     label10:
        exitmonitor r2;

        throw $r13;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private final void callbackRemovedForActivity(android.app.Activity)
    {
        androidx.window.layout.SidecarWindowBackend r0;
        android.app.Activity r1, $r8;
        boolean z0, $z3, $z4, $z5, $z6, $z7;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r5;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        androidx.window.layout.ExtensionInterfaceCompat $r7;
        java.util.Collection $r9;

        r0 := @this: androidx.window.layout.SidecarWindowBackend;

        r1 := @parameter0: android.app.Activity;

        $r6 = r0.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks>;

        $r2 = (java.lang.Iterable) $r6;

        $z3 = $r2 instanceof java.util.Collection;

        if $z3 == 0 goto label1;

        $r9 = (java.util.Collection) $r2;

        $z5 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 0;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) r4;

        $r8 = virtualinvoke r5.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r1);

        if $z4 == 0 goto label2;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z0 = $z6;

        if z0 == 0 goto label5;

        return;

     label5:
        $r7 = r0.<androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension>;

        if $r7 != null goto label6;

        goto label7;

     label6:
        interfaceinvoke $r7.<androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)>(r1);

     label7:
        return;
    }

    public static final androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
    {
        androidx.window.layout.SidecarWindowBackend $r0;

        $r0 = <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance>;

        return $r0;
    }

    public static final java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
    {
        java.util.concurrent.locks.ReentrantLock $r0;

        $r0 = <androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock>;

        return $r0;
    }

    public static final void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
    {
        androidx.window.layout.SidecarWindowBackend r0;

        r0 := @parameter0: androidx.window.layout.SidecarWindowBackend;

        <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance> = r0;

        return;
    }

    static void <clinit>()
    {
        androidx.window.layout.SidecarWindowBackend$Companion $r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        $r0 = new androidx.window.layout.SidecarWindowBackend$Companion;

        specialinvoke $r0.<androidx.window.layout.SidecarWindowBackend$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion> = $r0;

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        <androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock> = $r1;

        return;
    }

androidx.window.layout.SidecarWindowBackend$Companion
    private void <init>()
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0, $r8, $r9;
        android.content.Context r1;
        java.util.concurrent.locks.Lock r2;
        androidx.window.layout.ExtensionInterfaceCompat r3;
        androidx.window.layout.SidecarWindowBackend $r4, $r5, $r7, $r10;
        java.util.concurrent.locks.ReentrantLock $r6;
        java.lang.Throwable $r11;
        kotlin.Unit $r12;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r4 = staticinvoke <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()>();

        if $r4 != null goto label6;

        $r6 = staticinvoke <androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()>();

        r2 = (java.util.concurrent.locks.Lock) $r6;

        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r7 = staticinvoke <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()>();

        if $r7 != null goto label2;

        $r8 = <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion>;

        r3 = virtualinvoke $r8.<androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)>(r1);

        $r9 = <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion>;

        $r10 = new androidx.window.layout.SidecarWindowBackend;

        specialinvoke $r10.<androidx.window.layout.SidecarWindowBackend: void <init>(androidx.window.layout.ExtensionInterfaceCompat)>(r3);

        staticinvoke <androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)>($r10);

     label2:
        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r11 := @caughtexception;

     label5:
        interfaceinvoke r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r11;

     label6:
        $r5 = staticinvoke <androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r5);

        return $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0;
        android.content.Context r1;
        java.lang.Throwable r2, $r7;
        androidx.window.layout.SidecarCompat$Companion $r3;
        androidx.window.core.Version $r4;
        boolean $z0, $z1;
        androidx.window.layout.SidecarCompat $r5, $r6;
        androidx.window.layout.ExtensionInterfaceCompat r8;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        r8 = null;

     label1:
        $r3 = <androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()>();

        $z0 = virtualinvoke r0.<androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)>($r4);

        if $z0 == 0 goto label4;

        $r5 = new androidx.window.layout.SidecarCompat;

        specialinvoke $r5.<androidx.window.layout.SidecarCompat: void <init>(android.content.Context)>(r1);

        r8 = (androidx.window.layout.ExtensionInterfaceCompat) $r5;

        $r6 = (androidx.window.layout.SidecarCompat) r8;

        $z1 = virtualinvoke $r6.<androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()>();

        if $z1 != 0 goto label4;

        r8 = null;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        r8 = null;

     label4:
        if r8 != null goto label5;

     label5:
        return r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final boolean isSidecarVersionSupported(androidx.window.core.Version)
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0;
        androidx.window.core.Version r1, $r3;
        androidx.window.core.Version$Companion $r2;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        r1 := @parameter0: androidx.window.core.Version;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = <androidx.window.core.Version: androidx.window.core.Version$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()>();

        $i0 = virtualinvoke r1.<androidx.window.core.Version: int compareTo(androidx.window.core.Version)>($r3);

        if $i0 < 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final void resetInstance()
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        staticinvoke <androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)>(null);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.window.layout.SidecarWindowBackend$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.window.layout.SidecarWindowBackend$Companion: void <init>()>();

        return;
    }

androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
<androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0>
    public void <init>(androidx.window.layout.SidecarWindowBackend)
    {
        androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl r0;
        androidx.window.layout.SidecarWindowBackend r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl;

        r1 := @parameter0: androidx.window.layout.SidecarWindowBackend;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onWindowLayoutChanged(android.app.Activity, androidx.window.layout.WindowLayoutInfo)
    {
        androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl r0;
        android.app.Activity r1, $r8;
        androidx.window.layout.WindowLayoutInfo r2;
        java.util.Iterator r3;
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r4;
        androidx.window.layout.SidecarWindowBackend $r5;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.lang.Object $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: androidx.window.layout.WindowLayoutInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "newLayout");

        $r5 = r0.<androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0>;

        $r6 = virtualinvoke $r5.<androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()>();

        r3 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper) $r7;

        $r8 = virtualinvoke r4.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r1);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        virtualinvoke r4.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)>(r2);

        goto label1;

     label3:
        return;
    }

androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity>
<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor>
<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback>
<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo>
    public void <init>(android.app.Activity, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        android.app.Activity r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity> = r1;

        r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor> = r2;

        r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback> = r3;

        return;
    }

    public final android.app.Activity getActivity()
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        android.app.Activity $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        $r1 = r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity>;

        return $r1;
    }

    public final androidx.core.util.Consumer getCallback()
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        androidx.core.util.Consumer $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        $r1 = r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback>;

        return $r1;
    }

    public final androidx.window.layout.WindowLayoutInfo getLastInfo()
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        androidx.window.layout.WindowLayoutInfo $r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        $r1 = r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo>;

        return $r1;
    }

    public final void setLastInfo(androidx.window.layout.WindowLayoutInfo)
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        androidx.window.layout.WindowLayoutInfo r1;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        r1 := @parameter0: androidx.window.layout.WindowLayoutInfo;

        r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo> = r1;

        return;
    }

    public final void accept(androidx.window.layout.WindowLayoutInfo)
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        androidx.window.layout.WindowLayoutInfo r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        r1 := @parameter0: androidx.window.layout.WindowLayoutInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "newLayoutInfo");

        r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo> = r1;

        $r2 = r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private static final void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper, androidx.window.layout.WindowLayoutInfo)
    {
        androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper r0;
        androidx.window.layout.WindowLayoutInfo $r1;
        androidx.core.util.Consumer $r2;

        r0 := @parameter0: androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper;

        $r1 := @parameter1: androidx.window.layout.WindowLayoutInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$newLayoutInfo");

        $r2 = r0.<androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback>;

        interfaceinvoke $r2.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r1);

        return;
    }

