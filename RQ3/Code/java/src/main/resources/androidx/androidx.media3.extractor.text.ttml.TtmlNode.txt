androidx.media3.extractor.text.ttml.TtmlNode
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_TT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_HEAD>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_BODY>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_DIV>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_P>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_SPAN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_BR>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_STYLE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_STYLING>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_LAYOUT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_REGION>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_METADATA>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_IMAGE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_DATA>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TAG_INFORMATION>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ANONYMOUS_REGION_ID>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_ID>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_ORIGIN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_EXTENT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_DISPLAY_ALIGN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_BACKGROUND_COLOR>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_FONT_STYLE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_FONT_SIZE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_FONT_FAMILY>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_FONT_WEIGHT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_COLOR>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_RUBY>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_RUBY_POSITION>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_TEXT_DECORATION>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_TEXT_ALIGN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_TEXT_COMBINE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_TEXT_EMPHASIS>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_WRITING_MODE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_TTS_SHEAR>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ATTR_EBUTTS_MULTI_ROW_ALIGN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_CONTAINER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_BASE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_BASE_CONTAINER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_TEXT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_TEXT_CONTAINER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RUBY_DELIMITER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ANNOTATION_POSITION_BEFORE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ANNOTATION_POSITION_AFTER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ANNOTATION_POSITION_OUTSIDE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String LINETHROUGH>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String NO_LINETHROUGH>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String UNDERLINE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String NO_UNDERLINE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String ITALIC>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String BOLD>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String LEFT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String CENTER>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String RIGHT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String START>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String END>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String COMBINE_NONE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String COMBINE_ALL>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String VERTICAL>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String VERTICAL_LR>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String VERTICAL_RL>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_NONE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_AUTO>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_MARK_DOT>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_MARK_SESAME>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_MARK_CIRCLE>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_MARK_FILLED>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String TEXT_EMPHASIS_MARK_OPEN>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String text>
<androidx.media3.extractor.text.ttml.TtmlNode: boolean isTextNode>
<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>
<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>
<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlStyle style>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String[] styleIds>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>
<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String imageId>
<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode parent>
<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion>
<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion>
<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>
    public static androidx.media3.extractor.text.ttml.TtmlNode buildTextNode(java.lang.String)
    {
        java.lang.String r0, $r2;
        androidx.media3.extractor.text.ttml.TtmlNode $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new androidx.media3.extractor.text.ttml.TtmlNode;

        $r2 = staticinvoke <androidx.media3.extractor.text.ttml.TtmlRenderUtil: java.lang.String applyTextElementSpacePolicy(java.lang.String)>(r0);

        specialinvoke $r1.<androidx.media3.extractor.text.ttml.TtmlNode: void <init>(java.lang.String,java.lang.String,long,long,androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String,androidx.media3.extractor.text.ttml.TtmlNode)>(null, $r2, -9223372036854775807L, -9223372036854775807L, null, null, "", null, null);

        return $r1;
    }

    public static androidx.media3.extractor.text.ttml.TtmlNode buildNode(java.lang.String, long, long, androidx.media3.extractor.text.ttml.TtmlStyle, java.lang.String[], java.lang.String, java.lang.String, androidx.media3.extractor.text.ttml.TtmlNode)
    {
        java.lang.String r0, r3, r4;
        long l0, l1;
        androidx.media3.extractor.text.ttml.TtmlStyle r1;
        java.lang.String[] r2;
        androidx.media3.extractor.text.ttml.TtmlNode r5, $r6;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: androidx.media3.extractor.text.ttml.TtmlStyle;

        r2 := @parameter4: java.lang.String[];

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: androidx.media3.extractor.text.ttml.TtmlNode;

        $r6 = new androidx.media3.extractor.text.ttml.TtmlNode;

        specialinvoke $r6.<androidx.media3.extractor.text.ttml.TtmlNode: void <init>(java.lang.String,java.lang.String,long,long,androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String,androidx.media3.extractor.text.ttml.TtmlNode)>(r0, null, l0, l1, r1, r2, r3, r4, r5);

        return $r6;
    }

    private void <init>(java.lang.String, java.lang.String, long, long, androidx.media3.extractor.text.ttml.TtmlStyle, java.lang.String[], java.lang.String, java.lang.String, androidx.media3.extractor.text.ttml.TtmlNode)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, r7;
        java.lang.String r1, r2, r5, r6, $r9;
        long l0, l1;
        androidx.media3.extractor.text.ttml.TtmlStyle r3;
        java.lang.String[] r4;
        java.lang.Object $r8;
        java.util.HashMap $r10, $r11;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r3 := @parameter4: androidx.media3.extractor.text.ttml.TtmlStyle;

        r4 := @parameter5: java.lang.String[];

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        r7 := @parameter8: androidx.media3.extractor.text.ttml.TtmlNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag> = r1;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String text> = r2;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String imageId> = r6;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlStyle style> = r3;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String[] styleIds> = r4;

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.media3.extractor.text.ttml.TtmlNode: boolean isTextNode> = $z0;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs> = l0;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs> = l1;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r9 = (java.lang.String) $r8;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId> = $r9;

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode parent> = r7;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion> = $r11;

        return;
    }

    public boolean isActive(long)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0;
        long l0, $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15;
        byte $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16;
        boolean $z0;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 != 0 goto label1;

        $l15 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $b16 = $l15 cmp -9223372036854775807L;

        if $b16 == 0 goto label4;

     label1:
        $l3 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $b4 = $l3 cmp l0;

        if $b4 > 0 goto label2;

        $l13 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $b14 = $l13 cmp -9223372036854775807L;

        if $b14 == 0 goto label4;

     label2:
        $l5 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 != 0 goto label3;

        $l11 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $b12 = l0 cmp $l11;

        if $b12 < 0 goto label4;

     label3:
        $l7 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $b8 = $l7 cmp l0;

        if $b8 > 0 goto label5;

        $l9 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $b10 = l0 cmp $l9;

        if $b10 >= 0 goto label5;

     label4:
        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public void addChild(androidx.media3.extractor.text.ttml.TtmlNode)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        r1 := @parameter0: androidx.media3.extractor.text.ttml.TtmlNode;

        $r2 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children> = $r4;

     label1:
        $r3 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public androidx.media3.extractor.text.ttml.TtmlNode getChild(int)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r4;
        int i0;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.IndexOutOfBoundsException $r5;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (androidx.media3.extractor.text.ttml.TtmlNode) $r3;

        return $r4;
    }

    public int getChildCount()
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0;
        java.util.List $r1, $r2;
        int $i0;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        $r1 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        return $i0;
    }

    public long[] getEventTimesUs()
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0;
        java.util.TreeSet r1, $r4;
        long[] r2;
        java.util.Iterator r3;
        long l0;
        int $i1, $i2, i3;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Long $r6;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        $r4 = new java.util.TreeSet;

        specialinvoke $r4.<java.util.TreeSet: void <init>()>();

        r1 = $r4;

        specialinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: void getEventTimes(java.util.TreeSet,boolean)>(r1, 0);

        $i1 = virtualinvoke r1.<java.util.TreeSet: int size()>();

        r2 = newarray (long)[$i1];

        i3 = 0;

        r3 = virtualinvoke r1.<java.util.TreeSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Long) $r5;

        l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $i2 = i3;

        i3 = i3 + 1;

        r2[$i2] = l0;

        goto label1;

     label2:
        return r2;
    }

    private void getEventTimes(java.util.TreeSet, boolean)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r9;
        java.util.TreeSet r1;
        boolean z0, z1, z2, $z5;
        java.lang.String $r2, $r3, $r4, $r5, $r13;
        long $l0, $l3, $l4, $l5;
        byte $b1, $b6;
        java.util.List $r6, $r7, $r14;
        int $i2, i7;
        java.lang.Object $r8;
        java.lang.Long $r11, $r12;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        r1 := @parameter0: java.util.TreeSet;

        z0 := @parameter1: boolean;

        $r3 = "p";

        $r2 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        $r5 = "div";

        $r4 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if z0 != 0 goto label1;

        if z1 != 0 goto label1;

        if z2 == 0 goto label3;

        $r13 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String imageId>;

        if $r13 == null goto label3;

     label1:
        $l5 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $b6 = $l5 cmp -9223372036854775807L;

        if $b6 == 0 goto label2;

        $l4 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long startTimeUs>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r1.<java.util.TreeSet: boolean add(java.lang.Object)>($r12);

     label2:
        $l0 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $b1 = $l0 cmp -9223372036854775807L;

        if $b1 == 0 goto label3;

        $l3 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: long endTimeUs>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r1.<java.util.TreeSet: boolean add(java.lang.Object)>($r11);

     label3:
        $r14 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        if $r14 != null goto label4;

        return;

     label4:
        i7 = 0;

     label5:
        $r6 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i7 >= $i2 goto label9;

        $r7 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.List children>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        $r9 = (androidx.media3.extractor.text.ttml.TtmlNode) $r8;

        if z0 != 0 goto label6;

        if z1 == 0 goto label7;

     label6:
        $z5 = 1;

        goto label8;

     label7:
        $z5 = 0;

     label8:
        specialinvoke $r9.<androidx.media3.extractor.text.ttml.TtmlNode: void getEventTimes(java.util.TreeSet,boolean)>(r1, $z5);

        i7 = i7 + 1;

        goto label5;

     label9:
        return;
    }

    public java.lang.String[] getStyleIds()
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        $r1 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String[] styleIds>;

        return $r1;
    }

    public java.util.List getCues(long, java.util.Map, java.util.Map, java.util.Map)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0;
        long l0;
        java.util.Map r1, r2, r3;
        java.util.ArrayList r4, r6, $r9, $r14;
        java.util.TreeMap r5, $r11;
        android.graphics.Bitmap r7;
        androidx.media3.extractor.text.ttml.TtmlRegion r8, $r19, $r37, r55;
        java.lang.String $r10, $r12, $r13, r51;
        java.util.Set $r15;
        boolean $z0, $z3;
        java.lang.Object $r16, $r17, $r18, $r20, $r21, $r23, $r32, $r33, $r34, $r35, $r36, $r38;
        java.lang.CharSequence $r22;
        android.text.SpannableStringBuilder $r24;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        androidx.media3.common.text.Cue $r31, $r48;
        androidx.media3.common.text.Cue$Builder $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, r56;
        java.util.Iterator r49, r53;
        android.util.Pair r50;
        byte[] r52;
        java.util.Map$Entry r54;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.util.Map;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        $r10 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        specialinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForImage(long,java.lang.String,java.util.List)>(l0, $r10, r4);

        $r11 = new java.util.TreeMap;

        specialinvoke $r11.<java.util.TreeMap: void <init>()>();

        r5 = $r11;

        $r12 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        specialinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForText(long,boolean,java.lang.String,java.util.Map)>(l0, 0, $r12, r5);

        $r13 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        specialinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForStyle(long,java.util.Map,java.util.Map,java.lang.String,java.util.Map)>(l0, r1, r2, $r13, r5);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r6 = $r14;

        r49 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r32 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (android.util.Pair) $r32;

        $r33 = r50.<android.util.Pair: java.lang.Object second>;

        $r34 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33);

        r51 = (java.lang.String) $r34;

        if r51 != null goto label2;

        goto label1;

     label2:
        r52 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r51, 0);

        $i5 = lengthof r52;

        r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r52, 0, $i5);

        $r35 = r50.<android.util.Pair: java.lang.Object first>;

        $r36 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        $r37 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r36;

        $r38 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r37);

        r8 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r38;

        $r39 = new androidx.media3.common.text.Cue$Builder;

        specialinvoke $r39.<androidx.media3.common.text.Cue$Builder: void <init>()>();

        $r40 = virtualinvoke $r39.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setBitmap(android.graphics.Bitmap)>(r7);

        $f4 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: float position>;

        $r41 = virtualinvoke $r40.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPosition(float)>($f4);

        $r42 = virtualinvoke $r41.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPositionAnchor(int)>(0);

        $f5 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: float line>;

        $r43 = virtualinvoke $r42.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLine(float,int)>($f5, 0);

        $i6 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: int lineAnchor>;

        $r44 = virtualinvoke $r43.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLineAnchor(int)>($i6);

        $f6 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: float width>;

        $r45 = virtualinvoke $r44.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setSize(float)>($f6);

        $f7 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: float height>;

        $r46 = virtualinvoke $r45.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setBitmapHeight(float)>($f7);

        $i7 = r8.<androidx.media3.extractor.text.ttml.TtmlRegion: int verticalType>;

        $r47 = virtualinvoke $r46.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setVerticalType(int)>($i7);

        $r48 = virtualinvoke $r47.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue build()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r48);

        goto label1;

     label3:
        $r15 = virtualinvoke r5.<java.util.TreeMap: java.util.Set entrySet()>();

        r53 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        $r19 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r18;

        $r20 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r19);

        r55 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r20;

        $r21 = interfaceinvoke r54.<java.util.Map$Entry: java.lang.Object getValue()>();

        r56 = (androidx.media3.common.text.Cue$Builder) $r21;

        $r22 = virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: java.lang.CharSequence getText()>();

        $r23 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r22);

        $r24 = (android.text.SpannableStringBuilder) $r23;

        staticinvoke <androidx.media3.extractor.text.ttml.TtmlNode: void cleanUpText(android.text.SpannableStringBuilder)>($r24);

        $f0 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: float line>;

        $i1 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: int lineType>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLine(float,int)>($f0, $i1);

        $i2 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: int lineAnchor>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setLineAnchor(int)>($i2);

        $f1 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: float position>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setPosition(float)>($f1);

        $f2 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: float width>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setSize(float)>($f2);

        $f3 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: float textSize>;

        $i3 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: int textSizeType>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setTextSize(float,int)>($f3, $i3);

        $i4 = r55.<androidx.media3.extractor.text.ttml.TtmlRegion: int verticalType>;

        virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setVerticalType(int)>($i4);

        $r31 = virtualinvoke r56.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue build()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r31);

        goto label4;

     label5:
        return r6;
    }

    private void traverseForImage(long, java.lang.String, java.util.List)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r6;
        long l0;
        java.lang.String r1, r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12;
        java.util.List r2;
        boolean $z0, $z1, $z2;
        android.util.Pair $r10;
        int i1, $i2;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $r5 = "";

        $r4 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r12 = r1;

        goto label2;

     label1:
        $r12 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

     label2:
        r3 = $r12;

        $z1 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: boolean isActive(long)>(l0);

        if $z1 == 0 goto label3;

        $r8 = "div";

        $r7 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

        $r9 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String imageId>;

        if $r9 == null goto label3;

        $r10 = new android.util.Pair;

        $r11 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String imageId>;

        specialinvoke $r10.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, $r11);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        return;

     label3:
        i1 = 0;

     label4:
        $i2 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: int getChildCount()>();

        if i1 >= $i2 goto label5;

        $r6 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode getChild(int)>(i1);

        specialinvoke $r6.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForImage(long,java.lang.String,java.util.List)>(l0, r3, r2);

        i1 = i1 + 1;

        goto label4;

     label5:
        return;
    }

    private void traverseForText(long, boolean, java.lang.String, java.util.Map)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r29;
        long l0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9;
        java.lang.String r1, r3, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r20, $r33, $r44, $r48;
        java.util.Map r2;
        java.util.Map$Entry r4, r50;
        java.util.HashMap $r5, $r6, $r18, $r31;
        java.util.Set $r13, $r16;
        int $i1, $i2, $i4, i5;
        java.lang.Object $r17, $r19, $r21, $r24, $r30, $r32, $r34, $r37, $r45;
        androidx.media3.common.text.Cue$Builder $r22, $r35;
        java.lang.CharSequence $r23, $r25, $r36, $r38, $r46;
        java.lang.Integer $r26, $r39;
        android.text.SpannableStringBuilder $r28, $r41, $r43;
        java.util.Iterator r49, r51;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.Map;

        $r5 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion>;

        virtualinvoke $r5.<java.util.HashMap: void clear()>();

        $r6 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        $r8 = "metadata";

        $r7 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label01;

        return;

     label01:
        $r10 = "";

        $r9 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label02;

        $r48 = r1;

        goto label03;

     label02:
        $r48 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

     label03:
        r3 = $r48;

        $z3 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: boolean isTextNode>;

        if $z3 == 0 goto label04;

        if z0 == 0 goto label04;

        $r43 = staticinvoke <androidx.media3.extractor.text.ttml.TtmlNode: android.text.SpannableStringBuilder getRegionOutputText(java.lang.String,java.util.Map)>(r3, r2);

        $r44 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String text>;

        $r45 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r44);

        $r46 = (java.lang.CharSequence) $r45;

        virtualinvoke $r43.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r46);

        goto label15;

     label04:
        $r12 = "br";

        $r11 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 == 0 goto label05;

        if z0 == 0 goto label05;

        $r41 = staticinvoke <androidx.media3.extractor.text.ttml.TtmlNode: android.text.SpannableStringBuilder getRegionOutputText(java.lang.String,java.util.Map)>(r3, r2);

        virtualinvoke $r41.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(10);

        goto label15;

     label05:
        $z5 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: boolean isActive(long)>(l0);

        if $z5 == 0 goto label15;

        $r13 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r49 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label07;

        $r30 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.util.Map$Entry) $r30;

        $r31 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion>;

        $r32 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r33 = (java.lang.String) $r32;

        $r34 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r35 = (androidx.media3.common.text.Cue$Builder) $r34;

        $r36 = virtualinvoke $r35.<androidx.media3.common.text.Cue$Builder: java.lang.CharSequence getText()>();

        $r37 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r36);

        $r38 = (java.lang.CharSequence) $r37;

        $i4 = interfaceinvoke $r38.<java.lang.CharSequence: int length()>();

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r39);

        goto label06;

     label07:
        $r15 = "p";

        $r14 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        i5 = 0;

     label08:
        $i1 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: int getChildCount()>();

        if i5 >= $i1 goto label12;

        $r29 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode getChild(int)>(i5);

        if z0 != 0 goto label09;

        if z7 == 0 goto label10;

     label09:
        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        specialinvoke $r29.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForText(long,boolean,java.lang.String,java.util.Map)>(l0, $z8, r3, r2);

        i5 = i5 + 1;

        goto label08;

     label12:
        if z7 == 0 goto label13;

        $r28 = staticinvoke <androidx.media3.extractor.text.ttml.TtmlNode: android.text.SpannableStringBuilder getRegionOutputText(java.lang.String,java.util.Map)>(r3, r2);

        staticinvoke <androidx.media3.extractor.text.ttml.TtmlRenderUtil: void endParagraph(android.text.SpannableStringBuilder)>($r28);

     label13:
        $r16 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r51 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z9 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label15;

        $r17 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r17;

        $r18 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion>;

        $r19 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (java.lang.String) $r19;

        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (androidx.media3.common.text.Cue$Builder) $r21;

        $r23 = virtualinvoke $r22.<androidx.media3.common.text.Cue$Builder: java.lang.CharSequence getText()>();

        $r24 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r23);

        $r25 = (java.lang.CharSequence) $r24;

        $i2 = interfaceinvoke $r25.<java.lang.CharSequence: int length()>();

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r26);

        goto label14;

     label15:
        return;
    }

    private static android.text.SpannableStringBuilder getRegionOutputText(java.lang.String, java.util.Map)
    {
        java.lang.String r0;
        java.util.Map r1;
        androidx.media3.common.text.Cue$Builder r2, $r4, $r8;
        boolean $z0;
        java.lang.Object $r3, $r6;
        java.lang.CharSequence $r5;
        android.text.SpannableStringBuilder $r7, $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r8 = new androidx.media3.common.text.Cue$Builder;

        specialinvoke $r8.<androidx.media3.common.text.Cue$Builder: void <init>()>();

        r2 = $r8;

        $r9 = new android.text.SpannableStringBuilder;

        specialinvoke $r9.<android.text.SpannableStringBuilder: void <init>()>();

        virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setText(java.lang.CharSequence)>($r9);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

     label1:
        $r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (androidx.media3.common.text.Cue$Builder) $r3;

        $r5 = virtualinvoke $r4.<androidx.media3.common.text.Cue$Builder: java.lang.CharSequence getText()>();

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (android.text.SpannableStringBuilder) $r6;

        return $r7;
    }

    private void traverseForStyle(long, java.util.Map, java.util.Map, java.lang.String, java.util.Map)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r13;
        long l0;
        java.util.Map r1, r2, r4;
        java.lang.String r3, r5, r7, $r9, $r10, $r29;
        java.util.Map$Entry r6;
        int i1, i2, i3, $i4, $i5, i6;
        androidx.media3.common.text.Cue$Builder r8, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap $r11, $r16, $r26;
        java.util.Set $r12;
        java.lang.Object $r14, $r15, $r17, $r19, $r21, $r22, $r24, $r27;
        java.lang.Integer $r18, $r28;
        androidx.media3.extractor.text.ttml.TtmlRegion $r23, $r25;
        java.util.Iterator r30;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.util.Map;

        $z0 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: boolean isActive(long)>(l0);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r10 = "";

        $r9 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label02;

        $r29 = r3;

        goto label03;

     label02:
        $r29 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String regionId>;

     label03:
        r5 = $r29;

        $r11 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Set entrySet()>();

        r30 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r14 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r15;

        $r16 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion>;

        $z2 = virtualinvoke $r16.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r7);

        if $z2 == 0 goto label05;

        $r26 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion>;

        $r27 = virtualinvoke $r26.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r28 = (java.lang.Integer) $r27;

        $i5 = virtualinvoke $r28.<java.lang.Integer: int intValue()>();

        goto label06;

     label05:
        $i5 = 0;

     label06:
        i1 = $i5;

        $r17 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.Integer) $r17;

        i2 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        if i1 == i2 goto label07;

        $r19 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        $r20 = (androidx.media3.common.text.Cue$Builder) $r19;

        $r21 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r20);

        r8 = (androidx.media3.common.text.Cue$Builder) $r21;

        $r22 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r23 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r22;

        $r24 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r23);

        $r25 = (androidx.media3.extractor.text.ttml.TtmlRegion) $r24;

        i3 = $r25.<androidx.media3.extractor.text.ttml.TtmlRegion: int verticalType>;

        specialinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: void applyStyleToOutput(java.util.Map,androidx.media3.common.text.Cue$Builder,int,int,int)>(r1, r8, i1, i2, i3);

     label07:
        goto label04;

     label08:
        i6 = 0;

     label09:
        $i4 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: int getChildCount()>();

        if i6 >= $i4 goto label10;

        $r13 = virtualinvoke r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode getChild(int)>(i6);

        specialinvoke $r13.<androidx.media3.extractor.text.ttml.TtmlNode: void traverseForStyle(long,java.util.Map,java.util.Map,java.lang.String,java.util.Map)>(l0, r1, r2, r5, r4);

        i6 = i6 + 1;

        goto label09;

     label10:
        return;
    }

    private void applyStyleToOutput(java.util.Map, androidx.media3.common.text.Cue$Builder, int, int, int)
    {
        androidx.media3.extractor.text.ttml.TtmlNode r0, $r7;
        java.util.Map r1;
        androidx.media3.common.text.Cue$Builder r2;
        int i0, i1, i2;
        androidx.media3.extractor.text.ttml.TtmlStyle r3, $r5;
        java.lang.String[] $r4;
        java.lang.CharSequence $r6;
        java.lang.String $r8, $r9;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        byte $b3;
        android.text.Layout$Alignment $r10, $r11, $r12, $r14;
        android.text.SpannableStringBuilder $r17, r19;

        r0 := @this: androidx.media3.extractor.text.ttml.TtmlNode;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: androidx.media3.common.text.Cue$Builder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r5 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlStyle style>;

        $r4 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String[] styleIds>;

        r3 = staticinvoke <androidx.media3.extractor.text.ttml.TtmlRenderUtil: androidx.media3.extractor.text.ttml.TtmlStyle resolveStyle(androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.util.Map)>($r5, $r4, r1);

        $r6 = virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: java.lang.CharSequence getText()>();

        r19 = (android.text.SpannableStringBuilder) $r6;

        if r19 != null goto label1;

        $r17 = new android.text.SpannableStringBuilder;

        specialinvoke $r17.<android.text.SpannableStringBuilder: void <init>()>();

        r19 = $r17;

        virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setText(java.lang.CharSequence)>(r19);

     label1:
        if r3 == null goto label4;

        $r7 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: androidx.media3.extractor.text.ttml.TtmlNode parent>;

        staticinvoke <androidx.media3.extractor.text.ttml.TtmlRenderUtil: void applyStylesToSpan(android.text.Spannable,int,int,androidx.media3.extractor.text.ttml.TtmlStyle,androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map,int)>(r19, i0, i1, r3, $r7, r1, i2);

        $r9 = "p";

        $r8 = r0.<androidx.media3.extractor.text.ttml.TtmlNode: java.lang.String tag>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label4;

        $f0 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: float getShearPercentage()>();

        $b3 = $f0 cmpl 3.4028235E38F;

        if $b3 == 0 goto label2;

        $f1 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: float getShearPercentage()>();

        $f2 = $f1 * -90.0F;

        $f3 = $f2 / 100.0F;

        virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setShearDegrees(float)>($f3);

     label2:
        $r10 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: android.text.Layout$Alignment getTextAlign()>();

        if $r10 == null goto label3;

        $r14 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: android.text.Layout$Alignment getTextAlign()>();

        virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setTextAlignment(android.text.Layout$Alignment)>($r14);

     label3:
        $r11 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: android.text.Layout$Alignment getMultiRowAlign()>();

        if $r11 == null goto label4;

        $r12 = virtualinvoke r3.<androidx.media3.extractor.text.ttml.TtmlStyle: android.text.Layout$Alignment getMultiRowAlign()>();

        virtualinvoke r2.<androidx.media3.common.text.Cue$Builder: androidx.media3.common.text.Cue$Builder setMultiRowAlignment(android.text.Layout$Alignment)>($r12);

     label4:
        return;
    }

    private static void cleanUpText(android.text.SpannableStringBuilder)
    {
        android.text.SpannableStringBuilder r0;
        androidx.media3.extractor.text.ttml.DeleteTextSpan[] r1, r11;
        androidx.media3.extractor.text.ttml.DeleteTextSpan r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i24, $i25, $i28, $i29, $i30, $i32, $i33, i34, i35, i36, i37, i38, i39, $i40, $i41, i42, $i43, $i44;
        java.lang.Object[] $r3;
        char $c7, $c11, $c13, $c17, $c21, $c23, $c26, $c27, $c31;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $r3 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i0, class "Landroidx/media3/extractor/text/ttml/DeleteTextSpan;");

        r1 = (androidx.media3.extractor.text.ttml.DeleteTextSpan[]) $r3;

        r11 = r1;

        i34 = lengthof r11;

        i35 = 0;

     label01:
        if i35 >= i34 goto label02;

        r2 = r11[i35];

        $i32 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r2);

        $i33 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r2);

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>($i32, $i33, "");

        i35 = i35 + 1;

        goto label01;

     label02:
        i36 = 0;

     label03:
        $i1 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i36 >= $i1 goto label07;

        $c27 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i36);

        if $c27 != 32 goto label06;

        i37 = i36 + 1;

     label04:
        $i28 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i37 >= $i28 goto label05;

        $c31 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i37);

        if $c31 != 32 goto label05;

        i37 = i37 + 1;

        goto label04;

     label05:
        $i29 = i36 + 1;

        i38 = i37 - $i29;

        if i38 <= 0 goto label06;

        $i30 = i36 + i38;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i36, $i30);

     label06:
        i36 = i36 + 1;

        goto label03;

     label07:
        $i2 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if $i2 <= 0 goto label08;

        $c26 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(0);

        if $c26 != 32 goto label08;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(0, 1);

     label08:
        i39 = 0;

     label09:
        $i40 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i41 = $i40 - 1;

        if i39 >= $i41 goto label11;

        $c21 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i39);

        if $c21 != 10 goto label10;

        $i22 = i39 + 1;

        $c23 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i22);

        if $c23 != 32 goto label10;

        $i25 = i39 + 1;

        $i24 = i39 + 2;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i25, $i24);

     label10:
        i39 = i39 + 1;

        goto label09;

     label11:
        $i3 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if $i3 <= 0 goto label12;

        $i15 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i16 = $i15 - 1;

        $c17 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i16);

        if $c17 != 32 goto label12;

        $i18 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i19 = $i18 - 1;

        $i20 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i19, $i20);

     label12:
        i42 = 0;

     label13:
        $i43 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i44 = $i43 - 1;

        if i42 >= $i44 goto label15;

        $c11 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i42);

        if $c11 != 32 goto label14;

        $i12 = i42 + 1;

        $c13 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i12);

        if $c13 != 10 goto label14;

        $i14 = i42 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i42, $i14);

     label14:
        i42 = i42 + 1;

        goto label13;

     label15:
        $i4 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if $i4 <= 0 goto label16;

        $i5 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i6 = $i5 - 1;

        $c7 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i6);

        if $c7 != 10 goto label16;

        $i8 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i9 = $i8 - 1;

        $i10 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>($i9, $i10);

     label16:
        return;
    }

