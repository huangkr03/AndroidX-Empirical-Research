androidx.media3.datasource.HttpDataSource
<androidx.media3.datasource.HttpDataSource: com.google.common.base.Predicate REJECT_PAYWALL_TYPES>
<androidx.media3.datasource.HttpDataSource: long open(androidx.media3.datasource.DataSpec)>
<androidx.media3.datasource.HttpDataSource: void close()>
<androidx.media3.datasource.HttpDataSource: int read(byte[],int,int)>
<androidx.media3.datasource.HttpDataSource: void setRequestProperty(java.lang.String,java.lang.String)>
<androidx.media3.datasource.HttpDataSource: void clearRequestProperty(java.lang.String)>
<androidx.media3.datasource.HttpDataSource: void clearAllRequestProperties()>
<androidx.media3.datasource.HttpDataSource: int getResponseCode()>
<androidx.media3.datasource.HttpDataSource: java.util.Map getResponseHeaders()>
    private static boolean lambda$static$0(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("text");

        if $z1 == 0 goto label2;

        $z4 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("text/vtt");

        if $z4 == 0 goto label3;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("html");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("xml");

        if $z3 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    static void <clinit>()
    {
        com.google.common.base.Predicate $r0;

        $r0 = dynamicinvoke "apply" <com.google.common.base.Predicate ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: boolean __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.datasource.HttpDataSource: boolean lambda$static$0(java.lang.String)>, methodtype: boolean __METHODTYPE__(java.lang.String));

        <androidx.media3.datasource.HttpDataSource: com.google.common.base.Predicate REJECT_PAYWALL_TYPES> = $r0;

        return;
    }

androidx.media3.datasource.HttpDataSource$BaseFactory
<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>
    public void <init>()
    {
        androidx.media3.datasource.HttpDataSource$BaseFactory r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;

        r0 := @this: androidx.media3.datasource.HttpDataSource$BaseFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke $r1.<androidx.media3.datasource.HttpDataSource$RequestProperties: void <init>()>();

        r0.<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties> = $r1;

        return;
    }

    public final androidx.media3.datasource.HttpDataSource createDataSource()
    {
        androidx.media3.datasource.HttpDataSource$BaseFactory r0;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r1;
        androidx.media3.datasource.HttpDataSource $r2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$BaseFactory;

        $r1 = r0.<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        $r2 = virtualinvoke r0.<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource createDataSourceInternal(androidx.media3.datasource.HttpDataSource$RequestProperties)>($r1);

        return $r2;
    }

    public final androidx.media3.datasource.HttpDataSource$Factory setDefaultRequestProperties(java.util.Map)
    {
        androidx.media3.datasource.HttpDataSource$BaseFactory r0;
        java.util.Map r1;
        androidx.media3.datasource.HttpDataSource$RequestProperties $r2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$BaseFactory;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties>;

        virtualinvoke $r2.<androidx.media3.datasource.HttpDataSource$RequestProperties: void clearAndSet(java.util.Map)>(r1);

        return r0;
    }

<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource createDataSourceInternal(androidx.media3.datasource.HttpDataSource$RequestProperties)>
    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.HttpDataSource$BaseFactory r0;
        androidx.media3.datasource.HttpDataSource $r1;

        r0 := @this: androidx.media3.datasource.HttpDataSource$BaseFactory;

        $r1 = virtualinvoke r0.<androidx.media3.datasource.HttpDataSource$BaseFactory: androidx.media3.datasource.HttpDataSource createDataSource()>();

        return $r1;
    }

androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException
    public void <init>(java.io.IOException, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException r0;
        java.io.IOException r1;
        androidx.media3.datasource.DataSpec r2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException;

        r1 := @parameter0: java.io.IOException;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>("Cleartext HTTP traffic not permitted. See https://exoplayer.dev/issues/cleartext-not-permitted", r1, r2, 2007, 1);

        return;
    }

androidx.media3.datasource.HttpDataSource$Factory
<androidx.media3.datasource.HttpDataSource$Factory: androidx.media3.datasource.HttpDataSource createDataSource()>
<androidx.media3.datasource.HttpDataSource$Factory: androidx.media3.datasource.HttpDataSource$Factory setDefaultRequestProperties(java.util.Map)>
    public volatile androidx.media3.datasource.DataSource createDataSource()
    {
        androidx.media3.datasource.HttpDataSource$Factory r0;
        androidx.media3.datasource.HttpDataSource $r1;

        r0 := @this: androidx.media3.datasource.HttpDataSource$Factory;

        $r1 = interfaceinvoke r0.<androidx.media3.datasource.HttpDataSource$Factory: androidx.media3.datasource.HttpDataSource createDataSource()>();

        return $r1;
    }

androidx.media3.datasource.HttpDataSource$HttpDataSourceException$Type
androidx.media3.datasource.HttpDataSource$HttpDataSourceException
<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int TYPE_OPEN>
<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int TYPE_READ>
<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int TYPE_CLOSE>
<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.DataSpec dataSpec>
<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type>
    public static androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException, androidx.media3.datasource.DataSpec, int)
    {
        java.io.IOException r0;
        androidx.media3.datasource.DataSpec r1;
        int i0;
        java.lang.String r2, $r3;
        boolean $z0, $z1, $z2;
        short s1;
        java.lang.Object $r4;
        androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException r5;
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r6, r7;

        r0 := @parameter0: java.io.IOException;

        r1 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        r2 = virtualinvoke r0.<java.io.IOException: java.lang.String getMessage()>();

        $z0 = r0 instanceof java.net.SocketTimeoutException;

        if $z0 == 0 goto label1;

        s1 = 2002;

        goto label4;

     label1:
        $z1 = r0 instanceof java.io.InterruptedIOException;

        if $z1 == 0 goto label2;

        s1 = 1004;

        goto label4;

     label2:
        if r2 == null goto label3;

        $r3 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r2);

        $z2 = virtualinvoke $r3.<java.lang.String: boolean matches(java.lang.String)>("cleartext.*not permitted.*");

        if $z2 == 0 goto label3;

        s1 = 2007;

        goto label4;

     label3:
        s1 = 2001;

     label4:
        if s1 != 2007 goto label5;

        r5 = new androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException;

        $r4 = r5;

        specialinvoke r5.<androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec)>(r0, r1);

        goto label6;

     label5:
        r6 = new androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        $r4 = r6;

        specialinvoke r6.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r0, r1, s1, i0);

     label6:
        r7 = (androidx.media3.datasource.HttpDataSource$HttpDataSourceException) $r4;

        return r7;
    }

    public void <init>(androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        androidx.media3.datasource.DataSpec r1;
        int i0;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(androidx.media3.datasource.DataSpec,int,int)>(r1, 2000, i0);

        return;
    }

    public void <init>(androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        androidx.media3.datasource.DataSpec r1;
        int i0, i1, $i2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int assignErrorCode(int,int)>(i0, i1);

        specialinvoke r0.<androidx.media3.datasource.DataSourceException: void <init>(int)>($i2);

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.DataSpec dataSpec> = r1;

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type> = i1;

        return;
    }

    public void <init>(java.lang.String, androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.lang.String r1;
        androidx.media3.datasource.DataSpec r2;
        int i0;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, 2000, i0);

        return;
    }

    public void <init>(java.lang.String, androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.lang.String r1;
        androidx.media3.datasource.DataSpec r2;
        int i0, i1, $i2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int assignErrorCode(int,int)>(i0, i1);

        specialinvoke r0.<androidx.media3.datasource.DataSourceException: void <init>(java.lang.String,int)>(r1, $i2);

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.DataSpec dataSpec> = r2;

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type> = i1;

        return;
    }

    public void <init>(java.io.IOException, androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.io.IOException r1;
        androidx.media3.datasource.DataSpec r2;
        int i0;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.io.IOException;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, 2000, i0);

        return;
    }

    public void <init>(java.io.IOException, androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.io.IOException r1;
        androidx.media3.datasource.DataSpec r2;
        int i0, i1, $i2;
        java.lang.Throwable r3;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.io.IOException;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i2 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int assignErrorCode(int,int)>(i0, i1);

        r3 = (java.lang.Throwable) r1;

        specialinvoke r0.<androidx.media3.datasource.DataSourceException: void <init>(java.lang.Throwable,int)>(r3, $i2);

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.DataSpec dataSpec> = r2;

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type> = i1;

        return;
    }

    public void <init>(java.lang.String, java.io.IOException, androidx.media3.datasource.DataSpec, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.lang.String r1;
        java.io.IOException r2;
        androidx.media3.datasource.DataSpec r3;
        int i0;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.IOException;

        r3 := @parameter2: androidx.media3.datasource.DataSpec;

        i0 := @parameter3: int;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>(r1, r2, r3, 2000, i0);

        return;
    }

    public void <init>(java.lang.String, java.io.IOException, androidx.media3.datasource.DataSpec, int, int)
    {
        androidx.media3.datasource.HttpDataSource$HttpDataSourceException r0;
        java.lang.String r1;
        java.io.IOException r2;
        androidx.media3.datasource.DataSpec r3;
        int i0, i1, $i2;
        java.lang.Throwable r4;

        r0 := @this: androidx.media3.datasource.HttpDataSource$HttpDataSourceException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.IOException;

        r3 := @parameter2: androidx.media3.datasource.DataSpec;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $i2 = staticinvoke <androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int assignErrorCode(int,int)>(i0, i1);

        r4 = (java.lang.Throwable) r2;

        specialinvoke r0.<androidx.media3.datasource.DataSourceException: void <init>(java.lang.String,java.lang.Throwable,int)>(r1, r4, $i2);

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: androidx.media3.datasource.DataSpec dataSpec> = r3;

        r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: int type> = i1;

        return;
    }

    private static int assignErrorCode(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 2000 goto label1;

        if i1 != 1 goto label1;

        $i2 = 2001;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        return $i2;
    }

androidx.media3.datasource.HttpDataSource$InvalidContentTypeException
<androidx.media3.datasource.HttpDataSource$InvalidContentTypeException: java.lang.String contentType>
    public void <init>(java.lang.String, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.HttpDataSource$InvalidContentTypeException r0;
        java.lang.String r1, $r6;
        androidx.media3.datasource.DataSpec r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.media3.datasource.HttpDataSource$InvalidContentTypeException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content type: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int)>($r6, r2, 2003, 1);

        r0.<androidx.media3.datasource.HttpDataSource$InvalidContentTypeException: java.lang.String contentType> = r1;

        return;
    }

androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException
<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode>
<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: java.lang.String responseMessage>
<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: java.util.Map headerFields>
<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: byte[] responseBody>
    public void <init>(int, java.util.Map, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r0;
        int i0;
        java.util.Map r1;
        androidx.media3.datasource.DataSpec r2;
        byte[] $r3;

        r0 := @this: androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Map;

        r2 := @parameter2: androidx.media3.datasource.DataSpec;

        $r3 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>(i0, null, null, r1, r2, $r3);

        return;
    }

    public void <init>(int, java.lang.String, java.util.Map, androidx.media3.datasource.DataSpec)
    {
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r0;
        int i0;
        java.lang.String r1;
        java.util.Map r2;
        androidx.media3.datasource.DataSpec r3;
        byte[] $r4;

        r0 := @this: androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.Map;

        r3 := @parameter3: androidx.media3.datasource.DataSpec;

        $r4 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[])>(i0, r1, null, r2, r3, $r4);

        return;
    }

    public void <init>(int, java.lang.String, java.io.IOException, java.util.Map, androidx.media3.datasource.DataSpec, byte[])
    {
        androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException r0;
        int i0;
        java.lang.String r1, $r9;
        java.io.IOException r2;
        java.util.Map r3;
        androidx.media3.datasource.DataSpec r4;
        byte[] r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.IOException;

        r3 := @parameter3: java.util.Map;

        r4 := @parameter4: androidx.media3.datasource.DataSpec;

        r5 := @parameter5: byte[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response code: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.media3.datasource.HttpDataSource$HttpDataSourceException: void <init>(java.lang.String,java.io.IOException,androidx.media3.datasource.DataSpec,int,int)>($r9, r2, r4, 2004, 1);

        r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: int responseCode> = i0;

        r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: java.lang.String responseMessage> = r1;

        r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: java.util.Map headerFields> = r3;

        r0.<androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: byte[] responseBody> = r5;

        return;
    }

androidx.media3.datasource.HttpDataSource$RequestProperties
<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>
<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot>
    public void <init>()
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties> = $r1;

        return;
    }

    public synchronized void set(java.lang.String, java.lang.String)
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = null;

        $r3 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public synchronized void set(java.util.Map)
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.util.Map r1, $r2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = null;

        $r2 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public synchronized void clearAndSet(java.util.Map)
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.util.Map r1, $r2, $r3;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = null;

        $r2 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public synchronized void remove(java.lang.String)
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = null;

        $r2 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public synchronized void clear()
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.util.Map $r1;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = null;

        $r1 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public synchronized java.util.Map getSnapshot()
    {
        androidx.media3.datasource.HttpDataSource$RequestProperties r0;
        java.util.Map $r1, $r2, $r4, $r5;
        java.util.HashMap $r3;

        r0 := @this: androidx.media3.datasource.HttpDataSource$RequestProperties;

        $r1 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot>;

        if $r1 != null goto label1;

        $r3 = new java.util.HashMap;

        $r4 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestProperties>;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot> = $r5;

     label1:
        $r2 = r0.<androidx.media3.datasource.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot>;

        return $r2;
    }

