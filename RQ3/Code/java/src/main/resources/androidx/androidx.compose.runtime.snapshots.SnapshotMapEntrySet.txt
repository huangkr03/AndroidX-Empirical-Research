androidx.compose.runtime.snapshots.SnapshotMapEntrySet
    public void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        androidx.compose.runtime.snapshots.SnapshotStateMap r1;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: androidx.compose.runtime.snapshots.SnapshotStateMap;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "map");

        specialinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapSet: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap)>(r1);

        return;
    }

    public java.lang.Void add(java.util.Map$Entry)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Map$Entry r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public java.lang.Void addAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Collection r1;
        kotlin.KotlinNothingValueException $r3;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Void unsupported()>();

        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        androidx.compose.runtime.snapshots.StateMapMutableEntriesIterator $r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2, $r3;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap $r5;
        java.util.Set $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet $r7;
        java.util.Iterator $r8, $r9;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        $r1 = new androidx.compose.runtime.snapshots.StateMapMutableEntriesIterator;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord getReadable$runtime_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: java.util.Set entrySet()>();

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet) $r6;

        $r8 = interfaceinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.ImmutableSet: java.util.Iterator iterator()>();

        specialinvoke $r1.<androidx.compose.runtime.snapshots.StateMapMutableEntriesIterator: void <init>(androidx.compose.runtime.snapshots.SnapshotStateMap,java.util.Iterator)>($r2, $r8);

        $r9 = (java.util.Iterator) $r1;

        return $r9;
    }

    public boolean remove(java.util.Map$Entry)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Map$Entry r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        boolean $z0, z1, $z2;
        java.lang.Object $r4, $r6, $r7;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r5;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        z1 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r4;

        $r5 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object remove(java.lang.Object)>($r6);

        if $r7 != null goto label2;

        if z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;

        goto label1;

     label5:
        return z1;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Collection r1;
        java.util.Map r2, r3, r34, r37;
        java.util.Iterator r4, r35;
        java.util.Map$Entry r5, r38, r50;
        java.lang.Object r6, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, r36, r42, r53, r56;
        androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord $r7, $r10, $r14, r45;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.util.LinkedHashMap $r8;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, z8;
        androidx.compose.runtime.snapshots.StateRecord $r9, $r11, $r13, $r17, $r19, $r55;
        java.util.Set $r12;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r15;
        androidx.compose.runtime.snapshots.StateObject $r16, $r18;
        java.lang.Throwable $r30, $r31, $r32, r58;
        java.lang.Iterable $r33;
        kotlin.Pair r39;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r40, r44;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap r46, r52;
        kotlin.Unit $r47, $r51;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder r49;
        androidx.compose.runtime.snapshots.Snapshot r57;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r33 = (java.lang.Iterable) r1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r33, 10);

        $i2 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i1);

        i5 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i2, 16);

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>(int)>(i5);

        r34 = (java.util.Map) $r8;

        r35 = interfaceinvoke $r33.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r37 = r34;

        r38 = (java.util.Map$Entry) r36;

        $r26 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        r39 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r26, $r27);

        $r28 = virtualinvoke r39.<kotlin.Pair: java.lang.Object getFirst()>();

        $r29 = virtualinvoke r39.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        goto label01;

     label02:
        r2 = r34;

        $r40 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        z4 = 0;

     label03:
        r42 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        entermonitor r42;

     label04:
        r44 = $r40;

        $r9 = virtualinvoke r44.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r10 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r9;

        $r19 = (androidx.compose.runtime.snapshots.StateRecord) $r10;

        $r11 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r19);

        r45 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r11;

        r46 = virtualinvoke r45.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap getMap$runtime_release()>();

        i6 = virtualinvoke r45.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $r47 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label05:
        exitmonitor r42;

        goto label08;

     label06:
        $r30 := @caughtexception;

     label07:
        exitmonitor r42;

        throw $r30;

     label08:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r46);

        r49 = interfaceinvoke r46.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder builder()>();

        r3 = (java.util.Map) r49;

        $r12 = virtualinvoke $r40.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r20 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r20;

        r50 = r5;

        $r21 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r21);

        if $z2 == 0 goto label10;

        $r23 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        $r25 = interfaceinvoke r50.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r24, $r25);

        if $z3 != 0 goto label11;

     label10:
        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        if $z6 == 0 goto label09;

        $r22 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r22);

        z4 = 1;

        goto label09;

     label13:
        $r51 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        r52 = interfaceinvoke r49.<androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap$Builder: androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap build()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r52, r46);

        if $z1 != 0 goto label26;

        r53 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotStateMapKt: java.lang.Object access$getSync$p()>();

        entermonitor r53;

     label14:
        $r13 = virtualinvoke $r40.<androidx.compose.runtime.snapshots.SnapshotStateMap: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r13, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.SnapshotStateMap.StateMapStateRecord<K of androidx.compose.runtime.snapshots.SnapshotStateMap, V of androidx.compose.runtime.snapshots.SnapshotStateMap>");

        $r14 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r13;

        $r55 = (androidx.compose.runtime.snapshots.StateRecord) $r14;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r56 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r6 = r56;

        entermonitor r6;

     label15:
        $r15 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r57 = virtualinvoke $r15.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r16 = (androidx.compose.runtime.snapshots.StateObject) $r40;

        $r17 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r55, $r16, r57);

        $r7 = (androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord) $r17;

        $i3 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        if $i3 != i6 goto label16;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setMap$runtime_release(androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentMap)>(r52);

        i0 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: int getModification$runtime_release()>();

        $i4 = i0 + 1;

        virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotStateMap$StateMapStateRecord: void setModification$runtime_release(int)>($i4);

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        z8 = $z7;

     label18:
        exitmonitor r6;

        goto label21;

     label19:
        $r32 := @caughtexception;

        r58 = $r32;

     label20:
        exitmonitor r6;

        throw r58;

     label21:
        $r18 = (androidx.compose.runtime.snapshots.StateObject) $r40;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r57, $r18);

     label22:
        exitmonitor r53;

        goto label25;

     label23:
        $r31 := @caughtexception;

     label24:
        exitmonitor r53;

        throw $r31;

     label25:
        if z8 == 0 goto label03;

     label26:
        goto label27;

     label27:
        return z4;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label15 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label14 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public boolean contains(java.util.Map$Entry)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Map$Entry r1;
        androidx.compose.runtime.snapshots.SnapshotStateMap $r2;
        java.lang.Object $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Map$Entry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: androidx.compose.runtime.snapshots.SnapshotStateMap getMap()>();

        $r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotStateMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Collection r1, $r6;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.Map$Entry r5;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "elements");

        $r2 = (java.lang.Iterable) r1;

        $r6 = (java.util.Collection) $r2;

        $z2 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $z5 = 1;

        goto label4;

     label1:
        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) r4;

        $z4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: boolean contains(java.lang.Object)>(r5);

        if $z4 != 0 goto label2;

        $z5 = 0;

        goto label4;

     label3:
        $z5 = 1;

     label4:
        return $z5;
    }

    public volatile boolean add(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.lang.Object r1;
        java.util.Map$Entry $r2;
        java.lang.Void $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $r3 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: java.lang.Void add(java.util.Map$Entry)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public volatile boolean addAll(java.util.Collection)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.util.Collection r1;
        java.lang.Void $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.util.Collection;

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: java.lang.Void addAll(java.util.Collection)>(r1);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public final volatile boolean remove(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.Map$Entry $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMapEntry(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) r1;

        $z1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: boolean remove(java.util.Map$Entry)>($r2);

        return $z1;
    }

    public final volatile boolean contains(java.lang.Object)
    {
        androidx.compose.runtime.snapshots.SnapshotMapEntrySet r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.Map$Entry $r2;

        r0 := @this: androidx.compose.runtime.snapshots.SnapshotMapEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMapEntry(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (java.util.Map$Entry) r1;

        $z1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotMapEntrySet: boolean contains(java.util.Map$Entry)>($r2);

        return $z1;
    }

