androidx.media3.test.utils.FakeAudioRenderer
<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>
<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>
<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>
<androidx.media3.test.utils.FakeAudioRenderer: boolean notifiedPositionAdvancing>
    public void <init>(androidx.media3.common.util.HandlerWrapper, androidx.media3.exoplayer.audio.AudioRendererEventListener)
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.common.util.HandlerWrapper r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener r2;
        androidx.media3.exoplayer.DecoderCounters $r3;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        r1 := @parameter0: androidx.media3.common.util.HandlerWrapper;

        r2 := @parameter1: androidx.media3.exoplayer.audio.AudioRendererEventListener;

        specialinvoke r0.<androidx.media3.test.utils.FakeRenderer: void <init>(int)>(1);

        r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler> = r1;

        r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener> = r2;

        $r3 = new androidx.media3.exoplayer.DecoderCounters;

        specialinvoke $r3.<androidx.media3.exoplayer.DecoderCounters: void <init>()>();

        r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters> = $r3;

        return;
    }

    protected void onEnabled(boolean, boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        boolean z0, z1;
        androidx.media3.common.util.HandlerWrapper $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<androidx.media3.test.utils.FakeRenderer: void onEnabled(boolean,boolean)>(z0, z1);

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeAudioRenderer)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeAudioRenderer: void lambda$onEnabled$0()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r1.<androidx.media3.common.util.HandlerWrapper: boolean post(java.lang.Runnable)>($r2);

        r0.<androidx.media3.test.utils.FakeAudioRenderer: boolean notifiedPositionAdvancing> = 0;

        return;
    }

    protected void onDisabled()
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.common.util.HandlerWrapper $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        specialinvoke r0.<androidx.media3.test.utils.FakeRenderer: void onDisabled()>();

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeAudioRenderer)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeAudioRenderer: void lambda$onDisabled$1()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r1.<androidx.media3.common.util.HandlerWrapper: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    protected void onFormatChanged(androidx.media3.common.Format)
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.common.Format r1;
        androidx.media3.common.util.HandlerWrapper $r2, $r4;
        java.lang.Runnable $r3, $r5;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeAudioRenderer,androidx.media3.common.Format)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeAudioRenderer: void lambda$onFormatChanged$2(androidx.media3.common.Format)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<androidx.media3.common.util.HandlerWrapper: boolean post(java.lang.Runnable)>($r3);

        $r4 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeAudioRenderer)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeAudioRenderer: void lambda$onFormatChanged$3()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r4.<androidx.media3.common.util.HandlerWrapper: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    protected boolean shouldProcessBuffer(long, long)
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        long l0, l1;
        boolean z0, $z1;
        androidx.media3.common.util.HandlerWrapper $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = specialinvoke r0.<androidx.media3.test.utils.FakeRenderer: boolean shouldProcessBuffer(long,long)>(l0, l1);

        if z0 == 0 goto label1;

        $z1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: boolean notifiedPositionAdvancing>;

        if $z1 != 0 goto label1;

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.common.util.HandlerWrapper handler>;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.test.utils.FakeAudioRenderer)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.test.utils.FakeAudioRenderer: void lambda$shouldProcessBuffer$4()>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r1.<androidx.media3.common.util.HandlerWrapper: boolean post(java.lang.Runnable)>($r2);

        r0.<androidx.media3.test.utils.FakeAudioRenderer: boolean notifiedPositionAdvancing> = 1;

     label1:
        return z0;
    }

    private void lambda$shouldProcessBuffer$4()
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioRendererEventListener $r1;
        long $l0;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioRendererEventListener: void onAudioPositionAdvancing(long)>($l0);

        return;
    }

    private void lambda$onFormatChanged$3()
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.exoplayer.audio.AudioRendererEventListener $r1;
        long $l0;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        interfaceinvoke $r1.<androidx.media3.exoplayer.audio.AudioRendererEventListener: void onAudioDecoderInitialized(java.lang.String,long,long)>("fake.audio.decoder", $l0, 0L);

        return;
    }

    private void lambda$onFormatChanged$2(androidx.media3.common.Format)
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.common.Format r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $r2 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener: void onAudioInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation)>(r1, null);

        return;
    }

    private void lambda$onDisabled$1()
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.exoplayer.DecoderCounters $r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        $r2 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>;

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener: void onAudioDisabled(androidx.media3.exoplayer.DecoderCounters)>($r1);

        return;
    }

    private void lambda$onEnabled$0()
    {
        androidx.media3.test.utils.FakeAudioRenderer r0;
        androidx.media3.exoplayer.DecoderCounters $r1;
        androidx.media3.exoplayer.audio.AudioRendererEventListener $r2;

        r0 := @this: androidx.media3.test.utils.FakeAudioRenderer;

        $r2 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.audio.AudioRendererEventListener eventListener>;

        $r1 = r0.<androidx.media3.test.utils.FakeAudioRenderer: androidx.media3.exoplayer.DecoderCounters decoderCounters>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.audio.AudioRendererEventListener: void onAudioEnabled(androidx.media3.exoplayer.DecoderCounters)>($r1);

        return;
    }

