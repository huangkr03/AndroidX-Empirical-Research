android.databinding.tool.store.LayoutInfoLog
<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies>
<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog classInfoLog>
<android.databinding.tool.store.LayoutInfoLog: com.google.gson.Gson GSON>
<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion>
    public final android.databinding.tool.store.GenClassInfoLog getClassInfoLog()
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        android.databinding.tool.store.GenClassInfoLog $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        $r1 = r0.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog classInfoLog>;

        return $r1;
    }

    public final void addDependency(java.lang.String, java.lang.String)
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        java.lang.String r1, r2;
        java.util.Map $r3;
        java.lang.Object r4, $r10;
        java.util.Set $r5, $r7;
        java.util.SortedMap $r6;
        java.util.LinkedHashSet $r8;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "fromLayout");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r2, "toLayout");

        $r6 = r0.<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies>;

        $r3 = (java.util.Map) $r6;

        r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r4 != null goto label1;

        $r8 = new java.util.LinkedHashSet;

        specialinvoke $r8.<java.util.LinkedHashSet: void <init>()>();

        $r5 = (java.util.Set) $r8;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        $r10 = $r5;

        goto label2;

     label1:
        $r10 = r4;

     label2:
        $r7 = (java.util.Set) $r10;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public final java.util.Collection getDependencies(java.lang.String)
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        java.lang.String r1;
        java.util.SortedMap $r2;
        java.lang.Object $r3;
        java.util.Set $r4;
        java.util.List $r5;
        java.util.Collection $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "infoFileName");

        $r2 = r0.<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies>;

        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        if $r4 == null goto label1;

        $r6 = (java.util.Collection) $r4;

        goto label2;

     label1:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r6 = (java.util.Collection) $r5;

     label2:
        return $r6;
    }

    public final void serialize(java.io.File)
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        java.io.File r1, r9, r11;
        boolean $z0;
        java.io.FileOutputStream $r2;
        java.io.OutputStreamWriter $r3, r15;
        android.databinding.tool.store.LayoutInfoLog$Companion $r4;
        com.google.gson.Gson $r5;
        java.lang.Appendable $r6;
        java.lang.Throwable $r7, $r8, r14, r17, r18, r19;
        java.nio.charset.Charset r10;
        java.io.OutputStream r12;
        java.io.Closeable r13;
        kotlin.Unit r16;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        r1 := @parameter0: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "file");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        r9 = r1;

        r10 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_16>;

        r11 = r9;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r11);

        r12 = (java.io.OutputStream) $r2;

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r12, r10);

        r13 = (java.io.Closeable) $r3;

        r14 = (java.lang.Throwable) null;

     label2:
        r15 = (java.io.OutputStreamWriter) r13;

        $r4 = <android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion>;

        $r5 = staticinvoke <android.databinding.tool.store.LayoutInfoLog$Companion: com.google.gson.Gson access$getGSON$p(android.databinding.tool.store.LayoutInfoLog$Companion)>($r4);

        $r6 = (java.lang.Appendable) r15;

        virtualinvoke $r5.<com.google.gson.Gson: void toJson(java.lang.Object,java.lang.Appendable)>(r0, $r6);

        r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r13, r14);

        goto label7;

     label4:
        $r7 := @caughtexception;

        r17 = $r7;

        r18 = r17;

        throw r17;

     label5:
        $r8 := @caughtexception;

        r19 = $r8;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r13, r18);

        throw r19;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final java.util.Set getLayoutsThatDependOn(java.util.Set)
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        java.util.Set r1, r2;
        java.util.LinkedHashSet $r3;
        android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1 $r4;
        java.util.SortedMap $r5;
        java.util.function.BiConsumer $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        r1 := @parameter0: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "layouts");

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r2 = (java.util.Set) $r3;

        $r5 = r0.<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies>;

        $r4 = new android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1;

        specialinvoke $r4.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: void <init>(java.util.Set,java.util.Set)>(r1, r2);

        $r6 = (java.util.function.BiConsumer) $r4;

        interfaceinvoke $r5.<java.util.SortedMap: void forEach(java.util.function.BiConsumer)>($r6);

        return r2;
    }

    public final void addAll(android.databinding.tool.store.LayoutInfoLog)
    {
        android.databinding.tool.store.LayoutInfoLog r0, r1;
        android.databinding.tool.store.GenClassInfoLog $r2, $r3;
        android.databinding.tool.store.LayoutInfoLog$addAll$1 $r4;
        java.util.SortedMap $r5;
        java.util.function.BiConsumer $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        r1 := @parameter0: android.databinding.tool.store.LayoutInfoLog;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "other");

        $r3 = r0.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog classInfoLog>;

        $r2 = r1.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog classInfoLog>;

        virtualinvoke $r3.<android.databinding.tool.store.GenClassInfoLog: void addAll(android.databinding.tool.store.GenClassInfoLog)>($r2);

        $r5 = r1.<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies>;

        $r4 = new android.databinding.tool.store.LayoutInfoLog$addAll$1;

        specialinvoke $r4.<android.databinding.tool.store.LayoutInfoLog$addAll$1: void <init>(android.databinding.tool.store.LayoutInfoLog)>(r0);

        $r6 = (java.util.function.BiConsumer) $r4;

        interfaceinvoke $r5.<java.util.SortedMap: void forEach(java.util.function.BiConsumer)>($r6);

        return;
    }

    public void <init>()
    {
        android.databinding.tool.store.LayoutInfoLog r0;
        kotlin.Pair[] $r1;
        java.util.SortedMap $r2;
        android.databinding.tool.store.GenClassInfoLog $r3;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (kotlin.Pair)[0];

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.SortedMap sortedMapOf(kotlin.Pair[])>($r1);

        r0.<android.databinding.tool.store.LayoutInfoLog: java.util.SortedMap dependencies> = $r2;

        $r3 = new android.databinding.tool.store.GenClassInfoLog;

        specialinvoke $r3.<android.databinding.tool.store.GenClassInfoLog: void <init>(java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r0.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog classInfoLog> = $r3;

        return;
    }

    static void <clinit>()
    {
        android.databinding.tool.store.LayoutInfoLog$Companion $r0;
        com.google.gson.GsonBuilder $r1, $r2, $r4, $r5;
        com.google.gson.FieldNamingPolicy $r3;
        com.google.gson.Gson $r6;

        $r0 = new android.databinding.tool.store.LayoutInfoLog$Companion;

        specialinvoke $r0.<android.databinding.tool.store.LayoutInfoLog$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion> = $r0;

        $r1 = new com.google.gson.GsonBuilder;

        specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableHtmlEscaping()>();

        $r3 = <com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES>;

        $r4 = virtualinvoke $r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)>($r3);

        $r5 = virtualinvoke $r4.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()>();

        $r6 = virtualinvoke $r5.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>();

        <android.databinding.tool.store.LayoutInfoLog: com.google.gson.Gson GSON> = $r6;

        return;
    }

    public static final com.google.gson.Gson access$getGSON$cp()
    {
        com.google.gson.Gson $r0;

        $r0 = <android.databinding.tool.store.LayoutInfoLog: com.google.gson.Gson GSON>;

        return $r0;
    }

    public static final android.databinding.tool.store.LayoutInfoLog fromFile(java.io.File)
    {
        java.io.File r0;
        android.databinding.tool.store.LayoutInfoLog$Companion $r1;
        android.databinding.tool.store.LayoutInfoLog $r2;

        r0 := @parameter0: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r0, "file");

        $r1 = <android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion>;

        $r2 = virtualinvoke $r1.<android.databinding.tool.store.LayoutInfoLog$Companion: android.databinding.tool.store.LayoutInfoLog fromFile(java.io.File)>(r0);

        return $r2;
    }

android.databinding.tool.store.LayoutInfoLog$addAll$1
<android.databinding.tool.store.LayoutInfoLog$addAll$1: android.databinding.tool.store.LayoutInfoLog this$0>
    public volatile void accept(java.lang.Object, java.lang.Object)
    {
        android.databinding.tool.store.LayoutInfoLog$addAll$1 r0;
        java.lang.Object r1, r2;
        java.util.Set $r3;
        java.lang.String $r4;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$addAll$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.util.Set) r2;

        virtualinvoke r0.<android.databinding.tool.store.LayoutInfoLog$addAll$1: void accept(java.lang.String,java.util.Set)>($r4, $r3);

        return;
    }

    public final void accept(java.lang.String, java.util.Set)
    {
        android.databinding.tool.store.LayoutInfoLog$addAll$1 r0;
        java.lang.String r1, r6;
        java.util.Set r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0;
        android.databinding.tool.store.LayoutInfoLog $r7;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$addAll$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r2, "value");

        $r3 = (java.lang.Iterable) r2;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) r5;

        $r7 = r0.<android.databinding.tool.store.LayoutInfoLog$addAll$1: android.databinding.tool.store.LayoutInfoLog this$0>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r1, "key");

        virtualinvoke $r7.<android.databinding.tool.store.LayoutInfoLog: void addDependency(java.lang.String,java.lang.String)>(r1, r6);

        goto label1;

     label2:
        return;
    }

    void <init>(android.databinding.tool.store.LayoutInfoLog)
    {
        android.databinding.tool.store.LayoutInfoLog$addAll$1 r0;
        android.databinding.tool.store.LayoutInfoLog r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$addAll$1;

        r1 := @parameter0: android.databinding.tool.store.LayoutInfoLog;

        r0.<android.databinding.tool.store.LayoutInfoLog$addAll$1: android.databinding.tool.store.LayoutInfoLog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

android.databinding.tool.store.LayoutInfoLog$Companion
    private final com.google.gson.Gson getGSON()
    {
        android.databinding.tool.store.LayoutInfoLog$Companion r0;
        com.google.gson.Gson $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$Companion;

        $r1 = staticinvoke <android.databinding.tool.store.LayoutInfoLog: com.google.gson.Gson access$getGSON$cp()>();

        return $r1;
    }

    public final android.databinding.tool.store.LayoutInfoLog fromFile(java.io.File)
    {
        android.databinding.tool.store.LayoutInfoLog$Companion r0, $r4;
        java.io.File r1, r11, r13;
        boolean $z0;
        java.io.FileInputStream $r2;
        java.io.InputStreamReader $r3, r17;
        com.google.gson.Gson $r5;
        java.io.Reader $r6;
        java.lang.Object $r7;
        android.databinding.tool.store.LayoutInfoLog $r8, r18;
        java.lang.Throwable $r9, $r10, r16, r19, r20, r21;
        java.nio.charset.Charset r12;
        java.io.InputStream r14;
        java.io.Closeable r15;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$Companion;

        r1 := @parameter0: java.io.File;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "file");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r8 = new android.databinding.tool.store.LayoutInfoLog;

        specialinvoke $r8.<android.databinding.tool.store.LayoutInfoLog: void <init>()>();

        return $r8;

     label1:
        r11 = r1;

        r12 = <kotlin.text.Charsets: java.nio.charset.Charset UTF_16>;

        r13 = r11;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>(r13);

        r14 = (java.io.InputStream) $r2;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r14, r12);

        r15 = (java.io.Closeable) $r3;

        r16 = (java.lang.Throwable) null;

     label2:
        r17 = (java.io.InputStreamReader) r15;

        $r4 = <android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion>;

        $r5 = specialinvoke $r4.<android.databinding.tool.store.LayoutInfoLog$Companion: com.google.gson.Gson getGSON()>();

        $r6 = (java.io.Reader) r17;

        $r7 = virtualinvoke $r5.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)>($r6, class "Landroid/databinding/tool/store/LayoutInfoLog;");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r7, "GSON.fromJson(it, LayoutInfoLog::class.java)");

        r18 = (android.databinding.tool.store.LayoutInfoLog) $r7;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r15, r16);

        goto label7;

     label4:
        $r9 := @caughtexception;

        r19 = $r9;

        r20 = r19;

        throw r19;

     label5:
        $r10 := @caughtexception;

        r21 = $r10;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r15, r20);

        throw r21;

     label7:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r18, "file.reader(Charsets.UTF\u2026class.java)\n            }");

        return r18;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void <init>()
    {
        android.databinding.tool.store.LayoutInfoLog$Companion r0;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final com.google.gson.Gson access$getGSON$p(android.databinding.tool.store.LayoutInfoLog$Companion)
    {
        android.databinding.tool.store.LayoutInfoLog$Companion $r0;
        com.google.gson.Gson $r1;

        $r0 := @parameter0: android.databinding.tool.store.LayoutInfoLog$Companion;

        $r1 = specialinvoke $r0.<android.databinding.tool.store.LayoutInfoLog$Companion: com.google.gson.Gson getGSON()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        android.databinding.tool.store.LayoutInfoLog$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<android.databinding.tool.store.LayoutInfoLog$Companion: void <init>()>();

        return;
    }

android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1
<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $layouts>
<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $result>
    public volatile void accept(java.lang.Object, java.lang.Object)
    {
        android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1 r0;
        java.lang.Object r1, r2;
        java.util.Set $r3;
        java.lang.String $r4;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.util.Set) r2;

        virtualinvoke r0.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: void accept(java.lang.String,java.util.Set)>($r4, $r3);

        return;
    }

    public final void accept(java.lang.String, java.util.Set)
    {
        android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1 r0;
        java.lang.String r1, r6;
        java.util.Set r2, $r7, $r8;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0, $z2, $z3, $z4, $z5;
        java.util.Collection $r9;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r2, "toList");

        $r3 = (java.lang.Iterable) r2;

        $z0 = $r3 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r9 = (java.util.Collection) $r3;

        $z3 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label1;

        $z4 = 0;

        goto label5;

     label1:
        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) r5;

        $r8 = r0.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $layouts>;

        $z2 = interfaceinvoke $r8.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z2 == 0 goto label3;

        $z4 = 1;

        goto label5;

     label3:
        goto label2;

     label4:
        $z4 = 0;

     label5:
        if $z4 == 0 goto label6;

        $r7 = r0.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $result>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>(r1, "from");

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r1);

     label6:
        return;
    }

    void <init>(java.util.Set, java.util.Set)
    {
        android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1 r0;
        java.util.Set r1, r2;

        r0 := @this: android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        r0.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $layouts> = r1;

        r0.<android.databinding.tool.store.LayoutInfoLog$getLayoutsThatDependOn$1: java.util.Set $result> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

