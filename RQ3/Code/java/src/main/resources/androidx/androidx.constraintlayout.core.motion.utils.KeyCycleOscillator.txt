androidx.constraintlayout.core.motion.utils.KeyCycleOscillator
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mType>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mWaveShape>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mWaveString>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>
    public void <init>()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mWaveShape> = 0;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mWaveString> = null;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints> = $r1;

        return;
    }

    public static androidx.constraintlayout.core.motion.utils.KeyCycleOscillator makeWidgetCycle(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline $r1;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("pathRotate");

        if $z0 == 0 goto label1;

        $r2 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: void <init>(java.lang.String)>(r0);

        return $r2;

     label1:
        $r1 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline;

        specialinvoke $r1.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: void <init>(java.lang.String)>(r0);

        return $r1;
    }

    public boolean variesByPath()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        $i0 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        java.text.DecimalFormat r1, $r4;
        java.util.Iterator r2;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint r3;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        int $i0;
        float $f0;
        double $d0;
        java.lang.String $r12, r15;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        r15 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mType>;

        $r4 = new java.text.DecimalFormat;

        specialinvoke $r4.<java.text.DecimalFormat: void <init>(java.lang.String)>("##.##");

        r1 = $r4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r3.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ");

        $f0 = r3.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mValue>;

        $d0 = (double) $f0;

        $r12 = virtualinvoke r1.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return r15;
    }

    public void setType(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        java.lang.String r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mType> = r1;

        return;
    }

    public float get(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        float f0, $f1;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator $r1;
        double $d0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $d0 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double getValues(float)>(f0);

        $f1 = (float) $d0;

        return $f1;
    }

    public float getSlope(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        float f0, $f1;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator $r1;
        double $d0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $d0 = virtualinvoke $r1.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double getSlope(float)>(f0);

        $f1 = (float) $d0;

        return $f1;
    }

    public androidx.constraintlayout.core.motion.utils.CurveFit getCurveFit()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        return $r1;
    }

    protected void setCustom(java.lang.Object)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        java.lang.Object r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void setPoint(int, int, java.lang.String, int, float, float, float, float, java.lang.Object)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        int i0, i1, i2;
        java.lang.String r1;
        float f0, f1, f2, f3;
        java.lang.Object r2;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint $r3;
        java.util.ArrayList $r4;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        f3 := @parameter7: float;

        r2 := @parameter8: java.lang.Object;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r3 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint;

        specialinvoke $r3.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: void <init>(int,float,float,float,float)>(i0, f0, f1, f2, f3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        if i2 == -1 goto label1;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy> = i2;

     label1:
        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mWaveShape> = i1;

        virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: void setCustom(java.lang.Object)>(r2);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mWaveString> = r1;

        return;
    }

    public void setPoint(int, int, java.lang.String, int, float, float, float, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        int i0, i1, i2;
        java.lang.String r1;
        float f0, f1, f2, f3;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint $r2;
        java.util.ArrayList $r3;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        f3 := @parameter7: float;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r2 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: void <init>(int,float,float,float,float)>(i0, f0, f1, f2, f3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        if i2 == -1 goto label1;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy> = i2;

     label1:
        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mWaveShape> = i1;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mWaveString> = r1;

        return;
    }

    public void setup(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int i0, $i1, $i2, $i3, i4;
        double[] r1, $r14, $r15, $r16;
        double[][] r2;
        java.util.Iterator r3;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint r4;
        java.util.ArrayList $r5, $r7, $r10;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1 $r6;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator $r8, $r11, $r17;
        java.lang.String $r9;
        boolean $z0;
        androidx.constraintlayout.core.motion.utils.CurveFit $r12;
        java.lang.Object $r13;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        f0 := @parameter0: float;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        $r6 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1;

        specialinvoke $r6.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1: void <init>(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r7, $r6);

        r1 = newarray (double)[i0];

        r2 = newmultiarray (double)[i0][3];

        $r8 = new androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        $i2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mWaveShape>;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.lang.String mWaveString>;

        $i1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: int mVariesBy>;

        specialinvoke $r8.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: void <init>(int,java.lang.String,int,int)>($i2, $r9, $i1, i0);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator> = $r8;

        i4 = 0;

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: java.util.ArrayList mWavePoints>;

        r3 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) $r13;

        $f1 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPeriod>;

        $d0 = (double) $f1;

        $d1 = $d0 * 0.01;

        r1[i4] = $d1;

        $r14 = r2[i4];

        $f2 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mValue>;

        $d2 = (double) $f2;

        $r14[0] = $d2;

        $r15 = r2[i4];

        $f3 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mOffset>;

        $d3 = (double) $f3;

        $r15[1] = $d3;

        $r16 = r2[i4];

        $f4 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPhase>;

        $d4 = (double) $f4;

        $r16[2] = $d4;

        $r17 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        $i3 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition>;

        $f8 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPeriod>;

        $f7 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mOffset>;

        $f6 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPhase>;

        $f5 = r4.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mValue>;

        virtualinvoke $r17.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: void setPoint(int,int,float,float,float,float)>(i4, $i3, $f8, $f7, $f6, $f5);

        i4 = i4 + 1;

        goto label2;

     label3:
        $r11 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator mCycleOscillator>;

        virtualinvoke $r11.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: void setup(float)>(f0);

        $r12 = staticinvoke <androidx.constraintlayout.core.motion.utils.CurveFit: androidx.constraintlayout.core.motion.utils.CurveFit get(int,double[],double[][])>(0, r1, r2);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit> = $r12;

        return;
    }

    public void setProperty(androidx.constraintlayout.core.motion.MotionWidget, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        float f0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        f0 := @parameter1: float;

        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator this$0>
    void <init>(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1 r0;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator r1;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1;

        r1 := @parameter0: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint, androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1 r0;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1;

        r1 := @parameter0: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint;

        r2 := @parameter1: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint;

        $i1 = r1.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition>;

        $i0 = r2.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition>;

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1 r0;
        java.lang.Object r1, r2;
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint $r3, $r4;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) r1;

        $r3 = (androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint) r2;

        $i0 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$1: int compare(androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint,androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint)>($r4, $r3);

        return $i0;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: java.lang.String type>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: int typeId>
    public void <init>(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: java.lang.String type> = r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: java.lang.String type>;

        $i0 = staticinvoke <androidx.constraintlayout.core.motion.utils.TypedValues$CycleType: int getId(java.lang.String)>($r2);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: int typeId> = $i0;

        return;
    }

    public void setProperty(androidx.constraintlayout.core.motion.MotionWidget, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        float f0, $f1;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        f0 := @parameter1: float;

        $i0 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: int typeId>;

        $f1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CoreSpline: float get(float)>(f0);

        virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: boolean setValue(int,float)>($i0, $f1);

        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int UNSET>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: java.lang.String TAG>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int mVariesBy>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int OFFST>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int PHASE>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int VALUE>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mOffset>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPhase>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mScale>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int mWaveShape>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float mPathLength>
    void <init>(int, java.lang.String, int, int)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        int i0, i1, i2;
        java.lang.String r1;
        androidx.constraintlayout.core.motion.utils.Oscillator $r2, $r3;
        float[] $r4, $r6, $r7, $r8, $r9;
        double[] $r5;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.constraintlayout.core.motion.utils.Oscillator;

        specialinvoke $r2.<androidx.constraintlayout.core.motion.utils.Oscillator: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator> = $r2;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int OFFST> = 0;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int PHASE> = 1;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int VALUE> = 2;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int mWaveShape> = i0;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: int mVariesBy> = i1;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        virtualinvoke $r3.<androidx.constraintlayout.core.motion.utils.Oscillator: void setType(int,java.lang.String)>(i0, r1);

        $r4 = newarray (float)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues> = $r4;

        $r5 = newarray (double)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition> = $r5;

        $r6 = newarray (float)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod> = $r6;

        $r7 = newarray (float)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mOffset> = $r7;

        $r8 = newarray (float)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPhase> = $r8;

        $r9 = newarray (float)[i2];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mScale> = $r9;

        return;
    }

    public double getValues(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        float f0, $f1, $f2, $f3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1, $r13;
        float[] $r2, $r4, $r6;
        double[] $r3, $r5, $r7, $r8, $r9, $r11, $r12;
        androidx.constraintlayout.core.motion.utils.Oscillator $r10;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        if $r1 == null goto label1;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        $d10 = (double) f0;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        virtualinvoke $r13.<androidx.constraintlayout.core.motion.utils.CurveFit: void getPos(double,double[])>($d10, $r12);

        goto label2;

     label1:
        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $f1 = $r2[0];

        $d3 = (double) $f1;

        $r3[0] = $d3;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPhase>;

        $f2 = $r4[0];

        $d4 = (double) $f2;

        $r5[1] = $d4;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $r6 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $f3 = $r6[0];

        $d5 = (double) $f3;

        $r7[2] = $d5;

     label2:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        d0 = $r8[0];

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        d1 = $r9[1];

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $d6 = (double) f0;

        d2 = virtualinvoke $r10.<androidx.constraintlayout.core.motion.utils.Oscillator: double getValue(double,double)>($d6, d1);

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d7 = $r11[2];

        $d8 = d2 * $d7;

        $d9 = d0 + $d8;

        return $d9;
    }

    public double getLastPhase()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        double[] $r1;
        double $d0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d0 = $r1[1];

        return $d0;
    }

    public double getSlope(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        float f0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        androidx.constraintlayout.core.motion.utils.CurveFit $r1, $r14, $r16;
        double[] $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r15;
        androidx.constraintlayout.core.motion.utils.Oscillator $r6, $r9;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        if $r1 == null goto label1;

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        $d14 = (double) f0;

        $r13 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        virtualinvoke $r14.<androidx.constraintlayout.core.motion.utils.CurveFit: void getSlope(double,double[])>($d14, $r13);

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit>;

        $d15 = (double) f0;

        $r15 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        virtualinvoke $r16.<androidx.constraintlayout.core.motion.utils.CurveFit: void getPos(double,double[])>($d15, $r15);

        goto label2;

     label1:
        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $r2[0] = 0.0;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $r3[1] = 0.0;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $r4[2] = 0.0;

     label2:
        $r6 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $d3 = (double) f0;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d2 = $r5[1];

        d0 = virtualinvoke $r6.<androidx.constraintlayout.core.motion.utils.Oscillator: double getValue(double,double)>($d3, $d2);

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $d6 = (double) f0;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d5 = $r7[1];

        $r8 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $d4 = $r8[1];

        d1 = virtualinvoke $r9.<androidx.constraintlayout.core.motion.utils.Oscillator: double getSlope(double,double,double)>($d6, $d5, $d4);

        $r10 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $d9 = $r10[0];

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache>;

        $d7 = $r11[2];

        $d8 = d0 * $d7;

        $d12 = $d9 + $d8;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache>;

        $d10 = $r12[2];

        $d11 = d1 * $d10;

        $d13 = $d12 + $d11;

        return $d13;
    }

    public void setPoint(int, int, float, float, float, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        int i0, i1;
        float f0, f1, f2, f3;
        double $d0, $d1;
        double[] $r1;
        float[] $r2, $r3, $r4, $r5;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        $r1 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d0 = (double) i1;

        $d1 = $d0 / 100.0;

        $r1[i0] = $d1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $r2[i0] = f0;

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $r3[i0] = f1;

        $r4 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPhase>;

        $r4[i0] = f2;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $r5[i0] = f3;

        return;
    }

    public void setup(float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        double[][] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, i10, $i11;
        double[] $r2, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r17, $r19, $r20;
        float[] $r3, $r5, $r14, $r16, $r18, $r21, $r23, $r25;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b6, $b8;
        androidx.constraintlayout.core.motion.utils.Oscillator $r10, $r22, $r24, $r26;
        androidx.constraintlayout.core.motion.utils.CurveFit $r13;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float mPathLength> = f0;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i1 = lengthof $r2;

        r1 = newmultiarray (double)[$i1][3];

        $r3 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $i2 = lengthof $r3;

        $i3 = 2 + $i2;

        $r4 = newarray (double)[$i3];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineValueCache> = $r4;

        $r5 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $i4 = lengthof $r5;

        $i5 = 2 + $i4;

        $r6 = newarray (double)[$i5];

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mSplineSlopeCache> = $r6;

        $r7 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d0 = $r7[0];

        $b6 = $d0 cmpl 0.0;

        if $b6 <= 0 goto label1;

        $r26 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $r25 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f6 = $r25[0];

        virtualinvoke $r26.<androidx.constraintlayout.core.motion.utils.Oscillator: void addPoint(double,float)>(0.0, $f6);

     label1:
        $r8 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i7 = lengthof $r8;

        i0 = $i7 - 1;

        $r9 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d1 = $r9[i0];

        $b8 = $d1 cmpg 1.0;

        if $b8 >= 0 goto label2;

        $r24 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $r23 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f5 = $r23[i0];

        virtualinvoke $r24.<androidx.constraintlayout.core.motion.utils.Oscillator: void addPoint(double,float)>(1.0, $f5);

     label2:
        i10 = 0;

     label3:
        $i11 = lengthof r1;

        if i10 >= $i11 goto label4;

        $r15 = r1[i10];

        $r14 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mOffset>;

        $f1 = $r14[i10];

        $d2 = (double) $f1;

        $r15[0] = $d2;

        $r17 = r1[i10];

        $r16 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPhase>;

        $f2 = $r16[i10];

        $d3 = (double) $f2;

        $r17[1] = $d3;

        $r19 = r1[i10];

        $r18 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mValues>;

        $f3 = $r18[i10];

        $d4 = (double) $f3;

        $r19[2] = $d4;

        $r22 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        $r20 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $d5 = $r20[i10];

        $r21 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: float[] mPeriod>;

        $f4 = $r21[i10];

        virtualinvoke $r22.<androidx.constraintlayout.core.motion.utils.Oscillator: void addPoint(double,float)>($d5, $f4);

        i10 = i10 + 1;

        goto label3;

     label4:
        $r10 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.Oscillator mOscillator>;

        virtualinvoke $r10.<androidx.constraintlayout.core.motion.utils.Oscillator: void normalize()>();

        $r11 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $i9 = lengthof $r11;

        if $i9 <= 1 goto label5;

        $r12 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: double[] mPosition>;

        $r13 = staticinvoke <androidx.constraintlayout.core.motion.utils.CurveFit: androidx.constraintlayout.core.motion.utils.CurveFit get(int,double[],double[][])>(0, $r12, r1);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit> = $r13;

        goto label6;

     label5:
        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$CycleOscillator: androidx.constraintlayout.core.motion.utils.CurveFit mCurveFit> = null;

     label6:
        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort
    private void <init>()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort r0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void sort(int[], float[], int, int)
    {
        int[] r0, r2;
        float[] r1;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i8, i9, i10, i11, i12, i13, i14, i15;
        byte b7;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i5 := @parameter2: int;

        i6 := @parameter3: int;

        $i1 = lengthof r0;

        $i2 = $i1 + 10;

        r2 = newarray (int)[$i2];

        b7 = 0;

        i8 = b7 + 1;

        r2[b7] = i6;

        i9 = i8 + 1;

        r2[i8] = i5;

     label1:
        if i9 <= 0 goto label2;

        i10 = i9 + -1;

        i11 = r2[i10];

        i9 = i10 + -1;

        i12 = r2[i9];

        if i11 >= i12 goto label1;

        i0 = staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort: int partition(int[],float[],int,int)>(r0, r1, i11, i12);

        i13 = i9 + 1;

        $i3 = i0 - 1;

        r2[i9] = $i3;

        i14 = i13 + 1;

        r2[i13] = i11;

        i15 = i14 + 1;

        r2[i14] = i12;

        i9 = i15 + 1;

        $i4 = i0 + 1;

        r2[i15] = $i4;

        goto label1;

     label2:
        return;
    }

    private static int partition(int[], float[], int, int)
    {
        int[] r0;
        float[] r1;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = r0[i1];

        i4 = i0;

        i5 = i0;

     label1:
        if i5 >= i1 goto label3;

        $i3 = r0[i5];

        if $i3 > i2 goto label2;

        staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort: void swap(int[],float[],int,int)>(r0, r1, i4, i5);

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntDoubleSort: void swap(int[],float[],int,int)>(r0, r1, i4, i1);

        return i4;
    }

    private static void swap(int[], float[], int, int)
    {
        int[] r0;
        float[] r1;
        int i0, i1, i2, $i3;
        float f0, $f1;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = r0[i0];

        $i3 = r0[i1];

        r0[i0] = $i3;

        r0[i1] = i2;

        f0 = r1[i0];

        $f1 = r1[i1];

        r1[i0] = $f1;

        r1[i1] = f0;

        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort
    private void <init>()
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort r0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void sort(int[], float[], float[], int, int)
    {
        int[] r0, r3;
        float[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i8, i9, i10, i11, i12, i13, i14, i15;
        byte b7;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i5 := @parameter3: int;

        i6 := @parameter4: int;

        $i1 = lengthof r0;

        $i2 = $i1 + 10;

        r3 = newarray (int)[$i2];

        b7 = 0;

        i8 = b7 + 1;

        r3[b7] = i6;

        i9 = i8 + 1;

        r3[i8] = i5;

     label1:
        if i9 <= 0 goto label2;

        i10 = i9 + -1;

        i11 = r3[i10];

        i9 = i10 + -1;

        i12 = r3[i9];

        if i11 >= i12 goto label1;

        i0 = staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort: int partition(int[],float[],float[],int,int)>(r0, r1, r2, i11, i12);

        i13 = i9 + 1;

        $i3 = i0 - 1;

        r3[i9] = $i3;

        i14 = i13 + 1;

        r3[i13] = i11;

        i15 = i14 + 1;

        r3[i14] = i12;

        i9 = i15 + 1;

        $i4 = i0 + 1;

        r3[i15] = $i4;

        goto label1;

     label2:
        return;
    }

    private static int partition(int[], float[], float[], int, int)
    {
        int[] r0;
        float[] r1, r2;
        int i0, i1, i2, $i3, i4, i5;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = r0[i1];

        i4 = i0;

        i5 = i0;

     label1:
        if i5 >= i1 goto label3;

        $i3 = r0[i5];

        if $i3 > i2 goto label2;

        staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>(r0, r1, r2, i4, i5);

        i4 = i4 + 1;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        staticinvoke <androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$IntFloatFloatSort: void swap(int[],float[],float[],int,int)>(r0, r1, r2, i4, i1);

        return i4;
    }

    private static void swap(int[], float[], float[], int, int)
    {
        int[] r0;
        float[] r1, r2;
        int i0, i1, i2, $i3;
        float $f0, $f1, f2, f3;

        r0 := @parameter0: int[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = r0[i0];

        $i3 = r0[i1];

        r0[i0] = $i3;

        r0[i1] = i2;

        f2 = r1[i0];

        $f0 = r1[i1];

        r1[i0] = $f0;

        r1[i1] = f2;

        f3 = r2[i0];

        $f1 = r2[i1];

        r2[i0] = $f1;

        r2[i1] = f3;

        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: java.lang.String type>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: int typeId>
    public void <init>(java.lang.String)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: java.lang.String type> = r1;

        $r2 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: java.lang.String type>;

        $i0 = staticinvoke <androidx.constraintlayout.core.motion.utils.TypedValues$CycleType: int getId(java.lang.String)>($r2);

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: int typeId> = $i0;

        return;
    }

    public void setProperty(androidx.constraintlayout.core.motion.MotionWidget, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        float f0, $f1;
        int $i0;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        f0 := @parameter1: float;

        $i0 = r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: int typeId>;

        $f1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: float get(float)>(f0);

        virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: boolean setValue(int,float)>($i0, $f1);

        return;
    }

    public void setPathRotate(androidx.constraintlayout.core.motion.MotionWidget, float, double, double)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet r0;
        androidx.constraintlayout.core.motion.MotionWidget r1;
        float f0, $f1, $f2, $f3;
        double d0, d1, $d2, $d3;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet;

        r1 := @parameter0: androidx.constraintlayout.core.motion.MotionWidget;

        f0 := @parameter1: float;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $f1 = virtualinvoke r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet: float get(float)>(f0);

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>(d1, d0);

        $d3 = staticinvoke <java.lang.Math: double toDegrees(double)>($d2);

        $f2 = (float) $d3;

        $f3 = $f1 + $f2;

        virtualinvoke r1.<androidx.constraintlayout.core.motion.MotionWidget: void setRotationZ(float)>($f3);

        return;
    }

androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mValue>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mOffset>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPeriod>
<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPhase>
    public void <init>(int, float, float, float, float)
    {
        androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint r0;
        int i0;
        float f0, f1, f2, f3;

        r0 := @this: androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: int mPosition> = i0;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mValue> = f3;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mOffset> = f1;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPeriod> = f0;

        r0.<androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$WavePoint: float mPhase> = f2;

        return;
    }

