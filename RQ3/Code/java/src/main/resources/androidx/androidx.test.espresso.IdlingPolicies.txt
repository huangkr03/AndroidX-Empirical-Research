androidx.test.espresso.IdlingPolicies
<androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy>
<androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>
<androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy>
    public static androidx.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()
    {
        androidx.test.espresso.IdlingPolicy $r0;

        $r0 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>;

        return $r0;
    }

    public static androidx.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()
    {
        androidx.test.espresso.IdlingPolicy $r0;

        $r0 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy>;

        return $r0;
    }

    public static androidx.test.espresso.IdlingPolicy getMasterIdlingPolicy()
    {
        androidx.test.espresso.IdlingPolicy $r0;

        $r0 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.test.espresso.IdlingPolicy$Builder $r0, $r2, $r3, $r5, $r7, $r8, $r10, $r12, $r13, r15, r16, r17;
        java.util.concurrent.TimeUnit $r1, $r6, $r11;
        androidx.test.espresso.IdlingPolicy $r4, $r9, $r14;

        r15 = new androidx.test.espresso.IdlingPolicy$Builder;

        specialinvoke r15.<androidx.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r0 = virtualinvoke r15.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(60L);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = virtualinvoke $r0.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r1);

        $r3 = virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder throwAppNotIdleException()>();

        $r4 = virtualinvoke $r3.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy> = $r4;

        r16 = new androidx.test.espresso.IdlingPolicy$Builder;

        specialinvoke r16.<androidx.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r5 = virtualinvoke r16.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(26L);

        $r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r7 = virtualinvoke $r5.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r6);

        $r8 = virtualinvoke $r7.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder throwIdlingResourceTimeoutException()>();

        $r9 = virtualinvoke $r8.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy> = $r9;

        r17 = new androidx.test.espresso.IdlingPolicy$Builder;

        specialinvoke r17.<androidx.test.espresso.IdlingPolicy$Builder: void <init>()>();

        $r10 = virtualinvoke r17.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(5L);

        $r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r12 = virtualinvoke $r10.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>($r11);

        $r13 = virtualinvoke $r12.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder logWarning()>();

        $r14 = virtualinvoke $r13.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceWarningPolicy> = $r14;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.IdlingPolicies r0;

        r0 := @this: androidx.test.espresso.IdlingPolicies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setIdlingResourceTimeout(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r0;
        byte $b1;
        androidx.test.espresso.IdlingPolicy $r2, $r6;
        androidx.test.espresso.IdlingPolicy$Builder $r3, $r4, $r5;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>(z0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy>;

        $r3 = virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy: androidx.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r4 = virtualinvoke $r3.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(l0);

        $r5 = virtualinvoke $r4.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>(r0);

        $r6 = virtualinvoke $r5.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy dynamicIdlingResourceErrorPolicy> = $r6;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public static void setMasterPolicyTimeout(long, java.util.concurrent.TimeUnit)
    {
        long l0;
        java.util.concurrent.TimeUnit r0;
        byte $b1;
        androidx.test.espresso.IdlingPolicy $r2, $r6;
        androidx.test.espresso.IdlingPolicy$Builder $r3, $r4, $r5;
        boolean z0;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label2;

        z0 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>(z0);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy>;

        $r3 = virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy: androidx.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r4 = virtualinvoke $r3.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeout(long)>(l0);

        $r5 = virtualinvoke $r4.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withIdlingTimeoutUnit(java.util.concurrent.TimeUnit)>(r0);

        $r6 = virtualinvoke $r5.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy> = $r6;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public static void setMasterPolicyTimeoutWhenDebuggerAttached(boolean)
    {
        boolean z0;
        androidx.test.espresso.IdlingPolicy $r0, $r3;
        androidx.test.espresso.IdlingPolicy$Builder $r1, $r2;

        z0 := @parameter0: boolean;

        $r0 = <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy>;

        $r1 = virtualinvoke $r0.<androidx.test.espresso.IdlingPolicy: androidx.test.espresso.IdlingPolicy$Builder toBuilder()>();

        $r2 = virtualinvoke $r1.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy$Builder withTimeoutIfDebuggerAttached(boolean)>(z0);

        $r3 = virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy$Builder: androidx.test.espresso.IdlingPolicy build()>();

        <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy masterIdlingPolicy> = $r3;

        return;
    }

