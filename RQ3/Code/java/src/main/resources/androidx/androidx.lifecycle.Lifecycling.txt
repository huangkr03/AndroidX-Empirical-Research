androidx.lifecycle.Lifecycling
<androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE>
<androidx.lifecycle.Lifecycling: int REFLECTIVE_CALLBACK>
<androidx.lifecycle.Lifecycling: int GENERATED_CALLBACK>
<androidx.lifecycle.Lifecycling: java.util.Map callbackCache>
<androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>
    private void <init>()
    {
        androidx.lifecycle.Lifecycling r0;

        r0 := @this: androidx.lifecycle.Lifecycling;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
    {
        java.lang.Object r0, $r8, $r12, $r16;
        boolean z0, z1;
        java.lang.Class r1;
        int i0, i1, i2, $i3, i4;
        java.util.List r2;
        androidx.lifecycle.GeneratedAdapter[] r3, r29;
        androidx.lifecycle.Lifecycling $r4, $r11, $r15;
        androidx.lifecycle.ReflectiveGenericLifecycleObserver $r5;
        androidx.lifecycle.LifecycleEventObserver $r6, $r10, $r19, $r20, $r23, $r25, $r27;
        java.util.Map $r7;
        androidx.lifecycle.CompositeGeneratedAdaptersObserver $r9;
        java.lang.reflect.Constructor $r13, $r17;
        androidx.lifecycle.GeneratedAdapter $r14, r28;
        androidx.lifecycle.SingleGeneratedAdapterObserver $r18;
        androidx.lifecycle.DefaultLifecycleObserverAdapter $r21, $r24;
        androidx.lifecycle.DefaultLifecycleObserver $r22, $r26;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "object");

        z0 = r0 instanceof androidx.lifecycle.LifecycleEventObserver;

        z1 = r0 instanceof androidx.lifecycle.DefaultLifecycleObserver;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        $r24 = new androidx.lifecycle.DefaultLifecycleObserverAdapter;

        $r26 = (androidx.lifecycle.DefaultLifecycleObserver) r0;

        $r25 = (androidx.lifecycle.LifecycleEventObserver) r0;

        specialinvoke $r24.<androidx.lifecycle.DefaultLifecycleObserverAdapter: void <init>(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>($r26, $r25);

        $r27 = (androidx.lifecycle.LifecycleEventObserver) $r24;

        return $r27;

     label1:
        if z1 == 0 goto label2;

        $r21 = new androidx.lifecycle.DefaultLifecycleObserverAdapter;

        $r22 = (androidx.lifecycle.DefaultLifecycleObserver) r0;

        specialinvoke $r21.<androidx.lifecycle.DefaultLifecycleObserverAdapter: void <init>(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)>($r22, null);

        $r23 = (androidx.lifecycle.LifecycleEventObserver) $r21;

        return $r23;

     label2:
        if z0 == 0 goto label3;

        $r20 = (androidx.lifecycle.LifecycleEventObserver) r0;

        return $r20;

     label3:
        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = <androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE>;

        i0 = specialinvoke $r4.<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>(r1);

        if i0 != 2 goto label7;

        $r7 = <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r8);

        r2 = (java.util.List) $r8;

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 != 1 goto label4;

        $r15 = <androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE>;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (java.lang.reflect.Constructor) $r16;

        r28 = specialinvoke $r15.<androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>($r17, r0);

        $r18 = new androidx.lifecycle.SingleGeneratedAdapterObserver;

        specialinvoke $r18.<androidx.lifecycle.SingleGeneratedAdapterObserver: void <init>(androidx.lifecycle.GeneratedAdapter)>(r28);

        $r19 = (androidx.lifecycle.LifecycleEventObserver) $r18;

        return $r19;

     label4:
        i4 = 0;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = newarray (androidx.lifecycle.GeneratedAdapter)[i1];

     label5:
        if i4 >= i1 goto label6;

        i2 = i4;

        $r11 = <androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE>;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (java.lang.reflect.Constructor) $r12;

        $r14 = specialinvoke $r11.<androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)>($r13, r0);

        r3[i2] = $r14;

        i4 = i4 + 1;

        goto label5;

     label6:
        r29 = r3;

        $r9 = new androidx.lifecycle.CompositeGeneratedAdaptersObserver;

        specialinvoke $r9.<androidx.lifecycle.CompositeGeneratedAdaptersObserver: void <init>(androidx.lifecycle.GeneratedAdapter[])>(r29);

        $r10 = (androidx.lifecycle.LifecycleEventObserver) $r9;

        return $r10;

     label7:
        $r5 = new androidx.lifecycle.ReflectiveGenericLifecycleObserver;

        specialinvoke $r5.<androidx.lifecycle.ReflectiveGenericLifecycleObserver: void <init>(java.lang.Object)>(r0);

        $r6 = (androidx.lifecycle.LifecycleEventObserver) $r5;

        return $r6;
    }

    private final androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor, java.lang.Object)
    {
        androidx.lifecycle.Lifecycling r0;
        java.lang.reflect.Constructor r1;
        java.lang.Object r2, $r4;
        androidx.lifecycle.GeneratedAdapter r3;
        java.lang.Throwable $r5, $r7, $r8, $r10, $r11, $r13, r15, r16, r17;
        java.lang.RuntimeException $r6, $r9, $r12;
        java.lang.Object[] r14;

        r0 := @this: androidx.lifecycle.Lifecycling;

        r1 := @parameter0: java.lang.reflect.Constructor;

        r2 := @parameter1: java.lang.Object;

     label1:
        r14 = newarray (java.lang.Object)[1];

        r14[0] = r2;

        $r4 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "{\n            constructo\u2026tance(`object`)\n        }");

        r3 = (androidx.lifecycle.GeneratedAdapter) $r4;

     label2:
        goto label6;

     label3:
        $r11 := @caughtexception;

        r15 = $r11;

        $r12 = new java.lang.RuntimeException;

        $r13 = (java.lang.Throwable) r15;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r12;

     label4:
        $r5 := @caughtexception;

        r16 = $r5;

        $r6 = new java.lang.RuntimeException;

        $r7 = (java.lang.Throwable) r16;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label5:
        $r8 := @caughtexception;

        r17 = $r8;

        $r9 = new java.lang.RuntimeException;

        $r10 = (java.lang.Throwable) r17;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r9;

     label6:
        return r3;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    private final java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    {
        androidx.lifecycle.Lifecycling r0;
        java.lang.Class r1, r21, r22;
        java.lang.String r2, r3, r16, $r17, $r18, r19, $r20;
        java.lang.Class[] r4;
        java.lang.CharSequence $r5, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r11, $r12, $r14, r25, r26;
        java.lang.RuntimeException $r13;
        java.lang.Package r15;
        java.lang.reflect.Constructor r23, r24;

        r0 := @this: androidx.lifecycle.Lifecycling;

        r1 := @parameter0: java.lang.Class;

     label01:
        r15 = virtualinvoke r1.<java.lang.Class: java.lang.Package getPackage()>();

        r16 = virtualinvoke r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        if r15 == null goto label02;

        $r17 = virtualinvoke r15.<java.lang.Package: java.lang.String getName()>();

        goto label03;

     label02:
        $r17 = "";

     label03:
        r2 = $r17;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "fullPackage");

        $r5 = (java.lang.CharSequence) r2;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 == 0 goto label06;

        $r18 = r16;

        goto label07;

     label06:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r16, "name");

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i1 + 1;

        $r18 = virtualinvoke r16.<java.lang.String: java.lang.String substring(int)>($i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "this as java.lang.String).substring(startIndex)");

     label07:
        r19 = $r18;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r19, "if (fullPackage.isEmpty(\u2026g(fullPackage.length + 1)");

        r3 = staticinvoke <androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)>(r19);

        $r6 = (java.lang.CharSequence) r2;

        $i3 = interfaceinvoke $r6.<java.lang.CharSequence: int length()>();

        if $i3 != 0 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        if $z2 == 0 goto label10;

        $r20 = r3;

        goto label11;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r20);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r21, "null cannot be cast to non-null type java.lang.Class<out androidx.lifecycle.GeneratedAdapter>");

        r22 = r21;

        r4 = newarray (java.lang.Class)[1];

        r4[0] = r1;

        r23 = virtualinvoke r22.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r4);

        $z0 = virtualinvoke r23.<java.lang.reflect.Constructor: boolean isAccessible()>();

        if $z0 != 0 goto label12;

        virtualinvoke r23.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label12:
        r24 = r23;

     label13:
        goto label16;

     label14:
        $r11 := @caughtexception;

        r25 = $r11;

        r24 = null;

        goto label16;

     label15:
        $r12 := @caughtexception;

        r26 = $r12;

        $r13 = new java.lang.RuntimeException;

        $r14 = (java.lang.Throwable) r26;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r13;

     label16:
        return r24;

        catch java.lang.ClassNotFoundException from label01 to label13 with label14;
        catch java.lang.NoSuchMethodException from label01 to label13 with label15;
    }

    private final int getObserverConstructorType(java.lang.Class)
    {
        androidx.lifecycle.Lifecycling r0;
        java.lang.Class r1;
        java.lang.Integer r2, r3;
        int i0, $i1;
        java.util.Map $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.lifecycle.Lifecycling;

        r1 := @parameter0: java.lang.Class;

        $r4 = <androidx.lifecycle.Lifecycling: java.util.Map callbackCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        i0 = specialinvoke r0.<androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)>(r1);

        r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = <androidx.lifecycle.Lifecycling: java.util.Map callbackCache>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return i0;
    }

    private final int resolveObserverCallbackType(java.lang.Class)
    {
        androidx.lifecycle.Lifecycling r0;
        java.lang.Class r1, r3, r5;
        java.lang.reflect.Constructor r2;
        boolean z0, $z1, $z2;
        java.lang.Class[] r4, $r8;
        int i0, $i1, $i2, i3;
        java.lang.String $r6;
        androidx.lifecycle.ClassesInfoCache $r7;
        java.util.Map $r9, $r11, $r16, $r19;
        java.lang.Object $r12, $r17;
        java.util.Collection $r13, $r18;
        java.util.ArrayList $r14, $r15;
        java.util.List $r20, r22;

        r0 := @this: androidx.lifecycle.Lifecycling;

        r1 := @parameter0: java.lang.Class;

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        if $r6 != null goto label01;

        return 1;

     label01:
        r2 = specialinvoke r0.<androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)>(r1);

        if r2 == null goto label02;

        $r19 = <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>;

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>(r2);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r20);

        return 2;

     label02:
        $r7 = <androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance>;

        z0 = virtualinvoke $r7.<androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)>(r1);

        if z0 == 0 goto label03;

        return 1;

     label03:
        r3 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        r22 = null;

        $z1 = specialinvoke r0.<androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>(r3);

        if $z1 == 0 goto label05;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "superclass");

        $i2 = specialinvoke r0.<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>(r3);

        if $i2 != 1 goto label04;

        return 1;

     label04:
        $r15 = new java.util.ArrayList;

        $r16 = <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r17);

        $r18 = (java.util.Collection) $r17;

        specialinvoke $r15.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);

        r22 = (java.util.List) $r15;

     label05:
        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "klass.interfaces");

        r4 = $r8;

        i3 = 0;

        i0 = lengthof r4;

     label06:
        if i3 >= i0 goto label11;

        r5 = r4[i3];

        $z2 = specialinvoke r0.<androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)>(r5);

        if $z2 != 0 goto label07;

        goto label10;

     label07:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r5, "intrface");

        $i1 = specialinvoke r0.<androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)>(r5);

        if $i1 != 1 goto label08;

        return 1;

     label08:
        if r22 != null goto label09;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r22 = (java.util.List) $r14;

     label09:
        $r11 = <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        $r13 = (java.util.Collection) $r12;

        interfaceinvoke r22.<java.util.List: boolean addAll(java.util.Collection)>($r13);

     label10:
        i3 = i3 + 1;

        goto label06;

     label11:
        if r22 == null goto label12;

        $r9 = <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r22);

        return 2;

     label12:
        return 1;
    }

    private final boolean isLifecycleParent(java.lang.Class)
    {
        androidx.lifecycle.Lifecycling r0;
        java.lang.Class r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.lifecycle.Lifecycling;

        r1 := @parameter0: java.lang.Class;

        if r1 == null goto label1;

        $r2 = class "Landroidx/lifecycle/LifecycleObserver;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static final java.lang.String getAdapterName(java.lang.String)
    {
        java.lang.String r0, $r2, $r5;
        java.lang.StringBuilder $r1, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "className");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r0, ".", "_", 0, 4, null);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_LifecycleAdapter");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        androidx.lifecycle.Lifecycling $r0;
        java.util.HashMap $r1, $r3;
        java.util.Map $r2, $r4;

        $r0 = new androidx.lifecycle.Lifecycling;

        specialinvoke $r0.<androidx.lifecycle.Lifecycling: void <init>()>();

        <androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        <androidx.lifecycle.Lifecycling: java.util.Map callbackCache> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        <androidx.lifecycle.Lifecycling: java.util.Map classToAdapters> = $r4;

        return;
    }

