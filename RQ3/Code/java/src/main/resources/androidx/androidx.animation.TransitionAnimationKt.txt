androidx.animation.TransitionAnimationKt
    public static final androidx.animation.Animation createAnimationWrapper(androidx.animation.PropKey, androidx.animation.AnimationSpec, java.lang.Object, androidx.animation.AnimationVector, java.lang.Object)
    {
        androidx.animation.PropKey $r0;
        androidx.animation.AnimationSpec r1;
        java.lang.Object r2, r4, $r8;
        androidx.animation.AnimationVector r3, r5, $r9, $r13;
        androidx.animation.TwoWayConverter $r6, $r11;
        kotlin.jvm.functions.Function1 $r7;
        androidx.animation.TargetBasedAnimation $r10;
        androidx.animation.Animation $r12;

        $r0 := @parameter0: androidx.animation.PropKey;

        r1 := @parameter1: androidx.animation.AnimationSpec;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: androidx.animation.AnimationVector;

        r4 := @parameter4: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this$createAnimationWrapper");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "anim");

        $r13 = r3;

        if r3 == null goto label1;

        goto label2;

     label1:
        $r6 = interfaceinvoke $r0.<androidx.animation.PropKey: androidx.animation.TwoWayConverter getTypeConverter()>();

        $r7 = interfaceinvoke $r6.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r9 = (androidx.animation.AnimationVector) $r8;

        $r13 = staticinvoke <androidx.animation.AnimationVectorsKt: androidx.animation.AnimationVector newInstance(androidx.animation.AnimationVector)>($r9);

     label2:
        r5 = $r13;

        $r10 = new androidx.animation.TargetBasedAnimation;

        $r11 = interfaceinvoke $r0.<androidx.animation.PropKey: androidx.animation.TwoWayConverter getTypeConverter()>();

        specialinvoke $r10.<androidx.animation.TargetBasedAnimation: void <init>(androidx.animation.AnimationSpec,java.lang.Object,java.lang.Object,androidx.animation.AnimationVector,androidx.animation.TwoWayConverter)>(r1, r2, r4, r5, $r11);

        $r12 = (androidx.animation.Animation) $r10;

        return $r12;
    }

