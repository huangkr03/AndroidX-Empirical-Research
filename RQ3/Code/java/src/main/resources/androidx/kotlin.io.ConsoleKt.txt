kotlin.io.ConsoleKt
    private static final void print(byte)
    {
        java.io.PrintStream $r0;
        java.lang.Byte $r1;
        byte $b0;

        $b0 := @parameter0: byte;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.Object)>($r1);

        return;
    }

    private static final void print(char)
    {
        char $c0;
        java.io.PrintStream $r0;

        $c0 := @parameter0: char;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(char)>($c0);

        return;
    }

    private static final void print(double)
    {
        double $d0;
        java.io.PrintStream $r0;

        $d0 := @parameter0: double;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(double)>($d0);

        return;
    }

    private static final void print(float)
    {
        float $f0;
        java.io.PrintStream $r0;

        $f0 := @parameter0: float;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(float)>($f0);

        return;
    }

    private static final void print(int)
    {
        int $i0;
        java.io.PrintStream $r0;

        $i0 := @parameter0: int;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(int)>($i0);

        return;
    }

    private static final void print(long)
    {
        long $l0;
        java.io.PrintStream $r0;

        $l0 := @parameter0: long;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(long)>($l0);

        return;
    }

    private static final void print(java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.Object)>($r0);

        return;
    }

    private static final void print(short)
    {
        java.io.PrintStream $r0;
        java.lang.Short $r1;
        short $s0;

        $s0 := @parameter0: short;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.Object)>($r1);

        return;
    }

    private static final void print(boolean)
    {
        boolean $z0;
        java.io.PrintStream $r0;

        $z0 := @parameter0: boolean;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(boolean)>($z0);

        return;
    }

    private static final void print(char[])
    {
        char[] $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "message");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(char[])>($r0);

        return;
    }

    private static final void println()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println()>();

        return;
    }

    private static final void println(byte)
    {
        java.io.PrintStream $r0;
        java.lang.Byte $r1;
        byte $b0;

        $b0 := @parameter0: byte;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        return;
    }

    private static final void println(char)
    {
        char $c0;
        java.io.PrintStream $r0;

        $c0 := @parameter0: char;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(char)>($c0);

        return;
    }

    private static final void println(double)
    {
        double $d0;
        java.io.PrintStream $r0;

        $d0 := @parameter0: double;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(double)>($d0);

        return;
    }

    private static final void println(float)
    {
        float $f0;
        java.io.PrintStream $r0;

        $f0 := @parameter0: float;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(float)>($f0);

        return;
    }

    private static final void println(int)
    {
        int $i0;
        java.io.PrintStream $r0;

        $i0 := @parameter0: int;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);

        return;
    }

    private static final void println(long)
    {
        long $l0;
        java.io.PrintStream $r0;

        $l0 := @parameter0: long;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(long)>($l0);

        return;
    }

    private static final void println(java.lang.Object)
    {
        java.lang.Object $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>($r0);

        return;
    }

    private static final void println(short)
    {
        java.io.PrintStream $r0;
        java.lang.Short $r1;
        short $s0;

        $s0 := @parameter0: short;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.Object)>($r1);

        return;
    }

    private static final void println(boolean)
    {
        boolean $z0;
        java.io.PrintStream $r0;

        $z0 := @parameter0: boolean;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(boolean)>($z0);

        return;
    }

    private static final void println(char[])
    {
        char[] $r0;
        java.io.PrintStream $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "message");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(char[])>($r0);

        return;
    }

    public static final java.lang.String readLine()
    {
        java.io.InputStream $r0;
        kotlin.io.LineReader $r1;
        java.nio.charset.Charset $r2;
        java.lang.String $r3;

        $r1 = <kotlin.io.LineReader: kotlin.io.LineReader INSTANCE>;

        $r0 = <java.lang.System: java.io.InputStream in>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "`in`");

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "defaultCharset()");

        $r3 = virtualinvoke $r1.<kotlin.io.LineReader: java.lang.String readLine(java.io.InputStream,java.nio.charset.Charset)>($r0, $r2);

        return $r3;
    }

    public static final java.lang.String readln()
    {
        java.lang.String $r0;
        kotlin.io.ReadAfterEOFException r1;
        java.lang.Throwable r2;

        $r0 = staticinvoke <kotlin.io.ConsoleKt: java.lang.String readlnOrNull()>();

        if $r0 == null goto label1;

        return $r0;

     label1:
        r1 = new kotlin.io.ReadAfterEOFException;

        specialinvoke r1.<kotlin.io.ReadAfterEOFException: void <init>(java.lang.String)>("EOF has already been reached");

        r2 = (java.lang.Throwable) r1;

        throw r2;
    }

    public static final java.lang.String readlnOrNull()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <kotlin.io.ConsoleKt: java.lang.String readLine()>();

        return $r0;
    }

