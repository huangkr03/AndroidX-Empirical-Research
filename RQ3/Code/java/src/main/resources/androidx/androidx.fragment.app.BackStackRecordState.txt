androidx.fragment.app.BackStackRecordState
<androidx.fragment.app.BackStackRecordState: java.lang.String TAG>
<androidx.fragment.app.BackStackRecordState: int[] mOps>
<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>
<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates>
<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates>
<androidx.fragment.app.BackStackRecordState: int mTransition>
<androidx.fragment.app.BackStackRecordState: java.lang.String mName>
<androidx.fragment.app.BackStackRecordState: int mIndex>
<androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes>
<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText>
<androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes>
<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText>
<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames>
<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames>
<androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed>
<androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR>
    void <init>(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.BackStackRecordState r0;
        androidx.fragment.app.BackStackRecord r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i19, i20, i21;
        androidx.fragment.app.FragmentTransaction$Op r2;
        java.util.ArrayList $r3, $r5, $r11, $r12, $r13, $r17;
        int[] $r4, $r6, $r7, $r15, $r18, $r19, $r20, $r21, $r22, $r24, $r26;
        boolean $z0, $z1, $z3;
        java.lang.String $r8, $r29;
        java.lang.CharSequence $r9, $r10;
        java.lang.Object $r14;
        androidx.fragment.app.Fragment $r16, $r27;
        androidx.lifecycle.Lifecycle$State $r23, $r25;
        java.lang.IllegalStateException $r28;
        byte $b18;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = i0 * 6;

        $r4 = newarray (int)[$i1];

        r0.<androidx.fragment.app.BackStackRecordState: int[] mOps> = $r4;

        $z0 = r1.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 != 0 goto label1;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not on back stack");

        throw $r28;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos> = $r5;

        $r6 = newarray (int)[i0];

        r0.<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates> = $r6;

        $r7 = newarray (int)[i0];

        r0.<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates> = $r7;

        i14 = 0;

        i15 = 0;

     label2:
        if i15 >= i0 goto label7;

        $r13 = r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r2 = (androidx.fragment.app.FragmentTransaction$Op) $r14;

        $r15 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i16 = i14 + 1;

        $i6 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mCmd>;

        $r15[i14] = $i6;

        $r17 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        $r16 = r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        if $r16 == null goto label3;

        $r27 = r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment>;

        $r29 = $r27.<androidx.fragment.app.Fragment: java.lang.String mWho>;

        goto label4;

     label3:
        $r29 = null;

     label4:
        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        $r18 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i17 = i16 + 1;

        $z3 = r2.<androidx.fragment.app.FragmentTransaction$Op: boolean mFromExpandedOp>;

        if $z3 == 0 goto label5;

        $b18 = 1;

        goto label6;

     label5:
        $b18 = 0;

     label6:
        $r18[i16] = $b18;

        $r19 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i19 = i17 + 1;

        $i8 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        $r19[i17] = $i8;

        $r20 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i20 = i19 + 1;

        $i9 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        $r20[i19] = $i9;

        $r21 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i21 = i20 + 1;

        $i10 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        $r21[i20] = $i10;

        $r22 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i14 = i21 + 1;

        $i11 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        $r22[i21] = $i11;

        $r24 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates>;

        $r23 = r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState>;

        $i12 = virtualinvoke $r23.<androidx.lifecycle.Lifecycle$State: int ordinal()>();

        $r24[i15] = $i12;

        $r26 = r0.<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates>;

        $r25 = r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState>;

        $i13 = virtualinvoke $r25.<androidx.lifecycle.Lifecycle$State: int ordinal()>();

        $r26[i15] = $i13;

        i15 = i15 + 1;

        goto label2;

     label7:
        $i2 = r1.<androidx.fragment.app.BackStackRecord: int mTransition>;

        r0.<androidx.fragment.app.BackStackRecordState: int mTransition> = $i2;

        $r8 = r1.<androidx.fragment.app.BackStackRecord: java.lang.String mName>;

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.String mName> = $r8;

        $i3 = r1.<androidx.fragment.app.BackStackRecord: int mIndex>;

        r0.<androidx.fragment.app.BackStackRecordState: int mIndex> = $i3;

        $i4 = r1.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes>;

        r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes> = $i4;

        $r9 = r1.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText> = $r9;

        $i5 = r1.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes> = $i5;

        $r10 = r1.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r10;

        $r11 = r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames>;

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames> = $r11;

        $r12 = r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames>;

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames> = $r12;

        $z1 = r1.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        r0.<androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed> = $z1;

        return;
    }

    void <init>(android.os.Parcel)
    {
        androidx.fragment.app.BackStackRecordState r0;
        android.os.Parcel r1;
        int[] $r2, $r4, $r5;
        java.util.ArrayList $r3, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6;
        android.os.Parcelable$Creator $r7, $r10;
        java.lang.Object $r8, $r11;
        java.lang.CharSequence $r9, $r12;
        boolean $z0;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<androidx.fragment.app.BackStackRecordState: int[] mOps> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates> = $r5;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.fragment.app.BackStackRecordState: int mTransition> = $i0;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.String mName> = $r6;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.fragment.app.BackStackRecordState: int mIndex> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes> = $i2;

        $r7 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r9 = (java.lang.CharSequence) $r8;

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText> = $r9;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes> = $i3;

        $r10 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r11 = interfaceinvoke $r10.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r12 = (java.lang.CharSequence) $r11;

        r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames> = $r13;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames> = $r14;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed> = $z0;

        return;
    }

    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
    {
        androidx.fragment.app.BackStackRecordState r0;
        androidx.fragment.app.FragmentManager r1;
        androidx.fragment.app.BackStackRecord r2, $r4;
        java.lang.String r3;
        int $i0, $i1, i2;
        java.util.ArrayList $r5, $r6, $r8;
        java.lang.Object $r7, $r9;
        androidx.fragment.app.FragmentTransaction$Op $r10;
        androidx.fragment.app.Fragment $r11;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        $r4 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r4.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManager)>(r1);

        r2 = $r4;

        specialinvoke r0.<androidx.fragment.app.BackStackRecordState: void fillInBackStackRecord(androidx.fragment.app.BackStackRecord)>(r2);

        $i0 = r0.<androidx.fragment.app.BackStackRecordState: int mIndex>;

        r2.<androidx.fragment.app.BackStackRecord: int mIndex> = $i0;

        i2 = 0;

     label1:
        $r5 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i2 >= $i1 goto label3;

        $r6 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (java.lang.String) $r7;

        if r3 == null goto label2;

        $r8 = r2.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (androidx.fragment.app.FragmentTransaction$Op) $r9;

        $r11 = virtualinvoke r1.<androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)>(r3);

        $r10.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment> = $r11;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        return r2;
    }

    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager, java.util.Map)
    {
        androidx.fragment.app.BackStackRecordState r0;
        androidx.fragment.app.FragmentManager r1;
        java.util.Map r2;
        androidx.fragment.app.BackStackRecord r3, $r6;
        java.lang.String r4, $r14, $r19;
        androidx.fragment.app.Fragment r5;
        java.util.ArrayList $r7, $r8, $r20;
        int $i0, i1;
        java.lang.Object $r9, $r10, $r21;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18;
        androidx.fragment.app.FragmentTransaction$Op $r22;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: androidx.fragment.app.FragmentManager;

        r2 := @parameter1: java.util.Map;

        $r6 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r6.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManager)>(r1);

        r3 = $r6;

        specialinvoke r0.<androidx.fragment.app.BackStackRecordState: void fillInBackStackRecord(androidx.fragment.app.BackStackRecord)>(r3);

        i1 = 0;

     label1:
        $r7 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label4;

        $r8 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (java.lang.String) $r9;

        if r4 == null goto label3;

        $r10 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (androidx.fragment.app.Fragment) $r10;

        if r5 == null goto label2;

        $r20 = r3.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mOps>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r22 = (androidx.fragment.app.FragmentTransaction$Op) $r21;

        $r22.<androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment> = r5;

        goto label3;

     label2:
        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring FragmentTransaction ");

        $r14 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.String mName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed due to missing saved state for Fragment (");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r3;
    }

    private void fillInBackStackRecord(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.BackStackRecordState r0;
        androidx.fragment.app.BackStackRecord r1;
        androidx.fragment.app.FragmentTransaction$Op r2, $r9;
        int[] $r3, $r10, $r12, $r15, $r17, $r18, $r19, $r20, $r21, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, i19, i20, i21, i22, i23, i24;
        java.lang.String $r4, $r31;
        java.lang.CharSequence $r5, $r6;
        java.util.ArrayList $r7, $r8;
        boolean $z0, $z1, $z2;
        androidx.lifecycle.Lifecycle$State[] $r11, $r14;
        androidx.lifecycle.Lifecycle$State $r13, $r16;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r28, $r30;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        i18 = 0;

        i19 = 0;

     label1:
        $r3 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        $i0 = lengthof $r3;

        if i18 >= $i0 goto label5;

        $r9 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r9.<androidx.fragment.app.FragmentTransaction$Op: void <init>()>();

        r2 = $r9;

        $r10 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i20 = i18 + 1;

        $i4 = $r10[i18];

        r2.<androidx.fragment.app.FragmentTransaction$Op: int mCmd> = $i4;

        $z1 = staticinvoke <androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)>(2);

        if $z1 == 0 goto label2;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiate ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op #");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i19);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" base fragment #");

        $r29 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        $i16 = $r29[i20];

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r31);

     label2:
        $r11 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>();

        $r12 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates>;

        $i5 = $r12[i19];

        $r13 = $r11[$i5];

        r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState> = $r13;

        $r14 = staticinvoke <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()>();

        $r15 = r0.<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates>;

        $i6 = $r15[i19];

        $r16 = $r14[$i6];

        r2.<androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState> = $r16;

        $r17 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i21 = i20 + 1;

        $i7 = $r17[i20];

        if $i7 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r2.<androidx.fragment.app.FragmentTransaction$Op: boolean mFromExpandedOp> = $z2;

        $r18 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i22 = i21 + 1;

        $i8 = $r18[i21];

        r2.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim> = $i8;

        $r19 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i23 = i22 + 1;

        $i9 = $r19[i22];

        r2.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim> = $i9;

        $r20 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i24 = i23 + 1;

        $i10 = $r20[i23];

        r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim> = $i10;

        $r21 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        i18 = i24 + 1;

        $i11 = $r21[i24];

        r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim> = $i11;

        $i12 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim>;

        r1.<androidx.fragment.app.BackStackRecord: int mEnterAnim> = $i12;

        $i13 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mExitAnim>;

        r1.<androidx.fragment.app.BackStackRecord: int mExitAnim> = $i13;

        $i14 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim>;

        r1.<androidx.fragment.app.BackStackRecord: int mPopEnterAnim> = $i14;

        $i15 = r2.<androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim>;

        r1.<androidx.fragment.app.BackStackRecord: int mPopExitAnim> = $i15;

        virtualinvoke r1.<androidx.fragment.app.BackStackRecord: void addOp(androidx.fragment.app.FragmentTransaction$Op)>(r2);

        i19 = i19 + 1;

        goto label1;

     label5:
        $i1 = r0.<androidx.fragment.app.BackStackRecordState: int mTransition>;

        r1.<androidx.fragment.app.BackStackRecord: int mTransition> = $i1;

        $r4 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.String mName>;

        r1.<androidx.fragment.app.BackStackRecord: java.lang.String mName> = $r4;

        r1.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack> = 1;

        $i2 = r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes>;

        r1.<androidx.fragment.app.BackStackRecord: int mBreadCrumbTitleRes> = $i2;

        $r5 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText>;

        r1.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = $r5;

        $i3 = r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes>;

        r1.<androidx.fragment.app.BackStackRecord: int mBreadCrumbShortTitleRes> = $i3;

        $r6 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        r1.<androidx.fragment.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = $r6;

        $r7 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames>;

        r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mSharedElementSourceNames> = $r7;

        $r8 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames>;

        r1.<androidx.fragment.app.BackStackRecord: java.util.ArrayList mSharedElementTargetNames> = $r8;

        $z0 = r0.<androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed>;

        r1.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed> = $z0;

        return;
    }

    public int describeContents()
    {
        androidx.fragment.app.BackStackRecordState r0;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.fragment.app.BackStackRecordState r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4;
        int[] $r2, $r4, $r5;
        java.util.ArrayList $r3, $r9, $r10;
        java.lang.String $r6;
        java.lang.CharSequence $r7, $r8;
        boolean $z0;
        byte $b5;

        r0 := @this: androidx.fragment.app.BackStackRecordState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOps>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        $r3 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r3);

        $r4 = r0.<androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r4);

        $r5 = r0.<androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r5);

        $i1 = r0.<androidx.fragment.app.BackStackRecordState: int mTransition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r6 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $i2 = r0.<androidx.fragment.app.BackStackRecordState: int mIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r7 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r7, r1, 0);

        $i4 = r0.<androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r8 = r0.<androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r8, r1, 0);

        $r9 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r9);

        $r10 = r0.<androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r10);

        $z0 = r0.<androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed>;

        if $z0 == 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b5);

        return;
    }

    static void <clinit>()
    {
        androidx.fragment.app.BackStackRecordState$1 $r0;

        $r0 = new androidx.fragment.app.BackStackRecordState$1;

        specialinvoke $r0.<androidx.fragment.app.BackStackRecordState$1: void <init>()>();

        <androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

androidx.fragment.app.BackStackRecordState$1
    void <init>()
    {
        androidx.fragment.app.BackStackRecordState$1 r0;

        r0 := @this: androidx.fragment.app.BackStackRecordState$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel)
    {
        androidx.fragment.app.BackStackRecordState$1 r0;
        android.os.Parcel r1;
        androidx.fragment.app.BackStackRecordState $r2;

        r0 := @this: androidx.fragment.app.BackStackRecordState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.fragment.app.BackStackRecordState;

        specialinvoke $r2.<androidx.fragment.app.BackStackRecordState: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.fragment.app.BackStackRecordState[] newArray(int)
    {
        androidx.fragment.app.BackStackRecordState$1 r0;
        int i0;
        androidx.fragment.app.BackStackRecordState[] $r1;

        r0 := @this: androidx.fragment.app.BackStackRecordState$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.fragment.app.BackStackRecordState)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.fragment.app.BackStackRecordState$1 r0;
        int i0;
        androidx.fragment.app.BackStackRecordState[] $r1;

        r0 := @this: androidx.fragment.app.BackStackRecordState$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.fragment.app.BackStackRecordState$1: androidx.fragment.app.BackStackRecordState[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.fragment.app.BackStackRecordState$1 r0;
        android.os.Parcel r1;
        androidx.fragment.app.BackStackRecordState $r2;

        r0 := @this: androidx.fragment.app.BackStackRecordState$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.fragment.app.BackStackRecordState$1: androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

