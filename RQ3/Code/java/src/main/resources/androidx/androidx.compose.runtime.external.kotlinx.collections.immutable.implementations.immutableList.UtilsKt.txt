androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.UtilsKt
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.UtilsKt: int MAX_BUFFER_SIZE>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.UtilsKt: int LOG_MAX_BUFFER_SIZE>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.UtilsKt: int MAX_BUFFER_SIZE_MINUS_ONE>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.UtilsKt: int MUTABLE_BUFFER_SIZE>
    public static final androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList persistentVectorOf()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector$Companion $r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList $r2;

        $r0 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector getEMPTY()>();

        $r2 = (androidx.compose.runtime.external.kotlinx.collections.immutable.PersistentList) $r1;

        return $r2;
    }

    public static final java.lang.Object[] presizedBufferWith(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.Object;

        r1 = newarray (java.lang.Object)[32];

        r1[0] = r0;

        return r1;
    }

    public static final int indexSegment(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 >> i1;

        $i3 = $i2 & 31;

        return $i3;
    }

    public static final int rootSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = $i1 & -32;

        return $i2;
    }

