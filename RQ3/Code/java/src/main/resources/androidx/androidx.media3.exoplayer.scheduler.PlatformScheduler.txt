androidx.media3.exoplayer.scheduler.PlatformScheduler
<androidx.media3.exoplayer.scheduler.PlatformScheduler: java.lang.String TAG>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: java.lang.String KEY_SERVICE_ACTION>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: java.lang.String KEY_SERVICE_PACKAGE>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: java.lang.String KEY_REQUIREMENTS>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: int SUPPORTED_REQUIREMENTS>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: int jobId>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.content.ComponentName jobServiceComponentName>
<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.app.job.JobScheduler jobScheduler>
    public void <init>(android.content.Context, int)
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler r0;
        int i0;
        android.content.ComponentName $r1;
        java.lang.Object $r2, $r4;
        android.app.job.JobScheduler $r3, $r5;
        android.content.Context r6, r7;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler;

        r6 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r7 = virtualinvoke r6.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: int jobId> = i0;

        $r1 = new android.content.ComponentName;

        specialinvoke $r1.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r7, class "Landroidx/media3/exoplayer/scheduler/PlatformScheduler$PlatformSchedulerService;");

        r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.content.ComponentName jobServiceComponentName> = $r1;

        $r2 = virtualinvoke r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        $r3 = (android.app.job.JobScheduler) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (android.app.job.JobScheduler) $r4;

        r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.app.job.JobScheduler jobScheduler> = $r5;

        return;
    }

    public boolean schedule(androidx.media3.exoplayer.scheduler.Requirements, java.lang.String, java.lang.String)
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler r0;
        androidx.media3.exoplayer.scheduler.Requirements r1;
        java.lang.String r2, r3;
        android.app.job.JobInfo r4;
        int i0, $i1;
        android.content.ComponentName $r5;
        android.app.job.JobScheduler $r6;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler;

        r1 := @parameter0: androidx.media3.exoplayer.scheduler.Requirements;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i1 = r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: int jobId>;

        $r5 = r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.content.ComponentName jobServiceComponentName>;

        r4 = staticinvoke <androidx.media3.exoplayer.scheduler.PlatformScheduler: android.app.job.JobInfo buildJobInfo(int,android.content.ComponentName,androidx.media3.exoplayer.scheduler.Requirements,java.lang.String,java.lang.String)>($i1, $r5, r1, r3, r2);

        $r6 = r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.app.job.JobScheduler jobScheduler>;

        i0 = virtualinvoke $r6.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>(r4);

        if i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean cancel()
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler r0;
        int $i0;
        android.app.job.JobScheduler $r1;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler;

        $r1 = r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: android.app.job.JobScheduler jobScheduler>;

        $i0 = r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler: int jobId>;

        virtualinvoke $r1.<android.app.job.JobScheduler: void cancel(int)>($i0);

        return 1;
    }

    public androidx.media3.exoplayer.scheduler.Requirements getSupportedRequirements(androidx.media3.exoplayer.scheduler.Requirements)
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler r0;
        androidx.media3.exoplayer.scheduler.Requirements r1, $r2;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler;

        r1 := @parameter0: androidx.media3.exoplayer.scheduler.Requirements;

        $i0 = <androidx.media3.exoplayer.scheduler.PlatformScheduler: int SUPPORTED_REQUIREMENTS>;

        $r2 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: androidx.media3.exoplayer.scheduler.Requirements filterRequirements(int)>($i0);

        return $r2;
    }

    private static android.app.job.JobInfo buildJobInfo(int, android.content.ComponentName, androidx.media3.exoplayer.scheduler.Requirements, java.lang.String, java.lang.String)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.ComponentName r0;
        androidx.media3.exoplayer.scheduler.Requirements r1, r4;
        java.lang.String r2, r3, $r18;
        android.app.job.JobInfo$Builder r5, $r7;
        android.os.PersistableBundle r6, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r15, $r16, $r17;
        android.app.job.JobInfo $r20;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.ComponentName;

        r1 := @parameter2: androidx.media3.exoplayer.scheduler.Requirements;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $i1 = <androidx.media3.exoplayer.scheduler.PlatformScheduler: int SUPPORTED_REQUIREMENTS>;

        r4 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: androidx.media3.exoplayer.scheduler.Requirements filterRequirements(int)>($i1);

        $z0 = virtualinvoke r4.<androidx.media3.exoplayer.scheduler.Requirements: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unsupported requirements: ");

        $i2 = virtualinvoke r4.<androidx.media3.exoplayer.scheduler.Requirements: int getRequirements()>();

        $i3 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: int getRequirements()>();

        $i4 = $i2 ^ $i3;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("PlatformScheduler", $r18);

     label1:
        $r7 = new android.app.job.JobInfo$Builder;

        specialinvoke $r7.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(i0, r0);

        r5 = $r7;

        $z1 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean isUnmeteredNetworkRequired()>();

        if $z1 == 0 goto label2;

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>(2);

        goto label3;

     label2:
        $z2 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean isNetworkRequired()>();

        if $z2 == 0 goto label3;

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>(1);

     label3:
        $z4 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean isIdleRequired()>();

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>($z4);

        $z5 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean isChargingRequired()>();

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>($z5);

        $i5 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i5 < 26 goto label4;

        $z3 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: boolean isStorageNotLowRequired()>();

        if $z3 == 0 goto label4;

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresStorageNotLow(boolean)>(1);

     label4:
        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setPersisted(boolean)>(1);

        $r19 = new android.os.PersistableBundle;

        specialinvoke $r19.<android.os.PersistableBundle: void <init>()>();

        r6 = $r19;

        virtualinvoke r6.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("service_action", r2);

        virtualinvoke r6.<android.os.PersistableBundle: void putString(java.lang.String,java.lang.String)>("service_package", r3);

        $i6 = virtualinvoke r1.<androidx.media3.exoplayer.scheduler.Requirements: int getRequirements()>();

        virtualinvoke r6.<android.os.PersistableBundle: void putInt(java.lang.String,int)>("requirements", $i6);

        virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setExtras(android.os.PersistableBundle)>(r6);

        $r20 = virtualinvoke r5.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        return $r20;
    }

    static void <clinit>()
    {
        int $i0;
        byte $b1, $b3;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 26 goto label1;

        $b3 = 16;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        $b1 = 15 | $b3;

        <androidx.media3.exoplayer.scheduler.PlatformScheduler: int SUPPORTED_REQUIREMENTS> = $b1;

        return;
    }

androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService
    public void <init>()
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService r0;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService r0;
        android.app.job.JobParameters r1;
        android.os.PersistableBundle r2;
        androidx.media3.exoplayer.scheduler.Requirements r3, r18;
        int i0, $i1;
        java.lang.String r4, r5, $r11, $r12, $r14;
        android.content.Intent r6, r19;
        java.lang.StringBuilder $r9, $r10, r20;
        java.lang.Object $r13, $r15;
        android.content.Context r21, r22;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService;

        r1 := @parameter0: android.app.job.JobParameters;

        r2 = virtualinvoke r1.<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>();

        r18 = new androidx.media3.exoplayer.scheduler.Requirements;

        $i1 = virtualinvoke r2.<android.os.PersistableBundle: int getInt(java.lang.String)>("requirements");

        specialinvoke r18.<androidx.media3.exoplayer.scheduler.Requirements: void <init>(int)>($i1);

        r3 = r18;

        r21 = (android.content.Context) r0;

        i0 = virtualinvoke r3.<androidx.media3.exoplayer.scheduler.Requirements: int getNotMetRequirements(android.content.Context)>(r21);

        if i0 != 0 goto label1;

        $r12 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("service_action");

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        r4 = (java.lang.String) $r13;

        $r14 = virtualinvoke r2.<android.os.PersistableBundle: java.lang.String getString(java.lang.String)>("service_package");

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        r5 = (java.lang.String) $r15;

        r19 = new android.content.Intent;

        specialinvoke r19.<android.content.Intent: void <init>(java.lang.String)>(r4);

        r6 = virtualinvoke r19.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r5);

        r22 = (android.content.Context) r0;

        staticinvoke <androidx.media3.common.util.Util: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>(r22, r6);

        goto label2;

     label1:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requirements not met: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("PlatformScheduler", $r11);

        virtualinvoke r0.<androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService: void jobFinished(android.app.job.JobParameters,boolean)>(r1, 1);

     label2:
        return 0;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService r0;
        android.app.job.JobParameters r1;

        r0 := @this: androidx.media3.exoplayer.scheduler.PlatformScheduler$PlatformSchedulerService;

        r1 := @parameter0: android.app.job.JobParameters;

        return 0;
    }

