androidx.media3.session.MediaNotificationManager
<androidx.media3.session.MediaNotificationManager: java.lang.String TAG>
<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>
<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$Provider mediaNotificationProvider>
<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$ActionFactory actionFactory>
<androidx.media3.session.MediaNotificationManager: androidx.core.app.NotificationManagerCompat notificationManagerCompat>
<androidx.media3.session.MediaNotificationManager: java.util.concurrent.Executor mainExecutor>
<androidx.media3.session.MediaNotificationManager: android.content.Intent startSelfIntent>
<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap>
<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap>
<androidx.media3.session.MediaNotificationManager: int totalNotificationCount>
<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification mediaNotification>
<androidx.media3.session.MediaNotificationManager: boolean startedInForeground>
    public void <init>(androidx.media3.session.MediaSessionService, androidx.media3.session.MediaNotification$Provider, androidx.media3.session.MediaNotification$ActionFactory)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSessionService r1;
        androidx.media3.session.MediaNotification$Provider r2;
        androidx.media3.session.MediaNotification$ActionFactory r3;
        android.os.Handler r4, r13;
        androidx.core.app.NotificationManagerCompat $r5;
        android.os.Looper $r7;
        java.util.concurrent.Executor $r8;
        java.lang.Class $r10;
        android.content.Intent r14;
        java.util.HashMap r15, r16;
        android.content.Context r17, r18;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSessionService;

        r2 := @parameter1: androidx.media3.session.MediaNotification$Provider;

        r3 := @parameter2: androidx.media3.session.MediaNotification$ActionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService> = r1;

        r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$Provider mediaNotificationProvider> = r2;

        r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$ActionFactory actionFactory> = r3;

        r17 = (android.content.Context) r1;

        $r5 = staticinvoke <androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat 'from'(android.content.Context)>(r17);

        r0.<androidx.media3.session.MediaNotificationManager: androidx.core.app.NotificationManagerCompat notificationManagerCompat> = $r5;

        r13 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke r13.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r4 = r13;

        $r8 = dynamicinvoke "execute" <java.util.concurrent.Executor (android.os.Handler)>(r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaNotificationManager: void lambda$new$0(android.os.Handler,java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        r0.<androidx.media3.session.MediaNotificationManager: java.util.concurrent.Executor mainExecutor> = $r8;

        r14 = new android.content.Intent;

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r18 = (android.content.Context) r1;

        specialinvoke r14.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r18, $r10);

        r0.<androidx.media3.session.MediaNotificationManager: android.content.Intent startSelfIntent> = r14;

        r15 = new java.util.HashMap;

        specialinvoke r15.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap> = r15;

        r16 = new java.util.HashMap;

        specialinvoke r16.<java.util.HashMap: void <init>()>();

        r0.<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap> = r16;

        r0.<androidx.media3.session.MediaNotificationManager: boolean startedInForeground> = 0;

        return;
    }

    public void addSession(androidx.media3.session.MediaSession)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r2, r21;
        com.google.common.util.concurrent.ListenableFuture r3;
        java.util.Map $r4, $r5, $r9, $r19;
        boolean $z0;
        com.google.common.collect.ImmutableList $r6;
        androidx.media3.session.MediaSessionService $r10, $r12;
        androidx.media3.session.SessionToken $r13;
        androidx.media3.session.MediaController$Builder $r14, $r16, r22;
        android.os.Looper $r15;
        java.lang.Runnable $r17;
        java.util.concurrent.Executor $r18;
        android.content.Context r23;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap>;

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        r21 = new androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        $r10 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r9 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap>;

        specialinvoke r21.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: void <init>(androidx.media3.session.MediaSessionService,androidx.media3.session.MediaSession,java.util.Map)>($r10, r1, $r9);

        r2 = r21;

        r22 = new androidx.media3.session.MediaController$Builder;

        $r12 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r13 = virtualinvoke r1.<androidx.media3.session.MediaSession: androidx.media3.session.SessionToken getToken()>();

        r23 = (android.content.Context) $r12;

        specialinvoke r22.<androidx.media3.session.MediaController$Builder: void <init>(android.content.Context,androidx.media3.session.SessionToken)>(r23, $r13);

        $r14 = virtualinvoke r22.<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Builder setListener(androidx.media3.session.MediaController$Listener)>(r2);

        $r15 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r16 = virtualinvoke $r14.<androidx.media3.session.MediaController$Builder: androidx.media3.session.MediaController$Builder setApplicationLooper(android.os.Looper)>($r15);

        r3 = virtualinvoke $r16.<androidx.media3.session.MediaController$Builder: com.google.common.util.concurrent.ListenableFuture buildAsync()>();

        $r17 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaNotificationManager,com.google.common.util.concurrent.ListenableFuture,androidx.media3.session.MediaNotificationManager$MediaControllerListener,androidx.media3.session.MediaSession)>(r0, r3, r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaNotificationManager: void lambda$addSession$1(com.google.common.util.concurrent.ListenableFuture,androidx.media3.session.MediaNotificationManager$MediaControllerListener,androidx.media3.session.MediaSession)>, methodtype: void __METHODTYPE__());

        $r18 = r0.<androidx.media3.session.MediaNotificationManager: java.util.concurrent.Executor mainExecutor>;

        interfaceinvoke r3.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r17, $r18);

        $r19 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public void removeSession(androidx.media3.session.MediaSession)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSession r1;
        com.google.common.util.concurrent.ListenableFuture r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        if r2 == null goto label1;

        staticinvoke <androidx.media3.session.MediaController: void releaseFuture(java.util.concurrent.Future)>(r2);

     label1:
        return;
    }

    public void onCustomAction(androidx.media3.session.MediaSession, java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSession r1;
        java.lang.String r2, $r19;
        android.os.Bundle r3, $r15;
        com.google.common.util.concurrent.ListenableFuture r4, r25;
        androidx.media3.session.SessionCommand r5, r23;
        java.util.Map $r6;
        java.lang.Object $r7, $r8, $r10, $r18;
        androidx.media3.session.MediaController $r9, r22;
        androidx.media3.session.MediaNotification$Provider $r11;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.session.SessionCommands $r12, $r14;
        com.google.common.collect.ImmutableSet $r13;
        androidx.media3.session.MediaNotificationManager$1 $r16;
        java.util.concurrent.Executor $r17;
        int $i0;
        java.lang.Throwable $r20, r26;
        java.lang.IllegalStateException $r21;
        com.google.common.collect.UnmodifiableIterator r24;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r6 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map controllerMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.google.common.util.concurrent.ListenableFuture) $r7;

        if r4 != null goto label1;

        return;

     label1:
        $r8 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)>(r4);

        $r9 = (androidx.media3.session.MediaController) $r8;

        $r10 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r9);

        r22 = (androidx.media3.session.MediaController) $r10;

        $r11 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$Provider mediaNotificationProvider>;

        $z0 = interfaceinvoke $r11.<androidx.media3.session.MediaNotification$Provider: boolean handleCustomCommand(androidx.media3.session.MediaSession,java.lang.String,android.os.Bundle)>(r1, r2, r3);

        if $z0 != 0 goto label5;

        r23 = null;

        $r12 = virtualinvoke r22.<androidx.media3.session.MediaController: androidx.media3.session.SessionCommands getAvailableSessionCommands()>();

        $r13 = $r12.<androidx.media3.session.SessionCommands: com.google.common.collect.ImmutableSet commands>;

        r24 = virtualinvoke $r13.<com.google.common.collect.ImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>();

     label2:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r18 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.media3.session.SessionCommand) $r18;

        $i0 = r5.<androidx.media3.session.SessionCommand: int commandCode>;

        if $i0 != 0 goto label3;

        $r19 = r5.<androidx.media3.session.SessionCommand: java.lang.String customAction>;

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label3;

        r23 = r5;

        goto label4;

     label3:
        goto label2;

     label4:
        if r23 == null goto label5;

        $r14 = virtualinvoke r22.<androidx.media3.session.MediaController: androidx.media3.session.SessionCommands getAvailableSessionCommands()>();

        $z2 = virtualinvoke $r14.<androidx.media3.session.SessionCommands: boolean contains(androidx.media3.session.SessionCommand)>(r23);

        if $z2 == 0 goto label5;

        $r15 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r25 = virtualinvoke r22.<androidx.media3.session.MediaController: com.google.common.util.concurrent.ListenableFuture sendCustomCommand(androidx.media3.session.SessionCommand,android.os.Bundle)>(r23, $r15);

        $r16 = new androidx.media3.session.MediaNotificationManager$1;

        specialinvoke $r16.<androidx.media3.session.MediaNotificationManager$1: void <init>(androidx.media3.session.MediaNotificationManager,java.lang.String)>(r0, r2);

        $r17 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r25, $r16, $r17);

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        r26 = $r20;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r26);

        throw $r21;

     label7:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label5 with label6;
    }

    public void updateNotification(androidx.media3.session.MediaSession, boolean)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSession r1;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2;
        androidx.media3.session.MediaNotification$Provider$Callback r2;
        androidx.media3.session.MediaNotification r3;
        androidx.media3.session.MediaSessionService $r4;
        java.util.Map $r5;
        androidx.media3.session.MediaNotification$Provider $r6;
        java.lang.Object $r7, $r9;
        com.google.common.collect.ImmutableList $r8, $r11;
        androidx.media3.session.MediaNotification$ActionFactory $r10;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        z0 := @parameter1: boolean;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        $z1 = virtualinvoke $r4.<androidx.media3.session.MediaSessionService: boolean isSessionAdded(androidx.media3.session.MediaSession)>(r1);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <androidx.media3.session.MediaNotificationManager: boolean shouldShowNotification(androidx.media3.session.MediaSession)>(r1);

        if $z2 != 0 goto label2;

     label1:
        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void maybeStopForegroundService(boolean)>(1);

        return;

     label2:
        $i1 = r0.<androidx.media3.session.MediaNotificationManager: int totalNotificationCount>;

        $i2 = $i1 + 1;

        r0.<androidx.media3.session.MediaNotificationManager: int totalNotificationCount> = $i2;

        i0 = $i2;

        r2 = dynamicinvoke "onNotificationChanged" <androidx.media3.session.MediaNotification$Provider$Callback (androidx.media3.session.MediaNotificationManager,int,androidx.media3.session.MediaSession)>(r0, i0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.MediaNotification), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaNotificationManager: void lambda$updateNotification$3(int,androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification)>, methodtype: void __METHODTYPE__(androidx.media3.session.MediaNotification));

        $r6 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$Provider mediaNotificationProvider>;

        $r5 = r0.<androidx.media3.session.MediaNotificationManager: java.util.Map customLayoutMap>;

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (com.google.common.collect.ImmutableList) $r7;

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r8);

        $r11 = (com.google.common.collect.ImmutableList) $r9;

        $r10 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification$ActionFactory actionFactory>;

        r3 = interfaceinvoke $r6.<androidx.media3.session.MediaNotification$Provider: androidx.media3.session.MediaNotification createNotification(androidx.media3.session.MediaSession,com.google.common.collect.ImmutableList,androidx.media3.session.MediaNotification$ActionFactory,androidx.media3.session.MediaNotification$Provider$Callback)>(r1, $r11, $r10, r2);

        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void updateNotificationInternal(androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification,boolean)>(r1, r3, z0);

        return;
    }

    public boolean isStartedInForeground()
    {
        androidx.media3.session.MediaNotificationManager r0;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        $z0 = r0.<androidx.media3.session.MediaNotificationManager: boolean startedInForeground>;

        return $z0;
    }

    private void onNotificationUpdated(int, androidx.media3.session.MediaSession, androidx.media3.session.MediaNotification)
    {
        androidx.media3.session.MediaNotificationManager r0;
        int i0, $i1;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaNotification r2;
        boolean z0;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession;

        r2 := @parameter2: androidx.media3.session.MediaNotification;

        $i1 = r0.<androidx.media3.session.MediaNotificationManager: int totalNotificationCount>;

        if i0 != $i1 goto label1;

        z0 = staticinvoke <androidx.media3.session.MediaSessionService: boolean shouldRunInForeground(androidx.media3.session.MediaSession,boolean)>(r1, 0);

        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void updateNotificationInternal(androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification,boolean)>(r1, r2, z0);

     label1:
        return;
    }

    private void updateNotificationInternal(androidx.media3.session.MediaSession, androidx.media3.session.MediaNotification, boolean)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaNotification r2;
        boolean z0;
        android.media.session.MediaSession$Token r3;
        int $i0, $i1;
        android.app.Notification $r4, $r9;
        androidx.core.app.NotificationManagerCompat $r5;
        android.support.v4.media.session.MediaSessionCompat $r6;
        android.support.v4.media.session.MediaSessionCompat$Token $r7;
        java.lang.Object $r8;
        android.os.Bundle $r10;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaSession;

        r2 := @parameter1: androidx.media3.session.MediaNotification;

        z0 := @parameter2: boolean;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r6 = virtualinvoke r1.<androidx.media3.session.MediaSession: android.support.v4.media.session.MediaSessionCompat getSessionCompat()>();

        $r7 = virtualinvoke $r6.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();

        $r8 = virtualinvoke $r7.<android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()>();

        r3 = (android.media.session.MediaSession$Token) $r8;

        $r9 = r2.<androidx.media3.session.MediaNotification: android.app.Notification notification>;

        $r10 = $r9.<android.app.Notification: android.os.Bundle extras>;

        virtualinvoke $r10.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.mediaSession", r3);

     label1:
        r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification mediaNotification> = r2;

        if z0 == 0 goto label2;

        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void startForeground(androidx.media3.session.MediaNotification)>(r2);

        goto label3;

     label2:
        $r5 = r0.<androidx.media3.session.MediaNotificationManager: androidx.core.app.NotificationManagerCompat notificationManagerCompat>;

        $i1 = r2.<androidx.media3.session.MediaNotification: int notificationId>;

        $r4 = r2.<androidx.media3.session.MediaNotification: android.app.Notification notification>;

        virtualinvoke $r5.<androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)>($i1, $r4);

        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void maybeStopForegroundService(boolean)>(0);

     label3:
        return;
    }

    private void maybeStopForegroundService(boolean)
    {
        androidx.media3.session.MediaNotificationManager r0;
        boolean z0, $z1;
        java.util.List r1;
        androidx.media3.session.MediaSessionService $r2;
        int $i0, $i1, $i2, $i3, i4;
        androidx.media3.session.MediaNotification $r3, $r4;
        androidx.core.app.NotificationManagerCompat $r5;
        java.lang.Object $r6;
        androidx.media3.session.MediaSession $r7;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        z0 := @parameter0: boolean;

        $r2 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        r1 = virtualinvoke $r2.<androidx.media3.session.MediaSessionService: java.util.List getSessions()>();

        i4 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i4 >= $i0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i4);

        $r7 = (androidx.media3.session.MediaSession) $r6;

        $z1 = staticinvoke <androidx.media3.session.MediaSessionService: boolean shouldRunInForeground(androidx.media3.session.MediaSession,boolean)>($r7, 0);

        if $z1 == 0 goto label2;

        return;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void stopForeground(boolean)>(z0);

        if z0 == 0 goto label4;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification mediaNotification>;

        if $r3 == null goto label4;

        $r5 = r0.<androidx.media3.session.MediaNotificationManager: androidx.core.app.NotificationManagerCompat notificationManagerCompat>;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification mediaNotification>;

        $i1 = $r4.<androidx.media3.session.MediaNotification: int notificationId>;

        virtualinvoke $r5.<androidx.core.app.NotificationManagerCompat: void cancel(int)>($i1);

        $i2 = r0.<androidx.media3.session.MediaNotificationManager: int totalNotificationCount>;

        $i3 = $i2 + 1;

        r0.<androidx.media3.session.MediaNotificationManager: int totalNotificationCount> = $i3;

        r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaNotification mediaNotification> = null;

     label4:
        return;
    }

    private static boolean shouldShowNotification(androidx.media3.session.MediaSession)
    {
        androidx.media3.session.MediaSession r0;
        androidx.media3.common.Player r1;
        androidx.media3.common.Timeline $r2;
        boolean $z0, $z1;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaSession;

        r1 = virtualinvoke r0.<androidx.media3.session.MediaSession: androidx.media3.common.Player getPlayer()>();

        $r2 = interfaceinvoke r1.<androidx.media3.common.Player: androidx.media3.common.Timeline getCurrentTimeline()>();

        $z0 = virtualinvoke $r2.<androidx.media3.common.Timeline: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke r1.<androidx.media3.common.Player: int getPlaybackState()>();

        if $i0 == 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void startForeground(androidx.media3.session.MediaNotification)
    {
        androidx.media3.session.MediaNotificationManager r0;
        androidx.media3.session.MediaNotification r1;
        android.content.Intent $r2;
        androidx.media3.session.MediaSessionService $r3, $r5, $r6;
        int $i0, $i1;
        android.app.Notification $r4;
        android.content.Context r7;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: androidx.media3.session.MediaNotification;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r2 = r0.<androidx.media3.session.MediaNotificationManager: android.content.Intent startSelfIntent>;

        r7 = (android.content.Context) $r3;

        staticinvoke <androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>(r7, $r2);

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 29 goto label1;

        $r6 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        staticinvoke <androidx.media3.session.MediaNotificationManager$Api29: void startForeground(androidx.media3.session.MediaSessionService,androidx.media3.session.MediaNotification)>($r6, r1);

        goto label2;

     label1:
        $r5 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        $i1 = r1.<androidx.media3.session.MediaNotification: int notificationId>;

        $r4 = r1.<androidx.media3.session.MediaNotification: android.app.Notification notification>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionService: void startForeground(int,android.app.Notification)>($i1, $r4);

     label2:
        r0.<androidx.media3.session.MediaNotificationManager: boolean startedInForeground> = 1;

        return;
    }

    private void stopForeground(boolean)
    {
        androidx.media3.session.MediaNotificationManager r0;
        boolean z0, $z1;
        int $i0, $i1;
        androidx.media3.session.MediaSessionService $r1, $r2;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        z0 := @parameter0: boolean;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r2 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        staticinvoke <androidx.media3.session.MediaNotificationManager$Api24: void stopForeground(androidx.media3.session.MediaSessionService,boolean)>($r2, z0);

        goto label5;

     label1:
        $r1 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        if z0 != 0 goto label2;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 >= 21 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke $r1.<androidx.media3.session.MediaSessionService: void stopForeground(boolean)>($z1);

     label5:
        r0.<androidx.media3.session.MediaNotificationManager: boolean startedInForeground> = 0;

        return;
    }

    private void lambda$updateNotification$3(int, androidx.media3.session.MediaSession, androidx.media3.session.MediaNotification)
    {
        androidx.media3.session.MediaNotificationManager r0;
        int i0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaNotification r2;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession;

        r2 := @parameter2: androidx.media3.session.MediaNotification;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager: java.util.concurrent.Executor mainExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaNotificationManager,int,androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification)>(r0, i0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaNotificationManager: void lambda$updateNotification$2(int,androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return;
    }

    private void lambda$updateNotification$2(int, androidx.media3.session.MediaSession, androidx.media3.session.MediaNotification)
    {
        androidx.media3.session.MediaNotificationManager r0;
        int i0;
        androidx.media3.session.MediaSession r1;
        androidx.media3.session.MediaNotification r2;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.MediaSession;

        r2 := @parameter2: androidx.media3.session.MediaNotification;

        specialinvoke r0.<androidx.media3.session.MediaNotificationManager: void onNotificationUpdated(int,androidx.media3.session.MediaSession,androidx.media3.session.MediaNotification)>(i0, r1, r2);

        return;
    }

    private void lambda$addSession$1(com.google.common.util.concurrent.ListenableFuture, androidx.media3.session.MediaNotificationManager$MediaControllerListener, androidx.media3.session.MediaSession)
    {
        androidx.media3.session.MediaNotificationManager r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r2;
        androidx.media3.session.MediaSession r3;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Object $r5;
        java.lang.Throwable $r6, r9;
        androidx.media3.session.MediaSessionService $r7;
        androidx.media3.session.MediaController r8;

        r0 := @this: androidx.media3.session.MediaNotificationManager;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        r3 := @parameter2: androidx.media3.session.MediaSession;

     label1:
        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r5 = interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(0L, $r4);

        r8 = (androidx.media3.session.MediaController) $r5;

        virtualinvoke r2.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: void onConnected()>();

        virtualinvoke r8.<androidx.media3.session.MediaController: void addListener(androidx.media3.common.Player$Listener)>(r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

        $r7 = r0.<androidx.media3.session.MediaNotificationManager: androidx.media3.session.MediaSessionService mediaSessionService>;

        virtualinvoke $r7.<androidx.media3.session.MediaSessionService: void removeSession(androidx.media3.session.MediaSession)>(r3);

     label4:
        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    private static void lambda$new$0(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>(r0, r1);

        return;
    }

    static boolean access$000(androidx.media3.session.MediaSession)
    {
        androidx.media3.session.MediaSession r0;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaSession;

        $z0 = staticinvoke <androidx.media3.session.MediaNotificationManager: boolean shouldShowNotification(androidx.media3.session.MediaSession)>(r0);

        return $z0;
    }

androidx.media3.session.MediaNotificationManager$1
<androidx.media3.session.MediaNotificationManager$1: java.lang.String val$action>
    void <init>(androidx.media3.session.MediaNotificationManager, java.lang.String)
    {
        androidx.media3.session.MediaNotificationManager$1 r0;
        androidx.media3.session.MediaNotificationManager r1;
        java.lang.String r2;

        r0 := @this: androidx.media3.session.MediaNotificationManager$1;

        r1 := @parameter0: androidx.media3.session.MediaNotificationManager;

        r2 := @parameter1: java.lang.String;

        r0.<androidx.media3.session.MediaNotificationManager$1: java.lang.String val$action> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(androidx.media3.session.SessionResult)
    {
        androidx.media3.session.MediaNotificationManager$1 r0;
        androidx.media3.session.SessionResult r1;

        r0 := @this: androidx.media3.session.MediaNotificationManager$1;

        r1 := @parameter0: androidx.media3.session.SessionResult;

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.media3.session.MediaNotificationManager$1 r0;
        java.lang.Throwable r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: androidx.media3.session.MediaNotificationManager$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("custom command ");

        $r4 = r0.<androidx.media3.session.MediaNotificationManager$1: java.lang.String val$action>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" produced an error: ");

        $r7 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaNtfMng", $r9, r1);

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.media3.session.MediaNotificationManager$1 r0;
        java.lang.Object r1;
        androidx.media3.session.SessionResult $r2;

        r0 := @this: androidx.media3.session.MediaNotificationManager$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.session.SessionResult) r1;

        virtualinvoke r0.<androidx.media3.session.MediaNotificationManager$1: void onSuccess(androidx.media3.session.SessionResult)>($r2);

        return;
    }

androidx.media3.session.MediaNotificationManager$Api24
    public static void stopForeground(androidx.media3.session.MediaSessionService, boolean)
    {
        androidx.media3.session.MediaSessionService r0;
        boolean z0;
        byte $b0;

        r0 := @parameter0: androidx.media3.session.MediaSessionService;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        virtualinvoke r0.<androidx.media3.session.MediaSessionService: void stopForeground(int)>($b0);

        return;
    }

    private void <init>()
    {
        androidx.media3.session.MediaNotificationManager$Api24 r0;

        r0 := @this: androidx.media3.session.MediaNotificationManager$Api24;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.session.MediaNotificationManager$Api29
    public static void startForeground(androidx.media3.session.MediaSessionService, androidx.media3.session.MediaNotification)
    {
        androidx.media3.session.MediaSessionService r0;
        androidx.media3.session.MediaNotification r1;
        java.lang.Throwable r2, $r4;
        android.app.Notification $r3;
        int $i0;

        r0 := @parameter0: androidx.media3.session.MediaSessionService;

        r1 := @parameter1: androidx.media3.session.MediaNotification;

     label1:
        $i0 = r1.<androidx.media3.session.MediaNotification: int notificationId>;

        $r3 = r1.<androidx.media3.session.MediaNotification: android.app.Notification notification>;

        virtualinvoke r0.<androidx.media3.session.MediaSessionService: void startForeground(int,android.app.Notification,int)>($i0, $r3, 2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String)>("MediaNtfMng", "The service must be declared with a foregroundServiceType that includes  mediaPlayback");

        throw r2;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void <init>()
    {
        androidx.media3.session.MediaNotificationManager$Api29 r0;

        r0 := @this: androidx.media3.session.MediaNotificationManager$Api29;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.session.MediaNotificationManager$MediaControllerListener
<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>
<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>
<androidx.media3.session.MediaNotificationManager$MediaControllerListener: java.util.Map customLayoutMap>
    public void <init>(androidx.media3.session.MediaSessionService, androidx.media3.session.MediaSession, java.util.Map)
    {
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r0;
        androidx.media3.session.MediaSessionService r1;
        androidx.media3.session.MediaSession r2;
        java.util.Map r3;

        r0 := @this: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        r1 := @parameter0: androidx.media3.session.MediaSessionService;

        r2 := @parameter1: androidx.media3.session.MediaSession;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService> = r1;

        r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session> = r2;

        r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: java.util.Map customLayoutMap> = r3;

        return;
    }

    public void onConnected()
    {
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r0;
        androidx.media3.session.MediaSession $r1, $r2;
        boolean $z0;
        androidx.media3.session.MediaSessionService $r3;

        r0 := @this: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        $r1 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        $z0 = staticinvoke <androidx.media3.session.MediaNotificationManager: boolean access$000(androidx.media3.session.MediaSession)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r2 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        virtualinvoke $r3.<androidx.media3.session.MediaSessionService: boolean onUpdateNotificationInternal(androidx.media3.session.MediaSession,boolean)>($r2, 0);

     label1:
        return;
    }

    public com.google.common.util.concurrent.ListenableFuture onSetCustomLayout(androidx.media3.session.MediaController, java.util.List)
    {
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r0;
        androidx.media3.session.MediaController r1;
        java.util.List r2;
        java.util.Map $r3;
        androidx.media3.session.MediaSession $r4, $r7;
        com.google.common.collect.ImmutableList $r5;
        androidx.media3.session.MediaSessionService $r8;
        androidx.media3.session.SessionResult $r9;
        com.google.common.util.concurrent.ListenableFuture $r10;

        r0 := @this: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: java.util.Map customLayoutMap>;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        $r5 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r8 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r7 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        virtualinvoke $r8.<androidx.media3.session.MediaSessionService: boolean onUpdateNotificationInternal(androidx.media3.session.MediaSession,boolean)>($r7, 0);

        $r9 = new androidx.media3.session.SessionResult;

        specialinvoke $r9.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r10 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r9);

        return $r10;
    }

    public void onEvents(androidx.media3.common.Player, androidx.media3.common.Player$Events)
    {
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r0;
        androidx.media3.common.Player r1;
        androidx.media3.common.Player$Events r2;
        int[] $r3;
        boolean $z0;
        androidx.media3.session.MediaSession $r4;
        androidx.media3.session.MediaSessionService $r5;

        r0 := @this: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        r1 := @parameter0: androidx.media3.common.Player;

        r2 := @parameter1: androidx.media3.common.Player$Events;

        $r3 = newarray (int)[4];

        $r3[0] = 4;

        $r3[1] = 5;

        $r3[2] = 14;

        $r3[3] = 0;

        $z0 = virtualinvoke r2.<androidx.media3.common.Player$Events: boolean containsAny(int[])>($r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionService: boolean onUpdateNotificationInternal(androidx.media3.session.MediaSession,boolean)>($r4, 0);

     label1:
        return;
    }

    public void onDisconnected(androidx.media3.session.MediaController)
    {
        androidx.media3.session.MediaNotificationManager$MediaControllerListener r0;
        androidx.media3.session.MediaController r1;
        androidx.media3.session.MediaSession $r2, $r4;
        androidx.media3.session.MediaSessionService $r3, $r5;

        r0 := @this: androidx.media3.session.MediaNotificationManager$MediaControllerListener;

        r1 := @parameter0: androidx.media3.session.MediaController;

        $r3 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r2 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        virtualinvoke $r3.<androidx.media3.session.MediaSessionService: void removeSession(androidx.media3.session.MediaSession)>($r2);

        $r5 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSessionService mediaSessionService>;

        $r4 = r0.<androidx.media3.session.MediaNotificationManager$MediaControllerListener: androidx.media3.session.MediaSession session>;

        virtualinvoke $r5.<androidx.media3.session.MediaSessionService: boolean onUpdateNotificationInternal(androidx.media3.session.MediaSession,boolean)>($r4, 0);

        return;
    }

