kotlin.comparisons.ComparisonsKt___ComparisonsKt
    public void <init>()
    {
        kotlin.comparisons.ComparisonsKt___ComparisonsKt $r0;

        $r0 := @this: kotlin.comparisons.ComparisonsKt___ComparisonsKt;

        specialinvoke $r0.<kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: void <init>()>();

        return;
    }

    public static final java.lang.Object maxOf(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        java.lang.Object $r0, $r2, $r3;
        java.util.Comparator $r1;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r3 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator)>($r3, $r0, $r1);

        $r2 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator)>($r2, $r3, $r1);

        return $r2;
    }

    public static final java.lang.Object maxOf(java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        java.lang.Object $r0, $r1;
        int $i0;
        java.util.Comparator $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "comparator");

        $i0 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r0, $r1);

        if $i0 < 0 goto label1;

        return $r0;

     label1:
        return $r1;
    }

    public static final java.lang.Object maxOf(java.lang.Object, java.lang.Object[], java.util.Comparator)
    {
        java.lang.Object[] $r0;
        java.util.Comparator $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1, $i2;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object[];

        $r1 := @parameter2: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r2 = $r0[$i2];

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $i0 >= 0 goto label2;

        $r3 = $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $r3;
    }

    public static final java.lang.Object minOf(java.lang.Object, java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        java.lang.Object $r0, $r2, $r3;
        java.util.Comparator $r1;

        $r2 := @parameter0: java.lang.Object;

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.Object;

        $r1 := @parameter3: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $r3 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator)>($r3, $r0, $r1);

        $r2 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator)>($r2, $r3, $r1);

        return $r2;
    }

    public static final java.lang.Object minOf(java.lang.Object, java.lang.Object, java.util.Comparator)
    {
        java.lang.Object $r0, $r1;
        int $i0;
        java.util.Comparator $r2;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "comparator");

        $i0 = interfaceinvoke $r2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r0, $r1);

        if $i0 > 0 goto label1;

        return $r0;

     label1:
        return $r1;
    }

    public static final java.lang.Object minOf(java.lang.Object, java.lang.Object[], java.util.Comparator)
    {
        java.lang.Object[] $r0;
        java.util.Comparator $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1, $i2;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Object[];

        $r1 := @parameter2: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "comparator");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r2 = $r0[$i2];

        $i0 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $i0 <= 0 goto label2;

        $r3 = $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $r3;
    }

