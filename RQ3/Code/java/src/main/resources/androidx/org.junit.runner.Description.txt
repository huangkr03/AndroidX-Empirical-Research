org.junit.runner.Description
<org.junit.runner.Description: org.junit.runner.Description EMPTY>
<org.junit.runner.Description: java.util.regex.Pattern METHOD_AND_CLASS_NAME_PATTERN>
<org.junit.runner.Description: org.junit.runner.Description TEST_MECHANISM>
<org.junit.runner.Description: long serialVersionUID>
<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>
<org.junit.runner.Description: java.util.Collection fChildren>
<org.junit.runner.Description: java.lang.String fDisplayName>
<org.junit.runner.Description: java.lang.Class fTestClass>
<org.junit.runner.Description: java.io.Serializable fUniqueId>
    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        org.junit.runner.Description $r1;
        java.lang.'annotation'.Annotation[] $r2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\s\\S]*)\\((.*)\\)");

        <org.junit.runner.Description: java.util.regex.Pattern METHOD_AND_CLASS_NAME_PATTERN> = $r0;

        $r1 = new org.junit.runner.Description;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r1.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, "No Tests", $r2);

        <org.junit.runner.Description: org.junit.runner.Description EMPTY> = $r1;

        $r1 = new org.junit.runner.Description;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r1.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, "Test mechanism", $r2);

        <org.junit.runner.Description: org.junit.runner.Description TEST_MECHANISM> = $r1;

        return;
    }

    private transient void <init>(java.lang.Class, java.lang.String, java.io.Serializable, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.io.Serializable $r3;
        java.lang.'annotation'.Annotation[] $r4;
        int $i0;
        java.util.concurrent.ConcurrentLinkedQueue $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: org.junit.runner.Description;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.io.Serializable;

        $r4 := @parameter3: java.lang.'annotation'.Annotation[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r5.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        $r0.<org.junit.runner.Description: java.util.Collection fChildren> = $r5;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The display name must not be empty.");

        throw $r6;

     label2:
        if $r3 != null goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The unique id must not be null.");

        throw $r6;

     label3:
        $r0.<org.junit.runner.Description: java.lang.Class fTestClass> = $r1;

        $r0.<org.junit.runner.Description: java.lang.String fDisplayName> = $r2;

        $r0.<org.junit.runner.Description: java.io.Serializable fUniqueId> = $r3;

        $r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations> = $r4;

        return;
    }

    private transient void <init>(java.lang.Class, java.lang.String, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.lang.'annotation'.Annotation[] $r3;
        java.io.Serializable r4;

        $r0 := @this: org.junit.runner.Description;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 = (java.io.Serializable) $r2;

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.io.Serializable,java.lang.'annotation'.Annotation[])>($r1, $r2, r4, $r3);

        return;
    }

    public static org.junit.runner.Description createSuiteDescription(java.lang.Class)
    {
        java.lang.Class $r0;
        org.junit.runner.Description $r1;
        java.lang.String $r2;
        java.lang.'annotation'.Annotation[] $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 = new org.junit.runner.Description;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        specialinvoke $r1.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r0, $r2, $r3);

        return $r1;
    }

    public static transient org.junit.runner.Description createSuiteDescription(java.lang.String, java.lang.'annotation'.Annotation[])
    {
        java.lang.String $r0;
        java.lang.'annotation'.Annotation[] $r1;
        org.junit.runner.Description $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.'annotation'.Annotation[];

        $r2 = new org.junit.runner.Description;

        specialinvoke $r2.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, $r0, $r1);

        return $r2;
    }

    public static org.junit.runner.Description createTestDescription(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r3;
        org.junit.runner.Description $r2;
        java.lang.'annotation'.Annotation[] $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.junit.runner.Description;

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r1 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>($r1, $r3);

        $r4 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r2.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r0, $r1, $r4);

        return $r2;
    }

    public static transient org.junit.runner.Description createTestDescription(java.lang.Class, java.lang.String, java.lang.'annotation'.Annotation[])
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r4;
        java.lang.'annotation'.Annotation[] $r2;
        org.junit.runner.Description $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.'annotation'.Annotation[];

        $r3 = new org.junit.runner.Description;

        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r1 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>($r1, $r4);

        specialinvoke $r3.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r0, $r1, $r2);

        return $r3;
    }

    private static java.lang.String formatDisplayName(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r0;

        $r2[1] = $r1;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s(%s)", $r2);

        return $r0;
    }

    public void addChild(org.junit.runner.Description)
    {
        org.junit.runner.Description $r0, $r1;
        java.util.Collection $r2;

        $r0 := @this: org.junit.runner.Description;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 = $r0.<org.junit.runner.Description: java.util.Collection fChildren>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return;
    }

    public org.junit.runner.Description childlessCopy()
    {
        org.junit.runner.Description $r0, $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.lang.'annotation'.Annotation[] $r4;

        $r0 := @this: org.junit.runner.Description;

        $r1 = new org.junit.runner.Description;

        $r2 = $r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

        $r3 = $r0.<org.junit.runner.Description: java.lang.String fDisplayName>;

        $r4 = $r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>;

        specialinvoke $r1.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r2, $r3, $r4);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.junit.runner.Description $r0, $r3;
        java.io.Serializable $r1, $r4;
        boolean $z0;
        java.lang.Object $r2;

        $r0 := @this: org.junit.runner.Description;

        $r2 := @parameter0: java.lang.Object;

        $z0 = $r2 instanceof org.junit.runner.Description;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = (org.junit.runner.Description) $r2;

        $r4 = $r0.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $r1 = $r3.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.junit.runner.Description $r0;
        java.lang.Class $r1, $r4;
        java.lang.'annotation'.Annotation[] $r2;
        int $i0, $i1;
        java.lang.'annotation'.Annotation $r3;
        boolean $z0;
        java.lang.Object $r5;

        $r0 := @this: org.junit.runner.Description;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        $r4 = interfaceinvoke $r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r3);

        $r3 = (java.lang.'annotation'.Annotation) $r5;

        return $r3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.util.ArrayList getChildren()
    {
        org.junit.runner.Description $r0;
        java.util.ArrayList $r1;
        java.util.Collection $r2;

        $r0 := @this: org.junit.runner.Description;

        $r1 = new java.util.ArrayList;

        $r2 = $r0.<org.junit.runner.Description: java.util.Collection fChildren>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    public java.lang.String getDisplayName()
    {
        org.junit.runner.Description $r0;
        java.lang.String r1;

        $r0 := @this: org.junit.runner.Description;

        r1 = $r0.<org.junit.runner.Description: java.lang.String fDisplayName>;

        return r1;
    }

    public int hashCode()
    {
        org.junit.runner.Description $r0;
        int $i0;
        java.io.Serializable $r1;

        $r0 := @this: org.junit.runner.Description;

        $r1 = $r0.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.junit.runner.Description $r0, $r1;
        boolean $z0;

        $r0 := @this: org.junit.runner.Description;

        $r1 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        $z0 = virtualinvoke $r0.<org.junit.runner.Description: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isSuite()
    {
        org.junit.runner.Description $r0;
        boolean $z0;

        $r0 := @this: org.junit.runner.Description;

        $z0 = virtualinvoke $r0.<org.junit.runner.Description: boolean isTest()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTest()
    {
        org.junit.runner.Description $r0;
        boolean $z0;
        java.util.Collection $r1;

        $r0 := @this: org.junit.runner.Description;

        $r1 = $r0.<org.junit.runner.Description: java.util.Collection fChildren>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public int testCount()
    {
        org.junit.runner.Description $r0;
        boolean $z0;
        java.util.Collection $r1;
        java.util.Iterator $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @this: org.junit.runner.Description;

        $z0 = virtualinvoke $r0.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = $r0.<org.junit.runner.Description: java.util.Collection fChildren>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (org.junit.runner.Description) $r3;

        $i1 = virtualinvoke $r0.<org.junit.runner.Description: int testCount()>();

        $i0 = $i1 + $i0;

        goto label2;

     label3:
        return $i0;
    }

    public java.lang.String toString()
    {
        org.junit.runner.Description $r0;
        java.lang.String $r1;

        $r0 := @this: org.junit.runner.Description;

        $r1 = virtualinvoke $r0.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        return $r1;
    }

