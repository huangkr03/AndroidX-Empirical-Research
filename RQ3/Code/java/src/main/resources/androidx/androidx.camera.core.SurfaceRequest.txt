androidx.camera.core.SurfaceRequest
<androidx.camera.core.SurfaceRequest: java.lang.Object mLock>
<androidx.camera.core.SurfaceRequest: android.util.Size mResolution>
<androidx.camera.core.SurfaceRequest: android.util.Range mExpectedFrameRate>
<androidx.camera.core.SurfaceRequest: boolean mRGBA8888Required>
<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.CameraInternal mCamera>
<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>
<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mSurfaceCompleter>
<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSessionStatusFuture>
<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mRequestCancellationCompleter>
<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.DeferrableSurface mInternalDeferrableSurface>
<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfo mTransformationInfo>
<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfoListener mTransformationInfoListener>
<androidx.camera.core.SurfaceRequest: java.util.concurrent.Executor mTransformationInfoExecutor>
    public void <init>(android.util.Size, androidx.camera.core.impl.CameraInternal, boolean)
    {
        androidx.camera.core.SurfaceRequest r0;
        android.util.Size r1;
        androidx.camera.core.impl.CameraInternal r2;
        boolean z0;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: android.util.Size;

        r2 := @parameter1: androidx.camera.core.impl.CameraInternal;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.camera.core.SurfaceRequest: void <init>(android.util.Size,androidx.camera.core.impl.CameraInternal,boolean,android.util.Range)>(r1, r2, z0, null);

        return;
    }

    public void <init>(android.util.Size, androidx.camera.core.impl.CameraInternal, boolean, android.util.Range)
    {
        androidx.camera.core.SurfaceRequest r0;
        android.util.Size r1;
        androidx.camera.core.impl.CameraInternal r2;
        boolean z0;
        android.util.Range r3;
        java.lang.String r4;
        java.util.concurrent.atomic.AtomicReference r5, r8, r10, $r19, $r24, $r33;
        com.google.common.util.concurrent.ListenableFuture r6, r11, $r26, $r28, $r35, $r43;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r7, r9, $r22, $r31, $r37, $r39;
        java.lang.Object $r12, $r21, $r23, $r30, $r32, $r36, $r38;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18;
        int $i0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r20, $r25, $r34;
        androidx.camera.core.SurfaceRequest$1 $r27;
        java.util.concurrent.Executor $r29, $r44, $r46;
        androidx.camera.core.SurfaceRequest$2 $r40;
        androidx.camera.core.impl.DeferrableSurface $r41;
        androidx.camera.core.SurfaceRequest$3 $r42;
        java.lang.Runnable $r45;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: android.util.Size;

        r2 := @parameter1: androidx.camera.core.impl.CameraInternal;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.util.Range;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.SurfaceRequest: java.lang.Object mLock> = $r12;

        r0.<androidx.camera.core.SurfaceRequest: android.util.Size mResolution> = r1;

        r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.CameraInternal mCamera> = r2;

        r0.<androidx.camera.core.SurfaceRequest: boolean mRGBA8888Required> = z0;

        r0.<androidx.camera.core.SurfaceRequest: android.util.Range mExpectedFrameRate> = r3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SurfaceRequest[size: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id: ");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r19.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r5 = $r19;

        $r20 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.concurrent.atomic.AtomicReference,java.lang.String)>(r5, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference,java.lang.String,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        r6 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r20);

        $r21 = virtualinvoke r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r22 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r21;

        $r23 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r22);

        r7 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r23;

        r0.<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mRequestCancellationCompleter> = r7;

        $r24 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r24.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r8 = $r24;

        $r25 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.concurrent.atomic.AtomicReference,java.lang.String)>(r8, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: java.lang.Object lambda$new$1(java.util.concurrent.atomic.AtomicReference,java.lang.String,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r26 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r25);

        r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSessionStatusFuture> = $r26;

        $r28 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSessionStatusFuture>;

        $r27 = new androidx.camera.core.SurfaceRequest$1;

        specialinvoke $r27.<androidx.camera.core.SurfaceRequest$1: void <init>(androidx.camera.core.SurfaceRequest,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,com.google.common.util.concurrent.ListenableFuture)>(r0, r7, r6);

        $r29 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r28, $r27, $r29);

        $r30 = virtualinvoke r8.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r31 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r30;

        $r32 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r31);

        r9 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r32;

        $r33 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r33.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r10 = $r33;

        $r34 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.concurrent.atomic.AtomicReference,java.lang.String)>(r10, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: java.lang.Object lambda$new$2(java.util.concurrent.atomic.AtomicReference,java.lang.String,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r35 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r34);

        r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture> = $r35;

        $r36 = virtualinvoke r10.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r37 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r36;

        $r38 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r37);

        $r39 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r38;

        r0.<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mSurfaceCompleter> = $r39;

        $r40 = new androidx.camera.core.SurfaceRequest$2;

        specialinvoke $r40.<androidx.camera.core.SurfaceRequest$2: void <init>(androidx.camera.core.SurfaceRequest,android.util.Size,int)>(r0, r1, 34);

        r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.DeferrableSurface mInternalDeferrableSurface> = $r40;

        $r41 = r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.DeferrableSurface mInternalDeferrableSurface>;

        r11 = virtualinvoke $r41.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture getTerminationFuture()>();

        $r43 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>;

        $r42 = new androidx.camera.core.SurfaceRequest$3;

        specialinvoke $r42.<androidx.camera.core.SurfaceRequest$3: void <init>(androidx.camera.core.SurfaceRequest,com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.lang.String)>(r0, r11, r9, r4);

        $r44 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r43, $r42, $r44);

        $r45 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.SurfaceRequest)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.SurfaceRequest: void lambda$new$3()>, methodtype: void __METHODTYPE__());

        $r46 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r11.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r45, $r46);

        return;
    }

    public androidx.camera.core.impl.DeferrableSurface getDeferrableSurface()
    {
        androidx.camera.core.SurfaceRequest r0;
        androidx.camera.core.impl.DeferrableSurface $r1;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r1 = r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.DeferrableSurface mInternalDeferrableSurface>;

        return $r1;
    }

    public android.util.Size getResolution()
    {
        androidx.camera.core.SurfaceRequest r0;
        android.util.Size $r1;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r1 = r0.<androidx.camera.core.SurfaceRequest: android.util.Size mResolution>;

        return $r1;
    }

    public android.util.Range getExpectedFrameRate()
    {
        androidx.camera.core.SurfaceRequest r0;
        android.util.Range $r1;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r1 = r0.<androidx.camera.core.SurfaceRequest: android.util.Range mExpectedFrameRate>;

        return $r1;
    }

    public androidx.camera.core.impl.CameraInternal getCamera()
    {
        androidx.camera.core.SurfaceRequest r0;
        androidx.camera.core.impl.CameraInternal $r1;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r1 = r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.CameraInternal mCamera>;

        return $r1;
    }

    public boolean isRGBA8888Required()
    {
        androidx.camera.core.SurfaceRequest r0;
        boolean $z0;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $z0 = r0.<androidx.camera.core.SurfaceRequest: boolean mRGBA8888Required>;

        return $z0;
    }

    public void provideSurface(android.view.Surface, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        androidx.camera.core.SurfaceRequest r0;
        android.view.Surface r1;
        java.util.concurrent.Executor r2;
        androidx.core.util.Consumer r3;
        java.lang.Throwable r4, $r13;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r5;
        boolean $z0, $z1, $z2;
        androidx.camera.core.SurfaceRequest$4 $r6;
        com.google.common.util.concurrent.ListenableFuture $r7, $r8, $r9, $r10;
        java.lang.Runnable $r12, $r14;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.core.util.Consumer;

        $r5 = r0.<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mSurfaceCompleter>;

        $z0 = virtualinvoke $r5.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>;

        $z1 = interfaceinvoke $r8.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();

        if $z1 == 0 goto label2;

     label1:
        $r7 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSessionStatusFuture>;

        $r6 = new androidx.camera.core.SurfaceRequest$4;

        specialinvoke $r6.<androidx.camera.core.SurfaceRequest$4: void <init>(androidx.camera.core.SurfaceRequest,androidx.core.util.Consumer,android.view.Surface)>(r0, r3, r1);

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r7, $r6, r2);

        goto label6;

     label2:
        $r9 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>;

        $z2 = interfaceinvoke $r9.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean)>($z2);

     label3:
        $r10 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>;

        interfaceinvoke $r10.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r12 = dynamicinvoke "run" <java.lang.Runnable (androidx.core.util.Consumer,android.view.Surface)>(r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: void lambda$provideSurface$4(androidx.core.util.Consumer,android.view.Surface)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r12);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r4 = $r13;

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.core.util.Consumer,android.view.Surface)>(r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: void lambda$provideSurface$5(androidx.core.util.Consumer,android.view.Surface)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r14);

     label6:
        return;

        catch java.lang.InterruptedException from label3 to label4 with label5;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label5;
    }

    public boolean willNotProvideSurface()
    {
        androidx.camera.core.SurfaceRequest r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r2;
        boolean $z0;
        androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException r3;
        java.lang.Throwable r4;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r2 = r0.<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mSurfaceCompleter>;

        r3 = new androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException;

        specialinvoke r3.<androidx.camera.core.impl.DeferrableSurface$SurfaceUnavailableException: void <init>(java.lang.String)>("Surface request will not complete.");

        r4 = (java.lang.Throwable) r3;

        $z0 = virtualinvoke $r2.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r4);

        return $z0;
    }

    public void addRequestCancellationListener(java.util.concurrent.Executor, java.lang.Runnable)
    {
        androidx.camera.core.SurfaceRequest r0;
        java.util.concurrent.Executor r1;
        java.lang.Runnable r2;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r3;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<androidx.camera.core.SurfaceRequest: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mRequestCancellationCompleter>;

        virtualinvoke $r3.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)>(r2, r1);

        return;
    }

    public void updateTransformationInfo(androidx.camera.core.SurfaceRequest$TransformationInfo)
    {
        androidx.camera.core.SurfaceRequest r0;
        androidx.camera.core.SurfaceRequest$TransformationInfo r1;
        androidx.camera.core.SurfaceRequest$TransformationInfoListener r2;
        java.util.concurrent.Executor r3;
        java.lang.Object r4, $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest$TransformationInfo;

        $r5 = r0.<androidx.camera.core.SurfaceRequest: java.lang.Object mLock>;

        r4 = $r5;

        entermonitor $r5;

        r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfo mTransformationInfo> = r1;

        r2 = r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfoListener mTransformationInfoListener>;

        r3 = r0.<androidx.camera.core.SurfaceRequest: java.util.concurrent.Executor mTransformationInfoExecutor>;

        exitmonitor r4;

        goto label1;

     label1:
        if r2 == null goto label2;

        if r3 == null goto label2;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.SurfaceRequest$TransformationInfoListener,androidx.camera.core.SurfaceRequest$TransformationInfo)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: void lambda$updateTransformationInfo$6(androidx.camera.core.SurfaceRequest$TransformationInfoListener,androidx.camera.core.SurfaceRequest$TransformationInfo)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    public void setTransformationInfoListener(java.util.concurrent.Executor, androidx.camera.core.SurfaceRequest$TransformationInfoListener)
    {
        androidx.camera.core.SurfaceRequest r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.SurfaceRequest$TransformationInfoListener r2;
        androidx.camera.core.SurfaceRequest$TransformationInfo r3;
        java.lang.Object r4, $r5;
        java.lang.Runnable $r6;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.SurfaceRequest$TransformationInfoListener;

        $r5 = r0.<androidx.camera.core.SurfaceRequest: java.lang.Object mLock>;

        r4 = $r5;

        entermonitor $r5;

        r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfoListener mTransformationInfoListener> = r2;

        r0.<androidx.camera.core.SurfaceRequest: java.util.concurrent.Executor mTransformationInfoExecutor> = r1;

        r3 = r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfo mTransformationInfo>;

        exitmonitor r4;

        goto label1;

     label1:
        if r3 == null goto label2;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.SurfaceRequest$TransformationInfoListener,androidx.camera.core.SurfaceRequest$TransformationInfo)>(r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.SurfaceRequest: void lambda$setTransformationInfoListener$7(androidx.camera.core.SurfaceRequest$TransformationInfoListener,androidx.camera.core.SurfaceRequest$TransformationInfo)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    public void clearTransformationInfoListener()
    {
        androidx.camera.core.SurfaceRequest r0;
        java.lang.Object r1, $r2;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r2 = r0.<androidx.camera.core.SurfaceRequest: java.lang.Object mLock>;

        r1 = $r2;

        entermonitor $r2;

        r0.<androidx.camera.core.SurfaceRequest: androidx.camera.core.SurfaceRequest$TransformationInfoListener mTransformationInfoListener> = null;

        r0.<androidx.camera.core.SurfaceRequest: java.util.concurrent.Executor mTransformationInfoExecutor> = null;

        exitmonitor r1;

        goto label1;

     label1:
        return;
    }

    private static void lambda$setTransformationInfoListener$7(androidx.camera.core.SurfaceRequest$TransformationInfoListener, androidx.camera.core.SurfaceRequest$TransformationInfo)
    {
        androidx.camera.core.SurfaceRequest$TransformationInfoListener r0;
        androidx.camera.core.SurfaceRequest$TransformationInfo r1;

        r0 := @parameter0: androidx.camera.core.SurfaceRequest$TransformationInfoListener;

        r1 := @parameter1: androidx.camera.core.SurfaceRequest$TransformationInfo;

        interfaceinvoke r0.<androidx.camera.core.SurfaceRequest$TransformationInfoListener: void onTransformationInfoUpdate(androidx.camera.core.SurfaceRequest$TransformationInfo)>(r1);

        return;
    }

    private static void lambda$updateTransformationInfo$6(androidx.camera.core.SurfaceRequest$TransformationInfoListener, androidx.camera.core.SurfaceRequest$TransformationInfo)
    {
        androidx.camera.core.SurfaceRequest$TransformationInfoListener r0;
        androidx.camera.core.SurfaceRequest$TransformationInfo r1;

        r0 := @parameter0: androidx.camera.core.SurfaceRequest$TransformationInfoListener;

        r1 := @parameter1: androidx.camera.core.SurfaceRequest$TransformationInfo;

        interfaceinvoke r0.<androidx.camera.core.SurfaceRequest$TransformationInfoListener: void onTransformationInfoUpdate(androidx.camera.core.SurfaceRequest$TransformationInfo)>(r1);

        return;
    }

    private static void lambda$provideSurface$5(androidx.core.util.Consumer, android.view.Surface)
    {
        androidx.core.util.Consumer r0;
        android.view.Surface r1;
        androidx.camera.core.SurfaceRequest$Result $r2;

        r0 := @parameter0: androidx.core.util.Consumer;

        r1 := @parameter1: android.view.Surface;

        $r2 = staticinvoke <androidx.camera.core.SurfaceRequest$Result: androidx.camera.core.SurfaceRequest$Result of(int,android.view.Surface)>(4, r1);

        interfaceinvoke r0.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r2);

        return;
    }

    private static void lambda$provideSurface$4(androidx.core.util.Consumer, android.view.Surface)
    {
        androidx.core.util.Consumer r0;
        android.view.Surface r1;
        androidx.camera.core.SurfaceRequest$Result $r2;

        r0 := @parameter0: androidx.core.util.Consumer;

        r1 := @parameter1: android.view.Surface;

        $r2 = staticinvoke <androidx.camera.core.SurfaceRequest$Result: androidx.camera.core.SurfaceRequest$Result of(int,android.view.Surface)>(3, r1);

        interfaceinvoke r0.<androidx.core.util.Consumer: void accept(java.lang.Object)>($r2);

        return;
    }

    private void lambda$new$3()
    {
        androidx.camera.core.SurfaceRequest r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.SurfaceRequest;

        $r1 = r0.<androidx.camera.core.SurfaceRequest: com.google.common.util.concurrent.ListenableFuture mSurfaceFuture>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

        return;
    }

    private static java.lang.Object lambda$new$2(java.util.concurrent.atomic.AtomicReference, java.lang.String, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.String r1, $r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Surface");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.Object lambda$new$1(java.util.concurrent.atomic.AtomicReference, java.lang.String, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.String r1, $r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-status");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference, java.lang.String, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReference r0;
        java.lang.String r1, $r6;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-cancellation");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

