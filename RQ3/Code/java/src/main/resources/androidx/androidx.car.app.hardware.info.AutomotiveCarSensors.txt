androidx.car.app.hardware.info.AutomotiveCarSensors
    public void <init>()
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addAccelerometerListener(int, java.util.concurrent.Executor, androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        int i0;
        java.util.concurrent.Executor r1;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.hardware.common.OnCarDataAvailableListener)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.hardware.info.AutomotiveCarSensors: void lambda$addAccelerometerListener$0(androidx.car.app.hardware.common.OnCarDataAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void removeAccelerometerListener(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r1;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        r1 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        return;
    }

    public void addGyroscopeListener(int, java.util.concurrent.Executor, androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        int i0;
        java.util.concurrent.Executor r1;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.hardware.common.OnCarDataAvailableListener)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.hardware.info.AutomotiveCarSensors: void lambda$addGyroscopeListener$1(androidx.car.app.hardware.common.OnCarDataAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void removeGyroscopeListener(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r1;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        r1 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        return;
    }

    public void addCompassListener(int, java.util.concurrent.Executor, androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        int i0;
        java.util.concurrent.Executor r1;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.hardware.common.OnCarDataAvailableListener)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.hardware.info.AutomotiveCarSensors: void lambda$addCompassListener$2(androidx.car.app.hardware.common.OnCarDataAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void removeCompassListener(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r1;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        r1 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        return;
    }

    public void addCarHardwareLocationListener(int, java.util.concurrent.Executor, androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        int i0;
        java.util.concurrent.Executor r1;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.app.hardware.common.OnCarDataAvailableListener)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.app.hardware.info.AutomotiveCarSensors: void lambda$addCarHardwareLocationListener$3(androidx.car.app.hardware.common.OnCarDataAvailableListener)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void removeCarHardwareLocationListener(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.info.AutomotiveCarSensors r0;
        androidx.car.app.hardware.common.OnCarDataAvailableListener r1;

        r0 := @this: androidx.car.app.hardware.info.AutomotiveCarSensors;

        r1 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        return;
    }

    private static void lambda$addCarHardwareLocationListener$3(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.common.OnCarDataAvailableListener r0;
        androidx.car.app.hardware.info.CarHardwareLocation $r1;
        androidx.car.app.hardware.common.CarValue $r2;

        r0 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r1 = new androidx.car.app.hardware.info.CarHardwareLocation;

        $r2 = <androidx.car.app.hardware.info.CarHardwareLocation: androidx.car.app.hardware.common.CarValue UNIMPLEMENTED_LOCATION>;

        specialinvoke $r1.<androidx.car.app.hardware.info.CarHardwareLocation: void <init>(androidx.car.app.hardware.common.CarValue)>($r2);

        interfaceinvoke r0.<androidx.car.app.hardware.common.OnCarDataAvailableListener: void onCarDataAvailable(java.lang.Object)>($r1);

        return;
    }

    private static void lambda$addCompassListener$2(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.common.OnCarDataAvailableListener r0;
        androidx.car.app.hardware.info.Compass $r1;
        androidx.car.app.hardware.common.CarValue $r2;

        r0 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r1 = new androidx.car.app.hardware.info.Compass;

        $r2 = <androidx.car.app.hardware.common.CarValue: androidx.car.app.hardware.common.CarValue UNIMPLEMENTED_FLOAT_LIST>;

        specialinvoke $r1.<androidx.car.app.hardware.info.Compass: void <init>(androidx.car.app.hardware.common.CarValue)>($r2);

        interfaceinvoke r0.<androidx.car.app.hardware.common.OnCarDataAvailableListener: void onCarDataAvailable(java.lang.Object)>($r1);

        return;
    }

    private static void lambda$addGyroscopeListener$1(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.common.OnCarDataAvailableListener r0;
        androidx.car.app.hardware.info.Gyroscope $r1;
        androidx.car.app.hardware.common.CarValue $r2;

        r0 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r1 = new androidx.car.app.hardware.info.Gyroscope;

        $r2 = <androidx.car.app.hardware.common.CarValue: androidx.car.app.hardware.common.CarValue UNIMPLEMENTED_FLOAT_LIST>;

        specialinvoke $r1.<androidx.car.app.hardware.info.Gyroscope: void <init>(androidx.car.app.hardware.common.CarValue)>($r2);

        interfaceinvoke r0.<androidx.car.app.hardware.common.OnCarDataAvailableListener: void onCarDataAvailable(java.lang.Object)>($r1);

        return;
    }

    private static void lambda$addAccelerometerListener$0(androidx.car.app.hardware.common.OnCarDataAvailableListener)
    {
        androidx.car.app.hardware.common.OnCarDataAvailableListener r0;
        androidx.car.app.hardware.info.Accelerometer $r1;
        androidx.car.app.hardware.common.CarValue $r2;

        r0 := @parameter0: androidx.car.app.hardware.common.OnCarDataAvailableListener;

        $r1 = new androidx.car.app.hardware.info.Accelerometer;

        $r2 = <androidx.car.app.hardware.common.CarValue: androidx.car.app.hardware.common.CarValue UNIMPLEMENTED_FLOAT_LIST>;

        specialinvoke $r1.<androidx.car.app.hardware.info.Accelerometer: void <init>(androidx.car.app.hardware.common.CarValue)>($r2);

        interfaceinvoke r0.<androidx.car.app.hardware.common.OnCarDataAvailableListener: void onCarDataAvailable(java.lang.Object)>($r1);

        return;
    }

