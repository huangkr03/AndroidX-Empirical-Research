androidx.camera.core.impl.LiveDataObservable
<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>
<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>
    public void <init>()
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.lifecycle.MutableLiveData $r1;
        java.util.HashMap $r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r1.<androidx.lifecycle.MutableLiveData: void <init>()>();

        r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers> = $r2;

        return;
    }

    public void postValue(java.lang.Object)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        java.lang.Object r1;
        androidx.lifecycle.MutableLiveData $r2;
        androidx.camera.core.impl.LiveDataObservable$Result $r3;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        $r3 = staticinvoke <androidx.camera.core.impl.LiveDataObservable$Result: androidx.camera.core.impl.LiveDataObservable$Result fromValue(java.lang.Object)>(r1);

        virtualinvoke $r2.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>($r3);

        return;
    }

    public void postError(java.lang.Throwable)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        java.lang.Throwable r1;
        androidx.lifecycle.MutableLiveData $r2;
        androidx.camera.core.impl.LiveDataObservable$Result $r3;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        $r3 = staticinvoke <androidx.camera.core.impl.LiveDataObservable$Result: androidx.camera.core.impl.LiveDataObservable$Result fromError(java.lang.Throwable)>(r1);

        virtualinvoke $r2.<androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)>($r3);

        return;
    }

    public androidx.lifecycle.LiveData getLiveData()
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.lifecycle.MutableLiveData $r1;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        $r1 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        return $r1;
    }

    public com.google.common.util.concurrent.ListenableFuture fetchData()
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        $r1 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.core.impl.LiveDataObservable)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.LiveDataObservable: java.lang.Object lambda$fetchData$1(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r2 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r1);

        return $r2;
    }

    public void addObserver(java.util.concurrent.Executor, androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.impl.Observable$Observer r2;
        java.util.Map r3, $r7, $r8, $r11;
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r4, r5, $r10;
        java.lang.Throwable r6, $r15;
        java.lang.Object $r9;
        java.util.concurrent.ScheduledExecutorService $r13;
        java.lang.Runnable $r14;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.impl.Observable$Observer;

        $r7 = r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter) $r9;

        if r4 == null goto label2;

        virtualinvoke r4.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: void disable()>();

     label2:
        $r10 = new androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        specialinvoke $r10.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: void <init>(java.util.concurrent.Executor,androidx.camera.core.impl.Observable$Observer)>(r1, r2);

        r5 = $r10;

        $r11 = r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r5);

        $r13 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.LiveDataObservable,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)>(r0, r4, r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.LiveDataObservable: void lambda$addObserver$2(androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r13.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r14);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;

        r6 = $r15;

        exitmonitor r3;

     label5:
        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void removeObserver(androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.camera.core.impl.Observable$Observer r1;
        java.util.Map r2, $r5, $r6;
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r3;
        java.lang.Throwable r4, $r10;
        java.lang.Object $r7;
        java.util.concurrent.ScheduledExecutorService $r8;
        java.lang.Runnable $r9;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: androidx.camera.core.impl.Observable$Observer;

        $r5 = r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.core.impl.LiveDataObservable: java.util.Map mObservers>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter) $r7;

        if r3 == null goto label2;

        virtualinvoke r3.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: void disable()>();

        $r8 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r9 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.LiveDataObservable,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.LiveDataObservable: void lambda$removeObserver$3(androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r8.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r9);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void lambda$removeObserver$3(androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r1;
        androidx.lifecycle.MutableLiveData $r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        $r2 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        virtualinvoke $r2.<androidx.lifecycle.MutableLiveData: void removeObserver(androidx.lifecycle.Observer)>(r1);

        return;
    }

    private void lambda$addObserver$2(androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter, androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r1, r2;
        androidx.lifecycle.MutableLiveData $r3, $r4;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        r2 := @parameter1: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        if r1 == null goto label1;

        $r4 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        virtualinvoke $r4.<androidx.lifecycle.MutableLiveData: void removeObserver(androidx.lifecycle.Observer)>(r1);

     label1:
        $r3 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        virtualinvoke $r3.<androidx.lifecycle.MutableLiveData: void observeForever(androidx.lifecycle.Observer)>(r2);

        return;
    }

    private java.lang.Object lambda$fetchData$1(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.Runnable $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        long $l0;
        java.lang.String $r9;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.LiveDataObservable,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.LiveDataObservable: void lambda$fetchData$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [fetch@");

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void lambda$fetchData$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        androidx.camera.core.impl.LiveDataObservable r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.core.impl.LiveDataObservable$Result r2;
        androidx.lifecycle.MutableLiveData $r3;
        java.lang.Object $r4, $r8;
        boolean $z0;
        java.lang.Throwable $r5, $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r3 = r0.<androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.MutableLiveData mLiveData>;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.MutableLiveData: java.lang.Object getValue()>();

        r2 = (androidx.camera.core.impl.LiveDataObservable$Result) $r4;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Observable has not yet been initialized with a value.");

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r9);

        goto label3;

     label1:
        $z0 = virtualinvoke r2.<androidx.camera.core.impl.LiveDataObservable$Result: boolean completedSuccessfully()>();

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r2.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object getValue()>();

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>($r8);

        goto label3;

     label2:
        $r5 = virtualinvoke r2.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable getError()>();

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = virtualinvoke r2.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable getError()>();

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r7);

     label3:
        return;
    }

androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter
<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.atomic.AtomicBoolean mActive>
<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: androidx.camera.core.impl.Observable$Observer mObserver>
<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.Executor mExecutor>
    void <init>(java.util.concurrent.Executor, androidx.camera.core.impl.Observable$Observer)
    {
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.impl.Observable$Observer r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.impl.Observable$Observer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.atomic.AtomicBoolean mActive> = $r3;

        r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.Executor mExecutor> = r1;

        r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: androidx.camera.core.impl.Observable$Observer mObserver> = r2;

        return;
    }

    void disable()
    {
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        $r1 = r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.atomic.AtomicBoolean mActive>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        return;
    }

    public void onChanged(androidx.camera.core.impl.LiveDataObservable$Result)
    {
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r0;
        androidx.camera.core.impl.LiveDataObservable$Result r1;
        java.util.concurrent.Executor $r2;
        java.lang.Runnable $r3;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        r1 := @parameter0: androidx.camera.core.impl.LiveDataObservable$Result;

        $r2 = r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.Executor mExecutor>;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter,androidx.camera.core.impl.LiveDataObservable$Result)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: void lambda$onChanged$0(androidx.camera.core.impl.LiveDataObservable$Result)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r0;
        java.lang.Object r1;
        androidx.camera.core.impl.LiveDataObservable$Result $r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.impl.LiveDataObservable$Result) r1;

        virtualinvoke r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: void onChanged(androidx.camera.core.impl.LiveDataObservable$Result)>($r2);

        return;
    }

    private void lambda$onChanged$0(androidx.camera.core.impl.LiveDataObservable$Result)
    {
        androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter r0;
        androidx.camera.core.impl.LiveDataObservable$Result r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0, $z1;
        java.lang.Throwable $r3, $r6;
        androidx.camera.core.impl.Observable$Observer $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter;

        r1 := @parameter0: androidx.camera.core.impl.LiveDataObservable$Result;

        $r2 = r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: java.util.concurrent.atomic.AtomicBoolean mActive>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<androidx.camera.core.impl.LiveDataObservable$Result: boolean completedSuccessfully()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: androidx.camera.core.impl.Observable$Observer mObserver>;

        $r8 = virtualinvoke r1.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object getValue()>();

        interfaceinvoke $r7.<androidx.camera.core.impl.Observable$Observer: void onNewData(java.lang.Object)>($r8);

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable getError()>();

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = r0.<androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter: androidx.camera.core.impl.Observable$Observer mObserver>;

        $r6 = virtualinvoke r1.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable getError()>();

        interfaceinvoke $r5.<androidx.camera.core.impl.Observable$Observer: void onError(java.lang.Throwable)>($r6);

     label3:
        return;
    }

androidx.camera.core.impl.LiveDataObservable$Result
<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object mValue>
<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable mError>
    private void <init>(java.lang.Object, java.lang.Throwable)
    {
        androidx.camera.core.impl.LiveDataObservable$Result r0;
        java.lang.Object r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$Result;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object mValue> = r1;

        r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable mError> = r2;

        return;
    }

    static androidx.camera.core.impl.LiveDataObservable$Result fromValue(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.camera.core.impl.LiveDataObservable$Result $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new androidx.camera.core.impl.LiveDataObservable$Result;

        specialinvoke $r1.<androidx.camera.core.impl.LiveDataObservable$Result: void <init>(java.lang.Object,java.lang.Throwable)>(r0, null);

        return $r1;
    }

    static androidx.camera.core.impl.LiveDataObservable$Result fromError(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r3;
        androidx.camera.core.impl.LiveDataObservable$Result $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = new androidx.camera.core.impl.LiveDataObservable$Result;

        $r2 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r3 = (java.lang.Throwable) $r2;

        specialinvoke $r1.<androidx.camera.core.impl.LiveDataObservable$Result: void <init>(java.lang.Object,java.lang.Throwable)>(null, $r3);

        return $r1;
    }

    public boolean completedSuccessfully()
    {
        androidx.camera.core.impl.LiveDataObservable$Result r0;
        java.lang.Throwable $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$Result;

        $r1 = r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable mError>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object getValue()
    {
        androidx.camera.core.impl.LiveDataObservable$Result r0;
        boolean $z0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$Result;

        $z0 = virtualinvoke r0.<androidx.camera.core.impl.LiveDataObservable$Result: boolean completedSuccessfully()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Result contains an error. Does not contain a value.");

        throw $r2;

     label1:
        $r1 = r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object mValue>;

        return $r1;
    }

    public java.lang.Throwable getError()
    {
        androidx.camera.core.impl.LiveDataObservable$Result r0;
        java.lang.Throwable $r1;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$Result;

        $r1 = r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable mError>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.camera.core.impl.LiveDataObservable$Result r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r13;
        boolean $z0;
        java.lang.Throwable $r5;
        java.lang.String $r9, $r14;
        java.lang.Object $r12;

        r0 := @this: androidx.camera.core.impl.LiveDataObservable$Result;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Result: <");

        $z0 = virtualinvoke r0.<androidx.camera.core.impl.LiveDataObservable$Result: boolean completedSuccessfully()>();

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value: ");

        $r12 = r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object mValue>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r5 = r0.<androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable mError>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

