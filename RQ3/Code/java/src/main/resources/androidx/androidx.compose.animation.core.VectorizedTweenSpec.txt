androidx.compose.animation.core.VectorizedTweenSpec
<androidx.compose.animation.core.VectorizedTweenSpec: int durationMillis>
<androidx.compose.animation.core.VectorizedTweenSpec: int delayMillis>
<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.Easing easing>
<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec anim>
<androidx.compose.animation.core.VectorizedTweenSpec: int $stable>
    public void <init>(int, int, androidx.compose.animation.core.Easing)
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        int i0, i1, $i2, $i3;
        androidx.compose.animation.core.Easing r1, $r4;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r2;
        androidx.compose.animation.core.FloatTweenSpec $r3;
        androidx.compose.animation.core.FloatAnimationSpec $r5;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.compose.animation.core.Easing;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "easing");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.core.VectorizedTweenSpec: int durationMillis> = i0;

        r0.<androidx.compose.animation.core.VectorizedTweenSpec: int delayMillis> = i1;

        r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.Easing easing> = r1;

        $r2 = new androidx.compose.animation.core.VectorizedFloatAnimationSpec;

        $r3 = new androidx.compose.animation.core.FloatTweenSpec;

        $i2 = virtualinvoke r0.<androidx.compose.animation.core.VectorizedTweenSpec: int getDurationMillis()>();

        $i3 = virtualinvoke r0.<androidx.compose.animation.core.VectorizedTweenSpec: int getDelayMillis()>();

        $r4 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.Easing easing>;

        specialinvoke $r3.<androidx.compose.animation.core.FloatTweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing)>($i2, $i3, $r4);

        $r5 = (androidx.compose.animation.core.FloatAnimationSpec) $r3;

        specialinvoke $r2.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: void <init>(androidx.compose.animation.core.FloatAnimationSpec)>($r5);

        r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec anim> = $r2;

        return;
    }

    public void <init>(int, int, androidx.compose.animation.core.Easing, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        int i0, $i1, $i2, $i3, i4, i5;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.compose.animation.core.Easing r2;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        r2 := @parameter2: androidx.compose.animation.core.Easing;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i4 = 300;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i5 = 0;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r2 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getFastOutSlowInEasing()>();

     label3:
        specialinvoke r0.<androidx.compose.animation.core.VectorizedTweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing)>(i4, i5, r2);

        return;
    }

    public int getDurationMillis()
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        int $i0;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        $i0 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: int durationMillis>;

        return $i0;
    }

    public int getDelayMillis()
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        int $i0;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        $i0 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: int delayMillis>;

        return $i0;
    }

    public final androidx.compose.animation.core.Easing getEasing()
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        androidx.compose.animation.core.Easing $r1;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        $r1 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.Easing easing>;

        return $r1;
    }

    public androidx.compose.animation.core.AnimationVector getValueFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec anim>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;
        long l0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r5;
        androidx.compose.animation.core.VectorizedFloatAnimationSpec $r4;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = r0.<androidx.compose.animation.core.VectorizedTweenSpec: androidx.compose.animation.core.VectorizedFloatAnimationSpec anim>;

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.VectorizedFloatAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public void <init>()
    {
        androidx.compose.animation.core.VectorizedTweenSpec r0;

        r0 := @this: androidx.compose.animation.core.VectorizedTweenSpec;

        specialinvoke r0.<androidx.compose.animation.core.VectorizedTweenSpec: void <init>(int,int,androidx.compose.animation.core.Easing,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 0, null, 7, null);

        return;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.core.VectorizedTweenSpec: int $stable> = 8;

        return;
    }

