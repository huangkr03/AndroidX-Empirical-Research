androidx.webkit.internal.ApiHelperForM
    private void <init>()
    {
        androidx.webkit.internal.ApiHelperForM r0;

        r0 := @this: androidx.webkit.internal.ApiHelperForM;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void postMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)
    {
        android.webkit.WebMessagePort r0;
        android.webkit.WebMessage r1;

        r0 := @parameter0: android.webkit.WebMessagePort;

        r1 := @parameter1: android.webkit.WebMessage;

        virtualinvoke r0.<android.webkit.WebMessagePort: void postMessage(android.webkit.WebMessage)>(r1);

        return;
    }

    public static void close(android.webkit.WebMessagePort)
    {
        android.webkit.WebMessagePort r0;

        r0 := @parameter0: android.webkit.WebMessagePort;

        virtualinvoke r0.<android.webkit.WebMessagePort: void close()>();

        return;
    }

    public static void setWebMessageCallback(android.webkit.WebMessagePort, androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        android.webkit.WebMessagePort r0;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r1;
        androidx.webkit.internal.ApiHelperForM$1 $r2;

        r0 := @parameter0: android.webkit.WebMessagePort;

        r1 := @parameter1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        $r2 = new androidx.webkit.internal.ApiHelperForM$1;

        specialinvoke $r2.<androidx.webkit.internal.ApiHelperForM$1: void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r1);

        virtualinvoke r0.<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort$WebMessageCallback)>($r2);

        return;
    }

    public static void setWebMessageCallback(android.webkit.WebMessagePort, androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat, android.os.Handler)
    {
        android.webkit.WebMessagePort r0;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r1;
        android.os.Handler r2;
        androidx.webkit.internal.ApiHelperForM$2 $r3;

        r0 := @parameter0: android.webkit.WebMessagePort;

        r1 := @parameter1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r2 := @parameter2: android.os.Handler;

        $r3 = new androidx.webkit.internal.ApiHelperForM$2;

        specialinvoke $r3.<androidx.webkit.internal.ApiHelperForM$2: void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)>(r1);

        virtualinvoke r0.<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort$WebMessageCallback,android.os.Handler)>($r3, r2);

        return;
    }

    public static android.webkit.WebMessage createWebMessage(androidx.webkit.WebMessageCompat)
    {
        androidx.webkit.WebMessageCompat r0;
        android.webkit.WebMessage $r1;
        java.lang.String $r2;
        androidx.webkit.WebMessagePortCompat[] $r3;
        android.webkit.WebMessagePort[] $r4;

        r0 := @parameter0: androidx.webkit.WebMessageCompat;

        $r1 = new android.webkit.WebMessage;

        $r2 = virtualinvoke r0.<androidx.webkit.WebMessageCompat: java.lang.String getData()>();

        $r3 = virtualinvoke r0.<androidx.webkit.WebMessageCompat: androidx.webkit.WebMessagePortCompat[] getPorts()>();

        $r4 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: android.webkit.WebMessagePort[] compatToPorts(androidx.webkit.WebMessagePortCompat[])>($r3);

        specialinvoke $r1.<android.webkit.WebMessage: void <init>(java.lang.String,android.webkit.WebMessagePort[])>($r2, $r4);

        return $r1;
    }

    public static androidx.webkit.WebMessageCompat createWebMessageCompat(android.webkit.WebMessage)
    {
        android.webkit.WebMessage r0;
        androidx.webkit.WebMessageCompat $r1;
        java.lang.String $r2;
        android.webkit.WebMessagePort[] $r3;
        androidx.webkit.WebMessagePortCompat[] $r4;

        r0 := @parameter0: android.webkit.WebMessage;

        $r1 = new androidx.webkit.WebMessageCompat;

        $r2 = virtualinvoke r0.<android.webkit.WebMessage: java.lang.String getData()>();

        $r3 = virtualinvoke r0.<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()>();

        $r4 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessagePortCompat[] portsToCompat(android.webkit.WebMessagePort[])>($r3);

        specialinvoke $r1.<androidx.webkit.WebMessageCompat: void <init>(java.lang.String,androidx.webkit.WebMessagePortCompat[])>($r2, $r4);

        return $r1;
    }

    public static int getErrorCode(android.webkit.WebResourceError)
    {
        android.webkit.WebResourceError r0;
        int $i0;

        r0 := @parameter0: android.webkit.WebResourceError;

        $i0 = virtualinvoke r0.<android.webkit.WebResourceError: int getErrorCode()>();

        return $i0;
    }

    public static java.lang.CharSequence getDescription(android.webkit.WebResourceError)
    {
        android.webkit.WebResourceError r0;
        java.lang.CharSequence $r1;

        r0 := @parameter0: android.webkit.WebResourceError;

        $r1 = virtualinvoke r0.<android.webkit.WebResourceError: java.lang.CharSequence getDescription()>();

        return $r1;
    }

    public static void setOffscreenPreRaster(android.webkit.WebSettings, boolean)
    {
        android.webkit.WebSettings r0;
        boolean z0;

        r0 := @parameter0: android.webkit.WebSettings;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.webkit.WebSettings: void setOffscreenPreRaster(boolean)>(z0);

        return;
    }

    public static boolean getOffscreenPreRaster(android.webkit.WebSettings)
    {
        android.webkit.WebSettings r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.WebSettings;

        $z0 = virtualinvoke r0.<android.webkit.WebSettings: boolean getOffscreenPreRaster()>();

        return $z0;
    }

    public static void postVisualStateCallback(android.webkit.WebView, long, androidx.webkit.WebViewCompat$VisualStateCallback)
    {
        android.webkit.WebView r0;
        long l0;
        androidx.webkit.WebViewCompat$VisualStateCallback r1;
        androidx.webkit.internal.ApiHelperForM$3 $r2;

        r0 := @parameter0: android.webkit.WebView;

        l0 := @parameter1: long;

        r1 := @parameter2: androidx.webkit.WebViewCompat$VisualStateCallback;

        $r2 = new androidx.webkit.internal.ApiHelperForM$3;

        specialinvoke $r2.<androidx.webkit.internal.ApiHelperForM$3: void <init>(androidx.webkit.WebViewCompat$VisualStateCallback)>(r1);

        virtualinvoke r0.<android.webkit.WebView: void postVisualStateCallback(long,android.webkit.WebView$VisualStateCallback)>(l0, $r2);

        return;
    }

    public static void postWebMessage(android.webkit.WebView, android.webkit.WebMessage, android.net.Uri)
    {
        android.webkit.WebView r0;
        android.webkit.WebMessage r1;
        android.net.Uri r2;

        r0 := @parameter0: android.webkit.WebView;

        r1 := @parameter1: android.webkit.WebMessage;

        r2 := @parameter2: android.net.Uri;

        virtualinvoke r0.<android.webkit.WebView: void postWebMessage(android.webkit.WebMessage,android.net.Uri)>(r1, r2);

        return;
    }

    public static android.webkit.WebMessagePort[] createWebMessageChannel(android.webkit.WebView)
    {
        android.webkit.WebView r0;
        android.webkit.WebMessagePort[] $r1;

        r0 := @parameter0: android.webkit.WebView;

        $r1 = virtualinvoke r0.<android.webkit.WebView: android.webkit.WebMessagePort[] createWebMessageChannel()>();

        return $r1;
    }

androidx.webkit.internal.ApiHelperForM$1
<androidx.webkit.internal.ApiHelperForM$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>
    void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.ApiHelperForM$1 r0;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r1;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$1;

        r1 := @parameter0: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r0.<androidx.webkit.internal.ApiHelperForM$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback> = r1;

        specialinvoke r0.<android.webkit.WebMessagePort$WebMessageCallback: void <init>()>();

        return;
    }

    public void onMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)
    {
        androidx.webkit.internal.ApiHelperForM$1 r0;
        android.webkit.WebMessagePort r1;
        android.webkit.WebMessage r2;
        androidx.webkit.internal.WebMessagePortImpl $r3;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat $r4;
        androidx.webkit.WebMessageCompat $r5;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$1;

        r1 := @parameter0: android.webkit.WebMessagePort;

        r2 := @parameter1: android.webkit.WebMessage;

        $r4 = r0.<androidx.webkit.internal.ApiHelperForM$1: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>;

        $r3 = new androidx.webkit.internal.WebMessagePortImpl;

        specialinvoke $r3.<androidx.webkit.internal.WebMessagePortImpl: void <init>(android.webkit.WebMessagePort)>(r1);

        $r5 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessageCompat frameworkMessageToCompat(android.webkit.WebMessage)>(r2);

        virtualinvoke $r4.<androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)>($r3, $r5);

        return;
    }

androidx.webkit.internal.ApiHelperForM$2
<androidx.webkit.internal.ApiHelperForM$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>
    void <init>(androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
    {
        androidx.webkit.internal.ApiHelperForM$2 r0;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat r1;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$2;

        r1 := @parameter0: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat;

        r0.<androidx.webkit.internal.ApiHelperForM$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback> = r1;

        specialinvoke r0.<android.webkit.WebMessagePort$WebMessageCallback: void <init>()>();

        return;
    }

    public void onMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)
    {
        androidx.webkit.internal.ApiHelperForM$2 r0;
        android.webkit.WebMessagePort r1;
        android.webkit.WebMessage r2;
        androidx.webkit.internal.WebMessagePortImpl $r3;
        androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat $r4;
        androidx.webkit.WebMessageCompat $r5;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$2;

        r1 := @parameter0: android.webkit.WebMessagePort;

        r2 := @parameter1: android.webkit.WebMessage;

        $r4 = r0.<androidx.webkit.internal.ApiHelperForM$2: androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat val$callback>;

        $r3 = new androidx.webkit.internal.WebMessagePortImpl;

        specialinvoke $r3.<androidx.webkit.internal.WebMessagePortImpl: void <init>(android.webkit.WebMessagePort)>(r1);

        $r5 = staticinvoke <androidx.webkit.internal.WebMessagePortImpl: androidx.webkit.WebMessageCompat frameworkMessageToCompat(android.webkit.WebMessage)>(r2);

        virtualinvoke $r4.<androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)>($r3, $r5);

        return;
    }

androidx.webkit.internal.ApiHelperForM$3
<androidx.webkit.internal.ApiHelperForM$3: androidx.webkit.WebViewCompat$VisualStateCallback val$callback>
    void <init>(androidx.webkit.WebViewCompat$VisualStateCallback)
    {
        androidx.webkit.internal.ApiHelperForM$3 r0;
        androidx.webkit.WebViewCompat$VisualStateCallback r1;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$3;

        r1 := @parameter0: androidx.webkit.WebViewCompat$VisualStateCallback;

        r0.<androidx.webkit.internal.ApiHelperForM$3: androidx.webkit.WebViewCompat$VisualStateCallback val$callback> = r1;

        specialinvoke r0.<android.webkit.WebView$VisualStateCallback: void <init>()>();

        return;
    }

    public void onComplete(long)
    {
        androidx.webkit.internal.ApiHelperForM$3 r0;
        long l0;
        androidx.webkit.WebViewCompat$VisualStateCallback $r1;

        r0 := @this: androidx.webkit.internal.ApiHelperForM$3;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.webkit.internal.ApiHelperForM$3: androidx.webkit.WebViewCompat$VisualStateCallback val$callback>;

        interfaceinvoke $r1.<androidx.webkit.WebViewCompat$VisualStateCallback: void onComplete(long)>(l0);

        return;
    }

