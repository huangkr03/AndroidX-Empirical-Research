com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion Companion>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.common.flogger.FluentLogger logger>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel diagnosticsEvents>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function1 managedChannelBuilderFactory>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.Job orchestrateJob>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function3 testOrchestratorWorkerFactory>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker worker>
    static void <clinit>()
    {
        com.google.common.flogger.FluentLogger $r0;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion $r1;

        $r1 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion;

        specialinvoke $r1.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion Companion> = $r1;

        $r0 = staticinvoke <com.google.common.flogger.FluentLogger: com.google.common.flogger.FluentLogger forEnclosingClass()>();

        <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.common.flogger.FluentLogger logger> = $r0;

        return;
    }

    public void <init>(com.google.testing.platform.lib.coroutines.scope.JobScope, kotlin.jvm.functions.Function1)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;
        kotlin.jvm.functions.Function1 $r2;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter0: com.google.testing.platform.lib.coroutines.scope.JobScope;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "delegateJob");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "managedChannelBuilderFactory");

        $r3 = <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 INSTANCE>;

        specialinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: void <init>(com.google.testing.platform.lib.coroutines.scope.JobScope,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3)>($r1, $r2, $r3);

        return;
    }

    public void <init>(com.google.testing.platform.lib.coroutines.scope.JobScope, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function3)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlinx.coroutines.channels.Channel $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;
        kotlin.jvm.functions.Function1 $r3;
        kotlin.jvm.functions.Function3 $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: com.google.testing.platform.lib.coroutines.scope.JobScope;

        $r3 := @parameter1: kotlin.jvm.functions.Function1;

        $r4 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "delegateJob");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "managedChannelBuilderFactory");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "testOrchestratorWorkerFactory");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob> = $r2;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function1 managedChannelBuilderFactory> = $r3;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function3 testOrchestratorWorkerFactory> = $r4;

        $r1 = staticinvoke <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)>(2147483647, null, null, 6, null);

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel diagnosticsEvents> = $r1;

        return;
    }

    public static final com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker r1;

        $r0 := @parameter0: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker worker>;

        return r1;
    }

    public kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlinx.coroutines.ChildHandle $r1;
        kotlinx.coroutines.ChildJob $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: kotlinx.coroutines.ChildJob;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "child");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)>($r2);

        return $r1;
    }

    public void cancel(java.util.concurrent.CancellationException)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        java.util.concurrent.CancellationException $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter0: java.util.concurrent.CancellationException;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: void cancel(java.util.concurrent.CancellationException)>($r1);

        return;
    }

    public boolean complete()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean complete()>();

        return $z0;
    }

    public boolean completeExceptionally(java.lang.Throwable)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        java.lang.Throwable $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter0: java.lang.Throwable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "exception");

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean completeExceptionally(java.lang.Throwable)>($r1);

        return $z0;
    }

    public java.lang.Object fold(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r2 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)>($r2, $r1);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "key");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r2);

        return $r1;
    }

    public java.util.concurrent.CancellationException getCancellationException()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        java.util.concurrent.CancellationException $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.util.concurrent.CancellationException getCancellationException()>();

        return $r1;
    }

    public kotlin.sequences.Sequence getChildren()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.sequences.Sequence $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.sequences.Sequence getChildren()>();

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext getCoroutineContext()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.coroutines.CoroutineContext $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext getCoroutineContext()>();

        return $r1;
    }

    public final kotlinx.coroutines.channels.Channel getDiagnosticsEvents()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlinx.coroutines.channels.Channel r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel diagnosticsEvents>;

        return r1;
    }

    public kotlin.coroutines.CoroutineContext$Key getKey()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.coroutines.CoroutineContext$Key $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext$Key getKey()>();

        return $r1;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlinx.coroutines.DisposableHandle $r1;
        kotlin.jvm.functions.Function1 $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "handler");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)>($r2);

        return $r1;
    }

    public kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean, boolean, kotlin.jvm.functions.Function1)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0, $z1;
        kotlin.jvm.functions.Function1 $r1;
        kotlinx.coroutines.DisposableHandle $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $z1 := @parameter0: boolean;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "handler");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r2 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)>($z1, $z0, $r1);

        return $r2;
    }

    public boolean isActive()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isActive()>();

        return $z0;
    }

    public boolean isCancelled()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isCancelled()>();

        return $z0;
    }

    public boolean isCompleted()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean isCompleted()>();

        return $z0;
    }

    public java.lang.Object join(kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;
        java.lang.Object $r2;
        kotlin.coroutines.Continuation $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r3 := @parameter0: kotlin.coroutines.Continuation;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r2 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: java.lang.Object join(kotlin.coroutines.Continuation)>($r3);

        return $r2;
    }

    public kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.coroutines.CoroutineContext $r1;
        kotlin.coroutines.CoroutineContext$Key $r2;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext$Key;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "key");

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r3.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)>($r2);

        return $r1;
    }

    public kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        kotlin.coroutines.CoroutineContext $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $r1 = interfaceinvoke $r2.<com.google.testing.platform.lib.coroutines.scope.JobScope: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)>($r1);

        return $r1;
    }

    public final kotlinx.coroutines.Job start(int)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        int $i0;
        kotlinx.coroutines.Job $r1, $r10;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r2;
        kotlin.jvm.functions.Function3 $r3;
        java.lang.Integer $r4;
        kotlin.jvm.functions.Function1 $r5;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r6;
        java.lang.Object $r7;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r8;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r9;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r11;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.Job orchestrateJob>;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker worker>;

        if $r2 != null goto label2;

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function3 testOrchestratorWorkerFactory>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlin.jvm.functions.Function1 managedChannelBuilderFactory>;

        $r6 = staticinvoke <com.google.testing.platform.lib.coroutines.scope.JobScopeKt: com.google.testing.platform.lib.coroutines.scope.JobScope jobScope(kotlinx.coroutines.CoroutineScope)>($r0);

        $r7 = interfaceinvoke $r3.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r2 = (com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker) $r7;

        interfaceinvoke $r2.<com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker: void connect()>();

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker worker> = $r2;

     label2:
        $r8 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        specialinvoke $r8.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r0, null);

        $r1 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r0, null, null, $r8, 3, null);

        $r9 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        specialinvoke $r9.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r0, null);

        $r10 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r0, null, null, $r9, 3, null);

        $r11 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        specialinvoke $r11.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: void <init>(kotlinx.coroutines.Job,kotlinx.coroutines.Job,com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r1, $r10, $r0, null);

        $r1 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r0, null, null, $r11, 3, null);

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.Job orchestrateJob> = $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public boolean start()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r0;
        boolean $z0;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.lib.coroutines.scope.JobScope delegateJob>;

        $z0 = interfaceinvoke $r1.<com.google.testing.platform.lib.coroutines.scope.JobScope: boolean start()>();

        return $z0;
    }

com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 INSTANCE>
    static void <clinit>()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 $r0;

        $r0 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1;

        specialinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1: void <init>()>();

        <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 $r0;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1;

        specialinvoke $r0.<kotlin.jvm.internal.FunctionReferenceImpl: void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int)>(3, class "Lcom/google/testing/platform/android/core/orchestration/strategy/TestDiagnosticsGrpcWorkerKt;", "TestDiagnosticsWorker", "TestDiagnosticsWorker(ILkotlin/jvm/functions/Function1;Lcom/google/testing/platform/lib/coroutines/scope/JobScope;)Lcom/google/testing/platform/android/core/orchestration/strategy/TestDiagnosticsGrpcWorker;", 1);

        return;
    }

    public final com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker invoke(int, kotlin.jvm.functions.Function1, com.google.testing.platform.lib.coroutines.scope.JobScope)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 $r0;
        kotlin.jvm.functions.Function1 $r1;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r2;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r3;
        int $i0;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: com.google.testing.platform.lib.coroutines.scope.JobScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "p1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "p2");

        $r3 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorkerKt: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker TestDiagnosticsWorker(int,kotlin.jvm.functions.Function1,com.google.testing.platform.lib.coroutines.scope.JobScope)>($i0, $r1, $r2);

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1 $r0;
        java.lang.Object $r1, $r2, $r3;
        java.lang.Number $r4;
        int $i0;
        kotlin.jvm.functions.Function1 $r5;
        com.google.testing.platform.lib.coroutines.scope.JobScope $r6;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r7;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r4 = (java.lang.Number) $r1;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $r5 = (kotlin.jvm.functions.Function1) $r2;

        $r6 = (com.google.testing.platform.lib.coroutines.scope.JobScope) $r3;

        $r7 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$1: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker invoke(int,kotlin.jvm.functions.Function1,com.google.testing.platform.lib.coroutines.scope.JobScope)>($i0, $r5, $r6);

        return $r7;
    }

com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion
    private void <init>()
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion $r0;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$Companion: void <init>()>();

        return;
    }

com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsControlJob>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsJob>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: int label>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>
    void <init>(kotlinx.coroutines.Job, kotlinx.coroutines.Job, com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r0;
        kotlinx.coroutines.Job $r1, $r4;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r2;
        kotlin.coroutines.Continuation $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r4 := @parameter0: kotlinx.coroutines.Job;

        $r1 := @parameter1: kotlinx.coroutines.Job;

        $r2 := @parameter2: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsJob> = $r4;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsControlJob> = $r1;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0> = $r2;

        specialinvoke $r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r0, $r6;
        kotlin.coroutines.Continuation $r1;
        kotlinx.coroutines.Job $r2, $r3;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r4;
        java.lang.Object $r5;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r5 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r6 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsJob>;

        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsControlJob>;

        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        specialinvoke $r6.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: void <init>(kotlinx.coroutines.Job,kotlinx.coroutines.Job,com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r2, $r3, $r4, $r1);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.Continuation $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        $r0 = (com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4 $r0;
        java.lang.Object $r1, $r2;
        int $i0;
        java.lang.IllegalStateException $r3;
        kotlinx.coroutines.Job $r4;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r5;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r6, $r7;
        kotlin.Unit r8;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: int label>;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label9;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label7;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        goto label6;

     label5:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsJob>;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: int label> = 1;

        $r1 = interfaceinvoke $r4.<kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)>($r0);

        if $r1 != $r2 goto label6;

        return $r2;

     label6:
        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: kotlinx.coroutines.Job $eventsControlJob>;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: int label> = 2;

        $r1 = staticinvoke <kotlinx.coroutines.JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)>($r4, $r0);

        if $r1 != $r2 goto label7;

        return $r2;

     label7:
        $r5 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r6 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)>($r5);

        $r7 = $r6;

        if $r6 != null goto label8;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("worker");

        $r7 = null;

     label8:
        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$4: int label> = 3;

        $r1 = staticinvoke <com.google.testing.platform.lib.coroutines.scope.JobScopeKt: java.lang.Object completeAndJoin(kotlinx.coroutines.CompletableJob,kotlin.coroutines.Continuation)>($r7, $r0);

        if $r1 != $r2 goto label9;

        return $r2;

     label9:
        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r8;
    }

com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: java.lang.Object L$0>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: int label>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>
    void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r0;
        kotlin.coroutines.Continuation $r1;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r2 := @parameter0: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0> = $r2;

        specialinvoke $r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r1);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r0, $r4;
        kotlin.coroutines.Continuation $r1;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r2;
        java.lang.Object $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        specialinvoke $r4.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r2, $r1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.Continuation $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        $r0 = (com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1 $r0;
        java.lang.Object $r1, $r2, $r3;
        int $i0;
        java.lang.IllegalStateException $r4;
        kotlinx.coroutines.channels.ChannelIterator $r5;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r6;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r7, $r8;
        com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel $r9;
        java.lang.Boolean $r10;
        boolean $z0;
        com.google.protobuf.Empty $r11;
        kotlinx.coroutines.channels.Channel $r12;
        java.lang.Throwable $r13, $r14, $r15;
        kotlin.Unit r16;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $r3 = $r2;

        $i0 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label03;
            case 1: goto label02;
            default: goto label01;
        };

     label01:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r4;

     label02:
        $r3 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r5 = (kotlinx.coroutines.channels.ChannelIterator) $r3;

        goto label08;

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r7 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)>($r6);

        $r8 = $r7;

        if $r7 != null goto label04;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("worker");

        $r8 = null;

     label04:
        $r9 = interfaceinvoke $r8.<com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker: com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel getDiagnosticsChannel()>();

        $r5 = interfaceinvoke $r9.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label05:
        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: java.lang.Object L$0> = $r5;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: int label> = 1;

     label06:
        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r0);

     label07:
        if $r1 == $r3 goto label15;

        $r2 = $r3;

     label08:
        $r10 = (java.lang.Boolean) $r1;

     label09:
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        if $z0 == 0 goto label13;

     label11:
        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

     label12:
        $r11 = (com.google.protobuf.Empty) $r1;

        $r3 = $r2;

        goto label05;

     label13:
        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r12 = virtualinvoke $r6.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel getDiagnosticsEvents()>();

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r12, null, 1, null);

        r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r16;

     label14:
        $r13 := @caughtexception;

        $r14 = $r13;

        goto label18;

     label15:
        return $r3;

     label16:
        $r14 := @caughtexception;

        goto label18;

     label17:
        $r15 := @caughtexception;

        $r14 = $r15;

     label18:
        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsControlJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r12 = virtualinvoke $r6.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel getDiagnosticsEvents()>();

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r12, null, 1, null);

        goto label19;

     label19:
        throw $r14;

        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$0>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$1>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: int label>
<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>
    void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r0;
        kotlin.coroutines.Continuation $r1;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r2;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r2 := @parameter0: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0> = $r2;

        specialinvoke $r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r1);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r0, $r4;
        kotlin.coroutines.Continuation $r1;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r2;
        java.lang.Object $r3;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r2 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        specialinvoke $r4.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: void <init>(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy,kotlin.coroutines.Continuation)>($r2, $r1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r0;
        java.lang.Object $r1, $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        kotlin.coroutines.Continuation $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (kotlinx.coroutines.CoroutineScope) $r1;

        $r4 = (kotlin.coroutines.Continuation) $r2;

        $r1 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r3, $r4);

        return $r1;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r0;
        kotlinx.coroutines.CoroutineScope $r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        java.lang.Object $r4;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>($r1, $r2);

        $r0 = (com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1) $r2;

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r4 = virtualinvoke $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object invokeSuspend(java.lang.Object)>($r3);

        return $r4;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1 $r0;
        java.lang.Object $r1, $r2, $r4;
        int $i0;
        java.lang.IllegalStateException $r3;
        kotlinx.coroutines.channels.ChannelIterator $r5;
        com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy $r6;
        kotlinx.coroutines.channels.Channel $r7;
        java.lang.Boolean $r8;
        boolean $z0;
        com.google.testing.platform.proto.api.android.DiagnosticEventProto$DiagnosticEvent $r9;
        com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker $r10, $r11;
        com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel $r12;
        java.lang.Throwable $r13;
        kotlin.Unit r14;

        $r0 := @this: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1;

        $r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: int label>;

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label03;
            case 2: goto label02;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r3;

     label02:
        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = (com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy) $r4;

        goto label08;

     label03:
        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$1>;

        $r5 = (kotlinx.coroutines.channels.ChannelIterator) $r4;

        $r4 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = (com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy) $r4;

        goto label11;

     label04:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

     label05:
        $r7 = virtualinvoke $r6.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: kotlinx.coroutines.channels.Channel getDiagnosticsEvents()>();

     label06:
        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

     label07:
        $r5 = interfaceinvoke $r7.<kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()>();

     label08:
        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$0> = $r6;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$1> = $r5;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: int label> = 1;

     label09:
        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)>($r0);

     label10:
        if $r1 == $r2 goto label24;

     label11:
        $r8 = (java.lang.Boolean) $r1;

     label12:
        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label13:
        if $z0 == 0 goto label21;

     label14:
        $r1 = interfaceinvoke $r5.<kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()>();

     label15:
        $r9 = (com.google.testing.platform.proto.api.android.DiagnosticEventProto$DiagnosticEvent) $r1;

        $r10 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)>($r6);

        $r11 = $r10;

        if $r10 != null goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("worker");

        $r11 = null;

     label16:
        $r12 = interfaceinvoke $r11.<com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker: com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel getDiagnosticsChannel()>();

     label17:
        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$0> = $r6;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: java.lang.Object L$1> = $r5;

        $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: int label> = 2;

     label18:
        $r1 = interfaceinvoke $r12.<com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)>($r9, $r0);

     label19:
        if $r1 == $r2 goto label20;

        goto label08;

     label20:
        return $r2;

     label21:
        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r10 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)>($r6);

        $r11 = $r10;

        if $r10 != null goto label22;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("worker");

        $r11 = null;

     label22:
        $r12 = interfaceinvoke $r11.<com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker: com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel getDiagnosticsChannel()>();

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r12, null, 1, null);

        r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return r14;

     label23:
        $r13 := @caughtexception;

        goto label26;

     label24:
        return $r2;

     label25:
        $r13 := @caughtexception;

     label26:
        $r6 = $r0.<com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy$start$eventsJob$1: com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy this$0>;

        $r10 = staticinvoke <com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy: com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker access$getWorker$p(com.google.testing.platform.android.core.orchestration.strategy.GrpcDiagnosticsOrchestrationStrategy)>($r6);

        $r11 = $r10;

        if $r10 != null goto label27;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)>("worker");

        $r11 = null;

     label27:
        $r12 = interfaceinvoke $r11.<com.google.testing.platform.android.core.orchestration.strategy.TestDiagnosticsGrpcWorker: com.google.testing.platform.lib.grpc.stream.GrpcStreamChannel getDiagnosticsChannel()>();

        staticinvoke <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)>($r12, null, 1, null);

        goto label28;

     label28:
        throw $r13;

        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label12 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label17 with label23;
        catch java.lang.Throwable from label18 to label19 with label23;
    }

