androidx.core.provider.FontProvider
<androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator>
    private void <init>()
    {
        androidx.core.provider.FontProvider r0;

        r0 := @this: androidx.core.provider.FontProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context, androidx.core.provider.FontRequest, android.os.CancellationSignal) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context r0;
        androidx.core.provider.FontRequest r1;
        android.os.CancellationSignal r2;
        android.content.pm.ProviderInfo r3;
        androidx.core.provider.FontsContractCompat$FontInfo[] r4;
        android.content.pm.PackageManager $r5;
        android.content.res.Resources $r6;
        java.lang.String $r7;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r8, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: androidx.core.provider.FontRequest;

        r2 := @parameter2: android.os.CancellationSignal;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = staticinvoke <androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>($r5, r1, $r6);

        if r3 != null goto label1;

        $r9 = staticinvoke <androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(1, null);

        return $r9;

     label1:
        $r7 = r3.<android.content.pm.ProviderInfo: java.lang.String authority>;

        r4 = staticinvoke <androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)>(r0, r1, $r7, r2);

        $r8 = staticinvoke <androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(0, r4);

        return $r8;
    }

    static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager, androidx.core.provider.FontRequest, android.content.res.Resources) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager r0;
        androidx.core.provider.FontRequest r1;
        android.content.res.Resources r2;
        java.lang.String r3, $r9, $r10, $r11, $r23, $r25, $r30;
        android.content.pm.ProviderInfo r4;
        java.util.List r5, r7;
        android.content.pm.PackageInfo r6;
        java.util.ArrayList r8, $r14;
        boolean $z0, $z1;
        android.content.pm.Signature[] $r12;
        java.util.Comparator $r13, $r17;
        int $i0, i1;
        java.lang.Object $r15;
        java.util.Collection $r16;
        android.content.pm.PackageManager$NameNotFoundException $r18, $r26;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r24, $r27, $r28, $r29;

        r0 := @parameter0: android.content.pm.PackageManager;

        r1 := @parameter1: androidx.core.provider.FontRequest;

        r2 := @parameter2: android.content.res.Resources;

        r3 = virtualinvoke r1.<androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()>();

        r4 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>(r3, 0);

        if r4 != null goto label1;

        $r26 = new android.content.pm.PackageManager$NameNotFoundException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for authority: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label1:
        $r9 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r10 = virtualinvoke r1.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label2;

        $r18 = new android.content.pm.PackageManager$NameNotFoundException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found content provider ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but package was not ");

        $r23 = virtualinvoke r1.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label2:
        $r11 = r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        r6 = virtualinvoke r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r11, 64);

        $r12 = r6.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        r5 = staticinvoke <androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])>($r12);

        $r13 = <androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r13);

        r7 = staticinvoke <androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>(r1, r2);

        i1 = 0;

     label3:
        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        if i1 >= $i0 goto label5;

        $r14 = new java.util.ArrayList;

        $r15 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r16 = (java.util.Collection) $r15;

        specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

        r8 = $r14;

        $r17 = <androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r8, $r17);

        $z1 = staticinvoke <androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)>(r5, r8);

        if $z1 == 0 goto label4;

        return r4;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    static androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context, androidx.core.provider.FontRequest, java.lang.String, android.os.CancellationSignal)
    {
        android.content.Context r0;
        androidx.core.provider.FontRequest r1;
        java.lang.String r2, $r19, $r25;
        android.os.CancellationSignal r3;
        android.net.Uri r4, r5, r29;
        java.lang.String[] r6, $r17, $r18, $r24;
        android.content.ContentResolver r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i15, i16;
        boolean z0, $z1, $z3;
        java.lang.Throwable r8, $r26;
        java.util.ArrayList $r9, $r23, r27;
        android.net.Uri$Builder $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r20, $r22;
        java.lang.Object[] $r21;
        android.database.Cursor r28;
        long l13, l14;
        androidx.core.provider.FontsContractCompat$FontInfo $r30;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: androidx.core.provider.FontRequest;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.CancellationSignal;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r27 = $r9;

        $r10 = new android.net.Uri$Builder;

        specialinvoke $r10.<android.net.Uri$Builder: void <init>()>();

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r12 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r2);

        r4 = virtualinvoke $r12.<android.net.Uri$Builder: android.net.Uri build()>();

        $r13 = new android.net.Uri$Builder;

        specialinvoke $r13.<android.net.Uri$Builder: void <init>()>();

        $r14 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r15 = virtualinvoke $r14.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("file");

        r5 = virtualinvoke $r16.<android.net.Uri$Builder: android.net.Uri build()>();

        r28 = null;

     label01:
        $r17 = newarray (java.lang.String)[7];

        $r17[0] = "_id";

        $r17[1] = "file_id";

        $r17[2] = "font_ttc_index";

        $r17[3] = "font_variation_settings";

        $r17[4] = "font_weight";

        $r17[5] = "font_italic";

        $r17[6] = "result_code";

        r6 = $r17;

        r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i8 = <android.os.Build$VERSION: int SDK_INT>;

        if $i8 <= 16 goto label02;

        $r24 = newarray (java.lang.String)[1];

        $r25 = virtualinvoke r1.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        $r24[0] = $r25;

        r28 = staticinvoke <androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)>(r7, r4, r6, "query = ?", $r24, null, r3);

        goto label03;

     label02:
        $r18 = newarray (java.lang.String)[1];

        $r19 = virtualinvoke r1.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        $r18[0] = $r19;

        r28 = virtualinvoke r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r4, r6, "query = ?", $r18, null);

     label03:
        if r28 == null goto label15;

        $i9 = interfaceinvoke r28.<android.database.Cursor: int getCount()>();

        if $i9 <= 0 goto label15;

        i0 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("result_code");

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r27 = $r23;

        i1 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        i2 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("file_id");

        i3 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_ttc_index");

        i4 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_weight");

        i5 = interfaceinvoke r28.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_italic");

     label04:
        $z1 = interfaceinvoke r28.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label15;

        if i0 == -1 goto label05;

        $i11 = interfaceinvoke r28.<android.database.Cursor: int getInt(int)>(i0);

        goto label06;

     label05:
        $i11 = 0;

     label06:
        i6 = $i11;

        if i3 == -1 goto label07;

        $i12 = interfaceinvoke r28.<android.database.Cursor: int getInt(int)>(i3);

        goto label08;

     label07:
        $i12 = 0;

     label08:
        i7 = $i12;

        if i2 != -1 goto label09;

        l13 = interfaceinvoke r28.<android.database.Cursor: long getLong(int)>(i1);

        r29 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r4, l13);

        goto label10;

     label09:
        l14 = interfaceinvoke r28.<android.database.Cursor: long getLong(int)>(i2);

        r29 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r5, l14);

     label10:
        if i4 == -1 goto label11;

        $i15 = interfaceinvoke r28.<android.database.Cursor: int getInt(int)>(i4);

        goto label12;

     label11:
        $i15 = 400;

     label12:
        i16 = $i15;

        if i5 == -1 goto label13;

        $i10 = interfaceinvoke r28.<android.database.Cursor: int getInt(int)>(i5);

        if $i10 != 1 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        z0 = $z3;

        $r30 = staticinvoke <androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)>(r29, i7, i16, z0, i6);

        virtualinvoke r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);

        goto label04;

     label15:
        if r28 == null goto label19;

        interfaceinvoke r28.<android.database.Cursor: void close()>();

        goto label19;

     label16:
        $r26 := @caughtexception;

        r8 = $r26;

     label17:
        if r28 == null goto label18;

        interfaceinvoke r28.<android.database.Cursor: void close()>();

     label18:
        throw r8;

     label19:
        $r20 = newarray (androidx.core.provider.FontsContractCompat$FontInfo)[0];

        $r21 = virtualinvoke r27.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = (androidx.core.provider.FontsContractCompat$FontInfo[]) $r21;

        return $r22;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private static java.util.List getCertificates(androidx.core.provider.FontRequest, android.content.res.Resources)
    {
        androidx.core.provider.FontRequest r0;
        android.content.res.Resources r1;
        int i0;
        java.util.List $r2, $r3, $r4;

        r0 := @parameter0: androidx.core.provider.FontRequest;

        r1 := @parameter1: android.content.res.Resources;

        $r2 = virtualinvoke r0.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r0.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        return $r4;

     label1:
        i0 = virtualinvoke r0.<androidx.core.provider.FontRequest: int getCertificatesArrayResId()>();

        $r3 = staticinvoke <androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>(r1, i0);

        return $r3;
    }

    private static boolean equalsByteArrayList(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r4;
        byte[] $r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i2 goto label4;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (byte[]) $r2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (byte[]) $r4;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r2;
        java.util.ArrayList r1, $r4;
        int i0, i1;
        android.content.pm.Signature r3;
        byte[] $r5;

        r0 := @parameter0: android.content.pm.Signature[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r5 = virtualinvoke r3.<android.content.pm.Signature: byte[] toByteArray()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static int lambda$static$0(byte[], byte[])
    {
        byte[] r0, r1;
        int $i0, $i1, $i2, $i7, $i8, $i9, $i10, i11;
        byte $b3, $b4, $b5, $b6;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $i9 = lengthof r0;

        $i8 = lengthof r1;

        $i10 = $i9 - $i8;

        return $i10;

     label1:
        i11 = 0;

     label2:
        $i2 = lengthof r0;

        if i11 >= $i2 goto label4;

        $b4 = r0[i11];

        $b3 = r1[i11];

        if $b4 == $b3 goto label3;

        $b6 = r0[i11];

        $b5 = r1[i11];

        $i7 = $b6 - $b5;

        return $i7;

     label3:
        i11 = i11 + 1;

        goto label2;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        java.util.Comparator $r0;

        $r0 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.core.provider.FontProvider: int lambda$static$0(byte[],byte[])>, methodtype: int __METHODTYPE__(byte[],byte[]));

        <androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator> = $r0;

        return;
    }

androidx.core.provider.FontProvider$Api16Impl
    private void <init>()
    {
        androidx.core.provider.FontProvider$Api16Impl r0;

        r0 := @this: androidx.core.provider.FontProvider$Api16Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.Object)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        java.lang.Object r6;
        android.os.CancellationSignal $r7;
        android.database.Cursor $r8;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.Object;

        $r7 = (android.os.CancellationSignal) r6;

        $r8 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>(r1, r2, r3, r4, r5, $r7);

        return $r8;
    }

