androidx.webkit.internal.SafeBrowsingResponseImpl
<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl>
<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface>
    public void <init>(java.lang.reflect.InvocationHandler)
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        java.lang.reflect.InvocationHandler r1;
        java.lang.Object $r2;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r3;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        r1 := @parameter0: java.lang.reflect.InvocationHandler;

        specialinvoke r0.<androidx.webkit.SafeBrowsingResponseCompat: void <init>()>();

        $r2 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/SafeBrowsingResponseBoundaryInterface;", r1);

        $r3 = (org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface) $r2;

        r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface> = $r3;

        return;
    }

    public void <init>(android.webkit.SafeBrowsingResponse)
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        android.webkit.SafeBrowsingResponse r1;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        r1 := @parameter0: android.webkit.SafeBrowsingResponse;

        specialinvoke r0.<androidx.webkit.SafeBrowsingResponseCompat: void <init>()>();

        r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl> = r1;

        return;
    }

    private android.webkit.SafeBrowsingResponse getFrameworksImpl()
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        android.webkit.SafeBrowsingResponse $r1, $r2, $r6;
        androidx.webkit.internal.WebkitToCompatConverter $r3;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r4;
        java.lang.reflect.InvocationHandler $r5;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        $r1 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()>();

        $r4 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface>;

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<androidx.webkit.internal.WebkitToCompatConverter: android.webkit.SafeBrowsingResponse convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)>($r5);

        r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl> = $r6;

     label1:
        $r2 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl>;

        return $r2;
    }

    private org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface()
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r1, $r2, $r7;
        androidx.webkit.internal.WebkitToCompatConverter $r3;
        android.webkit.SafeBrowsingResponse $r4;
        java.lang.reflect.InvocationHandler $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        $r1 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <androidx.webkit.internal.WebViewGlueCommunicator: androidx.webkit.internal.WebkitToCompatConverter getCompatConverter()>();

        $r4 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse mFrameworksImpl>;

        $r5 = virtualinvoke $r3.<androidx.webkit.internal.WebkitToCompatConverter: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(android.webkit.SafeBrowsingResponse)>($r4);

        $r6 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/SafeBrowsingResponseBoundaryInterface;", $r5);

        $r7 = (org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface) $r6;

        r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface> = $r7;

     label1:
        $r2 = r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface mBoundaryInterface>;

        return $r2;
    }

    public void showInterstitial(boolean)
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        boolean z0, $z1, $z2;
        androidx.webkit.internal.WebViewFeatureInternal r1;
        java.lang.UnsupportedOperationException $r2;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r3;
        android.webkit.SafeBrowsingResponse $r4;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("SAFE_BROWSING_RESPONSE_SHOW_INTERSTITIAL");

        $z1 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z1 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse getFrameworksImpl()>();

        virtualinvoke $r4.<android.webkit.SafeBrowsingResponse: void showInterstitial(boolean)>(z0);

        goto label3;

     label1:
        $z2 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z2 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface()>();

        interfaceinvoke $r3.<org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)>(z0);

        goto label3;

     label2:
        $r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r2;

     label3:
        return;
    }

    public void proceed(boolean)
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        boolean z0, $z1, $z2;
        androidx.webkit.internal.WebViewFeatureInternal r1;
        java.lang.UnsupportedOperationException $r2;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r3;
        android.webkit.SafeBrowsingResponse $r4;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("SAFE_BROWSING_RESPONSE_PROCEED");

        $z1 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z1 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse getFrameworksImpl()>();

        virtualinvoke $r4.<android.webkit.SafeBrowsingResponse: void proceed(boolean)>(z0);

        goto label3;

     label1:
        $z2 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z2 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface()>();

        interfaceinvoke $r3.<org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)>(z0);

        goto label3;

     label2:
        $r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r2;

     label3:
        return;
    }

    public void backToSafety(boolean)
    {
        androidx.webkit.internal.SafeBrowsingResponseImpl r0;
        boolean z0, $z1, $z2;
        androidx.webkit.internal.WebViewFeatureInternal r1;
        java.lang.UnsupportedOperationException $r2;
        org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface $r3;
        android.webkit.SafeBrowsingResponse $r4;

        r0 := @this: androidx.webkit.internal.SafeBrowsingResponseImpl;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.WebViewFeatureInternal getFeature(java.lang.String)>("SAFE_BROWSING_RESPONSE_BACK_TO_SAFETY");

        $z1 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByFramework()>();

        if $z1 == 0 goto label1;

        $r4 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: android.webkit.SafeBrowsingResponse getFrameworksImpl()>();

        virtualinvoke $r4.<android.webkit.SafeBrowsingResponse: void backToSafety(boolean)>(z0);

        goto label3;

     label1:
        $z2 = virtualinvoke r1.<androidx.webkit.internal.WebViewFeatureInternal: boolean isSupportedByWebView()>();

        if $z2 == 0 goto label2;

        $r3 = specialinvoke r0.<androidx.webkit.internal.SafeBrowsingResponseImpl: org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface getBoundaryInterface()>();

        interfaceinvoke $r3.<org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)>(z0);

        goto label3;

     label2:
        $r2 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r2;

     label3:
        return;
    }

