androidx.benchmark.macro.Metric
    private void <init>()
    {
        androidx.benchmark.macro.Metric r0;

        r0 := @this: androidx.benchmark.macro.Metric;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.benchmark.macro.Metric: void configure$benchmark_macro_release(java.lang.String)>
<androidx.benchmark.macro.Metric: void start$benchmark_macro_release()>
<androidx.benchmark.macro.Metric: void stop$benchmark_macro_release()>
<androidx.benchmark.macro.Metric: androidx.benchmark.macro.IterationResult getMetrics$benchmark_macro_release(androidx.benchmark.macro.Metric$CaptureInfo,java.lang.String)>
    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.macro.Metric r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.macro.Metric;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.macro.Metric: void <init>()>();

        return;
    }

androidx.benchmark.macro.Metric$CaptureInfo
<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>
<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>
<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>
<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>
    public void <init>(int, java.lang.String, java.lang.String, androidx.benchmark.macro.StartupMode)
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        int i0;
        java.lang.String r1, r2;
        androidx.benchmark.macro.StartupMode r3;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: androidx.benchmark.macro.StartupMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "targetPackageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testPackageName");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel> = i0;

        r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName> = r1;

        r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName> = r2;

        r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode> = r3;

        return;
    }

    public final int getApiLevel()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $i0 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        return $i0;
    }

    public final java.lang.String getTargetPackageName()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        return $r1;
    }

    public final java.lang.String getTestPackageName()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        return $r1;
    }

    public final androidx.benchmark.macro.StartupMode getStartupMode()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        androidx.benchmark.macro.StartupMode $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        return $r1;
    }

    public final int component1()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        int $i0;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $i0 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        return $i0;
    }

    public final java.lang.String component2()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        return $r1;
    }

    public final java.lang.String component3()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        return $r1;
    }

    public final androidx.benchmark.macro.StartupMode component4()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        androidx.benchmark.macro.StartupMode $r1;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        return $r1;
    }

    public final androidx.benchmark.macro.Metric$CaptureInfo copy(int, java.lang.String, java.lang.String, androidx.benchmark.macro.StartupMode)
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0, $r4;
        int i0;
        java.lang.String r1, r2;
        androidx.benchmark.macro.StartupMode r3;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: androidx.benchmark.macro.StartupMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "targetPackageName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "testPackageName");

        $r4 = new androidx.benchmark.macro.Metric$CaptureInfo;

        specialinvoke $r4.<androidx.benchmark.macro.Metric$CaptureInfo: void <init>(int,java.lang.String,java.lang.String,androidx.benchmark.macro.StartupMode)>(i0, r1, r2, r3);

        return $r4;
    }

    public static androidx.benchmark.macro.Metric$CaptureInfo copy$default(androidx.benchmark.macro.Metric$CaptureInfo, int, java.lang.String, java.lang.String, androidx.benchmark.macro.StartupMode, int, java.lang.Object)
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0, $r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object r1;
        java.lang.String r3, r4;
        androidx.benchmark.macro.StartupMode r5;

        r0 := @parameter0: androidx.benchmark.macro.Metric$CaptureInfo;

        i5 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: androidx.benchmark.macro.StartupMode;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i5 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        r3 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        r4 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        r5 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

     label4:
        $r2 = virtualinvoke r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.Metric$CaptureInfo copy(int,java.lang.String,java.lang.String,androidx.benchmark.macro.StartupMode)>(i5, r3, r4, r5);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13;
        int $i0;
        java.lang.String $r5, $r8, $r14;
        androidx.benchmark.macro.StartupMode $r11;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CaptureInfo(apiLevel=");

        $i0 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", targetPackageName=");

        $r5 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", testPackageName=");

        $r8 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", startupMode=");

        $r11 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public int hashCode()
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, $i9, i10;
        java.lang.String $r1, $r2;
        androidx.benchmark.macro.StartupMode $r3, $r4;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        $i0 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        i6 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        $i1 = i6 * 31;

        $r1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i7 = $i1 + $i2;

        $i3 = i7 * 31;

        $r2 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        $i4 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i8 = $i3 + $i4;

        $i5 = i8 * 31;

        $r3 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        if $r3 != null goto label1;

        $i9 = 0;

        goto label2;

     label1:
        $r4 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        $i9 = virtualinvoke $r4.<androidx.benchmark.macro.StartupMode: int hashCode()>();

     label2:
        i10 = $i5 + $i9;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.benchmark.macro.Metric$CaptureInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6;
        androidx.benchmark.macro.StartupMode $r7, $r8;

        r0 := @this: androidx.benchmark.macro.Metric$CaptureInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.benchmark.macro.Metric$CaptureInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.benchmark.macro.Metric$CaptureInfo) r1;

        $i1 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        $i0 = r2.<androidx.benchmark.macro.Metric$CaptureInfo: int apiLevel>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $r4 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        $r3 = r2.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String targetPackageName>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        $r5 = r2.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String testPackageName>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        $r7 = r2.<androidx.benchmark.macro.Metric$CaptureInfo: androidx.benchmark.macro.StartupMode startupMode>;

        if $r8 == $r7 goto label6;

        return 0;

     label6:
        return 1;
    }

