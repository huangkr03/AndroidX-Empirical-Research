androidx.room.compiler.processing.javac.JavacExecutableElement
<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacExecutableElement$Companion Companion>
<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement element>
<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>
<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy descriptor$delegate>
<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy enclosingElement$delegate>
<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy thrownTypes$delegate>
<androidx.room.compiler.processing.javac.JavacExecutableElement: java.lang.String DEFAULT_IMPLS_CLASS_NAME>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.element.ExecutableElement)
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.element.ExecutableElement r2;
        javax.lang.model.element.Element $r3, $r5;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r4;
        androidx.room.compiler.processing.javac.JavacExecutableElement$descriptor$2 $r6;
        kotlin.jvm.functions.Function0 $r7, $r10, $r13;
        kotlin.Lazy $r8, $r11, $r14;
        androidx.room.compiler.processing.javac.JavacExecutableElement$enclosingElement$2 $r9;
        androidx.room.compiler.processing.javac.JavacExecutableElement$thrownTypes$2 $r12;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.element.ExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        $r3 = (javax.lang.model.element.Element) r2;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.Element)>(r1, $r3);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement element> = r2;

        $r4 = new androidx.room.compiler.processing.javac.JavacHasModifiers;

        $r5 = (javax.lang.model.element.Element) r2;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacHasModifiers: void <init>(javax.lang.model.element.Element)>($r5);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0> = $r4;

        $r6 = new androidx.room.compiler.processing.javac.JavacExecutableElement$descriptor$2;

        specialinvoke $r6.<androidx.room.compiler.processing.javac.JavacExecutableElement$descriptor$2: void <init>(androidx.room.compiler.processing.javac.JavacExecutableElement)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy descriptor$delegate> = $r8;

        $r9 = new androidx.room.compiler.processing.javac.JavacExecutableElement$enclosingElement$2;

        specialinvoke $r9.<androidx.room.compiler.processing.javac.JavacExecutableElement$enclosingElement$2: void <init>(androidx.room.compiler.processing.javac.JavacExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r10);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy enclosingElement$delegate> = $r11;

        $r12 = new androidx.room.compiler.processing.javac.JavacExecutableElement$thrownTypes$2;

        specialinvoke $r12.<androidx.room.compiler.processing.javac.JavacExecutableElement$thrownTypes$2: void <init>(androidx.room.compiler.processing.javac.JavacExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0, r1);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        $r14 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r13);

        r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy thrownTypes$delegate> = $r14;

        return;
    }

    public javax.lang.model.element.ExecutableElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        javax.lang.model.element.ExecutableElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement element>;

        return $r1;
    }

    public boolean isAbstract()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isAbstract()>();

        return $z0;
    }

    public boolean isFinal()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isFinal()>();

        return $z0;
    }

    public boolean isPrivate()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isPrivate()>();

        return $z0;
    }

    public boolean isProtected()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isProtected()>();

        return $z0;
    }

    public boolean isPublic()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isPublic()>();

        return $z0;
    }

    public boolean isStatic()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isStatic()>();

        return $z0;
    }

    public boolean isTransient()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacHasModifiers $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacHasModifiers $$delegate_0>;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.JavacHasModifiers: boolean isTransient()>();

        return $z0;
    }

<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.kotlin.KmExecutable getKotlinMetadata()>
    public final java.lang.String getDescriptor()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy descriptor$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

<androidx.room.compiler.processing.javac.JavacExecutableElement: java.util.List getParameters()>
    public androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy enclosingElement$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacTypeElement getClosestMemberContainer()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        return $r1;
    }

    public boolean isVarArgs()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        javax.lang.model.element.ExecutableElement $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement getElement()>();

        $z0 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: boolean isVarArgs()>();

        return $z0;
    }

    public java.util.List getThrownTypes()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: kotlin.Lazy thrownTypes$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public volatile javax.lang.model.element.Element getElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        javax.lang.model.element.ExecutableElement $r1;
        javax.lang.model.element.Element $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r2 = (javax.lang.model.element.Element) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XElement getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        androidx.room.compiler.processing.XElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMemberContainer getClosestMemberContainer()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        androidx.room.compiler.processing.XMemberContainer $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacExecutableElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacTypeElement getClosestMemberContainer()>();

        $r2 = (androidx.room.compiler.processing.XMemberContainer) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.javac.JavacExecutableElement$Companion $r0;

        $r0 = new androidx.room.compiler.processing.javac.JavacExecutableElement$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacExecutableElement$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.javac.JavacExecutableElement: androidx.room.compiler.processing.javac.JavacExecutableElement$Companion Companion> = $r0;

        return;
    }

