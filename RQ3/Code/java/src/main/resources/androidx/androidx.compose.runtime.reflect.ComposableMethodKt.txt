androidx.compose.runtime.reflect.ComposableMethodKt
<androidx.compose.runtime.reflect.ComposableMethodKt: int BITS_PER_INT>
    private static final int changedParamCount(int, int)
    {
        int i0, i1, i2, $i3;
        double $d0, $d1, $d2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        return 1;

     label1:
        i2 = i0 + i1;

        $d0 = (double) i2;

        $d1 = $d0 / 10.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i3 = (int) $d2;

        return $i3;
    }

    private static final int defaultParamCount(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 / 31.0;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i1 = (int) $d2;

        return $i1;
    }

    private static final androidx.compose.runtime.reflect.ComposableInfo getComposableInfo(java.lang.reflect.Method)
    {
        java.lang.reflect.Method $r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i10, i11, i12, $i13, $i14;
        java.lang.Class[] $r1, $r2, $r5;
        boolean $z0, $z1, $z4, z5, $z6;
        androidx.compose.runtime.reflect.ComposableInfo $r3, $r4;
        java.lang.Object $r6;
        java.lang.Object[] $r7;
        java.lang.Class r8;
        byte $b9;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "parameterTypes");

        $r7 = (java.lang.Object[]) $r1;

        $i1 = lengthof $r7;

        i6 = $i1 + -1;

        if 0 > i6 goto label03;

     label01:
        i7 = i6;

        i6 = i6 + -1;

        $r6 = $r7[i7];

        r8 = (java.lang.Class) $r6;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, class "Landroidx/compose/runtime/Composer;");

        if $z1 == 0 goto label02;

        $i8 = i7;

        goto label04;

     label02:
        if 0 <= i6 goto label01;

     label03:
        $i8 = -1;

     label04:
        i0 = $i8;

        if i0 != -1 goto label05;

        $r4 = new androidx.compose.runtime.reflect.ComposableInfo;

        $r5 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i5 = lengthof $r5;

        specialinvoke $r4.<androidx.compose.runtime.reflect.ComposableInfo: void <init>(boolean,int,int,int)>(0, $i5, 0, 0);

        return $r4;

     label05:
        $i2 = virtualinvoke $r0.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i2);

        if $z0 == 0 goto label06;

        $b9 = 0;

        goto label07;

     label06:
        $b9 = 1;

     label07:
        $i10 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: int changedParamCount(int,int)>(i0, $b9);

        $i3 = i0 + 1;

        i11 = $i3 + $i10;

        $r2 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i12 = lengthof $r2;

        if i12 == i11 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z5 = $z4;

        if z5 == 0 goto label10;

        $i13 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: int defaultParamCount(int)>(i0);

        goto label11;

     label10:
        $i13 = 0;

     label11:
        $i14 = $i13;

        $r3 = new androidx.compose.runtime.reflect.ComposableInfo;

        $i4 = i11 + $i13;

        if $i4 != i12 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        specialinvoke $r3.<androidx.compose.runtime.reflect.ComposableInfo: void <init>(boolean,int,int,int)>($z6, i0, $i10, $i14);

        return $r3;
    }

    private static final java.lang.Object getDefaultValue(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        if r1 == null goto label17;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1325958191: goto label03;
            case 104431: goto label07;
            case 3039496: goto label02;
            case 3052374: goto label04;
            case 3327612: goto label08;
            case 64711720: goto label01;
            case 97526364: goto label06;
            case 109413500: goto label05;
            default: goto label17;
        };

     label01:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z2 != 0 goto label15;

        goto label17;

     label02:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z5 != 0 goto label11;

        goto label17;

     label03:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z7 != 0 goto label13;

        goto label17;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z4 != 0 goto label16;

        goto label17;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 != 0 goto label10;

        goto label17;

     label06:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z1 != 0 goto label14;

        goto label17;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z6 != 0 goto label09;

        goto label17;

     label08:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z3 != 0 goto label12;

        goto label17;

     label09:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label18;

     label10:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        goto label18;

     label11:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        goto label18;

     label12:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        goto label18;

     label13:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        goto label18;

     label14:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        goto label18;

     label15:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        goto label18;

     label16:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        goto label18;

     label17:
        $r2 = null;

     label18:
        return $r2;
    }

    public static final androidx.compose.runtime.reflect.ComposableMethod asComposableMethod(java.lang.reflect.Method)
    {
        java.lang.reflect.Method $r0;
        androidx.compose.runtime.reflect.ComposableInfo r1;
        boolean $z0;
        androidx.compose.runtime.reflect.ComposableMethod $r2;

        $r0 := @parameter0: java.lang.reflect.Method;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: androidx.compose.runtime.reflect.ComposableInfo getComposableInfo(java.lang.reflect.Method)>($r0);

        $z0 = virtualinvoke r1.<androidx.compose.runtime.reflect.ComposableInfo: boolean isComposable()>();

        if $z0 == 0 goto label1;

        $r2 = new androidx.compose.runtime.reflect.ComposableMethod;

        specialinvoke $r2.<androidx.compose.runtime.reflect.ComposableMethod: void <init>(java.lang.reflect.Method,androidx.compose.runtime.reflect.ComposableInfo)>($r0, r1);

        return $r2;

     label1:
        return null;
    }

    private static final java.lang.Object[] dup(java.lang.Object, int)
    {
        java.lang.Object $r0;
        int i0, i1, i2, $i3;
        java.util.Collection r1, r3, $r12, $r13;
        java.util.Iterator r2;
        kotlin.ranges.IntRange $r4;
        java.util.ArrayList $r5;
        boolean $z3;
        java.util.List $r6;
        java.lang.Object[] $r7, $r8, $r9;
        kotlin.collections.IntIterator $r10;
        java.lang.Iterable $r11;

        $r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r4 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        $r11 = (java.lang.Iterable) $r4;

        $r5 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r11, 10);

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i3);

        r1 = (java.util.Collection) $r5;

        r2 = interfaceinvoke $r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r10 = (kotlin.collections.IntIterator) r2;

        i1 = virtualinvoke $r10.<kotlin.collections.IntIterator: int nextInt()>();

        i2 = i1;

        r3 = r1;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r0);

        goto label1;

     label2:
        $r6 = (java.util.List) r1;

        $r12 = (java.util.Collection) $r6;

        $r13 = (java.util.Collection) $r12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(0, "T?");

        $r7 = newarray (java.lang.Object)[0];

        $r8 = interfaceinvoke $r13.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        $r9 = (java.lang.Object[]) $r8;

        return $r9;
    }

    public static final transient androidx.compose.runtime.reflect.ComposableMethod getDeclaredComposableMethod(java.lang.Class, java.lang.String, java.lang.Class[]) throws java.lang.NoSuchMethodException
    {
        java.lang.Class $r0, $r41, r44, $r54, r57, $r64, r67;
        java.lang.String r1, $r16, $r20, r43, r56, r66;
        java.lang.Class[] r2, $r8, $r10, $r12, $r27, $r32, $r34, $r36;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10;
        java.lang.reflect.Method r3, r51, $r74;
        kotlin.jvm.internal.SpreadBuilder $r4, $r23, r40, r42, r55, r65;
        kotlin.ranges.IntRange $r5, $r24, $r29;
        java.util.ArrayList $r6, $r25, $r30;
        boolean $z0, $z2, $z3, z13, z18;
        java.util.List $r7, $r26, $r31;
        java.lang.Object[] $r9, $r11, $r28, $r33, $r35, r50, r63, r73;
        androidx.compose.runtime.reflect.ComposableMethod $r13;
        java.lang.NoSuchMethodException $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        kotlin.collections.IntIterator $r21, $r37, $r38;
        java.lang.Throwable $r22, $r39;
        java.lang.Iterable $r45, r58, r68;
        java.util.Collection r46, r48, $r49, r59, r61, r62, r69, r71, r72;
        java.util.Iterator $r47, r60, r70;

        $r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "methodName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "args");

        $i1 = lengthof r2;

        i0 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: int changedParamCount(int,int)>($i1, 0);

     label01:
        $r4 = new kotlin.jvm.internal.SpreadBuilder;

        specialinvoke $r4.<kotlin.jvm.internal.SpreadBuilder: void <init>(int)>(3);

        r40 = $r4;

        virtualinvoke r40.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r2);

        virtualinvoke r40.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>(class "Landroidx/compose/runtime/Composer;");

        $r41 = <java.lang.Integer: java.lang.Class TYPE>;

        r42 = r40;

        r43 = r1;

        r44 = $r0;

        $r5 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        $r45 = (java.lang.Iterable) $r5;

        $r6 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r45, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r46 = (java.util.Collection) $r6;

        $r47 = interfaceinvoke $r45.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r21 = (kotlin.collections.IntIterator) $r47;

        i8 = virtualinvoke $r21.<kotlin.collections.IntIterator: int nextInt()>();

        i9 = i8;

        r48 = r46;

        interfaceinvoke r48.<java.util.Collection: boolean add(java.lang.Object)>($r41);

        goto label02;

     label03:
        $r7 = (java.util.List) r46;

        $r49 = (java.util.Collection) $r7;

        $r8 = newarray (java.lang.Class)[0];

        $r9 = interfaceinvoke $r49.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r9, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r50 = $r9;

        virtualinvoke r42.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r50);

        $i3 = virtualinvoke r40.<kotlin.jvm.internal.SpreadBuilder: int size()>();

        $r10 = newarray (java.lang.Class)[$i3];

        $r11 = virtualinvoke r40.<kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (java.lang.Class[]) $r11;

        r51 = virtualinvoke r44.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r43, $r12);

     label04:
        goto label14;

     label05:
        $r22 := @caughtexception;

        $i4 = lengthof r2;

        $i10 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: int defaultParamCount(int)>($i4);

     label06:
        $r23 = new kotlin.jvm.internal.SpreadBuilder;

        specialinvoke $r23.<kotlin.jvm.internal.SpreadBuilder: void <init>(int)>(4);

        virtualinvoke $r23.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r2);

        virtualinvoke $r23.<kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)>(class "Landroidx/compose/runtime/Composer;");

        $r54 = <java.lang.Integer: java.lang.Class TYPE>;

        r55 = $r23;

        r56 = r1;

        r57 = $r0;

        $r24 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        r58 = (java.lang.Iterable) $r24;

        $r25 = new java.util.ArrayList;

        $i5 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r58, 10);

        specialinvoke $r25.<java.util.ArrayList: void <init>(int)>($i5);

        r59 = (java.util.Collection) $r25;

        z13 = 0;

        r60 = interfaceinvoke r58.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r38 = (kotlin.collections.IntIterator) r60;

        virtualinvoke $r38.<kotlin.collections.IntIterator: int nextInt()>();

        r61 = r59;

        interfaceinvoke r61.<java.util.Collection: boolean add(java.lang.Object)>($r54);

        goto label07;

     label08:
        $r26 = (java.util.List) r59;

        r62 = (java.util.Collection) $r26;

        $r27 = newarray (java.lang.Class)[0];

        $r28 = interfaceinvoke r62.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r27);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r28, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r63 = $r28;

        virtualinvoke r55.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r63);

        $r64 = <java.lang.Integer: java.lang.Class TYPE>;

        r65 = $r23;

        r66 = r56;

        r67 = r57;

        $r29 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, $i10);

        r68 = (java.lang.Iterable) $r29;

        $r30 = new java.util.ArrayList;

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r68, 10);

        specialinvoke $r30.<java.util.ArrayList: void <init>(int)>($i6);

        r69 = (java.util.Collection) $r30;

        z18 = 0;

        r70 = interfaceinvoke r68.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r70.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r37 = (kotlin.collections.IntIterator) r70;

        virtualinvoke $r37.<kotlin.collections.IntIterator: int nextInt()>();

        r71 = r69;

        interfaceinvoke r71.<java.util.Collection: boolean add(java.lang.Object)>($r64);

        goto label09;

     label10:
        $r31 = (java.util.List) r69;

        r72 = (java.util.Collection) $r31;

        $r32 = newarray (java.lang.Class)[0];

        $r33 = interfaceinvoke r72.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r32);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r33, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r73 = $r33;

        virtualinvoke r65.<kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)>(r73);

        $i7 = virtualinvoke $r23.<kotlin.jvm.internal.SpreadBuilder: int size()>();

        $r34 = newarray (java.lang.Class)[$i7];

        $r35 = virtualinvoke $r23.<kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])>($r34);

        $r36 = (java.lang.Class[]) $r35;

        $r74 = virtualinvoke r67.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(r66, $r36);

     label11:
        goto label13;

     label12:
        $r39 := @caughtexception;

        $r74 = (java.lang.reflect.Method) null;

     label13:
        r51 = $r74;

     label14:
        if r51 != null goto label15;

        $r14 = new java.lang.NoSuchMethodException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label15:
        r3 = r51;

        $r13 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: androidx.compose.runtime.reflect.ComposableMethod asComposableMethod(java.lang.reflect.Method)>(r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r13);

        return $r13;

        catch java.lang.ReflectiveOperationException from label06 to label11 with label12;
        catch java.lang.ReflectiveOperationException from label01 to label04 with label05;
    }

    public static final java.lang.Object access$getDefaultValue(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <androidx.compose.runtime.reflect.ComposableMethodKt: java.lang.Object getDefaultValue(java.lang.Class)>($r0);

        return $r1;
    }

