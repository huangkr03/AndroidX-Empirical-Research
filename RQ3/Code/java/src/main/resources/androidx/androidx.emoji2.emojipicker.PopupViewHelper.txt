androidx.emoji2.emojipicker.PopupViewHelper
<androidx.emoji2.emojipicker.PopupViewHelper: androidx.emoji2.emojipicker.PopupViewHelper$Companion Companion>
<androidx.emoji2.emojipicker.PopupViewHelper: android.content.Context context>
<androidx.emoji2.emojipicker.PopupViewHelper: int SQUARE_LAYOUT_VARIANT_COUNT>
<androidx.emoji2.emojipicker.PopupViewHelper: java.util.Set SQUARE_LAYOUT_EMOJI_NO_SKIN_TONE>
<androidx.emoji2.emojipicker.PopupViewHelper: java.util.List SKIN_TONE_COLOR_RES_IDS>
<androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_WITH_SKIN_TONES_TEMPLATE>
<androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_TEMPLATE>
    public void <init>(android.content.Context)
    {
        androidx.emoji2.emojipicker.PopupViewHelper r0;
        android.content.Context r1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.emoji2.emojipicker.PopupViewHelper: android.content.Context context> = r1;

        return;
    }

    public final android.widget.GridLayout fillPopupView(android.widget.GridLayout, int, int, java.util.List, android.view.View$OnClickListener)
    {
        androidx.emoji2.emojipicker.PopupViewHelper r0;
        android.widget.GridLayout r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, i12;
        java.util.List r2, $r11, $r17;
        android.view.View$OnClickListener r3;
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r4;
        android.graphics.Paint r5, $r15;
        androidx.emoji2.emojipicker.SkinToneCircleView r7, $r13, r40, r41;
        android.view.View r8, $r39;
        int[][] $r9;
        java.util.ArrayList $r10;
        boolean $z1, $z10;
        java.lang.Number $r12, $r19;
        android.content.Context $r14, $r16, $r22, $r24;
        java.lang.Object $r18, $r25, r31, r36;
        android.graphics.Paint$Style $r20;
        androidx.emoji2.emojipicker.EmojiView $r21, $r23, r37, r38;
        java.lang.CharSequence $r26;
        java.lang.Runnable $r27;
        java.lang.Object[] $r29;
        java.util.Collection r30;
        int[] r32;
        java.lang.Iterable r33, $r34;
        java.util.Iterator $r35;
        android.view.ViewGroup$LayoutParams $r42, $r43;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper;

        r1 := @parameter0: android.widget.GridLayout;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: android.view.View$OnClickListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "popupView");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "variants");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "clickListener");

        r4 = specialinvoke r0.<androidx.emoji2.emojipicker.PopupViewHelper: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate getGridTemplate(java.util.List)>(r2);

        $i2 = virtualinvoke r4.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int getColumn()>();

        virtualinvoke r1.<android.widget.GridLayout: void setColumnCount(int)>($i2);

        $i3 = virtualinvoke r4.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int getRow()>();

        virtualinvoke r1.<android.widget.GridLayout: void setRowCount(int)>($i3);

        virtualinvoke r1.<android.widget.GridLayout: void setOrientation(int)>(0);

        $r9 = virtualinvoke r4.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] getTemplate()>();

        $r29 = (java.lang.Object[]) $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r30 = (java.util.Collection) $r10;

        $i9 = 0;

        i10 = lengthof $r29;

     label01:
        if $i9 >= i10 goto label02;

        r31 = $r29[$i9];

        r32 = (int[]) r31;

        r33 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Iterable asIterable(int[])>(r32);

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r30, r33);

        $i9 = $i9 + 1;

        goto label01;

     label02:
        $r11 = (java.util.List) r30;

        $r34 = (java.lang.Iterable) $r11;

        $r35 = interfaceinvoke $r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.Number) r36;

        $i11 = virtualinvoke $r12.<java.lang.Number: int intValue()>();

        i12 = $i11;

        if 1 > i12 goto label05;

        $i8 = interfaceinvoke r2.<java.util.List: int size()>();

        if i12 > $i8 goto label04;

        $z10 = 1;

        goto label06;

     label04:
        $z10 = 0;

        goto label06;

     label05:
        $z10 = 0;

     label06:
        if $z10 == 0 goto label08;

        $r23 = new androidx.emoji2.emojipicker.EmojiView;

        $r24 = r0.<androidx.emoji2.emojipicker.PopupViewHelper: android.content.Context context>;

        specialinvoke $r23.<androidx.emoji2.emojipicker.EmojiView: void <init>(android.content.Context,android.util.AttributeSet,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r24, null, 2, null);

        r37 = $r23;

        r38 = r37;

        virtualinvoke r38.<androidx.emoji2.emojipicker.EmojiView: void setWillDrawVariantIndicator$emoji2_emojipicker_release(boolean)>(0);

        $i7 = $i11 - 1;

        $r25 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i7);

        $r26 = (java.lang.CharSequence) $r25;

        virtualinvoke r38.<androidx.emoji2.emojipicker.EmojiView: void setEmoji(java.lang.CharSequence)>($r26);

        virtualinvoke r38.<androidx.emoji2.emojipicker.EmojiView: void setOnClickListener(android.view.View$OnClickListener)>(r3);

        if $i11 != 1 goto label07;

        $r27 = dynamicinvoke "run" <java.lang.Runnable (androidx.emoji2.emojipicker.EmojiView)>(r38) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.emoji2.emojipicker.PopupViewHelper: void fillPopupView$lambda$6$lambda$3$lambda$2(androidx.emoji2.emojipicker.EmojiView)>, methodtype: void __METHODTYPE__());

        virtualinvoke r1.<android.widget.GridLayout: boolean post(java.lang.Runnable)>($r27);

     label07:
        $r39 = (android.view.View) r37;

        goto label10;

     label08:
        if i12 != 0 goto label09;

        $r21 = new androidx.emoji2.emojipicker.EmojiView;

        $r22 = r0.<androidx.emoji2.emojipicker.PopupViewHelper: android.content.Context context>;

        specialinvoke $r21.<androidx.emoji2.emojipicker.EmojiView: void <init>(android.content.Context,android.util.AttributeSet,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r22, null, 2, null);

        $r39 = (android.view.View) $r21;

        goto label10;

     label09:
        $r13 = new androidx.emoji2.emojipicker.SkinToneCircleView;

        $r14 = r0.<androidx.emoji2.emojipicker.PopupViewHelper: android.content.Context context>;

        specialinvoke $r13.<androidx.emoji2.emojipicker.SkinToneCircleView: void <init>(android.content.Context,android.util.AttributeSet,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r14, null, 2, null);

        r40 = $r13;

        r41 = r40;

        $r15 = new android.graphics.Paint;

        specialinvoke $r15.<android.graphics.Paint: void <init>()>();

        r5 = $r15;

        r7 = r41;

        $r16 = virtualinvoke r41.<androidx.emoji2.emojipicker.SkinToneCircleView: android.content.Context getContext()>();

        $r17 = <androidx.emoji2.emojipicker.PopupViewHelper: java.util.List SKIN_TONE_COLOR_RES_IDS>;

        $i4 = $i11 + 5;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i4);

        $r19 = (java.lang.Number) $r18;

        $i5 = virtualinvoke $r19.<java.lang.Number: int intValue()>();

        $i6 = staticinvoke <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>($r16, $i5);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i6);

        $r20 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r20);

        virtualinvoke r7.<androidx.emoji2.emojipicker.SkinToneCircleView: void setPaint(android.graphics.Paint)>(r5);

        $r39 = (android.view.View) r40;

     label10:
        r8 = $r39;

        virtualinvoke r1.<android.widget.GridLayout: void addView(android.view.View)>(r8);

        $r42 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r42.<android.view.ViewGroup$LayoutParams: int width> = i0;

        $r43 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r43.<android.view.ViewGroup$LayoutParams: int height> = i1;

        goto label03;

     label11:
        return r1;
    }

    private final androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate getGridTemplate(java.util.List)
    {
        androidx.emoji2.emojipicker.PopupViewHelper r0;
        java.util.List r1, r30;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout r2, $r26;
        int[][] r3, r4, r8, $r28;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.Iterable $r5;
        java.util.Collection r6, $r9, $r12, r29;
        java.util.Iterator r7;
        byte b4, $b21;
        kotlin.ranges.IntRange $r10;
        java.util.ArrayList $r11;
        boolean $z3, $z5;
        int[] $r13, $r14, $r15, $r19, $r27, $r31;
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate $r16;
        java.lang.Object[] $r17;
        kotlin.NoWhenBranchMatchedException $r18, $r20, $r23;
        kotlin.collections.IntIterator $r21;
        java.lang.Integer $r22;
        java.util.Set $r24;
        java.lang.Object $r25;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper;

        r1 := @parameter0: java.util.List;

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i5 != 26 goto label02;

        $r24 = <androidx.emoji2.emojipicker.PopupViewHelper: java.util.Set SQUARE_LAYOUT_EMOJI_NO_SKIN_TONE>;

        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z5 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>($r25);

        if $z5 == 0 goto label01;

        $r26 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE>;

        goto label03;

     label01:
        $r26 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE_WITH_SKIN_TONE_CIRCLE>;

        goto label03;

     label02:
        $r26 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout FLAT>;

     label03:
        r2 = $r26;

        $r27 = <androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i15 = virtualinvoke r2.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        $i16 = $r27[$i15];

        tableswitch($i16)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            default: goto label09;
        };

     label04:
        $r28 = <androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_TEMPLATE>;

        goto label10;

     label05:
        $r28 = <androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_WITH_SKIN_TONES_TEMPLATE>;

        goto label10;

     label06:
        r4 = newarray (int[])[1];

        $r9 = (java.util.Collection) r1;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)>($r9);

        $r5 = (java.lang.Iterable) $r10;

        b4 = 0;

        r8 = r4;

        $r11 = new java.util.ArrayList;

        $i6 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r5, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i6);

        r6 = (java.util.Collection) $r11;

        r7 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r21 = (kotlin.collections.IntIterator) r7;

        i2 = virtualinvoke $r21.<kotlin.collections.IntIterator: int nextInt()>();

        i3 = i2;

        r29 = r6;

        $i14 = i3 + 1;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        interfaceinvoke r29.<java.util.Collection: boolean add(java.lang.Object)>($r22);

        goto label07;

     label08:
        r30 = (java.util.List) r6;

        $r12 = (java.util.Collection) r30;

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: int[] toIntArray(java.util.Collection)>($r12);

        r8[b4] = $r13;

        $r28 = r4;

        goto label10;

     label09:
        $r23 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r23.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r23;

     label10:
        r3 = $r28;

        $r31 = <androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i17 = virtualinvoke r2.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        $i18 = $r31[$i17];

        tableswitch($i18)
        {
            case 1: goto label11;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label13;
        };

     label11:
        $r19 = r3[0];

        $i19 = lengthof $r19;

        goto label14;

     label12:
        $r14 = r3[0];

        $i7 = lengthof $r14;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>(6, $i7);

        goto label14;

     label13:
        $r20 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r20.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r20;

     label14:
        i0 = $i19;

        $r15 = <androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i8 = virtualinvoke r2.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        $i9 = $r15[$i8];

        tableswitch($i9)
        {
            case 1: goto label15;
            case 2: goto label15;
            case 3: goto label16;
            default: goto label19;
        };

     label15:
        $r17 = (java.lang.Object[]) r3;

        $i20 = lengthof $r17;

        goto label20;

     label16:
        $i10 = interfaceinvoke r1.<java.util.List: int size()>();

        $i11 = $i10 / i0;

        $i12 = interfaceinvoke r1.<java.util.List: int size()>();

        $i13 = $i12 % i0;

        if $i13 != 0 goto label17;

        $b21 = 0;

        goto label18;

     label17:
        $b21 = 1;

     label18:
        $i20 = $i11 + $b21;

        goto label20;

     label19:
        $r18 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r18.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r18;

     label20:
        i1 = $i20;

        $r16 = new androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        specialinvoke $r16.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: void <init>(int[][],int,int)>(r3, i1, i0);

        return $r16;
    }

    private static final void fillPopupView$lambda$6$lambda$3$lambda$2(androidx.emoji2.emojipicker.EmojiView)
    {
        androidx.emoji2.emojipicker.EmojiView $r0;

        $r0 := @parameter0: androidx.emoji2.emojipicker.EmojiView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$this_apply");

        virtualinvoke $r0.<androidx.emoji2.emojipicker.EmojiView: void sendAccessibilityEvent(int)>(128);

        return;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion $r0;
        java.util.Set $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r2, $r3, $r4, $r5, $r6;
        java.util.List $r7;
        java.lang.Integer[] r8;
        int[][] r9, r16;
        int[] r10, r11, r12, r13, r14, r15, r17, r18, r19, r20, r21;

        $r0 = new androidx.emoji2.emojipicker.PopupViewHelper$Companion;

        specialinvoke $r0.<androidx.emoji2.emojipicker.PopupViewHelper$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.emoji2.emojipicker.PopupViewHelper: androidx.emoji2.emojipicker.PopupViewHelper$Companion Companion> = $r0;

        $r1 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>("\ud83d\udc6a");

        <androidx.emoji2.emojipicker.PopupViewHelper: java.util.Set SQUARE_LAYOUT_EMOJI_NO_SKIN_TONE> = $r1;

        r8 = newarray (java.lang.Integer)[5];

        $i0 = <androidx.emoji2.emojipicker.R$color: int light_skin_tone>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        r8[0] = $r2;

        $i1 = <androidx.emoji2.emojipicker.R$color: int medium_light_skin_tone>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r8[1] = $r3;

        $i2 = <androidx.emoji2.emojipicker.R$color: int medium_skin_tone>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r8[2] = $r4;

        $i3 = <androidx.emoji2.emojipicker.R$color: int medium_dark_skin_tone>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r8[3] = $r5;

        $i4 = <androidx.emoji2.emojipicker.R$color: int dark_skin_tone>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r8[4] = $r6;

        $r7 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r8);

        <androidx.emoji2.emojipicker.PopupViewHelper: java.util.List SKIN_TONE_COLOR_RES_IDS> = $r7;

        r9 = newarray (int[])[6];

        r10 = newarray (int)[7];

        r10[0] = 0;

        r10[1] = 0;

        r10[2] = -5;

        r10[3] = -4;

        r10[4] = -3;

        r10[5] = -2;

        r10[6] = -1;

        r9[0] = r10;

        r11 = newarray (int)[7];

        r11[0] = 0;

        r11[1] = -5;

        r11[2] = 2;

        r11[3] = 3;

        r11[4] = 4;

        r11[5] = 5;

        r11[6] = 6;

        r9[1] = r11;

        r12 = newarray (int)[7];

        r12[0] = 0;

        r12[1] = -4;

        r12[2] = 7;

        r12[3] = 8;

        r12[4] = 9;

        r12[5] = 10;

        r12[6] = 11;

        r9[2] = r12;

        r13 = newarray (int)[7];

        r13[0] = 0;

        r13[1] = -3;

        r13[2] = 12;

        r13[3] = 13;

        r13[4] = 14;

        r13[5] = 15;

        r13[6] = 16;

        r9[3] = r13;

        r14 = newarray (int)[7];

        r14[0] = 0;

        r14[1] = -2;

        r14[2] = 17;

        r14[3] = 18;

        r14[4] = 19;

        r14[5] = 20;

        r14[6] = 21;

        r9[4] = r14;

        r15 = newarray (int)[7];

        r15[0] = 1;

        r15[1] = -1;

        r15[2] = 22;

        r15[3] = 23;

        r15[4] = 24;

        r15[5] = 25;

        r15[6] = 26;

        r9[5] = r15;

        <androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_WITH_SKIN_TONES_TEMPLATE> = r9;

        r16 = newarray (int[])[5];

        r17 = newarray (int)[6];

        r17[0] = 0;

        r17[1] = 2;

        r17[2] = 3;

        r17[3] = 4;

        r17[4] = 5;

        r17[5] = 6;

        r16[0] = r17;

        r18 = newarray (int)[6];

        r18[0] = 0;

        r18[1] = 7;

        r18[2] = 8;

        r18[3] = 9;

        r18[4] = 10;

        r18[5] = 11;

        r16[1] = r18;

        r19 = newarray (int)[6];

        r19[0] = 0;

        r19[1] = 12;

        r19[2] = 13;

        r19[3] = 14;

        r19[4] = 15;

        r19[5] = 16;

        r16[2] = r19;

        r20 = newarray (int)[6];

        r20[0] = 0;

        r20[1] = 17;

        r20[2] = 18;

        r20[3] = 19;

        r20[4] = 20;

        r20[5] = 21;

        r16[3] = r20;

        r21 = newarray (int)[6];

        r21[0] = 1;

        r21[1] = 22;

        r21[2] = 23;

        r21[3] = 24;

        r21[4] = 25;

        r21[5] = 26;

        r16[4] = r21;

        <androidx.emoji2.emojipicker.PopupViewHelper: int[][] SQUARE_LAYOUT_TEMPLATE> = r16;

        return;
    }

androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout
<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout FLAT>
<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE>
<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE_WITH_SKIN_TONE_CIRCLE>
<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $VALUES>
    private void <init>(java.lang.String, int)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] values()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[]) $r1;

        return $r2;
    }

    public static androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/emoji2/emojipicker/PopupViewHelper$Companion$Layout;", r0);

        $r2 = (androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout) $r1;

        return $r2;
    }

    private static final androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $values()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] r0;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout $r1, $r2, $r3;

        r0 = newarray (androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout)[3];

        $r1 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout FLAT>;

        r0[0] = $r1;

        $r2 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE>;

        r0[1] = $r2;

        $r3 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE_WITH_SKIN_TONE_CIRCLE>;

        r0[2] = $r3;

        return r0;
    }

    static void <clinit>()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout $r0, $r1, $r2;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $r3;

        $r0 = new androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout;

        specialinvoke $r0.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: void <init>(java.lang.String,int)>("FLAT", 0);

        <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout FLAT> = $r0;

        $r1 = new androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout;

        specialinvoke $r1.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: void <init>(java.lang.String,int)>("SQUARE", 1);

        <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE> = $r1;

        $r2 = new androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout;

        specialinvoke $r2.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: void <init>(java.lang.String,int)>("SQUARE_WITH_SKIN_TONE_CIRCLE", 2);

        <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE_WITH_SKIN_TONE_CIRCLE> = $r2;

        $r3 = staticinvoke <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $values()>();

        <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $VALUES> = $r3;

        return;
    }

androidx.emoji2.emojipicker.PopupViewHelper$Companion
    private void <init>()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion r0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.emoji2.emojipicker.PopupViewHelper$Companion: void <init>()>();

        return;
    }

androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate
<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>
<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>
<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>
    public void <init>(int[][], int, int)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int[][] r1;
        int i0, i1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        r1 := @parameter0: int[][];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "template");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template> = r1;

        r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row> = i0;

        r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column> = i1;

        return;
    }

    public final int[][] getTemplate()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int[][] $r1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $r1 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        return $r1;
    }

    public final int getRow()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        return $i0;
    }

    public final int getColumn()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        return $i0;
    }

    public final int[][] component1()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int[][] $r1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $r1 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        return $r1;
    }

    public final int component2()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        return $i0;
    }

    public final int component3()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int $i0;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        return $i0;
    }

    public final androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate copy(int[][], int, int)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0, $r2;
        int[][] r1;
        int i0, i1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        r1 := @parameter0: int[][];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "template");

        $r2 = new androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        specialinvoke $r2.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: void <init>(int[][],int,int)>(r1, i0, i1);

        return $r2;
    }

    public static androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate copy$default(androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate, int[][], int, int, int, java.lang.Object)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0, $r2;
        int i0, $i1, $i2, $i3, i4, i5;
        java.lang.Object r1;
        int[][] r3;

        r0 := @parameter0: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        r3 := @parameter1: int[][];

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i0 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        i4 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        i5 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

     label3:
        $r2 = virtualinvoke r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate copy(int[][],int,int)>(r3, i4, i5);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10;
        int[][] $r3;
        java.lang.String $r4, $r11;
        int $i0, $i1;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridTemplate(template=");

        $r3 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", row=");

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column=");

        $i1 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public int hashCode()
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0;
        int[][] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        $r1 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        i6 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        $i1 = i6 * 31;

        $i0 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        $i2 = staticinvoke <java.lang.Integer: int hashCode(int)>($i0);

        i7 = $i1 + $i2;

        $i4 = i7 * 31;

        $i3 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        $i5 = staticinvoke <java.lang.Integer: int hashCode(int)>($i3);

        i8 = $i4 + $i5;

        return i8;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int[][] $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate) r1;

        $r4 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        $r3 = r2.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int[][] template>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i1 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        $i0 = r2.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int row>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        $i2 = r2.<androidx.emoji2.emojipicker.PopupViewHelper$GridTemplate: int column>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        return 1;
    }

androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings
<androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        int[] r0;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] $r1;
        int $i0, $i1, $i2, $i3;
        androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout $r2, $r3, $r4;
        java.lang.Throwable $r5, $r6, $r7, r8, r9, r10;

        $r1 = staticinvoke <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

     label01:
        $r2 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE>;

        $i1 = virtualinvoke $r2.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        r0[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r5 := @caughtexception;

        r8 = $r5;

     label04:
        $r3 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout SQUARE_WITH_SKIN_TONE_CIRCLE>;

        $i2 = virtualinvoke $r3.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        r0[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        r9 = $r7;

     label07:
        $r4 = <androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout FLAT>;

        $i3 = virtualinvoke $r4.<androidx.emoji2.emojipicker.PopupViewHelper$Companion$Layout: int ordinal()>();

        r0[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        r10 = $r6;

     label10:
        <androidx.emoji2.emojipicker.PopupViewHelper$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
    }

