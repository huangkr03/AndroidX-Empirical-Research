androidx.compose.ui.text.input.RecordingInputConnection
<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>
<androidx.compose.ui.text.input.RecordingInputConnection: boolean autoCorrect>
<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth>
<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>
<androidx.compose.ui.text.input.RecordingInputConnection: int currentExtractedTextRequestToken>
<androidx.compose.ui.text.input.RecordingInputConnection: boolean extractedTextMonitorMode>
<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>
<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>
    public void <init>(androidx.compose.ui.text.input.TextFieldValue, androidx.compose.ui.text.input.InputEventCallback2, boolean)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.TextFieldValue r1;
        androidx.compose.ui.text.input.InputEventCallback2 r2;
        boolean z0;
        java.util.ArrayList $r3;
        java.util.List $r4;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        r2 := @parameter1: androidx.compose.ui.text.input.InputEventCallback2;

        z0 := @parameter2: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "eventCallback");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback> = r2;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean autoCorrect> = z0;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue> = r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.List) $r3;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands> = $r4;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive> = 1;

        return;
    }

    public final androidx.compose.ui.text.input.InputEventCallback2 getEventCallback()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.InputEventCallback2 $r1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        $r1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>;

        return $r1;
    }

    public final boolean getAutoCorrect()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        $z0 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean autoCorrect>;

        return $z0;
    }

    public final androidx.compose.ui.text.input.TextFieldValue getMTextFieldValue$ui_release()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.TextFieldValue $r1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        $r1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        return $r1;
    }

    public final void setMTextFieldValue$ui_release(androidx.compose.ui.text.input.TextFieldValue)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.TextFieldValue r1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue> = r1;

        return;
    }

    private final boolean ensureActive(kotlin.jvm.functions.Function0)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        kotlin.jvm.functions.Function0 r1;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        z1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label1:
        return z1;
    }

    public final void updateInputState(androidx.compose.ui.text.input.TextFieldValue, androidx.compose.ui.text.input.InputMethodManager, android.view.View)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.TextFieldValue r1;
        androidx.compose.ui.text.input.InputMethodManager r2;
        android.view.View r3;
        int i0, i1, $i3, $i5, $i8, $i9, $i10;
        boolean $z0, $z1;
        androidx.compose.ui.text.TextRange $r4, $r5;
        long $l2, $l4, $l6, $l7;
        android.view.inputmethod.ExtractedText $r6;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: androidx.compose.ui.text.input.TextFieldValue;

        r2 := @parameter1: androidx.compose.ui.text.input.InputMethodManager;

        r3 := @parameter2: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "inputMethodManager");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "view");

        $z0 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void setMTextFieldValue$ui_release(androidx.compose.ui.text.input.TextFieldValue)>(r1);

        $z1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean extractedTextMonitorMode>;

        if $z1 == 0 goto label2;

        $i8 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: int currentExtractedTextRequestToken>;

        $r6 = staticinvoke <androidx.compose.ui.text.input.InputState_androidKt: android.view.inputmethod.ExtractedText toExtractedText(androidx.compose.ui.text.input.TextFieldValue)>(r1);

        interfaceinvoke r2.<androidx.compose.ui.text.input.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>(r3, $i8, $r6);

     label2:
        $r4 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: androidx.compose.ui.text.TextRange getComposition-MzsxiRA()>();

        if $r4 == null goto label3;

        $l7 = virtualinvoke $r4.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        $i9 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l7);

        goto label4;

     label3:
        $i9 = -1;

     label4:
        i0 = $i9;

        $r5 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: androidx.compose.ui.text.TextRange getComposition-MzsxiRA()>();

        if $r5 == null goto label5;

        $l6 = virtualinvoke $r5.<androidx.compose.ui.text.TextRange: long unbox-impl()>();

        $i10 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l6);

        goto label6;

     label5:
        $i10 = -1;

     label6:
        i1 = $i10;

        $l2 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i3 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l2);

        $l4 = virtualinvoke r1.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i5 = staticinvoke <androidx.compose.ui.text.TextRange: int getMax-impl(long)>($l4);

        interfaceinvoke r2.<androidx.compose.ui.text.input.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>(r3, $i3, $i5, i0, i1);

        return;
    }

    private final void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        androidx.compose.ui.text.input.EditCommand r1;
        java.lang.Throwable r2, $r4;
        java.util.List $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: androidx.compose.ui.text.input.EditCommand;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean beginBatchEditInternal()>();

     label1:
        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean endBatchEditInternal()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean endBatchEditInternal()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean beginBatchEdit()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        boolean z1, z2, $z5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $z5 = specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean beginBatchEditInternal()>();

        return $z5;

     label1:
        return z1;
    }

    private final boolean beginBatchEditInternal()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0, $i1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth>;

        $i1 = i0 + 1;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth> = $i1;

        return 1;
    }

    public boolean endBatchEdit()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        $z0 = specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean endBatchEditInternal()>();

        return $z0;
    }

    private final boolean endBatchEditInternal()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0, $i1, $i2, $i3;
        java.util.List $r1, $r3, $r6, $r7;
        java.util.Collection $r2, $r4;
        boolean $z0, $z1, $z2;
        androidx.compose.ui.text.input.InputEventCallback2 $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth>;

        $i1 = i0 + -1;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth> = $i1;

        $i2 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth>;

        if $i2 != 0 goto label3;

        $r1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r5 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>;

        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>;

        $r4 = (java.util.Collection) $r3;

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r4);

        interfaceinvoke $r5.<androidx.compose.ui.text.input.InputEventCallback2: void onEditCommands(java.util.List)>($r6);

        $r7 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>;

        interfaceinvoke $r7.<java.util.List: void clear()>();

     label3:
        $i3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth>;

        if $i3 <= 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public void closeConnection()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        java.util.List $r1;
        androidx.compose.ui.text.input.InputEventCallback2 $r2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        $r1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: java.util.List editCommands>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: int batchDepth> = 0;

        r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive> = 0;

        $r2 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>;

        interfaceinvoke $r2.<androidx.compose.ui.text.input.InputEventCallback2: void onConnectionClosed(androidx.compose.ui.text.input.RecordingInputConnection)>(r0);

        return;
    }

    public boolean commitText(java.lang.CharSequence, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r2;
        java.lang.CharSequence r1;
        int i0;
        boolean z1, z2;
        androidx.compose.ui.text.input.CommitTextCommand $r3;
        java.lang.String $r4;
        androidx.compose.ui.text.input.EditCommand $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 = r0;

        z1 = r2.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r3 = new androidx.compose.ui.text.input.CommitTextCommand;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r3.<androidx.compose.ui.text.input.CommitTextCommand: void <init>(java.lang.String,int)>($r4, i0);

        $r5 = (androidx.compose.ui.text.input.EditCommand) $r3;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r5);

     label1:
        return z1;
    }

    public boolean setComposingRegion(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, i1;
        boolean z1, z2;
        androidx.compose.ui.text.input.SetComposingRegionCommand $r2;
        androidx.compose.ui.text.input.EditCommand $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = new androidx.compose.ui.text.input.SetComposingRegionCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.SetComposingRegionCommand: void <init>(int,int)>(i0, i1);

        $r3 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r3);

     label1:
        return z1;
    }

    public boolean setComposingText(java.lang.CharSequence, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r2;
        java.lang.CharSequence r1;
        int i0;
        boolean z1, z2;
        androidx.compose.ui.text.input.SetComposingTextCommand $r3;
        java.lang.String $r4;
        androidx.compose.ui.text.input.EditCommand $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 = r0;

        z1 = r2.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r3 = new androidx.compose.ui.text.input.SetComposingTextCommand;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r3.<androidx.compose.ui.text.input.SetComposingTextCommand: void <init>(java.lang.String,int)>($r4, i0);

        $r5 = (androidx.compose.ui.text.input.EditCommand) $r3;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r5);

     label1:
        return z1;
    }

    public boolean deleteSurroundingTextInCodePoints(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, i1;
        boolean z1, z2;
        androidx.compose.ui.text.input.DeleteSurroundingTextInCodePointsCommand $r2;
        androidx.compose.ui.text.input.EditCommand $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = new androidx.compose.ui.text.input.DeleteSurroundingTextInCodePointsCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.DeleteSurroundingTextInCodePointsCommand: void <init>(int,int)>(i0, i1);

        $r3 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r3);

        return 1;

     label1:
        return z1;
    }

    public boolean deleteSurroundingText(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, i1;
        boolean z1, z2;
        androidx.compose.ui.text.input.DeleteSurroundingTextCommand $r2;
        androidx.compose.ui.text.input.EditCommand $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = new androidx.compose.ui.text.input.DeleteSurroundingTextCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.DeleteSurroundingTextCommand: void <init>(int,int)>(i0, i1);

        $r3 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r3);

        return 1;

     label1:
        return z1;
    }

    public boolean setSelection(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, i1;
        boolean z1, z2;
        androidx.compose.ui.text.input.SetSelectionCommand $r2;
        androidx.compose.ui.text.input.EditCommand $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = new androidx.compose.ui.text.input.SetSelectionCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.SetSelectionCommand: void <init>(int,int)>(i0, i1);

        $r3 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r3);

        return 1;

     label1:
        return z1;
    }

    public boolean finishComposingText()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        boolean z1, z2;
        androidx.compose.ui.text.input.FinishComposingTextCommand $r2;
        androidx.compose.ui.text.input.EditCommand $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r2 = new androidx.compose.ui.text.input.FinishComposingTextCommand;

        specialinvoke $r2.<androidx.compose.ui.text.input.FinishComposingTextCommand: void <init>()>();

        $r3 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r3);

        return 1;

     label1:
        return z1;
    }

    public boolean sendKeyEvent(android.view.KeyEvent)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r2;
        android.view.KeyEvent r1;
        boolean z1, z2;
        androidx.compose.ui.text.input.InputEventCallback2 $r3;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "event");

        r2 = r0;

        z1 = r2.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>;

        interfaceinvoke $r3.<androidx.compose.ui.text.input.InputEventCallback2: void onKeyEvent(android.view.KeyEvent)>(r1);

        return 1;

     label1:
        return z1;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0, i1;
        java.lang.String r1;
        androidx.compose.ui.text.input.TextFieldValue $r2;
        androidx.compose.ui.text.AnnotatedString $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $r3 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: androidx.compose.ui.text.AnnotatedString getTextBeforeSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r2, i0);

        r1 = virtualinvoke $r3.<androidx.compose.ui.text.AnnotatedString: java.lang.String toString()>();

        $r4 = (java.lang.CharSequence) r1;

        return $r4;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0, i1;
        java.lang.String r1;
        androidx.compose.ui.text.input.TextFieldValue $r2;
        androidx.compose.ui.text.AnnotatedString $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $r3 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: androidx.compose.ui.text.AnnotatedString getTextAfterSelection(androidx.compose.ui.text.input.TextFieldValue,int)>($r2, i0);

        r1 = virtualinvoke $r3.<androidx.compose.ui.text.AnnotatedString: java.lang.String toString()>();

        $r4 = (java.lang.CharSequence) r1;

        return $r4;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0;
        java.lang.CharSequence r1, $r6;
        androidx.compose.ui.text.input.TextFieldValue $r2, $r3;
        long $l1;
        boolean $z0;
        androidx.compose.ui.text.AnnotatedString $r4;
        java.lang.String $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $l1 = virtualinvoke $r2.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $z0 = staticinvoke <androidx.compose.ui.text.TextRange: boolean getCollapsed-impl(long)>($l1);

        if $z0 == 0 goto label1;

        $r6 = (java.lang.CharSequence) null;

        goto label2;

     label1:
        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $r4 = staticinvoke <androidx.compose.ui.text.input.TextFieldValueKt: androidx.compose.ui.text.AnnotatedString getSelectedText(androidx.compose.ui.text.input.TextFieldValue)>($r3);

        $r5 = virtualinvoke $r4.<androidx.compose.ui.text.AnnotatedString: java.lang.String toString()>();

        $r6 = (java.lang.CharSequence) $r5;

     label2:
        r1 = $r6;

        return r1;
    }

    public boolean requestCursorUpdates(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecordingIC", "requestCursorUpdates is not supported");

        return 0;

     label1:
        return z1;
    }

    public android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest, int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, $i1, $i2;
        android.view.inputmethod.ExtractedText r2;
        boolean $z0, $z1;
        androidx.compose.ui.text.input.TextFieldValue $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean extractedTextMonitorMode> = $z1;

        $z0 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean extractedTextMonitorMode>;

        if $z0 == 0 goto label5;

        if r1 == null goto label3;

        $i2 = r1.<android.view.inputmethod.ExtractedTextRequest: int token>;

        goto label4;

     label3:
        $i2 = 0;

     label4:
        r0.<androidx.compose.ui.text.input.RecordingInputConnection: int currentExtractedTextRequestToken> = $i2;

     label5:
        $r5 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        r2 = staticinvoke <androidx.compose.ui.text.input.InputState_androidKt: android.view.inputmethod.ExtractedText toExtractedText(androidx.compose.ui.text.input.TextFieldValue)>($r5);

        return r2;
    }

    public boolean performContextMenuAction(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, $i1;
        boolean z1, z2;
        androidx.compose.ui.text.input.SetSelectionCommand $r2;
        androidx.compose.ui.text.input.TextFieldValue $r3;
        java.lang.String $r4;
        androidx.compose.ui.text.input.EditCommand $r5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label6;

        tableswitch(i0)
        {
            case 16908319: goto label1;
            case 16908320: goto label2;
            case 16908321: goto label3;
            case 16908322: goto label4;
            case 16908323: goto label5;
            case 16908324: goto label5;
            case 16908325: goto label5;
            case 16908326: goto label5;
            case 16908327: goto label5;
            case 16908328: goto label5;
            case 16908329: goto label5;
            default: goto label5;
        };

     label1:
        $r2 = new androidx.compose.ui.text.input.SetSelectionCommand;

        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $r4 = virtualinvoke $r3.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke $r2.<androidx.compose.ui.text.input.SetSelectionCommand: void <init>(int,int)>(0, $i1);

        $r5 = (androidx.compose.ui.text.input.EditCommand) $r2;

        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void addEditCommandWithBatch(androidx.compose.ui.text.input.EditCommand)>($r5);

        goto label5;

     label2:
        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void sendSynthesizedKeyEvent(int)>(277);

        goto label5;

     label3:
        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void sendSynthesizedKeyEvent(int)>(278);

        goto label5;

     label4:
        specialinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: void sendSynthesizedKeyEvent(int)>(279);

     label5:
        return 0;

     label6:
        return z1;
    }

    private final void sendSynthesizedKeyEvent(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0;
        android.view.KeyEvent $r1, $r2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(int,int)>(0, i0);

        virtualinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r1);

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(int,int)>(1, i0);

        virtualinvoke r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        return;
    }

    public boolean performEditorAction(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0, i1, $i3;
        boolean z1, z2;
        androidx.compose.ui.text.input.ImeAction$Companion $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        androidx.compose.ui.text.input.InputEventCallback2 $r14;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label10;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label04;
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label02;
            case 7: goto label05;
            default: goto label08;
        };

     label01:
        $r8 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r8.<androidx.compose.ui.text.input.ImeAction$Companion: int getDefault-eUduSuo()>();

        goto label09;

     label02:
        $r3 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r3.<androidx.compose.ui.text.input.ImeAction$Companion: int getDone-eUduSuo()>();

        goto label09;

     label03:
        $r5 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r5.<androidx.compose.ui.text.input.ImeAction$Companion: int getSend-eUduSuo()>();

        goto label09;

     label04:
        $r6 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r6.<androidx.compose.ui.text.input.ImeAction$Companion: int getSearch-eUduSuo()>();

        goto label09;

     label05:
        $r2 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r2.<androidx.compose.ui.text.input.ImeAction$Companion: int getPrevious-eUduSuo()>();

        goto label09;

     label06:
        $r4 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r4.<androidx.compose.ui.text.input.ImeAction$Companion: int getNext-eUduSuo()>();

        goto label09;

     label07:
        $r7 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r7.<androidx.compose.ui.text.input.ImeAction$Companion: int getGo-eUduSuo()>();

        goto label09;

     label08:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME sends unsupported Editor Action: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecordingIC", $r12);

        $r13 = <androidx.compose.ui.text.input.ImeAction: androidx.compose.ui.text.input.ImeAction$Companion Companion>;

        $i3 = virtualinvoke $r13.<androidx.compose.ui.text.input.ImeAction$Companion: int getDefault-eUduSuo()>();

     label09:
        i1 = $i3;

        $r14 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.InputEventCallback2 eventCallback>;

        interfaceinvoke $r14.<androidx.compose.ui.text.input.InputEventCallback2: void onImeAction-KlQnJC8(int)>(i1);

        return 1;

     label10:
        return z1;
    }

    public boolean commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r2;
        android.view.inputmethod.CompletionInfo r1;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        r2 = r0;

        z1 = r2.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        return 0;

     label1:
        return z1;
    }

    public boolean commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r2;
        android.view.inputmethod.CorrectionInfo r1;
        boolean z1, z2, $z5;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        r2 = r0;

        z1 = r2.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        $z5 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: boolean autoCorrect>;

        return $z5;

     label1:
        return z1;
    }

    public android.os.Handler getHandler()
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        return null;
    }

    public boolean clearMetaKeyStates(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r1;
        int i0;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        r1 = r0;

        z1 = r1.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        return 0;

     label1:
        return z1;
    }

    public boolean reportFullscreenMode(boolean)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        z0 := @parameter0: boolean;

        return 0;
    }

    public int getCursorCapsMode(int)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        int i0, $i2, $i3;
        androidx.compose.ui.text.input.TextFieldValue $r1, $r3;
        java.lang.String $r2;
        java.lang.CharSequence $r4;
        long $l1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.text.input.TextFieldValue: java.lang.String getText()>();

        $r4 = (java.lang.CharSequence) $r2;

        $r3 = r0.<androidx.compose.ui.text.input.RecordingInputConnection: androidx.compose.ui.text.input.TextFieldValue mTextFieldValue>;

        $l1 = virtualinvoke $r3.<androidx.compose.ui.text.input.TextFieldValue: long getSelection-d9O1mEE()>();

        $i2 = staticinvoke <androidx.compose.ui.text.TextRange: int getMin-impl(long)>($l1);

        $i3 = staticinvoke <android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>($r4, $i2, i0);

        return $i3;
    }

    public boolean performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r3;
        java.lang.String r1;
        android.os.Bundle r2;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = r0;

        z1 = r3.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        return 1;

     label1:
        return z1;
    }

    public boolean commitContent(android.view.inputmethod.InputContentInfo, int, android.os.Bundle)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0, r3;
        android.view.inputmethod.InputContentInfo r1;
        int i0;
        android.os.Bundle r2;
        boolean z1, z2;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: android.view.inputmethod.InputContentInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "inputContentInfo");

        r3 = r0;

        z1 = r3.<androidx.compose.ui.text.input.RecordingInputConnection: boolean isActive>;

        z2 = z1;

        if z2 == 0 goto label1;

        return 0;

     label1:
        return z1;
    }

    private final void logDebug(java.lang.String)
    {
        androidx.compose.ui.text.input.RecordingInputConnection r0;
        java.lang.String r1;

        r0 := @this: androidx.compose.ui.text.input.RecordingInputConnection;

        r1 := @parameter0: java.lang.String;

        return;
    }

