androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>
    public void <init>(int, java.lang.Object[], androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0;
        java.lang.Object[] r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffer");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = i0;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = r1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy> = r2;

        return;
    }

    public final int getBitmap()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        return $i0;
    }

    public final void setBitmap(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = i0;

        return;
    }

    public final java.lang.Object[] getBuffer()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        java.lang.Object[] $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        return $r1;
    }

    public final void setBuffer(java.lang.Object[])
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = r1;

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnedBy()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        return $r1;
    }

    public final void setOwnedBy(androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy> = r1;

        return;
    }

    public void <init>(int, java.lang.Object[])
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0;
        java.lang.Object[] r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "buffer");

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, r1, null);

        return;
    }

    private final boolean hasNoCellAt(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int indexOfCellAt$runtime_release(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i1 = i0 - 1;

        $i3 = $i2 & $i1;

        $i4 = staticinvoke <java.lang.Integer: int bitCount(int)>($i3);

        return $i4;
    }

    private final java.lang.Object elementAtIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r2 = $r1[i0];

        return $r2;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r3;
        int i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r2 = $r1[i0];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode>");

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) $r2;

        return $r3;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode addElementAt(int, java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r4;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Object[] r2, $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i0);

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r3, i1, r1);

        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i3 = $i2 | i0;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>($i3, r2);

        return $r4;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAddElementAt(int, java.lang.Object, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r6;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r2, $r4;
        java.lang.Object[] r3, $r5, $r7, $r8;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        i1 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i0);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        if $r4 != r2 goto label1;

        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r8 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r7, i1, r1);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = $r8;

        $i4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i5 = $i4 | i0;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = $i5;

        return r0;

     label1:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r3 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r5, i1, r1);

        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i3 = $i2 | i0;

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i3, r3, r2);

        return $r6;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode updateNodeAtIndex(int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] r2, r3, $r5, $r7, $r8;
        java.lang.Object $r4, r6;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i1 = lengthof r2;

        if $i1 != 1 goto label2;

        $r4 = r2[0];

        $z0 = $r4 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z0 != 0 goto label2;

        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i2 = lengthof $r5;

        if $i2 != 1 goto label1;

        $i3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = $i3;

        return r1;

     label1:
        r6 = r2[0];

        goto label3;

     label2:
        r6 = r1;

     label3:
        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i4 = lengthof $r7;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r7, $i4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "copyOf(this, size)");

        r3 = $r8;

        r3[i0] = r6;

        $r9 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        specialinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>($i5, r3);

        return $r9;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableUpdateNodeAtIndex(int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r2, $r12;
        java.lang.Object[] r3, r4, $r5, $r6, $r8, $r10;
        java.lang.Object $r9, r11;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        r3 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i1 = lengthof r3;

        if $i1 != 1 goto label2;

        $r9 = r3[0];

        $z0 = $r9 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z0 != 0 goto label2;

        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i4 = lengthof $r10;

        if $i4 != 1 goto label1;

        $i5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = $i5;

        return r1;

     label1:
        r11 = r3[0];

        goto label3;

     label2:
        r11 = r1;

     label3:
        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        if $r12 != r2 goto label4;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r8[i0] = r11;

        return r0;

     label4:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i2 = lengthof $r5;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "copyOf(this, size)");

        r4 = $r6;

        r4[i0] = r11;

        $r7 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        specialinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i3, r4, r2);

        return $r7;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNodeAtIndex(int, int, java.lang.Object, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r4;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1, r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        r2 := @parameter4: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        r3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object elementAtIndex(int)>(i0);

        if r3 == null goto label1;

        $i4 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        $i3 = i2 + 5;

        $r4 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNode(int,java.lang.Object,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i4, r3, i1, r1, $i3, r2);

        return $r4;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode moveElementToNode(int, int, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r5, $r6;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1;
        java.lang.Object[] r2, $r3, $r4;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i3 = lengthof $r3;

        $r4 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "copyOf(this, size)");

        r2 = $r4;

        $r5 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNodeAtIndex(int,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, i1, r1, i2, null);

        r2[i0] = $r5;

        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>($i4, r2);

        return $r6;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableMoveElementToNode(int, int, java.lang.Object, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r7, $r8, $r10;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r2, $r4;
        java.lang.Object[] r3, $r5, $r6, $r9;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        r2 := @parameter4: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        if $r4 != r2 goto label1;

        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r10 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNodeAtIndex(int,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, i1, r1, i2, r2);

        $r9[i0] = $r10;

        return r0;

     label1:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i3 = lengthof $r5;

        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r5, $i3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "copyOf(this, size)");

        r3 = $r6;

        $r7 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNodeAtIndex(int,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, i1, r1, i2, r2);

        r3[i0] = $r7;

        $r8 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        specialinvoke $r8.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i4, r3, r2);

        return $r8;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNode(int, java.lang.Object, int, java.lang.Object, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r4, $r5, $r6, r12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object r1, r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r3;
        java.lang.Object[] r7, r8, $r9, r10, r11, r13;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        i2 := @parameter4: int;

        r3 := @parameter5: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        if i2 <= 30 goto label1;

        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r7 = newarray (java.lang.Object)[2];

        r7[0] = r1;

        r7[1] = r2;

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r7, r3);

        return $r6;

     label1:
        i9 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i2);

        i3 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i1, i2);

        if i9 == i3 goto label4;

        if i9 >= i3 goto label2;

        r8 = newarray (java.lang.Object)[2];

        r8[0] = r1;

        r8[1] = r2;

        $r9 = r8;

        goto label3;

     label2:
        r10 = newarray (java.lang.Object)[2];

        r10[0] = r2;

        r10[1] = r1;

        $r9 = r10;

     label3:
        r11 = $r9;

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i7 = 1 << i9;

        $i6 = 1 << i3;

        $i8 = $i7 | $i6;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i8, r11, r3);

        return $r5;

     label4:
        $i4 = i2 + 5;

        r12 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNode(int,java.lang.Object,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, r1, i1, r2, $i4, r3);

        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i5 = 1 << i9;

        r13 = newarray (java.lang.Object)[1];

        r13[0] = r12;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i5, r13, r3);

        return $r4;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode removeCellAtIndex(int, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r3;
        int i0, i1, $i2, $i3;
        java.lang.Object[] r1, $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r1 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r2, i0);

        $r3 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i3 = $i2 ^ i1;

        specialinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>($i3, r1);

        return $r3;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemoveCellAtIndex(int, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r5;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r1, $r3;
        java.lang.Object[] r2, $r4, $r6, $r7;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        if $r3 != r1 goto label1;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r6, i0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = $r7;

        $i4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i5 = $i4 ^ i1;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap> = $i5;

        return r0;

     label1:
        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r4, i0);

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i3 = $i2 ^ i1;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i3, r2, r1);

        return $r5;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionRemoveElementAtIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r3;
        int i0;
        java.lang.Object[] r1, $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r1 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r2, i0);

        $r3 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        specialinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>(0, r1);

        return $r3;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionRemoveElementAtIndex(int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r5;
        int i0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r1, $r3;
        java.lang.Object[] r2, $r4, $r6, $r7;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        if $r3 != r1 goto label1;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r6, i0);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = $r7;

        return r0;

     label1:
        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$removeCellAtIndex(java.lang.Object[],int)>($r4, i0);

        $r5 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        specialinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r2, r1);

        return $r5;
    }

    private final boolean collisionContainsElement(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $z0 = staticinvoke <kotlin.collections.ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)>($r2, r1);

        return $z0;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionAdd(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r4;
        java.lang.Object r1;
        java.lang.Object[] r2, $r3;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r2 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r3, 0, r1);

        $r4 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        specialinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>(0, r2);

        return $r4;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionAdd(java.lang.Object, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r6;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r2;
        boolean $z0;
        int $i0, i1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r3, $r4, $r7;
        java.lang.Object[] $r5, $r8, $r9, r10;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        i1 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $i0 = i1 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>($i0);

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $r4 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        if $r3 != $r4 goto label2;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r9 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r8, 0, r1);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = $r9;

        return r0;

     label2:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r10 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: java.lang.Object[] access$addElementAtIndex(java.lang.Object[],int,java.lang.Object)>($r5, 0, r1);

        $r6 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r10, $r7);

        return $r6;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionRemove(java.lang.Object)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r3;
        java.lang.Object r1;
        int i0;
        java.lang.Object[] $r2;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        i0 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)>($r2, r1);

        if i0 == -1 goto label1;

        $r3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionRemoveElementAtIndex(int)>(i0);

        return $r3;

     label1:
        return r0;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionRemove(java.lang.Object, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r5;
        java.lang.Object r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r2;
        int i0, i1, $i2;
        java.lang.Object[] $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r4;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        i0 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)>($r3, r1);

        if i0 == -1 goto label1;

        i1 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $i2 = i1 + -1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>($i2);

        $r4 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r5 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionRemoveElementAtIndex(int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i0, $r4);

        return $r5;

     label1:
        return r0;
    }

    private final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionAddAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, $r21;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r3, $r15;
        java.lang.Object[] r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, r20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, $i18;
        java.lang.Object r5, r6, $r16;
        boolean $z2, $z3, $z4, $z5, $z6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        if r0 != r1 goto label01;

        $r17 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i14 = lengthof $r17;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i14);

        return r0;

     label01:
        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i2 = lengthof $r7;

        $r8 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i1 = lengthof $r8;

        $i3 = $i2 + $i1;

        $r10 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r9, $i3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "copyOf(this, newSize)");

        r4 = $r10;

        $r18 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r11 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        i15 = lengthof $r11;

        i16 = 0;

        i17 = 0;

     label02:
        $i4 = lengthof $r18;

        if i16 >= $i4 goto label10;

        if i17 > i16 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z4);

        r5 = $r18[i16];

        r6 = r5;

        $z3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r6);

        if $z3 != 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        if $z5 == 0 goto label09;

        $i11 = i15 + i17;

        $r16 = $r18[i16];

        r4[$i11] = $r16;

        i17 = i17 + 1;

        $i13 = i15 + i17;

        $i12 = lengthof r4;

        if $i13 > $i12 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z6);

     label09:
        i16 = i16 + 1;

        goto label02;

     label10:
        i0 = i17;

        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i5 = lengthof $r12;

        $i18 = i0 + $i5;

        $i6 = lengthof r4;

        $i7 = $i6 - $i18;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i7);

        $r13 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i8 = lengthof $r13;

        if $i18 != $i8 goto label11;

        return r0;

     label11:
        $r14 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i9 = lengthof $r14;

        if $i18 != $i9 goto label12;

        return r1;

     label12:
        $i10 = lengthof r4;

        if $i18 != $i10 goto label13;

        $r19 = r4;

        goto label14;

     label13:
        $r19 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, $i18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "copyOf(this, newSize)");

     label14:
        r20 = $r19;

        $r15 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r15, r3);

        if $z2 == 0 goto label15;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer> = r20;

        $r21 = r0;

        goto label16;

     label15:
        $r21 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        specialinvoke $r21.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r20, r3);

     label16:
        return $r21;
    }

    private final java.lang.Object mutableCollisionRetainAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, r18, r19;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r3, $r7;
        java.lang.Object[] r4, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14;
        byte b1;
        java.lang.Object r5, r6, $r13, $r17;
        boolean $z2, $z3, $z4, $z5;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        if r0 != r1 goto label01;

        $r14 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i11 = lengthof $r14;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i11);

        return r0;

     label01:
        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r7);

        if $z2 == 0 goto label02;

        $r15 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        goto label03;

     label02:
        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i3 = lengthof $r8;

        $r9 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i2 = lengthof $r9;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $r15 = newarray (java.lang.Object)[$i4];

     label03:
        r4 = $r15;

        $r16 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        b1 = 0;

        i12 = 0;

        i13 = 0;

     label04:
        $i14 = lengthof $r16;

        if i12 >= $i14 goto label10;

        if i13 > i12 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z4);

        r5 = $r16[i12];

        r6 = r5;

        $z3 = specialinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r6);

        if $z3 == 0 goto label09;

        $i8 = b1 + i13;

        $r13 = $r16[i12];

        r4[$i8] = $r13;

        i13 = i13 + 1;

        $i10 = b1 + i13;

        $i9 = lengthof r4;

        if $i10 > $i9 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z5);

     label09:
        i12 = i12 + 1;

        goto label04;

     label10:
        i0 = i13;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(i0);

        if i0 != 0 goto label11;

        $r17 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label16;

     label11:
        if i0 != 1 goto label12;

        $r17 = r4[0];

        goto label16;

     label12:
        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i5 = lengthof $r10;

        if i0 != $i5 goto label13;

        $r17 = r0;

        goto label16;

     label13:
        $r11 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i6 = lengthof $r11;

        if i0 != $i6 goto label14;

        $r17 = r1;

        goto label16;

     label14:
        $i7 = lengthof r4;

        if i0 != $i7 goto label15;

        r18 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r17 = r18;

        specialinvoke r18.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r4, r3);

        goto label16;

     label15:
        r19 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r17 = r19;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "copyOf(this, newSize)");

        specialinvoke r19.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, $r12, r3);

     label16:
        return $r17;
    }

    private final java.lang.Object mutableCollisionRemoveAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, $r14, r18, r19;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership r3, $r7;
        java.lang.Object[] r4, $r8, $r9, $r10, $r11, $r13, $r15, $r16;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13;
        byte b1;
        java.lang.Object r5, r6, $r12, $r17;
        boolean $z2, $z3, $z4, $z5, $z6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership;

        if r0 != r1 goto label01;

        $r13 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i10 = lengthof $r13;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i10);

        $r14 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        return $r14;

     label01:
        $r7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, $r7);

        if $z2 == 0 goto label02;

        $r15 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        goto label03;

     label02:
        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i2 = lengthof $r8;

        $r15 = newarray (java.lang.Object)[$i2];

     label03:
        r4 = $r15;

        $r16 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        b1 = 0;

        i11 = 0;

        i12 = 0;

     label04:
        $i13 = lengthof $r16;

        if i11 >= $i13 goto label12;

        if i12 > i11 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z4);

        r5 = $r16[i11];

        r6 = r5;

        $z3 = specialinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r6);

        if $z3 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        if $z5 == 0 goto label11;

        $i7 = b1 + i12;

        $r12 = $r16[i11];

        r4[$i7] = $r12;

        i12 = i12 + 1;

        $i9 = b1 + i12;

        $i8 = lengthof r4;

        if $i9 > $i8 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z6);

     label11:
        i11 = i11 + 1;

        goto label04;

     label12:
        i0 = i12;

        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i3 = lengthof $r9;

        $i4 = $i3 - i0;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i4);

        if i0 != 0 goto label13;

        $r17 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label17;

     label13:
        if i0 != 1 goto label14;

        $r17 = r4[0];

        goto label17;

     label14:
        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i5 = lengthof $r10;

        if i0 != $i5 goto label15;

        $r17 = r0;

        goto label17;

     label15:
        $i6 = lengthof r4;

        if i0 != $i6 goto label16;

        r18 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r17 = r18;

        specialinvoke r18.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, r4, r3);

        goto label17;

     label16:
        r19 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r17 = r19;

        $r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r4, i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "copyOf(this, newSize)");

        specialinvoke r19.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(0, $r11, r3);

     label17:
        return $r17;
    }

    private final int calculateSize()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, $r3;
        java.lang.Object[] r1, $r4;
        int i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if $i1 != 0 goto label1;

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i3 = lengthof $r4;

        return $i3;

     label1:
        i4 = 0;

        r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        i5 = 0;

        i0 = lengthof r1;

     label2:
        if i5 >= i0 goto label5;

        r2 = r1[i5];

        $i2 = i4;

        $z0 = r2 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z0 == 0 goto label3;

        $r3 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r2;

        $i6 = specialinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int calculateSize()>();

        goto label4;

     label3:
        $i6 = 1;

     label4:
        i4 = $i2 + $i6;

        i5 = i5 + 1;

        goto label2;

     label5:
        return i4;
    }

    private final boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1;
        int i0, $i1, $i2, i3;
        java.lang.Object[] $r2, $r3, $r4;
        java.lang.Object $r5, $r6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i1 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if $i2 == $i1 goto label2;

        return 0;

     label2:
        i3 = 0;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        i0 = lengthof $r2;

     label3:
        if i3 >= i0 goto label5;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r6 = $r3[i3];

        $r4 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r5 = $r4[i3];

        if $r6 == $r5 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return 1;
    }

    public final boolean contains(int, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r2;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Object r1, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r3, $r5;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i1);

        i2 = 1 << $i4;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        i3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i2);

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r4 = $r3[i3];

        $z1 = $r4 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label3;

        r2 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)>(i3);

        if i1 != 30 goto label2;

        $z4 = specialinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean collisionContainsElement(java.lang.Object)>(r1);

        return $z4;

     label2:
        $i5 = i1 + 5;

        $z3 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>(i0, r1, $i5);

        return $z3;

     label3:
        $r5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r6 = $r5[i3];

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r6);

        return $z2;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAddAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, r4, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r25, $r26, r29, r30, r33, r34, $r44;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i25, i26, $i27, i28, i29, i30, $i31, i32, i33, i34, $i35, $i37, $i38, $i39;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r3;
        java.lang.Object r5, r6, $r28, r37, r38;
        boolean z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, z12;
        java.lang.Object[] $r7, $r9, $r10, $r20, $r21, $r27, r31, r35, r39;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r8, $r22, $r23, $r24, $r43;
        kotlin.Unit r32, r36, r40;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter3: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "otherNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "intersectionSizeRef");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mutator");

        if r0 != r1 goto label01;

        $i20 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        $i21 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int calculateSize()>();

        $i22 = $i20 + $i21;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void setCount(int)>($i22);

        return r0;

     label01:
        if i0 <= 30 goto label02;

        $r24 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r25 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionAddAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(r1, r2, $r24);

        return $r25;

     label02:
        $i8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i7 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        i1 = $i8 | $i7;

        $i9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if i1 != $i9 goto label03;

        $r22 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $r23 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r22, $r23);

        if $z9 == 0 goto label03;

        $r26 = r0;

        goto label04;

     label03:
        $r26 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $i10 = staticinvoke <java.lang.Integer: int bitCount(int)>(i1);

        $r7 = newarray (java.lang.Object)[$i10];

        $r8 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke $r26.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i1, $r7, $r8);

     label04:
        r4 = $r26;

        i23 = i1;

        i24 = 0;

     label05:
        if i23 == 0 goto label23;

        i2 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>(i23);

        i3 = i24;

        i4 = i2;

        i5 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i4);

        i6 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i4);

        $r27 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i25 = i3;

        $z6 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i4);

        if $z6 == 0 goto label06;

        $r21 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r28 = $r21[i6];

        goto label22;

     label06:
        $z7 = specialinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i4);

        if $z7 == 0 goto label07;

        $r20 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r28 = $r20[i5];

        goto label22;

     label07:
        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r5 = $r9[i5];

        $r10 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r6 = $r10[i6];

        z2 = r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        z3 = r6 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if z2 == 0 goto label08;

        if z3 == 0 goto label08;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableAddAll$lambda-6>");

        $r16 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableAddAll$lambda-6>");

        $r17 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $r19 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        $r18 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $i19 = i0 + 5;

        $r28 = virtualinvoke $r19.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAddAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r18, $i19, r2, r3);

        goto label22;

     label08:
        if z2 == 0 goto label12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableAddAll$lambda-6>");

        $r14 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        i26 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r15 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        if r6 == null goto label09;

        $i27 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        goto label10;

     label09:
        $i27 = 0;

     label10:
        $i16 = i0 + 5;

        r29 = virtualinvoke $r15.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAdd(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($i27, r6, $i16, r3);

        r30 = r29;

        i28 = i3;

        r31 = $r27;

        $i17 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if $i17 != i26 goto label11;

        i29 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        $i18 = i29 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void setCount(int)>($i18);

     label11:
        r32 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r27 = r31;

        $i25 = i28;

        $r28 = r29;

        goto label22;

     label12:
        if z3 == 0 goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableAddAll$lambda-6>");

        $r12 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        i30 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r13 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        if r5 == null goto label13;

        $i31 = virtualinvoke r5.<java.lang.Object: int hashCode()>();

        goto label14;

     label13:
        $i31 = 0;

     label14:
        $i13 = i0 + 5;

        r33 = virtualinvoke $r13.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAdd(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($i31, r5, $i13, r3);

        r34 = r33;

        i32 = i3;

        r35 = $r27;

        $i14 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if $i14 != i30 goto label15;

        i33 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        $i15 = i33 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void setCount(int)>($i15);

     label15:
        r36 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r27 = r35;

        $i25 = i32;

        $r28 = r33;

        goto label22;

     label16:
        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, r6);

        if $z8 == 0 goto label17;

        r37 = r5;

        r38 = r37;

        i34 = i3;

        r39 = $r27;

        z12 = 0;

        $i35 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: int getCount()>();

        $i12 = $i35 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void setCount(int)>($i12);

        r40 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r27 = r39;

        $i25 = i34;

        $r28 = r37;

        goto label22;

     label17:
        if r5 == null goto label18;

        $i11 = virtualinvoke r5.<java.lang.Object: int hashCode()>();

        $i37 = $i11;

        goto label19;

     label18:
        $i37 = 0;

     label19:
        if r6 == null goto label20;

        $i38 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        goto label21;

     label20:
        $i38 = 0;

     label21:
        $i39 = i0 + 5;

        $r43 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r28 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode makeNode(int,java.lang.Object,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i37, r5, $i38, r6, $i39, $r43);

     label22:
        $r27[$i25] = $r28;

        i24 = i24 + 1;

        i23 = i23 ^ i2;

        goto label05;

     label23:
        $z4 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r4);

        if $z4 == 0 goto label24;

        $r44 = r0;

        goto label26;

     label24:
        $z5 = specialinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r4);

        if $z5 == 0 goto label25;

        $r44 = r1;

        goto label26;

     label25:
        $r44 = r4;

     label26:
        return $r44;
    }

    public final java.lang.Object mutableRetainAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, r4, $r16, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r38, r47, r48, r49;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, $i22, $i23, $i24, i26, $i27, $i28;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r3;
        java.lang.Object r5, r6, r7, r8, r9, $r17, $r34, $r37, $r39, $r40, r44, r45, r46;
        boolean z1, z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z13, $z14, $z16, $z17;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r10, $r11, $r13, $r14, $r20, $r33;
        java.lang.Object[] $r12, $r18, $r21, $r22, $r23, r41, $r42, r43;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion $r15;
        byte b25;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter3: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "otherNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "intersectionSizeRef");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mutator");

        if r0 != r1 goto label01;

        $i14 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int calculateSize()>();

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i14);

        return r0;

     label01:
        if i0 <= 30 goto label02;

        $r33 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r34 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableCollisionRetainAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(r1, r2, $r33);

        return $r34;

     label02:
        $i4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i3 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        i1 = $i4 & $i3;

        if i1 != 0 goto label03;

        $r32 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        return $r32;

     label03:
        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $r11 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, $r11);

        if $z4 == 0 goto label04;

        $i13 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if i1 != $i13 goto label04;

        $r35 = r0;

        goto label05;

     label04:
        r47 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r35 = r47;

        $i5 = staticinvoke <java.lang.Integer: int bitCount(int)>(i1);

        $r12 = newarray (java.lang.Object)[$i5];

        $r13 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r47.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i1, $r12, $r13);

     label05:
        r4 = $r35;

        i15 = 0;

        i16 = i1;

        i17 = 0;

     label06:
        if i16 == 0 goto label19;

        i2 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>(i16);

        i18 = i17;

        i19 = i2;

        i20 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i19);

        i21 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i19);

        $r36 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r0;

        $r21 = $r36.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r5 = $r21[i20];

        $r22 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r6 = $r22[i21];

        z1 = r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        z2 = r6 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if z1 == 0 goto label07;

        if z2 == 0 goto label07;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRetainAll$lambda-9$lambda-8>");

        $r28 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRetainAll$lambda-9$lambda-8>");

        $r29 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $r31 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        $r30 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $i12 = i0 + 5;

        $r37 = virtualinvoke $r31.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableRetainAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r30, $i12, r2, r3);

        goto label17;

     label07:
        if z1 == 0 goto label11;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRetainAll$lambda-9$lambda-8>");

        $r26 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        $r27 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        if r6 == null goto label08;

        $i22 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        goto label09;

     label08:
        $i22 = 0;

     label09:
        $i11 = i0 + 5;

        $z10 = virtualinvoke $r27.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>($i22, r6, $i11);

        if $z10 == 0 goto label10;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r37 = r6;

        goto label17;

     label10:
        $r37 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label17;

     label11:
        if z2 == 0 goto label15;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRetainAll$lambda-9$lambda-8>");

        $r24 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $r25 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        if r5 == null goto label12;

        $i23 = virtualinvoke r5.<java.lang.Object: int hashCode()>();

        goto label13;

     label12:
        $i23 = 0;

     label13:
        $i10 = i0 + 5;

        $z9 = virtualinvoke $r25.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>($i23, r5, $i10);

        if $z9 == 0 goto label14;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r37 = r5;

        goto label17;

     label14:
        $r37 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label17;

     label15:
        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, r6);

        if $z8 == 0 goto label16;

        r7 = r5;

        r8 = r7;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r37 = r7;

        goto label17;

     label16:
        $r37 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

     label17:
        r9 = $r37;

        $r38 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        if r9 == $r38 goto label18;

        i15 = i15 | i19;

     label18:
        $r23 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r23[i18] = r9;

        i17 = i17 + 1;

        i16 = i16 ^ i2;

        goto label06;

     label19:
        $i24 = staticinvoke <java.lang.Integer: int bitCount(int)>(i15);

        if i15 != 0 goto label20;

        $r39 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label35;

     label20:
        if i15 != i1 goto label23;

        $z6 = specialinvoke r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r0);

        if $z6 == 0 goto label21;

        $r39 = r0;

        goto label35;

     label21:
        $z7 = specialinvoke r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r1);

        if $z7 == 0 goto label22;

        $r39 = r1;

        goto label35;

     label22:
        $r39 = r4;

        goto label35;

     label23:
        if $i24 != 1 goto label25;

        if i0 == 0 goto label25;

        $r18 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i9 = virtualinvoke r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i15);

        $r40 = $r18[$i9];

        $z5 = $r40 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z5 == 0 goto label24;

        r48 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r39 = r48;

        r41 = newarray (java.lang.Object)[1];

        r41[0] = $r40;

        $r20 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r48.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i15, r41, $r20);

        goto label35;

     label24:
        $r39 = $r40;

        goto label35;

     label25:
        $r42 = newarray (java.lang.Object)[$i24];

        r43 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        b25 = 0;

        z13 = 0;

        i26 = 0;

        $i27 = 0;

     label26:
        $i28 = lengthof r43;

        if i26 >= $i28 goto label34;

        if $i27 > i26 goto label27;

        $z14 = 1;

        goto label28;

     label27:
        $z14 = 0;

     label28:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z14);

        r44 = r43[i26];

        r45 = r44;

        r46 = r45;

        $r15 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion>;

        $r16 = virtualinvoke $r15.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getEMPTY$runtime_release()>();

        if r46 == $r16 goto label29;

        $z16 = 1;

        goto label30;

     label29:
        $z16 = 0;

     label30:
        if $z16 == 0 goto label33;

        $i6 = b25 + $i27;

        $r17 = r43[i26];

        $r42[$i6] = $r17;

        $i27 = $i27 + 1;

        $i8 = b25 + $i27;

        $i7 = lengthof $r42;

        if $i8 > $i7 goto label31;

        $z17 = 1;

        goto label32;

     label31:
        $z17 = 0;

     label32:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z17);

     label33:
        i26 = i26 + 1;

        goto label26;

     label34:
        r49 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r39 = r49;

        $r14 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r49.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i15, $r42, $r14);

     label35:
        return $r39;
    }

    public final java.lang.Object mutableRemoveAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, int, androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, r4, r7, $r16, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r42, r51, r52, r53;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, $i25, $i26, $i27, i29, $i30, $i31;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r3;
        java.lang.Object r5, r6, r8, $r17, $r30, $r37, $r41, $r43, $r44, r48, r49, r50;
        boolean z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z13, $z15, $z16;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r9, $r10, $r13, $r14, $r20, $r36;
        java.lang.Object[] $r11, $r12, $r18, $r21, $r22, $r23, $r28, $r29, $r31, r45, $r46, r47;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion $r15;
        byte b28;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter;

        r3 := @parameter3: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "otherNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "intersectionSizeRef");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "mutator");

        if r0 != r1 goto label01;

        $i18 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int calculateSize()>();

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>($i18);

        $r38 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        return $r38;

     label01:
        if i0 <= 30 goto label02;

        $r36 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r37 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableCollisionRemoveAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(r1, r2, $r36);

        return $r37;

     label02:
        $i5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i4 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        i1 = $i5 & $i4;

        if i1 != 0 goto label03;

        return r0;

     label03:
        $r9 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $r10 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z4 == 0 goto label04;

        $r39 = r0;

        goto label05;

     label04:
        r51 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r39 = r51;

        $i7 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $r11 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i6 = lengthof $r11;

        $r12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r11, $i6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "copyOf(this, size)");

        $r13 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r51.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>($i7, $r12, $r13);

     label05:
        r4 = $r39;

        z10 = 0;

        i19 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        i20 = i1;

        i21 = 0;

     label06:
        if i20 == 0 goto label20;

        i2 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>(i20);

        i22 = i2;

        i23 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i22);

        i24 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i22);

        $r40 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r0;

        $r21 = $r40.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r5 = $r21[i23];

        $r22 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r6 = $r22[i24];

        z2 = r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        z3 = r6 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if z2 == 0 goto label07;

        if z3 == 0 goto label07;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRemoveAll$lambda-11$lambda-10>");

        $r32 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRemoveAll$lambda-11$lambda-10>");

        $r33 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $r35 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        $r34 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $i17 = i0 + 5;

        $r41 = virtualinvoke $r35.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object mutableRemoveAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($r34, $i17, r2, r3);

        goto label18;

     label07:
        if z2 == 0 goto label12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r5, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRemoveAll$lambda-11$lambda-10>");

        $r26 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        i3 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $r27 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r5;

        if r6 == null goto label08;

        $i25 = virtualinvoke r6.<java.lang.Object: int hashCode()>();

        goto label09;

     label08:
        $i25 = 0;

     label09:
        $i14 = i0 + 5;

        r7 = virtualinvoke $r27.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemove(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>($i25, r6, $i14, r3);

        $i15 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        if i3 == $i15 goto label11;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r28 = r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i16 = lengthof $r28;

        if $i16 != 1 goto label10;

        $r29 = r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r30 = $r29[0];

        $z9 = $r30 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z9 != 0 goto label10;

        $r31 = r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r41 = $r31[0];

        goto label18;

     label10:
        $r41 = r7;

        goto label18;

     label11:
        $r41 = r5;

        goto label18;

     label12:
        if z3 == 0 goto label16;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r6, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.mutableRemoveAll$lambda-11$lambda-10>");

        $r24 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        $r25 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r6;

        if r5 == null goto label13;

        $i26 = virtualinvoke r5.<java.lang.Object: int hashCode()>();

        goto label14;

     label13:
        $i26 = 0;

     label14:
        $i13 = i0 + 5;

        $z8 = virtualinvoke $r25.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>($i26, r5, $i13);

        if $z8 == 0 goto label15;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r41 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label18;

     label15:
        $r41 = r5;

        goto label18;

     label16:
        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, r6);

        if $z7 == 0 goto label17;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.internal.DeltaCounter: void plusAssign(int)>(1);

        $r41 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label18;

     label17:
        $r41 = r5;

     label18:
        r8 = $r41;

        $r42 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        if r8 != $r42 goto label19;

        i19 = i19 ^ i22;

     label19:
        $r23 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r23[i23] = r8;

        i21 = i21 + 1;

        i20 = i20 ^ i2;

        goto label06;

     label20:
        $i27 = staticinvoke <java.lang.Integer: int bitCount(int)>(i19);

        if i19 != 0 goto label21;

        $r43 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        goto label35;

     label21:
        $i8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if i19 != $i8 goto label23;

        $z6 = specialinvoke r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean elementsIdentityEquals(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(r0);

        if $z6 == 0 goto label22;

        $r43 = r0;

        goto label35;

     label22:
        $r43 = r4;

        goto label35;

     label23:
        if $i27 != 1 goto label25;

        if i0 == 0 goto label25;

        $r18 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i12 = virtualinvoke r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i19);

        $r44 = $r18[$i12];

        $z5 = $r44 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z5 == 0 goto label24;

        r52 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r43 = r52;

        r45 = newarray (java.lang.Object)[1];

        r45[0] = $r44;

        $r20 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r52.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i19, r45, $r20);

        goto label35;

     label24:
        $r43 = $r44;

        goto label35;

     label25:
        $r46 = newarray (java.lang.Object)[$i27];

        r47 = r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        b28 = 0;

        i29 = 0;

        $i30 = 0;

     label26:
        $i31 = lengthof r47;

        if i29 >= $i31 goto label34;

        if $i30 > i29 goto label27;

        $z13 = 1;

        goto label28;

     label27:
        $z13 = 0;

     label28:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z13);

        r48 = r47[i29];

        r49 = r48;

        r50 = r49;

        $r15 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion>;

        $r16 = virtualinvoke $r15.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getEMPTY$runtime_release()>();

        if r50 == $r16 goto label29;

        $z15 = 1;

        goto label30;

     label29:
        $z15 = 0;

     label30:
        if $z15 == 0 goto label33;

        $i9 = b28 + $i30;

        $r17 = r47[i29];

        $r46[$i9] = $r17;

        $i30 = $i30 + 1;

        $i11 = b28 + $i30;

        $i10 = lengthof $r46;

        if $i11 > $i10 goto label31;

        $z16 = 1;

        goto label32;

     label31:
        $z16 = 0;

     label32:
        staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.internal.CommonFunctionsKt: void assert(boolean)>($z16);

     label33:
        i29 = i29 + 1;

        goto label26;

     label34:
        r53 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r43 = r53;

        $r14 = virtualinvoke r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        specialinvoke r53.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[],androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i19, $r46, $r14);

     label35:
        return $r43;
    }

    public final boolean containsAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r1, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, i12, i13, i14, $i15;
        java.lang.Object r2, r3, r14, r15;
        boolean z2, z3, $z4, $z5, $z6, $z7, $z9;
        java.lang.Object[] $r4, $r5, $r12, $r13;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "otherNode");

        if r0 != r1 goto label01;

        return 1;

     label01:
        if i0 <= 30 goto label06;

        $r13 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $i9 = 0;

        i10 = lengthof $r13;

     label02:
        if $i9 >= i10 goto label04;

        r14 = $r13[$i9];

        r15 = r14;

        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $z7 = staticinvoke <kotlin.collections.ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)>($r12, r15);

        if $z7 != 0 goto label03;

        $z9 = 0;

        goto label05;

     label03:
        $i9 = $i9 + 1;

        goto label02;

     label04:
        $z9 = 1;

     label05:
        return $z9;

     label06:
        $i5 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i4 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        $i11 = $i5 & $i4;

        $i6 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int bitmap>;

        if $i11 == $i6 goto label07;

        return 0;

     label07:
        i12 = $i11;

        i13 = 0;

     label08:
        if i12 == 0 goto label15;

        i14 = staticinvoke <java.lang.Integer: int lowestOneBit(int)>(i12);

        i1 = i14;

        i2 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i1);

        i3 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i1);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r2 = $r4[i2];

        $r5 = r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        r3 = $r5[i3];

        z2 = r2 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        z3 = r3 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if z2 == 0 goto label09;

        if z3 == 0 goto label09;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.containsAll$lambda-13>");

        $r8 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r3, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.containsAll$lambda-13>");

        $r9 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r3;

        $r11 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r2;

        $r10 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r3;

        $i8 = i0 + 5;

        $z6 = virtualinvoke $r11.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean containsAll(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,int)>($r10, $i8);

        if $z6 != 0 goto label14;

        return 0;

     label09:
        if z2 == 0 goto label12;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>(r2, "null cannot be cast to non-null type androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode<E of androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode.containsAll$lambda-13>");

        $r6 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r2;

        $r7 = (androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode) r2;

        if r3 == null goto label10;

        $i15 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

        goto label11;

     label10:
        $i15 = 0;

     label11:
        $i7 = i0 + 5;

        $z5 = virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean contains(int,java.lang.Object,int)>($i15, r3, $i7);

        if $z5 != 0 goto label14;

        return 0;

     label12:
        if z3 == 0 goto label13;

        return 0;

     label13:
        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z4 != 0 goto label14;

        return 0;

     label14:
        i13 = i13 + 1;

        i12 = i12 ^ i14;

        goto label08;

     label15:
        return 1;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode add(int, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r2, r3, $r8, $r9, $r10, $r11;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Object r1, $r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r4, $r6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i1);

        i2 = 1 << $i4;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i2);

        if $z0 == 0 goto label1;

        $r10 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode addElementAt(int,java.lang.Object)>(i2, r1);

        return $r10;

     label1:
        i3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i2);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r5 = $r4[i3];

        $z1 = $r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label5;

        r2 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)>(i3);

        if i1 != 30 goto label2;

        $r11 = specialinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionAdd(java.lang.Object)>(r1);

        goto label3;

     label2:
        $i5 = i1 + 5;

        $r11 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode add(int,java.lang.Object,int)>(i0, r1, $i5);

     label3:
        r3 = $r11;

        if r2 != r3 goto label4;

        return r0;

     label4:
        $r9 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode updateNodeAtIndex(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(i3, r3);

        return $r9;

     label5:
        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = $r6[i3];

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z2 == 0 goto label6;

        return r0;

     label6:
        $r8 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode moveElementToNode(int,int,java.lang.Object,int)>(i3, i0, r1, i1);

        return $r8;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAdd(int, java.lang.Object, int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r3, $r9, $r11, $r13, r14, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.lang.Object r1, $r5, $r7;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r2;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r4, $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r8, $r10, $r12;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mutator");

        $i3 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i1);

        i2 = 1 << $i3;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i2);

        if $z0 == 0 goto label1;

        i7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $i6 = i7 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>($i6);

        $r12 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r13 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAddElementAt(int,java.lang.Object,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i2, r1, $r12);

        return $r13;

     label1:
        i8 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i2);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r5 = $r4[i8];

        $z1 = $r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label5;

        r14 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)>(i8);

        if i1 != 30 goto label2;

        $r15 = specialinvoke r14.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionAdd(java.lang.Object,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>(r1, r2);

        goto label3;

     label2:
        $i5 = i1 + 5;

        $r15 = virtualinvoke r14.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableAdd(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>(i0, r1, $i5, r2);

     label3:
        r3 = $r15;

        if r14 != r3 goto label4;

        return r0;

     label4:
        $r10 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r11 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableUpdateNodeAtIndex(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i8, r3, $r10);

        return $r11;

     label5:
        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = $r6[i8];

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z2 == 0 goto label6;

        return r0;

     label6:
        i9 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $i4 = i9 + 1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>($i4);

        $r8 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r9 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableMoveElementToNode(int,int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i8, i0, r1, i1, $r8);

        return $r9;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode remove(int, java.lang.Object, int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r2, r3, $r8, $r9, $r10;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.Object r1, $r5, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r4, $r6;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i1);

        i2 = 1 << $i4;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        i3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i2);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r5 = $r4[i3];

        $z1 = $r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label5;

        r2 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)>(i3);

        if i1 != 30 goto label2;

        $r10 = specialinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode collisionRemove(java.lang.Object)>(r1);

        goto label3;

     label2:
        $i5 = i1 + 5;

        $r10 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode remove(int,java.lang.Object,int)>(i0, r1, $i5);

     label3:
        r3 = $r10;

        if r2 != r3 goto label4;

        return r0;

     label4:
        $r9 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode updateNodeAtIndex(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode)>(i3, r3);

        return $r9;

     label5:
        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = $r6[i3];

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z2 == 0 goto label6;

        $r8 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode removeCellAtIndex(int,int)>(i3, i2);

        return $r8;

     label6:
        return r0;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemove(int, java.lang.Object, int, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode r0, r3, $r9, $r13, r14, $r15;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7;
        java.lang.Object r1, $r5, $r7;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder r2;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r4, $r6;
        androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership $r8, $r10, $r11, $r12;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mutator");

        $i4 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNodeKt: int indexSegment(int,int)>(i0, i1);

        i2 = 1 << $i4;

        $z0 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: boolean hasNoCellAt(int)>(i2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        i3 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: int indexOfCellAt$runtime_release(int)>(i2);

        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r5 = $r4[i3];

        $z1 = $r5 instanceof androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        if $z1 == 0 goto label6;

        r14 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode nodeAtIndex(int)>(i3);

        if i1 != 30 goto label2;

        $r15 = specialinvoke r14.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableCollisionRemove(java.lang.Object,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>(r1, r2);

        goto label3;

     label2:
        $i6 = i1 + 5;

        $r15 = virtualinvoke r14.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemove(int,java.lang.Object,int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder)>(i0, r1, $i6, r2);

     label3:
        r3 = $r15;

        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership ownedBy>;

        $r11 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        if $r10 == $r11 goto label4;

        if r14 == r3 goto label5;

     label4:
        $r12 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r13 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableUpdateNodeAtIndex(int,androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i3, r3, $r12);

        return $r13;

     label5:
        return r0;

     label6:
        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: java.lang.Object[] buffer>;

        $r7 = $r6[i3];

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z2 == 0 goto label7;

        i7 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: int size()>();

        $i5 = i7 + -1;

        virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: void setSize(int)>($i5);

        $r8 = virtualinvoke r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.PersistentHashSetBuilder: androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership getOwnership$runtime_release()>();

        $r9 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode mutableRemoveCellAtIndex(int,int,androidx.compose.runtime.external.kotlinx.collections.immutable.internal.MutabilityOwnership)>(i3, i2, $r8);

        return $r9;

     label7:
        return r0;
    }

    public static final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode access$getEMPTY$cp()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r0;

        $r0 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion $r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r1;
        java.lang.Object[] $r2;

        $r0 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion;

        specialinvoke $r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion Companion> = $r0;

        $r1 = new androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: void <init>(int,java.lang.Object[])>(0, $r2);

        <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode EMPTY> = $r1;

        return;
    }

androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion
    private void <init>()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion r0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode getEMPTY$runtime_release()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion;

        $r1 = staticinvoke <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode access$getEMPTY$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableSet.TrieNode$Companion: void <init>()>();

        return;
    }

