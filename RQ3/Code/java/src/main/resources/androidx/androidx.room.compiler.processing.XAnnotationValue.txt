androidx.room.compiler.processing.XAnnotationValue
<androidx.room.compiler.processing.XAnnotationValue: java.lang.String getName()>
<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>
<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XType getValueType()>
<androidx.room.compiler.processing.XAnnotationValue: boolean hasTypeValue()>
    public androidx.room.compiler.processing.XType asType()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.room.compiler.processing.XType");

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasTypeListValue()>
    public java.util.List asTypeList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.XType $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XType asType()>();

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasAnnotationValue()>
    public androidx.room.compiler.processing.XAnnotation asAnnotation()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        androidx.room.compiler.processing.XAnnotation $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.room.compiler.processing.XAnnotation");

        $r2 = (androidx.room.compiler.processing.XAnnotation) $r1;

        return $r2;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasAnnotationListValue()>
    public java.util.List asAnnotationList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.XAnnotation $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XAnnotation asAnnotation()>();

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasEnumValue()>
    public androidx.room.compiler.processing.XEnumEntry asEnum()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        androidx.room.compiler.processing.XEnumEntry $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type androidx.room.compiler.processing.XEnumEntry");

        $r2 = (androidx.room.compiler.processing.XEnumEntry) $r1;

        return $r2;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasEnumListValue()>
    public java.util.List asEnumList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        androidx.room.compiler.processing.XEnumEntry $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: androidx.room.compiler.processing.XEnumEntry asEnum()>();

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasBooleanValue()>
    public boolean asBoolean()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Boolean");

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasBooleanListValue()>
    public java.util.List asBooleanList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3, $z4;
        java.lang.Boolean $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $z4 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: boolean asBoolean()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasStringValue()>
    public java.lang.String asString()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.String");

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasStringListValue()>
    public java.util.List asStringList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        java.lang.String $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: java.lang.String asString()>();

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasIntValue()>
    public int asInt()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Int");

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasIntListValue()>
    public java.util.List asIntList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0, $i1;
        boolean $z3;
        java.lang.Integer $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $i1 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: int asInt()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasLongValue()>
    public long asLong()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Long $r2;
        long $l0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Long");

        $r2 = (java.lang.Long) $r1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasLongListValue()>
    public java.util.List asLongList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        long $l1;
        java.lang.Long $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $l1 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: long asLong()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasShortValue()>
    public short asShort()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Short $r2;
        short $s0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Short");

        $r2 = (java.lang.Short) $r1;

        $s0 = virtualinvoke $r2.<java.lang.Short: short shortValue()>();

        return $s0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasShortListValue()>
    public java.util.List asShortList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        short $s1;
        java.lang.Short $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $s1 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: short asShort()>();

        $r10 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasFloatValue()>
    public float asFloat()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Float $r2;
        float $f0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Float");

        $r2 = (java.lang.Float) $r1;

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        return $f0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasFloatListValue()>
    public java.util.List asFloatList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4, $r10;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        java.lang.Float $r11, $r12;
        float $f0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $r10 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r10, "null cannot be cast to non-null type kotlin.Float");

        $r11 = (java.lang.Float) $r10;

        $f0 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasDoubleValue()>
    public double asDouble()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Double $r2;
        double $d0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Double");

        $r2 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasDoubleListValue()>
    public java.util.List asDoubleList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        double $d0;
        java.lang.Double $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $d0 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: double asDouble()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasByteValue()>
    public byte asByte()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Byte $r2;
        byte $b0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Byte");

        $r2 = (java.lang.Byte) $r1;

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasByteListValue()>
    public java.util.List asByteList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        byte $b1;
        java.lang.Byte $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $b1 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: byte asByte()>();

        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasCharValue()>
    public char asChar()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.lang.Character $r2;
        char $c0;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Char");

        $r2 = (java.lang.Character) $r1;

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        return $c0;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasCharListValue()>
    public java.util.List asCharList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0, r5;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9;
        java.util.ArrayList $r8;
        int $i0;
        boolean $z3;
        char $c1;
        java.lang.Character $r10;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r7 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.util.List asAnnotationValueList()>();

        $r1 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r8;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.room.compiler.processing.XAnnotationValue) r4;

        r6 = r2;

        $c1 = interfaceinvoke r5.<androidx.room.compiler.processing.XAnnotationValue: char asChar()>();

        $r10 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r9 = (java.util.List) r2;

        return $r9;
    }

<androidx.room.compiler.processing.XAnnotationValue: boolean hasListValue()>
    public java.util.List asAnnotationValueList()
    {
        androidx.room.compiler.processing.XAnnotationValue r0;
        java.lang.Object $r1;
        java.util.List $r2;

        r0 := @this: androidx.room.compiler.processing.XAnnotationValue;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XAnnotationValue: java.lang.Object getValue()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.collections.List<androidx.room.compiler.processing.XAnnotationValue>");

        $r2 = (java.util.List) $r1;

        return $r2;
    }

